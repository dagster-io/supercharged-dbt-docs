1:HL["/supercharged-dbt-docs/supercharged/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css",{"as":"style"}]
0:["3_N3LAWgtmWGg2et9V1N1",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.rpt_people_kpis","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.rpt_people_kpis\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/supercharged-dbt-docs/supercharged/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_5f725a","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.rpt_people_kpis","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.rpt_people_kpis\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.rpt_people_kpis","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ColumnDetails","async":false}
12:I{"id":9941,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ReferenceListClient","async":false}
23:I{"id":4431,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:T1b29,{{ config(
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('dim_dates','dim_date'),
    ('rpt','bamboohr_rpt_headcount_aggregation'),
    ('rpt_headcount_vs_planned','rpt_headcount_vs_planned'),
    ('rpt_team_members_out_of_comp_band','rpt_team_members_out_of_comp_band'),
    ('rpt_osat','rpt_osat'),
    ('rpt_recruiting_kpis','rpt_recruiting_kpis'),
    ('rpt_cost_per_hire', 'rpt_cost_per_hire'),
    ('rpt_promotion','bamboohr_promotion_rate')

]) }}
 
, basic_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      headcount_end,
      hire_count,
      SUM(hire_count) OVER (PARTITION BY fiscal_year) AS hires_fiscal_year,
      SUM(hire_count)  OVER (ORDER BY month_date
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_hires,
      SUM(hire_count) OVER (PARTITION BY fiscal_year ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) hires_fiscal_ytd,
      retention,
      voluntary_separation_rate,
      involuntary_separation_rate,
      location_factor,
      new_hire_location_factor_rolling_3_month,
      discretionary_bonus/headcount_end AS discretionary_bonus_rate,
      rolling_12_month_promotions,
      rolling_12_month_promotions_excluding_sdr,
      rolling_12_month_promotion_increase,
      rolling_12_month_promotion_increase_excluding_sdr      
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'kpi_breakout'

), diversity_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount, NULL))                        AS female_headcount,
      SUM(IFF(eeoc_value = 'Female', percent_of_hires, NULL))                            AS female_hires,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_manager, NULL))                AS female_managers,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_leaders, NULL))                AS female_leaders,
      
      SUM(IFF(eeoc_field_name = 'region_modified'
              AND eeoc_value != 'NORAM', percent_of_headcount, NULL))                    AS non_noram_headcount,

      SUM(IFF(eeoc_field_name = 'urg_group'
                AND eeoc_value = TRUE, percent_of_hires, NULL))                          AS percent_of_urg_hires,
      SUM(IFF(eeoc_field_name = 'ethnicity'
              AND eeoc_value = 'Black or African American', percent_of_headcount, NULL)) AS percent_of_headcount_black_or_african_american    
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'eeoc_breakout'
    GROUP BY 1,2,3,4

), people_group_metrics AS (

    SELECT
      month_date,
      SUM(IFF(department = 'Recruiting', new_hire_location_factor_rolling_3_month, NULL ))       AS recruiting_new_hire_location_factor,
      SUM(IFF(department = 'People Success', new_hire_location_factor_rolling_3_month, NULL ))   AS people_success_new_hire_location_factor
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'department_breakout'
      AND eeoc_field_name = 'no_eeoc'
    GROUP BY 1

), greenhouse_metrics AS (

    SELECT *
    FROM rpt_recruiting_kpis

), final AS (

    SELECT
      basic_metrics.*,
      rpt_promotion.promotion_rate                                      AS company_promotion_rate_excluding_sdr,
      sdr_promotion.promotion_rate                                      AS sdr_promotion_rate,
      rpt_headcount_vs_planned.actual_headcount_vs_planned_headcount,
      rpt_cost_per_hire.rolling_3_month_cost_per_hire,
      rpt_team_members_out_of_comp_band.percent_of_employees_outside_of_band,

      people_group_metrics.recruiting_new_hire_location_factor,
      people_group_metrics.people_success_new_hire_location_factor,

      diversity_metrics.female_headcount,
      diversity_metrics.female_hires,
      diversity_metrics.female_managers,
      diversity_metrics.female_leaders,
      diversity_metrics.non_noram_headcount,
      diversity_metrics.percent_of_headcount_black_or_african_american,
      diversity_metrics.percent_of_urg_hires,
  
      rpt_osat.rolling_3_month_osat,
      rpt_osat.rolling_3_month_respondents/basic_metrics.rolling_3_month_hires AS rolling_3_month_osat_response_rate,
      rpt_osat.rolling_3_month_buddy_score,
      rpt_osat.rolling_3_month_buddy_respondents,

      rpt_recruiting_kpis.offer_acceptance_rate,
      rpt_recruiting_kpis.percent_sourced_hires,
      rpt_recruiting_kpis.percent_outbound_hires,
      rpt_recruiting_kpis.time_to_offer_median,
      rpt_recruiting_kpis.isat,
      rpt_headcount_vs_planned.cumulative_hires_vs_plan

    --% urg
    FROM basic_metrics
    LEFT JOIN diversity_metrics
      ON basic_metrics.month_date = diversity_metrics.month_date
    LEFT JOIN people_group_metrics
      ON basic_metrics.month_date = people_group_metrics.month_date
    LEFT JOIN rpt_osat
      ON basic_metrics.month_date = rpt_osat.completed_month
    LEFT JOIN rpt_headcount_vs_planned
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_headcount_vs_planned.month_date)
      AND rpt_headcount_vs_planned.breakout_type = 'all_company_breakout' 
    LEFT JOIN rpt_recruiting_kpis
      ON basic_metrics.month_date = rpt_recruiting_kpis.month_date
    LEFT JOIN rpt_cost_per_hire
      ON basic_metrics.month_date = rpt_cost_per_hire.hire_month
    LEFT JOIN rpt_promotion
      ON basic_metrics.month_date = rpt_promotion.month_date  
      AND rpt_promotion.field_name = 'company_breakout'
      AND rpt_promotion.field_value = 'Company - Excluding SDR'
    LEFT JOIN rpt_promotion AS sdr_promotion
      ON basic_metrics.month_date = sdr_promotion.month_date  
      AND sdr_promotion.field_name = 'department_grouping_breakout'
      AND sdr_promotion.field_value = 'Sales Development'  
    LEFT JOIN rpt_team_members_out_of_comp_band
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_team_members_out_of_comp_band.date_actual)  
      AND rpt_team_members_out_of_comp_band.breakout_type = 'company_breakout'
)

SELECT 
  IFF(month_date = DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS current_reporting_month,
  IFF(month_date = DATEADD(month, -2, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS previous_reporting_month,
  IFF(month_date = DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS last_year_reporting_month,
  DENSE_RANK() OVER (ORDER BY fiscal_quarter_name DESC) AS rank_fiscal_quarter_desc,
  final.*
FROM final
WHERE month_date BETWEEN DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE()))
                     AND DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE()))11:T1c0d,



WITH dim_dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), rpt AS (

    SELECT * 
    FROM "PROD".legacy.bamboohr_rpt_headcount_aggregation

), rpt_headcount_vs_planned AS (

    SELECT * 
    FROM "PROD".legacy.rpt_headcount_vs_planned

), rpt_team_members_out_of_comp_band AS (

    SELECT * 
    FROM "PROD".legacy.rpt_team_members_out_of_comp_band

), rpt_osat AS (

    SELECT * 
    FROM "PROD".legacy.rpt_osat

), rpt_recruiting_kpis AS (

    SELECT * 
    FROM "PROD".legacy.rpt_recruiting_kpis

), rpt_cost_per_hire AS (

    SELECT * 
    FROM "PROD".legacy.rpt_cost_per_hire

), rpt_promotion AS (

    SELECT * 
    FROM "PROD".legacy.bamboohr_promotion_rate

)
 
, basic_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      headcount_end,
      hire_count,
      SUM(hire_count) OVER (PARTITION BY fiscal_year) AS hires_fiscal_year,
      SUM(hire_count)  OVER (ORDER BY month_date
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_hires,
      SUM(hire_count) OVER (PARTITION BY fiscal_year ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) hires_fiscal_ytd,
      retention,
      voluntary_separation_rate,
      involuntary_separation_rate,
      location_factor,
      new_hire_location_factor_rolling_3_month,
      discretionary_bonus/headcount_end AS discretionary_bonus_rate,
      rolling_12_month_promotions,
      rolling_12_month_promotions_excluding_sdr,
      rolling_12_month_promotion_increase,
      rolling_12_month_promotion_increase_excluding_sdr      
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'kpi_breakout'

), diversity_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount, NULL))                        AS female_headcount,
      SUM(IFF(eeoc_value = 'Female', percent_of_hires, NULL))                            AS female_hires,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_manager, NULL))                AS female_managers,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_leaders, NULL))                AS female_leaders,
      
      SUM(IFF(eeoc_field_name = 'region_modified'
              AND eeoc_value != 'NORAM', percent_of_headcount, NULL))                    AS non_noram_headcount,

      SUM(IFF(eeoc_field_name = 'urg_group'
                AND eeoc_value = TRUE, percent_of_hires, NULL))                          AS percent_of_urg_hires,
      SUM(IFF(eeoc_field_name = 'ethnicity'
              AND eeoc_value = 'Black or African American', percent_of_headcount, NULL)) AS percent_of_headcount_black_or_african_american    
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'eeoc_breakout'
    GROUP BY 1,2,3,4

), people_group_metrics AS (

    SELECT
      month_date,
      SUM(IFF(department = 'Recruiting', new_hire_location_factor_rolling_3_month, NULL ))       AS recruiting_new_hire_location_factor,
      SUM(IFF(department = 'People Success', new_hire_location_factor_rolling_3_month, NULL ))   AS people_success_new_hire_location_factor
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'department_breakout'
      AND eeoc_field_name = 'no_eeoc'
    GROUP BY 1

), greenhouse_metrics AS (

    SELECT *
    FROM rpt_recruiting_kpis

), final AS (

    SELECT
      basic_metrics.*,
      rpt_promotion.promotion_rate                                      AS company_promotion_rate_excluding_sdr,
      sdr_promotion.promotion_rate                                      AS sdr_promotion_rate,
      rpt_headcount_vs_planned.actual_headcount_vs_planned_headcount,
      rpt_cost_per_hire.rolling_3_month_cost_per_hire,
      rpt_team_members_out_of_comp_band.percent_of_employees_outside_of_band,

      people_group_metrics.recruiting_new_hire_location_factor,
      people_group_metrics.people_success_new_hire_location_factor,

      diversity_metrics.female_headcount,
      diversity_metrics.female_hires,
      diversity_metrics.female_managers,
      diversity_metrics.female_leaders,
      diversity_metrics.non_noram_headcount,
      diversity_metrics.percent_of_headcount_black_or_african_american,
      diversity_metrics.percent_of_urg_hires,
  
      rpt_osat.rolling_3_month_osat,
      rpt_osat.rolling_3_month_respondents/basic_metrics.rolling_3_month_hires AS rolling_3_month_osat_response_rate,
      rpt_osat.rolling_3_month_buddy_score,
      rpt_osat.rolling_3_month_buddy_respondents,

      rpt_recruiting_kpis.offer_acceptance_rate,
      rpt_recruiting_kpis.percent_sourced_hires,
      rpt_recruiting_kpis.percent_outbound_hires,
      rpt_recruiting_kpis.time_to_offer_median,
      rpt_recruiting_kpis.isat,
      rpt_headcount_vs_planned.cumulative_hires_vs_plan

    --% urg
    FROM basic_metrics
    LEFT JOIN diversity_metrics
      ON basic_metrics.month_date = diversity_metrics.month_date
    LEFT JOIN people_group_metrics
      ON basic_metrics.month_date = people_group_metrics.month_date
    LEFT JOIN rpt_osat
      ON basic_metrics.month_date = rpt_osat.completed_month
    LEFT JOIN rpt_headcount_vs_planned
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_headcount_vs_planned.month_date)
      AND rpt_headcount_vs_planned.breakout_type = 'all_company_breakout' 
    LEFT JOIN rpt_recruiting_kpis
      ON basic_metrics.month_date = rpt_recruiting_kpis.month_date
    LEFT JOIN rpt_cost_per_hire
      ON basic_metrics.month_date = rpt_cost_per_hire.hire_month
    LEFT JOIN rpt_promotion
      ON basic_metrics.month_date = rpt_promotion.month_date  
      AND rpt_promotion.field_name = 'company_breakout'
      AND rpt_promotion.field_value = 'Company - Excluding SDR'
    LEFT JOIN rpt_promotion AS sdr_promotion
      ON basic_metrics.month_date = sdr_promotion.month_date  
      AND sdr_promotion.field_name = 'department_grouping_breakout'
      AND sdr_promotion.field_value = 'Sales Development'  
    LEFT JOIN rpt_team_members_out_of_comp_band
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_team_members_out_of_comp_band.date_actual)  
      AND rpt_team_members_out_of_comp_band.breakout_type = 'company_breakout'
)

SELECT 
  IFF(month_date = DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS current_reporting_month,
  IFF(month_date = DATEADD(month, -2, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS previous_reporting_month,
  IFF(month_date = DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS last_year_reporting_month,
  DENSE_RANK() OVER (ORDER BY fiscal_quarter_name DESC) AS rank_fiscal_quarter_desc,
  final.*
FROM final
WHERE month_date BETWEEN DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE()))
                     AND DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE()))13:T7bf,{{ config(
    tags=["mnpi_exception"]
) }}

WITH recruiting_expenses AS (
  
    SELECT 
      accounting_period,
      SUM(IFF(department_name = 'Recruiting', actual_amount, 0))            AS recruiting_department,
      SUM(IFF(account_number = 6055, actual_amount, 0))                     AS recruiting_fees,
      SUM(IFF(department_name = 'Recruiting' 
              AND account_number != 6055 
              AND account_number != 6075, actual_amount, 0))                AS recruiting_department_minus_overlap,
      SUM(IFF(LOWER(transaction_lines_memo) = 'referral bonus'
              OR account_number = 6075, actual_amount, 0))                  AS referral_fees,
      recruiting_department_minus_overlap + recruiting_fees + referral_fees AS total_expenses
    FROM {{ ref ('netsuite_actuals_income_cogs_opex') }}
    GROUP BY 1
  
), hires AS (
  
    SELECT
      DATE_TRUNC(month, hire_date)                                          AS hire_month,
      COUNT(DISTINCT(employee_id))                                          AS hires
    FROM {{ ref ('employee_directory_analysis') }}
    WHERE is_hire_date = TRUE
    GROUP BY 1

), joined AS (
  
    SELECT
      hire_month,
      hires,
      recruiting_department,
      recruiting_fees,
      recruiting_department_minus_overlap,
      referral_fees,
      total_expenses,
      total_expenses / hires AS cost_per_hire,
      SUM(total_expenses) OVER (ORDER BY hire_month 
                                ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)   AS rolling_3_month_total_expenses,
      SUM(hires) OVER (ORDER BY hire_month 
                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)            AS rolling_3_month_hires,
      rolling_3_month_total_expenses / rolling_3_month_hires                AS rolling_3_month_cost_per_hire
    FROM hires 
    INNER JOIN recruiting_expenses
        ON hires.hire_month = recruiting_expenses.accounting_period

)

SELECT *
FROM joined
WHERE hire_month > '2019-01-01'14:T7a4,

WITH recruiting_expenses AS (
  
    SELECT 
      accounting_period,
      SUM(IFF(department_name = 'Recruiting', actual_amount, 0))            AS recruiting_department,
      SUM(IFF(account_number = 6055, actual_amount, 0))                     AS recruiting_fees,
      SUM(IFF(department_name = 'Recruiting' 
              AND account_number != 6055 
              AND account_number != 6075, actual_amount, 0))                AS recruiting_department_minus_overlap,
      SUM(IFF(LOWER(transaction_lines_memo) = 'referral bonus'
              OR account_number = 6075, actual_amount, 0))                  AS referral_fees,
      recruiting_department_minus_overlap + recruiting_fees + referral_fees AS total_expenses
    FROM "PROD".restricted_safe_legacy.netsuite_actuals_income_cogs_opex
    GROUP BY 1
  
), hires AS (
  
    SELECT
      DATE_TRUNC(month, hire_date)                                          AS hire_month,
      COUNT(DISTINCT(employee_id))                                          AS hires
    FROM "PROD".legacy.employee_directory_analysis
    WHERE is_hire_date = TRUE
    GROUP BY 1

), joined AS (
  
    SELECT
      hire_month,
      hires,
      recruiting_department,
      recruiting_fees,
      recruiting_department_minus_overlap,
      referral_fees,
      total_expenses,
      total_expenses / hires AS cost_per_hire,
      SUM(total_expenses) OVER (ORDER BY hire_month 
                                ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)   AS rolling_3_month_total_expenses,
      SUM(hires) OVER (ORDER BY hire_month 
                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)            AS rolling_3_month_hires,
      rolling_3_month_total_expenses / rolling_3_month_hires                AS rolling_3_month_cost_per_hire
    FROM hires 
    INNER JOIN recruiting_expenses
        ON hires.hire_month = recruiting_expenses.accounting_period

)

SELECT *
FROM joined
WHERE hire_month > '2019-01-01'15:T1590,WITH promotions AS (

    SELECT *
    FROM {{ ref('bamboohr_promotions_xf') }}

), bamboohr_base AS (

    SELECT
      DATEADD(month, -11, date_actual)                           AS rolling_start_month,
      date_actual                                                AS rolling_end_month,
      field_name,
      field_value
    FROM {{ ref('bamboohr_base_mapping') }}
  
), headcount_end AS (

    SELECT 
      month_date, 
      CASE WHEN breakout_type = 'kpi_breakout'
            THEN 'company_breakout'
           WHEN breakout_type = 'department_breakout'
            THEN 'department_grouping_breakout'
           WHEN breakout_type ='division_breakout'
            THEN 'division_grouping_breakout' 
           ELSE NULL END                                                        AS breakout_type, 
      CASE WHEN breakout_type = 'kpi_breakout' 
             THEN 'company_breakout'
           WHEN breakout_type = 'division_breakout' 
             THEN {{ bamboohr_division_grouping(division='division') }}
           ELSE {{ bamboohr_department_grouping(department='department') }} END AS division_department, 
      SUM(headcount_end)                                                        AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                          AS headcount_end_excluding_sdr,
      SUM(rolling_12_month_headcount)                                           AS rolling_12_month_headcount,
      SUM(rolling_12_month_headcount_excluding_sdr)                             AS rolling_12_month_headcount_excluding_sdr
    FROM {{ ref('bamboohr_rpt_headcount_aggregation') }}  
    WHERE breakout_type IN ('department_breakout', 'kpi_breakout', 'division_breakout')
        AND eeoc_field_name = 'no_eeoc'
    GROUP BY 1,2,3    
  

), joined AS (

    SELECT 
      bamboohr_base.*, 
      promotions.*, 
      headcount_end,
      rolling_12_month_headcount
    FROM bamboohr_base
    LEFT JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
      AND IFF(field_name = 'division_grouping_breakout', promotions.division_grouping, promotions.department_grouping) = bamboohr_base.field_value
     LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name !='company_breakout'

    UNION ALL

    SELECT 
      bamboohr_base.rolling_start_month,
      bamboohr_base.rolling_end_month,
      'division_grouping_breakout' AS field_name,
      'Marketing - Excluding SDR' AS field_value,
      promotions.*, 
      headcount_end_excluding_sdr,
      rolling_12_month_headcount_excluding_sdr 
    FROM bamboohr_base
    INNER JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
      AND IFF(field_name = 'division_grouping_breakout', promotions.division_grouping, promotions.department_grouping) = bamboohr_base.field_value
    LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name = 'division_grouping_breakout'
      AND promotions.division_grouping = 'Marketing'
      AND promotions.department != 'Sales Development'

    UNION ALL

    SELECT
      bamboohr_base.*,
      promotions.*,
      headcount_end,
      rolling_12_month_headcount
    FROM bamboohr_base
    LEFT JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
    LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name = 'company_breakout'

    UNION ALL

    SELECT 
      bamboohr_base.rolling_start_month,
      bamboohr_base.rolling_end_month,
      'company_breakout' AS field_name,
      'Company - Excluding SDR'  AS field_value,
      promotions.*,
      headcount_end_excluding_sdr,
      rolling_12_month_headcount_excluding_sdr
    FROM bamboohr_base
    LEFT JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
    LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name = 'company_breakout'
      AND promotions.department != 'Sales Development'

), final AS (

    SELECT
      rolling_end_month                                         AS month_date,
      field_name, 
      field_value,
      headcount_end, 
      rolling_12_month_headcount,
      COUNT(employee_id)                                        AS total_promotions,
        total_promotions/NULLIFZERO(rolling_12_month_headcount) AS promotion_rate,
      IFF(total_promotions <= 3, NULL, 
            AVG(percent_change_in_comp))                        AS average_percent_change_in_comp,
      IFF(total_promotions <= 3, NULL, 
            MEDIAN(percent_change_in_comp))                     AS median_percent_change_change_in_comp
    FROM joined
    GROUP BY 1,2,3,4,5

)

SELECT *
FROM final16:T1a93,WITH promotions AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_promotions_xf

), bamboohr_base AS (

    SELECT
      DATEADD(month, -11, date_actual)                           AS rolling_start_month,
      date_actual                                                AS rolling_end_month,
      field_name,
      field_value
    FROM "PREP".sensitive.bamboohr_base_mapping
  
), headcount_end AS (

    SELECT 
      month_date, 
      CASE WHEN breakout_type = 'kpi_breakout'
            THEN 'company_breakout'
           WHEN breakout_type = 'department_breakout'
            THEN 'department_grouping_breakout'
           WHEN breakout_type ='division_breakout'
            THEN 'division_grouping_breakout' 
           ELSE NULL END                                                        AS breakout_type, 
      CASE WHEN breakout_type = 'kpi_breakout' 
             THEN 'company_breakout'
           WHEN breakout_type = 'division_breakout' 
             THEN CASE WHEN division IN ('Engineering', 'Meltano') THEN 'Engineering/Meltano'
           WHEN division IN ('CEO', 'People Group') THEN 'People Group/CEO'
           ELSE division END
           ELSE CASE WHEN department IN ('Awareness', 'Communications', 'Community Relations', 'Owned Events')
           THEN 'Awareness, Communications, Community Relations, Owned Events'
         WHEN department IN ('Brand & Digital Design', 'Content Marketing', 'Inbound Marketing')
           THEN 'Brand & Digital Design, Content Marketing, Inbound Marketing'
         WHEN department IN ('Campaigns', 'Digital Marketing', 'Partner Marketing')
           THEN 'Campaigns, Digital Marketing, Partner Marketing'
         WHEN department IN ('Consulting Delivery', 'Customer Success', 'Education Delivery', 'Practice Management')
          THEN 'Consulting Delivery, Customer Success, Education Delivery, Practice Management'
         WHEN department IN ('Field Marketing', 'Marketing Ops')
          THEN 'Field Marketing, Marketing Ops'
         WHEN department IN ('People Success', 'CEO')
          THEN 'People Success, CEO'
         WHEN department IN ('Product Management', 'Product Strategy')
           THEN 'Product Management, Product Strategy'
         WHEN department in ('Field Ops - Child','Field Operations')
             THEN 'Field Ops - Child, Field Operations'
         ELSE department 
         END END AS division_department, 
      SUM(headcount_end)                                                        AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                          AS headcount_end_excluding_sdr,
      SUM(rolling_12_month_headcount)                                           AS rolling_12_month_headcount,
      SUM(rolling_12_month_headcount_excluding_sdr)                             AS rolling_12_month_headcount_excluding_sdr
    FROM "PROD".legacy.bamboohr_rpt_headcount_aggregation  
    WHERE breakout_type IN ('department_breakout', 'kpi_breakout', 'division_breakout')
        AND eeoc_field_name = 'no_eeoc'
    GROUP BY 1,2,3    
  

), joined AS (

    SELECT 
      bamboohr_base.*, 
      promotions.*, 
      headcount_end,
      rolling_12_month_headcount
    FROM bamboohr_base
    LEFT JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
      AND IFF(field_name = 'division_grouping_breakout', promotions.division_grouping, promotions.department_grouping) = bamboohr_base.field_value
     LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name !='company_breakout'

    UNION ALL

    SELECT 
      bamboohr_base.rolling_start_month,
      bamboohr_base.rolling_end_month,
      'division_grouping_breakout' AS field_name,
      'Marketing - Excluding SDR' AS field_value,
      promotions.*, 
      headcount_end_excluding_sdr,
      rolling_12_month_headcount_excluding_sdr 
    FROM bamboohr_base
    INNER JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
      AND IFF(field_name = 'division_grouping_breakout', promotions.division_grouping, promotions.department_grouping) = bamboohr_base.field_value
    LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name = 'division_grouping_breakout'
      AND promotions.division_grouping = 'Marketing'
      AND promotions.department != 'Sales Development'

    UNION ALL

    SELECT
      bamboohr_base.*,
      promotions.*,
      headcount_end,
      rolling_12_month_headcount
    FROM bamboohr_base
    LEFT JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
    LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name = 'company_breakout'

    UNION ALL

    SELECT 
      bamboohr_base.rolling_start_month,
      bamboohr_base.rolling_end_month,
      'company_breakout' AS field_name,
      'Company - Excluding SDR'  AS field_value,
      promotions.*,
      headcount_end_excluding_sdr,
      rolling_12_month_headcount_excluding_sdr
    FROM bamboohr_base
    LEFT JOIN promotions
      ON promotions.promotion_month BETWEEN rolling_start_month AND rolling_end_month
    LEFT JOIN headcount_end
      ON bamboohr_base.rolling_end_month = headcount_end.month_date
      AND bamboohr_base.field_name = headcount_end.breakout_type
      AND bamboohr_base.field_value = headcount_end.division_department
    WHERE bamboohr_base.field_name = 'company_breakout'
      AND promotions.department != 'Sales Development'

), final AS (

    SELECT
      rolling_end_month                                         AS month_date,
      field_name, 
      field_value,
      headcount_end, 
      rolling_12_month_headcount,
      COUNT(employee_id)                                        AS total_promotions,
        total_promotions/NULLIFZERO(rolling_12_month_headcount) AS promotion_rate,
      IFF(total_promotions <= 3, NULL, 
            AVG(percent_change_in_comp))                        AS average_percent_change_in_comp,
      IFF(total_promotions <= 3, NULL, 
            MEDIAN(percent_change_in_comp))                     AS median_percent_change_change_in_comp
    FROM joined
    GROUP BY 1,2,3,4,5

)

SELECT *
FROM final17:T618,WITH sheetload_osat AS (

    SELECT *
    FROM {{ ref ('sheetload_osat') }}

), intermediate AS (

    SELECT 
      DATE_TRUNC(month, completed_date) AS completed_month,
      SUM(satisfaction_score)           AS osat_score,
      SUM(buddy_experience_score)       AS buddy_experience_score,
      COUNT(*)                          AS total_responses,
      COUNT(IFF(buddy_experience_score IS NOT NULL,1,0)) AS total_buddy_score_Responses
    FROM sheetload_osat
    GROUP BY 1
   
), rolling_3_month AS (

  SELECT *,
    SUM(osat_score) OVER (ORDER BY completed_month
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS sum_of_rolling_3_month_score,
    SUM(total_responses)  OVER (ORDER BY completed_month
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_respondents,
    SUM(buddy_experience_score) OVER (ORDER BY completed_month
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS sum_of_rolling_3_month_buddy_score,
    SUM(total_buddy_score_Responses)  OVER (ORDER BY completed_month 
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_buddy_respondents
  FROM intermediate
  
), final AS (

    SELECT *,
      sum_of_rolling_3_month_score / rolling_3_month_respondents                        AS rolling_3_month_osat,
      sum_of_rolling_3_month_buddy_score/ rolling_3_month_buddy_respondents             AS rolling_3_month_buddy_score
    FROM rolling_3_month

)

SELECT *
FROM final18:T618,WITH sheetload_osat AS (

    SELECT *
    FROM "PROD".legacy.sheetload_osat

), intermediate AS (

    SELECT 
      DATE_TRUNC(month, completed_date) AS completed_month,
      SUM(satisfaction_score)           AS osat_score,
      SUM(buddy_experience_score)       AS buddy_experience_score,
      COUNT(*)                          AS total_responses,
      COUNT(IFF(buddy_experience_score IS NOT NULL,1,0)) AS total_buddy_score_Responses
    FROM sheetload_osat
    GROUP BY 1
   
), rolling_3_month AS (

  SELECT *,
    SUM(osat_score) OVER (ORDER BY completed_month
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS sum_of_rolling_3_month_score,
    SUM(total_responses)  OVER (ORDER BY completed_month
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_respondents,
    SUM(buddy_experience_score) OVER (ORDER BY completed_month
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS sum_of_rolling_3_month_buddy_score,
    SUM(total_buddy_score_Responses)  OVER (ORDER BY completed_month 
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_buddy_respondents
  FROM intermediate
  
), final AS (

    SELECT *,
      sum_of_rolling_3_month_score / rolling_3_month_respondents                        AS rolling_3_month_osat,
      sum_of_rolling_3_month_buddy_score/ rolling_3_month_buddy_respondents             AS rolling_3_month_buddy_score
    FROM rolling_3_month

)

SELECT *
FROM final19:T16e0,{% set lines_to_repeat =
          "DATE_TRUNC(month,hire_date_mod)                                                           AS hire_month,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type != 'Transfer',1,0))                    AS new_hire,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type = 'Transfer',1,0))                     AS new_position_filled_internally,
          SUM(IFF(job_opening_type IN 
                    ('Current Team Member','Internal Transfer'),1,0))                                AS transfers,
          SUM(IFF(job_opening_type IN ('Backfill'),1,0))                                             AS backfill,
          SUM(IFF(job_opening_type IS NULL,1,0))                                                     AS unidentified_job_opening_type,
          COUNT(*)                                                                                   AS total_greenhouse_reqs_filled
        FROM greenhouse_hire_type
        WHERE hired_in_bamboohr= TRUE
        GROUP BY 1,2,3,4" %}

WITH dim_date AS (

    SELECT DISTINCT
      fiscal_year,
      last_day_of_month AS month_date
    FROM {{ ref ('dim_date') }}

), headcount AS (

    SELECT
      month_date,
      CASE WHEN breakout_type = 'kpi_breakout'
            THEN 'all_company_breakout'
           WHEN breakout_type = 'department_breakout'
            THEN 'department_division_breakout'
           ELSE breakout_type END                                            AS breakout_type,
      IFF(breakout_type = 'kpi_breakout','all_company_breakout', department) AS department,
      IFF(breakout_type = 'kpi_breakout','all_company_breakout', division)   AS division,
      COALESCE(headcount_end,0)                                              AS headcount_actual,
      COALESCE(hire_count,0)                                                 AS hires_actual
    FROM {{ ref ('bamboohr_rpt_headcount_aggregation') }}
    WHERE breakout_type IN ('kpi_breakout','department_breakout','division_breakout')
      AND eeoc_field_name = 'no_eeoc'

), hire_plan AS (

    SELECT *,
      IFF(DATE_TRUNC(month, month_date) = DATE_TRUNC(month, DATEADD(month, -1, CURRENT_DATE())),1,0) AS last_month
    FROM {{ ref ('hire_replan_xf') }}

), department_name_changes AS (

    SELECT
      TRIM(old_department_name) AS old_department_name,
      TRIM(new_department_name) AS new_department_name,
      change_effective_date
    FROM {{ ref ('department_name_changes') }}

), greenhouse_hire_type AS (

    SELECT *
    FROM {{ ref ('greenhouse_hires') }}

), hire_type_aggregated AS (

    SELECT
      'department_division_breakout'                                AS breakout_type,
      division,
      department,
      {{lines_to_repeat}}

    UNION ALL

    SELECT
      'division_breakout'                                           AS breakout_type,
      division,
      'division_breakout'                                           AS department,
      {{lines_to_repeat}}

    UNION ALL

    SELECT
      'all_company_breakout'                                        AS breakout_type,
      'all_company_breakout'                                        AS division,
      'all_company_breakout'                                        AS department,
      {{lines_to_repeat}}

), joined AS (

    SELECT
      dim_date.fiscal_year,
      hire_plan.month_date,
      hire_plan.breakout_type,
      COALESCE(TRIM(department_name_changes.new_department_name), hire_plan.department) AS department,
      hire_plan.division,
      hire_plan.planned_headcount,
      hire_plan.planned_hires,
      COALESCE(headcount.headcount_actual,0)                                       AS headcount_actual,
      COALESCE(headcount.hires_actual,0)                                           AS hires_actual,
      IFF(hire_plan.planned_headcount = 0, NULL,
        ROUND((headcount.headcount_actual/hire_plan.planned_headcount),4))         AS actual_headcount_vs_planned_headcount,

      new_hire,
      transfers,
      backfill,
      unidentified_job_opening_type,
      total_greenhouse_reqs_filled,
      new_hire + backfill                                                         AS total_hires_greenhouse
    FROM dim_date
    LEFT JOIN hire_plan
      ON dim_date.month_date = hire_plan.month_date
    LEFT JOIN department_name_changes
      ON department_name_changes.old_department_name = hire_plan.department
    LEFT JOIN headcount
      ON headcount.breakout_type = hire_plan.breakout_type
      AND headcount.department = COALESCE(department_name_changes.new_department_name, hire_plan.department)
      AND headcount.division = hire_plan.division
      AND headcount.month_date = DATE_TRUNC(month, hire_plan.month_date)
    LEFT JOIN hire_type_aggregated
      ON hire_type_aggregated.breakout_type = hire_plan.breakout_type
      AND hire_type_aggregated.department = COALESCE(department_name_changes.new_department_name, hire_plan.department)
      AND hire_type_aggregated.division = hire_plan.division
      AND hire_type_aggregated.hire_month = DATE_TRUNC(month, hire_plan.month_date)

), final AS (

    SELECT *,
      SUM(planned_hires) OVER
            (PARTITION BY fiscal_year, breakout_type, division, department
            ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   AS cumulative_planned_hires,
      SUM(hires_actual) OVER
            (PARTITION BY fiscal_year, breakout_type, division, department
            ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   AS cumulative_hires_actual,
        IFF(cumulative_planned_hires = 0, NULL,
             ROUND((cumulative_hires_actual/cumulative_planned_hires),2))           AS cumulative_hires_vs_plan
    FROM joined
    WHERE month_date BETWEEN DATEADD(month, -24, CURRENT_DATE()) AND DATEADD(month, 12, CURRENT_DATE())
)

SELECT *
FROM final1a:T1e38,

WITH dim_date AS (

    SELECT DISTINCT
      fiscal_year,
      last_day_of_month AS month_date
    FROM "PROD".common.dim_date

), headcount AS (

    SELECT
      month_date,
      CASE WHEN breakout_type = 'kpi_breakout'
            THEN 'all_company_breakout'
           WHEN breakout_type = 'department_breakout'
            THEN 'department_division_breakout'
           ELSE breakout_type END                                            AS breakout_type,
      IFF(breakout_type = 'kpi_breakout','all_company_breakout', department) AS department,
      IFF(breakout_type = 'kpi_breakout','all_company_breakout', division)   AS division,
      COALESCE(headcount_end,0)                                              AS headcount_actual,
      COALESCE(hire_count,0)                                                 AS hires_actual
    FROM "PROD".legacy.bamboohr_rpt_headcount_aggregation
    WHERE breakout_type IN ('kpi_breakout','department_breakout','division_breakout')
      AND eeoc_field_name = 'no_eeoc'

), hire_plan AS (

    SELECT *,
      IFF(DATE_TRUNC(month, month_date) = DATE_TRUNC(month, DATEADD(month, -1, CURRENT_DATE())),1,0) AS last_month
    FROM "PROD".legacy.hire_replan_xf

), department_name_changes AS (

    SELECT
      TRIM(old_department_name) AS old_department_name,
      TRIM(new_department_name) AS new_department_name,
      change_effective_date
    FROM "PROD".legacy.department_name_changes

), greenhouse_hire_type AS (

    SELECT *
    FROM "PREP".sensitive.greenhouse_hires

), hire_type_aggregated AS (

    SELECT
      'department_division_breakout'                                AS breakout_type,
      division,
      department,
      DATE_TRUNC(month,hire_date_mod)                                                           AS hire_month,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type != 'Transfer',1,0))                    AS new_hire,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type = 'Transfer',1,0))                     AS new_position_filled_internally,
          SUM(IFF(job_opening_type IN 
                    ('Current Team Member','Internal Transfer'),1,0))                                AS transfers,
          SUM(IFF(job_opening_type IN ('Backfill'),1,0))                                             AS backfill,
          SUM(IFF(job_opening_type IS NULL,1,0))                                                     AS unidentified_job_opening_type,
          COUNT(*)                                                                                   AS total_greenhouse_reqs_filled
        FROM greenhouse_hire_type
        WHERE hired_in_bamboohr= TRUE
        GROUP BY 1,2,3,4

    UNION ALL

    SELECT
      'division_breakout'                                           AS breakout_type,
      division,
      'division_breakout'                                           AS department,
      DATE_TRUNC(month,hire_date_mod)                                                           AS hire_month,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type != 'Transfer',1,0))                    AS new_hire,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type = 'Transfer',1,0))                     AS new_position_filled_internally,
          SUM(IFF(job_opening_type IN 
                    ('Current Team Member','Internal Transfer'),1,0))                                AS transfers,
          SUM(IFF(job_opening_type IN ('Backfill'),1,0))                                             AS backfill,
          SUM(IFF(job_opening_type IS NULL,1,0))                                                     AS unidentified_job_opening_type,
          COUNT(*)                                                                                   AS total_greenhouse_reqs_filled
        FROM greenhouse_hire_type
        WHERE hired_in_bamboohr= TRUE
        GROUP BY 1,2,3,4

    UNION ALL

    SELECT
      'all_company_breakout'                                        AS breakout_type,
      'all_company_breakout'                                        AS division,
      'all_company_breakout'                                        AS department,
      DATE_TRUNC(month,hire_date_mod)                                                           AS hire_month,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type != 'Transfer',1,0))                    AS new_hire,
          SUM(IFF(job_opening_type = 'New Hire' AND hire_type = 'Transfer',1,0))                     AS new_position_filled_internally,
          SUM(IFF(job_opening_type IN 
                    ('Current Team Member','Internal Transfer'),1,0))                                AS transfers,
          SUM(IFF(job_opening_type IN ('Backfill'),1,0))                                             AS backfill,
          SUM(IFF(job_opening_type IS NULL,1,0))                                                     AS unidentified_job_opening_type,
          COUNT(*)                                                                                   AS total_greenhouse_reqs_filled
        FROM greenhouse_hire_type
        WHERE hired_in_bamboohr= TRUE
        GROUP BY 1,2,3,4

), joined AS (

    SELECT
      dim_date.fiscal_year,
      hire_plan.month_date,
      hire_plan.breakout_type,
      COALESCE(TRIM(department_name_changes.new_department_name), hire_plan.department) AS department,
      hire_plan.division,
      hire_plan.planned_headcount,
      hire_plan.planned_hires,
      COALESCE(headcount.headcount_actual,0)                                       AS headcount_actual,
      COALESCE(headcount.hires_actual,0)                                           AS hires_actual,
      IFF(hire_plan.planned_headcount = 0, NULL,
        ROUND((headcount.headcount_actual/hire_plan.planned_headcount),4))         AS actual_headcount_vs_planned_headcount,

      new_hire,
      transfers,
      backfill,
      unidentified_job_opening_type,
      total_greenhouse_reqs_filled,
      new_hire + backfill                                                         AS total_hires_greenhouse
    FROM dim_date
    LEFT JOIN hire_plan
      ON dim_date.month_date = hire_plan.month_date
    LEFT JOIN department_name_changes
      ON department_name_changes.old_department_name = hire_plan.department
    LEFT JOIN headcount
      ON headcount.breakout_type = hire_plan.breakout_type
      AND headcount.department = COALESCE(department_name_changes.new_department_name, hire_plan.department)
      AND headcount.division = hire_plan.division
      AND headcount.month_date = DATE_TRUNC(month, hire_plan.month_date)
    LEFT JOIN hire_type_aggregated
      ON hire_type_aggregated.breakout_type = hire_plan.breakout_type
      AND hire_type_aggregated.department = COALESCE(department_name_changes.new_department_name, hire_plan.department)
      AND hire_type_aggregated.division = hire_plan.division
      AND hire_type_aggregated.hire_month = DATE_TRUNC(month, hire_plan.month_date)

), final AS (

    SELECT *,
      SUM(planned_hires) OVER
            (PARTITION BY fiscal_year, breakout_type, division, department
            ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   AS cumulative_planned_hires,
      SUM(hires_actual) OVER
            (PARTITION BY fiscal_year, breakout_type, division, department
            ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   AS cumulative_hires_actual,
        IFF(cumulative_planned_hires = 0, NULL,
             ROUND((cumulative_hires_actual/cumulative_planned_hires),2))           AS cumulative_hires_vs_plan
    FROM joined
    WHERE month_date BETWEEN DATEADD(month, -24, CURRENT_DATE()) AND DATEADD(month, 12, CURRENT_DATE())
)

SELECT *
FROM final1b:Tbd6,{% set lines_to_repeat %}
     date_actual,
     SUM(weighted_deviated_from_comp_calc) AS sum_weighted_deviated_from_comp_calc,
     COUNT(DISTINCT(employee_number))      AS current_employees,
     sum_weighted_deviated_from_comp_calc/
        current_employees                  AS percent_of_employees_outside_of_band
    FROM joined
    WHERE date_actual < CURRENT_DATE
    GROUP BY 1,2,3,4
{% endset %}

WITH employee_directory_intermediate AS (

   SELECT *
   FROM {{ref('employee_directory_intermediate')}}

 ), comp_band AS (

   SELECT *
   FROM {{ ref('comp_band_deviation_snapshots') }}

 ), date_details AS (

    SELECT DISTINCT last_day_of_month
    FROM {{ ref('dim_date') }}
    WHERE (last_day_of_month < '2020-05-20' --last day we captured before transitioning to new report
      OR last_day_of_month>='2020-10-31') -- started capturing again from new report
      AND last_day_of_month<= CURRENT_DATE()

), joined AS (

    SELECT 
      employee_directory_intermediate.*,
      comp_band.deviation_from_comp_calc,
      comp_band.original_value,
      CASE 
        WHEN LOWER(original_value) = 'exec'           THEN 0
        WHEN deviation_from_comp_calc <= 0.0001       THEN 0
        WHEN deviation_from_comp_calc <= 0.05         THEN 0.25
        WHEN deviation_from_comp_calc <= 0.1          THEN 0.5
        WHEN deviation_from_comp_calc <= 0.15         THEN 0.75
        WHEN deviation_from_comp_calc <= 1            THEN 1
        ELSE NULL END                                      AS  weighted_deviated_from_comp_calc
    FROM employee_directory_intermediate
    LEFT JOIN comp_band
        ON employee_directory_intermediate.employee_number = comp_band.employee_number
        AND valid_from <= date_actual
        AND COALESCE(valid_to::date, {{max_date_in_bamboo_analyses()}}) > date_actual

), department_aggregated AS (

    SELECT
      'department_breakout'                 AS breakout_type,
      division_mapped_current               AS division,
      department,
      {{lines_to_repeat}}

), division_aggregated AS (

    SELECT
      'division_breakout'                   AS breakout_type,
      division_mapped_current               AS division,
      'division_breakout'                   AS department,
      {{lines_to_repeat}}

), company_aggregated AS (

    SELECT
      'company_breakout'                    AS breakout_type,
      'Company - Overall'                   AS division,
      'company_breakout'                    AS department,
      {{lines_to_repeat}}

), unioned AS (

    SELECT * 
    FROM department_aggregated
    UNION ALL

    SELECT *
    FROM division_aggregated

    UNION ALL

    SELECT * 
    FROM company_aggregated

), final AS (

    SELECT
      {{ dbt_utils.surrogate_key(['date_actual', 'breakout_type', 'division', 'department']) }} AS unique_key,
      unioned.*
    FROM unioned
    INNER JOIN date_details
      ON unioned.date_actual = date_details.last_day_of_month
    WHERE date_actual > '2019-01-01' 

)

SELECT *
FROM final
ORDER BY 11c:Tf16,

WITH employee_directory_intermediate AS (

   SELECT *
   FROM "PREP".sensitive.employee_directory_intermediate

 ), comp_band AS (

   SELECT *
   FROM "PREP".sensitive.comp_band_deviation_snapshots

 ), date_details AS (

    SELECT DISTINCT last_day_of_month
    FROM "PROD".common.dim_date
    WHERE (last_day_of_month < '2020-05-20' --last day we captured before transitioning to new report
      OR last_day_of_month>='2020-10-31') -- started capturing again from new report
      AND last_day_of_month<= CURRENT_DATE()

), joined AS (

    SELECT 
      employee_directory_intermediate.*,
      comp_band.deviation_from_comp_calc,
      comp_band.original_value,
      CASE 
        WHEN LOWER(original_value) = 'exec'           THEN 0
        WHEN deviation_from_comp_calc <= 0.0001       THEN 0
        WHEN deviation_from_comp_calc <= 0.05         THEN 0.25
        WHEN deviation_from_comp_calc <= 0.1          THEN 0.5
        WHEN deviation_from_comp_calc <= 0.15         THEN 0.75
        WHEN deviation_from_comp_calc <= 1            THEN 1
        ELSE NULL END                                      AS  weighted_deviated_from_comp_calc
    FROM employee_directory_intermediate
    LEFT JOIN comp_band
        ON employee_directory_intermediate.employee_number = comp_band.employee_number
        AND valid_from <= date_actual
        AND COALESCE(valid_to::date, date_trunc('week', dateadd(week, 3, CURRENT_DATE))) > date_actual

), department_aggregated AS (

    SELECT
      'department_breakout'                 AS breakout_type,
      division_mapped_current               AS division,
      department,
      
     date_actual,
     SUM(weighted_deviated_from_comp_calc) AS sum_weighted_deviated_from_comp_calc,
     COUNT(DISTINCT(employee_number))      AS current_employees,
     sum_weighted_deviated_from_comp_calc/
        current_employees                  AS percent_of_employees_outside_of_band
    FROM joined
    WHERE date_actual < CURRENT_DATE
    GROUP BY 1,2,3,4


), division_aggregated AS (

    SELECT
      'division_breakout'                   AS breakout_type,
      division_mapped_current               AS division,
      'division_breakout'                   AS department,
      
     date_actual,
     SUM(weighted_deviated_from_comp_calc) AS sum_weighted_deviated_from_comp_calc,
     COUNT(DISTINCT(employee_number))      AS current_employees,
     sum_weighted_deviated_from_comp_calc/
        current_employees                  AS percent_of_employees_outside_of_band
    FROM joined
    WHERE date_actual < CURRENT_DATE
    GROUP BY 1,2,3,4


), company_aggregated AS (

    SELECT
      'company_breakout'                    AS breakout_type,
      'Company - Overall'                   AS division,
      'company_breakout'                    AS department,
      
     date_actual,
     SUM(weighted_deviated_from_comp_calc) AS sum_weighted_deviated_from_comp_calc,
     COUNT(DISTINCT(employee_number))      AS current_employees,
     sum_weighted_deviated_from_comp_calc/
        current_employees                  AS percent_of_employees_outside_of_band
    FROM joined
    WHERE date_actual < CURRENT_DATE
    GROUP BY 1,2,3,4


), unioned AS (

    SELECT * 
    FROM department_aggregated
    UNION ALL

    SELECT *
    FROM division_aggregated

    UNION ALL

    SELECT * 
    FROM company_aggregated

), final AS (

    SELECT
      md5(cast(coalesce(cast(date_actual as 
    varchar
), '') || '-' || coalesce(cast(breakout_type as 
    varchar
), '') || '-' || coalesce(cast(division as 
    varchar
), '') || '-' || coalesce(cast(department as 
    varchar
), '') as 
    varchar
)) AS unique_key,
      unioned.*
    FROM unioned
    INNER JOIN date_details
      ON unioned.date_actual = date_details.last_day_of_month
    WHERE date_actual > '2019-01-01' 

)

SELECT *
FROM final
ORDER BY 11d:T81e,

WITH dates AS (

  SELECT
    "DATE_DAY",
  "DATE_ACTUAL",
  "DAY_NAME",
  "MONTH_ACTUAL",
  "YEAR_ACTUAL",
  "QUARTER_ACTUAL",
  "DAY_OF_WEEK",
  "FIRST_DAY_OF_WEEK",
  "WEEK_OF_YEAR",
  "DAY_OF_MONTH",
  "DAY_OF_QUARTER",
  "DAY_OF_YEAR",
  "FISCAL_YEAR",
  "FISCAL_QUARTER",
  "DAY_OF_FISCAL_QUARTER",
  "DAY_OF_FISCAL_YEAR",
  "MONTH_NAME",
  "FIRST_DAY_OF_MONTH",
  "LAST_DAY_OF_MONTH",
  "FIRST_DAY_OF_YEAR",
  "LAST_DAY_OF_YEAR",
  "FIRST_DAY_OF_QUARTER",
  "LAST_DAY_OF_QUARTER",
  "FIRST_DAY_OF_FISCAL_QUARTER",
  "LAST_DAY_OF_FISCAL_QUARTER",
  "FIRST_DAY_OF_FISCAL_YEAR",
  "LAST_DAY_OF_FISCAL_YEAR",
  "WEEK_OF_FISCAL_YEAR",
  "MONTH_OF_FISCAL_YEAR",
  "LAST_DAY_OF_WEEK",
  "QUARTER_NAME",
  "FISCAL_QUARTER_NAME",
  "FISCAL_QUARTER_NAME_FY",
  "FISCAL_QUARTER_NUMBER_ABSOLUTE",
  "FISCAL_MONTH_NAME",
  "FISCAL_MONTH_NAME_FY",
  "HOLIDAY_DESC",
  "IS_HOLIDAY",
  "LAST_MONTH_OF_FISCAL_QUARTER",
  "IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER",
  "LAST_MONTH_OF_FISCAL_YEAR",
  "IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR",
  "SNAPSHOT_DATE_FPA",
  "SNAPSHOT_DATE_BILLINGS",
  "DAYS_IN_MONTH_COUNT",
  "WEEK_OF_MONTH_NORMALISED",
  "DAY_OF_FISCAL_QUARTER_NORMALISED",
  "WEEK_OF_FISCAL_QUARTER_NORMALISED",
  "DAY_OF_FISCAL_YEAR_NORMALISED",
  "IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK",
  "DAYS_UNTIL_LAST_DAY_OF_MONTH",
  "CURRENT_DATE_ACTUAL",
  "CURRENT_FISCAL_YEAR",
  "CURRENT_FIRST_DAY_OF_FISCAL_YEAR",
  "CURRENT_FISCAL_QUARTER_NAME_FY",
  "CURRENT_FIRST_DAY_OF_MONTH"
  FROM "PROD".common_prep.prep_date

), final AS (

  SELECT
    

  TO_NUMBER(TO_CHAR(date_actual::DATE,'YYYYMMDD'),'99999999')

                                AS date_id,
    *
  FROM dates

)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@pempey'::VARCHAR       AS updated_by,
      '2020-06-01'::DATE        AS model_created_date,
      '2023-01-09'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1e:T124c,WITH recruiting_data AS (
  
    SELECT *
    FROM {{ ref ('greenhouse_stage_analysis') }}

), isat AS (

    SELECT
      submitted_at,
      AVG(isat_score) AS isat
    FROM {{ ref ('rpt_interviewee_satisfaction_isat') }}
    GROUP BY 1

), metrics AS (

    SELECT 
      month_stage_entered_on                                                                           AS month_date,
      SUM(IFF(application_stage = 'Application Submitted',1,0))                                        AS prospected,
      IFF(prospected = 0, NULL, 
        (SUM(IFF(application_stage = 'Application Submitted',hit_application_review,0))/ prospected))  AS prospect_to_review,
      IFF(prospected = 0, NULL, 
          (SUM(IFF(application_stage = 'Application Submitted', hit_screening,0))/prospected))         AS prospect_to_screen,
      IFF(prospected = 0, NULL, 
          SUM(IFF(application_stage = 'Application Submitted',hit_hired,0))/prospected)                AS prospect_to_hire,
      IFF(prospected = 0, NULL,  
        SUM(IFF(application_stage = 'Application Submitted', candidate_dropout,0))/prospected)         AS prospect_to_dropout,
    
      SUM(IFF(application_stage = 'Application Review',1,0))                                           AS app_reviewed,
      IFF(app_reviewed = 0, NULL, 
            (SUM(IFF(application_stage = 'Application Review', hit_screening,0))/app_reviewed))        AS review_to_screen,
      IFF(app_reviewed = 0, NULL, 
            SUM(IFF(application_stage = 'Application Review', hit_hired,0))/app_reviewed)              AS review_to_hire,
    
      SUM(IFF(application_stage = 'Screen',1,0))                                                       AS screen,
      IFF(screen = 0, NULL, 
        SUM(IFF(application_stage = 'Screen', hit_team_interview,0))/screen)                           AS screen_to_interview,
      IFF(screen = 0, NULL, SUM(IFF(application_stage = 'Screen', hit_hired,0))/screen)                AS screen_to_hire,
    
      SUM(IFF(application_stage = 'Team Interview - Face to Face',1,0))                                 AS team_interview,
      IFF(team_interview = 0, NULL, 
          SUM(IFF(application_stage = 'Team Interview - Face to Face', hit_hired,0))/team_interview)    AS interview_to_hire,
      IFF(team_interview = 0, NULL, 
            SUM(IFF(application_stage = 'Team Interview - Face to Face', hit_rejected,0))/team_interview) AS interview_to_reject,

      SUM(IFF(application_stage = 'Executive Interview',1,0))                                           AS executive_interview,
      IFF(executive_interview = 0, NULL, 
                SUM(IFF(application_stage = 'Executive Interview', hit_hired,0))/executive_interview)   AS exec_interview_to_hire,
        
      SUM(IFF(application_stage = 'Reference Check',1,0))                                               AS reference_check,

      SUM(IFF(application_stage = 'Rejected', candidate_dropout,0))                                     AS candidate_dropout,

      SUM(IFF(application_stage = 'Offer',1,0))                                                         AS offer,
      IFF(offer = 0, NULL, 
        SUM(IFF(application_stage  ='Offer' AND application_Status ='hired',hit_hired,0))/offer)        AS offer_acceptance_rate,

      SUM(IFF(application_stage = 'Hired',1,0))                                                         AS hired, 
      SUM(IFF(application_stage = 'Hired' AND source_name != 'Internal Applicant',1,0))                 AS hires_excluding_transfers, 
    
    ---note hired includes interal applicants whereas hires_excluding_transfers

      MEDIAN(IFF(application_stage = 'Hired', time_to_offer, NULL))                                   AS time_to_offer_median,
      SUM(IFF(application_stage = 'Hired' AND is_sourced = 1,1,0))                                    AS sourced_candidate,
        
      IFF(hires_excluding_transfers =0, 0, sourced_candidate/hires_excluding_transfers)               AS percent_sourced_hires,
      SUM(IFF(application_stage = 'Hired' AND is_outbound = 1,1,0))                                   AS outbound_candidate,
      IFF(hires_excluding_transfers =0, 0, outbound_candidate/hires_excluding_transfers)              AS percent_outbound_hires

    FROM  recruiting_data
    WHERE unique_key NOT IN ('6d31c2d36d2eaec7f5b36605ac3ccf77')
    GROUP BY 1

), final AS (  

    SELECT 
      metrics.*,
      isat.isat
    FROM metrics
    LEFT JOIN isat
      ON isat.submitted_at = metrics.month_date
    WHERE month_date BETWEEN DATE_TRUNC(month, DATEADD(month,-13,CURRENT_DATE()))
                                     AND DATE_TRUNC(month, CURRENT_DATE())

)

SELECT *
FROM final1f:T124c,WITH recruiting_data AS (
  
    SELECT *
    FROM "PROD".legacy.greenhouse_stage_analysis

), isat AS (

    SELECT
      submitted_at,
      AVG(isat_score) AS isat
    FROM "PROD".legacy.rpt_interviewee_satisfaction_isat
    GROUP BY 1

), metrics AS (

    SELECT 
      month_stage_entered_on                                                                           AS month_date,
      SUM(IFF(application_stage = 'Application Submitted',1,0))                                        AS prospected,
      IFF(prospected = 0, NULL, 
        (SUM(IFF(application_stage = 'Application Submitted',hit_application_review,0))/ prospected))  AS prospect_to_review,
      IFF(prospected = 0, NULL, 
          (SUM(IFF(application_stage = 'Application Submitted', hit_screening,0))/prospected))         AS prospect_to_screen,
      IFF(prospected = 0, NULL, 
          SUM(IFF(application_stage = 'Application Submitted',hit_hired,0))/prospected)                AS prospect_to_hire,
      IFF(prospected = 0, NULL,  
        SUM(IFF(application_stage = 'Application Submitted', candidate_dropout,0))/prospected)         AS prospect_to_dropout,
    
      SUM(IFF(application_stage = 'Application Review',1,0))                                           AS app_reviewed,
      IFF(app_reviewed = 0, NULL, 
            (SUM(IFF(application_stage = 'Application Review', hit_screening,0))/app_reviewed))        AS review_to_screen,
      IFF(app_reviewed = 0, NULL, 
            SUM(IFF(application_stage = 'Application Review', hit_hired,0))/app_reviewed)              AS review_to_hire,
    
      SUM(IFF(application_stage = 'Screen',1,0))                                                       AS screen,
      IFF(screen = 0, NULL, 
        SUM(IFF(application_stage = 'Screen', hit_team_interview,0))/screen)                           AS screen_to_interview,
      IFF(screen = 0, NULL, SUM(IFF(application_stage = 'Screen', hit_hired,0))/screen)                AS screen_to_hire,
    
      SUM(IFF(application_stage = 'Team Interview - Face to Face',1,0))                                 AS team_interview,
      IFF(team_interview = 0, NULL, 
          SUM(IFF(application_stage = 'Team Interview - Face to Face', hit_hired,0))/team_interview)    AS interview_to_hire,
      IFF(team_interview = 0, NULL, 
            SUM(IFF(application_stage = 'Team Interview - Face to Face', hit_rejected,0))/team_interview) AS interview_to_reject,

      SUM(IFF(application_stage = 'Executive Interview',1,0))                                           AS executive_interview,
      IFF(executive_interview = 0, NULL, 
                SUM(IFF(application_stage = 'Executive Interview', hit_hired,0))/executive_interview)   AS exec_interview_to_hire,
        
      SUM(IFF(application_stage = 'Reference Check',1,0))                                               AS reference_check,

      SUM(IFF(application_stage = 'Rejected', candidate_dropout,0))                                     AS candidate_dropout,

      SUM(IFF(application_stage = 'Offer',1,0))                                                         AS offer,
      IFF(offer = 0, NULL, 
        SUM(IFF(application_stage  ='Offer' AND application_Status ='hired',hit_hired,0))/offer)        AS offer_acceptance_rate,

      SUM(IFF(application_stage = 'Hired',1,0))                                                         AS hired, 
      SUM(IFF(application_stage = 'Hired' AND source_name != 'Internal Applicant',1,0))                 AS hires_excluding_transfers, 
    
    ---note hired includes interal applicants whereas hires_excluding_transfers

      MEDIAN(IFF(application_stage = 'Hired', time_to_offer, NULL))                                   AS time_to_offer_median,
      SUM(IFF(application_stage = 'Hired' AND is_sourced = 1,1,0))                                    AS sourced_candidate,
        
      IFF(hires_excluding_transfers =0, 0, sourced_candidate/hires_excluding_transfers)               AS percent_sourced_hires,
      SUM(IFF(application_stage = 'Hired' AND is_outbound = 1,1,0))                                   AS outbound_candidate,
      IFF(hires_excluding_transfers =0, 0, outbound_candidate/hires_excluding_transfers)              AS percent_outbound_hires

    FROM  recruiting_data
    WHERE unique_key NOT IN ('6d31c2d36d2eaec7f5b36605ac3ccf77')
    GROUP BY 1

), final AS (  

    SELECT 
      metrics.*,
      isat.isat
    FROM metrics
    LEFT JOIN isat
      ON isat.submitted_at = metrics.month_date
    WHERE month_date BETWEEN DATE_TRUNC(month, DATEADD(month,-13,CURRENT_DATE()))
                                     AND DATE_TRUNC(month, CURRENT_DATE())

)

SELECT *
FROM final20:T4ca5,{% set partition_statement = "OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                              " %}


{% set ratio_to_report_partition_statement = "OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                              " %}

WITH source AS (

    SELECT *
    FROM {{ ref ('bamboohr_headcount_intermediate') }}

), base AS (

    SELECT DISTINCT 
      unique_key,
      month_date,
      breakout_type_modified AS breakout_type,
      department,
      division,
      job_role,
      job_grade,
      eeoc_field_name,                                                       
      eeoc_value
      --- this is to group groups with less than 4 headcount
    FROM source

), intermediate AS (

   SELECT
      base.month_date,
      IFF(base.month_date = DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE())), 
                TRUE, FALSE)                                                       AS is_last_month,
      base.breakout_type, 
      base.department,
      base.division,
      base.job_role,
      base.job_grade,
      base.eeoc_field_name,
      base.eeoc_value,
      IFF(base.breakout_type !='eeoc_breakout' 
            AND base.eeoc_field_name !='no_eeoc', FALSE, TRUE)                     AS show_value_criteria,
      headcount_start,
      headcount_start_excluding_sdr,
      headcount_end,
      headcount_end_excluding_sdr,
      headcount_average,
      headcount_average_excluding_sdr,
      hire_count,
      separation_count,
      voluntary_separation,
      involuntary_separation,
      AVG(COALESCE(headcount_average, 0)) {{partition_statement}}                   AS rolling_12_month_headcount,
      AVG(COALESCE(headcount_average_excluding_sdr, 0)) {{partition_statement}}     AS rolling_12_month_headcount_excluding_sdr,
      SUM(COALESCE(separation_count,0)) {{partition_statement}}                     AS rolling_12_month_separations,
      SUM(COALESCE(voluntary_separation,0)) {{partition_statement}}                 AS rolling_12_month_voluntary_separations,
      SUM(COALESCE(involuntary_separation,0)) {{partition_statement}}               AS rolling_12_month_involuntary_separations,
      IFF(rolling_12_month_headcount< rolling_12_month_separations, NULL,
        1 - (rolling_12_month_separations/NULLIF(rolling_12_month_headcount,0)))    AS retention,

      headcount_end_leader,
      headcount_average_leader,
      hired_leaders,
      separated_leaders,
      AVG(COALESCE(headcount_average_leader, 0)) {{partition_statement}}             AS rolling_12_month_headcount_leader,
      SUM(COALESCE(separated_leaders,0)) {{partition_statement}}                     AS rolling_12_month_separations_leader,
      IFF(rolling_12_month_headcount_leader< rolling_12_month_separations_leader, NULL,
        1 - (rolling_12_month_separations_leader/NULLIF(rolling_12_month_headcount_leader,0)))    AS retention_leader,

      headcount_end_manager,
      headcount_average_manager,
      hired_manager,
      separated_manager,
      AVG(COALESCE(headcount_average_manager, 0)) {{partition_statement}}             AS rolling_12_month_headcount_manager,
      SUM(COALESCE(separated_manager,0)) {{partition_statement}}                      AS rolling_12_month_separations_manager,
      IFF(rolling_12_month_headcount_manager< rolling_12_month_separations_manager, NULL,
        1 - (rolling_12_month_separations_manager/NULLIF(rolling_12_month_headcount_manager,0)))    AS retention_manager,

      headcount_end_management,
      headcount_average_management,
      hired_management,
      separated_management,
      AVG(COALESCE(headcount_average_management, 0)) {{partition_statement}}             AS rolling_12_month_headcount_management,
      SUM(COALESCE(separated_management,0)) {{partition_statement}}                      AS rolling_12_month_separations_management,
      IFF(rolling_12_month_headcount_management< rolling_12_month_separations_management, 
        NULL,
        1 - (rolling_12_month_separations_management/
            NULLIF(rolling_12_month_headcount_management,0)))                            AS retention_management,

      headcount_end_individual_contributor,
      headcount_average_contributor,
      hired_contributor,
      separated_contributor,
      
      MIN(headcount_end_individual_contributor)
        {{ratio_to_report_partition_statement}}                                     AS min_headcount_end_contributor, 
      SUM(headcount_end_individual_contributor)
        {{ratio_to_report_partition_statement}}                                     AS total_headcount_end_contributor,   
      MIN(headcount_average)  {{ratio_to_report_partition_statement}}               AS min_headcount_average,
      SUM(headcount_end)  {{ratio_to_report_partition_statement}}                   AS total_headcount_end,
      MIN(hire_count) {{ratio_to_report_partition_statement}}                       AS min_hire_count,
      SUM(hire_count) {{ratio_to_report_partition_statement}}                       AS total_hire_count,
      MIN(headcount_average_leader) {{ratio_to_report_partition_statement}}         AS min_headcount_leader,
      SUM(headcount_average_leader) {{ratio_to_report_partition_statement}}         AS total_headcount_leader,
      MIN(headcount_average_manager) {{ratio_to_report_partition_statement}}        AS min_headcount_manager,
      SUM(headcount_average_manager) {{ratio_to_report_partition_statement}}        AS total_headcount_manager,
      MIN(headcount_average_management) {{ratio_to_report_partition_statement}}     AS min_headcount_management,
      SUM(headcount_average_management) {{ratio_to_report_partition_statement}}     AS total_headcount_management,
      MIN(headcount_average_contributor) {{ratio_to_report_partition_statement}}    AS min_headcount_contributor,


      RATIO_TO_REPORT(headcount_end) 
        {{ratio_to_report_partition_statement}}                                     AS percent_of_headcount,
      RATIO_TO_REPORT(hire_count) 
        {{ratio_to_report_partition_statement}}                                     AS percent_of_hires,
      RATIO_TO_REPORT(headcount_end_leader) 
        {{ratio_to_report_partition_statement}}                                     AS percent_of_headcount_leaders,
      RATIO_TO_REPORT(headcount_end_manager) 
        {{ratio_to_report_partition_statement}}                                     AS percent_of_headcount_manager,    
      RATIO_TO_REPORT(headcount_end_management) 
        {{ratio_to_report_partition_statement}}                                     AS percent_of_headcount_management,          
      RATIO_TO_REPORT(headcount_end_individual_contributor) 
        {{ratio_to_report_partition_statement}}                                     AS percent_of_headcount_contributor,
      
      SUM(COALESCE(promotion,0)) {{partition_statement}}                            AS rolling_12_month_promotions,
      SUM(COALESCE(promotion_excluding_sdr,0)) {{partition_statement}}              AS rolling_12_month_promotions_excluding_sdr,

      SUM(COALESCE(percent_change_in_comp,0)) {{partition_statement}}               AS rolling_12_month_promotions_percent_change_in_comp,
      SUM(COALESCE(percent_change_in_comp_excluding_sdr,0)) {{partition_statement}} AS rolling_12_month_promotions_percent_change_in_comp_excluding_sdr,
      location_factor,
      AVG(new_hire_location_factor)
        OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                           base.job_grade, base.eeoc_field_name, base.eeoc_value
              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS new_hire_location_factor_rolling_3_month,
      discretionary_bonus,
      tenure_months,
      tenure_zero_to_six_months,
      tenure_six_to_twelve_months,
      tenure_one_to_two_years,
      tenure_two_to_four_years,
      tenure_four_plus_years
    FROM base
    LEFT JOIN source  
      ON base.unique_key = source.unique_key
    WHERE base.month_date < DATE_TRUNC('month', CURRENT_DATE)   

 ), final AS (
     
    SELECT   
      month_date,
      is_last_month,
      breakout_type, 
      department,
      division,
      job_role,
      job_grade,
      eeoc_field_name,
      CASE WHEN eeoc_field_name = 'gender' AND headcount_end < 5
            THEN 'Other'
           WHEN eeoc_field_name = 'gender-region' AND headcount_end < 5
            THEN 'Other_'|| SPLIT_PART(eeoc_value,'_',2)
           WHEN eeoc_field_name = 'ethnicity' AND headcount_end < 5
            THEN 'Other'       
           ELSE eeoc_value END                                                 AS eeoc_value,
      IFF(headcount_start <4 AND show_value_criteria = FALSE,
        NULL,headcount_start)                                                  AS headcount_start,
      IFF(headcount_start_excluding_sdr <4 AND show_value_criteria = FALSE,
        NULL,headcount_start_excluding_sdr)                                    AS headcount_start_excluding_sdr,  
      IFF(headcount_end <4 AND show_value_criteria = FALSE,
        NULL, headcount_end)                                                   AS headcount_end,
      IFF(headcount_end_excluding_sdr <4 AND show_value_criteria = FALSE,
        NULL, headcount_end_excluding_sdr)                                     AS headcount_end_excluding_sdr,      
      IFF(headcount_average <4 AND eeoc_field_name != 'no_eeoc',  
        NULL, headcount_average)                                               AS headcount_average,
      IFF(headcount_average_excluding_sdr <4 AND eeoc_field_name != 'no_eeoc',  
        NULL, headcount_average)                                               AS headcount_average_excluding_sdr,  
      IFF(hire_count <4 AND eeoc_field_name != 'no_eeoc', 
        NULL, hire_count)                                                      AS hire_count,
      IFF(separation_count <4 AND eeoc_field_name != 'no_eeoc', 
        NULL, separation_count)                                                AS separation_count,
      IFF(voluntary_separation <4, NULL, voluntary_separation)                 AS voluntary_separation_count,
      IFF(voluntary_separation < 4,  NULL, involuntary_separation)             AS involuntary_separation_count,  

      rolling_12_month_headcount,
      rolling_12_month_headcount_excluding_sdr,
      rolling_12_month_separations,
      rolling_12_month_voluntary_separations,
      rolling_12_month_involuntary_separations,
      IFF(rolling_12_month_headcount< rolling_12_month_voluntary_separations, NULL,
        (rolling_12_month_voluntary_separations/NULLIF(rolling_12_month_headcount,0)))    AS voluntary_separation_rate,
      IFF(rolling_12_month_headcount< rolling_12_month_involuntary_separations, NULL,
        (rolling_12_month_involuntary_separations/NULLIF(rolling_12_month_headcount,0)))  AS involuntary_separation_rate,
      retention,

      IFF(headcount_end_leader < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_leader)                                         AS headcount_end_leader, 
      IFF(headcount_average_leader < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL,headcount_average_leader)                                      AS headcount_leader_average,
      IFF(hired_leaders < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_leaders)                                                AS hired_leaders,
      IFF(separated_leaders < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, separated_leaders)                                            AS separated_leaders,
      rolling_12_month_headcount_leader,
      rolling_12_month_separations_leader,
      retention_leader,


      IFF(headcount_end_manager < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_manager)                                        AS headcount_end_manager,            
      IFF(headcount_average_manager < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_average_manager)                                    AS headcount_manager_average,
      IFF(hired_manager < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_manager)                                                AS hired_manager,
      IFF(separated_manager < 2 AND eeoc_field_name != 'no_eeoc',
        NULL, separated_manager)                                            AS separated_manager,
      rolling_12_month_headcount_manager,
      rolling_12_month_separations_manager,
      retention_manager,
 
      IFF(headcount_end_management < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_management)                                        AS headcount_end_management,            
      IFF(headcount_average_management < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_average_management)                                    AS headcount_management_average,
      IFF(hired_management < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_management)                                                AS hired_management,
      IFF(separated_management < 2 AND eeoc_field_name != 'no_eeoc',
        NULL, separated_management)                                            AS separated_management,
      rolling_12_month_headcount_management,
      rolling_12_month_separations_management,
      retention_management,

      IFF(headcount_end_individual_contributor < 4 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_individual_contributor)                              AS headcount_end_contributor,
      IFF(headcount_average_contributor < 4 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_average_contributor)                                     AS headcount_contributor,
      IFF(hired_contributor < 4 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_contributor)                                                 AS hired_contributor,
      IFF(separated_contributor < 4 AND eeoc_field_name != 'no_eeoc',
        NULL, separated_contributor)                                             AS separated_contributor,

      IFF(total_headcount_end < 5 AND show_value_criteria = FALSE, 
            NULL, percent_of_headcount)                                          AS percent_of_headcount,
      IFF(total_hire_count < 5 AND show_value_criteria = FALSE, 
        NULL, percent_of_hires)                                                  AS percent_of_hires,
      IFF(total_headcount_leader < 3 AND show_value_criteria = FALSE, 
        NULL, percent_of_headcount_leaders)                                      AS percent_of_headcount_leaders,
      IFF(total_headcount_manager < 3 AND show_value_criteria = FALSE,  
        NULL, percent_of_headcount_manager)                                      AS percent_of_headcount_manager,
      IFF(total_headcount_management < 3 AND show_value_criteria = FALSE,  
        NULL, percent_of_headcount_management)                                   AS percent_of_headcount_management,
      IFF(total_headcount_end_contributor < 5 AND show_value_criteria = FALSE, 
        NULL, percent_of_headcount_contributor)                                  AS percent_of_headcount_contributor,

      CASE WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            THEN rolling_12_month_promotions
           WHEN breakout_type IN ('eeoc_breakout')
             AND eeoc_field_name IN ('gender','ethnicity','region_modified')
             AND rolling_12_month_promotions > 3
            THEN rolling_12_month_promotions
            ELSE NULL END                                                         AS rolling_12_month_promotions,   
            
      CASE WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            THEN rolling_12_month_promotions_excluding_sdr
           WHEN breakout_type IN ('eeoc_breakout')
             AND eeoc_field_name IN ('gender','ethnicity','region_modified')
             AND rolling_12_month_promotions > 3
            THEN rolling_12_month_promotions_excluding_sdr
            ELSE NULL END                                                         AS rolling_12_month_promotions_excluding_sdr,
      CASE 
        WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            AND rolling_12_month_promotions > 3
        THEN rolling_12_month_promotions_percent_change_in_comp/rolling_12_month_promotions
        WHEN breakout_type IN ('eeoc_breakout') 
            AND eeoc_field_name IN ('gender','ethnicity','region_modified')
            AND rolling_12_month_promotions > 3
          THEN rolling_12_month_promotions_percent_change_in_comp/rolling_12_month_promotions
        ELSE NULL END                                                            AS rolling_12_month_promotion_increase,
      CASE 
        WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            AND rolling_12_month_promotions_excluding_sdr > 3
        THEN rolling_12_month_promotions_percent_change_in_comp_excluding_sdr/rolling_12_month_promotions_excluding_sdr
        WHEN breakout_type IN ('eeoc_breakout') 
            AND eeoc_field_name IN ('gender','ethnicity','region_modified')
            AND rolling_12_month_promotions_excluding_sdr > 3
          THEN rolling_12_month_promotions_percent_change_in_comp_excluding_sdr/rolling_12_month_promotions_excluding_sdr
        ELSE NULL END                                                            AS rolling_12_month_promotion_increase_excluding_sdr,

      IFF(headcount_end <4 AND show_value_criteria = FALSE,
        NULL,location_factor)                                                    AS location_factor,

      new_hire_location_factor_rolling_3_month,        
      IFF(discretionary_bonus<4 AND show_value_criteria = FALSE,
        NULL, discretionary_bonus)                                               AS discretionary_bonus,
      IFF(tenure_months<4 AND show_value_criteria = FALSE,
        NULL, tenure_months)                                                     AS tenure_months,
      IFF(tenure_zero_to_six_months<4 AND show_value_criteria  = FALSE,
        NULL, tenure_zero_to_six_months)                                         AS tenure_zero_to_six_months,
      IFF(tenure_six_to_twelve_months<4 AND show_value_criteria = FALSE,
        NULL, tenure_six_to_twelve_months)                                       AS tenure_six_to_twelve_months,
      IFF(tenure_one_to_two_years<4 AND show_value_criteria = FALSE,
        NULL, tenure_one_to_two_years)                                           AS tenure_one_to_two_years,
      IFF(tenure_two_to_four_years<4 AND show_value_criteria = FALSE,
        NULL, tenure_two_to_four_years)                                          AS tenure_two_to_four_years,
      IFF(tenure_four_plus_years<4 AND show_value_criteria = FALSE,
        NULL, tenure_four_plus_years)                                            AS tenure_four_plus_years
    FROM intermediate   

)

SELECT * 
FROM final21:T6d3c,




WITH source AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_headcount_intermediate

), base AS (

    SELECT DISTINCT 
      unique_key,
      month_date,
      breakout_type_modified AS breakout_type,
      department,
      division,
      job_role,
      job_grade,
      eeoc_field_name,                                                       
      eeoc_value
      --- this is to group groups with less than 4 headcount
    FROM source

), intermediate AS (

   SELECT
      base.month_date,
      IFF(base.month_date = DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE())), 
                TRUE, FALSE)                                                       AS is_last_month,
      base.breakout_type, 
      base.department,
      base.division,
      base.job_role,
      base.job_grade,
      base.eeoc_field_name,
      base.eeoc_value,
      IFF(base.breakout_type !='eeoc_breakout' 
            AND base.eeoc_field_name !='no_eeoc', FALSE, TRUE)                     AS show_value_criteria,
      headcount_start,
      headcount_start_excluding_sdr,
      headcount_end,
      headcount_end_excluding_sdr,
      headcount_average,
      headcount_average_excluding_sdr,
      hire_count,
      separation_count,
      voluntary_separation,
      involuntary_separation,
      AVG(COALESCE(headcount_average, 0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                                 AS rolling_12_month_headcount,
      AVG(COALESCE(headcount_average_excluding_sdr, 0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                   AS rolling_12_month_headcount_excluding_sdr,
      SUM(COALESCE(separation_count,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                                   AS rolling_12_month_separations,
      SUM(COALESCE(voluntary_separation,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                               AS rolling_12_month_voluntary_separations,
      SUM(COALESCE(involuntary_separation,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                             AS rolling_12_month_involuntary_separations,
      IFF(rolling_12_month_headcount< rolling_12_month_separations, NULL,
        1 - (rolling_12_month_separations/NULLIF(rolling_12_month_headcount,0)))    AS retention,

      headcount_end_leader,
      headcount_average_leader,
      hired_leaders,
      separated_leaders,
      AVG(COALESCE(headcount_average_leader, 0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                           AS rolling_12_month_headcount_leader,
      SUM(COALESCE(separated_leaders,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                                   AS rolling_12_month_separations_leader,
      IFF(rolling_12_month_headcount_leader< rolling_12_month_separations_leader, NULL,
        1 - (rolling_12_month_separations_leader/NULLIF(rolling_12_month_headcount_leader,0)))    AS retention_leader,

      headcount_end_manager,
      headcount_average_manager,
      hired_manager,
      separated_manager,
      AVG(COALESCE(headcount_average_manager, 0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                           AS rolling_12_month_headcount_manager,
      SUM(COALESCE(separated_manager,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                                    AS rolling_12_month_separations_manager,
      IFF(rolling_12_month_headcount_manager< rolling_12_month_separations_manager, NULL,
        1 - (rolling_12_month_separations_manager/NULLIF(rolling_12_month_headcount_manager,0)))    AS retention_manager,

      headcount_end_management,
      headcount_average_management,
      hired_management,
      separated_management,
      AVG(COALESCE(headcount_average_management, 0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                           AS rolling_12_month_headcount_management,
      SUM(COALESCE(separated_management,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                                    AS rolling_12_month_separations_management,
      IFF(rolling_12_month_headcount_management< rolling_12_month_separations_management, 
        NULL,
        1 - (rolling_12_month_separations_management/
            NULLIF(rolling_12_month_headcount_management,0)))                            AS retention_management,

      headcount_end_individual_contributor,
      headcount_average_contributor,
      hired_contributor,
      separated_contributor,
      
      MIN(headcount_end_individual_contributor)
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS min_headcount_end_contributor, 
      SUM(headcount_end_individual_contributor)
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS total_headcount_end_contributor,   
      MIN(headcount_average)  OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                             AS min_headcount_average,
      SUM(headcount_end)  OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                 AS total_headcount_end,
      MIN(hire_count) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                     AS min_hire_count,
      SUM(hire_count) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                     AS total_hire_count,
      MIN(headcount_average_leader) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                       AS min_headcount_leader,
      SUM(headcount_average_leader) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                       AS total_headcount_leader,
      MIN(headcount_average_manager) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                      AS min_headcount_manager,
      SUM(headcount_average_manager) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                      AS total_headcount_manager,
      MIN(headcount_average_management) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                   AS min_headcount_management,
      SUM(headcount_average_management) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                   AS total_headcount_management,
      MIN(headcount_average_contributor) OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                  AS min_headcount_contributor,


      RATIO_TO_REPORT(headcount_end) 
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS percent_of_headcount,
      RATIO_TO_REPORT(hire_count) 
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS percent_of_hires,
      RATIO_TO_REPORT(headcount_end_leader) 
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS percent_of_headcount_leaders,
      RATIO_TO_REPORT(headcount_end_manager) 
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS percent_of_headcount_manager,    
      RATIO_TO_REPORT(headcount_end_management) 
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS percent_of_headcount_management,          
      RATIO_TO_REPORT(headcount_end_individual_contributor) 
        OVER (PARTITION BY base.month_date, base.breakout_type, base.department, base.division, base.job_role,
                                              base.job_grade, base.eeoc_field_name
                                              ORDER BY base.month_date)
                                                                   AS percent_of_headcount_contributor,
      
      SUM(COALESCE(promotion,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                                          AS rolling_12_month_promotions,
      SUM(COALESCE(promotion_excluding_sdr,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                            AS rolling_12_month_promotions_excluding_sdr,

      SUM(COALESCE(percent_change_in_comp,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                                             AS rolling_12_month_promotions_percent_change_in_comp,
      SUM(COALESCE(percent_change_in_comp_excluding_sdr,0)) OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                                    base.job_grade, base.eeoc_field_name, base.eeoc_value
                              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 11 FOLLOWING)
                               AS rolling_12_month_promotions_percent_change_in_comp_excluding_sdr,
      location_factor,
      AVG(new_hire_location_factor)
        OVER (PARTITION BY base.breakout_type, base.department, base.division, base.job_role,
                           base.job_grade, base.eeoc_field_name, base.eeoc_value
              ORDER BY base.month_date DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS new_hire_location_factor_rolling_3_month,
      discretionary_bonus,
      tenure_months,
      tenure_zero_to_six_months,
      tenure_six_to_twelve_months,
      tenure_one_to_two_years,
      tenure_two_to_four_years,
      tenure_four_plus_years
    FROM base
    LEFT JOIN source  
      ON base.unique_key = source.unique_key
    WHERE base.month_date < DATE_TRUNC('month', CURRENT_DATE)   

 ), final AS (
     
    SELECT   
      month_date,
      is_last_month,
      breakout_type, 
      department,
      division,
      job_role,
      job_grade,
      eeoc_field_name,
      CASE WHEN eeoc_field_name = 'gender' AND headcount_end < 5
            THEN 'Other'
           WHEN eeoc_field_name = 'gender-region' AND headcount_end < 5
            THEN 'Other_'|| SPLIT_PART(eeoc_value,'_',2)
           WHEN eeoc_field_name = 'ethnicity' AND headcount_end < 5
            THEN 'Other'       
           ELSE eeoc_value END                                                 AS eeoc_value,
      IFF(headcount_start <4 AND show_value_criteria = FALSE,
        NULL,headcount_start)                                                  AS headcount_start,
      IFF(headcount_start_excluding_sdr <4 AND show_value_criteria = FALSE,
        NULL,headcount_start_excluding_sdr)                                    AS headcount_start_excluding_sdr,  
      IFF(headcount_end <4 AND show_value_criteria = FALSE,
        NULL, headcount_end)                                                   AS headcount_end,
      IFF(headcount_end_excluding_sdr <4 AND show_value_criteria = FALSE,
        NULL, headcount_end_excluding_sdr)                                     AS headcount_end_excluding_sdr,      
      IFF(headcount_average <4 AND eeoc_field_name != 'no_eeoc',  
        NULL, headcount_average)                                               AS headcount_average,
      IFF(headcount_average_excluding_sdr <4 AND eeoc_field_name != 'no_eeoc',  
        NULL, headcount_average)                                               AS headcount_average_excluding_sdr,  
      IFF(hire_count <4 AND eeoc_field_name != 'no_eeoc', 
        NULL, hire_count)                                                      AS hire_count,
      IFF(separation_count <4 AND eeoc_field_name != 'no_eeoc', 
        NULL, separation_count)                                                AS separation_count,
      IFF(voluntary_separation <4, NULL, voluntary_separation)                 AS voluntary_separation_count,
      IFF(voluntary_separation < 4,  NULL, involuntary_separation)             AS involuntary_separation_count,  

      rolling_12_month_headcount,
      rolling_12_month_headcount_excluding_sdr,
      rolling_12_month_separations,
      rolling_12_month_voluntary_separations,
      rolling_12_month_involuntary_separations,
      IFF(rolling_12_month_headcount< rolling_12_month_voluntary_separations, NULL,
        (rolling_12_month_voluntary_separations/NULLIF(rolling_12_month_headcount,0)))    AS voluntary_separation_rate,
      IFF(rolling_12_month_headcount< rolling_12_month_involuntary_separations, NULL,
        (rolling_12_month_involuntary_separations/NULLIF(rolling_12_month_headcount,0)))  AS involuntary_separation_rate,
      retention,

      IFF(headcount_end_leader < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_leader)                                         AS headcount_end_leader, 
      IFF(headcount_average_leader < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL,headcount_average_leader)                                      AS headcount_leader_average,
      IFF(hired_leaders < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_leaders)                                                AS hired_leaders,
      IFF(separated_leaders < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, separated_leaders)                                            AS separated_leaders,
      rolling_12_month_headcount_leader,
      rolling_12_month_separations_leader,
      retention_leader,


      IFF(headcount_end_manager < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_manager)                                        AS headcount_end_manager,            
      IFF(headcount_average_manager < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_average_manager)                                    AS headcount_manager_average,
      IFF(hired_manager < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_manager)                                                AS hired_manager,
      IFF(separated_manager < 2 AND eeoc_field_name != 'no_eeoc',
        NULL, separated_manager)                                            AS separated_manager,
      rolling_12_month_headcount_manager,
      rolling_12_month_separations_manager,
      retention_manager,
 
      IFF(headcount_end_management < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_management)                                        AS headcount_end_management,            
      IFF(headcount_average_management < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_average_management)                                    AS headcount_management_average,
      IFF(hired_management < 2 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_management)                                                AS hired_management,
      IFF(separated_management < 2 AND eeoc_field_name != 'no_eeoc',
        NULL, separated_management)                                            AS separated_management,
      rolling_12_month_headcount_management,
      rolling_12_month_separations_management,
      retention_management,

      IFF(headcount_end_individual_contributor < 4 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_end_individual_contributor)                              AS headcount_end_contributor,
      IFF(headcount_average_contributor < 4 AND eeoc_field_name != 'no_eeoc', 
        NULL, headcount_average_contributor)                                     AS headcount_contributor,
      IFF(hired_contributor < 4 AND eeoc_field_name != 'no_eeoc', 
        NULL, hired_contributor)                                                 AS hired_contributor,
      IFF(separated_contributor < 4 AND eeoc_field_name != 'no_eeoc',
        NULL, separated_contributor)                                             AS separated_contributor,

      IFF(total_headcount_end < 5 AND show_value_criteria = FALSE, 
            NULL, percent_of_headcount)                                          AS percent_of_headcount,
      IFF(total_hire_count < 5 AND show_value_criteria = FALSE, 
        NULL, percent_of_hires)                                                  AS percent_of_hires,
      IFF(total_headcount_leader < 3 AND show_value_criteria = FALSE, 
        NULL, percent_of_headcount_leaders)                                      AS percent_of_headcount_leaders,
      IFF(total_headcount_manager < 3 AND show_value_criteria = FALSE,  
        NULL, percent_of_headcount_manager)                                      AS percent_of_headcount_manager,
      IFF(total_headcount_management < 3 AND show_value_criteria = FALSE,  
        NULL, percent_of_headcount_management)                                   AS percent_of_headcount_management,
      IFF(total_headcount_end_contributor < 5 AND show_value_criteria = FALSE, 
        NULL, percent_of_headcount_contributor)                                  AS percent_of_headcount_contributor,

      CASE WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            THEN rolling_12_month_promotions
           WHEN breakout_type IN ('eeoc_breakout')
             AND eeoc_field_name IN ('gender','ethnicity','region_modified')
             AND rolling_12_month_promotions > 3
            THEN rolling_12_month_promotions
            ELSE NULL END                                                         AS rolling_12_month_promotions,   
            
      CASE WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            THEN rolling_12_month_promotions_excluding_sdr
           WHEN breakout_type IN ('eeoc_breakout')
             AND eeoc_field_name IN ('gender','ethnicity','region_modified')
             AND rolling_12_month_promotions > 3
            THEN rolling_12_month_promotions_excluding_sdr
            ELSE NULL END                                                         AS rolling_12_month_promotions_excluding_sdr,
      CASE 
        WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            AND rolling_12_month_promotions > 3
        THEN rolling_12_month_promotions_percent_change_in_comp/rolling_12_month_promotions
        WHEN breakout_type IN ('eeoc_breakout') 
            AND eeoc_field_name IN ('gender','ethnicity','region_modified')
            AND rolling_12_month_promotions > 3
          THEN rolling_12_month_promotions_percent_change_in_comp/rolling_12_month_promotions
        ELSE NULL END                                                            AS rolling_12_month_promotion_increase,
      CASE 
        WHEN breakout_type IN ('kpi_breakout','division_breakout','department_breakout') 
            AND eeoc_value = 'no_eeoc'
            AND rolling_12_month_promotions_excluding_sdr > 3
        THEN rolling_12_month_promotions_percent_change_in_comp_excluding_sdr/rolling_12_month_promotions_excluding_sdr
        WHEN breakout_type IN ('eeoc_breakout') 
            AND eeoc_field_name IN ('gender','ethnicity','region_modified')
            AND rolling_12_month_promotions_excluding_sdr > 3
          THEN rolling_12_month_promotions_percent_change_in_comp_excluding_sdr/rolling_12_month_promotions_excluding_sdr
        ELSE NULL END                                                            AS rolling_12_month_promotion_increase_excluding_sdr,

      IFF(headcount_end <4 AND show_value_criteria = FALSE,
        NULL,location_factor)                                                    AS location_factor,

      new_hire_location_factor_rolling_3_month,        
      IFF(discretionary_bonus<4 AND show_value_criteria = FALSE,
        NULL, discretionary_bonus)                                               AS discretionary_bonus,
      IFF(tenure_months<4 AND show_value_criteria = FALSE,
        NULL, tenure_months)                                                     AS tenure_months,
      IFF(tenure_zero_to_six_months<4 AND show_value_criteria  = FALSE,
        NULL, tenure_zero_to_six_months)                                         AS tenure_zero_to_six_months,
      IFF(tenure_six_to_twelve_months<4 AND show_value_criteria = FALSE,
        NULL, tenure_six_to_twelve_months)                                       AS tenure_six_to_twelve_months,
      IFF(tenure_one_to_two_years<4 AND show_value_criteria = FALSE,
        NULL, tenure_one_to_two_years)                                           AS tenure_one_to_two_years,
      IFF(tenure_two_to_four_years<4 AND show_value_criteria = FALSE,
        NULL, tenure_two_to_four_years)                                          AS tenure_two_to_four_years,
      IFF(tenure_four_plus_years<4 AND show_value_criteria = FALSE,
        NULL, tenure_four_plus_years)                                            AS tenure_four_plus_years
    FROM intermediate   

)

SELECT * 
FROM final22:T416,Used to simplify CTE imports in a model.

A large portion of import statements in a SQL model are simple `SELECT * FROM table`. Writing pure SQL is verbose and this macro aims to simplify the imports.

The macro accepts once argument which is a list of tuples where each tuple has the alias name and the table reference.

Below is an example and the expected output:

```sql

{{ simple_cte([
    ('map_merged_crm_account','map_merged_crm_account'),
    ('zuora_account','zuora_account_source'),
    ('zuora_contact','zuora_contact_source')
]) }}

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM {{ref('zuora_excluded_accounts')}}

)

```

```sql
WITH map_merged_crm_account AS (

    SELECT * 
    FROM "PROD".common.map_merged_crm_account

), zuora_account AS (

    SELECT * 
    FROM "PREP".zuora.zuora_account_source

), zuora_contact AS (

    SELECT * 
    FROM "PREP".zuora.zuora_contact_source

)

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM "PROD".legacy.zuora_excluded_accounts

)
```24:T1b29,{{ config(
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('dim_dates','dim_date'),
    ('rpt','bamboohr_rpt_headcount_aggregation'),
    ('rpt_headcount_vs_planned','rpt_headcount_vs_planned'),
    ('rpt_team_members_out_of_comp_band','rpt_team_members_out_of_comp_band'),
    ('rpt_osat','rpt_osat'),
    ('rpt_recruiting_kpis','rpt_recruiting_kpis'),
    ('rpt_cost_per_hire', 'rpt_cost_per_hire'),
    ('rpt_promotion','bamboohr_promotion_rate')

]) }}
 
, basic_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      headcount_end,
      hire_count,
      SUM(hire_count) OVER (PARTITION BY fiscal_year) AS hires_fiscal_year,
      SUM(hire_count)  OVER (ORDER BY month_date
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_hires,
      SUM(hire_count) OVER (PARTITION BY fiscal_year ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) hires_fiscal_ytd,
      retention,
      voluntary_separation_rate,
      involuntary_separation_rate,
      location_factor,
      new_hire_location_factor_rolling_3_month,
      discretionary_bonus/headcount_end AS discretionary_bonus_rate,
      rolling_12_month_promotions,
      rolling_12_month_promotions_excluding_sdr,
      rolling_12_month_promotion_increase,
      rolling_12_month_promotion_increase_excluding_sdr      
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'kpi_breakout'

), diversity_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount, NULL))                        AS female_headcount,
      SUM(IFF(eeoc_value = 'Female', percent_of_hires, NULL))                            AS female_hires,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_manager, NULL))                AS female_managers,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_leaders, NULL))                AS female_leaders,
      
      SUM(IFF(eeoc_field_name = 'region_modified'
              AND eeoc_value != 'NORAM', percent_of_headcount, NULL))                    AS non_noram_headcount,

      SUM(IFF(eeoc_field_name = 'urg_group'
                AND eeoc_value = TRUE, percent_of_hires, NULL))                          AS percent_of_urg_hires,
      SUM(IFF(eeoc_field_name = 'ethnicity'
              AND eeoc_value = 'Black or African American', percent_of_headcount, NULL)) AS percent_of_headcount_black_or_african_american    
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'eeoc_breakout'
    GROUP BY 1,2,3,4

), people_group_metrics AS (

    SELECT
      month_date,
      SUM(IFF(department = 'Recruiting', new_hire_location_factor_rolling_3_month, NULL ))       AS recruiting_new_hire_location_factor,
      SUM(IFF(department = 'People Success', new_hire_location_factor_rolling_3_month, NULL ))   AS people_success_new_hire_location_factor
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'department_breakout'
      AND eeoc_field_name = 'no_eeoc'
    GROUP BY 1

), greenhouse_metrics AS (

    SELECT *
    FROM rpt_recruiting_kpis

), final AS (

    SELECT
      basic_metrics.*,
      rpt_promotion.promotion_rate                                      AS company_promotion_rate_excluding_sdr,
      sdr_promotion.promotion_rate                                      AS sdr_promotion_rate,
      rpt_headcount_vs_planned.actual_headcount_vs_planned_headcount,
      rpt_cost_per_hire.rolling_3_month_cost_per_hire,
      rpt_team_members_out_of_comp_band.percent_of_employees_outside_of_band,

      people_group_metrics.recruiting_new_hire_location_factor,
      people_group_metrics.people_success_new_hire_location_factor,

      diversity_metrics.female_headcount,
      diversity_metrics.female_hires,
      diversity_metrics.female_managers,
      diversity_metrics.female_leaders,
      diversity_metrics.non_noram_headcount,
      diversity_metrics.percent_of_headcount_black_or_african_american,
      diversity_metrics.percent_of_urg_hires,
  
      rpt_osat.rolling_3_month_osat,
      rpt_osat.rolling_3_month_respondents/basic_metrics.rolling_3_month_hires AS rolling_3_month_osat_response_rate,
      rpt_osat.rolling_3_month_buddy_score,
      rpt_osat.rolling_3_month_buddy_respondents,

      rpt_recruiting_kpis.offer_acceptance_rate,
      rpt_recruiting_kpis.percent_sourced_hires,
      rpt_recruiting_kpis.percent_outbound_hires,
      rpt_recruiting_kpis.time_to_offer_median,
      rpt_recruiting_kpis.isat,
      rpt_headcount_vs_planned.cumulative_hires_vs_plan

    --% urg
    FROM basic_metrics
    LEFT JOIN diversity_metrics
      ON basic_metrics.month_date = diversity_metrics.month_date
    LEFT JOIN people_group_metrics
      ON basic_metrics.month_date = people_group_metrics.month_date
    LEFT JOIN rpt_osat
      ON basic_metrics.month_date = rpt_osat.completed_month
    LEFT JOIN rpt_headcount_vs_planned
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_headcount_vs_planned.month_date)
      AND rpt_headcount_vs_planned.breakout_type = 'all_company_breakout' 
    LEFT JOIN rpt_recruiting_kpis
      ON basic_metrics.month_date = rpt_recruiting_kpis.month_date
    LEFT JOIN rpt_cost_per_hire
      ON basic_metrics.month_date = rpt_cost_per_hire.hire_month
    LEFT JOIN rpt_promotion
      ON basic_metrics.month_date = rpt_promotion.month_date  
      AND rpt_promotion.field_name = 'company_breakout'
      AND rpt_promotion.field_value = 'Company - Excluding SDR'
    LEFT JOIN rpt_promotion AS sdr_promotion
      ON basic_metrics.month_date = sdr_promotion.month_date  
      AND sdr_promotion.field_name = 'department_grouping_breakout'
      AND sdr_promotion.field_value = 'Sales Development'  
    LEFT JOIN rpt_team_members_out_of_comp_band
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_team_members_out_of_comp_band.date_actual)  
      AND rpt_team_members_out_of_comp_band.breakout_type = 'company_breakout'
)

SELECT 
  IFF(month_date = DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS current_reporting_month,
  IFF(month_date = DATEADD(month, -2, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS previous_reporting_month,
  IFF(month_date = DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS last_year_reporting_month,
  DENSE_RANK() OVER (ORDER BY fiscal_quarter_name DESC) AS rank_fiscal_quarter_desc,
  final.*
FROM final
WHERE month_date BETWEEN DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE()))
                     AND DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE()))25:T1c0d,



WITH dim_dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), rpt AS (

    SELECT * 
    FROM "PROD".legacy.bamboohr_rpt_headcount_aggregation

), rpt_headcount_vs_planned AS (

    SELECT * 
    FROM "PROD".legacy.rpt_headcount_vs_planned

), rpt_team_members_out_of_comp_band AS (

    SELECT * 
    FROM "PROD".legacy.rpt_team_members_out_of_comp_band

), rpt_osat AS (

    SELECT * 
    FROM "PROD".legacy.rpt_osat

), rpt_recruiting_kpis AS (

    SELECT * 
    FROM "PROD".legacy.rpt_recruiting_kpis

), rpt_cost_per_hire AS (

    SELECT * 
    FROM "PROD".legacy.rpt_cost_per_hire

), rpt_promotion AS (

    SELECT * 
    FROM "PROD".legacy.bamboohr_promotion_rate

)
 
, basic_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      headcount_end,
      hire_count,
      SUM(hire_count) OVER (PARTITION BY fiscal_year) AS hires_fiscal_year,
      SUM(hire_count)  OVER (ORDER BY month_date
                                       ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_3_month_hires,
      SUM(hire_count) OVER (PARTITION BY fiscal_year ORDER BY month_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) hires_fiscal_ytd,
      retention,
      voluntary_separation_rate,
      involuntary_separation_rate,
      location_factor,
      new_hire_location_factor_rolling_3_month,
      discretionary_bonus/headcount_end AS discretionary_bonus_rate,
      rolling_12_month_promotions,
      rolling_12_month_promotions_excluding_sdr,
      rolling_12_month_promotion_increase,
      rolling_12_month_promotion_increase_excluding_sdr      
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'kpi_breakout'

), diversity_metrics AS (

    SELECT
      dim_dates.fiscal_year,
      dim_dates.fiscal_quarter_name,
      dim_dates.is_first_day_of_last_month_of_fiscal_quarter,
      month_date,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount, NULL))                        AS female_headcount,
      SUM(IFF(eeoc_value = 'Female', percent_of_hires, NULL))                            AS female_hires,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_manager, NULL))                AS female_managers,
      SUM(IFF(eeoc_value = 'Female', percent_of_headcount_leaders, NULL))                AS female_leaders,
      
      SUM(IFF(eeoc_field_name = 'region_modified'
              AND eeoc_value != 'NORAM', percent_of_headcount, NULL))                    AS non_noram_headcount,

      SUM(IFF(eeoc_field_name = 'urg_group'
                AND eeoc_value = TRUE, percent_of_hires, NULL))                          AS percent_of_urg_hires,
      SUM(IFF(eeoc_field_name = 'ethnicity'
              AND eeoc_value = 'Black or African American', percent_of_headcount, NULL)) AS percent_of_headcount_black_or_african_american    
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'eeoc_breakout'
    GROUP BY 1,2,3,4

), people_group_metrics AS (

    SELECT
      month_date,
      SUM(IFF(department = 'Recruiting', new_hire_location_factor_rolling_3_month, NULL ))       AS recruiting_new_hire_location_factor,
      SUM(IFF(department = 'People Success', new_hire_location_factor_rolling_3_month, NULL ))   AS people_success_new_hire_location_factor
    FROM rpt
    LEFT JOIN dim_dates
      ON dim_dates.date_actual = rpt.month_date
    WHERE breakout_type = 'department_breakout'
      AND eeoc_field_name = 'no_eeoc'
    GROUP BY 1

), greenhouse_metrics AS (

    SELECT *
    FROM rpt_recruiting_kpis

), final AS (

    SELECT
      basic_metrics.*,
      rpt_promotion.promotion_rate                                      AS company_promotion_rate_excluding_sdr,
      sdr_promotion.promotion_rate                                      AS sdr_promotion_rate,
      rpt_headcount_vs_planned.actual_headcount_vs_planned_headcount,
      rpt_cost_per_hire.rolling_3_month_cost_per_hire,
      rpt_team_members_out_of_comp_band.percent_of_employees_outside_of_band,

      people_group_metrics.recruiting_new_hire_location_factor,
      people_group_metrics.people_success_new_hire_location_factor,

      diversity_metrics.female_headcount,
      diversity_metrics.female_hires,
      diversity_metrics.female_managers,
      diversity_metrics.female_leaders,
      diversity_metrics.non_noram_headcount,
      diversity_metrics.percent_of_headcount_black_or_african_american,
      diversity_metrics.percent_of_urg_hires,
  
      rpt_osat.rolling_3_month_osat,
      rpt_osat.rolling_3_month_respondents/basic_metrics.rolling_3_month_hires AS rolling_3_month_osat_response_rate,
      rpt_osat.rolling_3_month_buddy_score,
      rpt_osat.rolling_3_month_buddy_respondents,

      rpt_recruiting_kpis.offer_acceptance_rate,
      rpt_recruiting_kpis.percent_sourced_hires,
      rpt_recruiting_kpis.percent_outbound_hires,
      rpt_recruiting_kpis.time_to_offer_median,
      rpt_recruiting_kpis.isat,
      rpt_headcount_vs_planned.cumulative_hires_vs_plan

    --% urg
    FROM basic_metrics
    LEFT JOIN diversity_metrics
      ON basic_metrics.month_date = diversity_metrics.month_date
    LEFT JOIN people_group_metrics
      ON basic_metrics.month_date = people_group_metrics.month_date
    LEFT JOIN rpt_osat
      ON basic_metrics.month_date = rpt_osat.completed_month
    LEFT JOIN rpt_headcount_vs_planned
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_headcount_vs_planned.month_date)
      AND rpt_headcount_vs_planned.breakout_type = 'all_company_breakout' 
    LEFT JOIN rpt_recruiting_kpis
      ON basic_metrics.month_date = rpt_recruiting_kpis.month_date
    LEFT JOIN rpt_cost_per_hire
      ON basic_metrics.month_date = rpt_cost_per_hire.hire_month
    LEFT JOIN rpt_promotion
      ON basic_metrics.month_date = rpt_promotion.month_date  
      AND rpt_promotion.field_name = 'company_breakout'
      AND rpt_promotion.field_value = 'Company - Excluding SDR'
    LEFT JOIN rpt_promotion AS sdr_promotion
      ON basic_metrics.month_date = sdr_promotion.month_date  
      AND sdr_promotion.field_name = 'department_grouping_breakout'
      AND sdr_promotion.field_value = 'Sales Development'  
    LEFT JOIN rpt_team_members_out_of_comp_band
      ON basic_metrics.month_date = DATE_TRUNC(month, rpt_team_members_out_of_comp_band.date_actual)  
      AND rpt_team_members_out_of_comp_band.breakout_type = 'company_breakout'
)

SELECT 
  IFF(month_date = DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS current_reporting_month,
  IFF(month_date = DATEADD(month, -2, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS previous_reporting_month,
  IFF(month_date = DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE())), TRUE, FALSE) AS last_year_reporting_month,
  DENSE_RANK() OVER (ORDER BY fiscal_quarter_name DESC) AS rank_fiscal_quarter_desc,
  final.*
FROM final
WHERE month_date BETWEEN DATEADD(month, -13, DATE_TRUNC(month, CURRENT_DATE()))
                     AND DATEADD(month, -1, DATE_TRUNC(month, CURRENT_DATE()))c:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.rpt_people_kpis"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"rpt_people_kpis"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],null,["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","mnpi_exception",{"children":[["$","code",null,{"children":["$","a",null,{"children":"mnpi_exception"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PROD.legacy.rpt_people_kpis"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"123 KB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-10 09:14UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"Main report utilized in automating People KPI deck. Captures KPIs for the past 12 months -- all data is at a company level"}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_PEOPLE_KPIS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"CURRENT_REPORTING_MONTH":{"type":"BOOLEAN","index":1,"name":"CURRENT_REPORTING_MONTH","comment":null,"display_name":"current_reporting_month"},"PREVIOUS_REPORTING_MONTH":{"type":"BOOLEAN","index":2,"name":"PREVIOUS_REPORTING_MONTH","comment":null,"display_name":"previous_reporting_month"},"LAST_YEAR_REPORTING_MONTH":{"type":"BOOLEAN","index":3,"name":"LAST_YEAR_REPORTING_MONTH","comment":null,"display_name":"last_year_reporting_month"},"RANK_FISCAL_QUARTER_DESC":{"type":"NUMBER","index":4,"name":"RANK_FISCAL_QUARTER_DESC","comment":null,"display_name":"rank_fiscal_quarter_desc"},"FISCAL_YEAR":{"type":"NUMBER","index":5,"name":"FISCAL_YEAR","comment":null,"display_name":"fiscal_year"},"FISCAL_QUARTER_NAME":{"type":"TEXT","index":6,"name":"FISCAL_QUARTER_NAME","comment":null,"display_name":"fiscal_quarter_name"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER":{"type":"BOOLEAN","index":7,"name":"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER","comment":null,"display_name":"is_first_day_of_last_month_of_fiscal_quarter"},"MONTH_DATE":{"type":"DATE","index":8,"name":"MONTH_DATE","comment":null,"display_name":"month_date"},"HEADCOUNT_END":{"type":"NUMBER","index":9,"name":"HEADCOUNT_END","comment":null,"display_name":"headcount_end"},"HIRE_COUNT":{"type":"NUMBER","index":10,"name":"HIRE_COUNT","comment":null,"display_name":"hire_count"},"HIRES_FISCAL_YEAR":{"type":"NUMBER","index":11,"name":"HIRES_FISCAL_YEAR","comment":null,"display_name":"hires_fiscal_year"},"ROLLING_3_MONTH_HIRES":{"type":"NUMBER","index":12,"name":"ROLLING_3_MONTH_HIRES","comment":null,"display_name":"rolling_3_month_hires"},"HIRES_FISCAL_YTD":{"type":"NUMBER","index":13,"name":"HIRES_FISCAL_YTD","comment":null,"display_name":"hires_fiscal_ytd"},"RETENTION":{"type":"NUMBER","index":14,"name":"RETENTION","comment":null,"display_name":"retention"},"VOLUNTARY_SEPARATION_RATE":{"type":"NUMBER","index":15,"name":"VOLUNTARY_SEPARATION_RATE","comment":null,"display_name":"voluntary_separation_rate"},"INVOLUNTARY_SEPARATION_RATE":{"type":"NUMBER","index":16,"name":"INVOLUNTARY_SEPARATION_RATE","comment":null,"display_name":"involuntary_separation_rate"},"LOCATION_FACTOR":{"type":"FLOAT","index":17,"name":"LOCATION_FACTOR","comment":null,"display_name":"location_factor"},"NEW_HIRE_LOCATION_FACTOR_ROLLING_3_MONTH":{"type":"FLOAT","index":18,"name":"NEW_HIRE_LOCATION_FACTOR_ROLLING_3_MONTH","comment":null,"display_name":"new_hire_location_factor_rolling_3_month"},"DISCRETIONARY_BONUS_RATE":{"type":"NUMBER","index":19,"name":"DISCRETIONARY_BONUS_RATE","comment":null,"display_name":"discretionary_bonus_rate"},"ROLLING_12_MONTH_PROMOTIONS":{"type":"NUMBER","index":20,"name":"ROLLING_12_MONTH_PROMOTIONS","comment":null,"display_name":"rolling_12_month_promotions"},"ROLLING_12_MONTH_PROMOTIONS_EXCLUDING_SDR":{"type":"NUMBER","index":21,"name":"ROLLING_12_MONTH_PROMOTIONS_EXCLUDING_SDR","comment":null,"display_name":"rolling_12_month_promotions_excluding_sdr"},"ROLLING_12_MONTH_PROMOTION_INCREASE":{"type":"FLOAT","index":22,"name":"ROLLING_12_MONTH_PROMOTION_INCREASE","comment":null,"display_name":"rolling_12_month_promotion_increase"},"ROLLING_12_MONTH_PROMOTION_INCREASE_EXCLUDING_SDR":{"type":"FLOAT","index":23,"name":"ROLLING_12_MONTH_PROMOTION_INCREASE_EXCLUDING_SDR","comment":null,"display_name":"rolling_12_month_promotion_increase_excluding_sdr"},"COMPANY_PROMOTION_RATE_EXCLUDING_SDR":{"type":"NUMBER","index":24,"name":"COMPANY_PROMOTION_RATE_EXCLUDING_SDR","comment":null,"display_name":"company_promotion_rate_excluding_sdr"},"SDR_PROMOTION_RATE":{"type":"NUMBER","index":25,"name":"SDR_PROMOTION_RATE","comment":null,"display_name":"sdr_promotion_rate"},"ACTUAL_HEADCOUNT_VS_PLANNED_HEADCOUNT":{"type":"FLOAT","index":26,"name":"ACTUAL_HEADCOUNT_VS_PLANNED_HEADCOUNT","comment":null,"display_name":"actual_headcount_vs_planned_headcount"},"ROLLING_3_MONTH_COST_PER_HIRE":{"type":"FLOAT","index":27,"name":"ROLLING_3_MONTH_COST_PER_HIRE","comment":null,"display_name":"rolling_3_month_cost_per_hire"},"PERCENT_OF_EMPLOYEES_OUTSIDE_OF_BAND":{"type":"NUMBER","index":28,"name":"PERCENT_OF_EMPLOYEES_OUTSIDE_OF_BAND","comment":null,"display_name":"percent_of_employees_outside_of_band"},"RECRUITING_NEW_HIRE_LOCATION_FACTOR":{"type":"FLOAT","index":29,"name":"RECRUITING_NEW_HIRE_LOCATION_FACTOR","comment":null,"display_name":"recruiting_new_hire_location_factor"},"PEOPLE_SUCCESS_NEW_HIRE_LOCATION_FACTOR":{"type":"FLOAT","index":30,"name":"PEOPLE_SUCCESS_NEW_HIRE_LOCATION_FACTOR","comment":null,"display_name":"people_success_new_hire_location_factor"},"FEMALE_HEADCOUNT":{"type":"NUMBER","index":31,"name":"FEMALE_HEADCOUNT","comment":null,"display_name":"female_headcount"},"FEMALE_HIRES":{"type":"NUMBER","index":32,"name":"FEMALE_HIRES","comment":null,"display_name":"female_hires"},"FEMALE_MANAGERS":{"type":"NUMBER","index":33,"name":"FEMALE_MANAGERS","comment":null,"display_name":"female_managers"},"FEMALE_LEADERS":{"type":"NUMBER","index":34,"name":"FEMALE_LEADERS","comment":null,"display_name":"female_leaders"},"NON_NORAM_HEADCOUNT":{"type":"NUMBER","index":35,"name":"NON_NORAM_HEADCOUNT","comment":null,"display_name":"non_noram_headcount"},"PERCENT_OF_HEADCOUNT_BLACK_OR_AFRICAN_AMERICAN":{"type":"NUMBER","index":36,"name":"PERCENT_OF_HEADCOUNT_BLACK_OR_AFRICAN_AMERICAN","comment":null,"display_name":"percent_of_headcount_black_or_african_american"},"PERCENT_OF_URG_HIRES":{"type":"NUMBER","index":37,"name":"PERCENT_OF_URG_HIRES","comment":null,"display_name":"percent_of_urg_hires"},"ROLLING_3_MONTH_OSAT":{"type":"NUMBER","index":38,"name":"ROLLING_3_MONTH_OSAT","comment":null,"display_name":"rolling_3_month_osat"},"ROLLING_3_MONTH_OSAT_RESPONSE_RATE":{"type":"NUMBER","index":39,"name":"ROLLING_3_MONTH_OSAT_RESPONSE_RATE","comment":null,"display_name":"rolling_3_month_osat_response_rate"},"ROLLING_3_MONTH_BUDDY_SCORE":{"type":"NUMBER","index":40,"name":"ROLLING_3_MONTH_BUDDY_SCORE","comment":null,"display_name":"rolling_3_month_buddy_score"},"ROLLING_3_MONTH_BUDDY_RESPONDENTS":{"type":"NUMBER","index":41,"name":"ROLLING_3_MONTH_BUDDY_RESPONDENTS","comment":null,"display_name":"rolling_3_month_buddy_respondents"},"OFFER_ACCEPTANCE_RATE":{"type":"NUMBER","index":42,"name":"OFFER_ACCEPTANCE_RATE","comment":null,"display_name":"offer_acceptance_rate"},"PERCENT_SOURCED_HIRES":{"type":"NUMBER","index":43,"name":"PERCENT_SOURCED_HIRES","comment":null,"display_name":"percent_sourced_hires"},"PERCENT_OUTBOUND_HIRES":{"type":"NUMBER","index":44,"name":"PERCENT_OUTBOUND_HIRES","comment":null,"display_name":"percent_outbound_hires"},"TIME_TO_OFFER_MEDIAN":{"type":"NUMBER","index":45,"name":"TIME_TO_OFFER_MEDIAN","comment":null,"display_name":"time_to_offer_median"},"ISAT":{"type":"NUMBER","index":46,"name":"ISAT","comment":null,"display_name":"isat"},"CUMULATIVE_HIRES_VS_PLAN":{"type":"FLOAT","index":47,"name":"CUMULATIVE_HIRES_VS_PLAN","comment":null,"display_name":"cumulative_hires_vs_plan"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:14UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":125440,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_people_kpis","raw_sql":"$10","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation","model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation","model.gitlab_snowflake.rpt_headcount_vs_planned","model.gitlab_snowflake.rpt_headcount_vs_planned","model.gitlab_snowflake.rpt_team_members_out_of_comp_band","model.gitlab_snowflake.rpt_team_members_out_of_comp_band","model.gitlab_snowflake.rpt_osat","model.gitlab_snowflake.rpt_osat","model.gitlab_snowflake.rpt_recruiting_kpis","model.gitlab_snowflake.rpt_recruiting_kpis","model.gitlab_snowflake.rpt_cost_per_hire","model.gitlab_snowflake.rpt_cost_per_hire","model.gitlab_snowflake.bamboohr_promotion_rate","model.gitlab_snowflake.bamboohr_promotion_rate"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","rpt_people_kpis"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/rpt_people_kpis.sql","original_file_path":"models/legacy/bamboohr/rpt/rpt_people_kpis.sql","name":"rpt_people_kpis","alias":"rpt_people_kpis","checksum":{"name":"sha256","checksum":"d6950470f4e0e3c90d187019ca517239116da6e8900a01113433df6eafa567ae"},"tags":["mnpi_exception"],"refs":[["dim_date"],["dim_date"],["bamboohr_rpt_headcount_aggregation"],["bamboohr_rpt_headcount_aggregation"],["rpt_headcount_vs_planned"],["rpt_headcount_vs_planned"],["rpt_team_members_out_of_comp_band"],["rpt_team_members_out_of_comp_band"],["rpt_osat"],["rpt_osat"],["rpt_recruiting_kpis"],["rpt_recruiting_kpis"],["rpt_cost_per_hire"],["rpt_cost_per_hire"],["bamboohr_promotion_rate"],["bamboohr_promotion_rate"]],"sources":[],"metrics":[],"description":"Main report utilized in automating People KPI deck. Captures KPIs for the past 12 months -- all data is at a company level","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/rpt_people_kpis.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033758.72106,"compiled_sql":"$11","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_people_kpis","label":"rpt_people_kpis"}}]]}]]}],null,["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_COST_PER_HIRE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"HIRE_MONTH":{"type":"DATE","index":1,"name":"HIRE_MONTH","comment":null,"display_name":"hire_month"},"HIRES":{"type":"NUMBER","index":2,"name":"HIRES","comment":null,"display_name":"hires"},"RECRUITING_DEPARTMENT":{"type":"FLOAT","index":3,"name":"RECRUITING_DEPARTMENT","comment":null,"display_name":"recruiting_department"},"RECRUITING_FEES":{"type":"FLOAT","index":4,"name":"RECRUITING_FEES","comment":null,"display_name":"recruiting_fees"},"RECRUITING_DEPARTMENT_MINUS_OVERLAP":{"type":"FLOAT","index":5,"name":"RECRUITING_DEPARTMENT_MINUS_OVERLAP","comment":null,"display_name":"recruiting_department_minus_overlap"},"REFERRAL_FEES":{"type":"FLOAT","index":6,"name":"REFERRAL_FEES","comment":null,"display_name":"referral_fees"},"TOTAL_EXPENSES":{"type":"FLOAT","index":7,"name":"TOTAL_EXPENSES","comment":null,"display_name":"total_expenses"},"COST_PER_HIRE":{"type":"FLOAT","index":8,"name":"COST_PER_HIRE","comment":null,"display_name":"cost_per_hire"},"ROLLING_3_MONTH_TOTAL_EXPENSES":{"type":"FLOAT","index":9,"name":"ROLLING_3_MONTH_TOTAL_EXPENSES","comment":null,"display_name":"rolling_3_month_total_expenses"},"ROLLING_3_MONTH_HIRES":{"type":"NUMBER","index":10,"name":"ROLLING_3_MONTH_HIRES","comment":null,"display_name":"rolling_3_month_hires"},"ROLLING_3_MONTH_COST_PER_HIRE":{"type":"FLOAT","index":11,"name":"ROLLING_3_MONTH_COST_PER_HIRE","comment":null,"display_name":"rolling_3_month_cost_per_hire"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:13UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":6144,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_cost_per_hire","raw_sql":"$13","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.netsuite_actuals_income_cogs_opex","model.gitlab_snowflake.netsuite_actuals_income_cogs_opex","model.gitlab_snowflake.employee_directory_analysis","model.gitlab_snowflake.employee_directory_analysis"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","rpt_cost_per_hire"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/rpt_cost_per_hire.sql","original_file_path":"models/legacy/bamboohr/rpt/rpt_cost_per_hire.sql","name":"rpt_cost_per_hire","alias":"rpt_cost_per_hire","checksum":{"name":"sha256","checksum":"c60741002b0996ec669b2acdeffb5c2c57d375059f3a9b5d9d65b49d2a44debd"},"tags":["mnpi_exception"],"refs":[["netsuite_actuals_income_cogs_opex"],["netsuite_actuals_income_cogs_opex"],["employee_directory_analysis"],["employee_directory_analysis"]],"sources":[],"metrics":[],"description":"Provides a breakdown by month of the hiring cost, which accounts for recruiting expenses and referral fees.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/rpt_cost_per_hire.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033758.70993,"compiled_sql":"$14","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_cost_per_hire","label":"rpt_cost_per_hire"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"BAMBOOHR_PROMOTION_RATE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"MONTH_DATE":{"type":"DATE","index":1,"name":"month_date","comment":null,"description":"The month for which the rolling metrics apply","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_date"},"FIELD_NAME":{"type":"TEXT","index":2,"name":"field_name","comment":null,"description":"Idenitfies whether the metrics are at the division, department, or comapny level","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"field_name"},"FIELD_VALUE":{"type":"TEXT","index":3,"name":"field_value","comment":null,"description":"Identifies the associated division/department for the field_name","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"field_value"},"HEADCOUNT_END":{"type":"NUMBER","index":4,"name":"headcount_end","comment":null,"description":"The headcount at the end of the month","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end"},"ROLLING_12_MONTH_HEADCOUNT":{"type":"NUMBER","index":5,"name":"rolling_12_month_headcount","comment":null,"description":"Provides the average of the current month and previous 11 month average headcounts (the average headcount for each month is the headcount_start + headcount_end divided by 2).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount"},"TOTAL_PROMOTIONS":{"type":"NUMBER","index":6,"name":"total_promotions","comment":null,"description":"The total promotions over for the rolling 12 months period.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"total_promotions"},"PROMOTION_RATE":{"type":"NUMBER","index":7,"name":"promotion_rate","comment":null,"description":"The promotion rate for the rolling 12 month period.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"promotion_rate"},"AVERAGE_PERCENT_CHANGE_IN_COMP":{"type":"FLOAT","index":8,"name":"average_percent_change_in_comp","comment":null,"description":"The average percent change in comp for the rolling 12 month period. The calculation for percent change can be found in the bamboohr_promotions_xf model.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"average_percent_change_in_comp"},"MEDIAN_PERCENT_CHANGE_CHANGE_IN_COMP":{"type":"FLOAT","index":9,"name":"MEDIAN_PERCENT_CHANGE_CHANGE_IN_COMP","comment":null,"display_name":"median_percent_change_change_in_comp"},"median_percent_change_in_comp":{"name":"median_percent_change_in_comp","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"median_percent_change_in_comp"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:13UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":271872,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_promotion_rate","raw_sql":"$15","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.bamboohr_division_grouping","macro.gitlab_snowflake.bamboohr_department_grouping","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_promotions_xf","model.gitlab_snowflake.bamboohr_promotions_xf","model.gitlab_snowflake.bamboohr_base_mapping","model.gitlab_snowflake.bamboohr_base_mapping","model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation","model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","bamboohr_promotion_rate"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/bamboohr_promotion_rate.sql","original_file_path":"models/legacy/bamboohr/rpt/bamboohr_promotion_rate.sql","name":"bamboohr_promotion_rate","alias":"bamboohr_promotion_rate","checksum":{"name":"sha256","checksum":"7ad46f44e76d903596d6f37555e8493e256e1d406211bdf49d1797fe356644d3"},"tags":[],"refs":[["bamboohr_promotions_xf"],["bamboohr_promotions_xf"],["bamboohr_base_mapping"],["bamboohr_base_mapping"],["bamboohr_rpt_headcount_aggregation"],["bamboohr_rpt_headcount_aggregation"]],"sources":[],"metrics":[],"description":"Displays promotion rate aggregated at the department, division, and company overall level.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/bamboohr_promotion_rate.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.668599,"compiled_sql":"$16","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.bamboohr_promotion_rate","label":"bamboohr_promotion_rate"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_OSAT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"COMPLETED_MONTH":{"type":"DATE","index":1,"name":"COMPLETED_MONTH","comment":null,"display_name":"completed_month"},"OSAT_SCORE":{"type":"NUMBER","index":2,"name":"OSAT_SCORE","comment":null,"display_name":"osat_score"},"BUDDY_EXPERIENCE_SCORE":{"type":"NUMBER","index":3,"name":"BUDDY_EXPERIENCE_SCORE","comment":null,"display_name":"buddy_experience_score"},"TOTAL_RESPONSES":{"type":"NUMBER","index":4,"name":"TOTAL_RESPONSES","comment":null,"display_name":"total_responses"},"TOTAL_BUDDY_SCORE_RESPONSES":{"type":"NUMBER","index":5,"name":"TOTAL_BUDDY_SCORE_RESPONSES","comment":null,"display_name":"total_buddy_score_responses"},"SUM_OF_ROLLING_3_MONTH_SCORE":{"type":"NUMBER","index":6,"name":"SUM_OF_ROLLING_3_MONTH_SCORE","comment":null,"display_name":"sum_of_rolling_3_month_score"},"ROLLING_3_MONTH_RESPONDENTS":{"type":"NUMBER","index":7,"name":"ROLLING_3_MONTH_RESPONDENTS","comment":null,"display_name":"rolling_3_month_respondents"},"SUM_OF_ROLLING_3_MONTH_BUDDY_SCORE":{"type":"NUMBER","index":8,"name":"SUM_OF_ROLLING_3_MONTH_BUDDY_SCORE","comment":null,"display_name":"sum_of_rolling_3_month_buddy_score"},"ROLLING_3_MONTH_BUDDY_RESPONDENTS":{"type":"NUMBER","index":9,"name":"ROLLING_3_MONTH_BUDDY_RESPONDENTS","comment":null,"display_name":"rolling_3_month_buddy_respondents"},"ROLLING_3_MONTH_OSAT":{"type":"NUMBER","index":10,"name":"ROLLING_3_MONTH_OSAT","comment":null,"display_name":"rolling_3_month_osat"},"ROLLING_3_MONTH_BUDDY_SCORE":{"type":"NUMBER","index":11,"name":"ROLLING_3_MONTH_BUDDY_SCORE","comment":null,"display_name":"rolling_3_month_buddy_score"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:09UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":5120,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_osat","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sheetload_osat","model.gitlab_snowflake.sheetload_osat"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","rpt_osat"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/rpt_osat.sql","original_file_path":"models/legacy/bamboohr/rpt/rpt_osat.sql","name":"rpt_osat","alias":"rpt_osat","checksum":{"name":"sha256","checksum":"f69f29e6db864f4dfadeb43c3ad542ca08bb5fb4598a34c708eb9c1ac88e3ed2"},"tags":[],"refs":[["sheetload_osat"],["sheetload_osat"]],"sources":[],"metrics":[],"description":"Breakdown of onboarding buddy score aggregated at the company level","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/rpt_osat.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.7202947,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_osat","label":"rpt_osat"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_HEADCOUNT_VS_PLANNED","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"FISCAL_YEAR":{"type":"NUMBER","index":1,"name":"FISCAL_YEAR","comment":null,"display_name":"fiscal_year"},"MONTH_DATE":{"type":"DATE","index":2,"name":"month_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_date"},"BREAKOUT_TYPE":{"type":"TEXT","index":3,"name":"breakout_type","comment":null,"description":"Identifies if the breakout is at an all company level, division, or department.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"accepted_values","short":"A","label":"Accepted Values: all_company_breakout, department_division_breakout, division_breakout"}],"display_name":"breakout_type"},"DEPARTMENT":{"type":"TEXT","index":4,"name":"department","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"department"},"DIVISION":{"type":"TEXT","index":5,"name":"division","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division"},"PLANNED_HEADCOUNT":{"type":"FLOAT","index":6,"name":"planned_headcount","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"planned_headcount"},"PLANNED_HIRES":{"type":"FLOAT","index":7,"name":"planned_hires","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"planned_hires"},"HEADCOUNT_ACTUAL":{"type":"NUMBER","index":8,"name":"headcount_actual","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"headcount_actual"},"HIRES_ACTUAL":{"type":"NUMBER","index":9,"name":"hires_actual","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"hires_actual"},"ACTUAL_HEADCOUNT_VS_PLANNED_HEADCOUNT":{"type":"FLOAT","index":10,"name":"actual_headcount_vs_planned_headcount","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"actual_headcount_vs_planned_headcount"},"NEW_HIRE":{"type":"NUMBER","index":11,"name":"new_hire","comment":null,"description":"The total number of hires that filled a new hire req","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"new_hire"},"TRANSFERS":{"type":"NUMBER","index":12,"name":"transfers","comment":null,"description":"Team members that with lateral transfer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"transfers"},"BACKFILL":{"type":"NUMBER","index":13,"name":"backfill","comment":null,"description":"Job requsitions that are expected to be filled internally.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"backfill"},"UNIDENTIFIED_JOB_OPENING_TYPE":{"type":"NUMBER","index":14,"name":"unidentified_job_opening_type","comment":null,"description":"The total number of positions that don't have an associated job opening type (note we started capturing this field in 2020.05)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"unidentified_job_opening_type"},"TOTAL_GREENHOUSE_REQS_FILLED":{"type":"NUMBER","index":15,"name":"total_greenhouse_reqs_filled","comment":null,"description":"New hires plus transfers + backfill + unidentified_job_opening_type","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"total_greenhouse_reqs_filled"},"TOTAL_HIRES_GREENHOUSE":{"type":"NUMBER","index":16,"name":"total_hires_greenhouse","comment":null,"description":"New hires plus backfills based on greenhouse data.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"total_hires_greenhouse"},"CUMULATIVE_PLANNED_HIRES":{"type":"FLOAT","index":17,"name":"CUMULATIVE_PLANNED_HIRES","comment":null,"display_name":"cumulative_planned_hires"},"CUMULATIVE_HIRES_ACTUAL":{"type":"NUMBER","index":18,"name":"CUMULATIVE_HIRES_ACTUAL","comment":null,"display_name":"cumulative_hires_actual"},"CUMULATIVE_HIRES_VS_PLAN":{"type":"FLOAT","index":19,"name":"CUMULATIVE_HIRES_VS_PLAN","comment":null,"display_name":"cumulative_hires_vs_plan"},"new_position_filled_internally":{"name":"new_position_filled_internally","description":"New greenhouse job position that was filled with an internal candidate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"new_position_filled_internally"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:13UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":241152,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_headcount_vs_planned","raw_sql":"$19","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation","model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation","model.gitlab_snowflake.hire_replan_xf","model.gitlab_snowflake.hire_replan_xf","seed.gitlab_snowflake.department_name_changes","seed.gitlab_snowflake.department_name_changes","model.gitlab_snowflake.greenhouse_hires","model.gitlab_snowflake.greenhouse_hires"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","rpt_headcount_vs_planned"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/rpt_headcount_vs_planned.sql","original_file_path":"models/legacy/bamboohr/rpt/rpt_headcount_vs_planned.sql","name":"rpt_headcount_vs_planned","alias":"rpt_headcount_vs_planned","checksum":{"name":"sha256","checksum":"c6b382529365e710f3abb255ac488cd110e21987ca22e17c6957006a55d2fb8a"},"tags":[],"refs":[["dim_date"],["dim_date"],["bamboohr_rpt_headcount_aggregation"],["bamboohr_rpt_headcount_aggregation"],["hire_replan_xf"],["hire_replan_xf"],["department_name_changes"],["department_name_changes"],["greenhouse_hires"],["greenhouse_hires"]],"sources":[],"metrics":[],"description":"Combines the headcount and hire plan model to actual headcount and hires.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/rpt_headcount_vs_planned.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.7195225,"compiled_sql":"$1a","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_headcount_vs_planned","label":"rpt_headcount_vs_planned"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_TEAM_MEMBERS_OUT_OF_COMP_BAND","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"UNIQUE_KEY":{"type":"TEXT","index":1,"name":"unique_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"unique_key"},"BREAKOUT_TYPE":{"type":"TEXT","index":2,"name":"breakout_type","comment":null,"description":"Identifies if the columns are aggregated at the division, department or company level.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"breakout_type"},"DIVISION":{"type":"TEXT","index":3,"name":"division","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division"},"DEPARTMENT":{"type":"TEXT","index":4,"name":"department","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"department"},"DATE_ACTUAL":{"type":"DATE","index":5,"name":"date_actual","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"date_actual"},"SUM_WEIGHTED_DEVIATED_FROM_COMP_CALC":{"type":"NUMBER","index":6,"name":"sum_weighted_deviated_from_comp_calc","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sum_weighted_deviated_from_comp_calc"},"CURRENT_EMPLOYEES":{"type":"NUMBER","index":7,"name":"current_employees","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"current_employees"},"PERCENT_OF_EMPLOYEES_OUTSIDE_OF_BAND":{"type":"NUMBER","index":8,"name":"percent_of_employees_outside_of_band","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_employees_outside_of_band"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:11UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":360448,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_team_members_out_of_comp_band","raw_sql":"$1b","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.max_date_in_bamboo_analyses","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.comp_band_deviation_snapshots","model.gitlab_snowflake.comp_band_deviation_snapshots","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","rpt_team_members_out_of_comp_band"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/rpt_team_members_out_of_comp_band.sql","original_file_path":"models/legacy/bamboohr/rpt/rpt_team_members_out_of_comp_band.sql","name":"rpt_team_members_out_of_comp_band","alias":"rpt_team_members_out_of_comp_band","checksum":{"name":"sha256","checksum":"f800cc9c47326cd8cd46b66941774734b0e62eb2849f989b28857008c8b4b361"},"tags":[],"refs":[["employee_directory_intermediate"],["employee_directory_intermediate"],["comp_band_deviation_snapshots"],["comp_band_deviation_snapshots"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"This calculates the weighted number of team members outside of the compensation band. From the Comp Model (SheetLoad) we get how far from the top of the comp band team members are. Then we use the weighting model utilized by the Comp Team (the case when statement in the `joined` CTE) based on how far over the top of the band we are. The sum of the weights are divided by the total number of active team members to create this KPI. We only care about the state of this number on the last day of a calendar month. This model is used for reporting purposes and is broken out by division, department, and company by filtering on breakout_type to get to the grain needed. THIS MODEL SHOULD NOT BE CONSUMED FOR ANY ANALYSIS PRIOR TO SEPTERMBER 2019 and between May - September 2020.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/rpt_team_members_out_of_comp_band.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.7261343,"compiled_sql":"$1c","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_team_members_out_of_comp_band","label":"rpt_team_members_out_of_comp_band"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_DATE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_ID":{"type":"NUMBER","index":1,"name":"date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"date_id"},"DATE_DAY":{"type":"DATE","index":2,"name":"date_day","comment":null,"description":"Calendar date, e.g. '2019-02-02'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"date_day"},"DATE_ACTUAL":{"type":"DATE","index":3,"name":"date_actual","comment":null,"description":"Matches `date_day`, duplicated for ease of use","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"date_actual"},"DAY_NAME":{"type":"TEXT","index":4,"name":"day_name","comment":null,"description":"Abbreviated name of the day of the week, e.g. 'Sat' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_name"},"MONTH_ACTUAL":{"type":"NUMBER","index":5,"name":"month_actual","comment":null,"description":"Number for the calendar month of the year, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_actual"},"YEAR_ACTUAL":{"type":"NUMBER","index":6,"name":"year_actual","comment":null,"description":"Calendar year, e.g. '2019' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"year_actual"},"QUARTER_ACTUAL":{"type":"NUMBER","index":7,"name":"quarter_actual","comment":null,"description":"Calendar quarter, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarter_actual"},"DAY_OF_WEEK":{"type":"NUMBER","index":8,"name":"day_of_week","comment":null,"description":"Number of the day of the week, with Sunday = 1 and Saturday = 7","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_week"},"FIRST_DAY_OF_WEEK":{"type":"DATE","index":9,"name":"first_day_of_week","comment":null,"description":"Calendar date of the first Sunday of that week, e.g. '2019-01-27' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_week"},"WEEK_OF_YEAR":{"type":"NUMBER","index":10,"name":"week_of_year","comment":null,"description":"Calendar week of year, e.g. '5' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"week_of_year"},"DAY_OF_MONTH":{"type":"NUMBER","index":11,"name":"day_of_month","comment":null,"description":"Day Number of the month, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_month"},"DAY_OF_QUARTER":{"type":"NUMBER","index":12,"name":"day_of_quarter","comment":null,"description":"Day Number from the start of the calendar quarter, e.g. '33' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_quarter"},"DAY_OF_YEAR":{"type":"NUMBER","index":13,"name":"day_of_year","comment":null,"description":"Day Number from the start of the calendar year, e.g. '33' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_year"},"FISCAL_YEAR":{"type":"NUMBER","index":14,"name":"fiscal_year","comment":null,"description":"Fiscal year for the date, e.g. '2020' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_year"},"FISCAL_QUARTER":{"type":"TEXT","index":15,"name":"fiscal_quarter","comment":null,"description":"Fiscal quarter for the date, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter"},"DAY_OF_FISCAL_QUARTER":{"type":"NUMBER","index":16,"name":"day_of_fiscal_quarter","comment":null,"description":"Day Number from the start of the fiscal quarter, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_fiscal_quarter"},"DAY_OF_FISCAL_YEAR":{"type":"NUMBER","index":17,"name":"day_of_fiscal_year","comment":null,"description":"Day Number from the start of the fiscal year, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_fiscal_year"},"MONTH_NAME":{"type":"TEXT","index":18,"name":"month_name","comment":null,"description":"The full month name for any calendar month, e.g. 'February' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_name"},"FIRST_DAY_OF_MONTH":{"type":"DATE","index":19,"name":"first_day_of_month","comment":null,"description":"The first day of a calendar month, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_month"},"LAST_DAY_OF_MONTH":{"type":"DATE","index":20,"name":"last_day_of_month","comment":null,"description":"The last day of a calendar month, e.g. '2019-02-28' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_month"},"FIRST_DAY_OF_YEAR":{"type":"DATE","index":21,"name":"first_day_of_year","comment":null,"description":"The first day of a calendar year, e.g. '2019-01-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_year"},"LAST_DAY_OF_YEAR":{"type":"DATE","index":22,"name":"last_day_of_year","comment":null,"description":"The last day of a calendar year, e.g. '2019-12-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_year"},"FIRST_DAY_OF_QUARTER":{"type":"DATE","index":23,"name":"first_day_of_quarter","comment":null,"description":"The first day of a calendar quarter, e.g. '2019-01-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_quarter"},"LAST_DAY_OF_QUARTER":{"type":"DATE","index":24,"name":"last_day_of_quarter","comment":null,"description":"The last day of a calendar quarter, e.g. '2019-03-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_quarter"},"FIRST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":25,"name":"first_day_of_fiscal_quarter","comment":null,"description":"The first day of the fiscal quarter, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_quarter"},"LAST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":26,"name":"last_day_of_fiscal_quarter","comment":null,"description":"The last day of the fiscal quarter, e.g. '2019-04-30' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_fiscal_quarter"},"FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":27,"name":"first_day_of_fiscal_year","comment":null,"description":"The first day of the fiscal year, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_year"},"LAST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":28,"name":"last_day_of_fiscal_year","comment":null,"description":"The last day of the fiscal year, e.g. '2020-01-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_fiscal_year"},"WEEK_OF_FISCAL_YEAR":{"type":"NUMBER","index":29,"name":"week_of_fiscal_year","comment":null,"description":"The week number for the fiscal year, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"week_of_fiscal_year"},"MONTH_OF_FISCAL_YEAR":{"type":"NUMBER","index":30,"name":"month_of_fiscal_year","comment":null,"description":"The month number for the fiscal year, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_of_fiscal_year"},"LAST_DAY_OF_WEEK":{"type":"DATE","index":31,"name":"last_day_of_week","comment":null,"description":"The Saturday of the week, e.g. '2019-02-02' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_week"},"QUARTER_NAME":{"type":"TEXT","index":32,"name":"quarter_name","comment":null,"description":"The name of the calendar quarter, e.g. '2019-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarter_name"},"FISCAL_QUARTER_NAME":{"type":"TEXT","index":33,"name":"fiscal_quarter_name","comment":null,"description":"The name of the fiscal quarter, e.g '2020-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":34,"name":"fiscal_quarter_name_fy","comment":null,"description":"The name of the fiscal quarter, e.g 'FY20-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name_fy"},"FISCAL_QUARTER_NUMBER_ABSOLUTE":{"type":"NUMBER","index":35,"name":"fiscal_quarter_number_absolute","comment":null,"description":"Monotonically increasing integer for each fiscal quarter. This allows for comparing the relative order of fiscal quarters.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_number_absolute"},"FISCAL_MONTH_NAME":{"type":"TEXT","index":36,"name":"fiscal_month_name","comment":null,"description":"The name of the fiscal month, e.g '2020-Feb' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_month_name"},"FISCAL_MONTH_NAME_FY":{"type":"TEXT","index":37,"name":"fiscal_month_name_fy","comment":null,"description":"The name of the fiscal month, e.g 'FY20-Feb' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_month_name_fy"},"HOLIDAY_DESC":{"type":"TEXT","index":38,"name":"holiday_desc","comment":null,"description":"The name of the holiday, if applicable","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"holiday_desc"},"IS_HOLIDAY":{"type":"BOOLEAN","index":39,"name":"is_holiday","comment":null,"description":"Whether or not it is a holiday","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_holiday"},"LAST_MONTH_OF_FISCAL_QUARTER":{"type":"DATE","index":40,"name":"last_month_of_fiscal_quarter","comment":null,"description":"Date indicating last month of fiscal quarter e.g '2020-04-01' for 2020-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_month_of_fiscal_quarter"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER":{"type":"BOOLEAN","index":41,"name":"is_first_day_of_last_month_of_fiscal_quarter","comment":null,"description":"Flag indicating date that is the first day of last month of fiscal quarter. E.g TRUE for '2020-04-01'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_day_of_last_month_of_fiscal_quarter"},"LAST_MONTH_OF_FISCAL_YEAR":{"type":"DATE","index":42,"name":"last_month_of_fiscal_year","comment":null,"description":"Date indicating last month of fiscal year e.g '2021-01-01' for 2020-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_month_of_fiscal_year"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR":{"type":"BOOLEAN","index":43,"name":"is_first_day_of_last_month_of_fiscal_year","comment":null,"description":"Flag indicating date that is the first day of last month of fiscal year. E.g TRUE for '2021-01-01'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_day_of_last_month_of_fiscal_year"},"SNAPSHOT_DATE_FPA":{"type":"DATE","index":44,"name":"snapshot_date_fpa","comment":null,"description":"8th calendar day of a month used for FP&A snapshots","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"snapshot_date_fpa"},"SNAPSHOT_DATE_BILLINGS":{"type":"DATE","index":45,"name":"snapshot_date_billings","comment":null,"description":"45 calendar day after a month begins used for Billings snapshots","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"snapshot_date_billings"},"DAYS_IN_MONTH_COUNT":{"type":"NUMBER","index":46,"name":"days_in_month_count","comment":null,"description":"Number of calendar days in the given month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_month_count"},"WEEK_OF_MONTH_NORMALISED":{"type":"NUMBER","index":47,"name":"WEEK_OF_MONTH_NORMALISED","comment":null,"display_name":"week_of_month_normalised"},"DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":48,"name":"DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"day_of_fiscal_quarter_normalised"},"WEEK_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":49,"name":"WEEK_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"week_of_fiscal_quarter_normalised"},"DAY_OF_FISCAL_YEAR_NORMALISED":{"type":"NUMBER","index":50,"name":"DAY_OF_FISCAL_YEAR_NORMALISED","comment":null,"display_name":"day_of_fiscal_year_normalised"},"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK":{"type":"NUMBER","index":51,"name":"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK","comment":null,"display_name":"is_first_day_of_fiscal_quarter_week"},"DAYS_UNTIL_LAST_DAY_OF_MONTH":{"type":"NUMBER","index":52,"name":"DAYS_UNTIL_LAST_DAY_OF_MONTH","comment":null,"display_name":"days_until_last_day_of_month"},"CURRENT_DATE_ACTUAL":{"type":"DATE","index":53,"name":"CURRENT_DATE_ACTUAL","comment":null,"display_name":"current_date_actual"},"CURRENT_FISCAL_YEAR":{"type":"NUMBER","index":54,"name":"CURRENT_FISCAL_YEAR","comment":null,"display_name":"current_fiscal_year"},"CURRENT_FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":55,"name":"CURRENT_FIRST_DAY_OF_FISCAL_YEAR","comment":null,"display_name":"current_first_day_of_fiscal_year"},"CURRENT_FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":56,"name":"CURRENT_FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"current_fiscal_quarter_name_fy"},"CURRENT_FIRST_DAY_OF_MONTH":{"type":"DATE","index":57,"name":"CURRENT_FIRST_DAY_OF_MONTH","comment":null,"display_name":"current_first_day_of_month"},"CREATED_BY":{"type":"TEXT","index":58,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":59,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":60,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":61,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":62,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":63,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 23:06UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":837632,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_date","raw_sql":"{{ config({\n    \"alias\": \"dim_date\"\n}) }}\n\nWITH dates AS (\n\n  SELECT\n    {{ dbt_utils.star(\n           from=ref('prep_date'), \n           except=['CREATED_BY','UPDATED_BY','MODEL_CREATED_DATE','MODEL_UPDATED_DATE','DBT_UPDATED_AT','DBT_CREATED_AT']\n           ) \n      }}\n  FROM {{ ref('prep_date') }}\n\n), final AS (\n\n  SELECT\n    {{ get_date_id('date_actual') }}                                AS date_id,\n    *\n  FROM dates\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@msendal\",\n    updated_by=\"@pempey\",\n    created_date=\"2020-06-01\",\n    updated_date=\"2023-01-09\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date"]},"config":{"enabled":true,"alias":"dim_date","schema":"common","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_date"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_date.sql","original_file_path":"models/common/dimensions_shared/dim_date.sql","name":"dim_date","alias":"dim_date","checksum":{"name":"sha256","checksum":"d2d82ff12c2a5541fc719664fdbab66bec108395c3e6b2549434b0f07c9bd080"},"tags":[],"refs":[["prep_date"],["prep_date"],["prep_date"],["prep_date"]],"sources":[],"metrics":[],"description":"Dimensional table representing both calendar year and fiscal year date details.\n\nThe grain of the table is a calendar day.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_date.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","alias":"dim_date"},"created_at":1689033750.6328864,"compiled_sql":"$1d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_date","label":"dim_date"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_RECRUITING_KPIS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"MONTH_DATE":{"type":"TIMESTAMP_NTZ","index":1,"name":"MONTH_DATE","comment":null,"display_name":"month_date"},"PROSPECTED":{"type":"NUMBER","index":2,"name":"PROSPECTED","comment":null,"display_name":"prospected"},"PROSPECT_TO_REVIEW":{"type":"NUMBER","index":3,"name":"PROSPECT_TO_REVIEW","comment":null,"display_name":"prospect_to_review"},"PROSPECT_TO_SCREEN":{"type":"NUMBER","index":4,"name":"PROSPECT_TO_SCREEN","comment":null,"display_name":"prospect_to_screen"},"PROSPECT_TO_HIRE":{"type":"NUMBER","index":5,"name":"PROSPECT_TO_HIRE","comment":null,"display_name":"prospect_to_hire"},"PROSPECT_TO_DROPOUT":{"type":"NUMBER","index":6,"name":"PROSPECT_TO_DROPOUT","comment":null,"display_name":"prospect_to_dropout"},"APP_REVIEWED":{"type":"NUMBER","index":7,"name":"APP_REVIEWED","comment":null,"display_name":"app_reviewed"},"REVIEW_TO_SCREEN":{"type":"NUMBER","index":8,"name":"REVIEW_TO_SCREEN","comment":null,"display_name":"review_to_screen"},"REVIEW_TO_HIRE":{"type":"NUMBER","index":9,"name":"REVIEW_TO_HIRE","comment":null,"display_name":"review_to_hire"},"SCREEN":{"type":"NUMBER","index":10,"name":"SCREEN","comment":null,"display_name":"screen"},"SCREEN_TO_INTERVIEW":{"type":"NUMBER","index":11,"name":"SCREEN_TO_INTERVIEW","comment":null,"display_name":"screen_to_interview"},"SCREEN_TO_HIRE":{"type":"NUMBER","index":12,"name":"SCREEN_TO_HIRE","comment":null,"display_name":"screen_to_hire"},"TEAM_INTERVIEW":{"type":"NUMBER","index":13,"name":"TEAM_INTERVIEW","comment":null,"display_name":"team_interview"},"INTERVIEW_TO_HIRE":{"type":"NUMBER","index":14,"name":"INTERVIEW_TO_HIRE","comment":null,"display_name":"interview_to_hire"},"INTERVIEW_TO_REJECT":{"type":"NUMBER","index":15,"name":"INTERVIEW_TO_REJECT","comment":null,"display_name":"interview_to_reject"},"EXECUTIVE_INTERVIEW":{"type":"NUMBER","index":16,"name":"EXECUTIVE_INTERVIEW","comment":null,"display_name":"executive_interview"},"EXEC_INTERVIEW_TO_HIRE":{"type":"NUMBER","index":17,"name":"EXEC_INTERVIEW_TO_HIRE","comment":null,"display_name":"exec_interview_to_hire"},"REFERENCE_CHECK":{"type":"NUMBER","index":18,"name":"REFERENCE_CHECK","comment":null,"display_name":"reference_check"},"CANDIDATE_DROPOUT":{"type":"NUMBER","index":19,"name":"CANDIDATE_DROPOUT","comment":null,"display_name":"candidate_dropout"},"OFFER":{"type":"NUMBER","index":20,"name":"OFFER","comment":null,"display_name":"offer"},"OFFER_ACCEPTANCE_RATE":{"type":"NUMBER","index":21,"name":"OFFER_ACCEPTANCE_RATE","comment":null,"display_name":"offer_acceptance_rate"},"HIRED":{"type":"NUMBER","index":22,"name":"HIRED","comment":null,"display_name":"hired"},"HIRES_EXCLUDING_TRANSFERS":{"type":"NUMBER","index":23,"name":"HIRES_EXCLUDING_TRANSFERS","comment":null,"display_name":"hires_excluding_transfers"},"TIME_TO_OFFER_MEDIAN":{"type":"NUMBER","index":24,"name":"TIME_TO_OFFER_MEDIAN","comment":null,"display_name":"time_to_offer_median"},"SOURCED_CANDIDATE":{"type":"NUMBER","index":25,"name":"SOURCED_CANDIDATE","comment":null,"display_name":"sourced_candidate"},"PERCENT_SOURCED_HIRES":{"type":"NUMBER","index":26,"name":"PERCENT_SOURCED_HIRES","comment":null,"display_name":"percent_sourced_hires"},"OUTBOUND_CANDIDATE":{"type":"NUMBER","index":27,"name":"OUTBOUND_CANDIDATE","comment":null,"display_name":"outbound_candidate"},"PERCENT_OUTBOUND_HIRES":{"type":"NUMBER","index":28,"name":"PERCENT_OUTBOUND_HIRES","comment":null,"display_name":"percent_outbound_hires"},"ISAT":{"type":"NUMBER","index":29,"name":"ISAT","comment":null,"display_name":"isat"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:14UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":89088,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_recruiting_kpis","raw_sql":"$1e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.greenhouse_stage_analysis","model.gitlab_snowflake.greenhouse_stage_analysis","model.gitlab_snowflake.rpt_interviewee_satisfaction_isat","model.gitlab_snowflake.rpt_interviewee_satisfaction_isat"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","greenhouse","rpt","rpt_recruiting_kpis"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/greenhouse/rpt/rpt_recruiting_kpis.sql","original_file_path":"models/legacy/greenhouse/rpt/rpt_recruiting_kpis.sql","name":"rpt_recruiting_kpis","alias":"rpt_recruiting_kpis","checksum":{"name":"sha256","checksum":"5dedd6e7d074dc196c51b74c2b97ff0b665764b2298c64f4468e18b6cc893166"},"tags":[],"refs":[["greenhouse_stage_analysis"],["greenhouse_stage_analysis"],["rpt_interviewee_satisfaction_isat"],["rpt_interviewee_satisfaction_isat"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/legacy/greenhouse/rpt/rpt_recruiting_kpis.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033719.6173003,"compiled_sql":"$1f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_recruiting_kpis","label":"rpt_recruiting_kpis"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"BAMBOOHR_RPT_HEADCOUNT_AGGREGATION","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"MONTH_DATE":{"type":"DATE","index":1,"name":"month_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_date"},"IS_LAST_MONTH":{"type":"BOOLEAN","index":2,"name":"IS_LAST_MONTH","comment":null,"display_name":"is_last_month"},"BREAKOUT_TYPE":{"type":"TEXT","index":3,"name":"breakout_type","comment":null,"description":"This identifies the breakout of the data.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"accepted_values","short":"A","label":"Accepted Values: all_attributes_breakout, kpi_breakout, eeoc_breakout, division_breakout, department_breakout, division_group_breakout"}],"display_name":"breakout_type"},"DEPARTMENT":{"type":"TEXT","index":4,"name":"department","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"department"},"DIVISION":{"type":"TEXT","index":5,"name":"division","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division"},"JOB_ROLE":{"type":"TEXT","index":6,"name":"JOB_ROLE","comment":null,"display_name":"job_role"},"JOB_GRADE":{"type":"TEXT","index":7,"name":"JOB_GRADE","comment":null,"display_name":"job_grade"},"EEOC_FIELD_NAME":{"type":"TEXT","index":8,"name":"eeoc_field_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eeoc_field_name"},"EEOC_VALUE":{"type":"TEXT","index":9,"name":"eeoc_value","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eeoc_value"},"HEADCOUNT_START":{"type":"NUMBER","index":10,"name":"headcount_start","comment":null,"description":"Provides headcount at start of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start"},"HEADCOUNT_START_EXCLUDING_SDR":{"type":"NUMBER","index":11,"name":"headcount_start_excluding_sdr","comment":null,"description":"Headcount at start of month not including the Sales Development department (used for promotion calculation)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start_excluding_sdr"},"HEADCOUNT_END":{"type":"NUMBER","index":12,"name":"headcount_end","comment":null,"description":"Provides headcount on the last day of the month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end"},"HEADCOUNT_END_EXCLUDING_SDR":{"type":"NUMBER","index":13,"name":"headcount_end_excluding_sdr","comment":null,"description":"Headcount not including the Sales Development department (used for promotion calculation)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_excluding_sdr"},"HEADCOUNT_AVERAGE":{"type":"NUMBER","index":14,"name":"headcount_average","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average"},"HEADCOUNT_AVERAGE_EXCLUDING_SDR":{"type":"NUMBER","index":15,"name":"headcount_average_excluding_sdr","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average_excluding_sdr"},"HIRE_COUNT":{"type":"NUMBER","index":16,"name":"hire_count","comment":null,"description":"Provides the total number of employees hired for a given month as associated to the diversity_field and aggregation_type.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_count"},"SEPARATION_COUNT":{"type":"NUMBER","index":17,"name":"separation_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separation_count"},"VOLUNTARY_SEPARATION_COUNT":{"type":"NUMBER","index":18,"name":"voluntary_separation_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"voluntary_separation_count"},"INVOLUNTARY_SEPARATION_COUNT":{"type":"NUMBER","index":19,"name":"involuntary_separation_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"involuntary_separation_count"},"ROLLING_12_MONTH_HEADCOUNT":{"type":"NUMBER","index":20,"name":"rolling_12_month_headcount","comment":null,"description":"Provides the average of the current month and previous 11 month average headcounts (the average headcount for each month is the headcount_start + headcount_end divided by 2).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount"},"ROLLING_12_MONTH_HEADCOUNT_EXCLUDING_SDR":{"type":"NUMBER","index":21,"name":"rolling_12_month_headcount_excluding_sdr","comment":null,"description":"Provides the average of the current month and previous 11 month average headcounts excluding the Sales Development department (the average headcount for each month is the headcount_start + headcount_end divided by 2).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount_excluding_sdr"},"ROLLING_12_MONTH_SEPARATIONS":{"type":"NUMBER","index":22,"name":"rolling_12_month_separations","comment":null,"description":"Provides the total number of employees separated for the current month and previous 11 months.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_separations"},"ROLLING_12_MONTH_VOLUNTARY_SEPARATIONS":{"type":"NUMBER","index":23,"name":"rolling_12_month_voluntary_separations","comment":null,"description":"Provides the total number of the employees separated voluntarily for the current month and previous 11 months.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_voluntary_separations"},"ROLLING_12_MONTH_INVOLUNTARY_SEPARATIONS":{"type":"NUMBER","index":24,"name":"rolling_12_month_involuntary_separations","comment":null,"description":"Provides the total number of the employees separated voluntarily for the current month and previous 11 months.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_involuntary_separations"},"VOLUNTARY_SEPARATION_RATE":{"type":"NUMBER","index":25,"name":"voluntary_separation_rate","comment":null,"description":"Is equal to the rolling_12_month_voluntary_separations dividied by rolling_12_month_headcount.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"voluntary_separation_rate"},"INVOLUNTARY_SEPARATION_RATE":{"type":"NUMBER","index":26,"name":"involuntary_separation_rate","comment":null,"description":"Is equal to the rolling_12_month_involuntary_separations divided by rolling_12_month_headcount.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"involuntary_separation_rate"},"RETENTION":{"type":"NUMBER","index":27,"name":"retention","comment":null,"description":"Is equal to 1 - (rolling_12_month_separations divided by rolling_12_month_headcount). Note - in the case the rolling_12_month_headcount is less than the rolling_12_month_separations, retention will appear as null.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"retention"},"HEADCOUNT_END_LEADER":{"type":"NUMBER","index":28,"name":"headcount_end_leader","comment":null,"description":"A senior leader is defined as anyone with a job grade of 11, 12, or CXO that has direct reports, with the exception of employees that are on leave, in which case we use the job grade criteria only.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_leader"},"HEADCOUNT_LEADER_AVERAGE":{"type":"NUMBER","index":29,"name":"headcount_leader_average","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_leader_average"},"HIRED_LEADERS":{"type":"NUMBER","index":30,"name":"hired_leaders","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_leaders"},"SEPARATED_LEADERS":{"type":"NUMBER","index":31,"name":"separated_leaders","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_leaders"},"ROLLING_12_MONTH_HEADCOUNT_LEADER":{"type":"NUMBER","index":32,"name":"rolling_12_month_headcount_leader","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount_leader"},"ROLLING_12_MONTH_SEPARATIONS_LEADER":{"type":"NUMBER","index":33,"name":"rolling_12_month_separations_leader","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_separations_leader"},"RETENTION_LEADER":{"type":"NUMBER","index":34,"name":"retention_leader","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"retention_leader"},"HEADCOUNT_END_MANAGER":{"type":"NUMBER","index":35,"name":"headcount_end_manager","comment":null,"description":"A manager is defined as anyone that has a bamboohr job_role of `Manager` or a job_grade of 10, in addition to has direct reports.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_manager"},"HEADCOUNT_MANAGER_AVERAGE":{"type":"NUMBER","index":36,"name":"headcount_manager_average","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_manager_average"},"HIRED_MANAGER":{"type":"NUMBER","index":37,"name":"hired_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_manager"},"SEPARATED_MANAGER":{"type":"NUMBER","index":38,"name":"separated_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_manager"},"ROLLING_12_MONTH_HEADCOUNT_MANAGER":{"type":"NUMBER","index":39,"name":"rolling_12_month_headcount_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount_manager"},"ROLLING_12_MONTH_SEPARATIONS_MANAGER":{"type":"NUMBER","index":40,"name":"rolling_12_month_separations_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_separations_manager"},"RETENTION_MANAGER":{"type":"NUMBER","index":41,"name":"retention_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"retention_manager"},"HEADCOUNT_END_MANAGEMENT":{"type":"NUMBER","index":42,"name":"headcount_end_management","comment":null,"description":"Management is defined as anyone in a manager or senior leader role based on the field job_role_modified.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_management"},"HEADCOUNT_MANAGEMENT_AVERAGE":{"type":"NUMBER","index":43,"name":"headcount_management_average","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_management_average"},"HIRED_MANAGEMENT":{"type":"NUMBER","index":44,"name":"hired_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_management"},"SEPARATED_MANAGEMENT":{"type":"NUMBER","index":45,"name":"separated_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_management"},"ROLLING_12_MONTH_HEADCOUNT_MANAGEMENT":{"type":"NUMBER","index":46,"name":"rolling_12_month_headcount_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount_management"},"ROLLING_12_MONTH_SEPARATIONS_MANAGEMENT":{"type":"NUMBER","index":47,"name":"rolling_12_month_separations_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_separations_management"},"RETENTION_MANAGEMENT":{"type":"NUMBER","index":48,"name":"RETENTION_MANAGEMENT","comment":null,"display_name":"retention_management"},"HEADCOUNT_END_CONTRIBUTOR":{"type":"NUMBER","index":49,"name":"headcount_end_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_contributor"},"HEADCOUNT_CONTRIBUTOR":{"type":"NUMBER","index":50,"name":"headcount_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_contributor"},"HIRED_CONTRIBUTOR":{"type":"NUMBER","index":51,"name":"hired_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_contributor"},"SEPARATED_CONTRIBUTOR":{"type":"NUMBER","index":52,"name":"separated_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_contributor"},"PERCENT_OF_HEADCOUNT":{"type":"NUMBER","index":53,"name":"percent_of_headcount","comment":null,"description":"This is based on headcount at end of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_headcount"},"PERCENT_OF_HIRES":{"type":"NUMBER","index":54,"name":"percent_of_hires","comment":null,"description":"This is based on headcount at end of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_hires"},"PERCENT_OF_HEADCOUNT_LEADERS":{"type":"NUMBER","index":55,"name":"percent_of_headcount_leaders","comment":null,"description":"This is based on headcount at end of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_headcount_leaders"},"PERCENT_OF_HEADCOUNT_MANAGER":{"type":"NUMBER","index":56,"name":"percent_of_headcount_manager","comment":null,"description":"This is based on headcount at end of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_headcount_manager"},"PERCENT_OF_HEADCOUNT_MANAGEMENT":{"type":"NUMBER","index":57,"name":"PERCENT_OF_HEADCOUNT_MANAGEMENT","comment":null,"display_name":"percent_of_headcount_management"},"PERCENT_OF_HEADCOUNT_CONTRIBUTOR":{"type":"NUMBER","index":58,"name":"percent_of_headcount_contributor","comment":null,"description":"This is based on headcount at end of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_headcount_contributor"},"ROLLING_12_MONTH_PROMOTIONS":{"type":"NUMBER","index":59,"name":"rolling_12_month_promotions","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_promotions"},"ROLLING_12_MONTH_PROMOTIONS_EXCLUDING_SDR":{"type":"NUMBER","index":60,"name":"rolling_12_month_promotions_excluding_sdr","comment":null,"description":"Promotion count excluding the Sales Development department","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_promotions_excluding_sdr"},"ROLLING_12_MONTH_PROMOTION_INCREASE":{"type":"FLOAT","index":61,"name":"ROLLING_12_MONTH_PROMOTION_INCREASE","comment":null,"display_name":"rolling_12_month_promotion_increase"},"ROLLING_12_MONTH_PROMOTION_INCREASE_EXCLUDING_SDR":{"type":"FLOAT","index":62,"name":"ROLLING_12_MONTH_PROMOTION_INCREASE_EXCLUDING_SDR","comment":null,"display_name":"rolling_12_month_promotion_increase_excluding_sdr"},"LOCATION_FACTOR":{"type":"FLOAT","index":63,"name":"location_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"location_factor"},"NEW_HIRE_LOCATION_FACTOR_ROLLING_3_MONTH":{"type":"FLOAT","index":64,"name":"NEW_HIRE_LOCATION_FACTOR_ROLLING_3_MONTH","comment":null,"display_name":"new_hire_location_factor_rolling_3_month"},"DISCRETIONARY_BONUS":{"type":"NUMBER","index":65,"name":"discretionary_bonus","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"discretionary_bonus"},"TENURE_MONTHS":{"type":"NUMBER","index":66,"name":"tenure_months","comment":null,"description":"Average tenure of group in months.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_months"},"TENURE_ZERO_TO_SIX_MONTHS":{"type":"NUMBER","index":67,"name":"tenure_zero_to_six_months","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_zero_to_six_months"},"TENURE_SIX_TO_TWELVE_MONTHS":{"type":"NUMBER","index":68,"name":"tenure_six_to_twelve_months","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_six_to_twelve_months"},"TENURE_ONE_TO_TWO_YEARS":{"type":"NUMBER","index":69,"name":"tenure_one_to_two_years","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_one_to_two_years"},"TENURE_TWO_TO_FOUR_YEARS":{"type":"NUMBER","index":70,"name":"tenure_two_to_four_years","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_two_to_four_years"},"TENURE_FOUR_PLUS_YEARS":{"type":"NUMBER","index":71,"name":"tenure_four_plus_years","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_four_plus_years"},"headcount_end_staff":{"name":"headcount_end_staff","description":"Staff is defined as any individuals with 0 direct reports and bamboohr job role of `Manager.` The job titles included in this are Staff, Principal, and Distinguished roles, as well as managers without direct reports.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_staff"},"headcount_staff_average":{"name":"headcount_staff_average","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_staff_average"},"hired_staff":{"name":"hired_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_staff"},"separated_staff":{"name":"separated_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_staff"},"rolling_12_month_headcount_staff":{"name":"rolling_12_month_headcount_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_headcount_staff"},"rolling_12_month_separations_staff":{"name":"rolling_12_month_separations_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rolling_12_month_separations_staff"},"retention_staff":{"name":"retention_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"retention_staff"},"percent_of_headcount_staff":{"name":"percent_of_headcount_staff","description":"This is based on headcount at end of month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"percent_of_headcount_staff"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:13UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":18643968,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_rpt_headcount_aggregation","raw_sql":"$20","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_headcount_intermediate","model.gitlab_snowflake.bamboohr_headcount_intermediate"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","rpt","bamboohr_rpt_headcount_aggregation"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/rpt/bamboohr_rpt_headcount_aggregation.sql","original_file_path":"models/legacy/bamboohr/rpt/bamboohr_rpt_headcount_aggregation.sql","name":"bamboohr_rpt_headcount_aggregation","alias":"bamboohr_rpt_headcount_aggregation","checksum":{"name":"sha256","checksum":"d1d1ebe84ba6ea681ce7c193dbd17d8e5ea238512eb2ec3e94ae577cce657185"},"tags":[],"refs":[["bamboohr_headcount_intermediate"],["bamboohr_headcount_intermediate"]],"sources":[],"metrics":[],"description":"This report creates out a headcount report from the bamboohr_headcount_intermediate to be used for periscope dashboards for each month. Note - the division reporting is based on current division used.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/rpt/bamboohr_rpt_headcount_aggregation.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.7083955,"compiled_sql":"$21","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.bamboohr_rpt_headcount_aggregation","label":"bamboohr_rpt_headcount_aggregation"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.simple_cte","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/simple_cte.sql","original_file_path":"macros/utils/simple_cte.sql","name":"simple_cte","macro_sql":"{% macro simple_cte(tuple_list) %}\n\nWITH{% for cte_ref in tuple_list %} {{cte_ref[0]}} AS (\n\n    SELECT * \n    FROM {{ ref(cte_ref[1]) }}\n\n)\n    {%- if not loop.last -%}\n    ,\n    {%- endif -%}\n    \n    {%- endfor -%}\n\n{%- endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":[]},"description":"$22","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"tuple_list","type":"list","description":"List of tuples with the alias as the first item and the dbt table reference as the second item."}],"created_at":1689033766.0494742}]},"node":{"resource_type":"model","name":"rpt_people_kpis","unique_id":"model.gitlab_snowflake.rpt_people_kpis"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L23",null,{"versions":{"Source":"$24","Compiled":"$25"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
