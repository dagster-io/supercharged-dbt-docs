1:HL["/supercharged-dbt-docs/supercharged/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css",{"as":"style"}]
0:["3_N3LAWgtmWGg2et9V1N1",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.dim_namespace","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.dim_namespace\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/supercharged-dbt-docs/supercharged/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_5f725a","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.dim_namespace","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.dim_namespace\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.dim_namespace","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ColumnDetails","async":false}
12:I{"id":9941,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ReferenceListClient","async":false}
5a:I{"id":4431,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:T58e,{{ config(
    tags=["product"]
) }}

{{ simple_cte([
    ('prep_namespace', 'prep_namespace')
]) }},

final AS (

  SELECT
    dim_namespace_id,
    namespace_is_internal,
    namespace_is_ultimate_parent,
    namespace_name,
    namespace_path,
    owner_id,
    namespace_type,
    has_avatar,
    created_at,
    updated_at,
    is_membership_locked,
    has_request_access_enabled,
    has_share_with_group_locked,
    is_setup_for_company,
    visibility_level,
    ldap_sync_status,
    ldap_sync_error,
    ldap_sync_last_update_at,
    ldap_sync_last_successful_update_at,
    ldap_sync_last_sync_at,
    lfs_enabled,
    parent_id,
    shared_runners_enabled,
    shared_runners_minutes_limit,
    extra_shared_runners_minutes_limit,
    repository_size_limit,
    does_require_two_factor_authentication,
    two_factor_grace_period,
    project_creation_level,
    push_rule_id,
    creator_id,
    namespace_creator_is_blocked,
    ultimate_parent_namespace_id,
    gitlab_plan_id,
    gitlab_plan_title,
    gitlab_plan_is_paid,
    dim_product_tier_id,
    namespace_member_count  AS current_member_count,
    namespace_project_count AS current_project_count,
    has_code_suggestions_enabled
  FROM prep_namespace
  WHERE is_currently_valid = TRUE

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@snalamaru",
    updated_by="@cbraza",
    created_date="2020-12-29",
    updated_date="2023-05-18"
) }}11:T674,



WITH prep_namespace AS (

    SELECT * 
    FROM "PROD".common_prep.prep_namespace

),

final AS (

  SELECT
    dim_namespace_id,
    namespace_is_internal,
    namespace_is_ultimate_parent,
    namespace_name,
    namespace_path,
    owner_id,
    namespace_type,
    has_avatar,
    created_at,
    updated_at,
    is_membership_locked,
    has_request_access_enabled,
    has_share_with_group_locked,
    is_setup_for_company,
    visibility_level,
    ldap_sync_status,
    ldap_sync_error,
    ldap_sync_last_update_at,
    ldap_sync_last_successful_update_at,
    ldap_sync_last_sync_at,
    lfs_enabled,
    parent_id,
    shared_runners_enabled,
    shared_runners_minutes_limit,
    extra_shared_runners_minutes_limit,
    repository_size_limit,
    does_require_two_factor_authentication,
    two_factor_grace_period,
    project_creation_level,
    push_rule_id,
    creator_id,
    namespace_creator_is_blocked,
    ultimate_parent_namespace_id,
    gitlab_plan_id,
    gitlab_plan_title,
    gitlab_plan_is_paid,
    dim_product_tier_id,
    namespace_member_count  AS current_member_count,
    namespace_project_count AS current_project_count,
    has_code_suggestions_enabled
  FROM prep_namespace
  WHERE is_currently_valid = TRUE

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@cbraza'::VARCHAR       AS updated_by,
      '2020-12-29'::DATE        AS model_created_date,
      '2023-05-18'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final13:T401,This macro maps a job title to the IT job title hierarchy. It works by doing string matching on the job title and categorizing them into 3 buckets:

1. **IT Decision Makers**: CIO, CTO, VP of IT, ...
2. **IT Managers**: Manager of IT. Manager of Procurement, ...
3. **IT Individual contributors**: Software Developer, Application Developer, IT programmer, ...

These buckets are only for IT, information systems, engineering, ... Everything else gets a NULL value assigned to it.

This macro uses the pad_column macro to "pad" the job title field with spaces and discard unrelated pattern matching.

An example of this is the matching for the job title of `IT Manager`. The string pattern for it `%it%manager%` also gets unrelated matches like `Junior Digital Project Manager` or `Supplier Quality Section Manager`. To overcome this problem, the job title field is "padded" with spaces to the both sides of the string and the string pattern changed `% it%manager%`. This way the previous unrelated job titles would not match.14:Td833,{{ config(
    tags=["product"]
) }}
    
{{ simple_cte ([
  ('marketing_contact', 'dim_marketing_contact'),
  ('marketing_contact_order', 'bdg_marketing_contact_order'),
  ('dim_namespace', 'dim_namespace'),
  ('gitlab_dotcom_namespaces_source', 'gitlab_dotcom_namespaces_source'),
  ('gitlab_dotcom_users_source', 'gitlab_dotcom_users_source'),
  ('gitlab_dotcom_members_source', 'gitlab_dotcom_members_source'),
  ('gitlab_dotcom_memberships', 'gitlab_dotcom_memberships'),
  ('customers_db_charges_xf', 'customers_db_charges_xf'),
  ('customers_db_trials', 'customers_db_trials'),
  ('customers_db_leads', 'customers_db_leads_source'),
  ('fct_event_user_daily', 'fct_event_user_daily'),
  ('map_gitlab_dotcom_xmau_metrics', 'map_gitlab_dotcom_xmau_metrics'),
  ('services', 'gitlab_dotcom_integrations_source'),
  ('project', 'prep_project'),
  ('ptpt_scores_by_user', 'prep_ptpt_scores_by_user'),
  ('ptpf_scores_by_user', 'prep_ptpf_scores_by_user'),
  ('ptp_scores_by_user', 'prep_ptp_scores_by_user'),
  ('namespace_details', 'gitlab_dotcom_namespace_details_source')
]) }}

-------------------------- Start of PQL logic: --------------------------

, namespaces AS (
  
    SELECT
      gitlab_dotcom_users_source.email,
      dim_namespace.dim_namespace_id,
      dim_namespace.namespace_name,
      dim_namespace.created_at              AS namespace_created_at,
      dim_namespace.created_at::DATE        AS namespace_created_at_date,
      dim_namespace.gitlab_plan_title       AS plan_title,
      dim_namespace.creator_id,
      dim_namespace.current_member_count    AS member_count
    FROM dim_namespace
    LEFT JOIN gitlab_dotcom_users_source
      ON gitlab_dotcom_users_source.user_id = dim_namespace.creator_id
    WHERE dim_namespace.namespace_is_internal = FALSE
      AND LOWER(gitlab_dotcom_users_source.state) = 'active'
      AND LOWER(dim_namespace.namespace_type) = 'group'
      AND dim_namespace.ultimate_parent_namespace_id = dim_namespace.dim_namespace_id 
      AND date(dim_namespace.created_at) >= '2021-01-27'::DATE
  
), flattened_members AS (

    SELECT --flattening members table to 1 record per member_id
      members.user_id,
      members.source_id,
      members.invite_created_at,
      MIN(members.invite_accepted_at) AS invite_accepted_at
    FROM gitlab_dotcom_members_source members
    INNER JOIN namespaces --limit to just namespaces we care about
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
    WHERE LOWER(members.member_source_type) = 'namespace' --only looking at namespace invites
      AND members.invite_created_at >= namespaces.namespace_created_at --invite created after namespace created
      AND IFNULL(members.invite_accepted_at, CURRENT_TIMESTAMP) >= members.invite_created_at --invite accepted after invite created (removes weird edge cases with imported projects, etc)
    {{ dbt_utils.group_by(3) }}

), invite_status AS (

    SELECT --pull in relevant namespace data, invite status, etc
      namespaces.dim_namespace_id,
      members.user_id,
      IFF(memberships.user_id IS NOT NULL, TRUE, FALSE) AS invite_was_successful --flag whether the user actually joined the namespace
    FROM flattened_members members
    JOIN namespaces
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
      AND (invite_accepted_at IS NULL OR (TIMESTAMPDIFF(minute,invite_accepted_at,namespace_created_at) NOT IN (0,1,2))) = TRUE -- this blocks namespaces created within two minutes of the namespace creator accepting their invite
    LEFT JOIN gitlab_dotcom_memberships memberships --record added once invite is accepted/user has access
      ON members.user_id = memberships.user_id
      AND members.source_id = memberships.membership_source_id
      AND memberships.is_billable = TRUE
    WHERE members.user_id != namespaces.creator_id --not an "invite" if user created namespace

), namespaces_with_user_count AS (

    SELECT
      dim_namespace_id,
      COUNT(DISTINCT user_id) AS current_member_count
    FROM invite_status
    WHERE invite_was_successful = TRUE
    GROUP BY 1

), subscriptions AS (
  
    SELECT 
      charges.current_gitlab_namespace_id::INT                      AS namespace_id, 
      MIN(charges.subscription_start_date)                          AS min_subscription_start_date
    FROM customers_db_charges_xf charges
    INNER JOIN namespaces 
      ON charges.current_gitlab_namespace_id = namespaces.dim_namespace_id
    WHERE charges.current_gitlab_namespace_id IS NOT NULL
      AND charges.product_category IN ('SaaS - Ultimate','SaaS - Premium') -- changing to product category field, used by the charges table
    GROUP BY 1
  
), latest_trial_by_user AS (
  
    SELECT *
    FROM customers_db_trials
    QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_user_id ORDER BY trial_start_date DESC) = 1

), pqls AS (
  
    SELECT DISTINCT
      leads.product_interaction,
      leads.user_id,
      users.email,
      leads.namespace_id           AS dim_namespace_id,
      dim_namespace.namespace_name,
      leads.trial_start_date::DATE AS trial_start_date,
      leads.created_at             AS pql_event_created_at
    FROM customers_db_leads leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'hand raise pql'
  
    UNION ALL
  
    SELECT DISTINCT 
      leads.product_interaction,
      leads.user_id,
      users.email,
      latest_trial_by_user.gitlab_namespace_id    AS dim_namespace_id,
      dim_namespace.namespace_name,
      latest_trial_by_user.trial_start_date::DATE AS trial_start_date,
      leads.created_at                            AS pql_event_created_at
    FROM customers_db_leads AS leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN latest_trial_by_user
      ON latest_trial_by_user.gitlab_user_id = leads.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'saas trial'
      AND leads.is_for_business_use = 'True'

), stages_adopted AS (
  
    SELECT 
      namespaces.dim_namespace_id,
      namespaces.namespace_name,
      namespaces.email,
      namespaces.creator_id,
      namespaces.member_count,
      'SaaS Trial or Free'                       AS product_interaction,
      subscriptions.min_subscription_start_date,
      ARRAYAGG(DISTINCT events.stage_name)       AS list_of_stages,
      COUNT(DISTINCT events.stage_name)          AS active_stage_count
    FROM fct_event_user_daily   AS events
    INNER JOIN namespaces 
      ON namespaces.dim_namespace_id = events.dim_ultimate_parent_namespace_id 
    LEFT JOIN map_gitlab_dotcom_xmau_metrics AS xmau 
      ON xmau.common_events_to_include = events.event_name
    LEFT JOIN subscriptions 
      ON subscriptions.namespace_id = namespaces.dim_namespace_id
    WHERE days_since_namespace_creation_at_event_date BETWEEN 0 AND 365
      AND events.plan_name_at_event_date IN ('trial','free', 'ultimate_trial') --Added in to only use events from a free or trial namespace (which filters based on the selection chose for the `free_or_trial` filter
      AND xmau.smau = TRUE
      AND events.event_date BETWEEN namespaces.namespace_created_at_date AND IFNULL(subscriptions.min_subscription_start_date,CURRENT_DATE)
    {{ dbt_utils.group_by(7) }}
  
), pqls_with_product_information AS (

    SELECT
      pqls.email,
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      COALESCE(pqls.namespace_name,stages_adopted.namespace_name)          AS pql_namespace_name_masked,
      pqls.user_id,
      pqls.trial_start_date                                                AS pql_trial_start_date,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      stages_adopted.list_of_stages                                        AS pql_list_stages,
      stages_adopted.active_stage_count                                    AS pql_nbr_stages,
      IFNULL(namespaces_with_user_count.current_member_count, 0) + 1       AS pql_nbr_namespace_users,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted 
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'saas trial'
      AND IFNULL(stages_adopted.min_subscription_start_date,CURRENT_DATE) >= pqls.trial_start_date

    UNION ALL

    SELECT 
      pqls.email,
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      COALESCE(pqls.namespace_name,stages_adopted.namespace_name)          AS pql_namespace_name_masked,
      pqls.user_id,
      pqls.trial_start_date                                                AS pql_trial_start_date,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      stages_adopted.list_of_stages                                        AS pql_list_stages,
      stages_adopted.active_stage_count                                    AS pql_nbr_stages,
      IFNULL(namespaces_with_user_count.current_member_count, 0) + 1       AS pql_nbr_namespace_users,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'hand raise pql'

), latest_pql AS (

    SELECT
      pqls_with_product_information.*,
      gitlab_dotcom_namespaces_source.namespace_name                        AS pql_namespace_name
    FROM pqls_with_product_information
    LEFT JOIN gitlab_dotcom_namespaces_source
      ON gitlab_dotcom_namespaces_source.namespace_id = pqls_with_product_information.pql_namespace_id
    QUALIFY ROW_NUMBER() OVER(PARTITION BY email ORDER BY pql_event_created_at DESC) = 1

), services_by_email AS (

    SELECT
      latest_pql.email                                                                           AS email,
      COUNT(*)                                                                                   AS pql_nbr_integrations_installed,
      ARRAY_AGG(DISTINCT services.service_type) WITHIN GROUP (ORDER BY services.service_type)    AS pql_integrations_installed
    FROM services
    LEFT JOIN project
      ON services.project_id = project.dim_project_id
    LEFT JOIN latest_pql
      ON latest_pql.pql_namespace_id = project.dim_namespace_id
    GROUP BY 1

), users_role_by_email AS (

    SELECT
      latest_pql.email,
      marketing_contact.job_title AS pql_namespace_creator_job_description
    FROM latest_pql 
    INNER JOIN dim_namespace
      ON latest_pql.pql_namespace_id = dim_namespace.dim_namespace_id
    INNER JOIN marketing_contact
      ON dim_namespace.creator_id = marketing_contact.gitlab_dotcom_user_id

)
-------------------------- End of PQL logic --------------------------

, subscription_aggregate AS (

    SELECT
      dim_marketing_contact_id,
      MIN(subscription_start_date)                                                               AS min_subscription_start_date,
      MAX(subscription_end_date)                                                                 AS max_subscription_end_date
    FROM marketing_contact_order
    WHERE subscription_start_date is not null
    GROUP BY dim_marketing_contact_id

), namespace_notifications AS (

    SELECT
      COALESCE(notification_email, email) AS email_address,
      namespace_details.namespace_id      AS user_limit_namespace_id,
      dashboard_notification_at           AS user_limit_notification_at,
      dashboard_enforcement_at            AS user_limit_enforcement_at
    FROM namespace_details
    INNER JOIN dim_namespace
      ON namespace_details.namespace_id = dim_namespace.dim_namespace_id
    INNER JOIN gitlab_dotcom_users_source AS user
      ON user.user_id = dim_namespace.creator_id
      AND state = 'active'
    WHERE dashboard_notification_at IS NOT NULL OR dashboard_enforcement_at IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY email_address ORDER BY COALESCE(dashboard_notification_at, dashboard_enforcement_at) ASC) = 1

), paid_subscription_aggregate AS (

    SELECT 
      dim_marketing_contact_id,
      COUNT(DISTINCT dim_subscription_id)                                                        AS nbr_of_paid_subscriptions
    FROM marketing_contact_order
    WHERE dim_subscription_id is not null
      AND (is_saas_bronze_tier 
           OR is_saas_premium_tier 
           OR is_saas_ultimate_tier 
           OR is_self_managed_starter_tier
           OR is_self_managed_premium_tier
           OR is_self_managed_ultimate_tier
          )
    GROUP BY dim_marketing_contact_id

), distinct_contact_subscription AS (

    SELECT DISTINCT
      dim_marketing_contact_id,
      dim_subscription_id,
      usage_umau_28_days_user,
      usage_action_monthly_active_users_project_repo_28_days_user,
      usage_merge_requests_28_days_user,
      usage_commit_comment_all_time_event,
      usage_source_code_pushes_all_time_event,
      usage_ci_pipelines_28_days_user,
      usage_ci_internal_pipelines_28_days_user,
      usage_ci_builds_28_days_user,
      usage_ci_builds_all_time_user,
      usage_ci_builds_all_time_event,
      usage_ci_runners_all_time_event,
      usage_auto_devops_enabled_all_time_event,
      usage_template_repositories_all_time_event,
      usage_ci_pipeline_config_repository_28_days_user,
      usage_user_unique_users_all_secure_scanners_28_days_user,
      usage_user_container_scanning_jobs_28_days_user,
      usage_user_sast_jobs_28_days_user,
      usage_user_dast_jobs_28_days_user,
      usage_user_dependency_scanning_jobs_28_days_user,
      usage_user_license_management_jobs_28_days_user,
      usage_user_secret_detection_jobs_28_days_user,
      usage_projects_with_packages_all_time_event,
      usage_projects_with_packages_28_days_event,
      usage_deployments_28_days_user,
      usage_releases_28_days_user,
      usage_epics_28_days_user,
      usage_issues_28_days_user,
      usage_instance_user_count_not_aligned,
      usage_historical_max_users_not_aligned
    FROM marketing_contact_order
    WHERE dim_subscription_id IS NOT NULL

), usage_metrics AS (

    SELECT 
      dim_marketing_contact_id,
      SUM(usage_umau_28_days_user)                                                                  AS usage_umau_28_days_user,
      SUM(usage_action_monthly_active_users_project_repo_28_days_user)                              AS usage_action_monthly_active_users_project_repo_28_days_user,
      SUM(usage_merge_requests_28_days_user)                                                        AS usage_merge_requests_28_days_user,
      SUM(usage_commit_comment_all_time_event)                                                      AS usage_commit_comment_all_time_event,
      SUM(usage_source_code_pushes_all_time_event)                                                  AS usage_source_code_pushes_all_time_event,
      SUM(usage_ci_pipelines_28_days_user)                                                          AS usage_ci_pipelines_28_days_user,
      SUM(usage_ci_internal_pipelines_28_days_user)                                                 AS usage_ci_internal_pipelines_28_days_user,
      SUM(usage_ci_builds_28_days_user)                                                             AS usage_ci_builds_28_days_user,
      SUM(usage_ci_builds_all_time_user)                                                            AS usage_ci_builds_all_time_user,
      SUM(usage_ci_builds_all_time_event)                                                           AS usage_ci_builds_all_time_event,
      SUM(usage_ci_runners_all_time_event)                                                          AS usage_ci_runners_all_time_event,
      SUM(usage_auto_devops_enabled_all_time_event)                                                 AS usage_auto_devops_enabled_all_time_event,
      SUM(usage_template_repositories_all_time_event)                                               AS usage_template_repositories_all_time_event,
      SUM(usage_ci_pipeline_config_repository_28_days_user)                                         AS usage_ci_pipeline_config_repository_28_days_user,
      SUM(usage_user_unique_users_all_secure_scanners_28_days_user)                                 AS usage_user_unique_users_all_secure_scanners_28_days_user,
      SUM(usage_user_container_scanning_jobs_28_days_user)                                          AS usage_user_container_scanning_jobs_28_days_user,
      SUM(usage_user_sast_jobs_28_days_user)                                                        AS usage_user_sast_jobs_28_days_user,
      SUM(usage_user_dast_jobs_28_days_user)                                                        AS usage_user_dast_jobs_28_days_user,
      SUM(usage_user_dependency_scanning_jobs_28_days_user)                                         AS usage_user_dependency_scanning_jobs_28_days_user,
      SUM(usage_user_license_management_jobs_28_days_user)                                          AS usage_user_license_management_jobs_28_days_user,
      SUM(usage_user_secret_detection_jobs_28_days_user)                                            AS usage_user_secret_detection_jobs_28_days_user,
      SUM(usage_projects_with_packages_all_time_event)                                              AS usage_projects_with_packages_all_time_event,
      SUM(usage_projects_with_packages_28_days_event)                                               AS usage_projects_with_packages_28_days_event,
      SUM(usage_deployments_28_days_user)                                                           AS usage_deployments_28_days_user,
      SUM(usage_releases_28_days_user)                                                              AS usage_releases_28_days_user,
      SUM(usage_epics_28_days_user)                                                                 AS usage_epics_28_days_user,
      SUM(usage_issues_28_days_user)                                                                AS usage_issues_28_days_user,
      SUM(usage_instance_user_count_not_aligned)                                                    AS usage_instance_user_count_not_aligned,
      SUM(usage_historical_max_users_not_aligned)                                                   AS usage_historical_max_users_not_aligned
    FROM distinct_contact_subscription
    GROUP BY dim_marketing_contact_id

), prep AS (
  
    SELECT     
      marketing_contact.dim_marketing_contact_id,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Group Namespace Owner' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_group_namespace_owner,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Group Namespace Member' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_group_namespace_member,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Personal Namespace Owner' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_individual_namespace_owner,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Maintainer'
                                                                        )
                  AND (marketing_contact_order.is_saas_ultimate_tier OR marketing_contact_order.is_saas_premium_tier OR marketing_contact_order.is_saas_bronze_tier)
                    THEN 1
                  ELSE 0
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS is_group_maintainer_of_saas_paid_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Maintainer'
                                                                        )
                  AND marketing_contact_order.is_saas_free_tier
                    THEN 1
                  ELSE 0
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS is_group_maintainer_of_saas_free_tier,
      IFF(is_group_maintainer_of_saas_free_tier OR is_group_maintainer_of_saas_paid_tier, TRUE, FALSE) AS is_group_maintainer_of_saas,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Customer DB Owner' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_customer_db_owner,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Zuora Billing Contact' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_zuora_billing_contact,
      MIN(marketing_contact_order.days_since_saas_trial_ended)                                   AS days_since_saas_trial_ended,
      MIN(marketing_contact_order.days_since_saas_trial_ended_bucket)                            AS days_since_saas_trial_ended_bucket,
      MAX(marketing_contact_order.days_until_saas_trial_ends)                                    AS days_until_saas_trial_ends,
      MAX(marketing_contact_order.days_until_saas_trial_ends_bucket)                             AS days_until_saas_trial_ends_bucket,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_trial,   
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_ultimate_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_member_of_saas_trial,      
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1 
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_member_of_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_member_of_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1 
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_member_of_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1 
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_member_of_saas_ultimate_tier,      
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         ) 
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_owner_of_saas_trial,    
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_owner_of_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_owner_of_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0 
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_owner_of_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_owner_of_saas_ultimate_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         ) 
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_group_saas_trial,    
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_group_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS responsible_for_group_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0 
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_group_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS responsible_for_group_saas_ultimate_tier,      
      CASE 
        WHEN MAX(marketing_contact_order.is_self_managed_starter_tier)  >= 1 
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_self_managed_starter_tier, 
      CASE 
        WHEN MAX(marketing_contact_order.is_self_managed_premium_tier)  >= 1 
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_self_managed_premium_tier, 
      CASE 
        WHEN MAX(marketing_contact_order.is_self_managed_ultimate_tier) >= 1 
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_self_managed_ultimate_tier,
      CASE
        WHEN MAX(marketing_contact_order.is_setup_for_company) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS has_namespace_setup_for_company_use,
      CASE
        WHEN MAX(marketing_contact_order.does_namespace_have_public_project) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS has_namespace_with_public_project,
      CASE
        WHEN MAX(marketing_contact_order.does_free_namespace_have_public_project) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS has_free_namespace_with_public_project,
      CASE
        WHEN MAX(marketing_contact_order.is_ultimate_parent_namespace_public) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS is_member_of_public_ultimate_parent_namespace,
      CASE
        WHEN MAX(marketing_contact_order.is_ultimate_parent_namespace_private) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS is_member_of_private_ultimate_parent_namespace,
      ARRAY_AGG(DISTINCT IFF(marketing_contact_order.is_ultimate_parent_namespace_public = TRUE, marketing_contact_order.dim_namespace_id, NULL))
                                                                                                 AS public_ultimate_parent_namespaces,
      ARRAY_AGG(DISTINCT IFF(marketing_contact_order.is_ultimate_parent_namespace_private = TRUE, marketing_contact_order.dim_namespace_id, NULL))
                                                                                                 AS private_ultimate_parent_namespaces,
      ARRAY_AGG(
                DISTINCT
                CASE
                  WHEN marketing_contact_order.is_ultimate_parent_namespace = FALSE
                    THEN NULL
                  ELSE IFNULL(marketing_contact_order.marketing_contact_role || ': ' || 
                    IFNULL(marketing_contact_order.namespace_path, CASE 
                                            WHEN marketing_contact_order.self_managed_product_tier IS NOT NULL
                                              THEN 'Self-Managed' 
                                            ELSE '' 
                                          END)  || ' | ' || 
                    IFNULL(marketing_contact_order.saas_product_tier, '') || 
                    IFNULL(marketing_contact_order.self_managed_product_tier, ''),
                    
                    'No Namespace') END
               )                                                                                 AS role_tier_ultimate_namespace_text

    FROM marketing_contact
    LEFT JOIN  marketing_contact_order
      ON marketing_contact_order.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    GROUP BY marketing_contact.dim_marketing_contact_id

), joined AS (

    SELECT 
      prep.*,
      IFF(individual_namespace_is_saas_bronze_tier
        OR group_owner_of_saas_bronze_tier
        OR group_member_of_saas_bronze_tier
        OR responsible_for_group_saas_bronze_tier,
        TRUE, FALSE)                                        AS is_saas_bronze_tier,
      IFF(individual_namespace_is_saas_premium_tier
        OR group_owner_of_saas_premium_tier
        OR group_member_of_saas_premium_tier
        OR responsible_for_group_saas_premium_tier,
        TRUE, FALSE)                                        AS is_saas_premium_tier,
      IFF(individual_namespace_is_saas_ultimate_tier
        OR group_owner_of_saas_ultimate_tier
        OR group_member_of_saas_ultimate_tier
        OR responsible_for_group_saas_ultimate_tier, 
        TRUE, FALSE)                                        AS is_saas_ultimate_tier,
      IFF(is_saas_bronze_tier
        OR is_self_managed_starter_tier,
        TRUE, FALSE)                                        AS is_bronze_starter_tier,
      IFF(is_saas_premium_tier
        OR is_self_managed_premium_tier,
        TRUE, FALSE)                                        AS is_premium_tier,
      IFF(is_saas_ultimate_tier
        OR is_self_managed_ultimate_tier,
        TRUE, FALSE)                                        AS is_ultimate_tier,                                                      
      IFF(is_saas_bronze_tier
        OR is_saas_premium_tier
        OR is_saas_ultimate_tier,
        TRUE, FALSE)                                        AS is_saas_delivery,
      IFF(is_self_managed_starter_tier
        OR is_self_managed_premium_tier
        OR is_self_managed_ultimate_tier,
        TRUE, FALSE)                                        AS is_self_managed_delivery,
      IFF(individual_namespace_is_saas_free_tier
        OR group_member_of_saas_free_tier
        OR group_owner_of_saas_free_tier,
        TRUE, FALSE)                                        AS is_saas_free_tier,
      IFF(is_saas_delivery
        OR is_self_managed_delivery,
        TRUE, FALSE)                                        AS is_paid_tier,
      marketing_contact.is_paid_tier_marketo,
      IFF(is_paid_tier = TRUE OR (is_paid_tier = FALSE AND marketing_contact.is_paid_tier_marketo = TRUE), TRUE, FALSE)
                                                            AS is_paid_tier_change,
      subscription_aggregate.min_subscription_start_date,
      subscription_aggregate.max_subscription_end_date,
      paid_subscription_aggregate.nbr_of_paid_subscriptions,
      CASE 
        WHEN (prep.responsible_for_group_saas_free_tier
              OR prep.individual_namespace_is_saas_free_tier
              OR prep.group_owner_of_saas_free_tier
             ) 
             AND NOT (prep.responsible_for_group_saas_ultimate_tier
                      OR prep.responsible_for_group_saas_premium_tier
                      OR prep.responsible_for_group_saas_bronze_tier
                      OR prep.individual_namespace_is_saas_bronze_tier
                      OR prep.individual_namespace_is_saas_premium_tier
                      OR prep.individual_namespace_is_saas_ultimate_tier
                      OR prep.group_owner_of_saas_bronze_tier
                      OR prep.group_owner_of_saas_premium_tier
                      OR prep.group_owner_of_saas_ultimate_tier
                     )
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_free_tier_only,
      marketing_contact.email_address,
      marketing_contact.first_name,
      IFNULL(marketing_contact.last_name, 'Unknown')                                             AS last_name,
      marketing_contact.gitlab_user_name,
      IFNULL(marketing_contact.company_name, 'Unknown')                                          AS company_name,
      marketing_contact.sfdc_record_id,
      marketing_contact.dim_crm_account_id,
      marketing_contact.job_title,
      marketing_contact.it_job_title_hierarchy,
      marketing_contact.country,
      marketing_contact.mobile_phone,
      marketing_contact.sfdc_parent_sales_segment,
      marketing_contact.sfdc_parent_crm_account_region,
      marketing_contact.marketo_lead_id,
      marketing_contact.is_marketo_lead,
      marketing_contact.is_marketo_email_hard_bounced,
      marketing_contact.marketo_email_hard_bounced_date,
      marketing_contact.is_marketo_unsubscribed,
      marketing_contact.is_marketo_opted_in,
      marketing_contact.has_marketo_unsubscribed,
      marketing_contact.marketo_compliance_segment_value,
      marketing_contact.is_sfdc_lead_contact,
      marketing_contact.sfdc_lead_contact,
      marketing_contact.sfdc_created_date,
      marketing_contact.is_sfdc_opted_out,
      marketing_contact.is_gitlab_dotcom_user,
      marketing_contact.gitlab_dotcom_user_id,
      marketing_contact.gitlab_dotcom_created_date,
      marketing_contact.gitlab_dotcom_confirmed_date,
      marketing_contact.gitlab_dotcom_active_state,
      marketing_contact.gitlab_dotcom_last_login_date,
      marketing_contact.gitlab_dotcom_email_opted_in,
      marketing_contact.days_since_saas_signup,
      marketing_contact.days_since_saas_signup_bucket,
      marketing_contact.is_customer_db_user,
      marketing_contact.customer_db_customer_id,
      marketing_contact.customer_db_created_date,
      marketing_contact.customer_db_confirmed_date,
      IFF(latest_pql.email IS NOT NULL, TRUE, FALSE) AS is_pql,
      marketing_contact.is_pql_marketo,
      IFF(is_pql = TRUE OR (is_pql = FALSE AND marketing_contact.is_pql_marketo = TRUE), TRUE, FALSE)
                                            AS is_pql_change,
      latest_pql.pql_namespace_id,
      latest_pql.pql_namespace_name,
      latest_pql.pql_namespace_name_masked, 
      latest_pql.pql_product_interaction,
      latest_pql.pql_list_stages,
      latest_pql.pql_nbr_stages,
      latest_pql.pql_nbr_namespace_users,
      latest_pql.pql_trial_start_date,
      latest_pql.pql_min_subscription_start_date,
      latest_pql.pql_event_created_at,
      services_by_email.pql_nbr_integrations_installed,
      services_by_email.pql_integrations_installed,
      users_role_by_email.pql_namespace_creator_job_description,
      marketing_contact.days_since_self_managed_owner_signup,
      marketing_contact.days_since_self_managed_owner_signup_bucket,
      marketing_contact.zuora_contact_id,
      marketing_contact.zuora_created_date,
      marketing_contact.zuora_active_state,
      marketing_contact.wip_is_valid_email_address,
      marketing_contact.wip_invalid_email_address_reason,

      -- Propensity to purchase trials fields
      IFF(ptpt_scores_by_user.namespace_id IS NOT NULL, TRUE, FALSE)
                                                  AS is_ptpt_contact,
      IFF(is_ptpt_contact = TRUE OR (is_ptpt_contact = FALSE AND marketing_contact.is_ptpt_contact_marketo = TRUE), TRUE, FALSE)
                                                  AS is_ptpt_contact_change,
      ptpt_scores_by_user.namespace_id            AS ptpt_namespace_id,
      ptpt_scores_by_user.score_group             AS ptpt_score_group,
      ptpt_scores_by_user.insights                AS ptpt_insights,
      ptpt_scores_by_user.score_date              AS ptpt_score_date,
      ptpt_scores_by_user.past_score_group        AS ptpt_past_score_group,
      ptpt_scores_by_user.past_score_date         AS ptpt_past_score_date,

      -- Propensity to purchase Free fields
      IFF(ptpf_scores_by_user.namespace_id IS NOT NULL, TRUE, FALSE)
                                                  AS is_ptpf_contact,
      ptpf_scores_by_user.namespace_id            AS ptpf_namespace_id,
      ptpf_scores_by_user.score_group             AS ptpf_score_group,
      ptpf_scores_by_user.score_date              AS ptpf_score_date,
      ptpf_scores_by_user.past_score_group        AS ptpf_past_score_group,
      ptpf_scores_by_user.past_score_date         AS ptpf_past_score_date,

      -- Propensity to purchase fields
      IFF(ptp_scores_by_user.namespace_id IS NOT NULL, TRUE, FALSE)
                                                  AS is_ptp_contact,
      IFF(is_ptp_contact = TRUE OR (is_ptp_contact = FALSE AND marketing_contact.is_ptp_contact_marketo = TRUE
        ), TRUE, FALSE)
                                                  AS is_ptp_contact_change,
      ptp_scores_by_user.namespace_id             AS ptp_namespace_id,
      ptp_scores_by_user.score_group              AS ptp_score_group,
      ptp_scores_by_user.score_date               AS ptp_score_date,
      ptp_scores_by_user.insights                 AS ptp_insights,
      ptp_scores_by_user.past_insights            AS ptp_past_insights,
      ptp_scores_by_user.past_score_group         AS ptp_past_score_group,
      ptp_scores_by_user.past_score_date          AS ptp_past_score_date,
      CASE
        WHEN ptp_scores_by_user.days_since_trial_start BETWEEN 0 AND 30 THEN '< 30 days'
        WHEN ptp_scores_by_user.days_since_trial_start BETWEEN 30 AND 60 THEN '30 - 60 days'
        WHEN ptp_scores_by_user.days_since_trial_start BETWEEN 60 AND 90 THEN '60 - 90 days'
        WHEN ptp_scores_by_user.days_since_trial_start >= 90 THEN '90+ days'
      END                                         AS ptp_days_since_trial_start,
      ptp_scores_by_user.ptp_source               AS ptp_source,

      -- Namespace notification dates
      namespace_notifications.user_limit_namespace_id,
      namespace_notifications.user_limit_notification_at,
      namespace_notifications.user_limit_enforcement_at,
      IFF(namespace_notifications.user_limit_notification_at IS NOT NULL OR namespace_notifications.user_limit_enforcement_at IS NOT NULL,
        TRUE, FALSE)                              AS is_impacted_by_user_limit,
      IFF(is_impacted_by_user_limit = TRUE OR (is_impacted_by_user_limit = FALSE AND marketing_contact.is_impacted_by_user_limit_marketo = TRUE), TRUE, FALSE)
                                                  AS is_impacted_by_user_limit_change,

      usage_metrics.usage_umau_28_days_user,
      usage_metrics.usage_action_monthly_active_users_project_repo_28_days_user,
      usage_metrics.usage_merge_requests_28_days_user,
      usage_metrics.usage_commit_comment_all_time_event,
      usage_metrics.usage_source_code_pushes_all_time_event,
      usage_metrics.usage_ci_pipelines_28_days_user,
      usage_metrics.usage_ci_internal_pipelines_28_days_user,
      usage_metrics.usage_ci_builds_28_days_user,
      usage_metrics.usage_ci_builds_all_time_user,
      usage_metrics.usage_ci_builds_all_time_event,
      usage_metrics.usage_ci_runners_all_time_event,
      usage_metrics.usage_auto_devops_enabled_all_time_event,
      usage_metrics.usage_template_repositories_all_time_event,
      usage_metrics.usage_ci_pipeline_config_repository_28_days_user,
      usage_metrics.usage_user_unique_users_all_secure_scanners_28_days_user,
      usage_metrics.usage_user_container_scanning_jobs_28_days_user,
      usage_metrics.usage_user_sast_jobs_28_days_user,
      usage_metrics.usage_user_dast_jobs_28_days_user,
      usage_metrics.usage_user_dependency_scanning_jobs_28_days_user,
      usage_metrics.usage_user_license_management_jobs_28_days_user,
      usage_metrics.usage_user_secret_detection_jobs_28_days_user,
      usage_metrics.usage_projects_with_packages_all_time_event,
      usage_metrics.usage_projects_with_packages_28_days_event,
      usage_metrics.usage_deployments_28_days_user,
      usage_metrics.usage_releases_28_days_user,
      usage_metrics.usage_epics_28_days_user,
      usage_metrics.usage_issues_28_days_user,
      usage_metrics.usage_instance_user_count_not_aligned,
      usage_metrics.usage_historical_max_users_not_aligned,
      'Raw'                                                                                      AS lead_status,
      'Snowflake Email Marketing Database'                                                       AS lead_source      
    FROM prep
    LEFT JOIN marketing_contact 
      ON marketing_contact.dim_marketing_contact_id = prep.dim_marketing_contact_id
    LEFT JOIN subscription_aggregate
      ON subscription_aggregate.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN paid_subscription_aggregate
      ON paid_subscription_aggregate.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN usage_metrics
      ON usage_metrics.dim_marketing_contact_id = prep.dim_marketing_contact_id
    LEFT JOIN latest_pql
      ON latest_pql.email = marketing_contact.email_address
    LEFT JOIN services_by_email
      ON services_by_email.email = marketing_contact.email_address
    LEFT JOIN users_role_by_email
      ON users_role_by_email.email = marketing_contact.email_address
    LEFT JOIN ptpt_scores_by_user
      ON ptpt_scores_by_user.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN ptpf_scores_by_user
      ON ptpf_scores_by_user.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN ptp_scores_by_user
      ON ptp_scores_by_user.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN namespace_notifications
      ON namespace_notifications.email_address = marketing_contact.email_address
)

{{ hash_diff(
    cte_ref="joined",
    return_cte="final",
    columns=[
      'is_group_namespace_owner',
      'is_group_namespace_member',
      'is_individual_namespace_owner',
      'is_customer_db_owner',
      'is_zuora_billing_contact',
      'days_since_saas_trial_ended_bucket',
      'individual_namespace_is_saas_trial',
      'individual_namespace_is_saas_free_tier',
      'individual_namespace_is_saas_bronze_tier',
      'individual_namespace_is_saas_premium_tier',
      'individual_namespace_is_saas_ultimate_tier',
      'group_member_of_saas_trial',
      'group_member_of_saas_free_tier',
      'group_member_of_saas_bronze_tier',
      'group_member_of_saas_premium_tier',
      'group_member_of_saas_ultimate_tier',
      'group_owner_of_saas_trial',
      'group_owner_of_saas_free_tier',
      'group_owner_of_saas_bronze_tier',
      'group_owner_of_saas_premium_tier',
      'group_owner_of_saas_ultimate_tier',
      'responsible_for_group_saas_trial',
      'responsible_for_group_saas_free_tier',
      'responsible_for_group_saas_bronze_tier',
      'responsible_for_group_saas_premium_tier',
      'responsible_for_group_saas_ultimate_tier',
      'is_self_managed_starter_tier',
      'is_self_managed_premium_tier',
      'is_self_managed_ultimate_tier',
      'email_address',
      'first_name',
      'last_name',
      'gitlab_user_name',
      'company_name',
      'country',
      'is_gitlab_dotcom_user',
      'gitlab_dotcom_user_id',
      'gitlab_dotcom_created_date',
      'gitlab_dotcom_confirmed_date',
      'gitlab_dotcom_active_state',
      'gitlab_dotcom_last_login_date',
      'gitlab_dotcom_email_opted_in',
      'is_customer_db_user',
      'customer_db_customer_id',
      'customer_db_created_date',
      'customer_db_confirmed_date',
      'zuora_contact_id',
      'zuora_created_date',
      'zuora_active_state',
      'pql_list_stages',
      'pql_nbr_stages',
      'pql_nbr_namespace_users',
      'has_namespace_setup_for_company_use',
      'pql_namespace_id',
      'pql_namespace_name',
      'pql_nbr_integrations_installed',
      'pql_integrations_installed',
      'pql_namespace_creator_job_description',
      'is_pql',
      'is_paid_tier',
      'is_pql_change',
      'is_paid_tier_change',
      'is_ptpt_contact',
      'is_ptpt_contact_change',
      'ptpt_namespace_id',
      'ptpt_score_group',
      'ptpt_insights',
      'ptpt_score_date',
      'ptpt_past_score_group',
      'is_member_of_public_ultimate_parent_namespace',
      'is_member_of_private_ultimate_parent_namespace',
      'user_limit_notification_at',
      'user_limit_enforcement_at',
      'is_impacted_by_user_limit',
      'is_impacted_by_user_limit_change',
      'user_limit_namespace_id',
      'marketo_lead_id',
      'is_ptp_contact',
      'is_ptp_contact_change',
      'ptp_namespace_id',
      'ptp_score_group',
      'ptp_score_date',
      'ptp_insights',
      'ptp_past_insights',
      'ptp_past_score_group',
      'ptp_days_since_trial_start',
      'ptp_source'
      ]
) }}

{{ dbt_audit(
    cte_ref="final",
    created_by="@trevor31",
    updated_by="@jpeguero",
    created_date="2021-02-09",
    updated_date="2023-06-19"
) }}15:Tea0b,
    


WITH marketing_contact AS (

    SELECT * 
    FROM "PREP".sensitive.dim_marketing_contact

), marketing_contact_order AS (

    SELECT * 
    FROM "PREP".sensitive.bdg_marketing_contact_order

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), gitlab_dotcom_namespaces_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_namespaces_source

), gitlab_dotcom_users_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_users_source

), gitlab_dotcom_members_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_members_source

), gitlab_dotcom_memberships AS (

    SELECT * 
    FROM "PROD".legacy.gitlab_dotcom_memberships

), customers_db_charges_xf AS (

    SELECT * 
    FROM "PROD".restricted_safe_legacy.customers_db_charges_xf

), customers_db_trials AS (

    SELECT * 
    FROM "PROD".legacy.customers_db_trials

), customers_db_leads AS (

    SELECT * 
    FROM "PREP".customers.customers_db_leads_source

), fct_event_user_daily AS (

    SELECT * 
    FROM "PROD".common.fct_event_user_daily

), map_gitlab_dotcom_xmau_metrics AS (

    SELECT * 
    FROM "PROD".common_mapping.map_gitlab_dotcom_xmau_metrics

), services AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_integrations_source

), project AS (

    SELECT * 
    FROM "PROD".common_prep.prep_project

), ptpt_scores_by_user AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ptpt_scores_by_user

), ptpf_scores_by_user AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ptpf_scores_by_user

), ptp_scores_by_user AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ptp_scores_by_user

), namespace_details AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_namespace_details_source

)

-------------------------- Start of PQL logic: --------------------------

, namespaces AS (
  
    SELECT
      gitlab_dotcom_users_source.email,
      dim_namespace.dim_namespace_id,
      dim_namespace.namespace_name,
      dim_namespace.created_at              AS namespace_created_at,
      dim_namespace.created_at::DATE        AS namespace_created_at_date,
      dim_namespace.gitlab_plan_title       AS plan_title,
      dim_namespace.creator_id,
      dim_namespace.current_member_count    AS member_count
    FROM dim_namespace
    LEFT JOIN gitlab_dotcom_users_source
      ON gitlab_dotcom_users_source.user_id = dim_namespace.creator_id
    WHERE dim_namespace.namespace_is_internal = FALSE
      AND LOWER(gitlab_dotcom_users_source.state) = 'active'
      AND LOWER(dim_namespace.namespace_type) = 'group'
      AND dim_namespace.ultimate_parent_namespace_id = dim_namespace.dim_namespace_id 
      AND date(dim_namespace.created_at) >= '2021-01-27'::DATE
  
), flattened_members AS (

    SELECT --flattening members table to 1 record per member_id
      members.user_id,
      members.source_id,
      members.invite_created_at,
      MIN(members.invite_accepted_at) AS invite_accepted_at
    FROM gitlab_dotcom_members_source members
    INNER JOIN namespaces --limit to just namespaces we care about
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
    WHERE LOWER(members.member_source_type) = 'namespace' --only looking at namespace invites
      AND members.invite_created_at >= namespaces.namespace_created_at --invite created after namespace created
      AND IFNULL(members.invite_accepted_at, CURRENT_TIMESTAMP) >= members.invite_created_at --invite accepted after invite created (removes weird edge cases with imported projects, etc)
    group by 1,2,3

), invite_status AS (

    SELECT --pull in relevant namespace data, invite status, etc
      namespaces.dim_namespace_id,
      members.user_id,
      IFF(memberships.user_id IS NOT NULL, TRUE, FALSE) AS invite_was_successful --flag whether the user actually joined the namespace
    FROM flattened_members members
    JOIN namespaces
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
      AND (invite_accepted_at IS NULL OR (TIMESTAMPDIFF(minute,invite_accepted_at,namespace_created_at) NOT IN (0,1,2))) = TRUE -- this blocks namespaces created within two minutes of the namespace creator accepting their invite
    LEFT JOIN gitlab_dotcom_memberships memberships --record added once invite is accepted/user has access
      ON members.user_id = memberships.user_id
      AND members.source_id = memberships.membership_source_id
      AND memberships.is_billable = TRUE
    WHERE members.user_id != namespaces.creator_id --not an "invite" if user created namespace

), namespaces_with_user_count AS (

    SELECT
      dim_namespace_id,
      COUNT(DISTINCT user_id) AS current_member_count
    FROM invite_status
    WHERE invite_was_successful = TRUE
    GROUP BY 1

), subscriptions AS (
  
    SELECT 
      charges.current_gitlab_namespace_id::INT                      AS namespace_id, 
      MIN(charges.subscription_start_date)                          AS min_subscription_start_date
    FROM customers_db_charges_xf charges
    INNER JOIN namespaces 
      ON charges.current_gitlab_namespace_id = namespaces.dim_namespace_id
    WHERE charges.current_gitlab_namespace_id IS NOT NULL
      AND charges.product_category IN ('SaaS - Ultimate','SaaS - Premium') -- changing to product category field, used by the charges table
    GROUP BY 1
  
), latest_trial_by_user AS (
  
    SELECT *
    FROM customers_db_trials
    QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_user_id ORDER BY trial_start_date DESC) = 1

), pqls AS (
  
    SELECT DISTINCT
      leads.product_interaction,
      leads.user_id,
      users.email,
      leads.namespace_id           AS dim_namespace_id,
      dim_namespace.namespace_name,
      leads.trial_start_date::DATE AS trial_start_date,
      leads.created_at             AS pql_event_created_at
    FROM customers_db_leads leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'hand raise pql'
  
    UNION ALL
  
    SELECT DISTINCT 
      leads.product_interaction,
      leads.user_id,
      users.email,
      latest_trial_by_user.gitlab_namespace_id    AS dim_namespace_id,
      dim_namespace.namespace_name,
      latest_trial_by_user.trial_start_date::DATE AS trial_start_date,
      leads.created_at                            AS pql_event_created_at
    FROM customers_db_leads AS leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN latest_trial_by_user
      ON latest_trial_by_user.gitlab_user_id = leads.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'saas trial'
      AND leads.is_for_business_use = 'True'

), stages_adopted AS (
  
    SELECT 
      namespaces.dim_namespace_id,
      namespaces.namespace_name,
      namespaces.email,
      namespaces.creator_id,
      namespaces.member_count,
      'SaaS Trial or Free'                       AS product_interaction,
      subscriptions.min_subscription_start_date,
      ARRAYAGG(DISTINCT events.stage_name)       AS list_of_stages,
      COUNT(DISTINCT events.stage_name)          AS active_stage_count
    FROM fct_event_user_daily   AS events
    INNER JOIN namespaces 
      ON namespaces.dim_namespace_id = events.dim_ultimate_parent_namespace_id 
    LEFT JOIN map_gitlab_dotcom_xmau_metrics AS xmau 
      ON xmau.common_events_to_include = events.event_name
    LEFT JOIN subscriptions 
      ON subscriptions.namespace_id = namespaces.dim_namespace_id
    WHERE days_since_namespace_creation_at_event_date BETWEEN 0 AND 365
      AND events.plan_name_at_event_date IN ('trial','free', 'ultimate_trial') --Added in to only use events from a free or trial namespace (which filters based on the selection chose for the `free_or_trial` filter
      AND xmau.smau = TRUE
      AND events.event_date BETWEEN namespaces.namespace_created_at_date AND IFNULL(subscriptions.min_subscription_start_date,CURRENT_DATE)
    group by 1,2,3,4,5,6,7
  
), pqls_with_product_information AS (

    SELECT
      pqls.email,
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      COALESCE(pqls.namespace_name,stages_adopted.namespace_name)          AS pql_namespace_name_masked,
      pqls.user_id,
      pqls.trial_start_date                                                AS pql_trial_start_date,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      stages_adopted.list_of_stages                                        AS pql_list_stages,
      stages_adopted.active_stage_count                                    AS pql_nbr_stages,
      IFNULL(namespaces_with_user_count.current_member_count, 0) + 1       AS pql_nbr_namespace_users,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted 
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'saas trial'
      AND IFNULL(stages_adopted.min_subscription_start_date,CURRENT_DATE) >= pqls.trial_start_date

    UNION ALL

    SELECT 
      pqls.email,
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      COALESCE(pqls.namespace_name,stages_adopted.namespace_name)          AS pql_namespace_name_masked,
      pqls.user_id,
      pqls.trial_start_date                                                AS pql_trial_start_date,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      stages_adopted.list_of_stages                                        AS pql_list_stages,
      stages_adopted.active_stage_count                                    AS pql_nbr_stages,
      IFNULL(namespaces_with_user_count.current_member_count, 0) + 1       AS pql_nbr_namespace_users,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'hand raise pql'

), latest_pql AS (

    SELECT
      pqls_with_product_information.*,
      gitlab_dotcom_namespaces_source.namespace_name                        AS pql_namespace_name
    FROM pqls_with_product_information
    LEFT JOIN gitlab_dotcom_namespaces_source
      ON gitlab_dotcom_namespaces_source.namespace_id = pqls_with_product_information.pql_namespace_id
    QUALIFY ROW_NUMBER() OVER(PARTITION BY email ORDER BY pql_event_created_at DESC) = 1

), services_by_email AS (

    SELECT
      latest_pql.email                                                                           AS email,
      COUNT(*)                                                                                   AS pql_nbr_integrations_installed,
      ARRAY_AGG(DISTINCT services.service_type) WITHIN GROUP (ORDER BY services.service_type)    AS pql_integrations_installed
    FROM services
    LEFT JOIN project
      ON services.project_id = project.dim_project_id
    LEFT JOIN latest_pql
      ON latest_pql.pql_namespace_id = project.dim_namespace_id
    GROUP BY 1

), users_role_by_email AS (

    SELECT
      latest_pql.email,
      marketing_contact.job_title AS pql_namespace_creator_job_description
    FROM latest_pql 
    INNER JOIN dim_namespace
      ON latest_pql.pql_namespace_id = dim_namespace.dim_namespace_id
    INNER JOIN marketing_contact
      ON dim_namespace.creator_id = marketing_contact.gitlab_dotcom_user_id

)
-------------------------- End of PQL logic --------------------------

, subscription_aggregate AS (

    SELECT
      dim_marketing_contact_id,
      MIN(subscription_start_date)                                                               AS min_subscription_start_date,
      MAX(subscription_end_date)                                                                 AS max_subscription_end_date
    FROM marketing_contact_order
    WHERE subscription_start_date is not null
    GROUP BY dim_marketing_contact_id

), namespace_notifications AS (

    SELECT
      COALESCE(notification_email, email) AS email_address,
      namespace_details.namespace_id      AS user_limit_namespace_id,
      dashboard_notification_at           AS user_limit_notification_at,
      dashboard_enforcement_at            AS user_limit_enforcement_at
    FROM namespace_details
    INNER JOIN dim_namespace
      ON namespace_details.namespace_id = dim_namespace.dim_namespace_id
    INNER JOIN gitlab_dotcom_users_source AS user
      ON user.user_id = dim_namespace.creator_id
      AND state = 'active'
    WHERE dashboard_notification_at IS NOT NULL OR dashboard_enforcement_at IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY email_address ORDER BY COALESCE(dashboard_notification_at, dashboard_enforcement_at) ASC) = 1

), paid_subscription_aggregate AS (

    SELECT 
      dim_marketing_contact_id,
      COUNT(DISTINCT dim_subscription_id)                                                        AS nbr_of_paid_subscriptions
    FROM marketing_contact_order
    WHERE dim_subscription_id is not null
      AND (is_saas_bronze_tier 
           OR is_saas_premium_tier 
           OR is_saas_ultimate_tier 
           OR is_self_managed_starter_tier
           OR is_self_managed_premium_tier
           OR is_self_managed_ultimate_tier
          )
    GROUP BY dim_marketing_contact_id

), distinct_contact_subscription AS (

    SELECT DISTINCT
      dim_marketing_contact_id,
      dim_subscription_id,
      usage_umau_28_days_user,
      usage_action_monthly_active_users_project_repo_28_days_user,
      usage_merge_requests_28_days_user,
      usage_commit_comment_all_time_event,
      usage_source_code_pushes_all_time_event,
      usage_ci_pipelines_28_days_user,
      usage_ci_internal_pipelines_28_days_user,
      usage_ci_builds_28_days_user,
      usage_ci_builds_all_time_user,
      usage_ci_builds_all_time_event,
      usage_ci_runners_all_time_event,
      usage_auto_devops_enabled_all_time_event,
      usage_template_repositories_all_time_event,
      usage_ci_pipeline_config_repository_28_days_user,
      usage_user_unique_users_all_secure_scanners_28_days_user,
      usage_user_container_scanning_jobs_28_days_user,
      usage_user_sast_jobs_28_days_user,
      usage_user_dast_jobs_28_days_user,
      usage_user_dependency_scanning_jobs_28_days_user,
      usage_user_license_management_jobs_28_days_user,
      usage_user_secret_detection_jobs_28_days_user,
      usage_projects_with_packages_all_time_event,
      usage_projects_with_packages_28_days_event,
      usage_deployments_28_days_user,
      usage_releases_28_days_user,
      usage_epics_28_days_user,
      usage_issues_28_days_user,
      usage_instance_user_count_not_aligned,
      usage_historical_max_users_not_aligned
    FROM marketing_contact_order
    WHERE dim_subscription_id IS NOT NULL

), usage_metrics AS (

    SELECT 
      dim_marketing_contact_id,
      SUM(usage_umau_28_days_user)                                                                  AS usage_umau_28_days_user,
      SUM(usage_action_monthly_active_users_project_repo_28_days_user)                              AS usage_action_monthly_active_users_project_repo_28_days_user,
      SUM(usage_merge_requests_28_days_user)                                                        AS usage_merge_requests_28_days_user,
      SUM(usage_commit_comment_all_time_event)                                                      AS usage_commit_comment_all_time_event,
      SUM(usage_source_code_pushes_all_time_event)                                                  AS usage_source_code_pushes_all_time_event,
      SUM(usage_ci_pipelines_28_days_user)                                                          AS usage_ci_pipelines_28_days_user,
      SUM(usage_ci_internal_pipelines_28_days_user)                                                 AS usage_ci_internal_pipelines_28_days_user,
      SUM(usage_ci_builds_28_days_user)                                                             AS usage_ci_builds_28_days_user,
      SUM(usage_ci_builds_all_time_user)                                                            AS usage_ci_builds_all_time_user,
      SUM(usage_ci_builds_all_time_event)                                                           AS usage_ci_builds_all_time_event,
      SUM(usage_ci_runners_all_time_event)                                                          AS usage_ci_runners_all_time_event,
      SUM(usage_auto_devops_enabled_all_time_event)                                                 AS usage_auto_devops_enabled_all_time_event,
      SUM(usage_template_repositories_all_time_event)                                               AS usage_template_repositories_all_time_event,
      SUM(usage_ci_pipeline_config_repository_28_days_user)                                         AS usage_ci_pipeline_config_repository_28_days_user,
      SUM(usage_user_unique_users_all_secure_scanners_28_days_user)                                 AS usage_user_unique_users_all_secure_scanners_28_days_user,
      SUM(usage_user_container_scanning_jobs_28_days_user)                                          AS usage_user_container_scanning_jobs_28_days_user,
      SUM(usage_user_sast_jobs_28_days_user)                                                        AS usage_user_sast_jobs_28_days_user,
      SUM(usage_user_dast_jobs_28_days_user)                                                        AS usage_user_dast_jobs_28_days_user,
      SUM(usage_user_dependency_scanning_jobs_28_days_user)                                         AS usage_user_dependency_scanning_jobs_28_days_user,
      SUM(usage_user_license_management_jobs_28_days_user)                                          AS usage_user_license_management_jobs_28_days_user,
      SUM(usage_user_secret_detection_jobs_28_days_user)                                            AS usage_user_secret_detection_jobs_28_days_user,
      SUM(usage_projects_with_packages_all_time_event)                                              AS usage_projects_with_packages_all_time_event,
      SUM(usage_projects_with_packages_28_days_event)                                               AS usage_projects_with_packages_28_days_event,
      SUM(usage_deployments_28_days_user)                                                           AS usage_deployments_28_days_user,
      SUM(usage_releases_28_days_user)                                                              AS usage_releases_28_days_user,
      SUM(usage_epics_28_days_user)                                                                 AS usage_epics_28_days_user,
      SUM(usage_issues_28_days_user)                                                                AS usage_issues_28_days_user,
      SUM(usage_instance_user_count_not_aligned)                                                    AS usage_instance_user_count_not_aligned,
      SUM(usage_historical_max_users_not_aligned)                                                   AS usage_historical_max_users_not_aligned
    FROM distinct_contact_subscription
    GROUP BY dim_marketing_contact_id

), prep AS (
  
    SELECT     
      marketing_contact.dim_marketing_contact_id,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Group Namespace Owner' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_group_namespace_owner,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Group Namespace Member' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_group_namespace_member,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Personal Namespace Owner' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_individual_namespace_owner,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Maintainer'
                                                                        )
                  AND (marketing_contact_order.is_saas_ultimate_tier OR marketing_contact_order.is_saas_premium_tier OR marketing_contact_order.is_saas_bronze_tier)
                    THEN 1
                  ELSE 0
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS is_group_maintainer_of_saas_paid_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Maintainer'
                                                                        )
                  AND marketing_contact_order.is_saas_free_tier
                    THEN 1
                  ELSE 0
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS is_group_maintainer_of_saas_free_tier,
      IFF(is_group_maintainer_of_saas_free_tier OR is_group_maintainer_of_saas_paid_tier, TRUE, FALSE) AS is_group_maintainer_of_saas,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Customer DB Owner' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_customer_db_owner,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.marketing_contact_role = 'Zuora Billing Contact' 
                    THEN 1 
                  ELSE 0 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_zuora_billing_contact,
      MIN(marketing_contact_order.days_since_saas_trial_ended)                                   AS days_since_saas_trial_ended,
      MIN(marketing_contact_order.days_since_saas_trial_ended_bucket)                            AS days_since_saas_trial_ended_bucket,
      MAX(marketing_contact_order.days_until_saas_trial_ends)                                    AS days_until_saas_trial_ends,
      MAX(marketing_contact_order.days_until_saas_trial_ends_bucket)                             AS days_until_saas_trial_ends_bucket,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_trial,   
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 1 
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS individual_namespace_is_saas_ultimate_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_member_of_saas_trial,      
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1 
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_member_of_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_member_of_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1 
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_member_of_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_group_namespace = 1 
                    AND marketing_contact_order.marketing_contact_role = 'Group Namespace Member'
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_member_of_saas_ultimate_tier,      
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         ) 
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_owner_of_saas_trial,    
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_owner_of_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_owner_of_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0 
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS group_owner_of_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Group Namespace Owner'
                                                                         )
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS group_owner_of_saas_ultimate_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         ) 
                    THEN marketing_contact_order.is_saas_trial AND marketing_contact_order.trial_end_date >= CURRENT_DATE
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_group_saas_trial,    
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_free_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_group_saas_free_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_bronze_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS responsible_for_group_saas_bronze_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0 
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_premium_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_group_saas_premium_tier,
      CASE 
        WHEN MAX(CASE 
                  WHEN marketing_contact_order.is_individual_namespace = 0
                    AND marketing_contact_order.marketing_contact_role IN (
                                                                          'Customer DB Owner'
                                                                          , 'Zuora Billing Contact'
                                                                         )
                    THEN marketing_contact_order.is_saas_ultimate_tier 
                  ELSE NULL 
                END) >= 1 THEN TRUE 
        ELSE FALSE
      END                                                                                        AS responsible_for_group_saas_ultimate_tier,      
      CASE 
        WHEN MAX(marketing_contact_order.is_self_managed_starter_tier)  >= 1 
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_self_managed_starter_tier, 
      CASE 
        WHEN MAX(marketing_contact_order.is_self_managed_premium_tier)  >= 1 
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_self_managed_premium_tier, 
      CASE 
        WHEN MAX(marketing_contact_order.is_self_managed_ultimate_tier) >= 1 
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS is_self_managed_ultimate_tier,
      CASE
        WHEN MAX(marketing_contact_order.is_setup_for_company) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS has_namespace_setup_for_company_use,
      CASE
        WHEN MAX(marketing_contact_order.does_namespace_have_public_project) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS has_namespace_with_public_project,
      CASE
        WHEN MAX(marketing_contact_order.does_free_namespace_have_public_project) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS has_free_namespace_with_public_project,
      CASE
        WHEN MAX(marketing_contact_order.is_ultimate_parent_namespace_public) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS is_member_of_public_ultimate_parent_namespace,
      CASE
        WHEN MAX(marketing_contact_order.is_ultimate_parent_namespace_private) = TRUE
          THEN TRUE
        ELSE FALSE
      END                                                                                        AS is_member_of_private_ultimate_parent_namespace,
      ARRAY_AGG(DISTINCT IFF(marketing_contact_order.is_ultimate_parent_namespace_public = TRUE, marketing_contact_order.dim_namespace_id, NULL))
                                                                                                 AS public_ultimate_parent_namespaces,
      ARRAY_AGG(DISTINCT IFF(marketing_contact_order.is_ultimate_parent_namespace_private = TRUE, marketing_contact_order.dim_namespace_id, NULL))
                                                                                                 AS private_ultimate_parent_namespaces,
      ARRAY_AGG(
                DISTINCT
                CASE
                  WHEN marketing_contact_order.is_ultimate_parent_namespace = FALSE
                    THEN NULL
                  ELSE IFNULL(marketing_contact_order.marketing_contact_role || ': ' || 
                    IFNULL(marketing_contact_order.namespace_path, CASE 
                                            WHEN marketing_contact_order.self_managed_product_tier IS NOT NULL
                                              THEN 'Self-Managed' 
                                            ELSE '' 
                                          END)  || ' | ' || 
                    IFNULL(marketing_contact_order.saas_product_tier, '') || 
                    IFNULL(marketing_contact_order.self_managed_product_tier, ''),
                    
                    'No Namespace') END
               )                                                                                 AS role_tier_ultimate_namespace_text

    FROM marketing_contact
    LEFT JOIN  marketing_contact_order
      ON marketing_contact_order.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    GROUP BY marketing_contact.dim_marketing_contact_id

), joined AS (

    SELECT 
      prep.*,
      IFF(individual_namespace_is_saas_bronze_tier
        OR group_owner_of_saas_bronze_tier
        OR group_member_of_saas_bronze_tier
        OR responsible_for_group_saas_bronze_tier,
        TRUE, FALSE)                                        AS is_saas_bronze_tier,
      IFF(individual_namespace_is_saas_premium_tier
        OR group_owner_of_saas_premium_tier
        OR group_member_of_saas_premium_tier
        OR responsible_for_group_saas_premium_tier,
        TRUE, FALSE)                                        AS is_saas_premium_tier,
      IFF(individual_namespace_is_saas_ultimate_tier
        OR group_owner_of_saas_ultimate_tier
        OR group_member_of_saas_ultimate_tier
        OR responsible_for_group_saas_ultimate_tier, 
        TRUE, FALSE)                                        AS is_saas_ultimate_tier,
      IFF(is_saas_bronze_tier
        OR is_self_managed_starter_tier,
        TRUE, FALSE)                                        AS is_bronze_starter_tier,
      IFF(is_saas_premium_tier
        OR is_self_managed_premium_tier,
        TRUE, FALSE)                                        AS is_premium_tier,
      IFF(is_saas_ultimate_tier
        OR is_self_managed_ultimate_tier,
        TRUE, FALSE)                                        AS is_ultimate_tier,                                                      
      IFF(is_saas_bronze_tier
        OR is_saas_premium_tier
        OR is_saas_ultimate_tier,
        TRUE, FALSE)                                        AS is_saas_delivery,
      IFF(is_self_managed_starter_tier
        OR is_self_managed_premium_tier
        OR is_self_managed_ultimate_tier,
        TRUE, FALSE)                                        AS is_self_managed_delivery,
      IFF(individual_namespace_is_saas_free_tier
        OR group_member_of_saas_free_tier
        OR group_owner_of_saas_free_tier,
        TRUE, FALSE)                                        AS is_saas_free_tier,
      IFF(is_saas_delivery
        OR is_self_managed_delivery,
        TRUE, FALSE)                                        AS is_paid_tier,
      marketing_contact.is_paid_tier_marketo,
      IFF(is_paid_tier = TRUE OR (is_paid_tier = FALSE AND marketing_contact.is_paid_tier_marketo = TRUE), TRUE, FALSE)
                                                            AS is_paid_tier_change,
      subscription_aggregate.min_subscription_start_date,
      subscription_aggregate.max_subscription_end_date,
      paid_subscription_aggregate.nbr_of_paid_subscriptions,
      CASE 
        WHEN (prep.responsible_for_group_saas_free_tier
              OR prep.individual_namespace_is_saas_free_tier
              OR prep.group_owner_of_saas_free_tier
             ) 
             AND NOT (prep.responsible_for_group_saas_ultimate_tier
                      OR prep.responsible_for_group_saas_premium_tier
                      OR prep.responsible_for_group_saas_bronze_tier
                      OR prep.individual_namespace_is_saas_bronze_tier
                      OR prep.individual_namespace_is_saas_premium_tier
                      OR prep.individual_namespace_is_saas_ultimate_tier
                      OR prep.group_owner_of_saas_bronze_tier
                      OR prep.group_owner_of_saas_premium_tier
                      OR prep.group_owner_of_saas_ultimate_tier
                     )
          THEN TRUE 
        ELSE FALSE 
      END                                                                                        AS responsible_for_free_tier_only,
      marketing_contact.email_address,
      marketing_contact.first_name,
      IFNULL(marketing_contact.last_name, 'Unknown')                                             AS last_name,
      marketing_contact.gitlab_user_name,
      IFNULL(marketing_contact.company_name, 'Unknown')                                          AS company_name,
      marketing_contact.sfdc_record_id,
      marketing_contact.dim_crm_account_id,
      marketing_contact.job_title,
      marketing_contact.it_job_title_hierarchy,
      marketing_contact.country,
      marketing_contact.mobile_phone,
      marketing_contact.sfdc_parent_sales_segment,
      marketing_contact.sfdc_parent_crm_account_region,
      marketing_contact.marketo_lead_id,
      marketing_contact.is_marketo_lead,
      marketing_contact.is_marketo_email_hard_bounced,
      marketing_contact.marketo_email_hard_bounced_date,
      marketing_contact.is_marketo_unsubscribed,
      marketing_contact.is_marketo_opted_in,
      marketing_contact.has_marketo_unsubscribed,
      marketing_contact.marketo_compliance_segment_value,
      marketing_contact.is_sfdc_lead_contact,
      marketing_contact.sfdc_lead_contact,
      marketing_contact.sfdc_created_date,
      marketing_contact.is_sfdc_opted_out,
      marketing_contact.is_gitlab_dotcom_user,
      marketing_contact.gitlab_dotcom_user_id,
      marketing_contact.gitlab_dotcom_created_date,
      marketing_contact.gitlab_dotcom_confirmed_date,
      marketing_contact.gitlab_dotcom_active_state,
      marketing_contact.gitlab_dotcom_last_login_date,
      marketing_contact.gitlab_dotcom_email_opted_in,
      marketing_contact.days_since_saas_signup,
      marketing_contact.days_since_saas_signup_bucket,
      marketing_contact.is_customer_db_user,
      marketing_contact.customer_db_customer_id,
      marketing_contact.customer_db_created_date,
      marketing_contact.customer_db_confirmed_date,
      IFF(latest_pql.email IS NOT NULL, TRUE, FALSE) AS is_pql,
      marketing_contact.is_pql_marketo,
      IFF(is_pql = TRUE OR (is_pql = FALSE AND marketing_contact.is_pql_marketo = TRUE), TRUE, FALSE)
                                            AS is_pql_change,
      latest_pql.pql_namespace_id,
      latest_pql.pql_namespace_name,
      latest_pql.pql_namespace_name_masked, 
      latest_pql.pql_product_interaction,
      latest_pql.pql_list_stages,
      latest_pql.pql_nbr_stages,
      latest_pql.pql_nbr_namespace_users,
      latest_pql.pql_trial_start_date,
      latest_pql.pql_min_subscription_start_date,
      latest_pql.pql_event_created_at,
      services_by_email.pql_nbr_integrations_installed,
      services_by_email.pql_integrations_installed,
      users_role_by_email.pql_namespace_creator_job_description,
      marketing_contact.days_since_self_managed_owner_signup,
      marketing_contact.days_since_self_managed_owner_signup_bucket,
      marketing_contact.zuora_contact_id,
      marketing_contact.zuora_created_date,
      marketing_contact.zuora_active_state,
      marketing_contact.wip_is_valid_email_address,
      marketing_contact.wip_invalid_email_address_reason,

      -- Propensity to purchase trials fields
      IFF(ptpt_scores_by_user.namespace_id IS NOT NULL, TRUE, FALSE)
                                                  AS is_ptpt_contact,
      IFF(is_ptpt_contact = TRUE OR (is_ptpt_contact = FALSE AND marketing_contact.is_ptpt_contact_marketo = TRUE), TRUE, FALSE)
                                                  AS is_ptpt_contact_change,
      ptpt_scores_by_user.namespace_id            AS ptpt_namespace_id,
      ptpt_scores_by_user.score_group             AS ptpt_score_group,
      ptpt_scores_by_user.insights                AS ptpt_insights,
      ptpt_scores_by_user.score_date              AS ptpt_score_date,
      ptpt_scores_by_user.past_score_group        AS ptpt_past_score_group,
      ptpt_scores_by_user.past_score_date         AS ptpt_past_score_date,

      -- Propensity to purchase Free fields
      IFF(ptpf_scores_by_user.namespace_id IS NOT NULL, TRUE, FALSE)
                                                  AS is_ptpf_contact,
      ptpf_scores_by_user.namespace_id            AS ptpf_namespace_id,
      ptpf_scores_by_user.score_group             AS ptpf_score_group,
      ptpf_scores_by_user.score_date              AS ptpf_score_date,
      ptpf_scores_by_user.past_score_group        AS ptpf_past_score_group,
      ptpf_scores_by_user.past_score_date         AS ptpf_past_score_date,

      -- Propensity to purchase fields
      IFF(ptp_scores_by_user.namespace_id IS NOT NULL, TRUE, FALSE)
                                                  AS is_ptp_contact,
      IFF(is_ptp_contact = TRUE OR (is_ptp_contact = FALSE AND marketing_contact.is_ptp_contact_marketo = TRUE
        ), TRUE, FALSE)
                                                  AS is_ptp_contact_change,
      ptp_scores_by_user.namespace_id             AS ptp_namespace_id,
      ptp_scores_by_user.score_group              AS ptp_score_group,
      ptp_scores_by_user.score_date               AS ptp_score_date,
      ptp_scores_by_user.insights                 AS ptp_insights,
      ptp_scores_by_user.past_insights            AS ptp_past_insights,
      ptp_scores_by_user.past_score_group         AS ptp_past_score_group,
      ptp_scores_by_user.past_score_date          AS ptp_past_score_date,
      CASE
        WHEN ptp_scores_by_user.days_since_trial_start BETWEEN 0 AND 30 THEN '< 30 days'
        WHEN ptp_scores_by_user.days_since_trial_start BETWEEN 30 AND 60 THEN '30 - 60 days'
        WHEN ptp_scores_by_user.days_since_trial_start BETWEEN 60 AND 90 THEN '60 - 90 days'
        WHEN ptp_scores_by_user.days_since_trial_start >= 90 THEN '90+ days'
      END                                         AS ptp_days_since_trial_start,
      ptp_scores_by_user.ptp_source               AS ptp_source,

      -- Namespace notification dates
      namespace_notifications.user_limit_namespace_id,
      namespace_notifications.user_limit_notification_at,
      namespace_notifications.user_limit_enforcement_at,
      IFF(namespace_notifications.user_limit_notification_at IS NOT NULL OR namespace_notifications.user_limit_enforcement_at IS NOT NULL,
        TRUE, FALSE)                              AS is_impacted_by_user_limit,
      IFF(is_impacted_by_user_limit = TRUE OR (is_impacted_by_user_limit = FALSE AND marketing_contact.is_impacted_by_user_limit_marketo = TRUE), TRUE, FALSE)
                                                  AS is_impacted_by_user_limit_change,

      usage_metrics.usage_umau_28_days_user,
      usage_metrics.usage_action_monthly_active_users_project_repo_28_days_user,
      usage_metrics.usage_merge_requests_28_days_user,
      usage_metrics.usage_commit_comment_all_time_event,
      usage_metrics.usage_source_code_pushes_all_time_event,
      usage_metrics.usage_ci_pipelines_28_days_user,
      usage_metrics.usage_ci_internal_pipelines_28_days_user,
      usage_metrics.usage_ci_builds_28_days_user,
      usage_metrics.usage_ci_builds_all_time_user,
      usage_metrics.usage_ci_builds_all_time_event,
      usage_metrics.usage_ci_runners_all_time_event,
      usage_metrics.usage_auto_devops_enabled_all_time_event,
      usage_metrics.usage_template_repositories_all_time_event,
      usage_metrics.usage_ci_pipeline_config_repository_28_days_user,
      usage_metrics.usage_user_unique_users_all_secure_scanners_28_days_user,
      usage_metrics.usage_user_container_scanning_jobs_28_days_user,
      usage_metrics.usage_user_sast_jobs_28_days_user,
      usage_metrics.usage_user_dast_jobs_28_days_user,
      usage_metrics.usage_user_dependency_scanning_jobs_28_days_user,
      usage_metrics.usage_user_license_management_jobs_28_days_user,
      usage_metrics.usage_user_secret_detection_jobs_28_days_user,
      usage_metrics.usage_projects_with_packages_all_time_event,
      usage_metrics.usage_projects_with_packages_28_days_event,
      usage_metrics.usage_deployments_28_days_user,
      usage_metrics.usage_releases_28_days_user,
      usage_metrics.usage_epics_28_days_user,
      usage_metrics.usage_issues_28_days_user,
      usage_metrics.usage_instance_user_count_not_aligned,
      usage_metrics.usage_historical_max_users_not_aligned,
      'Raw'                                                                                      AS lead_status,
      'Snowflake Email Marketing Database'                                                       AS lead_source      
    FROM prep
    LEFT JOIN marketing_contact 
      ON marketing_contact.dim_marketing_contact_id = prep.dim_marketing_contact_id
    LEFT JOIN subscription_aggregate
      ON subscription_aggregate.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN paid_subscription_aggregate
      ON paid_subscription_aggregate.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN usage_metrics
      ON usage_metrics.dim_marketing_contact_id = prep.dim_marketing_contact_id
    LEFT JOIN latest_pql
      ON latest_pql.email = marketing_contact.email_address
    LEFT JOIN services_by_email
      ON services_by_email.email = marketing_contact.email_address
    LEFT JOIN users_role_by_email
      ON users_role_by_email.email = marketing_contact.email_address
    LEFT JOIN ptpt_scores_by_user
      ON ptpt_scores_by_user.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN ptpf_scores_by_user
      ON ptpf_scores_by_user.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN ptp_scores_by_user
      ON ptp_scores_by_user.dim_marketing_contact_id = marketing_contact.dim_marketing_contact_id
    LEFT JOIN namespace_notifications
      ON namespace_notifications.email_address = marketing_contact.email_address
)



  , hashing AS (

    SELECT *,

      md5(cast(coalesce(cast(is_group_namespace_owner as 
    varchar
), '') || '-' || coalesce(cast(is_group_namespace_member as 
    varchar
), '') || '-' || coalesce(cast(is_individual_namespace_owner as 
    varchar
), '') || '-' || coalesce(cast(is_customer_db_owner as 
    varchar
), '') || '-' || coalesce(cast(is_zuora_billing_contact as 
    varchar
), '') || '-' || coalesce(cast(days_since_saas_trial_ended_bucket as 
    varchar
), '') || '-' || coalesce(cast(individual_namespace_is_saas_trial as 
    varchar
), '') || '-' || coalesce(cast(individual_namespace_is_saas_free_tier as 
    varchar
), '') || '-' || coalesce(cast(individual_namespace_is_saas_bronze_tier as 
    varchar
), '') || '-' || coalesce(cast(individual_namespace_is_saas_premium_tier as 
    varchar
), '') || '-' || coalesce(cast(individual_namespace_is_saas_ultimate_tier as 
    varchar
), '') || '-' || coalesce(cast(group_member_of_saas_trial as 
    varchar
), '') || '-' || coalesce(cast(group_member_of_saas_free_tier as 
    varchar
), '') || '-' || coalesce(cast(group_member_of_saas_bronze_tier as 
    varchar
), '') || '-' || coalesce(cast(group_member_of_saas_premium_tier as 
    varchar
), '') || '-' || coalesce(cast(group_member_of_saas_ultimate_tier as 
    varchar
), '') || '-' || coalesce(cast(group_owner_of_saas_trial as 
    varchar
), '') || '-' || coalesce(cast(group_owner_of_saas_free_tier as 
    varchar
), '') || '-' || coalesce(cast(group_owner_of_saas_bronze_tier as 
    varchar
), '') || '-' || coalesce(cast(group_owner_of_saas_premium_tier as 
    varchar
), '') || '-' || coalesce(cast(group_owner_of_saas_ultimate_tier as 
    varchar
), '') || '-' || coalesce(cast(responsible_for_group_saas_trial as 
    varchar
), '') || '-' || coalesce(cast(responsible_for_group_saas_free_tier as 
    varchar
), '') || '-' || coalesce(cast(responsible_for_group_saas_bronze_tier as 
    varchar
), '') || '-' || coalesce(cast(responsible_for_group_saas_premium_tier as 
    varchar
), '') || '-' || coalesce(cast(responsible_for_group_saas_ultimate_tier as 
    varchar
), '') || '-' || coalesce(cast(is_self_managed_starter_tier as 
    varchar
), '') || '-' || coalesce(cast(is_self_managed_premium_tier as 
    varchar
), '') || '-' || coalesce(cast(is_self_managed_ultimate_tier as 
    varchar
), '') || '-' || coalesce(cast(email_address as 
    varchar
), '') || '-' || coalesce(cast(first_name as 
    varchar
), '') || '-' || coalesce(cast(last_name as 
    varchar
), '') || '-' || coalesce(cast(gitlab_user_name as 
    varchar
), '') || '-' || coalesce(cast(company_name as 
    varchar
), '') || '-' || coalesce(cast(country as 
    varchar
), '') || '-' || coalesce(cast(is_gitlab_dotcom_user as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_user_id as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_created_date as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_confirmed_date as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_active_state as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_last_login_date as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_email_opted_in as 
    varchar
), '') || '-' || coalesce(cast(is_customer_db_user as 
    varchar
), '') || '-' || coalesce(cast(customer_db_customer_id as 
    varchar
), '') || '-' || coalesce(cast(customer_db_created_date as 
    varchar
), '') || '-' || coalesce(cast(customer_db_confirmed_date as 
    varchar
), '') || '-' || coalesce(cast(zuora_contact_id as 
    varchar
), '') || '-' || coalesce(cast(zuora_created_date as 
    varchar
), '') || '-' || coalesce(cast(zuora_active_state as 
    varchar
), '') || '-' || coalesce(cast(pql_list_stages as 
    varchar
), '') || '-' || coalesce(cast(pql_nbr_stages as 
    varchar
), '') || '-' || coalesce(cast(pql_nbr_namespace_users as 
    varchar
), '') || '-' || coalesce(cast(has_namespace_setup_for_company_use as 
    varchar
), '') || '-' || coalesce(cast(pql_namespace_id as 
    varchar
), '') || '-' || coalesce(cast(pql_namespace_name as 
    varchar
), '') || '-' || coalesce(cast(pql_nbr_integrations_installed as 
    varchar
), '') || '-' || coalesce(cast(pql_integrations_installed as 
    varchar
), '') || '-' || coalesce(cast(pql_namespace_creator_job_description as 
    varchar
), '') || '-' || coalesce(cast(is_pql as 
    varchar
), '') || '-' || coalesce(cast(is_paid_tier as 
    varchar
), '') || '-' || coalesce(cast(is_pql_change as 
    varchar
), '') || '-' || coalesce(cast(is_paid_tier_change as 
    varchar
), '') || '-' || coalesce(cast(is_ptpt_contact as 
    varchar
), '') || '-' || coalesce(cast(is_ptpt_contact_change as 
    varchar
), '') || '-' || coalesce(cast(ptpt_namespace_id as 
    varchar
), '') || '-' || coalesce(cast(ptpt_score_group as 
    varchar
), '') || '-' || coalesce(cast(ptpt_insights as 
    varchar
), '') || '-' || coalesce(cast(ptpt_score_date as 
    varchar
), '') || '-' || coalesce(cast(ptpt_past_score_group as 
    varchar
), '') || '-' || coalesce(cast(is_member_of_public_ultimate_parent_namespace as 
    varchar
), '') || '-' || coalesce(cast(is_member_of_private_ultimate_parent_namespace as 
    varchar
), '') || '-' || coalesce(cast(user_limit_notification_at as 
    varchar
), '') || '-' || coalesce(cast(user_limit_enforcement_at as 
    varchar
), '') || '-' || coalesce(cast(is_impacted_by_user_limit as 
    varchar
), '') || '-' || coalesce(cast(is_impacted_by_user_limit_change as 
    varchar
), '') || '-' || coalesce(cast(user_limit_namespace_id as 
    varchar
), '') || '-' || coalesce(cast(marketo_lead_id as 
    varchar
), '') || '-' || coalesce(cast(is_ptp_contact as 
    varchar
), '') || '-' || coalesce(cast(is_ptp_contact_change as 
    varchar
), '') || '-' || coalesce(cast(ptp_namespace_id as 
    varchar
), '') || '-' || coalesce(cast(ptp_score_group as 
    varchar
), '') || '-' || coalesce(cast(ptp_score_date as 
    varchar
), '') || '-' || coalesce(cast(ptp_insights as 
    varchar
), '') || '-' || coalesce(cast(ptp_past_insights as 
    varchar
), '') || '-' || coalesce(cast(ptp_past_score_group as 
    varchar
), '') || '-' || coalesce(cast(ptp_days_since_trial_start as 
    varchar
), '') || '-' || coalesce(cast(ptp_source as 
    varchar
), '') as 
    varchar
)) as prev_hash

    FROM joined

  ), final as (

      

        SELECT hashing.*,
          CASE
            WHEN hashing.prev_hash = t.prev_hash THEN last_changed
            ELSE CURRENT_TIMESTAMP()
          END AS last_changed
        FROM hashing
        LEFT JOIN "PREP".sensitive.mart_marketing_contact as t on t.prev_hash = hashing.prev_hash

      

  )


SELECT
      *,
      '@trevor31'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-02-09'::DATE        AS model_created_date,
      '2023-06-19'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final16:Tbf3,Array of objects containing information related to each ultimate parent namespace that the marketing contact is directly related to. Each object inside the array is a different namespace.

For the trial fields in the objects, in case a namespace has had multiple trials only the latest one will be used to populate the fields. If a namespace never had a trials, these fields will not exist in the object.

Each object in the array contains the following fields (in case it does not, it means that the attribute is not applicable to that namespace):

- **Namespace_id**: Gitlab.com namespace_id of the namespace in question.
- **user_access_level**: Numerical value representing the access level the marketing user contact has to the namespace. Mapping of the numerical values can be seen [HERE](https://docs.gitlab.com/ee/api/access_requests.html).
- **user_access_level_name**: Name of the access level the marketing user contact has to the namespace.
- **gitlab_plan_title**: Plan of the namespace.
- **gitlab_plan_is_paid**: Flag indicating whether the namespace is paid or not.
- **is_setup_for_company**: Flag indicating whether the namespace was set up for company use or not.
- **current_member_count**: Number of members in the namespace
- **created_at**: Creation timestamp of the namespace.
- **creator_user_id**: The gitlab_dotcom_user_id of the creator of the namespace.
- **is_setup_for_company**: Flag indicating whether the namespace was set up for company use or not.
- **trial_start_date**: Trial start date of the namespace. 
- **trial_expired_date**: Date in which the trial expires/expired at. 
- **is_active_trial**: Flag that indicates whether the namespace is in an active trial. 
- **glm_content**: GLM content of the trial. 
- **glm_source**: GLM source of the trial. 
- **is_namespace_pql**: Flag indicating whether the namespace is part of the PQL program (Product Qualified Lead). 
- **list_of_stages**: Array listing all the stages adopted by the namespace during Trial and/or Free process. 
- **nbr_integrations_installed**: Number integrations installed in the namespace. 
- **integrations_installed**: Array listing all the integrations installed in the namespace. 
- **ptp_source**: Source of the propensity to purchase model. Currently, that can be from either PtPT (Propensity to Purchase: Trial) or PtPF (Propensity to Purchase: Free) models. 
- **ptp_score_date**: Date in which the ptp_score_group was calculated. 
- **ptp_score_group**: Score group for the namespace given by the PtP machine learning model. 
- **ptp_insights**: List of insights on the PtP scores. 
- **ptp_previous_score_group**: Previous score group for the namespace given by the PtP machine learning model. 
- **user_limit_notification_at**: Datetime detailing when the user limit notification happened for the namespace. 
- **user_limit_enforcement_at**: Datetime detailing when the user limit enforcement will happen for the namespace. 
- **is_impacted_by_user_limit**: Flag indicating whether the namespace is impacted by the user limits project.17:T49a2,{{ config(
    materialized='table'
) }}

{{ simple_cte([
    ('dim_marketing_contact','dim_marketing_contact'),
    ('gitlab_dotcom_members_source','gitlab_dotcom_members_source'),
    ('dim_namespace', 'dim_namespace'),
    ('ptpt_scores', 'ptpt_scores'),
    ('ptpf_scores', 'ptpf_scores'),
    ('customers_db_trial_histories_source', 'customers_db_trial_histories_source'),
    ('gitlab_dotcom_namespace_details_source', 'gitlab_dotcom_namespace_details_source'),
    ('gitlab_dotcom_users_source', 'gitlab_dotcom_users_source'),

    ('gitlab_dotcom_memberships', 'gitlab_dotcom_memberships'),
    ('customers_db_trials', 'customers_db_trials'),
    ('customers_db_charges_xf', 'customers_db_charges_xf'),
    ('customers_db_leads', 'customers_db_leads_source'),
    ('map_gitlab_dotcom_xmau_metrics', 'map_gitlab_dotcom_xmau_metrics'),
    ('services', 'gitlab_dotcom_integrations_source'),
    ('project', 'prep_project'),
    ('fct_event_user_daily', 'fct_event_user_daily')
]) }}

, ptpt_score_dates AS (
    
    SELECT DISTINCT score_date
    FROM ptpt_scores
  
), ptpt_last_dates AS (
  
    SELECT
      FIRST_VALUE(score_date) OVER(ORDER BY score_date DESC)  AS last_score_date,
      NTH_VALUE(score_date, 2) OVER(ORDER BY score_date DESC) AS second_last_score_date
    FROM ptpt_score_dates
    LIMIT 1

), ptpf_score_dates AS (
    
    SELECT DISTINCT score_date
    FROM ptpf_scores
  
), ptpf_last_dates AS (
  
    SELECT
      FIRST_VALUE(score_date) OVER(ORDER BY score_date DESC)  AS last_score_date,
      NTH_VALUE(score_date, 2) OVER(ORDER BY score_date DESC) AS second_last_score_date
    FROM ptpf_score_dates
    LIMIT 1

), namespace_user_mapping AS (

  SELECT DISTINCT
    gitlab_dotcom_members_source.user_id,
    gitlab_dotcom_members_source.source_id AS namespace_id,
    dim_namespace.ultimate_parent_namespace_id,
    gitlab_dotcom_members_source.access_level
  FROM gitlab_dotcom_members_source
  LEFT JOIN dim_namespace
    ON gitlab_dotcom_members_source.source_id = dim_namespace.dim_namespace_id
  WHERE gitlab_dotcom_members_source.is_currently_valid = TRUE
    AND gitlab_dotcom_members_source.member_source_type = 'Namespace'
    AND {{ filter_out_blocked_users('gitlab_dotcom_members_source', 'user_id') }}
    AND gitlab_dotcom_members_source.user_id IS NOT NULL
  QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_dotcom_members_source.user_id, gitlab_dotcom_members_source.source_id
    ORDER BY gitlab_dotcom_members_source.access_level DESC) = 1 -- There are less than 100 cases where a user has more than one access level to
    -- the same namespace. This selects the highest of said access levels

)

-------------------------- Start of PQL logic: --------------------------

, namespaces AS (
  
    SELECT
      gitlab_dotcom_users_source.email,
      dim_namespace.dim_namespace_id,
      dim_namespace.namespace_name,
      dim_namespace.created_at              AS namespace_created_at,
      dim_namespace.created_at::DATE        AS namespace_created_at_date,
      dim_namespace.gitlab_plan_title       AS plan_title,
      dim_namespace.creator_id,
      dim_namespace.current_member_count    AS member_count
    FROM dim_namespace
    LEFT JOIN gitlab_dotcom_users_source
      ON gitlab_dotcom_users_source.user_id = dim_namespace.creator_id
    WHERE dim_namespace.namespace_is_internal = FALSE
      AND LOWER(gitlab_dotcom_users_source.state) = 'active'
      AND LOWER(dim_namespace.namespace_type) = 'group'
      AND dim_namespace.ultimate_parent_namespace_id = dim_namespace.dim_namespace_id 
      AND date(dim_namespace.created_at) >= '2021-01-27'::DATE
  
), flattened_members AS (

    SELECT --flattening members table to 1 record per member_id
      members.user_id,
      members.source_id,
      members.invite_created_at,
      MIN(members.invite_accepted_at) AS invite_accepted_at
    FROM gitlab_dotcom_members_source members
    INNER JOIN namespaces --limit to just namespaces we care about
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
    WHERE LOWER(members.member_source_type) = 'namespace' --only looking at namespace invites
      AND members.invite_created_at >= namespaces.namespace_created_at --invite created after namespace created
      AND IFNULL(members.invite_accepted_at, CURRENT_TIMESTAMP) >= members.invite_created_at --invite accepted after invite created (removes weird edge cases with imported projects, etc)
    {{ dbt_utils.group_by(3) }}

), invite_status AS (

    SELECT --pull in relevant namespace data, invite status, etc
      namespaces.dim_namespace_id,
      members.user_id,
      IFF(memberships.user_id IS NOT NULL, TRUE, FALSE) AS invite_was_successful --flag whether the user actually joined the namespace
    FROM flattened_members members
    JOIN namespaces
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
      AND (invite_accepted_at IS NULL OR (TIMESTAMPDIFF(minute,invite_accepted_at,namespace_created_at) NOT IN (0,1,2))) = TRUE -- this blocks namespaces created within two minutes of the namespace creator accepting their invite
    LEFT JOIN gitlab_dotcom_memberships memberships --record added once invite is accepted/user has access
      ON members.user_id = memberships.user_id
      AND members.source_id = memberships.membership_source_id
      AND memberships.is_billable = TRUE
    WHERE members.user_id != namespaces.creator_id --not an "invite" if user created namespace

), namespaces_with_user_count AS (

    SELECT
      dim_namespace_id,
      COUNT(DISTINCT user_id) AS current_member_count
    FROM invite_status
    WHERE invite_was_successful = TRUE
    GROUP BY 1

), subscriptions AS (
  
    SELECT 
      charges.current_gitlab_namespace_id::INT                      AS namespace_id, 
      MIN(charges.subscription_start_date)                          AS min_subscription_start_date
    FROM customers_db_charges_xf charges
    INNER JOIN namespaces 
      ON charges.current_gitlab_namespace_id = namespaces.dim_namespace_id
    WHERE charges.current_gitlab_namespace_id IS NOT NULL
      AND charges.product_category IN ('SaaS - Ultimate','SaaS - Premium') -- changing to product category field, used by the charges table
    GROUP BY 1
  
), latest_trial_by_user AS (
  
    SELECT *
    FROM customers_db_trials
    QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_user_id ORDER BY trial_start_date DESC) = 1

), pqls AS (
  
    SELECT DISTINCT
      leads.product_interaction,
      leads.user_id,
      users.email,
      leads.namespace_id           AS dim_namespace_id,
      dim_namespace.namespace_name,
      leads.trial_start_date::DATE AS trial_start_date,
      leads.created_at             AS pql_event_created_at
    FROM customers_db_leads leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'hand raise pql'
  
    UNION ALL
  
    SELECT DISTINCT 
      leads.product_interaction,
      leads.user_id,
      users.email,
      latest_trial_by_user.gitlab_namespace_id    AS dim_namespace_id,
      dim_namespace.namespace_name,
      latest_trial_by_user.trial_start_date::DATE AS trial_start_date,
      leads.created_at                            AS pql_event_created_at
    FROM customers_db_leads AS leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN latest_trial_by_user
      ON latest_trial_by_user.gitlab_user_id = leads.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'saas trial'
      AND leads.is_for_business_use = 'True'

), stages_adopted AS (
  
    SELECT 
      namespaces.dim_namespace_id,
      namespaces.namespace_name,
      namespaces.email,
      namespaces.creator_id,
      namespaces.member_count,
      'SaaS Trial or Free'                       AS product_interaction,
      subscriptions.min_subscription_start_date,
      ARRAYAGG(DISTINCT events.stage_name)       AS list_of_stages,
      COUNT(DISTINCT events.stage_name)          AS active_stage_count
    FROM fct_event_user_daily   AS events
    INNER JOIN namespaces 
      ON namespaces.dim_namespace_id = events.dim_ultimate_parent_namespace_id 
    LEFT JOIN map_gitlab_dotcom_xmau_metrics AS xmau 
      ON xmau.common_events_to_include = events.event_name
    LEFT JOIN subscriptions 
      ON subscriptions.namespace_id = namespaces.dim_namespace_id
    WHERE days_since_namespace_creation_at_event_date BETWEEN 0 AND 365
      AND events.plan_name_at_event_date IN ('trial','free', 'ultimate_trial') --Added in to only use events from a free or trial namespace (which filters based on the selection chose for the `free_or_trial` filter
      AND xmau.smau = TRUE
      AND events.event_date BETWEEN namespaces.namespace_created_at_date AND IFNULL(subscriptions.min_subscription_start_date,CURRENT_DATE)
    {{ dbt_utils.group_by(7) }}
  
), pqls_filtered AS (

    SELECT
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted 
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'saas trial'
      AND IFNULL(stages_adopted.min_subscription_start_date,CURRENT_DATE) >= pqls.trial_start_date

    UNION

    SELECT 
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'hand raise pql'

), services_by_namespace AS (

    SELECT
      project.dim_namespace_id                                                                   AS dim_namespace_id,
      COUNT(*)                                                                                   AS nbr_integrations_installed,
      ARRAY_AGG(DISTINCT services.service_type) WITHIN GROUP (ORDER BY services.service_type)    AS integrations_installed
    FROM services
    LEFT JOIN project
      ON services.project_id = project.dim_project_id
    INNER JOIN namespaces
      ON namespaces.dim_namespace_id = project.dim_namespace_id
    GROUP BY 1

), pqls_by_user AS (

    SELECT DISTINCT user_id
    FROM pqls

)

-------------------------- End of PQL logic --------------------------

, stages_adopted_by_namespace AS (

  SELECT DISTINCT
    dim_namespace_id,
    list_of_stages,
    active_stage_count
  FROM stages_adopted

), namespace_details AS (

  SELECT
    namespace_user_mapping.user_id,
    dim_namespace.dim_namespace_id                                              AS namespace_id,
    namespace_user_mapping.access_level                                         AS user_access_level,
    CASE user_access_level
      WHEN 50 THEN 'Owner'
      WHEN 40 THEN 'Maintainer'
      WHEN 30 THEN 'Developer'
      WHEN 20 THEN 'Reporter'
      WHEN 10 THEN 'Guest'
      WHEN 5  THEN 'Minimal access'
      ELSE 'Other'
    END                                                                         AS user_access_level_name,

    dim_namespace.gitlab_plan_title,
    dim_namespace.gitlab_plan_is_paid,
    dim_namespace.is_setup_for_company,
    dim_namespace.current_member_count,
    dim_namespace.created_at                                                    AS created_at,
    dim_namespace.creator_id                                                    AS creator_user_id,

    customers_db_trial_histories_source.start_date                              AS trial_start_date,
    customers_db_trial_histories_source.expired_on                              AS trial_expired_date,
    IFF(CURRENT_DATE() >= trial_start_date AND CURRENT_DATE() <= COALESCE(trial_expired_date, CURRENT_DATE()), TRUE, FALSE) 
                                                                                AS is_active_trial,
    customers_db_trial_histories_source.glm_content,
    customers_db_trial_histories_source.glm_source,

    IFF(pqls_filtered.pql_namespace_id IS NOT NULL, TRUE, FALSE)                AS is_namespace_pql,

    stages_adopted_by_namespace.list_of_stages,
    stages_adopted_by_namespace.active_stage_count,
    services_by_namespace.nbr_integrations_installed,
    services_by_namespace.integrations_installed,

    
    CASE
      WHEN last_ptpt_scores.score_group >= 4
        THEN 'Trial'
      WHEN last_ptpf_scores.score_group >= 4
        THEN 'Free'
      WHEN last_ptpt_scores.score_group IS NOT NULL
        THEN 'Trial'
      WHEN last_ptpf_scores.score_group IS NOT NULL
        THEN 'Free'
      ELSE NULL
    END                                                                         AS ptp_source,
    IFF(ptp_source = 'Trial', last_ptpt_scores.score_date, last_ptpf_scores.score_date)
                                                                                AS ptp_score_date,
    IFF(ptp_source = 'Trial', last_ptpt_scores.score_group, last_ptpf_scores.score_group)
                                                                                AS ptp_score_group,
    IFF(ptp_source = 'Trial', last_ptpt_scores.insights, last_ptpf_scores.insights)
                                                                                AS ptp_insights,
    IFF(ptp_source = 'Trial', second_last_ptpt_scores.score_group, second_last_ptpf_scores.score_group)
                                                                                AS ptp_previous_score_group,

    gitlab_dotcom_namespace_details_source.dashboard_notification_at            AS user_limit_notification_at,
    gitlab_dotcom_namespace_details_source.dashboard_enforcement_at             AS user_limit_enforcement_at,
    IFF(user_limit_notification_at IS NOT NULL OR user_limit_enforcement_at IS NOT NULL,
        TRUE, FALSE)                                                            AS is_impacted_by_user_limit

  FROM namespace_user_mapping
  INNER JOIN dim_namespace
    ON dim_namespace.dim_namespace_id = namespace_user_mapping.namespace_id
    AND namespace_is_ultimate_parent = TRUE
  LEFT JOIN ptpt_last_dates
  LEFT JOIN ptpt_scores AS last_ptpt_scores
    ON last_ptpt_scores.namespace_id = namespace_user_mapping.namespace_id
    AND last_ptpt_scores.score_date = ptpt_last_dates.last_score_date
  LEFT JOIN ptpt_scores AS second_last_ptpt_scores
    ON second_last_ptpt_scores.namespace_id = namespace_user_mapping.namespace_id
    AND second_last_ptpt_scores.score_date = ptpt_last_dates.second_last_score_date
  LEFT JOIN ptpf_last_dates
  LEFT JOIN ptpf_scores AS last_ptpf_scores
    ON last_ptpf_scores.namespace_id = namespace_user_mapping.namespace_id
    AND last_ptpf_scores.score_date = ptpf_last_dates.last_score_date
  LEFT JOIN ptpf_scores AS second_last_ptpf_scores
    ON second_last_ptpf_scores.namespace_id = namespace_user_mapping.namespace_id
    AND second_last_ptpf_scores.score_date = ptpf_last_dates.second_last_score_date
  LEFT JOIN customers_db_trial_histories_source
    ON customers_db_trial_histories_source.gl_namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN gitlab_dotcom_namespace_details_source
    ON gitlab_dotcom_namespace_details_source.namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN stages_adopted_by_namespace
    ON stages_adopted_by_namespace.dim_namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN pqls_filtered
    ON pqls_filtered.pql_namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN services_by_namespace
    ON services_by_namespace.dim_namespace_id = namespace_user_mapping.namespace_id

), user_aggregated_namespace_details AS (

  SELECT 
    user_id,
    ARRAY_AGG(OBJECT_CONSTRUCT(*)) AS namespaces_array
  FROM namespace_details
  GROUP BY 1
  
), user_trials AS (

  SELECT
    user_id,
    MAX(trial_start_date) AS max_trial_start_date
  FROM namespace_details
  GROUP BY 1

  ), user_details_and_namespace_details AS (

  SELECT
    dim_marketing_contact.dim_marketing_contact_id,
    dim_marketing_contact.email_address,
    dim_marketing_contact.first_name,
    dim_marketing_contact.last_name,
    dim_marketing_contact.country,
    dim_marketing_contact.company_name,
    dim_marketing_contact.job_title,
    dim_marketing_contact.gitlab_dotcom_user_id,
    dim_marketing_contact.gitlab_user_name,
    dim_marketing_contact.gitlab_dotcom_active_state,
    dim_marketing_contact.gitlab_dotcom_confirmed_date,
    dim_marketing_contact.gitlab_dotcom_created_date,
    dim_marketing_contact.gitlab_dotcom_last_login_date,
    dim_marketing_contact.gitlab_dotcom_email_opted_in,
    IFF(pqls_by_user.user_id IS NOT NULL, TRUE, FALSE) AS is_pql,
    user_trials.max_trial_start_date,
    user_aggregated_namespace_details.namespaces_array

  FROM dim_marketing_contact
  LEFT JOIN user_aggregated_namespace_details
    ON dim_marketing_contact.gitlab_dotcom_user_id = user_aggregated_namespace_details.user_id
  LEFT JOIN pqls_by_user
    ON pqls_by_user.user_id = dim_marketing_contact.gitlab_dotcom_user_id
  LEFT JOIN user_trials
    ON user_trials.user_id = dim_marketing_contact.gitlab_dotcom_user_id

  WHERE dim_marketing_contact.gitlab_dotcom_user_id IS NOT NULL
    AND (
      dim_marketing_contact.gitlab_dotcom_created_date::DATE >= '2022-06-01'
      OR user_trials.max_trial_start_date::DATE >= DATEADD('month', -3, CURRENT_DATE)
    )

)

{{ hash_diff(
    cte_ref="user_details_and_namespace_details",
    return_cte="final",
    columns=[
      'first_name',
      'last_name',
      'country',
      'company_name',
      'job_title',
      'gitlab_dotcom_user_id',
      'gitlab_user_name',
      'gitlab_dotcom_active_state',
      'gitlab_dotcom_confirmed_date',
      'gitlab_dotcom_created_date',
      'gitlab_dotcom_last_login_date',
      'gitlab_dotcom_email_opted_in',
      'is_pql',
      'max_trial_start_date',
      'namespaces_array'
      ]
) }}

SELECT *
FROM final18:T502a,



WITH dim_marketing_contact AS (

    SELECT * 
    FROM "PREP".sensitive.dim_marketing_contact

), gitlab_dotcom_members_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_members_source

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), ptpt_scores AS (

    SELECT * 
    FROM "PROD".workspace_data_science.ptpt_scores

), ptpf_scores AS (

    SELECT * 
    FROM "PROD".workspace_data_science.ptpf_scores

), customers_db_trial_histories_source AS (

    SELECT * 
    FROM "PREP".customers.customers_db_trial_histories_source

), gitlab_dotcom_namespace_details_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_namespace_details_source

), gitlab_dotcom_users_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_users_source

), gitlab_dotcom_memberships AS (

    SELECT * 
    FROM "PROD".legacy.gitlab_dotcom_memberships

), customers_db_trials AS (

    SELECT * 
    FROM "PROD".legacy.customers_db_trials

), customers_db_charges_xf AS (

    SELECT * 
    FROM "PROD".restricted_safe_legacy.customers_db_charges_xf

), customers_db_leads AS (

    SELECT * 
    FROM "PREP".customers.customers_db_leads_source

), map_gitlab_dotcom_xmau_metrics AS (

    SELECT * 
    FROM "PROD".common_mapping.map_gitlab_dotcom_xmau_metrics

), services AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_integrations_source

), project AS (

    SELECT * 
    FROM "PROD".common_prep.prep_project

), fct_event_user_daily AS (

    SELECT * 
    FROM "PROD".common.fct_event_user_daily

)

, ptpt_score_dates AS (
    
    SELECT DISTINCT score_date
    FROM ptpt_scores
  
), ptpt_last_dates AS (
  
    SELECT
      FIRST_VALUE(score_date) OVER(ORDER BY score_date DESC)  AS last_score_date,
      NTH_VALUE(score_date, 2) OVER(ORDER BY score_date DESC) AS second_last_score_date
    FROM ptpt_score_dates
    LIMIT 1

), ptpf_score_dates AS (
    
    SELECT DISTINCT score_date
    FROM ptpf_scores
  
), ptpf_last_dates AS (
  
    SELECT
      FIRST_VALUE(score_date) OVER(ORDER BY score_date DESC)  AS last_score_date,
      NTH_VALUE(score_date, 2) OVER(ORDER BY score_date DESC) AS second_last_score_date
    FROM ptpf_score_dates
    LIMIT 1

), namespace_user_mapping AS (

  SELECT DISTINCT
    gitlab_dotcom_members_source.user_id,
    gitlab_dotcom_members_source.source_id AS namespace_id,
    dim_namespace.ultimate_parent_namespace_id,
    gitlab_dotcom_members_source.access_level
  FROM gitlab_dotcom_members_source
  LEFT JOIN dim_namespace
    ON gitlab_dotcom_members_source.source_id = dim_namespace.dim_namespace_id
  WHERE gitlab_dotcom_members_source.is_currently_valid = TRUE
    AND gitlab_dotcom_members_source.member_source_type = 'Namespace'
    AND NOT EXISTS (

        SELECT 1
        FROM "PREP".gitlab_dotcom.gitlab_dotcom_users_source users_source
        WHERE users_source.state = 'blocked' 
          AND users_source.user_id = gitlab_dotcom_members_source.user_id

    )
    AND gitlab_dotcom_members_source.user_id IS NOT NULL
  QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_dotcom_members_source.user_id, gitlab_dotcom_members_source.source_id
    ORDER BY gitlab_dotcom_members_source.access_level DESC) = 1 -- There are less than 100 cases where a user has more than one access level to
    -- the same namespace. This selects the highest of said access levels

)

-------------------------- Start of PQL logic: --------------------------

, namespaces AS (
  
    SELECT
      gitlab_dotcom_users_source.email,
      dim_namespace.dim_namespace_id,
      dim_namespace.namespace_name,
      dim_namespace.created_at              AS namespace_created_at,
      dim_namespace.created_at::DATE        AS namespace_created_at_date,
      dim_namespace.gitlab_plan_title       AS plan_title,
      dim_namespace.creator_id,
      dim_namespace.current_member_count    AS member_count
    FROM dim_namespace
    LEFT JOIN gitlab_dotcom_users_source
      ON gitlab_dotcom_users_source.user_id = dim_namespace.creator_id
    WHERE dim_namespace.namespace_is_internal = FALSE
      AND LOWER(gitlab_dotcom_users_source.state) = 'active'
      AND LOWER(dim_namespace.namespace_type) = 'group'
      AND dim_namespace.ultimate_parent_namespace_id = dim_namespace.dim_namespace_id 
      AND date(dim_namespace.created_at) >= '2021-01-27'::DATE
  
), flattened_members AS (

    SELECT --flattening members table to 1 record per member_id
      members.user_id,
      members.source_id,
      members.invite_created_at,
      MIN(members.invite_accepted_at) AS invite_accepted_at
    FROM gitlab_dotcom_members_source members
    INNER JOIN namespaces --limit to just namespaces we care about
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
    WHERE LOWER(members.member_source_type) = 'namespace' --only looking at namespace invites
      AND members.invite_created_at >= namespaces.namespace_created_at --invite created after namespace created
      AND IFNULL(members.invite_accepted_at, CURRENT_TIMESTAMP) >= members.invite_created_at --invite accepted after invite created (removes weird edge cases with imported projects, etc)
    group by 1,2,3

), invite_status AS (

    SELECT --pull in relevant namespace data, invite status, etc
      namespaces.dim_namespace_id,
      members.user_id,
      IFF(memberships.user_id IS NOT NULL, TRUE, FALSE) AS invite_was_successful --flag whether the user actually joined the namespace
    FROM flattened_members members
    JOIN namespaces
      ON members.source_id = namespaces.dim_namespace_id --same as namespace_id for group namespaces
      AND (invite_accepted_at IS NULL OR (TIMESTAMPDIFF(minute,invite_accepted_at,namespace_created_at) NOT IN (0,1,2))) = TRUE -- this blocks namespaces created within two minutes of the namespace creator accepting their invite
    LEFT JOIN gitlab_dotcom_memberships memberships --record added once invite is accepted/user has access
      ON members.user_id = memberships.user_id
      AND members.source_id = memberships.membership_source_id
      AND memberships.is_billable = TRUE
    WHERE members.user_id != namespaces.creator_id --not an "invite" if user created namespace

), namespaces_with_user_count AS (

    SELECT
      dim_namespace_id,
      COUNT(DISTINCT user_id) AS current_member_count
    FROM invite_status
    WHERE invite_was_successful = TRUE
    GROUP BY 1

), subscriptions AS (
  
    SELECT 
      charges.current_gitlab_namespace_id::INT                      AS namespace_id, 
      MIN(charges.subscription_start_date)                          AS min_subscription_start_date
    FROM customers_db_charges_xf charges
    INNER JOIN namespaces 
      ON charges.current_gitlab_namespace_id = namespaces.dim_namespace_id
    WHERE charges.current_gitlab_namespace_id IS NOT NULL
      AND charges.product_category IN ('SaaS - Ultimate','SaaS - Premium') -- changing to product category field, used by the charges table
    GROUP BY 1
  
), latest_trial_by_user AS (
  
    SELECT *
    FROM customers_db_trials
    QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_user_id ORDER BY trial_start_date DESC) = 1

), pqls AS (
  
    SELECT DISTINCT
      leads.product_interaction,
      leads.user_id,
      users.email,
      leads.namespace_id           AS dim_namespace_id,
      dim_namespace.namespace_name,
      leads.trial_start_date::DATE AS trial_start_date,
      leads.created_at             AS pql_event_created_at
    FROM customers_db_leads leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'hand raise pql'
  
    UNION ALL
  
    SELECT DISTINCT 
      leads.product_interaction,
      leads.user_id,
      users.email,
      latest_trial_by_user.gitlab_namespace_id    AS dim_namespace_id,
      dim_namespace.namespace_name,
      latest_trial_by_user.trial_start_date::DATE AS trial_start_date,
      leads.created_at                            AS pql_event_created_at
    FROM customers_db_leads AS leads
    LEFT JOIN gitlab_dotcom_users_source AS users
      ON leads.user_id = users.user_id
    LEFT JOIN latest_trial_by_user
      ON latest_trial_by_user.gitlab_user_id = leads.user_id
    LEFT JOIN dim_namespace
      ON dim_namespace.dim_namespace_id = leads.namespace_id
    WHERE LOWER(leads.product_interaction) = 'saas trial'
      AND leads.is_for_business_use = 'True'

), stages_adopted AS (
  
    SELECT 
      namespaces.dim_namespace_id,
      namespaces.namespace_name,
      namespaces.email,
      namespaces.creator_id,
      namespaces.member_count,
      'SaaS Trial or Free'                       AS product_interaction,
      subscriptions.min_subscription_start_date,
      ARRAYAGG(DISTINCT events.stage_name)       AS list_of_stages,
      COUNT(DISTINCT events.stage_name)          AS active_stage_count
    FROM fct_event_user_daily   AS events
    INNER JOIN namespaces 
      ON namespaces.dim_namespace_id = events.dim_ultimate_parent_namespace_id 
    LEFT JOIN map_gitlab_dotcom_xmau_metrics AS xmau 
      ON xmau.common_events_to_include = events.event_name
    LEFT JOIN subscriptions 
      ON subscriptions.namespace_id = namespaces.dim_namespace_id
    WHERE days_since_namespace_creation_at_event_date BETWEEN 0 AND 365
      AND events.plan_name_at_event_date IN ('trial','free', 'ultimate_trial') --Added in to only use events from a free or trial namespace (which filters based on the selection chose for the `free_or_trial` filter
      AND xmau.smau = TRUE
      AND events.event_date BETWEEN namespaces.namespace_created_at_date AND IFNULL(subscriptions.min_subscription_start_date,CURRENT_DATE)
    group by 1,2,3,4,5,6,7
  
), pqls_filtered AS (

    SELECT
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted 
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'saas trial'
      AND IFNULL(stages_adopted.min_subscription_start_date,CURRENT_DATE) >= pqls.trial_start_date

    UNION

    SELECT 
      pqls.product_interaction                                             AS pql_product_interaction,
      COALESCE(pqls.dim_namespace_id,stages_adopted.dim_namespace_id)::INT AS pql_namespace_id,
      stages_adopted.min_subscription_start_date                           AS pql_min_subscription_start_date,
      pqls.pql_event_created_at
    FROM pqls
    LEFT JOIN stages_adopted
      ON pqls.dim_namespace_id = stages_adopted.dim_namespace_id
    LEFT JOIN namespaces_with_user_count
      ON namespaces_with_user_count.dim_namespace_id = pqls.dim_namespace_id
    WHERE LOWER(pqls.product_interaction) = 'hand raise pql'

), services_by_namespace AS (

    SELECT
      project.dim_namespace_id                                                                   AS dim_namespace_id,
      COUNT(*)                                                                                   AS nbr_integrations_installed,
      ARRAY_AGG(DISTINCT services.service_type) WITHIN GROUP (ORDER BY services.service_type)    AS integrations_installed
    FROM services
    LEFT JOIN project
      ON services.project_id = project.dim_project_id
    INNER JOIN namespaces
      ON namespaces.dim_namespace_id = project.dim_namespace_id
    GROUP BY 1

), pqls_by_user AS (

    SELECT DISTINCT user_id
    FROM pqls

)

-------------------------- End of PQL logic --------------------------

, stages_adopted_by_namespace AS (

  SELECT DISTINCT
    dim_namespace_id,
    list_of_stages,
    active_stage_count
  FROM stages_adopted

), namespace_details AS (

  SELECT
    namespace_user_mapping.user_id,
    dim_namespace.dim_namespace_id                                              AS namespace_id,
    namespace_user_mapping.access_level                                         AS user_access_level,
    CASE user_access_level
      WHEN 50 THEN 'Owner'
      WHEN 40 THEN 'Maintainer'
      WHEN 30 THEN 'Developer'
      WHEN 20 THEN 'Reporter'
      WHEN 10 THEN 'Guest'
      WHEN 5  THEN 'Minimal access'
      ELSE 'Other'
    END                                                                         AS user_access_level_name,

    dim_namespace.gitlab_plan_title,
    dim_namespace.gitlab_plan_is_paid,
    dim_namespace.is_setup_for_company,
    dim_namespace.current_member_count,
    dim_namespace.created_at                                                    AS created_at,
    dim_namespace.creator_id                                                    AS creator_user_id,

    customers_db_trial_histories_source.start_date                              AS trial_start_date,
    customers_db_trial_histories_source.expired_on                              AS trial_expired_date,
    IFF(CURRENT_DATE() >= trial_start_date AND CURRENT_DATE() <= COALESCE(trial_expired_date, CURRENT_DATE()), TRUE, FALSE) 
                                                                                AS is_active_trial,
    customers_db_trial_histories_source.glm_content,
    customers_db_trial_histories_source.glm_source,

    IFF(pqls_filtered.pql_namespace_id IS NOT NULL, TRUE, FALSE)                AS is_namespace_pql,

    stages_adopted_by_namespace.list_of_stages,
    stages_adopted_by_namespace.active_stage_count,
    services_by_namespace.nbr_integrations_installed,
    services_by_namespace.integrations_installed,

    
    CASE
      WHEN last_ptpt_scores.score_group >= 4
        THEN 'Trial'
      WHEN last_ptpf_scores.score_group >= 4
        THEN 'Free'
      WHEN last_ptpt_scores.score_group IS NOT NULL
        THEN 'Trial'
      WHEN last_ptpf_scores.score_group IS NOT NULL
        THEN 'Free'
      ELSE NULL
    END                                                                         AS ptp_source,
    IFF(ptp_source = 'Trial', last_ptpt_scores.score_date, last_ptpf_scores.score_date)
                                                                                AS ptp_score_date,
    IFF(ptp_source = 'Trial', last_ptpt_scores.score_group, last_ptpf_scores.score_group)
                                                                                AS ptp_score_group,
    IFF(ptp_source = 'Trial', last_ptpt_scores.insights, last_ptpf_scores.insights)
                                                                                AS ptp_insights,
    IFF(ptp_source = 'Trial', second_last_ptpt_scores.score_group, second_last_ptpf_scores.score_group)
                                                                                AS ptp_previous_score_group,

    gitlab_dotcom_namespace_details_source.dashboard_notification_at            AS user_limit_notification_at,
    gitlab_dotcom_namespace_details_source.dashboard_enforcement_at             AS user_limit_enforcement_at,
    IFF(user_limit_notification_at IS NOT NULL OR user_limit_enforcement_at IS NOT NULL,
        TRUE, FALSE)                                                            AS is_impacted_by_user_limit

  FROM namespace_user_mapping
  INNER JOIN dim_namespace
    ON dim_namespace.dim_namespace_id = namespace_user_mapping.namespace_id
    AND namespace_is_ultimate_parent = TRUE
  LEFT JOIN ptpt_last_dates
  LEFT JOIN ptpt_scores AS last_ptpt_scores
    ON last_ptpt_scores.namespace_id = namespace_user_mapping.namespace_id
    AND last_ptpt_scores.score_date = ptpt_last_dates.last_score_date
  LEFT JOIN ptpt_scores AS second_last_ptpt_scores
    ON second_last_ptpt_scores.namespace_id = namespace_user_mapping.namespace_id
    AND second_last_ptpt_scores.score_date = ptpt_last_dates.second_last_score_date
  LEFT JOIN ptpf_last_dates
  LEFT JOIN ptpf_scores AS last_ptpf_scores
    ON last_ptpf_scores.namespace_id = namespace_user_mapping.namespace_id
    AND last_ptpf_scores.score_date = ptpf_last_dates.last_score_date
  LEFT JOIN ptpf_scores AS second_last_ptpf_scores
    ON second_last_ptpf_scores.namespace_id = namespace_user_mapping.namespace_id
    AND second_last_ptpf_scores.score_date = ptpf_last_dates.second_last_score_date
  LEFT JOIN customers_db_trial_histories_source
    ON customers_db_trial_histories_source.gl_namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN gitlab_dotcom_namespace_details_source
    ON gitlab_dotcom_namespace_details_source.namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN stages_adopted_by_namespace
    ON stages_adopted_by_namespace.dim_namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN pqls_filtered
    ON pqls_filtered.pql_namespace_id = namespace_user_mapping.namespace_id
  LEFT JOIN services_by_namespace
    ON services_by_namespace.dim_namespace_id = namespace_user_mapping.namespace_id

), user_aggregated_namespace_details AS (

  SELECT 
    user_id,
    ARRAY_AGG(OBJECT_CONSTRUCT(*)) AS namespaces_array
  FROM namespace_details
  GROUP BY 1
  
), user_trials AS (

  SELECT
    user_id,
    MAX(trial_start_date) AS max_trial_start_date
  FROM namespace_details
  GROUP BY 1

  ), user_details_and_namespace_details AS (

  SELECT
    dim_marketing_contact.dim_marketing_contact_id,
    dim_marketing_contact.email_address,
    dim_marketing_contact.first_name,
    dim_marketing_contact.last_name,
    dim_marketing_contact.country,
    dim_marketing_contact.company_name,
    dim_marketing_contact.job_title,
    dim_marketing_contact.gitlab_dotcom_user_id,
    dim_marketing_contact.gitlab_user_name,
    dim_marketing_contact.gitlab_dotcom_active_state,
    dim_marketing_contact.gitlab_dotcom_confirmed_date,
    dim_marketing_contact.gitlab_dotcom_created_date,
    dim_marketing_contact.gitlab_dotcom_last_login_date,
    dim_marketing_contact.gitlab_dotcom_email_opted_in,
    IFF(pqls_by_user.user_id IS NOT NULL, TRUE, FALSE) AS is_pql,
    user_trials.max_trial_start_date,
    user_aggregated_namespace_details.namespaces_array

  FROM dim_marketing_contact
  LEFT JOIN user_aggregated_namespace_details
    ON dim_marketing_contact.gitlab_dotcom_user_id = user_aggregated_namespace_details.user_id
  LEFT JOIN pqls_by_user
    ON pqls_by_user.user_id = dim_marketing_contact.gitlab_dotcom_user_id
  LEFT JOIN user_trials
    ON user_trials.user_id = dim_marketing_contact.gitlab_dotcom_user_id

  WHERE dim_marketing_contact.gitlab_dotcom_user_id IS NOT NULL
    AND (
      dim_marketing_contact.gitlab_dotcom_created_date::DATE >= '2022-06-01'
      OR user_trials.max_trial_start_date::DATE >= DATEADD('month', -3, CURRENT_DATE)
    )

)



  , hashing AS (

    SELECT *,

      md5(cast(coalesce(cast(first_name as 
    varchar
), '') || '-' || coalesce(cast(last_name as 
    varchar
), '') || '-' || coalesce(cast(country as 
    varchar
), '') || '-' || coalesce(cast(company_name as 
    varchar
), '') || '-' || coalesce(cast(job_title as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_user_id as 
    varchar
), '') || '-' || coalesce(cast(gitlab_user_name as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_active_state as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_confirmed_date as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_created_date as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_last_login_date as 
    varchar
), '') || '-' || coalesce(cast(gitlab_dotcom_email_opted_in as 
    varchar
), '') || '-' || coalesce(cast(is_pql as 
    varchar
), '') || '-' || coalesce(cast(max_trial_start_date as 
    varchar
), '') || '-' || coalesce(cast(namespaces_array as 
    varchar
), '') as 
    varchar
)) as prev_hash

    FROM user_details_and_namespace_details

  ), final as (

      

        SELECT hashing.*,
          CASE
            WHEN hashing.prev_hash = t.prev_hash THEN last_changed
            ELSE CURRENT_TIMESTAMP()
          END AS last_changed
        FROM hashing
        LEFT JOIN "PREP".sensitive.poc_pump_marketing_contact_namespace_detail as t on t.prev_hash = hashing.prev_hash

      

  )


SELECT *
FROM final19:T5c1,{{ config(
    materialized='table',
    tags=["mnpi_exception", "product"]
) }}

{{ simple_cte([
    ('dim_namespace', 'dim_namespace'),
    ('fct_event_user_daily', 'fct_event_user_daily'),
    ('dim_user', 'dim_user'),
    ('dim_date', 'dim_date')
    ])
}},

fact AS (

  SELECT
    {{ dbt_utils.star(from=ref('fct_event_user_daily'), except=["CREATED_BY",
        "UPDATED_BY","CREATED_DATE","UPDATED_DATE","MODEL_CREATED_DATE","MODEL_UPDATED_DATE","DBT_UPDATED_AT","DBT_CREATED_AT"]) }}
  FROM fct_event_user_daily
  
), 

fact_with_dims AS (

  SELECT
    fact.*,
    dim_namespace.namespace_type AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,
    dim_user.created_at AS user_created_at,
    dim_date.first_day_of_month AS event_calendar_month,
    dim_date.quarter_name AS event_calendar_quarter,
    dim_date.year_actual AS event_calendar_year
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_user
    ON fact.dim_user_sk = dim_user.dim_user_sk
  LEFT JOIN dim_date
    ON fact.dim_event_date_id = dim_date.date_id

)

{{ dbt_audit(
    cte_ref="fact_with_dims",
    created_by="@dihle",
    updated_by="@tpoole1",
    created_date="2022-01-28",
    updated_date="2022-08-01"
) }}1a:T7ee,**Description:** Enriched GitLab.com usage event data for valid events, grouped by date, user, ultimate parent namespace, and event name. This is an enhanced version of `fct_event_user_daily`
- This data is enhanced with additional user and namespace attributes for ease of analysis

**Data Grain:**
- event_date
- dim_user_id
- dim_ultimate_parent_namespace_id
- event_name

**Filters Applied to Model:**
- `Inherited` - Include valid events for standard analysis and reporting:
  - Exclude events where the event created date < the user created date (`days_since_user_creation_at_event_date >= 0`)
    - These are usually events from projects that were created before the GitLab.com user and then imported after the user is created 
  - Exclude events from blocked users (based on the current user state)
- `Inherited` - Rolling 24 months of data
- `Inherited` - Exclude events not associated with a user (ex: 'milestones')

**Business Logic in this Model:**
- `Inherited` - A namespace's plan information (ex: `plan_name_at_event_date`) is determined by the plan for the last event on a given day
- `Inherited` - The ultimate parent namespace's subscription, billing, and account information (ex: `dim_latest_subscription_id`) reflects the most recent available attributes associated with that namespace
- `Inherited` - `dim_latest_product_tier_id` reflects the _current_ product tier of the namespace
- `Inherited` - `section_name`, `stage_name`, `group_name`, and xMAU metric flags (ex: `is_gmau`) are based on the _current_ event mappings and may not match the mapping at the time of the event

**Other Comments:**
- Note about the `action` event: This "event" captures everything from the [Events API](https://docs.gitlab.com/ee/api/events.html) - issue comments, MRs created, etc. While the `action` event is mapped to the Manage stage, the events included actually span multiple stages (plan, create, etc), which is why this is used for UMAU. Be mindful of the impact of including `action` during stage adoption analysis.1b:T847,



WITH dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), fct_event_user_daily AS (

    SELECT * 
    FROM "PROD".common.fct_event_user_daily

), dim_user AS (

    SELECT * 
    FROM "PROD".common.dim_user

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

),

fact AS (

  SELECT
    "EVENT_USER_DAILY_PK",
  "DIM_LATEST_PRODUCT_TIER_ID",
  "DIM_LATEST_SUBSCRIPTION_ID",
  "DIM_CRM_ACCOUNT_ID",
  "DIM_BILLING_ACCOUNT_ID",
  "DIM_USER_SK",
  "DIM_USER_ID",
  "DIM_ULTIMATE_PARENT_NAMESPACE_ID",
  "DIM_EVENT_DATE_ID",
  "EVENT_DATE",
  "EVENT_NAME",
  "DAYS_SINCE_USER_CREATION_AT_EVENT_DATE",
  "DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE",
  "PLAN_ID_AT_EVENT_DATE",
  "PLAN_NAME_AT_EVENT_DATE",
  "PLAN_WAS_PAID_AT_EVENT_DATE",
  "STAGE_NAME",
  "SECTION_NAME",
  "GROUP_NAME",
  "IS_SMAU",
  "IS_GMAU",
  "IS_UMAU",
  "DATA_SOURCE",
  "EVENT_COUNT"
  FROM fct_event_user_daily
  
), 

fact_with_dims AS (

  SELECT
    fact.*,
    dim_namespace.namespace_type AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,
    dim_user.created_at AS user_created_at,
    dim_date.first_day_of_month AS event_calendar_month,
    dim_date.quarter_name AS event_calendar_quarter,
    dim_date.year_actual AS event_calendar_year
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_user
    ON fact.dim_user_sk = dim_user.dim_user_sk
  LEFT JOIN dim_date
    ON fact.dim_event_date_id = dim_date.date_id

)

SELECT
      *,
      '@dihle'::VARCHAR       AS created_by,
      '@tpoole1'::VARCHAR       AS updated_by,
      '2022-01-28'::DATE        AS model_created_date,
      '2022-08-01'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM fact_with_dims1c:T72d,{{ config(
    materialized='table',
    tags=["mnpi_exception"]
) }}

with 
memberships AS (
  SELECT *
  FROM {{ ref('gitlab_dotcom_memberships') }}
),

namespace AS (
  SELECT *
  FROM {{ ref('dim_namespace') }}
),

company_bridge AS (
  SELECT *
  FROM {{ ref('wk_bdg_user_company') }}
),

marketing_contact AS (
  SELECT *
  FROM {{ ref('dim_marketing_contact') }}
),

crm_company AS (
  SELECT *
  FROM {{ ref('dim_crm_account') }}
),

namespace_companies AS (
  SELECT
    memberships.user_id,
    memberships.user_type,
    memberships.membership_source_type,
    memberships.access_level,
    memberships.ultimate_parent_id,
    namespace.namespace_type,
    namespace.creator_id,
    CASE
      WHEN memberships.user_id = namespace.creator_id THEN 'creator'
      WHEN memberships.access_level = 50 AND memberships.membership_source_type = 'group_membership' THEN 'owner'
      WHEN memberships.access_level = 50 THEN 'owner'
      ELSE 'user'
    END AS relationship_type,
    IFF(namespace.creator_id = memberships.user_id, TRUE, FALSE) AS is_creator,
    IFF(access_level = 50, TRUE, FALSE) AS is_owner,
    company_bridge.company_id,
    COALESCE(marketing_contact.dim_crm_account_id, crm_company.dim_crm_account_id) AS crm_account_id
  FROM memberships
  LEFT JOIN namespace
    ON memberships.ultimate_parent_id = namespace.dim_namespace_id
  LEFT JOIN company_bridge
    ON memberships.user_id = company_bridge.gitlab_dotcom_user_id
  LEFT JOIN marketing_contact
    ON memberships.user_id = marketing_contact.gitlab_dotcom_user_id
  LEFT JOIN crm_company
    ON company_bridge.company_id = crm_company.crm_account_zoom_info_dozisf_zi_id
  WHERE true
    and memberships.is_billable
  QUALIFY ROW_NUMBER() OVER (PARTITION BY ultimate_parent_id,user_id ORDER BY access_level DESC) = 1
)

SELECT *
FROM namespace_companies1d:T70d,

with 
memberships AS (
  SELECT *
  FROM "PROD".legacy.gitlab_dotcom_memberships
),

namespace AS (
  SELECT *
  FROM "PROD".common.dim_namespace
),

company_bridge AS (
  SELECT *
  FROM "PROD".workspace_marketing.wk_bdg_user_company
),

marketing_contact AS (
  SELECT *
  FROM "PREP".sensitive.dim_marketing_contact
),

crm_company AS (
  SELECT *
  FROM "PROD".restricted_safe_common.dim_crm_account
),

namespace_companies AS (
  SELECT
    memberships.user_id,
    memberships.user_type,
    memberships.membership_source_type,
    memberships.access_level,
    memberships.ultimate_parent_id,
    namespace.namespace_type,
    namespace.creator_id,
    CASE
      WHEN memberships.user_id = namespace.creator_id THEN 'creator'
      WHEN memberships.access_level = 50 AND memberships.membership_source_type = 'group_membership' THEN 'owner'
      WHEN memberships.access_level = 50 THEN 'owner'
      ELSE 'user'
    END AS relationship_type,
    IFF(namespace.creator_id = memberships.user_id, TRUE, FALSE) AS is_creator,
    IFF(access_level = 50, TRUE, FALSE) AS is_owner,
    company_bridge.company_id,
    COALESCE(marketing_contact.dim_crm_account_id, crm_company.dim_crm_account_id) AS crm_account_id
  FROM memberships
  LEFT JOIN namespace
    ON memberships.ultimate_parent_id = namespace.dim_namespace_id
  LEFT JOIN company_bridge
    ON memberships.user_id = company_bridge.gitlab_dotcom_user_id
  LEFT JOIN marketing_contact
    ON memberships.user_id = marketing_contact.gitlab_dotcom_user_id
  LEFT JOIN crm_company
    ON company_bridge.company_id = crm_company.crm_account_zoom_info_dozisf_zi_id
  WHERE true
    and memberships.is_billable
  QUALIFY ROW_NUMBER() OVER (PARTITION BY ultimate_parent_id,user_id ORDER BY access_level DESC) = 1
)

SELECT *
FROM namespace_companies1e:T9149,{{
  config(
    materialized='table',
    tags=["product", "mnpi_exception"]
  )
}}

{{ simple_cte([
    ('monthly_saas_metrics','rpt_gainsight_metrics_monthly_paid_saas'),
    ('monthly_sm_metrics','rpt_gainsight_metrics_monthly_paid_self_managed'),
    ('billing_accounts','dim_billing_account'),
    ('location_country', 'dim_location_country'),
    ('subscriptions', 'dim_subscription'),
    ('namespaces', 'dim_namespace'),
    ('charges', 'mart_charge'),
    ('dates', 'dim_date'),
    ('aggregated_metrics', 'redis_namespace_snowplow_clicks_aggregated_workspace'),
    ('redis_metrics_28d_user', 'wk_rpt_user_based_metric_counts_namespace_monthly'),
    ('redis_metrics_all_time_event', 'wk_rpt_event_based_metric_counts_namespace_all_time')
]) }}


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    {{ dbt_utils.group_by(n = 2) }}
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}             AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      {{ dbt_utils.surrogate_key(
        [
          'snapshot_month',
          'dim_subscription_id_original',
          'uuid',
          'hostname',
          'dim_namespace_id'
        ]
      ) }} AS primary_key
    FROM unioned
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-10-12",
    updated_date="2023-06-05"
) }}1f:T67b,**Description:** This table unions together a select set of Service Ping metrics for both Self-Managed and SaaS **paid users**. The data from this table will be used for customer product insights. Most notably, this data is pumped into Gainsight and aggregated into customer health scores for use by TAMs.

**Data Grain:**
- Subscription (`dim_subscription_id_original`)
- Month (`snapshot_month`)
- Installation/Namespace (For Self-Managed, `uuid`-`hostname`; for SaaS, `namespace_id`)

**Filters:**
Inherits filters from parent models, but most notably:
  - Only includes paid customers.
  - Only includes Service Ping metrics that have been added via the "wave" process.
  - Only includes subscriptions that have a usage ping payload associated with them.

**Other Comments:**
- For Self-Managed customers, this data orgininates in [Service Ping](https://docs.gitlab.com/ee/development/service_ping/), which sends a weekly payload of customer product usage metrics to GitLab. For SaaS customers, we mimic the Service Ping queries using the [SaaS Service Ping process](https://about.gitlab.com/handbook/business-technology/data-team/data-catalog/saas-service-ping-automation/). Specifically, the namespace-level Service Ping queries can be found [here](https://gitlab.com/gitlab-data/analytics/-/blob/master/extract/saas_usage_ping/usage_ping_namespace_queries.json).
- For SaaS customers, not all metrics can be calculated via the namespace-level Service Ping. For metrics that originate from `redis_hll`, Snowplow counters are used to track event-level data. Then, the data team aggregates those counters in Snowflake to mimic the Service Ping calcuation.20:T943f,



WITH monthly_saas_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_saas

), monthly_sm_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_self_managed

), billing_accounts AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), location_country AS (

    SELECT * 
    FROM "PROD".common.dim_location_country

), subscriptions AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_charge

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), aggregated_metrics AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace

), redis_metrics_28d_user AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly

), redis_metrics_all_time_event AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time

)


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    group by 1,2
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

             AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      md5(cast(coalesce(cast(snapshot_month as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription_id_original as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') as 
    varchar
)) AS primary_key
    FROM unioned
  
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-10-12'::DATE        AS model_created_date,
      '2023-06-05'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final21:T957d,{{
  config(
    materialized='table',
    tags=["mnpi_exception"]
  )
}}

{{ simple_cte([
    ('monthly_saas_metrics','fct_saas_product_usage_metrics_monthly'),
    ('monthly_sm_metrics','fct_ping_instance_metric_wave_monthly'),
    ('billing_accounts','dim_billing_account'),
    ('location_country', 'dim_location_country'),
    ('subscriptions', 'dim_subscription'),
    ('namespaces', 'dim_namespace'),
    ('charges', 'mart_charge'),
    ('dates', 'dim_date'),
    ('aggregated_metrics', 'redis_namespace_snowplow_clicks_aggregated_workspace'),
    ('redis_metrics_28d_user', 'wk_rpt_user_based_metric_counts_namespace_monthly'),
    ('redis_metrics_all_time_event', 'wk_rpt_event_based_metric_counts_namespace_all_time'),
    ('dim_product_detail', 'dim_product_detail')
]) }}


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1
    
), subscription_with_deployment_type AS (
  
    SELECT DISTINCT
        charges.dim_subscription_id,
        dim_product_detail.product_delivery_type,
        dim_product_detail.product_deployment_type
    FROM charges
    LEFT JOIN dim_product_detail
      ON charges.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    WHERE dim_product_detail.product_deployment_type IN ('Self-Managed', 'Dedicated')

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    {{ dbt_utils.group_by(n = 2) }}
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'p_terraform_state_api_unique_users'
   
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                  AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                       AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      COALESCE(monthly_sm_metrics.ping_delivery_type, 'Self-Managed')              AS delivery_type, -- Hard codding to self-managed until next MR to update dedicated to saas. Issue -> https://gitlab.com/gitlab-data/analytics/-/issues/16966
      COALESCE(monthly_sm_metrics.ping_deployment_type, subscription_with_deployment_type.product_deployment_type, 'Self-Managed')
                                                                                   AS deployment_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                             AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                      AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN subscription_with_deployment_type
      ON subscription_with_deployment_type.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      'GitLab.com'                                                                  AS deployment_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      {{ dbt_utils.surrogate_key(
        [
          'snapshot_month',
          'dim_subscription_id',
          'deployment_type',
          'uuid',
          'hostname',
          'dim_namespace_id'
        ]
      ) }} AS primary_key
    FROM unioned
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@jpeguero",
    created_date="2022-01-14",
    updated_date="2023-06-22"
) }}22:T98a9,



WITH monthly_saas_metrics AS (

    SELECT * 
    FROM "PROD".common.fct_saas_product_usage_metrics_monthly

), monthly_sm_metrics AS (

    SELECT * 
    FROM "PROD".common.fct_ping_instance_metric_wave_monthly

), billing_accounts AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), location_country AS (

    SELECT * 
    FROM "PROD".common.dim_location_country

), subscriptions AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_charge

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), aggregated_metrics AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace

), redis_metrics_28d_user AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly

), redis_metrics_all_time_event AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

)


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1
    
), subscription_with_deployment_type AS (
  
    SELECT DISTINCT
        charges.dim_subscription_id,
        dim_product_detail.product_delivery_type,
        dim_product_detail.product_deployment_type
    FROM charges
    LEFT JOIN dim_product_detail
      ON charges.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    WHERE dim_product_detail.product_deployment_type IN ('Self-Managed', 'Dedicated')

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    group by 1,2
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'p_terraform_state_api_unique_users'
   
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                  AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                       AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      COALESCE(monthly_sm_metrics.ping_delivery_type, 'Self-Managed')              AS delivery_type, -- Hard codding to self-managed until next MR to update dedicated to saas. Issue -> https://gitlab.com/gitlab-data/analytics/-/issues/16966
      COALESCE(monthly_sm_metrics.ping_deployment_type, subscription_with_deployment_type.product_deployment_type, 'Self-Managed')
                                                                                   AS deployment_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                             AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                      AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN subscription_with_deployment_type
      ON subscription_with_deployment_type.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      'GitLab.com'                                                                  AS deployment_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      md5(cast(coalesce(cast(snapshot_month as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription_id as 
    varchar
), '') || '-' || coalesce(cast(deployment_type as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') as 
    varchar
)) AS primary_key
    FROM unioned
  
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2022-01-14'::DATE        AS model_created_date,
      '2023-06-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final23:T3d6f,WITH internal_issues AS (

  SELECT *
  FROM {{ ref('internal_issues') }}

),

cte_ns_explode AS ( 

  	SELECT namespace_id,
           ultimate_parent_id,
           upstream_lineage,
           s.value AS lineage_namespace,
           s.index AS rn
   FROM {{ ref('gitlab_dotcom_namespace_lineage_scd') }} AS a,
        LATERAL FLATTEN (a.upstream_lineage,OUTER=>TRUE) AS s
   WHERE is_current 

   ),cte_ns_get_path AS (

  	SELECT a.namespace_id,
           a.ultimate_parent_id,
           a.upstream_lineage,
           lineage_namespace,
           rn,
           b.namespace_path
   FROM cte_ns_explode AS a
   LEFT JOIN {{ ref('dim_namespace') }} AS b ON a.lineage_namespace = b.dim_namespace_id 

   ),cte_ns_restructure AS (
   
   SELECT namespace_id,
           ultimate_parent_id,
           upstream_lineage,
           array_agg(namespace_path) WITHIN GROUP (ORDER BY rn) AS regroup
   FROM cte_ns_get_path
   GROUP BY namespace_id,
            ultimate_parent_id,
            upstream_lineage 

    ), namespaces AS (

   SELECT namespace_id,
           ultimate_parent_id,
           upstream_lineage,
           array_to_string(regroup,'/') AS full_group_path
   FROM cte_ns_restructure 

   ), product_categories_yml_base AS (

    SELECT
        DISTINCT LOWER(group_name) AS group_name,
        LOWER(stage_section) AS section_name,
        LOWER(stage_display_name) AS stage_name,
        IFF(group_name LIKE '%::%',SPLIT_PART(LOWER(group_name),'::',1),NULL) as root_name
    FROM {{ ref('stages_groups_yaml_source') }}
    WHERE snapshot_date = (SELECT max(snapshot_date) FROM {{ ref('stages_groups_yaml_source') }})

), product_categories_yml AS (

    SELECT group_name,
       section_name,
       stage_name
    FROM product_categories_yml_base
    UNION ALL
    SELECT DISTINCT root_name AS group_name,
                section_name,
                stage_name
    FROM product_categories_yml_base
    WHERE root_name IS NOT NULL

), bot_users AS (

  SELECT dim_user_id
  FROM {{ ref('dim_user') }}
  WHERE email_domain LIKE '%noreply.gitlab.com'

),

milestones AS (

  SELECT *
  FROM {{ ref('gitlab_dotcom_milestones') }}

),

workflow_labels AS (

  SELECT * FROM {{ ref('engineering_analytics_workflow_labels') }}

),

final AS (

  SELECT
    internal_issues.issue_id                                                                                                                                                                                                                                                                           AS issue_id,
    internal_issues.issue_iid                                                                                                                                                                                                                                                                          AS issue_iid,
    internal_issues.author_id                                                                                                                                                                                                                                                                          AS author_id,
    IFF(bots.dim_user_id IS NOT NULL OR internal_issues.author_id = 1786152 OR ARRAY_CONTAINS('automation:bot-authored'::VARIANT, internal_issues.labels),
      TRUE, FALSE)                                                                                                                                                                                                                                                                                     AS is_created_by_bot,
    internal_issues.project_id                                                                                                                                                                                                                                                                         AS project_id,
    internal_issues.issue_created_at                                                                                                                                                                                                                                                                   AS created_at,
    internal_issues.issue_updated_at                                                                                                                                                                                                                                                                   AS updated_at,
    internal_issues.issue_closed_at                                                                                                                                                                                                                                                                    AS closed_at,
    DATE_TRUNC('month', internal_issues.issue_created_at)::DATE                                                                                                                                                                                                                                        AS created_month,
    DATE_TRUNC('month', internal_issues.issue_closed_at)::DATE                                                                                                                                                                                                                                         AS closed_month,
    IFF(internal_issues.issue_closed_at > internal_issues.issue_created_at, ROUND(TIMESTAMPDIFF(HOURS, internal_issues.issue_created_at, internal_issues.issue_closed_at) / 24, 2), 0)  AS days_to_close,
    internal_issues.issue_title                                                                                                                                                                                                                                                                        AS issue_title,
    internal_issues.issue_description                                                                                                                                                                                                                                                                  AS issue_description,
    internal_issues.milestone_id                                                                                                                                                                                                                                                                       AS milestone_id,
    milestones.milestone_title                                                                                                                                                                                                                                                                         AS milestone_title,
    milestones.milestone_description                                                                                                                                                                                                                                                                   AS milestone_description,
    milestones.start_date                                                                                                                                                                                                                                                                              AS milestone_start_date,
    milestones.due_date                                                                                                                                                                                                                                                                                AS milestone_due_date,
    internal_issues.weight                                                                                                                                                                                                                                                                             AS weight,
    internal_issues.namespace_id                                                 AS namespace_id,
    internal_issues.ultimate_parent_id                                           AS ultimate_parent_id,
    internal_issues.labels                                                                                                                                                                                                                                                                             AS labels,
    ARRAY_TO_STRING(internal_issues.labels, '|')                                                                                                                                                                                                                                                       AS masked_label_title,
    ARRAY_CONTAINS('community contribution'::VARIANT, internal_issues.labels)                                                                                                                                                                                                                          AS is_community_contribution,
    ARRAY_CONTAINS('security'::VARIANT, internal_issues.labels)                                                                                                                                                                                                                                        AS is_security,
    ARRAY_CONTAINS('corrective action'::VARIANT, internal_issues.
    labels)                                                                                 AS is_corrective_action,
    internal_issues.priority_tag                                                                                                                                                                                                                                                                       AS priority_label,
    internal_issues.severity_tag                                                                                                                                                                                                                                                                       AS severity_label,
    CASE
      WHEN array_contains('group::gitaly::cluster'::variant,internal_issues.labels)
        THEN 'gitaly::cluster'
      WHEN array_contains('group::gitaly::git'::variant,internal_issues.labels)
        THEN 'gitaly::git'
      WHEN array_contains('group::distribution::build'::variant,internal_issues.labels)
        THEN 'distribution::build'
      WHEN array_contains('group::distribution::deploy'::variant,internal_issues.labels)
        THEN 'distribution::deploy'
      WHEN array_contains('group::distribution::operate'::variant,internal_issues.labels)
        THEN 'distribution::operate'
        ELSE
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bgroup::*([^,]*)'), 'group::', '') IN (SELECT group_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bgroup::*([^,]*)'), 'group::', ''),'undefined') END                    AS group_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bsection::*([^,]*)'), 'section::', '') IN (SELECT section_name FROM product_categories_yml), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bsection::*([^,]*)'), 'section::', ''), 'undefined')            AS section_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', '') IN (SELECT stage_name FROM product_categories_yml), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', ''), 'undefined')                  AS stage_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\btype::*([^,]*)'), 'type::', '') IN ('bug', 'feature', 'maintenance'), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\btype::*([^,]*)'), 'type::', ''), 'undefined')
    AS type_label,
    CASE
      WHEN type_label = 'bug'
        THEN COALESCE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bbug::*([^,]*)'), 'undefined')
      WHEN type_label = 'maintenance'
        THEN COALESCE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bmaintenance::*([^,]*)'), 'undefined')
      WHEN type_label = 'feature'
        THEN COALESCE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bfeature::*([^,]*)'), 'undefined')
      ELSE 'undefined' END                                                                                                                                                                                                                                                                             AS subtype_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bworkflow::*([^,]*)'), 'workflow::', '') IN (SELECT workflow_label FROM workflow_labels), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bworkflow::*([^,]*)'), 'workflow::', ''), 'undefined') AS workflow_label,
    IFF(ARRAY_CONTAINS('infradev'::VARIANT, internal_issues.labels), TRUE, FALSE)                                                AS is_infradev,
    IFF(ARRAY_CONTAINS('fedramp::vulnerability'::VARIANT, internal_issues.labels), TRUE, FALSE)                             AS fedramp_vulnerability,
    projects.visibility_level                                                                                                                                                                                                                                                                          AS visibility_level,
    projects.project_path                                                                                                                                                                                                                                                                              AS project_path,
    ns.full_group_path                                                    AS full_group_path,

    CASE
      WHEN projects.visibility_level = 'public' AND internal_issues.issue_is_confidential = FALSE
        THEN '[' || REPLACE(REPLACE(LEFT(internal_issues.issue_title, 64), '[', ''), ']', '') || '](https://gitlab.com/' || full_group_path || '/' || projects.project_path || '/-/issues/' || internal_issues.issue_iid || ')'
      ELSE 'https://gitlab.com/' || full_group_path || '/' || projects.project_path || '/-/issues/' || internal_issues.issue_iid
    END                                                                                                                                                                                                                                                                                                AS url,
    internal_issues.is_part_of_product
  FROM internal_issues
  LEFT JOIN {{ ref('dim_project') }} AS projects
    ON projects.dim_project_id = internal_issues.project_id
  LEFT JOIN bot_users AS bots
    ON bots.dim_user_id = internal_issues.author_id
  LEFT JOIN namespaces AS ns
    ON ns.namespace_id = projects.dim_namespace_id
  LEFT JOIN milestones
    ON milestones.milestone_id = internal_issues.milestone_id
)

SELECT *
FROM final24:T3da3,WITH internal_issues AS (

  SELECT *
  FROM "PROD".workspace_engineering.internal_issues

),

cte_ns_explode AS ( 

  	SELECT namespace_id,
           ultimate_parent_id,
           upstream_lineage,
           s.value AS lineage_namespace,
           s.index AS rn
   FROM "PREP".preparation.gitlab_dotcom_namespace_lineage_scd AS a,
        LATERAL FLATTEN (a.upstream_lineage,OUTER=>TRUE) AS s
   WHERE is_current 

   ),cte_ns_get_path AS (

  	SELECT a.namespace_id,
           a.ultimate_parent_id,
           a.upstream_lineage,
           lineage_namespace,
           rn,
           b.namespace_path
   FROM cte_ns_explode AS a
   LEFT JOIN "PROD".common.dim_namespace AS b ON a.lineage_namespace = b.dim_namespace_id 

   ),cte_ns_restructure AS (
   
   SELECT namespace_id,
           ultimate_parent_id,
           upstream_lineage,
           array_agg(namespace_path) WITHIN GROUP (ORDER BY rn) AS regroup
   FROM cte_ns_get_path
   GROUP BY namespace_id,
            ultimate_parent_id,
            upstream_lineage 

    ), namespaces AS (

   SELECT namespace_id,
           ultimate_parent_id,
           upstream_lineage,
           array_to_string(regroup,'/') AS full_group_path
   FROM cte_ns_restructure 

   ), product_categories_yml_base AS (

    SELECT
        DISTINCT LOWER(group_name) AS group_name,
        LOWER(stage_section) AS section_name,
        LOWER(stage_display_name) AS stage_name,
        IFF(group_name LIKE '%::%',SPLIT_PART(LOWER(group_name),'::',1),NULL) as root_name
    FROM "PREP".gitlab_data_yaml.stages_groups_yaml_source
    WHERE snapshot_date = (SELECT max(snapshot_date) FROM "PREP".gitlab_data_yaml.stages_groups_yaml_source)

), product_categories_yml AS (

    SELECT group_name,
       section_name,
       stage_name
    FROM product_categories_yml_base
    UNION ALL
    SELECT DISTINCT root_name AS group_name,
                section_name,
                stage_name
    FROM product_categories_yml_base
    WHERE root_name IS NOT NULL

), bot_users AS (

  SELECT dim_user_id
  FROM "PROD".common.dim_user
  WHERE email_domain LIKE '%noreply.gitlab.com'

),

milestones AS (

  SELECT *
  FROM "PREP".sensitive.gitlab_dotcom_milestones

),

workflow_labels AS (

  SELECT * FROM "PROD".legacy.engineering_analytics_workflow_labels

),

final AS (

  SELECT
    internal_issues.issue_id                                                                                                                                                                                                                                                                           AS issue_id,
    internal_issues.issue_iid                                                                                                                                                                                                                                                                          AS issue_iid,
    internal_issues.author_id                                                                                                                                                                                                                                                                          AS author_id,
    IFF(bots.dim_user_id IS NOT NULL OR internal_issues.author_id = 1786152 OR ARRAY_CONTAINS('automation:bot-authored'::VARIANT, internal_issues.labels),
      TRUE, FALSE)                                                                                                                                                                                                                                                                                     AS is_created_by_bot,
    internal_issues.project_id                                                                                                                                                                                                                                                                         AS project_id,
    internal_issues.issue_created_at                                                                                                                                                                                                                                                                   AS created_at,
    internal_issues.issue_updated_at                                                                                                                                                                                                                                                                   AS updated_at,
    internal_issues.issue_closed_at                                                                                                                                                                                                                                                                    AS closed_at,
    DATE_TRUNC('month', internal_issues.issue_created_at)::DATE                                                                                                                                                                                                                                        AS created_month,
    DATE_TRUNC('month', internal_issues.issue_closed_at)::DATE                                                                                                                                                                                                                                         AS closed_month,
    IFF(internal_issues.issue_closed_at > internal_issues.issue_created_at, ROUND(TIMESTAMPDIFF(HOURS, internal_issues.issue_created_at, internal_issues.issue_closed_at) / 24, 2), 0)  AS days_to_close,
    internal_issues.issue_title                                                                                                                                                                                                                                                                        AS issue_title,
    internal_issues.issue_description                                                                                                                                                                                                                                                                  AS issue_description,
    internal_issues.milestone_id                                                                                                                                                                                                                                                                       AS milestone_id,
    milestones.milestone_title                                                                                                                                                                                                                                                                         AS milestone_title,
    milestones.milestone_description                                                                                                                                                                                                                                                                   AS milestone_description,
    milestones.start_date                                                                                                                                                                                                                                                                              AS milestone_start_date,
    milestones.due_date                                                                                                                                                                                                                                                                                AS milestone_due_date,
    internal_issues.weight                                                                                                                                                                                                                                                                             AS weight,
    internal_issues.namespace_id                                                 AS namespace_id,
    internal_issues.ultimate_parent_id                                           AS ultimate_parent_id,
    internal_issues.labels                                                                                                                                                                                                                                                                             AS labels,
    ARRAY_TO_STRING(internal_issues.labels, '|')                                                                                                                                                                                                                                                       AS masked_label_title,
    ARRAY_CONTAINS('community contribution'::VARIANT, internal_issues.labels)                                                                                                                                                                                                                          AS is_community_contribution,
    ARRAY_CONTAINS('security'::VARIANT, internal_issues.labels)                                                                                                                                                                                                                                        AS is_security,
    ARRAY_CONTAINS('corrective action'::VARIANT, internal_issues.
    labels)                                                                                 AS is_corrective_action,
    internal_issues.priority_tag                                                                                                                                                                                                                                                                       AS priority_label,
    internal_issues.severity_tag                                                                                                                                                                                                                                                                       AS severity_label,
    CASE
      WHEN array_contains('group::gitaly::cluster'::variant,internal_issues.labels)
        THEN 'gitaly::cluster'
      WHEN array_contains('group::gitaly::git'::variant,internal_issues.labels)
        THEN 'gitaly::git'
      WHEN array_contains('group::distribution::build'::variant,internal_issues.labels)
        THEN 'distribution::build'
      WHEN array_contains('group::distribution::deploy'::variant,internal_issues.labels)
        THEN 'distribution::deploy'
      WHEN array_contains('group::distribution::operate'::variant,internal_issues.labels)
        THEN 'distribution::operate'
        ELSE
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bgroup::*([^,]*)'), 'group::', '') IN (SELECT group_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bgroup::*([^,]*)'), 'group::', ''),'undefined') END                    AS group_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bsection::*([^,]*)'), 'section::', '') IN (SELECT section_name FROM product_categories_yml), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bsection::*([^,]*)'), 'section::', ''), 'undefined')            AS section_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', '') IN (SELECT stage_name FROM product_categories_yml), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', ''), 'undefined')                  AS stage_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\btype::*([^,]*)'), 'type::', '') IN ('bug', 'feature', 'maintenance'), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\btype::*([^,]*)'), 'type::', ''), 'undefined')
    AS type_label,
    CASE
      WHEN type_label = 'bug'
        THEN COALESCE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bbug::*([^,]*)'), 'undefined')
      WHEN type_label = 'maintenance'
        THEN COALESCE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bmaintenance::*([^,]*)'), 'undefined')
      WHEN type_label = 'feature'
        THEN COALESCE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bfeature::*([^,]*)'), 'undefined')
      ELSE 'undefined' END                                                                                                                                                                                                                                                                             AS subtype_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bworkflow::*([^,]*)'), 'workflow::', '') IN (SELECT workflow_label FROM workflow_labels), REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_issues.labels, ','), '\\bworkflow::*([^,]*)'), 'workflow::', ''), 'undefined') AS workflow_label,
    IFF(ARRAY_CONTAINS('infradev'::VARIANT, internal_issues.labels), TRUE, FALSE)                                                AS is_infradev,
    IFF(ARRAY_CONTAINS('fedramp::vulnerability'::VARIANT, internal_issues.labels), TRUE, FALSE)                             AS fedramp_vulnerability,
    projects.visibility_level                                                                                                                                                                                                                                                                          AS visibility_level,
    projects.project_path                                                                                                                                                                                                                                                                              AS project_path,
    ns.full_group_path                                                    AS full_group_path,

    CASE
      WHEN projects.visibility_level = 'public' AND internal_issues.issue_is_confidential = FALSE
        THEN '[' || REPLACE(REPLACE(LEFT(internal_issues.issue_title, 64), '[', ''), ']', '') || '](https://gitlab.com/' || full_group_path || '/' || projects.project_path || '/-/issues/' || internal_issues.issue_iid || ')'
      ELSE 'https://gitlab.com/' || full_group_path || '/' || projects.project_path || '/-/issues/' || internal_issues.issue_iid
    END                                                                                                                                                                                                                                                                                                AS url,
    internal_issues.is_part_of_product
  FROM internal_issues
  LEFT JOIN "PROD".common.dim_project AS projects
    ON projects.dim_project_id = internal_issues.project_id
  LEFT JOIN bot_users AS bots
    ON bots.dim_user_id = internal_issues.author_id
  LEFT JOIN namespaces AS ns
    ON ns.namespace_id = projects.dim_namespace_id
  LEFT JOIN milestones
    ON milestones.milestone_id = internal_issues.milestone_id
)

SELECT *
FROM final25:Tc92,{{
  config(
    materialized='table'
  )
}}

{{
  simple_cte([
    ('ip_ranges','valid_google_service_ips'),
    ('namespace_map','container_namespace_map'),
    ('container_downloads','container_registry_download_logs_source'),
    ('namespaces','dim_namespace')
  ])
}},

add_gcp_source AS (

  SELECT
    container_downloads.correlation_id,
    container_downloads.downloaded_at,
    container_downloads.root_repository,
    container_downloads.container_path,
    container_downloads.download_size_bytes,
    IFF(ip_ranges.scope IS NULL, 'Non-GCP', ip_ranges.scope) AS gcp_scope
  FROM container_downloads
  LEFT JOIN ip_ranges
    ON container_downloads.downloaded_by_hex_ip >= ip_ranges.hex_ip_range_start
      AND container_downloads.downloaded_by_hex_ip <= ip_ranges.hex_ip_range_end

),

agg_download_data AS (

  SELECT
    DATE_TRUNC('day', add_gcp_source.downloaded_at)::DATE AS downloaded_date,
    add_gcp_source.root_repository,
    add_gcp_source.container_path,
    add_gcp_source.gcp_scope,
    COUNT(add_gcp_source.correlation_id) AS download_count,
    SUM(add_gcp_source.download_size_bytes) AS total_bytes,
    AVG(add_gcp_source.download_size_bytes) AS avg_bytes,
    total_bytes / 1000 / 1000 / 1000 AS total_gb,
    total_bytes / 1024 / 1024 / 1024 AS total_gib,
    total_gib * 0.066 AS est_cost
  FROM add_gcp_source
  GROUP BY 1, 2, 3, 4

),

report AS (

  SELECT
    agg_download_data.downloaded_date,
    namespace_map.container_repository_id,
    namespace_map.project_id,
    namespaces.dim_namespace_id AS namespace_id,
    namespaces.namespace_path,
    CASE
       WHEN namespaces.visibility_level = 'public'
         OR namespaces.namespace_is_internal          THEN namespace_map.container_path
       WHEN namespaces.visibility_level = 'internal'  THEN 'internal - masked'
       WHEN namespaces.visibility_level = 'private'   THEN 'private - masked'
    END AS container_path,
    ultimate_parent_namespace.dim_namespace_id AS ultimate_parent_id,
    ultimate_parent_namespace.namespace_name AS ultimate_parent_name,
    ultimate_parent_namespace.namespace_path AS ultimate_parent_path,
    namespaces.namespace_type,
    namespaces.gitlab_plan_id,
    CASE
      WHEN ultimate_parent_namespace.namespace_is_internal THEN 'Gitlab Internal'
      WHEN namespaces.gitlab_plan_is_paid = TRUE THEN 'Paid'
      WHEN namespaces.gitlab_plan_is_paid = FALSE THEN 'Free'
    END AS gitlab_plan_type,
    namespaces.gitlab_plan_title,
    namespaces.gitlab_plan_is_paid,
    namespaces.creator_id,
    namespaces.current_member_count,
    namespaces.current_project_count,
    agg_download_data.download_count,
    agg_download_data.gcp_scope,
    agg_download_data.total_bytes,
    agg_download_data.avg_bytes,
    agg_download_data.total_gb,
    agg_download_data.total_gib,
    agg_download_data.est_cost
  FROM agg_download_data
  LEFT JOIN namespace_map
    ON agg_download_data.container_path = namespace_map.container_path
  LEFT JOIN namespaces
    ON namespace_map.namespace_id = namespaces.dim_namespace_id
  LEFT JOIN namespaces AS ultimate_parent_namespace
    ON namespaces.ultimate_parent_namespace_id = ultimate_parent_namespace.dim_namespace_id

)

SELECT *
FROM report26:Td0d,



WITH ip_ranges AS (

    SELECT * 
    FROM "PROD".workspace_engineering.valid_google_service_ips

), namespace_map AS (

    SELECT * 
    FROM "PROD".workspace_engineering.container_namespace_map

), container_downloads AS (

    SELECT * 
    FROM "PREP".container_registry.container_registry_download_logs_source

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

),

add_gcp_source AS (

  SELECT
    container_downloads.correlation_id,
    container_downloads.downloaded_at,
    container_downloads.root_repository,
    container_downloads.container_path,
    container_downloads.download_size_bytes,
    IFF(ip_ranges.scope IS NULL, 'Non-GCP', ip_ranges.scope) AS gcp_scope
  FROM container_downloads
  LEFT JOIN ip_ranges
    ON container_downloads.downloaded_by_hex_ip >= ip_ranges.hex_ip_range_start
      AND container_downloads.downloaded_by_hex_ip <= ip_ranges.hex_ip_range_end

),

agg_download_data AS (

  SELECT
    DATE_TRUNC('day', add_gcp_source.downloaded_at)::DATE AS downloaded_date,
    add_gcp_source.root_repository,
    add_gcp_source.container_path,
    add_gcp_source.gcp_scope,
    COUNT(add_gcp_source.correlation_id) AS download_count,
    SUM(add_gcp_source.download_size_bytes) AS total_bytes,
    AVG(add_gcp_source.download_size_bytes) AS avg_bytes,
    total_bytes / 1000 / 1000 / 1000 AS total_gb,
    total_bytes / 1024 / 1024 / 1024 AS total_gib,
    total_gib * 0.066 AS est_cost
  FROM add_gcp_source
  GROUP BY 1, 2, 3, 4

),

report AS (

  SELECT
    agg_download_data.downloaded_date,
    namespace_map.container_repository_id,
    namespace_map.project_id,
    namespaces.dim_namespace_id AS namespace_id,
    namespaces.namespace_path,
    CASE
       WHEN namespaces.visibility_level = 'public'
         OR namespaces.namespace_is_internal          THEN namespace_map.container_path
       WHEN namespaces.visibility_level = 'internal'  THEN 'internal - masked'
       WHEN namespaces.visibility_level = 'private'   THEN 'private - masked'
    END AS container_path,
    ultimate_parent_namespace.dim_namespace_id AS ultimate_parent_id,
    ultimate_parent_namespace.namespace_name AS ultimate_parent_name,
    ultimate_parent_namespace.namespace_path AS ultimate_parent_path,
    namespaces.namespace_type,
    namespaces.gitlab_plan_id,
    CASE
      WHEN ultimate_parent_namespace.namespace_is_internal THEN 'Gitlab Internal'
      WHEN namespaces.gitlab_plan_is_paid = TRUE THEN 'Paid'
      WHEN namespaces.gitlab_plan_is_paid = FALSE THEN 'Free'
    END AS gitlab_plan_type,
    namespaces.gitlab_plan_title,
    namespaces.gitlab_plan_is_paid,
    namespaces.creator_id,
    namespaces.current_member_count,
    namespaces.current_project_count,
    agg_download_data.download_count,
    agg_download_data.gcp_scope,
    agg_download_data.total_bytes,
    agg_download_data.avg_bytes,
    agg_download_data.total_gb,
    agg_download_data.total_gib,
    agg_download_data.est_cost
  FROM agg_download_data
  LEFT JOIN namespace_map
    ON agg_download_data.container_path = namespace_map.container_path
  LEFT JOIN namespaces
    ON namespace_map.namespace_id = namespaces.dim_namespace_id
  LEFT JOIN namespaces AS ultimate_parent_namespace
    ON namespaces.ultimate_parent_namespace_id = ultimate_parent_namespace.dim_namespace_id

)

SELECT *
FROM report27:T4ff,WITH date_spine AS (

  SELECT date_day FROM {{ ref('dim_date') }}
  WHERE date_day < GETDATE() AND date_day >= '2020-01-01'
),

plan_ids AS (

  SELECT DISTINCT
    gitlab_plan_id,
    CASE WHEN gitlab_plan_title IN ('Premium (Formerly Silver)', 'Ultimate (Formerly Gold)', 'Bronze') THEN 'paid'
      WHEN gitlab_plan_title IN ('Free', 'Premium Trial', 'Ultimate Trial', 'Open Source Program') THEN 'free'
      WHEN gitlab_plan_title IS NULL THEN 'internal'
      ELSE 'internal' END AS gitlab_plan_title
  FROM {{ ref('dim_namespace') }}
-- add namespace_is_internal to internal identification
),

dim_namespace_plan_hist AS (

  SELECT * FROM {{ ref('dim_namespace_plan_hist') }}

),

internal AS (
  SELECT DISTINCT namespace_id AS ultimate_parent_namespace_id
  FROM {{ ref('internal_gitlab_namespaces') }}
  WHERE namespace_id IS NOT NULL
)

SELECT
  date_spine.date_day,
  hist.dim_namespace_id,
  hist.dim_plan_id,
  COALESCE(plan_ids.gitlab_plan_title, 'internal') AS finance_pl
FROM date_spine
LEFT JOIN dim_namespace_plan_hist hist ON date_spine.date_day BETWEEN hist.valid_from AND COALESCE(hist.valid_to, GETDATE())
LEFT JOIN plan_ids ON plan_ids.gitlab_plan_id = hist.dim_plan_id
LEFT JOIN internal ON hist.dim_namespace_id = internal.ultimate_parent_namespace_id28:T503,WITH date_spine AS (

  SELECT date_day FROM "PROD".common.dim_date
  WHERE date_day < GETDATE() AND date_day >= '2020-01-01'
),

plan_ids AS (

  SELECT DISTINCT
    gitlab_plan_id,
    CASE WHEN gitlab_plan_title IN ('Premium (Formerly Silver)', 'Ultimate (Formerly Gold)', 'Bronze') THEN 'paid'
      WHEN gitlab_plan_title IN ('Free', 'Premium Trial', 'Ultimate Trial', 'Open Source Program') THEN 'free'
      WHEN gitlab_plan_title IS NULL THEN 'internal'
      ELSE 'internal' END AS gitlab_plan_title
  FROM "PROD".common.dim_namespace
-- add namespace_is_internal to internal identification
),

dim_namespace_plan_hist AS (

  SELECT * FROM "PROD".common.dim_namespace_plan_hist

),

internal AS (
  SELECT DISTINCT namespace_id AS ultimate_parent_namespace_id
  FROM "PROD".legacy.internal_gitlab_namespaces
  WHERE namespace_id IS NOT NULL
)

SELECT
  date_spine.date_day,
  hist.dim_namespace_id,
  hist.dim_plan_id,
  COALESCE(plan_ids.gitlab_plan_title, 'internal') AS finance_pl
FROM date_spine
LEFT JOIN dim_namespace_plan_hist hist ON date_spine.date_day BETWEEN hist.valid_from AND COALESCE(hist.valid_to, GETDATE())
LEFT JOIN plan_ids ON plan_ids.gitlab_plan_id = hist.dim_plan_id
LEFT JOIN internal ON hist.dim_namespace_id = internal.ultimate_parent_namespace_id29:T1b63,{{ config(
    materialized='table',
    tags=["mnpi_exception", "product"]
) }}

{{ simple_cte([
    ('fct_event', 'fct_event'),
    ('dim_user', 'dim_user'),
    ('xmau_metrics', 'map_gitlab_dotcom_xmau_metrics'),
    ('namespace_order_subscription', 'bdg_namespace_order_subscription'),
    ('dim_subscription', 'dim_subscription'),
    ('dim_namespace', 'dim_namespace')
    ])
}},

fct_event_valid AS (
    
    /*
    fct_event_valid is at the atomic grain of event_id and event_created_at timestamp. All other derived facts in the GitLab.com usage events 
    lineage are built from this derived fact. This CTE pulls in ALL of the columns from the fct_event as a base data set. It uses the dbt_utils.star function 
    to select all columns except the meta data table related columns from the fct_event. The CTE also filters out imported projects and events with 
    data quality issues by filtering out negative days since user creation at event date. It keeps events with a NULL days since user creation to capture events
    that do not have a user. fct_event_valid also filters out events from blocked users with a join back to dim_user. The table also filters to a rolling 36 months of data 
    for performance optimization.
    */

    SELECT
      fct_event.dim_user_sk,
      fct_event.dim_user_id,--dim_user_id is the current foreign key, and is a natural_key, and will be updated to user_id in a future MR.
      {{ dbt_utils.star(from=ref('fct_event'), except=["DIM_USER_SK", "DIM_USER_ID", "CREATED_BY",
          "UPDATED_BY","CREATED_DATE","UPDATED_DATE","MODEL_CREATED_DATE","MODEL_UPDATED_DATE","DBT_UPDATED_AT","DBT_CREATED_AT"]) }},
      xmau_metrics.group_name,
      xmau_metrics.section_name,
      xmau_metrics.stage_name,
      xmau_metrics.smau AS is_smau,
      xmau_metrics.gmau AS is_gmau,
      xmau_metrics.is_umau
    FROM fct_event
    LEFT JOIN xmau_metrics
      ON fct_event.event_name = xmau_metrics.common_events_to_include
    LEFT JOIN dim_user
      ON fct_event.dim_user_sk = dim_user.dim_user_sk
    WHERE event_created_at >= DATEADD(MONTH, -36, DATE_TRUNC(MONTH,CURRENT_DATE)) 
      AND (fct_event.days_since_user_creation_at_event_date >= 0
           OR fct_event.days_since_user_creation_at_event_date IS NULL)
      AND (dim_user.is_blocked_user = FALSE 
           OR dim_user.is_blocked_user IS NULL)

),

deduped_namespace_bdg AS (

  SELECT
    namespace_order_subscription.dim_subscription_id AS dim_latest_subscription_id,
    namespace_order_subscription.order_id,
    namespace_order_subscription.dim_crm_account_id,
    namespace_order_subscription.dim_billing_account_id,
    namespace_order_subscription.dim_namespace_id
  FROM namespace_order_subscription
  INNER JOIN dim_subscription
    ON namespace_order_subscription.dim_subscription_id = dim_subscription.dim_subscription_id
  WHERE namespace_order_subscription.product_tier_name_subscription IN ('SaaS - Bronze', 'SaaS - Ultimate', 'SaaS - Premium')
  QUALIFY ROW_NUMBER() OVER (PARTITION BY dim_namespace_id ORDER BY subscription_version DESC) = 1

),

dim_namespace_w_bdg AS (

  SELECT
    dim_namespace.dim_namespace_id,
    dim_namespace.dim_product_tier_id AS dim_latest_product_tier_id,
    deduped_namespace_bdg.dim_latest_subscription_id,
    deduped_namespace_bdg.order_id,
    deduped_namespace_bdg.dim_crm_account_id,
    deduped_namespace_bdg.dim_billing_account_id
  FROM deduped_namespace_bdg
  INNER JOIN dim_namespace
    ON dim_namespace.dim_namespace_id = deduped_namespace_bdg.dim_namespace_id

),

paid_flag_by_day AS (

  SELECT
    dim_ultimate_parent_namespace_id,
    plan_was_paid_at_event_timestamp AS plan_was_paid_at_event_date,
    plan_id_at_event_timestamp AS plan_id_at_event_date,
    plan_name_at_event_timestamp AS plan_name_at_event_date,
    event_created_at,
    event_date
  FROM fct_event_valid
  QUALIFY ROW_NUMBER() OVER (PARTITION BY dim_ultimate_parent_namespace_id, event_date
      ORDER BY event_created_at DESC) = 1

),

fct_event_w_flags AS (

  SELECT 
    fct_event_valid.event_pk,
    fct_event_valid.dim_event_date_id,
    fct_event_valid.dim_ultimate_parent_namespace_id,
    fct_event_valid.dim_project_id,
    fct_event_valid.dim_user_sk,
    fct_event_valid.dim_user_id,--dim_user_id is the current foreign key, and is a natural_key, and will be deprecated in a future MR.
    fct_event_valid.is_null_user,
    fct_event_valid.event_created_at,
    fct_event_valid.event_date,
    fct_event_valid.group_name,
    fct_event_valid.section_name,
    fct_event_valid.stage_name,
    fct_event_valid.is_smau,
    fct_event_valid.is_gmau,
    fct_event_valid.is_umau,
    fct_event_valid.parent_id,
    fct_event_valid.parent_type,
    fct_event_valid.event_name,
    fct_event_valid.days_since_user_creation_at_event_date,
    fct_event_valid.days_since_namespace_creation_at_event_date,
    fct_event_valid.days_since_project_creation_at_event_date,
    fct_event_valid.data_source,
    dim_namespace_w_bdg.dim_latest_product_tier_id,
    dim_namespace_w_bdg.dim_latest_subscription_id,
    dim_namespace_w_bdg.order_id,
    dim_namespace_w_bdg.dim_crm_account_id,
    dim_namespace_w_bdg.dim_billing_account_id,
    COALESCE(paid_flag_by_day.plan_was_paid_at_event_date, FALSE) AS plan_was_paid_at_event_date,
    COALESCE(paid_flag_by_day.plan_id_at_event_date, 34) AS plan_id_at_event_date,
    COALESCE(paid_flag_by_day.plan_name_at_event_date, 'free') AS plan_name_at_event_date
  FROM fct_event_valid
  LEFT JOIN dim_namespace_w_bdg
    ON fct_event_valid.dim_ultimate_parent_namespace_id = dim_namespace_w_bdg.dim_namespace_id
  LEFT JOIN paid_flag_by_day
    ON fct_event_valid.dim_ultimate_parent_namespace_id = paid_flag_by_day.dim_ultimate_parent_namespace_id
      AND fct_event_valid.event_date = paid_flag_by_day.event_date

),

gitlab_dotcom_fact AS (

  SELECT
    --Primary Key
    event_pk,
    
    --Foreign Keys
    dim_event_date_id,
    dim_ultimate_parent_namespace_id,
    dim_project_id,
    dim_user_sk,
    dim_user_id,--dim_user_id is the current foreign key, and is a natural_key, and will be updated to user_id in a future MR.
    dim_latest_product_tier_id,
    dim_latest_subscription_id,
    dim_crm_account_id,
    dim_billing_account_id,
    order_id,
    
    --Time attributes
    event_created_at,
    event_date,
    
    --Degenerate Dimensions (No stand-alone, promoted dimension table)
    is_null_user,
    group_name,
    section_name,
    stage_name,
    is_smau,
    is_gmau,
    is_umau,
    parent_id,
    parent_type,
    event_name,
    plan_id_at_event_date,
    plan_name_at_event_date,
    plan_was_paid_at_event_date,
    days_since_user_creation_at_event_date,
    days_since_namespace_creation_at_event_date,
    days_since_project_creation_at_event_date,
    data_source
  FROM fct_event_w_flags

)

{{ dbt_audit(
    cte_ref="gitlab_dotcom_fact",
    created_by="@iweeks",
    updated_by="@michellecooper",
    created_date="2022-04-09",
    updated_date="2023-05-12"
) }}2a:T8f3,**Description:** Atomic level GitLab.com usage event data with only valid events
- [Targets and Actions](https://docs.gitlab.com/ee/api/events.html) activity by Users and [Namespaces](https://about.gitlab.com/handbook/business-technology/data-team/data-catalog/namespace/) within the GitLab.com application are captured and refreshed periodically throughout the day.  Targets are objects ie. issue, milestone, merge_request and Actions have effect on Targets, ie. approved, closed, commented, created, etc.

**Data Grain:**
- event_pk

**Filters Applied to Model:**
- Include valid events for standard analysis and reporting:
  - Exclude events where the event created date < the user created date (`days_since_user_creation_at_event_date >= 0`)
    - These are usually events from projects that were created before the GitLab.com user and then imported after the user is created 
  - Exclude events from blocked users (based on the current user state)
- Rolling 36 months of data

**Business Logic in this Model:**
- A namespace's plan information (ex: `plan_name_at_event_date`) is determined by the plan for the last event on a given day
- The ultimate parent namespace's subscription, billing, and account information (ex: `dim_latest_subscription_id`) reflects the most recent available attributes associated with that namespace
- `dim_latest_product_tier_id` reflects the _current_ product tier of the namespace
- Not all events have a user associated with them (ex: 'milestones'), and not all events have a namespace associated with them (ex: 'users_created'). Therefore it is expected that `dim_user_sk` or `dim_ultimate_parent_namespace_id` will be NULL for these events
- `section_name`, `stage_name`, `group_name`, and xMAU metric flags (ex: `is_gmau`) are based on the _current_ event mappings and may not match the mapping at the time of the event

**Other Comments:**
- Note about the `action` event: This "event" captures everything from the [Events API](https://docs.gitlab.com/ee/api/events.html) - issue comments, MRs created, etc. While the `action` event is mapped to the Manage stage, the events included actually span multiple stages (plan, create, etc), which is why this is used for UMAU. Be mindful of the impact of including `action` during stage adoption analysis.2b:T1db1,



WITH fct_event AS (

    SELECT * 
    FROM "PROD".common.fct_event

), dim_user AS (

    SELECT * 
    FROM "PROD".common.dim_user

), xmau_metrics AS (

    SELECT * 
    FROM "PROD".common_mapping.map_gitlab_dotcom_xmau_metrics

), namespace_order_subscription AS (

    SELECT * 
    FROM "PROD".common.bdg_namespace_order_subscription

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

),

fct_event_valid AS (
    
    /*
    fct_event_valid is at the atomic grain of event_id and event_created_at timestamp. All other derived facts in the GitLab.com usage events 
    lineage are built from this derived fact. This CTE pulls in ALL of the columns from the fct_event as a base data set. It uses the dbt_utils.star function 
    to select all columns except the meta data table related columns from the fct_event. The CTE also filters out imported projects and events with 
    data quality issues by filtering out negative days since user creation at event date. It keeps events with a NULL days since user creation to capture events
    that do not have a user. fct_event_valid also filters out events from blocked users with a join back to dim_user. The table also filters to a rolling 36 months of data 
    for performance optimization.
    */

    SELECT
      fct_event.dim_user_sk,
      fct_event.dim_user_id,--dim_user_id is the current foreign key, and is a natural_key, and will be updated to user_id in a future MR.
      "EVENT_PK",
  "DIM_EVENT_DATE_ID",
  "DIM_ULTIMATE_PARENT_NAMESPACE_ID",
  "DIM_PROJECT_ID",
  "EVENT_CREATED_AT",
  "EVENT_DATE",
  "IS_NULL_USER",
  "PARENT_ID",
  "PARENT_TYPE",
  "EVENT_NAME",
  "PLAN_ID_AT_EVENT_TIMESTAMP",
  "PLAN_NAME_AT_EVENT_TIMESTAMP",
  "PLAN_WAS_PAID_AT_EVENT_TIMESTAMP",
  "DAYS_SINCE_USER_CREATION_AT_EVENT_DATE",
  "DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE",
  "DAYS_SINCE_PROJECT_CREATION_AT_EVENT_DATE",
  "DATA_SOURCE",
      xmau_metrics.group_name,
      xmau_metrics.section_name,
      xmau_metrics.stage_name,
      xmau_metrics.smau AS is_smau,
      xmau_metrics.gmau AS is_gmau,
      xmau_metrics.is_umau
    FROM fct_event
    LEFT JOIN xmau_metrics
      ON fct_event.event_name = xmau_metrics.common_events_to_include
    LEFT JOIN dim_user
      ON fct_event.dim_user_sk = dim_user.dim_user_sk
    WHERE event_created_at >= DATEADD(MONTH, -36, DATE_TRUNC(MONTH,CURRENT_DATE)) 
      AND (fct_event.days_since_user_creation_at_event_date >= 0
           OR fct_event.days_since_user_creation_at_event_date IS NULL)
      AND (dim_user.is_blocked_user = FALSE 
           OR dim_user.is_blocked_user IS NULL)

),

deduped_namespace_bdg AS (

  SELECT
    namespace_order_subscription.dim_subscription_id AS dim_latest_subscription_id,
    namespace_order_subscription.order_id,
    namespace_order_subscription.dim_crm_account_id,
    namespace_order_subscription.dim_billing_account_id,
    namespace_order_subscription.dim_namespace_id
  FROM namespace_order_subscription
  INNER JOIN dim_subscription
    ON namespace_order_subscription.dim_subscription_id = dim_subscription.dim_subscription_id
  WHERE namespace_order_subscription.product_tier_name_subscription IN ('SaaS - Bronze', 'SaaS - Ultimate', 'SaaS - Premium')
  QUALIFY ROW_NUMBER() OVER (PARTITION BY dim_namespace_id ORDER BY subscription_version DESC) = 1

),

dim_namespace_w_bdg AS (

  SELECT
    dim_namespace.dim_namespace_id,
    dim_namespace.dim_product_tier_id AS dim_latest_product_tier_id,
    deduped_namespace_bdg.dim_latest_subscription_id,
    deduped_namespace_bdg.order_id,
    deduped_namespace_bdg.dim_crm_account_id,
    deduped_namespace_bdg.dim_billing_account_id
  FROM deduped_namespace_bdg
  INNER JOIN dim_namespace
    ON dim_namespace.dim_namespace_id = deduped_namespace_bdg.dim_namespace_id

),

paid_flag_by_day AS (

  SELECT
    dim_ultimate_parent_namespace_id,
    plan_was_paid_at_event_timestamp AS plan_was_paid_at_event_date,
    plan_id_at_event_timestamp AS plan_id_at_event_date,
    plan_name_at_event_timestamp AS plan_name_at_event_date,
    event_created_at,
    event_date
  FROM fct_event_valid
  QUALIFY ROW_NUMBER() OVER (PARTITION BY dim_ultimate_parent_namespace_id, event_date
      ORDER BY event_created_at DESC) = 1

),

fct_event_w_flags AS (

  SELECT 
    fct_event_valid.event_pk,
    fct_event_valid.dim_event_date_id,
    fct_event_valid.dim_ultimate_parent_namespace_id,
    fct_event_valid.dim_project_id,
    fct_event_valid.dim_user_sk,
    fct_event_valid.dim_user_id,--dim_user_id is the current foreign key, and is a natural_key, and will be deprecated in a future MR.
    fct_event_valid.is_null_user,
    fct_event_valid.event_created_at,
    fct_event_valid.event_date,
    fct_event_valid.group_name,
    fct_event_valid.section_name,
    fct_event_valid.stage_name,
    fct_event_valid.is_smau,
    fct_event_valid.is_gmau,
    fct_event_valid.is_umau,
    fct_event_valid.parent_id,
    fct_event_valid.parent_type,
    fct_event_valid.event_name,
    fct_event_valid.days_since_user_creation_at_event_date,
    fct_event_valid.days_since_namespace_creation_at_event_date,
    fct_event_valid.days_since_project_creation_at_event_date,
    fct_event_valid.data_source,
    dim_namespace_w_bdg.dim_latest_product_tier_id,
    dim_namespace_w_bdg.dim_latest_subscription_id,
    dim_namespace_w_bdg.order_id,
    dim_namespace_w_bdg.dim_crm_account_id,
    dim_namespace_w_bdg.dim_billing_account_id,
    COALESCE(paid_flag_by_day.plan_was_paid_at_event_date, FALSE) AS plan_was_paid_at_event_date,
    COALESCE(paid_flag_by_day.plan_id_at_event_date, 34) AS plan_id_at_event_date,
    COALESCE(paid_flag_by_day.plan_name_at_event_date, 'free') AS plan_name_at_event_date
  FROM fct_event_valid
  LEFT JOIN dim_namespace_w_bdg
    ON fct_event_valid.dim_ultimate_parent_namespace_id = dim_namespace_w_bdg.dim_namespace_id
  LEFT JOIN paid_flag_by_day
    ON fct_event_valid.dim_ultimate_parent_namespace_id = paid_flag_by_day.dim_ultimate_parent_namespace_id
      AND fct_event_valid.event_date = paid_flag_by_day.event_date

),

gitlab_dotcom_fact AS (

  SELECT
    --Primary Key
    event_pk,
    
    --Foreign Keys
    dim_event_date_id,
    dim_ultimate_parent_namespace_id,
    dim_project_id,
    dim_user_sk,
    dim_user_id,--dim_user_id is the current foreign key, and is a natural_key, and will be updated to user_id in a future MR.
    dim_latest_product_tier_id,
    dim_latest_subscription_id,
    dim_crm_account_id,
    dim_billing_account_id,
    order_id,
    
    --Time attributes
    event_created_at,
    event_date,
    
    --Degenerate Dimensions (No stand-alone, promoted dimension table)
    is_null_user,
    group_name,
    section_name,
    stage_name,
    is_smau,
    is_gmau,
    is_umau,
    parent_id,
    parent_type,
    event_name,
    plan_id_at_event_date,
    plan_name_at_event_date,
    plan_was_paid_at_event_date,
    days_since_user_creation_at_event_date,
    days_since_namespace_creation_at_event_date,
    days_since_project_creation_at_event_date,
    data_source
  FROM fct_event_w_flags

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2022-04-09'::DATE        AS model_created_date,
      '2023-05-12'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM gitlab_dotcom_fact2c:T1a14,WITH ci_minutes AS (

  SELECT
    DATE_TRUNC('day', ci_build_started_at)::DATE AS reporting_day,

    CASE
      WHEN plan_name_modified LIKE '%trial%' THEN 'free'
      WHEN (plan_name_modified = 'ultimate' AND dim_namespace.namespace_is_internal = FALSE) THEN 'paid'
      WHEN (plan_name_modified = 'ultimate' AND dim_namespace.namespace_is_internal = TRUE) THEN 'internal'
      WHEN plan_name_modified = 'premium' THEN 'paid'
      WHEN plan_name_modified = 'default' THEN 'free'

      WHEN plan_title = 'Bronze' THEN 'paid'
      WHEN plan_title = 'Open Source Program' THEN 'free'
      WHEN plan_title = 'Free' THEN 'free'

      ELSE plan_title

    END                                          AS pl,


    CASE
      WHEN ci_runner_type_summary = 'shared' THEN 'Shared Runners'
      ELSE 'Self-Managed Runners'
    END                                          AS runner_type,

    CASE
      WHEN LOWER(ci_runner_description) LIKE 'green-_.saas-linux-medium-amd64%' THEN 'green-_.saas-linux-medium-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'green-_.saas-linux-large-amd64%' THEN 'green-_.saas-linux-large-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'blue-_.saas-linux-large-amd64%' THEN 'blue-_.saas-linux-large-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'blue-_.saas-linux-medium-amd64%' THEN 'blue-_.saas-linux-medium-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'macos shared%' THEN 'macos shared runners'
      ELSE ci_runner_manager
    END                                          AS ci_runner_manager,

    is_paid_by_gitlab,

    CASE
      WHEN LOWER(ci_runner_description) LIKE 'green-%.saas-linux-large-amd64-gpu.%' THEN 'green-_.saas-linux-large-amd64-gpu.'
      WHEN LOWER(ci_runner_description) LIKE 'green-%.saas-linux-large-amd64.%' THEN 'green-_.saas-linux-large-amd64.'
      WHEN LOWER(ci_runner_description) LIKE 'green-%.saas-linux-medium-amd64.%' THEN 'green-_.saas-linux-medium-amd64.'

      WHEN LOWER(ci_runner_description) LIKE 'blue-%.saas-linux-large-amd64.%' THEN 'blue-_.saas-linux-large-amd64.'
      WHEN LOWER(ci_runner_description) LIKE 'blue-%.saas-linux-medium-amd64.%' THEN 'blue-_.saas-linux-medium-amd64.'

      WHEN LOWER(ci_runner_description) LIKE '_-blue.shared-gitlab-org%' THEN '_-blue.shared-gitlab-org'
      WHEN LOWER(ci_runner_description) LIKE '_-green.shared-gitlab-org%' THEN '_-green.shared-gitlab-org'

      WHEN LOWER(ci_runner_description) LIKE 'green-_.private.runners-manager%' THEN 'green-_.private.runners-manager'
      WHEN LOWER(ci_runner_description) LIKE 'blue-_.private.runners-manager%' THEN 'blue-_.private.runners-manager'

      WHEN LOWER(ci_runner_description) LIKE '_-blue.shared.runners-manager%' THEN '_-blue.shared.runners-manager'
      WHEN LOWER(ci_runner_description) LIKE '_-green.shared.runners-manager%' THEN '_-green.shared.runners-manager'

      WHEN LOWER(ci_runner_description) LIKE 'windows-shared-runners-manager-%' THEN 'windows-shared-runners-manager-'


    END                                          AS ci_runner_description,


    CASE
      WHEN LOWER(ci_runner_description) LIKE '%saas-linux-large%' THEN 'SaaS Runners Linux - Large'
      WHEN LOWER(ci_runner_description) LIKE '%saas-linux-medium%' THEN 'SaaS Runners - Medium'
      WHEN LOWER(ci_runner_description) LIKE '%.shared.runners-manager.%' THEN 'SaaS Runners Linux - Small'
      WHEN LOWER(ci_runner_description) LIKE 'shared-runners-manager-%' THEN 'SaaS Runners Linux - Small'
      WHEN LOWER(ci_runner_description) LIKE 'windows-shared-runners-manager-%' THEN 'SaaS Runners Windows - Medium'
      WHEN LOWER(ci_runner_description) LIKE 'macos shared%' THEN ci_runner_description
      ELSE 'Other'
    END                                          AS dashboard_mapping,

    SUM(ci_build_duration_in_s) / 60             AS ci_build_minutes

  FROM {{ ref('fct_ci_runner_activity') }} --common.fct_ci_runner_activity 
    JOIN {{ ref('dim_ci_runner') }} --common.dim_ci_runner
    ON fct_ci_runner_activity.dim_ci_runner_id = dim_ci_runner.dim_ci_runner_id
    JOIN {{ ref('dim_namespace') }} --common.dim_namespace
    ON fct_ci_runner_activity.dim_namespace_id = dim_namespace.dim_namespace_id
    JOIN {{ ref('prep_gitlab_dotcom_plan') }} --common_prep.prep_gitlab_dotcom_plan
    ON fct_ci_runner_activity.dim_plan_id = prep_gitlab_dotcom_plan.dim_plan_id
  WHERE DATE_TRUNC('month', ci_build_started_at) >= '2023-02-01'
    AND ci_build_finished_at IS NOT NULL
    AND namespace_creator_is_blocked = FALSE
  GROUP BY 1, 2, 3, 4, 5, 6, 7

)

SELECT
  reporting_day,

  CASE
    WHEN runner_type = 'Self-Managed Runners' AND ci_runner_manager = 'private-runner-mgr' THEN '6 - private internal runners'
    WHEN runner_type = 'Self-Managed Runners' AND ci_runner_manager = 'private-runner-mgr' THEN '6 - private internal runners'
    WHEN runner_type = 'Self-Managed Runners' AND is_paid_by_gitlab = TRUE THEN '6 - private internal runners'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'shared-gitlab-org-runner-mgr' THEN '1 - shared gitlab org runners'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'shared-gitlab-org-runner-mgr' THEN '1 - shared gitlab org runners'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'linux-runner-mgr' THEN '2 - shared saas runners - small'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'linux-runner-mgr' THEN '2 - shared saas runners - small'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'green-_.saas-linux-medium-amd64' THEN '3 - shared saas runners - medium'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'blue-_.saas-linux-medium-amd64' THEN '3 - shared saas runners - medium'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'green-_.saas-linux-large-amd64' THEN '4 - shared saas runners - large'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'blue-_.saas-linux-large-amd64' THEN '4 - shared saas runners - large'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'macos shared runners' THEN '5 - shared saas macos runners'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'windows-runner-mgr' THEN '7 - shared saas windows runners'

  END                                                                                   AS mapping,
  pl,
  TRUNC(SUM(ci_build_minutes))                                                          AS total_ci_minutes,
  TRUNC(RATIO_TO_REPORT(total_ci_minutes) OVER(PARTITION BY reporting_day, mapping), 2) AS pct_ci_minutes
FROM ci_minutes
WHERE mapping IS NOT NULL
GROUP BY 1, 2, 3
ORDER BY 1, mapping DESC2d:T1a1d,WITH ci_minutes AS (

  SELECT
    DATE_TRUNC('day', ci_build_started_at)::DATE AS reporting_day,

    CASE
      WHEN plan_name_modified LIKE '%trial%' THEN 'free'
      WHEN (plan_name_modified = 'ultimate' AND dim_namespace.namespace_is_internal = FALSE) THEN 'paid'
      WHEN (plan_name_modified = 'ultimate' AND dim_namespace.namespace_is_internal = TRUE) THEN 'internal'
      WHEN plan_name_modified = 'premium' THEN 'paid'
      WHEN plan_name_modified = 'default' THEN 'free'

      WHEN plan_title = 'Bronze' THEN 'paid'
      WHEN plan_title = 'Open Source Program' THEN 'free'
      WHEN plan_title = 'Free' THEN 'free'

      ELSE plan_title

    END                                          AS pl,


    CASE
      WHEN ci_runner_type_summary = 'shared' THEN 'Shared Runners'
      ELSE 'Self-Managed Runners'
    END                                          AS runner_type,

    CASE
      WHEN LOWER(ci_runner_description) LIKE 'green-_.saas-linux-medium-amd64%' THEN 'green-_.saas-linux-medium-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'green-_.saas-linux-large-amd64%' THEN 'green-_.saas-linux-large-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'blue-_.saas-linux-large-amd64%' THEN 'blue-_.saas-linux-large-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'blue-_.saas-linux-medium-amd64%' THEN 'blue-_.saas-linux-medium-amd64'
      WHEN LOWER(ci_runner_description) LIKE 'macos shared%' THEN 'macos shared runners'
      ELSE ci_runner_manager
    END                                          AS ci_runner_manager,

    is_paid_by_gitlab,

    CASE
      WHEN LOWER(ci_runner_description) LIKE 'green-%.saas-linux-large-amd64-gpu.%' THEN 'green-_.saas-linux-large-amd64-gpu.'
      WHEN LOWER(ci_runner_description) LIKE 'green-%.saas-linux-large-amd64.%' THEN 'green-_.saas-linux-large-amd64.'
      WHEN LOWER(ci_runner_description) LIKE 'green-%.saas-linux-medium-amd64.%' THEN 'green-_.saas-linux-medium-amd64.'

      WHEN LOWER(ci_runner_description) LIKE 'blue-%.saas-linux-large-amd64.%' THEN 'blue-_.saas-linux-large-amd64.'
      WHEN LOWER(ci_runner_description) LIKE 'blue-%.saas-linux-medium-amd64.%' THEN 'blue-_.saas-linux-medium-amd64.'

      WHEN LOWER(ci_runner_description) LIKE '_-blue.shared-gitlab-org%' THEN '_-blue.shared-gitlab-org'
      WHEN LOWER(ci_runner_description) LIKE '_-green.shared-gitlab-org%' THEN '_-green.shared-gitlab-org'

      WHEN LOWER(ci_runner_description) LIKE 'green-_.private.runners-manager%' THEN 'green-_.private.runners-manager'
      WHEN LOWER(ci_runner_description) LIKE 'blue-_.private.runners-manager%' THEN 'blue-_.private.runners-manager'

      WHEN LOWER(ci_runner_description) LIKE '_-blue.shared.runners-manager%' THEN '_-blue.shared.runners-manager'
      WHEN LOWER(ci_runner_description) LIKE '_-green.shared.runners-manager%' THEN '_-green.shared.runners-manager'

      WHEN LOWER(ci_runner_description) LIKE 'windows-shared-runners-manager-%' THEN 'windows-shared-runners-manager-'


    END                                          AS ci_runner_description,


    CASE
      WHEN LOWER(ci_runner_description) LIKE '%saas-linux-large%' THEN 'SaaS Runners Linux - Large'
      WHEN LOWER(ci_runner_description) LIKE '%saas-linux-medium%' THEN 'SaaS Runners - Medium'
      WHEN LOWER(ci_runner_description) LIKE '%.shared.runners-manager.%' THEN 'SaaS Runners Linux - Small'
      WHEN LOWER(ci_runner_description) LIKE 'shared-runners-manager-%' THEN 'SaaS Runners Linux - Small'
      WHEN LOWER(ci_runner_description) LIKE 'windows-shared-runners-manager-%' THEN 'SaaS Runners Windows - Medium'
      WHEN LOWER(ci_runner_description) LIKE 'macos shared%' THEN ci_runner_description
      ELSE 'Other'
    END                                          AS dashboard_mapping,

    SUM(ci_build_duration_in_s) / 60             AS ci_build_minutes

  FROM "PROD".common.fct_ci_runner_activity --common.fct_ci_runner_activity 
    JOIN "PROD".common.dim_ci_runner --common.dim_ci_runner
    ON fct_ci_runner_activity.dim_ci_runner_id = dim_ci_runner.dim_ci_runner_id
    JOIN "PROD".common.dim_namespace --common.dim_namespace
    ON fct_ci_runner_activity.dim_namespace_id = dim_namespace.dim_namespace_id
    JOIN "PROD".common_prep.prep_gitlab_dotcom_plan --common_prep.prep_gitlab_dotcom_plan
    ON fct_ci_runner_activity.dim_plan_id = prep_gitlab_dotcom_plan.dim_plan_id
  WHERE DATE_TRUNC('month', ci_build_started_at) >= '2023-02-01'
    AND ci_build_finished_at IS NOT NULL
    AND namespace_creator_is_blocked = FALSE
  GROUP BY 1, 2, 3, 4, 5, 6, 7

)

SELECT
  reporting_day,

  CASE
    WHEN runner_type = 'Self-Managed Runners' AND ci_runner_manager = 'private-runner-mgr' THEN '6 - private internal runners'
    WHEN runner_type = 'Self-Managed Runners' AND ci_runner_manager = 'private-runner-mgr' THEN '6 - private internal runners'
    WHEN runner_type = 'Self-Managed Runners' AND is_paid_by_gitlab = TRUE THEN '6 - private internal runners'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'shared-gitlab-org-runner-mgr' THEN '1 - shared gitlab org runners'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'shared-gitlab-org-runner-mgr' THEN '1 - shared gitlab org runners'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'linux-runner-mgr' THEN '2 - shared saas runners - small'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'linux-runner-mgr' THEN '2 - shared saas runners - small'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'green-_.saas-linux-medium-amd64' THEN '3 - shared saas runners - medium'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'blue-_.saas-linux-medium-amd64' THEN '3 - shared saas runners - medium'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'green-_.saas-linux-large-amd64' THEN '4 - shared saas runners - large'
    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'blue-_.saas-linux-large-amd64' THEN '4 - shared saas runners - large'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'macos shared runners' THEN '5 - shared saas macos runners'

    WHEN runner_type = 'Shared Runners' AND ci_runner_manager = 'windows-runner-mgr' THEN '7 - shared saas windows runners'

  END                                                                                   AS mapping,
  pl,
  TRUNC(SUM(ci_build_minutes))                                                          AS total_ci_minutes,
  TRUNC(RATIO_TO_REPORT(total_ci_minutes) OVER(PARTITION BY reporting_day, mapping), 2) AS pct_ci_minutes
FROM ci_minutes
WHERE mapping IS NOT NULL
GROUP BY 1, 2, 3
ORDER BY 1, mapping DESC2e:Taf9,{{ config(
    tags=["product"]
) }}


{{ simple_cte([
    ('prep_ci_build', 'prep_ci_build'),
    ('prep_ci_runner', 'prep_ci_runner'),
    ('prep_ci_pipeline', 'prep_ci_pipeline'),
    ('prep_ci_stage', 'prep_ci_stage'),
    ('prep_project', 'prep_project'),
    ('dim_namespace', 'dim_namespace'),
    ('prep_user', 'prep_user'),
    ('dim_date', 'dim_date')
]) }}

, joined AS (

    SELECT
      -- PRIMARY KEY
      prep_ci_build.dim_ci_build_id,

      -- FOREIGN KEYS
      IFNULL(prep_ci_runner.dim_ci_runner_id, -1)             AS dim_ci_runner_id,
      IFNULL(prep_ci_pipeline.dim_ci_pipeline_id, -1)         AS dim_ci_pipeline_id,
      IFNULL(prep_ci_stage.dim_ci_stage_id, -1)               AS dim_ci_stage_id,
      IFNULL(prep_project.dim_project_id, -1)                 AS dim_project_id,
      IFNULL(prep_user.dim_user_id, -1)                       AS dim_user_id,
      IFNULL(dim_date.date_id, -1)                            AS ci_build_created_date_id,
      IFNULL(dim_namespace.dim_namespace_id, -1)              AS dim_namespace_id,
      IFNULL(dim_namespace.ultimate_parent_namespace_id, -1)  AS ultimate_parent_namespace_id,
      prep_ci_build.dim_plan_id,

      -- ci_build metrics
      prep_ci_build.started_at                                AS ci_build_started_at,
      prep_ci_build.finished_at                               AS ci_build_finished_at,
      DATEDIFF('seconds',
               prep_ci_build.started_at,
               prep_ci_build.finished_at)                     AS ci_build_duration_in_s,

      -- ci_runner metrics
      CASE
        WHEN dim_namespace.namespace_is_internal = TRUE
          THEN TRUE
        WHEN prep_ci_runner.runner_type = 1
          THEN TRUE
          ELSE FALSE
      END                                                     AS is_paid_by_gitlab,
      prep_ci_runner.public_projects_minutes_cost_factor,
      prep_ci_runner.private_projects_minutes_cost_factor

    FROM prep_ci_build
    LEFT JOIN prep_ci_runner 
      ON prep_ci_build.dim_ci_runner_id = prep_ci_runner.dim_ci_runner_id
    LEFT JOIN prep_ci_stage
      ON prep_ci_build.dim_ci_stage_id = prep_ci_stage.dim_ci_stage_id
    LEFT JOIN prep_ci_pipeline
      ON prep_ci_stage.dim_ci_pipeline_id = prep_ci_pipeline.dim_ci_pipeline_id
    LEFT JOIN prep_project
      ON prep_ci_build.dim_project_id = prep_project.dim_project_id
    LEFT JOIN dim_namespace
      ON prep_ci_build.dim_namespace_id = dim_namespace.dim_namespace_id
    LEFT JOIN prep_user
      ON prep_ci_build.dim_user_id = prep_user.dim_user_id
    LEFT JOIN dim_date
      ON prep_ci_build.created_date_id = dim_date.date_id

)

{{ dbt_audit(
    cte_ref="joined",
    created_by="@mpeychet_",
    updated_by="@ischweickartDD",
    created_date="2021-06-30",
    updated_date="2021-07-14"
) }}2f:Tced,




WITH prep_ci_build AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ci_build

), prep_ci_runner AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ci_runner

), prep_ci_pipeline AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ci_pipeline

), prep_ci_stage AS (

    SELECT * 
    FROM "PROD".common_prep.prep_ci_stage

), prep_project AS (

    SELECT * 
    FROM "PROD".common_prep.prep_project

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), prep_user AS (

    SELECT * 
    FROM "PROD".common_prep.prep_user

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

)

, joined AS (

    SELECT
      -- PRIMARY KEY
      prep_ci_build.dim_ci_build_id,

      -- FOREIGN KEYS
      IFNULL(prep_ci_runner.dim_ci_runner_id, -1)             AS dim_ci_runner_id,
      IFNULL(prep_ci_pipeline.dim_ci_pipeline_id, -1)         AS dim_ci_pipeline_id,
      IFNULL(prep_ci_stage.dim_ci_stage_id, -1)               AS dim_ci_stage_id,
      IFNULL(prep_project.dim_project_id, -1)                 AS dim_project_id,
      IFNULL(prep_user.dim_user_id, -1)                       AS dim_user_id,
      IFNULL(dim_date.date_id, -1)                            AS ci_build_created_date_id,
      IFNULL(dim_namespace.dim_namespace_id, -1)              AS dim_namespace_id,
      IFNULL(dim_namespace.ultimate_parent_namespace_id, -1)  AS ultimate_parent_namespace_id,
      prep_ci_build.dim_plan_id,

      -- ci_build metrics
      prep_ci_build.started_at                                AS ci_build_started_at,
      prep_ci_build.finished_at                               AS ci_build_finished_at,
      DATEDIFF('seconds',
               prep_ci_build.started_at,
               prep_ci_build.finished_at)                     AS ci_build_duration_in_s,

      -- ci_runner metrics
      CASE
        WHEN dim_namespace.namespace_is_internal = TRUE
          THEN TRUE
        WHEN prep_ci_runner.runner_type = 1
          THEN TRUE
          ELSE FALSE
      END                                                     AS is_paid_by_gitlab,
      prep_ci_runner.public_projects_minutes_cost_factor,
      prep_ci_runner.private_projects_minutes_cost_factor

    FROM prep_ci_build
    LEFT JOIN prep_ci_runner 
      ON prep_ci_build.dim_ci_runner_id = prep_ci_runner.dim_ci_runner_id
    LEFT JOIN prep_ci_stage
      ON prep_ci_build.dim_ci_stage_id = prep_ci_stage.dim_ci_stage_id
    LEFT JOIN prep_ci_pipeline
      ON prep_ci_stage.dim_ci_pipeline_id = prep_ci_pipeline.dim_ci_pipeline_id
    LEFT JOIN prep_project
      ON prep_ci_build.dim_project_id = prep_project.dim_project_id
    LEFT JOIN dim_namespace
      ON prep_ci_build.dim_namespace_id = dim_namespace.dim_namespace_id
    LEFT JOIN prep_user
      ON prep_ci_build.dim_user_id = prep_user.dim_user_id
    LEFT JOIN dim_date
      ON prep_ci_build.created_date_id = dim_date.date_id

)

SELECT
      *,
      '@mpeychet_'::VARCHAR       AS created_by,
      '@ischweickartDD'::VARCHAR       AS updated_by,
      '2021-06-30'::DATE        AS model_created_date,
      '2021-07-14'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM joined30:T5bad,{{ config(
    materialized='table',
    tags=["mnpi_exception", "product"]
) }}

{{ simple_cte([
    ('dim_namespace','dim_namespace'),
    ('prep_gitlab_dotcom_plan', 'prep_gitlab_dotcom_plan'),
	('dim_user', 'dim_user'),
	('customers_db_leads', 'customers_db_leads'),
	('gitlab_dotcom_members', 'gitlab_dotcom_members'),
	('customers_db_trial_histories', 'customers_db_trial_histories'),
	('customers_db_charges_xf', 'customers_db_charges_xf'),
	('mart_event_namespace_daily', 'mart_event_namespace_daily'),
    ('gitlab_dotcom_memberships', 'gitlab_dotcom_memberships'),
	('mart_event_valid', 'mart_event_valid'),
	('fct_usage_storage', 'fct_usage_storage'),
    ('dim_marketing_contact_no_pii', 'dim_marketing_contact_no_pii'),
    ('dim_crm_person', 'dim_crm_person')
    ])
}},

namespaces AS ( --All currently existing namespaces within Gitlab.com. Filters out namespaces with blocked creators, and internal namespaces. Filtered to ultimate parent namespaces.

        SELECT DISTINCT
      dim_namespace.ultimate_parent_namespace_id, -- Keeping this id naming convention for clarity
      dim_namespace.created_at                                    AS namespace_created_at, --timestamp is useful for relative calculations - ex) file created win 1 minute of namespace creation
      dim_namespace.created_at::DATE                              AS namespace_created_date,
      dim_namespace.creator_id,
      dim_namespace.namespace_type, -- Not limiting to Group namespaces only to facilitate broader analyses if needed 
      dim_user.setup_for_company,
      dim_namespace.visibility_level,
      dim_namespace.gitlab_plan_id                                AS current_gitlab_plan_id,
      plan.plan_name_modified                                     AS current_gitlab_plan_title,
      dim_namespace.current_project_count,
      DATEDIFF(day, namespace_created_date, current_date)         AS days_since_namespace_creation,
      MIN(pql.created_at)::DATE                                   AS handraise_pql_date,
      MAX(IFF(TIMESTAMPDIFF(minute, members.invite_accepted_at, namespace_created_at) BETWEEN 0 AND 2, 1, 0))
                                                                  AS is_namespace_created_within_2min_of_creator_invite_acceptance --filterable field specific to growth conversion analysis
    FROM dim_namespace
    INNER JOIN prep_gitlab_dotcom_plan plan
      ON dim_namespace.gitlab_plan_id = plan.dim_plan_id
    LEFT JOIN customers_db_leads AS pql -- legacy schema
      ON pql.namespace_id = dim_namespace.dim_namespace_id
      AND pql.product_interaction = 'Hand Raise PQL' 
    LEFT JOIN dim_user 
      ON dim_user.dim_user_id = dim_namespace.creator_id
    LEFT JOIN gitlab_dotcom_members AS members -- legacy schema
      ON dim_namespace.creator_id = members.user_id
    WHERE namespace_is_internal = FALSE
      AND namespace_creator_is_blocked = FALSE
      AND namespace_is_ultimate_parent = TRUE
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11

), trials AS ( -- Current trial data does not specify what type of trial was started
    
    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      trials.start_date::DATE                                      AS trial_start_date, 
      DATEDIFF('days', namespace_created_date, trial_start_date)   AS days_since_namespace_creation_at_trial
    FROM namespaces
    INNER JOIN customers_db_trial_histories AS trials -- legacy schema
      ON namespaces.ultimate_parent_namespace_id = trials.gl_namespace_id

), charges AS ( --First paid subscription for ultimate namespace

    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      charges.subscription_start_date                              AS first_paid_subscription_start_date,
      DATEDIFF('days', namespace_created_date, charges.subscription_start_date)   
                                                                   AS days_since_namespace_creation_at_first_paid_subscription,
      SPLIT_PART(charges.product_category, ' - ', 2)               AS first_paid_plan_name, --product_category: SaaS - Premium, SaaS - Ultimate, etc
      charges.is_purchased_through_subscription_portal             AS first_paid_plan_purchased_through_subscription_portal
    FROM namespaces
    INNER JOIN customers_db_charges_xf AS charges -- legacy schema
      ON namespaces.ultimate_parent_namespace_id = charges.current_gitlab_namespace_id::INT
    WHERE charges.product_category != 'Storage' --exclude storage payments
      AND charges.product_category NOT LIKE 'Self-Managed%' --exclude SM plans
      AND charges.current_gitlab_namespace_id IS NOT NULL
      AND charges.mrr > 0
    QUALIFY ROW_NUMBER() OVER(PARTITION BY namespaces.ultimate_parent_namespace_id ORDER BY charges.subscription_start_date)  = 1

), activation_events AS ( --Event part of the activation definition occuring while namespace was free within 14 days of namespace creation
   
  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    MIN(events.event_date)                                           AS event_activation_date,
    MIN(events.days_since_namespace_creation_at_event_date)          AS days_since_namespace_creation_at_activation_event,
    ARRAY_TO_STRING(ARRAY_AGG(DISTINCT events.event_name) WITHIN GROUP(ORDER BY events.event_name ASC), ' , ')
                                                                     AS activation_event_array
  FROM namespaces
  INNER JOIN mart_event_namespace_daily AS events
    ON events.dim_ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE lower(events.event_name) IN ('merge_request_note_creation', 'todos', 'other_ci_build_creation', 'successful_ci_pipeline_creation', 'issue_note_creation', 'merge_request_creation', 'epic_notes') -- activation events  
    AND events.days_since_namespace_creation_at_event_date BETWEEN 0 AND 13
    AND events.plan_was_paid_at_event_date = FALSE --including activity prior to conversion
  GROUP BY 1
  
), second_billable_member AS ( -- 2nd part of the activation definition - 2nd billable member added within 14 days
-- using a window function to calculate the cumulative number of new members added to a namespace within 14 days so that I can identify the # days it took for a namespace to add a 2nd user

  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    DATEDIFF(day, namespace_created_date, dim_user.created_at::DATE)   AS days_since_namespace_creation_at_2nd_user_add, --2nd user add date
    COUNT(DISTINCT dim_user.dim_user_id)                               AS count_billable_members, -- # of users added on the date of the 2nd add - could be 1 or 2 - field is not in final output
    SUM(count_billable_members) OVER (PARTITION BY namespaces.ultimate_parent_namespace_id ORDER BY days_since_namespace_creation_at_2nd_user_add)
                                                                       AS total_users_added   -- always 2 - field is not in final output    
  FROM namespaces
  INNER JOIN gitlab_dotcom_memberships AS mships -- legacy shema
    ON namespaces.ultimate_parent_namespace_id = mships.ultimate_parent_id
  INNER JOIN dim_user -- including all users with a membership to the ultimate parent regardless of creator status
    ON dim_user.dim_user_id = mships.user_id
    AND dim_user.is_blocked_user = FALSE
    AND mships.is_billable = TRUE -- Optional based on use case - excluding guests, bots, other use cases that would not be counted towards a subscription if one were to exist
  LEFT JOIN charges -- joining charges info to exclude users joining namespaces with a subscription before they were created 
    ON namespaces.ultimate_parent_namespace_id = charges.ultimate_parent_namespace_id
  WHERE IFNULL(charges.first_paid_subscription_start_date,CURRENT_DATE) >= dim_user.created_at::DATE -- excluding users joining namespaces with a subscription before they were created 
    AND namespace_created_date <= dim_user.created_at::DATE -- excluding users created prior to namespace creation 
    AND days_since_namespace_creation_at_2nd_user_add <= 13
  GROUP BY 1,2 --grouping by namespace and days since namespace creation when a user was added
    QUALIFY total_users_added = 2

), d60_retention AS ( --return event between 60 - 90 days
       
   SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id
  FROM namespaces
  INNER JOIN mart_event_namespace_daily AS events
    ON events.dim_ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE days_since_namespace_creation_at_event_date BETWEEN 59 AND 89
       
), first_last_activity AS ( --min and max event dates
       
   SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
	MIN(event_date)                                                    AS min_event_date,
	MAX(event_date)                                                    AS max_event_date
  FROM namespaces
  INNER JOIN mart_event_namespace_daily AS events
    ON events.dim_ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE days_since_namespace_creation_at_event_date >= 0 
  GROUP BY 1
       
), valuable_signup AS ( --counting namespaces with billable members who initially sign up with a business email domain and are created prior to any paid subscription

  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    MAX(IFF(dim_user.dim_user_id = namespaces.creator_id, 1, 0))        AS creator_is_valuable_signup_numeric,
    IFF(creator_is_valuable_signup_numeric = 1, TRUE, FALSE)            AS creator_is_valuable_signup
  FROM namespaces
  INNER JOIN gitlab_dotcom_memberships AS mships
    ON namespaces.ultimate_parent_namespace_id = mships.ultimate_parent_id
  INNER JOIN dim_user -- including all users with a membership to the ultimate parent regardless of creator status
    ON dim_user.dim_user_id = mships.user_id
    AND dim_user.is_blocked_user = FALSE
    AND mships.is_billable = TRUE -- Optional based on use case - excluding guests, bots, other use cases that would not be counted towards a subscription if one were to exist
  LEFT JOIN charges -- joining charges info to exclude users joining namespaces with a subscription before they were created 
    ON namespaces.ultimate_parent_namespace_id = charges.ultimate_parent_namespace_id
  WHERE IFNULL(charges.first_paid_subscription_start_date,CURRENT_DATE) >= dim_user.created_at::DATE -- excluding users joining namespaces with a subscription before they were created 
    AND dim_user.email_domain_classification IS NULL -- indicates a business email domain
  GROUP BY 1
    
), stage_adoption AS (

    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      stage_name,
      MIN(days_since_namespace_creation_at_event_date)                   AS days_since_namespace_creation_at_first_event_date,
      MAX(days_since_namespace_creation_at_event_date)                   AS days_since_namespace_creation_at_latest_event_date,
      -- COUNT(DISTINCT days_since_namespace_creation_at_event_date)        AS stage_usage_days, 
      -- COUNT(DISTINCT dim_user_id)                                        AS stage_users, --I don't think it makes sense to include these fields in a wide model like this, but open to suggestions
      ROW_NUMBER() OVER (PARTITION BY namespaces.ultimate_parent_namespace_id ORDER BY MIN(events.event_created_at) ASC) 
                                                                         AS stage_order_adopted,-- Sequential order that this stage was adopted initially at the ultimate namespace level
      CONCAT(stage_order_adopted, ' ', stage_name)                       AS stage_name_order -- This will allow me to create an ordered array 
    FROM namespaces
    INNER JOIN mart_event_valid AS events -- Using this model to remove events triggered in Learn Gitlab projects (Growth use case)
      ON namespaces.ultimate_parent_namespace_id = events.dim_ultimate_parent_namespace_id
    WHERE is_smau = TRUE
      AND events.project_is_learn_gitlab != TRUE -- Filters out events caused by default Learn GitLab project creation.
      AND days_since_namespace_creation_at_event_date >= 0 -- Excluding events that occur before namespace creation
    GROUP BY 1,2

), stage_aggregation AS (

  SELECT DISTINCT 
    ultimate_parent_namespace_id,
    MIN(IFF(stage_adoption.stage_name = 'plan', days_since_namespace_creation_at_first_event_date, null))                      
                                                                         AS days_since_namespace_creation_at_first_plan_event_date,
    MIN(IFF(stage_adoption.stage_name = 'secure', days_since_namespace_creation_at_first_event_date, null))   
                                                                         AS days_since_namespace_creation_at_first_secure_event_date,
    MIN(IFF(stage_adoption.stage_name = 'create', days_since_namespace_creation_at_first_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_first_create_event_date,
    MIN(IFF(stage_adoption.stage_name = 'verify', days_since_namespace_creation_at_first_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_first_verify_event_date,
    MIN(IFF(stage_adoption.stage_name = 'release', days_since_namespace_creation_at_first_event_date, null))  
                                                                         AS days_since_namespace_creation_at_first_release_event_date,
    MAX(IFF(stage_adoption.stage_name = 'plan', days_since_namespace_creation_at_latest_event_date, null))      
                                                                         AS days_since_namespace_creation_at_latest_plan_event_date,
    MAX(IFF(stage_adoption.stage_name = 'secure', days_since_namespace_creation_at_latest_event_date, null))   
                                                                         AS days_since_namespace_creation_at_latest_secure_event_date,
    MAX(IFF(stage_adoption.stage_name = 'create', days_since_namespace_creation_at_latest_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_latest_create_event_date,
    MAX(IFF(stage_adoption.stage_name = 'verify', days_since_namespace_creation_at_latest_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_latest_verify_event_date,
    MAX(IFF(stage_adoption.stage_name = 'release', days_since_namespace_creation_at_latest_event_date, null))  
                                                                         AS days_since_namespace_creation_at_latest_release_event_date,
    ARRAY_TO_STRING(ARRAY_AGG(DISTINCT stage_name_order) WITHIN GROUP(ORDER BY stage_name_order ASC), ' , ')  
                                                                         AS stage_adoption_order,
    COUNT(DISTINCT stage_name)                                           AS total_stages_adopted --total stages adopted
  FROM stage_adoption
  GROUP BY 1

), creator_attributes AS ( --ultimate namespace creator attributes

  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    dim_marketing_contact_no_pii.sfdc_record_id,
    role                                                                  AS namespace_creator_role,
    jobs_to_be_done                                                       AS namespace_creator_jtbd,
    is_first_order_person
  FROM namespaces
  INNER JOIN dim_user -- including all users with a membership to the ultimate parent regardless of creator status
    ON namespaces.creator_id = dim_user.dim_user_id
  LEFT JOIN dim_marketing_contact_no_pii -- Join on PQL information from PQL information 
    ON namespaces.creator_id = dim_marketing_contact_no_pii.gitlab_dotcom_user_id 
  LEFT JOIN dim_crm_person -- Get is_first_order_person 
    ON dim_marketing_contact_no_pii.sfdc_record_id = dim_crm_person.sfdc_record_id


), billable_members AS ( --billable members calculated to match user limit calculations
    
  SELECT DISTINCT  
    namespaces.ultimate_parent_namespace_id, -- ultimate parent namespace
    COUNT(DISTINCT mships.user_id)                                         AS billable_member_count
  FROM namespaces
  INNER JOIN gitlab_dotcom_memberships AS mships  
    ON mships.ultimate_parent_id = namespaces.ultimate_parent_namespace_id 
  WHERE mships.is_billable = TRUE                                                           
  GROUP BY 1
            
), storage AS ( --current month storage snapshot
    
  SELECT DISTINCT 
    namespaces.ultimate_parent_namespace_id,
    storage_gib 
  FROM namespaces
  INNER JOIN fct_usage_storage AS storage 
    ON storage.ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE snapshot_month = DATE_TRUNC('month', GETDATE())::DATE --current month storage snapshot

), base AS (

    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      namespaces.namespace_created_at, 
      namespaces.namespace_created_date,
	  DATE_TRUNC('month', namespaces.namespace_created_date)            AS namespace_created_month,
      DATE_TRUNC('week', namespaces.namespace_created_date)             AS namespace_created_week,
      namespaces.creator_id,
      creator_attributes.sfdc_record_id, -- Joined from dim_crm_person through dim_marketing_contact
      namespaces.namespace_type, -- Not limited to Group namespaces to facilitate broader analyses if needed 
      namespaces.setup_for_company, -- User preferences field
      namespaces.visibility_level,
      namespaces.current_gitlab_plan_id,
      namespaces.current_gitlab_plan_title,
      namespaces.current_project_count,
      namespaces.days_since_namespace_creation,
      namespaces.handraise_pql_date,
      IFF(namespaces.is_namespace_created_within_2min_of_creator_invite_acceptance = 1, TRUE, FALSE) 
                                                                  AS is_namespace_created_within_2min_of_creator_invite_acceptance, --consistent TRUE/FALSE formatting to match the rest of the resulting boolean values
      trials.trial_start_date,
      trials.days_since_namespace_creation_at_trial,
      charges.first_paid_subscription_start_date,
      charges.days_since_namespace_creation_at_first_paid_subscription,
      charges.first_paid_plan_name,
      COALESCE(charges.first_paid_plan_purchased_through_subscription_portal, FALSE)
                                                                           AS is_first_paid_plan_purchased_through_subscription_portal,
      activation_events.days_since_namespace_creation_at_activation_event,
      activation_events.activation_event_array,
      CASE WHEN DATEDIFF(days, namespace_created_date, current_date()) < 59 THEN NULL -- If namespace is not at day 59 yet, then null
           WHEN d60_retention.ultimate_parent_namespace_id IS NOT NULL THEN TRUE
           ELSE FALSE                                         END          AS acitivity_between_d60_d90,
      COALESCE(valuable_signup.creator_is_valuable_signup, FALSE)          AS creator_is_valuable_signup, 
      IFF(valuable_signup.ultimate_parent_namespace_id IS NOT NULL, TRUE, FALSE)  
                                                                           AS namespace_contains_valuable_signup,
      second_billable_member.days_since_namespace_creation_at_2nd_user_add,
      IFF(second_billable_member.ultimate_parent_namespace_id IS NOT NULL OR activation_events.ultimate_parent_namespace_id IS NOT NULL, TRUE, FALSE)
                                                                           AS has_team_activation,
      creator_attributes.namespace_creator_role,
      creator_attributes.namespace_creator_jtbd,
      creator_attributes.is_first_order_person AS namespace_creator_is_first_order_person, -- SFDC is_first_order from the lead / contact record
      days_since_namespace_creation_at_first_plan_event_date,
      days_since_namespace_creation_at_first_secure_event_date,
      days_since_namespace_creation_at_first_create_event_date,
      days_since_namespace_creation_at_first_verify_event_date,
      days_since_namespace_creation_at_first_release_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_plan_event_date
                                                                            AS days_since_latest_plan_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_secure_event_date
                                                                            AS days_since_latest_secure_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_create_event_date
                                                                            AS days_since_latest_create_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_verify_event_date
                                                                            AS days_since_latest_verify_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_release_event_date
                                                                            AS days_since_latest_release_event_date,
      stage_adoption_order,
      COALESCE(total_stages_adopted, 0)                                     AS total_stages_adopted, --stages per ultimate namespace up to current
      billable_members.billable_member_count                                AS current_billable_member_count,
      storage.storage_gib                                                   AS current_month_storage_gib,
	    first_last_activity.min_event_date                                    AS first_activity_date,
      first_last_activity.max_event_date                                    AS latest_activity_date
    FROM namespaces 
    LEFT JOIN trials
      ON namespaces.ultimate_parent_namespace_id = trials.ultimate_parent_namespace_id
    LEFT JOIN charges
      ON namespaces.ultimate_parent_namespace_id = charges.ultimate_parent_namespace_id
    LEFT JOIN activation_events
      ON namespaces.ultimate_parent_namespace_id = activation_events.ultimate_parent_namespace_id
    LEFT JOIN d60_retention
      ON namespaces.ultimate_parent_namespace_id = d60_retention.ultimate_parent_namespace_id
    LEFT JOIN valuable_signup
      ON namespaces.ultimate_parent_namespace_id = valuable_signup.ultimate_parent_namespace_id
    LEFT JOIN second_billable_member
      ON namespaces.ultimate_parent_namespace_id = second_billable_member.ultimate_parent_namespace_id
    LEFT JOIN creator_attributes
      ON namespaces.ultimate_parent_namespace_id = creator_attributes.ultimate_parent_namespace_id
    LEFT JOIN stage_aggregation
      ON namespaces.ultimate_parent_namespace_id = stage_aggregation.ultimate_parent_namespace_id
    LEFT JOIN billable_members
      ON namespaces.ultimate_parent_namespace_id = billable_members.ultimate_parent_namespace_id
    LEFT JOIN storage
      ON namespaces.ultimate_parent_namespace_id = storage.ultimate_parent_namespace_id
	LEFT JOIN first_last_activity
      ON namespaces.ultimate_parent_namespace_id = first_last_activity.ultimate_parent_namespace_id    

)


{{ dbt_audit(
    cte_ref="base",
    created_by="@eneuberger",
    updated_by="@degan",
    created_date="2023-02-14",
    updated_date="2023-05-24"
) }}31:T5e4a,



WITH dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), prep_gitlab_dotcom_plan AS (

    SELECT * 
    FROM "PROD".common_prep.prep_gitlab_dotcom_plan

), dim_user AS (

    SELECT * 
    FROM "PROD".common.dim_user

), customers_db_leads AS (

    SELECT * 
    FROM "PROD".restricted_safe_legacy.customers_db_leads

), gitlab_dotcom_members AS (

    SELECT * 
    FROM "PROD".legacy.gitlab_dotcom_members

), customers_db_trial_histories AS (

    SELECT * 
    FROM "PROD".legacy.customers_db_trial_histories

), customers_db_charges_xf AS (

    SELECT * 
    FROM "PROD".restricted_safe_legacy.customers_db_charges_xf

), mart_event_namespace_daily AS (

    SELECT * 
    FROM "PROD".common_mart.mart_event_namespace_daily

), gitlab_dotcom_memberships AS (

    SELECT * 
    FROM "PROD".legacy.gitlab_dotcom_memberships

), mart_event_valid AS (

    SELECT * 
    FROM "PROD".common_mart.mart_event_valid

), fct_usage_storage AS (

    SELECT * 
    FROM "PROD".common.fct_usage_storage

), dim_marketing_contact_no_pii AS (

    SELECT * 
    FROM "PROD".common.dim_marketing_contact_no_pii

), dim_crm_person AS (

    SELECT * 
    FROM "PROD".common.dim_crm_person

),

namespaces AS ( --All currently existing namespaces within Gitlab.com. Filters out namespaces with blocked creators, and internal namespaces. Filtered to ultimate parent namespaces.

        SELECT DISTINCT
      dim_namespace.ultimate_parent_namespace_id, -- Keeping this id naming convention for clarity
      dim_namespace.created_at                                    AS namespace_created_at, --timestamp is useful for relative calculations - ex) file created win 1 minute of namespace creation
      dim_namespace.created_at::DATE                              AS namespace_created_date,
      dim_namespace.creator_id,
      dim_namespace.namespace_type, -- Not limiting to Group namespaces only to facilitate broader analyses if needed 
      dim_user.setup_for_company,
      dim_namespace.visibility_level,
      dim_namespace.gitlab_plan_id                                AS current_gitlab_plan_id,
      plan.plan_name_modified                                     AS current_gitlab_plan_title,
      dim_namespace.current_project_count,
      DATEDIFF(day, namespace_created_date, current_date)         AS days_since_namespace_creation,
      MIN(pql.created_at)::DATE                                   AS handraise_pql_date,
      MAX(IFF(TIMESTAMPDIFF(minute, members.invite_accepted_at, namespace_created_at) BETWEEN 0 AND 2, 1, 0))
                                                                  AS is_namespace_created_within_2min_of_creator_invite_acceptance --filterable field specific to growth conversion analysis
    FROM dim_namespace
    INNER JOIN prep_gitlab_dotcom_plan plan
      ON dim_namespace.gitlab_plan_id = plan.dim_plan_id
    LEFT JOIN customers_db_leads AS pql -- legacy schema
      ON pql.namespace_id = dim_namespace.dim_namespace_id
      AND pql.product_interaction = 'Hand Raise PQL' 
    LEFT JOIN dim_user 
      ON dim_user.dim_user_id = dim_namespace.creator_id
    LEFT JOIN gitlab_dotcom_members AS members -- legacy schema
      ON dim_namespace.creator_id = members.user_id
    WHERE namespace_is_internal = FALSE
      AND namespace_creator_is_blocked = FALSE
      AND namespace_is_ultimate_parent = TRUE
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11

), trials AS ( -- Current trial data does not specify what type of trial was started
    
    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      trials.start_date::DATE                                      AS trial_start_date, 
      DATEDIFF('days', namespace_created_date, trial_start_date)   AS days_since_namespace_creation_at_trial
    FROM namespaces
    INNER JOIN customers_db_trial_histories AS trials -- legacy schema
      ON namespaces.ultimate_parent_namespace_id = trials.gl_namespace_id

), charges AS ( --First paid subscription for ultimate namespace

    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      charges.subscription_start_date                              AS first_paid_subscription_start_date,
      DATEDIFF('days', namespace_created_date, charges.subscription_start_date)   
                                                                   AS days_since_namespace_creation_at_first_paid_subscription,
      SPLIT_PART(charges.product_category, ' - ', 2)               AS first_paid_plan_name, --product_category: SaaS - Premium, SaaS - Ultimate, etc
      charges.is_purchased_through_subscription_portal             AS first_paid_plan_purchased_through_subscription_portal
    FROM namespaces
    INNER JOIN customers_db_charges_xf AS charges -- legacy schema
      ON namespaces.ultimate_parent_namespace_id = charges.current_gitlab_namespace_id::INT
    WHERE charges.product_category != 'Storage' --exclude storage payments
      AND charges.product_category NOT LIKE 'Self-Managed%' --exclude SM plans
      AND charges.current_gitlab_namespace_id IS NOT NULL
      AND charges.mrr > 0
    QUALIFY ROW_NUMBER() OVER(PARTITION BY namespaces.ultimate_parent_namespace_id ORDER BY charges.subscription_start_date)  = 1

), activation_events AS ( --Event part of the activation definition occuring while namespace was free within 14 days of namespace creation
   
  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    MIN(events.event_date)                                           AS event_activation_date,
    MIN(events.days_since_namespace_creation_at_event_date)          AS days_since_namespace_creation_at_activation_event,
    ARRAY_TO_STRING(ARRAY_AGG(DISTINCT events.event_name) WITHIN GROUP(ORDER BY events.event_name ASC), ' , ')
                                                                     AS activation_event_array
  FROM namespaces
  INNER JOIN mart_event_namespace_daily AS events
    ON events.dim_ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE lower(events.event_name) IN ('merge_request_note_creation', 'todos', 'other_ci_build_creation', 'successful_ci_pipeline_creation', 'issue_note_creation', 'merge_request_creation', 'epic_notes') -- activation events  
    AND events.days_since_namespace_creation_at_event_date BETWEEN 0 AND 13
    AND events.plan_was_paid_at_event_date = FALSE --including activity prior to conversion
  GROUP BY 1
  
), second_billable_member AS ( -- 2nd part of the activation definition - 2nd billable member added within 14 days
-- using a window function to calculate the cumulative number of new members added to a namespace within 14 days so that I can identify the # days it took for a namespace to add a 2nd user

  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    DATEDIFF(day, namespace_created_date, dim_user.created_at::DATE)   AS days_since_namespace_creation_at_2nd_user_add, --2nd user add date
    COUNT(DISTINCT dim_user.dim_user_id)                               AS count_billable_members, -- # of users added on the date of the 2nd add - could be 1 or 2 - field is not in final output
    SUM(count_billable_members) OVER (PARTITION BY namespaces.ultimate_parent_namespace_id ORDER BY days_since_namespace_creation_at_2nd_user_add)
                                                                       AS total_users_added   -- always 2 - field is not in final output    
  FROM namespaces
  INNER JOIN gitlab_dotcom_memberships AS mships -- legacy shema
    ON namespaces.ultimate_parent_namespace_id = mships.ultimate_parent_id
  INNER JOIN dim_user -- including all users with a membership to the ultimate parent regardless of creator status
    ON dim_user.dim_user_id = mships.user_id
    AND dim_user.is_blocked_user = FALSE
    AND mships.is_billable = TRUE -- Optional based on use case - excluding guests, bots, other use cases that would not be counted towards a subscription if one were to exist
  LEFT JOIN charges -- joining charges info to exclude users joining namespaces with a subscription before they were created 
    ON namespaces.ultimate_parent_namespace_id = charges.ultimate_parent_namespace_id
  WHERE IFNULL(charges.first_paid_subscription_start_date,CURRENT_DATE) >= dim_user.created_at::DATE -- excluding users joining namespaces with a subscription before they were created 
    AND namespace_created_date <= dim_user.created_at::DATE -- excluding users created prior to namespace creation 
    AND days_since_namespace_creation_at_2nd_user_add <= 13
  GROUP BY 1,2 --grouping by namespace and days since namespace creation when a user was added
    QUALIFY total_users_added = 2

), d60_retention AS ( --return event between 60 - 90 days
       
   SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id
  FROM namespaces
  INNER JOIN mart_event_namespace_daily AS events
    ON events.dim_ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE days_since_namespace_creation_at_event_date BETWEEN 59 AND 89
       
), first_last_activity AS ( --min and max event dates
       
   SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
	MIN(event_date)                                                    AS min_event_date,
	MAX(event_date)                                                    AS max_event_date
  FROM namespaces
  INNER JOIN mart_event_namespace_daily AS events
    ON events.dim_ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE days_since_namespace_creation_at_event_date >= 0 
  GROUP BY 1
       
), valuable_signup AS ( --counting namespaces with billable members who initially sign up with a business email domain and are created prior to any paid subscription

  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    MAX(IFF(dim_user.dim_user_id = namespaces.creator_id, 1, 0))        AS creator_is_valuable_signup_numeric,
    IFF(creator_is_valuable_signup_numeric = 1, TRUE, FALSE)            AS creator_is_valuable_signup
  FROM namespaces
  INNER JOIN gitlab_dotcom_memberships AS mships
    ON namespaces.ultimate_parent_namespace_id = mships.ultimate_parent_id
  INNER JOIN dim_user -- including all users with a membership to the ultimate parent regardless of creator status
    ON dim_user.dim_user_id = mships.user_id
    AND dim_user.is_blocked_user = FALSE
    AND mships.is_billable = TRUE -- Optional based on use case - excluding guests, bots, other use cases that would not be counted towards a subscription if one were to exist
  LEFT JOIN charges -- joining charges info to exclude users joining namespaces with a subscription before they were created 
    ON namespaces.ultimate_parent_namespace_id = charges.ultimate_parent_namespace_id
  WHERE IFNULL(charges.first_paid_subscription_start_date,CURRENT_DATE) >= dim_user.created_at::DATE -- excluding users joining namespaces with a subscription before they were created 
    AND dim_user.email_domain_classification IS NULL -- indicates a business email domain
  GROUP BY 1
    
), stage_adoption AS (

    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      stage_name,
      MIN(days_since_namespace_creation_at_event_date)                   AS days_since_namespace_creation_at_first_event_date,
      MAX(days_since_namespace_creation_at_event_date)                   AS days_since_namespace_creation_at_latest_event_date,
      -- COUNT(DISTINCT days_since_namespace_creation_at_event_date)        AS stage_usage_days, 
      -- COUNT(DISTINCT dim_user_id)                                        AS stage_users, --I don't think it makes sense to include these fields in a wide model like this, but open to suggestions
      ROW_NUMBER() OVER (PARTITION BY namespaces.ultimate_parent_namespace_id ORDER BY MIN(events.event_created_at) ASC) 
                                                                         AS stage_order_adopted,-- Sequential order that this stage was adopted initially at the ultimate namespace level
      CONCAT(stage_order_adopted, ' ', stage_name)                       AS stage_name_order -- This will allow me to create an ordered array 
    FROM namespaces
    INNER JOIN mart_event_valid AS events -- Using this model to remove events triggered in Learn Gitlab projects (Growth use case)
      ON namespaces.ultimate_parent_namespace_id = events.dim_ultimate_parent_namespace_id
    WHERE is_smau = TRUE
      AND events.project_is_learn_gitlab != TRUE -- Filters out events caused by default Learn GitLab project creation.
      AND days_since_namespace_creation_at_event_date >= 0 -- Excluding events that occur before namespace creation
    GROUP BY 1,2

), stage_aggregation AS (

  SELECT DISTINCT 
    ultimate_parent_namespace_id,
    MIN(IFF(stage_adoption.stage_name = 'plan', days_since_namespace_creation_at_first_event_date, null))                      
                                                                         AS days_since_namespace_creation_at_first_plan_event_date,
    MIN(IFF(stage_adoption.stage_name = 'secure', days_since_namespace_creation_at_first_event_date, null))   
                                                                         AS days_since_namespace_creation_at_first_secure_event_date,
    MIN(IFF(stage_adoption.stage_name = 'create', days_since_namespace_creation_at_first_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_first_create_event_date,
    MIN(IFF(stage_adoption.stage_name = 'verify', days_since_namespace_creation_at_first_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_first_verify_event_date,
    MIN(IFF(stage_adoption.stage_name = 'release', days_since_namespace_creation_at_first_event_date, null))  
                                                                         AS days_since_namespace_creation_at_first_release_event_date,
    MAX(IFF(stage_adoption.stage_name = 'plan', days_since_namespace_creation_at_latest_event_date, null))      
                                                                         AS days_since_namespace_creation_at_latest_plan_event_date,
    MAX(IFF(stage_adoption.stage_name = 'secure', days_since_namespace_creation_at_latest_event_date, null))   
                                                                         AS days_since_namespace_creation_at_latest_secure_event_date,
    MAX(IFF(stage_adoption.stage_name = 'create', days_since_namespace_creation_at_latest_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_latest_create_event_date,
    MAX(IFF(stage_adoption.stage_name = 'verify', days_since_namespace_creation_at_latest_event_date, null)) 
                                                                         AS days_since_namespace_creation_at_latest_verify_event_date,
    MAX(IFF(stage_adoption.stage_name = 'release', days_since_namespace_creation_at_latest_event_date, null))  
                                                                         AS days_since_namespace_creation_at_latest_release_event_date,
    ARRAY_TO_STRING(ARRAY_AGG(DISTINCT stage_name_order) WITHIN GROUP(ORDER BY stage_name_order ASC), ' , ')  
                                                                         AS stage_adoption_order,
    COUNT(DISTINCT stage_name)                                           AS total_stages_adopted --total stages adopted
  FROM stage_adoption
  GROUP BY 1

), creator_attributes AS ( --ultimate namespace creator attributes

  SELECT DISTINCT
    namespaces.ultimate_parent_namespace_id,
    dim_marketing_contact_no_pii.sfdc_record_id,
    role                                                                  AS namespace_creator_role,
    jobs_to_be_done                                                       AS namespace_creator_jtbd,
    is_first_order_person
  FROM namespaces
  INNER JOIN dim_user -- including all users with a membership to the ultimate parent regardless of creator status
    ON namespaces.creator_id = dim_user.dim_user_id
  LEFT JOIN dim_marketing_contact_no_pii -- Join on PQL information from PQL information 
    ON namespaces.creator_id = dim_marketing_contact_no_pii.gitlab_dotcom_user_id 
  LEFT JOIN dim_crm_person -- Get is_first_order_person 
    ON dim_marketing_contact_no_pii.sfdc_record_id = dim_crm_person.sfdc_record_id


), billable_members AS ( --billable members calculated to match user limit calculations
    
  SELECT DISTINCT  
    namespaces.ultimate_parent_namespace_id, -- ultimate parent namespace
    COUNT(DISTINCT mships.user_id)                                         AS billable_member_count
  FROM namespaces
  INNER JOIN gitlab_dotcom_memberships AS mships  
    ON mships.ultimate_parent_id = namespaces.ultimate_parent_namespace_id 
  WHERE mships.is_billable = TRUE                                                           
  GROUP BY 1
            
), storage AS ( --current month storage snapshot
    
  SELECT DISTINCT 
    namespaces.ultimate_parent_namespace_id,
    storage_gib 
  FROM namespaces
  INNER JOIN fct_usage_storage AS storage 
    ON storage.ultimate_parent_namespace_id = namespaces.ultimate_parent_namespace_id
  WHERE snapshot_month = DATE_TRUNC('month', GETDATE())::DATE --current month storage snapshot

), base AS (

    SELECT DISTINCT
      namespaces.ultimate_parent_namespace_id,
      namespaces.namespace_created_at, 
      namespaces.namespace_created_date,
	  DATE_TRUNC('month', namespaces.namespace_created_date)            AS namespace_created_month,
      DATE_TRUNC('week', namespaces.namespace_created_date)             AS namespace_created_week,
      namespaces.creator_id,
      creator_attributes.sfdc_record_id, -- Joined from dim_crm_person through dim_marketing_contact
      namespaces.namespace_type, -- Not limited to Group namespaces to facilitate broader analyses if needed 
      namespaces.setup_for_company, -- User preferences field
      namespaces.visibility_level,
      namespaces.current_gitlab_plan_id,
      namespaces.current_gitlab_plan_title,
      namespaces.current_project_count,
      namespaces.days_since_namespace_creation,
      namespaces.handraise_pql_date,
      IFF(namespaces.is_namespace_created_within_2min_of_creator_invite_acceptance = 1, TRUE, FALSE) 
                                                                  AS is_namespace_created_within_2min_of_creator_invite_acceptance, --consistent TRUE/FALSE formatting to match the rest of the resulting boolean values
      trials.trial_start_date,
      trials.days_since_namespace_creation_at_trial,
      charges.first_paid_subscription_start_date,
      charges.days_since_namespace_creation_at_first_paid_subscription,
      charges.first_paid_plan_name,
      COALESCE(charges.first_paid_plan_purchased_through_subscription_portal, FALSE)
                                                                           AS is_first_paid_plan_purchased_through_subscription_portal,
      activation_events.days_since_namespace_creation_at_activation_event,
      activation_events.activation_event_array,
      CASE WHEN DATEDIFF(days, namespace_created_date, current_date()) < 59 THEN NULL -- If namespace is not at day 59 yet, then null
           WHEN d60_retention.ultimate_parent_namespace_id IS NOT NULL THEN TRUE
           ELSE FALSE                                         END          AS acitivity_between_d60_d90,
      COALESCE(valuable_signup.creator_is_valuable_signup, FALSE)          AS creator_is_valuable_signup, 
      IFF(valuable_signup.ultimate_parent_namespace_id IS NOT NULL, TRUE, FALSE)  
                                                                           AS namespace_contains_valuable_signup,
      second_billable_member.days_since_namespace_creation_at_2nd_user_add,
      IFF(second_billable_member.ultimate_parent_namespace_id IS NOT NULL OR activation_events.ultimate_parent_namespace_id IS NOT NULL, TRUE, FALSE)
                                                                           AS has_team_activation,
      creator_attributes.namespace_creator_role,
      creator_attributes.namespace_creator_jtbd,
      creator_attributes.is_first_order_person AS namespace_creator_is_first_order_person, -- SFDC is_first_order from the lead / contact record
      days_since_namespace_creation_at_first_plan_event_date,
      days_since_namespace_creation_at_first_secure_event_date,
      days_since_namespace_creation_at_first_create_event_date,
      days_since_namespace_creation_at_first_verify_event_date,
      days_since_namespace_creation_at_first_release_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_plan_event_date
                                                                            AS days_since_latest_plan_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_secure_event_date
                                                                            AS days_since_latest_secure_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_create_event_date
                                                                            AS days_since_latest_create_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_verify_event_date
                                                                            AS days_since_latest_verify_event_date,
      days_since_namespace_creation - days_since_namespace_creation_at_latest_release_event_date
                                                                            AS days_since_latest_release_event_date,
      stage_adoption_order,
      COALESCE(total_stages_adopted, 0)                                     AS total_stages_adopted, --stages per ultimate namespace up to current
      billable_members.billable_member_count                                AS current_billable_member_count,
      storage.storage_gib                                                   AS current_month_storage_gib,
	    first_last_activity.min_event_date                                    AS first_activity_date,
      first_last_activity.max_event_date                                    AS latest_activity_date
    FROM namespaces 
    LEFT JOIN trials
      ON namespaces.ultimate_parent_namespace_id = trials.ultimate_parent_namespace_id
    LEFT JOIN charges
      ON namespaces.ultimate_parent_namespace_id = charges.ultimate_parent_namespace_id
    LEFT JOIN activation_events
      ON namespaces.ultimate_parent_namespace_id = activation_events.ultimate_parent_namespace_id
    LEFT JOIN d60_retention
      ON namespaces.ultimate_parent_namespace_id = d60_retention.ultimate_parent_namespace_id
    LEFT JOIN valuable_signup
      ON namespaces.ultimate_parent_namespace_id = valuable_signup.ultimate_parent_namespace_id
    LEFT JOIN second_billable_member
      ON namespaces.ultimate_parent_namespace_id = second_billable_member.ultimate_parent_namespace_id
    LEFT JOIN creator_attributes
      ON namespaces.ultimate_parent_namespace_id = creator_attributes.ultimate_parent_namespace_id
    LEFT JOIN stage_aggregation
      ON namespaces.ultimate_parent_namespace_id = stage_aggregation.ultimate_parent_namespace_id
    LEFT JOIN billable_members
      ON namespaces.ultimate_parent_namespace_id = billable_members.ultimate_parent_namespace_id
    LEFT JOIN storage
      ON namespaces.ultimate_parent_namespace_id = storage.ultimate_parent_namespace_id
	LEFT JOIN first_last_activity
      ON namespaces.ultimate_parent_namespace_id = first_last_activity.ultimate_parent_namespace_id    

)


SELECT
      *,
      '@eneuberger'::VARCHAR       AS created_by,
      '@degan'::VARCHAR       AS updated_by,
      '2023-02-14'::DATE        AS model_created_date,
      '2023-05-24'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM base32:T740,{{ config(
    materialized='table',
    tags=["mnpi_exception", "product"]
) }}

{{ simple_cte([
    ('dim_namespace', 'dim_namespace'),
    ('fct_event_valid', 'fct_event_valid'),
    ('dim_user', 'dim_user'),
    ('dim_project', 'dim_project'),
    ('dim_date', 'dim_date')
    ])
}},

--limit mart to rolling 24 months for performance reasons

fact AS (

  SELECT
    {{ dbt_utils.star(from=ref('fct_event_valid'), except=["CREATED_BY",
        "UPDATED_BY","CREATED_DATE","UPDATED_DATE","MODEL_CREATED_DATE","MODEL_UPDATED_DATE","DBT_UPDATED_AT","DBT_CREATED_AT"]) }}
  FROM fct_event_valid
  WHERE event_date >= DATEADD('month', -24, DATE_TRUNC('month',CURRENT_DATE))
  
), 

fact_with_dims AS (

  SELECT
    fact.*,
    dim_namespace.namespace_type AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,
    dim_user.created_at AS user_created_at,
    COALESCE(dim_project.is_learn_gitlab, FALSE) AS project_is_learn_gitlab,
    COALESCE(dim_project.is_imported, FALSE) AS project_is_imported,
    dim_date.first_day_of_month AS event_calendar_month,
    dim_date.quarter_name AS event_calendar_quarter,
    dim_date.year_actual AS event_calendar_year
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_user
    ON fact.dim_user_sk = dim_user.dim_user_sk
  LEFT JOIN dim_project
    ON fact.dim_project_id = dim_project.dim_project_id
  LEFT JOIN dim_date
    ON fact.dim_event_date_id = dim_date.date_id    

)

{{ dbt_audit(
    cte_ref="fact_with_dims",
    created_by="@iweeks",
    updated_by="@cbraza",
    created_date="2022-05-05",
    updated_date="2023-03-01"
) }}33:T9f4,**Description:** Enriched GitLab.com usage event data for valid events. This is an enhanced version of `fct_event_valid`, filtered to the last 24 months
- [Targets and Actions](https://docs.gitlab.com/ee/api/events.html) activity by Users and [Namespaces](https://about.gitlab.com/handbook/business-technology/data-team/data-catalog/namespace/) within the GitLab.com application are captured and refreshed periodically throughout the day.  Targets are objects ie. issue, milestone, merge_request and Actions have effect on Targets, ie. approved, closed, commented, created, etc.
- This data is enriched with additional user, namespace, and project attributes for ease of analysis

**Data Grain:**
- event_pk

**Filters Applied to Model:**
- `Inherited` - Include valid events for standard analysis and reporting:
  - Exclude events where the event created date < the user created date (`days_since_user_creation_at_event_date >= 0`)
    - These are usually events from projects that were created before the GitLab.com user and then imported after the user is created 
  - Exclude events from blocked users (based on the current user state)
- Rolling 24 months of data

**Business Logic in this Model:**
- `Inherited` - A namespace's plan information (ex: `plan_name_at_event_date`) is determined by the plan for the last event on a given day
- `Inherited` - The ultimate parent namespace's subscription, billing, and account information (ex: `dim_latest_subscription_id`) reflects the most recent available attributes associated with that namespace
- `Inherited` - `dim_latest_product_tier_id` reflects the _current_ product tier of the namespace
- `Inherited` - Not all events have a user associated with them (ex: 'milestones'), and not all events have a namespace associated with them (ex: 'users_created'). Therefore it is expected that `dim_user_sk` or `dim_ultimate_parent_namespace_id` will be NULL for these events
- `Inherited` - `section_name`, `stage_name`, `group_name`, and xMAU metric flags (ex: `is_gmau`) are based on the _current_ event mappings and may not match the mapping at the time of the event

**Other Comments:**
- Note about the `action` event: This "event" captures everything from the [Events API](https://docs.gitlab.com/ee/api/events.html) - issue comments, MRs created, etc. While the `action` event is mapped to the Manage stage, the events included actually span multiple stages (plan, create, etc), which is why this is used for UMAU. Be mindful of the impact of including `action` during stage adoption analysis.34:Ta6b,



WITH dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), fct_event_valid AS (

    SELECT * 
    FROM "PROD".common.fct_event_valid

), dim_user AS (

    SELECT * 
    FROM "PROD".common.dim_user

), dim_project AS (

    SELECT * 
    FROM "PROD".common.dim_project

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

),

--limit mart to rolling 24 months for performance reasons

fact AS (

  SELECT
    "EVENT_PK",
  "DIM_EVENT_DATE_ID",
  "DIM_ULTIMATE_PARENT_NAMESPACE_ID",
  "DIM_PROJECT_ID",
  "DIM_USER_SK",
  "DIM_USER_ID",
  "DIM_LATEST_PRODUCT_TIER_ID",
  "DIM_LATEST_SUBSCRIPTION_ID",
  "DIM_CRM_ACCOUNT_ID",
  "DIM_BILLING_ACCOUNT_ID",
  "ORDER_ID",
  "EVENT_CREATED_AT",
  "EVENT_DATE",
  "IS_NULL_USER",
  "GROUP_NAME",
  "SECTION_NAME",
  "STAGE_NAME",
  "IS_SMAU",
  "IS_GMAU",
  "IS_UMAU",
  "PARENT_ID",
  "PARENT_TYPE",
  "EVENT_NAME",
  "PLAN_ID_AT_EVENT_DATE",
  "PLAN_NAME_AT_EVENT_DATE",
  "PLAN_WAS_PAID_AT_EVENT_DATE",
  "DAYS_SINCE_USER_CREATION_AT_EVENT_DATE",
  "DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE",
  "DAYS_SINCE_PROJECT_CREATION_AT_EVENT_DATE",
  "DATA_SOURCE"
  FROM fct_event_valid
  WHERE event_date >= DATEADD('month', -24, DATE_TRUNC('month',CURRENT_DATE))
  
), 

fact_with_dims AS (

  SELECT
    fact.*,
    dim_namespace.namespace_type AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,
    dim_user.created_at AS user_created_at,
    COALESCE(dim_project.is_learn_gitlab, FALSE) AS project_is_learn_gitlab,
    COALESCE(dim_project.is_imported, FALSE) AS project_is_imported,
    dim_date.first_day_of_month AS event_calendar_month,
    dim_date.quarter_name AS event_calendar_quarter,
    dim_date.year_actual AS event_calendar_year
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_user
    ON fact.dim_user_sk = dim_user.dim_user_sk
  LEFT JOIN dim_project
    ON fact.dim_project_id = dim_project.dim_project_id
  LEFT JOIN dim_date
    ON fact.dim_event_date_id = dim_date.date_id    

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@cbraza'::VARCHAR       AS updated_by,
      '2022-05-05'::DATE        AS model_created_date,
      '2023-03-01'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM fact_with_dims35:T913e,{{
  config(
    materialized='table',
    tags=["mnpi_exception"]
  )
}}

{{ simple_cte([
    ('monthly_saas_metrics','rpt_gainsight_metrics_monthly_paid_saas'),
    ('monthly_sm_metrics','rpt_gainsight_metrics_monthly_paid_self_managed'),
    ('billing_accounts','dim_billing_account'),
    ('location_country', 'dim_location_country'),
    ('subscriptions', 'dim_subscription'),
    ('namespaces', 'dim_namespace'),
    ('charges', 'mart_charge'),
    ('dates', 'dim_date'),
    ('aggregated_metrics', 'redis_namespace_snowplow_clicks_aggregated_workspace'),
    ('redis_metrics_28d_user', 'wk_rpt_user_based_metric_counts_namespace_monthly'),
    ('redis_metrics_all_time_event', 'wk_rpt_event_based_metric_counts_namespace_all_time')
]) }}


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    {{ dbt_utils.group_by(n = 2) }}
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}             AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      {{ dbt_utils.surrogate_key(
        [
          'snapshot_month',
          'dim_subscription_id_original',
          'uuid',
          'hostname',
          'dim_namespace_id'
        ]
      ) }} AS primary_key
    FROM unioned
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-09-09",
    updated_date="2023-05-30"
) }}36:T943f,



WITH monthly_saas_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_saas

), monthly_sm_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_self_managed

), billing_accounts AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), location_country AS (

    SELECT * 
    FROM "PROD".common.dim_location_country

), subscriptions AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_charge

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), aggregated_metrics AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace

), redis_metrics_28d_user AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly

), redis_metrics_all_time_event AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time

)


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    group by 1,2
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

             AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      md5(cast(coalesce(cast(snapshot_month as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription_id_original as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') as 
    varchar
)) AS primary_key
    FROM unioned
  
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-09-09'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final37:T87a,{{ config(
    materialized='table',
    tags=["mnpi_exception", "product"]
) }}

{{ simple_cte([
    ('dim_namespace', 'dim_namespace'),
    ('fct_event_namespace_monthly', 'fct_event_namespace_monthly'),
    ('dim_date', 'dim_date')
    ])
}},

fact AS (

  SELECT
    {{ dbt_utils.star(from=ref('fct_event_namespace_monthly'), except=["CREATED_BY",
        "UPDATED_BY","CREATED_DATE","UPDATED_DATE","MODEL_CREATED_DATE","MODEL_UPDATED_DATE","DBT_UPDATED_AT","DBT_CREATED_AT"]) }}
  FROM fct_event_namespace_monthly
  
), 

fact_with_dims AS (

  SELECT
    --Primary Key 
    event_namespace_monthly_pk,
                                          
    --Foreign Keys
    dim_ultimate_parent_namespace_id,
    dim_latest_product_tier_id,
    dim_latest_subscription_id,
    dim_crm_account_id,
    dim_billing_account_id,
    
    --Namespace and plan metadata
    plan_id_at_event_month,
    plan_name_at_event_month,
    plan_was_paid_at_event_month,
    dim_namespace.namespace_type           AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at               AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,

    --Date information
    event_calendar_month,
    dim_date.quarter_name                  AS event_calendar_quarter,
    dim_date.year_actual                   AS event_calendar_year,

    --Event information
    event_name,
    section_name,
    stage_name,
    group_name,
    is_smau,
    is_gmau,
    is_umau,
    data_source,
    event_count,
    user_count,
    event_date_count
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_date
    ON fact.event_calendar_month = dim_date.date_actual --join on first day of calendar month
  WHERE fact.event_calendar_month < DATE_TRUNC('month', CURRENT_DATE) --exclude current month/incomplete data
        
)

{{ dbt_audit(
    cte_ref="fact_with_dims",
    created_by="@cbraza",
    updated_by="@michellecooper",
    created_date="2023-02-14",
    updated_date="2023-05-12"
) }}38:T806,**Description:** Enriched GitLab.com usage event data for valid events, grouped by month, event name, and ultimate parent namespace. This is an enhanced version of `fct_event_namespace_monthly`
- This data is enhanced with additional namespace attributes for ease of analysis

**Data Grain:**
- event_calendar_month
- event_name
- dim_ultimate_parent_namespace_id

**Filters Applied to Model:**
- Exclude current month
- `Inherited` - Include valid events for standard analysis and reporting:
  - Exclude events where the event created date < the user created date (`days_since_user_creation_at_event_date >= 0`)
    - These are usually events from projects that were created before the GitLab.com user and then imported after the user is created 
  - Exclude events from blocked users (based on the current user state)
- `Inherited` - Rolling 36 months of data
- `Inherited` - Exclude events not associated with a namespace (ex: 'users_created')

**Business Logic in this Model:**
- `Inherited` - A namespace's plan information (ex: `plan_name_at_event_month`) is determined by the plan for the last event on a given month
- `Inherited` - The ultimate parent namespace's subscription, billing, and account information (ex: `dim_latest_subscription_id`) reflects the most recent available attributes associated with that namespace
- `Inherited` - `dim_latest_product_tier_id` reflects the _current_ product tier of the namespace
- `Inherited` - `section_name`, `stage_name`, `group_name`, and xMAU metric flags (ex: `is_gmau`) are based on the _current_ event mappings and may not match the mapping at the time of the event

**Other Comments:**
- Note about the `action` event: This "event" captures everything from the [Events API](https://docs.gitlab.com/ee/api/events.html) - issue comments, MRs created, etc. While the `action` event is mapped to the Manage stage, the events included actually span multiple stages (plan, create, etc), which is why this is used for UMAU. Be mindful of the impact of including `action` during stage adoption analysis.39:Ta7a,



WITH dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), fct_event_namespace_monthly AS (

    SELECT * 
    FROM "PROD".common.fct_event_namespace_monthly

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

),

fact AS (

  SELECT
    "EVENT_NAMESPACE_MONTHLY_PK",
  "DIM_ULTIMATE_PARENT_NAMESPACE_ID",
  "DIM_LATEST_PRODUCT_TIER_ID",
  "DIM_LATEST_SUBSCRIPTION_ID",
  "DIM_CRM_ACCOUNT_ID",
  "DIM_BILLING_ACCOUNT_ID",
  "PLAN_ID_AT_EVENT_MONTH",
  "PLAN_NAME_AT_EVENT_MONTH",
  "PLAN_WAS_PAID_AT_EVENT_MONTH",
  "EVENT_CALENDAR_MONTH",
  "EVENT_NAME",
  "SECTION_NAME",
  "STAGE_NAME",
  "GROUP_NAME",
  "IS_SMAU",
  "IS_GMAU",
  "IS_UMAU",
  "DATA_SOURCE",
  "EVENT_COUNT",
  "USER_COUNT",
  "EVENT_DATE_COUNT"
  FROM fct_event_namespace_monthly
  
), 

fact_with_dims AS (

  SELECT
    --Primary Key 
    event_namespace_monthly_pk,
                                          
    --Foreign Keys
    dim_ultimate_parent_namespace_id,
    dim_latest_product_tier_id,
    dim_latest_subscription_id,
    dim_crm_account_id,
    dim_billing_account_id,
    
    --Namespace and plan metadata
    plan_id_at_event_month,
    plan_name_at_event_month,
    plan_was_paid_at_event_month,
    dim_namespace.namespace_type           AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at               AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,

    --Date information
    event_calendar_month,
    dim_date.quarter_name                  AS event_calendar_quarter,
    dim_date.year_actual                   AS event_calendar_year,

    --Event information
    event_name,
    section_name,
    stage_name,
    group_name,
    is_smau,
    is_gmau,
    is_umau,
    data_source,
    event_count,
    user_count,
    event_date_count
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_date
    ON fact.event_calendar_month = dim_date.date_actual --join on first day of calendar month
  WHERE fact.event_calendar_month < DATE_TRUNC('month', CURRENT_DATE) --exclude current month/incomplete data
        
)

SELECT
      *,
      '@cbraza'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2023-02-14'::DATE        AS model_created_date,
      '2023-05-12'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM fact_with_dims3a:T901,{{ config(
    materialized='table',
    tags=["mnpi_exception"]
) }}

/*
This table is a derived fct table from a future fct_membership.
This table has a grain of user_id->namespace_id->crm_account_id->company_id
This table assumes the highest access level for the user on the namespace
*/
{{ simple_cte([
    ('memberships','gitlab_dotcom_memberships'),
    ('namespace','dim_namespace'),
    ('company_bridge','wk_bdg_user_company'),
    ('marketing_contact','dim_marketing_contact'),
    ('access_levels','gitlab_dotcom_access_levels_source')
]) }},

namespace_companies_accounts AS (

  SELECT
    -- Primary Key
    {{ dbt_utils.surrogate_key(['memberships.user_id',
      'namespace.dim_namespace_id',
      'company_bridge.company_id',
      'marketing_contact.dim_crm_account_id']) }} AS user_namespace_account_company_pk,

    -- Foreign Keys
    {{ get_keyed_nulls(dbt_utils.surrogate_key(['memberships.user_id'])) }} AS dim_user_sk,
    {{ get_keyed_nulls(dbt_utils.surrogate_key(['namespace.dim_namespace_id'])) }} AS dim_namespace_sk,
    {{ get_keyed_nulls(dbt_utils.surrogate_key(['company_bridge.company_id'])) }} AS dim_company_sk,
    {{ get_keyed_nulls(dbt_utils.surrogate_key(['marketing_contact.dim_crm_account_id'])) }} AS dim_crm_account_sk,

    -- Legacy Keys
    memberships.user_id,
    namespace.dim_namespace_id AS namespace_id,
    company_bridge.company_id,
    marketing_contact.dim_crm_account_id AS crm_account_id,

    -- Degenerate Dimensions
    memberships.is_billable,
    memberships.access_level,
    access_levels.access_level_name,
    IFF(namespace.creator_id = memberships.user_id, TRUE, FALSE) AS is_creator,
    IFF(memberships.access_level = 50, TRUE, FALSE) AS is_owner

    -- Facts   

  FROM memberships
  LEFT JOIN namespace
    ON memberships.namespace_id = namespace.dim_namespace_id
  LEFT JOIN company_bridge
    ON memberships.user_id = company_bridge.gitlab_dotcom_user_id
  LEFT JOIN marketing_contact
    ON memberships.user_id = marketing_contact.gitlab_dotcom_user_id
  LEFT JOIN access_levels
    ON memberships.access_level = access_levels.access_level_id
  QUALIFY ROW_NUMBER() OVER (PARTITION BY namespace.dim_namespace_id,
    memberships.user_id ORDER BY memberships.access_level DESC) = 1
)

SELECT *
FROM namespace_companies_accounts3b:Taa4,

/*
This table is a derived fct table from a future fct_membership.
This table has a grain of user_id->namespace_id->crm_account_id->company_id
This table assumes the highest access level for the user on the namespace
*/


WITH memberships AS (

    SELECT * 
    FROM "PROD".legacy.gitlab_dotcom_memberships

), namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), company_bridge AS (

    SELECT * 
    FROM "PROD".workspace_marketing.wk_bdg_user_company

), marketing_contact AS (

    SELECT * 
    FROM "PREP".sensitive.dim_marketing_contact

), access_levels AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_access_levels_source

),

namespace_companies_accounts AS (

  SELECT
    -- Primary Key
    md5(cast(coalesce(cast(memberships.user_id as 
    varchar
), '') || '-' || coalesce(cast(namespace.dim_namespace_id as 
    varchar
), '') || '-' || coalesce(cast(company_bridge.company_id as 
    varchar
), '') || '-' || coalesce(cast(marketing_contact.dim_crm_account_id as 
    varchar
), '') as 
    varchar
)) AS user_namespace_account_company_pk,

    -- Foreign Keys
    

  COALESCE(md5(cast(coalesce(cast(memberships.user_id as 
    varchar
), '') as 
    varchar
)), MD5(-1)) 

 AS dim_user_sk,
    

  COALESCE(md5(cast(coalesce(cast(namespace.dim_namespace_id as 
    varchar
), '') as 
    varchar
)), MD5(-1)) 

 AS dim_namespace_sk,
    

  COALESCE(md5(cast(coalesce(cast(company_bridge.company_id as 
    varchar
), '') as 
    varchar
)), MD5(-1)) 

 AS dim_company_sk,
    

  COALESCE(md5(cast(coalesce(cast(marketing_contact.dim_crm_account_id as 
    varchar
), '') as 
    varchar
)), MD5(-1)) 

 AS dim_crm_account_sk,

    -- Legacy Keys
    memberships.user_id,
    namespace.dim_namespace_id AS namespace_id,
    company_bridge.company_id,
    marketing_contact.dim_crm_account_id AS crm_account_id,

    -- Degenerate Dimensions
    memberships.is_billable,
    memberships.access_level,
    access_levels.access_level_name,
    IFF(namespace.creator_id = memberships.user_id, TRUE, FALSE) AS is_creator,
    IFF(memberships.access_level = 50, TRUE, FALSE) AS is_owner

    -- Facts   

  FROM memberships
  LEFT JOIN namespace
    ON memberships.namespace_id = namespace.dim_namespace_id
  LEFT JOIN company_bridge
    ON memberships.user_id = company_bridge.gitlab_dotcom_user_id
  LEFT JOIN marketing_contact
    ON memberships.user_id = marketing_contact.gitlab_dotcom_user_id
  LEFT JOIN access_levels
    ON memberships.access_level = access_levels.access_level_id
  QUALIFY ROW_NUMBER() OVER (PARTITION BY namespace.dim_namespace_id,
    memberships.user_id ORDER BY memberships.access_level DESC) = 1
)

SELECT *
FROM namespace_companies_accounts3c:T95ac,{{
  config(
    tags=["product", "mnpi_exception"],
    schema="common_mart_product"
  )
}}

{{ simple_cte([
    ('monthly_saas_metrics','fct_saas_product_usage_metrics_monthly'),
    ('monthly_sm_metrics','fct_ping_instance_metric_wave_monthly'),
    ('billing_accounts','dim_billing_account'),
    ('location_country', 'dim_location_country'),
    ('subscriptions', 'dim_subscription'),
    ('namespaces', 'dim_namespace'),
    ('charges', 'mart_charge'),
    ('dates', 'dim_date'),
    ('aggregated_metrics', 'redis_namespace_snowplow_clicks_aggregated_workspace'),
    ('redis_metrics_28d_user', 'wk_rpt_user_based_metric_counts_namespace_monthly'),
    ('redis_metrics_all_time_event', 'wk_rpt_event_based_metric_counts_namespace_all_time'),
    ('dim_product_detail', 'dim_product_detail')
]) }}


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), subscription_with_deployment_type AS (
  
    SELECT DISTINCT
        charges.dim_subscription_id,
        dim_product_detail.product_delivery_type,
        dim_product_detail.product_deployment_type
    FROM charges
    LEFT JOIN dim_product_detail
      ON charges.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    WHERE dim_product_detail.product_deployment_type IN ('Self-Managed', 'Dedicated')

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    {{ dbt_utils.group_by(n = 2) }}
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}             AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      COALESCE(monthly_sm_metrics.ping_delivery_type, 'Self-Managed')              AS delivery_type, -- Hard codding to self-managed until next MR to update dedicated to saas. Issue -> https://gitlab.com/gitlab-data/analytics/-/issues/16966
      COALESCE(monthly_sm_metrics.ping_deployment_type, subscription_with_deployment_type.product_deployment_type, 'Self-Managed')
                                                                                   AS deployment_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN subscription_with_deployment_type
      ON subscription_with_deployment_type.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      'GitLab.com'                                                                  AS deployment_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      {{ dbt_utils.surrogate_key(
        [
          'snapshot_month',
          'dim_subscription_id',
          'deployment_type',
          'uuid',
          'hostname',
          'dim_namespace_id'
        ]
      ) }} AS primary_key
    FROM unioned
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@ischweickartDD",
    updated_by="@jpeguero",
    created_date="2021-06-11",
    updated_date="2023-06-22"
) }}3d:T98c5,



WITH monthly_saas_metrics AS (

    SELECT * 
    FROM "PROD".common.fct_saas_product_usage_metrics_monthly

), monthly_sm_metrics AS (

    SELECT * 
    FROM "PROD".common.fct_ping_instance_metric_wave_monthly

), billing_accounts AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), location_country AS (

    SELECT * 
    FROM "PROD".common.dim_location_country

), subscriptions AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_charge

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), aggregated_metrics AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace

), redis_metrics_28d_user AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly

), redis_metrics_all_time_event AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

)


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), subscription_with_deployment_type AS (
  
    SELECT DISTINCT
        charges.dim_subscription_id,
        dim_product_detail.product_delivery_type,
        dim_product_detail.product_deployment_type
    FROM charges
    LEFT JOIN dim_product_detail
      ON charges.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    WHERE dim_product_detail.product_deployment_type IN ('Self-Managed', 'Dedicated')

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    group by 1,2
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

             AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      COALESCE(monthly_sm_metrics.ping_delivery_type, 'Self-Managed')              AS delivery_type, -- Hard codding to self-managed until next MR to update dedicated to saas. Issue -> https://gitlab.com/gitlab-data/analytics/-/issues/16966
      COALESCE(monthly_sm_metrics.ping_deployment_type, subscription_with_deployment_type.product_deployment_type, 'Self-Managed')
                                                                                   AS deployment_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN subscription_with_deployment_type
      ON subscription_with_deployment_type.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      'GitLab.com'                                                                  AS deployment_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      md5(cast(coalesce(cast(snapshot_month as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription_id as 
    varchar
), '') || '-' || coalesce(cast(deployment_type as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') as 
    varchar
)) AS primary_key
    FROM unioned
  
)

SELECT
      *,
      '@ischweickartDD'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-06-11'::DATE        AS model_created_date,
      '2023-06-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final3e:T2939,WITH internal_merge_requests AS (

  SELECT *
  FROM {{ ref('internal_merge_requests') }}

), namespaces AS (

    SELECT *
    FROM {{ ref('dim_namespace') }}

), product_categories_yml_base AS (

    SELECT
        DISTINCT LOWER(group_name) AS group_name,
        LOWER(stage_section) AS section_name,
        LOWER(stage_display_name) AS stage_name,
        IFF(group_name LIKE '%::%',SPLIT_PART(LOWER(group_name),'::',1),NULL) as root_name
    FROM {{ ref('stages_groups_yaml_source') }}
    WHERE snapshot_date = (SELECT max(snapshot_date) FROM {{ ref('stages_groups_yaml_source') }})

), product_categories_yml AS (

    SELECT group_name,
       section_name,
       stage_name
    FROM product_categories_yml_base
    UNION ALL
    SELECT DISTINCT root_name AS group_name,
                section_name,
                stage_name
    FROM product_categories_yml_base
    WHERE root_name IS NOT NULL
    
), bot_users AS (

    SELECT dim_user_id
    FROM {{ ref('dim_user') }}
    WHERE email_domain LIKE '%noreply.gitlab.com'

), milestones AS (

  SELECT *
  FROM {{ ref('gitlab_dotcom_milestones') }}

),engineering_merge_requests AS (

  SELECT
    internal_merge_requests.merge_request_id                                                                                    AS merge_request_id,
    internal_merge_requests.merge_request_iid                                                                                   AS merge_request_iid,
    internal_merge_requests.author_id                                                                                           AS author_id,
    IFF(bots.dim_user_id IS NOT NULL or internal_merge_requests.author_id = 1786152 or ARRAY_CONTAINS('automation:bot-authored'::variant, internal_merge_requests.labels),
        TRUE, FALSE)                                                                                                            AS is_created_by_bot,
    internal_merge_requests.assignee_id                                                                                         AS assignee_id,
    internal_merge_requests.project_id                                                                                          AS project_id,
    internal_merge_requests.target_project_id                                                                                   AS target_project_id,
    internal_merge_requests.merge_request_state                                                                                 AS merge_request_state,
    internal_merge_requests.created_at                                                                                          AS created_at,
    internal_merge_requests.updated_at                                                                                          AS updated_at,
    internal_merge_requests.merged_at                                                                                           AS merged_at,
    DATE_TRUNC('month',internal_merge_requests.created_at)::date                                                                AS created_month,
    DATE_TRUNC('month',internal_merge_requests.merged_at)::date                                                                 AS merge_month,
    ROUND(TIMESTAMPDIFF(HOURS, internal_merge_requests.merge_request_created_at, internal_merge_requests.merged_at)/24,2)       AS days_to_merge,
    internal_merge_requests.merge_request_title                                                                                 AS merge_request_title,
    internal_merge_requests.merge_request_description                                                                           AS merge_request_description,
    internal_merge_requests.milestone_id                                                                                        AS milestone_id,
    internal_merge_requests.milestone_title                                                                                     AS milestone_title,
    internal_merge_requests.milestone_description                                                                               AS milestone_description,
    milestones.start_date AS milestone_start_date,
    milestones.due_date AS milestone_due_date,
    internal_merge_requests.namespace_id                                                                                        AS namespace_id,
    internal_merge_requests.ultimate_parent_id AS ultimate_parent_id,
    internal_merge_requests.labels                                                                                              AS labels,
    ARRAY_TO_STRING(internal_merge_requests.labels,'|')                                                                         AS masked_label_title,
    ARRAY_CONTAINS('community contribution'::variant, internal_merge_requests.labels)                                           AS is_community_contribution,
    ARRAY_CONTAINS('security'::variant, internal_merge_requests.labels)                                                         AS is_security,
    IFNULL(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bpriority::([0-9]+)'), 'priority::', ''),'undefined')                                                                                                                    AS priority_label,
    IFNULL(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bseverity::([0-9]+)'), 'severity::', ''),'undefined')                                                                                                                    AS severity_label,
    CASE
      WHEN array_contains('group::gitaly::cluster'::variant,internal_merge_requests.labels)
        THEN 'gitaly::cluster'
      WHEN array_contains('group::gitaly::git'::variant,internal_merge_requests.labels)
        THEN 'gitaly::git'
      WHEN array_contains('group::distribution::build'::variant,internal_merge_requests.labels)
        THEN 'distribution::build'
      WHEN array_contains('group::distribution::deploy'::variant,internal_merge_requests.labels)
        THEN 'distribution::deploy'
      WHEN array_contains('group::distribution::operate'::variant,internal_merge_requests.labels)
        THEN 'distribution::operate'
        ELSE
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bgroup::*([^,]*)'), 'group::', '') IN (SELECT group_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bgroup::*([^,]*)'), 'group::', ''),'undefined') END                    AS group_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bsection::*([^,]*)'), 'section::', '') IN (SELECT section_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bsection::*([^,]*)'), 'section::', ''),'undefined')                                                                                                                AS section_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', '') IN (SELECT stage_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', ''),'undefined')                                                                                                                    AS stage_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\btype::*([^,]*)'), 'type::', '') IN ('bug','feature','maintenance'),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\btype::*([^,]*)'), 'type::', ''),'undefined') 
                                                                                                                                AS type_label,
    CASE
        WHEN type_label = 'bug' 
            THEN REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','),'\\bbug::*([^,]*)') 
        WHEN type_label = 'maintenance' 
            THEN REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','),'\\bmaintenance::*([^,]*)') 
        WHEN type_label = 'feature' 
            THEN REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','),'\\bfeature::*([^,]*)') 
        ELSE 'undefined' END                                                                                                    AS subtype_label,
    projects.visibility_level                                                                                                   AS visibility_level,
    CASE
        WHEN ns_4.dim_namespace_id IS NOT NULL
            THEN ns_4.namespace_path || '/' || ns_3.namespace_path || '/' || ns_2.namespace_path || '/' || ns_1.namespace_path || '/' ||  ns.namespace_path
        WHEN ns_3.dim_namespace_id IS NOT NULL 
            THEN ns_3.namespace_path || '/' || ns_2.namespace_path || '/' || ns_1.namespace_path || '/' ||  ns.namespace_path
        WHEN ns_2.dim_namespace_id IS NOT NULL 
            THEN ns_2.namespace_path || '/' || ns_1.namespace_path || '/' ||  ns.namespace_path
        WHEN ns_1.dim_namespace_id IS NOT NULL 
            THEN ns_1.namespace_path || '/' || ns.namespace_path
        ELSE  ns.namespace_path END                                                                                             AS full_group_path,
    'https://gitlab.com/' || full_group_path || '/' || projects.project_path || '/-/merge_requests/' || internal_merge_requests.merge_request_iid  AS url
  FROM internal_merge_requests
  LEFT JOIN {{ ref('dim_project') }} AS projects
    ON projects.dim_project_id = internal_merge_requests.target_project_id
  LEFT JOIN bot_users AS bots
    ON bots.dim_user_id = internal_merge_requests.author_id
  LEFT JOIN namespaces AS ns
    ON ns.dim_namespace_id = projects.dim_namespace_id
  LEFT JOIN namespaces ns_1 
    ON ns_1.dim_namespace_id = ns.parent_id and ns.namespace_is_ultimate_parent = FALSE
  LEFT JOIN namespaces ns_2 
    ON ns_2.dim_namespace_id = ns_1.parent_id and ns_1.namespace_is_ultimate_parent = FALSE
  LEFT JOIN namespaces ns_3 
    ON ns_3.dim_namespace_id = ns_2.parent_id and ns_2.namespace_is_ultimate_parent = FALSE
  LEFT JOIN namespaces ns_4 
    ON ns_4.dim_namespace_id = ns_3.parent_id and ns_3.namespace_is_ultimate_parent = FALSE
  LEFT JOIN milestones
    ON milestones.milestone_id = internal_merge_requests.milestone_id
  WHERE is_part_of_product = TRUE
)

SELECT *
FROM engineering_merge_requests3f:T2966,WITH internal_merge_requests AS (

  SELECT *
  FROM "PROD".workspace_engineering.internal_merge_requests

), namespaces AS (

    SELECT *
    FROM "PROD".common.dim_namespace

), product_categories_yml_base AS (

    SELECT
        DISTINCT LOWER(group_name) AS group_name,
        LOWER(stage_section) AS section_name,
        LOWER(stage_display_name) AS stage_name,
        IFF(group_name LIKE '%::%',SPLIT_PART(LOWER(group_name),'::',1),NULL) as root_name
    FROM "PREP".gitlab_data_yaml.stages_groups_yaml_source
    WHERE snapshot_date = (SELECT max(snapshot_date) FROM "PREP".gitlab_data_yaml.stages_groups_yaml_source)

), product_categories_yml AS (

    SELECT group_name,
       section_name,
       stage_name
    FROM product_categories_yml_base
    UNION ALL
    SELECT DISTINCT root_name AS group_name,
                section_name,
                stage_name
    FROM product_categories_yml_base
    WHERE root_name IS NOT NULL
    
), bot_users AS (

    SELECT dim_user_id
    FROM "PROD".common.dim_user
    WHERE email_domain LIKE '%noreply.gitlab.com'

), milestones AS (

  SELECT *
  FROM "PREP".sensitive.gitlab_dotcom_milestones

),engineering_merge_requests AS (

  SELECT
    internal_merge_requests.merge_request_id                                                                                    AS merge_request_id,
    internal_merge_requests.merge_request_iid                                                                                   AS merge_request_iid,
    internal_merge_requests.author_id                                                                                           AS author_id,
    IFF(bots.dim_user_id IS NOT NULL or internal_merge_requests.author_id = 1786152 or ARRAY_CONTAINS('automation:bot-authored'::variant, internal_merge_requests.labels),
        TRUE, FALSE)                                                                                                            AS is_created_by_bot,
    internal_merge_requests.assignee_id                                                                                         AS assignee_id,
    internal_merge_requests.project_id                                                                                          AS project_id,
    internal_merge_requests.target_project_id                                                                                   AS target_project_id,
    internal_merge_requests.merge_request_state                                                                                 AS merge_request_state,
    internal_merge_requests.created_at                                                                                          AS created_at,
    internal_merge_requests.updated_at                                                                                          AS updated_at,
    internal_merge_requests.merged_at                                                                                           AS merged_at,
    DATE_TRUNC('month',internal_merge_requests.created_at)::date                                                                AS created_month,
    DATE_TRUNC('month',internal_merge_requests.merged_at)::date                                                                 AS merge_month,
    ROUND(TIMESTAMPDIFF(HOURS, internal_merge_requests.merge_request_created_at, internal_merge_requests.merged_at)/24,2)       AS days_to_merge,
    internal_merge_requests.merge_request_title                                                                                 AS merge_request_title,
    internal_merge_requests.merge_request_description                                                                           AS merge_request_description,
    internal_merge_requests.milestone_id                                                                                        AS milestone_id,
    internal_merge_requests.milestone_title                                                                                     AS milestone_title,
    internal_merge_requests.milestone_description                                                                               AS milestone_description,
    milestones.start_date AS milestone_start_date,
    milestones.due_date AS milestone_due_date,
    internal_merge_requests.namespace_id                                                                                        AS namespace_id,
    internal_merge_requests.ultimate_parent_id AS ultimate_parent_id,
    internal_merge_requests.labels                                                                                              AS labels,
    ARRAY_TO_STRING(internal_merge_requests.labels,'|')                                                                         AS masked_label_title,
    ARRAY_CONTAINS('community contribution'::variant, internal_merge_requests.labels)                                           AS is_community_contribution,
    ARRAY_CONTAINS('security'::variant, internal_merge_requests.labels)                                                         AS is_security,
    IFNULL(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bpriority::([0-9]+)'), 'priority::', ''),'undefined')                                                                                                                    AS priority_label,
    IFNULL(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bseverity::([0-9]+)'), 'severity::', ''),'undefined')                                                                                                                    AS severity_label,
    CASE
      WHEN array_contains('group::gitaly::cluster'::variant,internal_merge_requests.labels)
        THEN 'gitaly::cluster'
      WHEN array_contains('group::gitaly::git'::variant,internal_merge_requests.labels)
        THEN 'gitaly::git'
      WHEN array_contains('group::distribution::build'::variant,internal_merge_requests.labels)
        THEN 'distribution::build'
      WHEN array_contains('group::distribution::deploy'::variant,internal_merge_requests.labels)
        THEN 'distribution::deploy'
      WHEN array_contains('group::distribution::operate'::variant,internal_merge_requests.labels)
        THEN 'distribution::operate'
        ELSE
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bgroup::*([^,]*)'), 'group::', '') IN (SELECT group_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bgroup::*([^,]*)'), 'group::', ''),'undefined') END                    AS group_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bsection::*([^,]*)'), 'section::', '') IN (SELECT section_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bsection::*([^,]*)'), 'section::', ''),'undefined')                                                                                                                AS section_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', '') IN (SELECT stage_name FROM product_categories_yml),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\bdevops::*([^,]*)'), 'devops::', ''),'undefined')                                                                                                                    AS stage_label,
    IFF(REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\btype::*([^,]*)'), 'type::', '') IN ('bug','feature','maintenance'),REPLACE(REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','), '\\btype::*([^,]*)'), 'type::', ''),'undefined') 
                                                                                                                                AS type_label,
    CASE
        WHEN type_label = 'bug' 
            THEN REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','),'\\bbug::*([^,]*)') 
        WHEN type_label = 'maintenance' 
            THEN REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','),'\\bmaintenance::*([^,]*)') 
        WHEN type_label = 'feature' 
            THEN REGEXP_SUBSTR(ARRAY_TO_STRING(internal_merge_requests.labels, ','),'\\bfeature::*([^,]*)') 
        ELSE 'undefined' END                                                                                                    AS subtype_label,
    projects.visibility_level                                                                                                   AS visibility_level,
    CASE
        WHEN ns_4.dim_namespace_id IS NOT NULL
            THEN ns_4.namespace_path || '/' || ns_3.namespace_path || '/' || ns_2.namespace_path || '/' || ns_1.namespace_path || '/' ||  ns.namespace_path
        WHEN ns_3.dim_namespace_id IS NOT NULL 
            THEN ns_3.namespace_path || '/' || ns_2.namespace_path || '/' || ns_1.namespace_path || '/' ||  ns.namespace_path
        WHEN ns_2.dim_namespace_id IS NOT NULL 
            THEN ns_2.namespace_path || '/' || ns_1.namespace_path || '/' ||  ns.namespace_path
        WHEN ns_1.dim_namespace_id IS NOT NULL 
            THEN ns_1.namespace_path || '/' || ns.namespace_path
        ELSE  ns.namespace_path END                                                                                             AS full_group_path,
    'https://gitlab.com/' || full_group_path || '/' || projects.project_path || '/-/merge_requests/' || internal_merge_requests.merge_request_iid  AS url
  FROM internal_merge_requests
  LEFT JOIN "PROD".common.dim_project AS projects
    ON projects.dim_project_id = internal_merge_requests.target_project_id
  LEFT JOIN bot_users AS bots
    ON bots.dim_user_id = internal_merge_requests.author_id
  LEFT JOIN namespaces AS ns
    ON ns.dim_namespace_id = projects.dim_namespace_id
  LEFT JOIN namespaces ns_1 
    ON ns_1.dim_namespace_id = ns.parent_id and ns.namespace_is_ultimate_parent = FALSE
  LEFT JOIN namespaces ns_2 
    ON ns_2.dim_namespace_id = ns_1.parent_id and ns_1.namespace_is_ultimate_parent = FALSE
  LEFT JOIN namespaces ns_3 
    ON ns_3.dim_namespace_id = ns_2.parent_id and ns_2.namespace_is_ultimate_parent = FALSE
  LEFT JOIN namespaces ns_4 
    ON ns_4.dim_namespace_id = ns_3.parent_id and ns_3.namespace_is_ultimate_parent = FALSE
  LEFT JOIN milestones
    ON milestones.milestone_id = internal_merge_requests.milestone_id
  WHERE is_part_of_product = TRUE
)

SELECT *
FROM engineering_merge_requests40:T604,{{ config(
    materialized='table',
    tags=["mnpi_exception"]
) }}

with 

namespaces AS (
  SELECT *
  FROM {{ ref('dim_namespace') }}
),

customer_account_company AS (
  SELECT *
  FROM {{ ref('customer_account_company') }}
),

top_scoreing_account AS (
  SELECT *
  FROM {{ ref('account_score') }}
),

top_scoreing_company AS (
  SELECT *
  FROM {{ ref('company_score') }}
),

combined AS (
  SELECT
    namespaces.dim_namespace_id AS namespace_id,
    namespaces.namespace_type,
    namespaces.gitlab_plan_title,
    COALESCE(customer_account_company.sfdc_account_id, top_scoreing_account.crm_account_id) AS account_id,
    COALESCE(customer_account_company.company_id, top_scoreing_company.company_id) AS company_id,
    customer_account_company.sfdc_account_id AS customer_account_id,
    customer_account_company.company_id AS customer_company_id,
    top_scoreing_account.crm_account_id AS user_account_id,
    top_scoreing_company.company_id AS user_company_id,
    top_scoreing_company.combined_score AS company_combined_score,
    top_scoreing_account.combined_score AS account_combined_score
  FROM prod.common.dim_namespace namespaces
  LEFT JOIN customer_account_company
    ON namespaces.dim_namespace_id = customer_account_company.ultimate_parent_id
  LEFT JOIN top_scoreing_account
    ON namespaces.dim_namespace_id = top_scoreing_account.namespace_id
  LEFT JOIN top_scoreing_company
    ON namespaces.dim_namespace_id = top_scoreing_company.namespace_id
  WHERE namespace_is_ultimate_parent
)


select * from combined41:T5ea,

with 

namespaces AS (
  SELECT *
  FROM "PROD".common.dim_namespace
),

customer_account_company AS (
  SELECT *
  FROM "PROD".workspace_marketing.customer_account_company
),

top_scoreing_account AS (
  SELECT *
  FROM "PROD".workspace_marketing.account_score
),

top_scoreing_company AS (
  SELECT *
  FROM "PROD".workspace_marketing.company_score
),

combined AS (
  SELECT
    namespaces.dim_namespace_id AS namespace_id,
    namespaces.namespace_type,
    namespaces.gitlab_plan_title,
    COALESCE(customer_account_company.sfdc_account_id, top_scoreing_account.crm_account_id) AS account_id,
    COALESCE(customer_account_company.company_id, top_scoreing_company.company_id) AS company_id,
    customer_account_company.sfdc_account_id AS customer_account_id,
    customer_account_company.company_id AS customer_company_id,
    top_scoreing_account.crm_account_id AS user_account_id,
    top_scoreing_company.company_id AS user_company_id,
    top_scoreing_company.combined_score AS company_combined_score,
    top_scoreing_account.combined_score AS account_combined_score
  FROM prod.common.dim_namespace namespaces
  LEFT JOIN customer_account_company
    ON namespaces.dim_namespace_id = customer_account_company.ultimate_parent_id
  LEFT JOIN top_scoreing_account
    ON namespaces.dim_namespace_id = top_scoreing_account.namespace_id
  LEFT JOIN top_scoreing_company
    ON namespaces.dim_namespace_id = top_scoreing_company.namespace_id
  WHERE namespace_is_ultimate_parent
)


select * from combined42:T1a39,{{ config(
    tags=["product"]
) }}

{{ config({
    "materialized": "incremental",
    "unique_key": "dim_epic_id"
    })
}}

{{ simple_cte([
    ('dim_date', 'dim_date'),
    ('dim_namespace_plan_hist', 'dim_namespace_plan_hist'),
    ('plans', 'gitlab_dotcom_plans_source'),
    ('dim_namespace', 'dim_namespace'),
    ('gitlab_dotcom_routes_source', 'gitlab_dotcom_routes_source'),
    ('prep_label_links', 'prep_label_links'),
    ('prep_labels', 'prep_labels'),
    ('gitlab_dotcom_award_emoji_source', 'gitlab_dotcom_award_emoji_source')
]) }}

, gitlab_dotcom_epics_dedupe_source AS (
    
    SELECT *
    FROM {{ ref('gitlab_dotcom_epics_dedupe_source') }} 
    {% if is_incremental() %}

    WHERE updated_at >= (SELECT MAX(updated_at) FROM {{this}})

    {% endif %}

), upvote_count AS (

    SELECT
      awardable_id                                        AS dim_epic_id,
      SUM(IFF(award_emoji_name LIKE 'thumbsup%', 1, 0))   AS thumbsups_count,
      SUM(IFF(award_emoji_name LIKE 'thumbsdown%', 1, 0)) AS thumbsdowns_count,
      thumbsups_count - thumbsdowns_count                 AS upvote_count
    FROM gitlab_dotcom_award_emoji_source
    WHERE awardable_type = 'Epic'
    GROUP BY 1

), agg_labels AS (

    SELECT 
      prep_label_links.dim_epic_id                                                                  AS dim_epic_id,
      ARRAY_AGG(LOWER(prep_labels.label_title)) WITHIN GROUP (ORDER BY prep_labels.label_title ASC) AS labels
    FROM prep_label_links
    LEFT JOIN prep_labels
      ON prep_label_links.dim_label_id = prep_labels.dim_label_id
    WHERE prep_label_links.dim_epic_id IS NOT NULL
    GROUP BY 1  

), joined AS (

    SELECT 
      gitlab_dotcom_epics_dedupe_source.id::NUMBER                                           AS dim_epic_id,
      gitlab_dotcom_epics_dedupe_source.author_id::NUMBER                                    AS author_id,
      gitlab_dotcom_epics_dedupe_source.group_id::NUMBER                                     AS group_id,
      dim_namespace.ultimate_parent_namespace_id::NUMBER                                     AS ultimate_parent_namespace_id,
      dim_date.date_id::NUMBER                                                               AS created_date_id,
      IFNULL(dim_namespace_plan_hist.dim_plan_id, 34)::NUMBER                                AS dim_plan_id,
      gitlab_dotcom_epics_dedupe_source.assignee_id::NUMBER                                  AS assignee_id,
      gitlab_dotcom_epics_dedupe_source.iid::NUMBER                                          AS epic_internal_id,
      gitlab_dotcom_epics_dedupe_source.updated_by_id::NUMBER                                AS updated_by_id,
      gitlab_dotcom_epics_dedupe_source.last_edited_by_id::NUMBER                            AS last_edited_by_id,
      gitlab_dotcom_epics_dedupe_source.lock_version::NUMBER                                 AS lock_version,
      gitlab_dotcom_epics_dedupe_source.start_date::DATE                                     AS epic_start_date,
      gitlab_dotcom_epics_dedupe_source.end_date::DATE                                       AS epic_end_date,
      gitlab_dotcom_epics_dedupe_source.last_edited_at::TIMESTAMP                            AS epic_last_edited_at,
      gitlab_dotcom_epics_dedupe_source.created_at::TIMESTAMP                                AS created_at,
      gitlab_dotcom_epics_dedupe_source.updated_at::TIMESTAMP                                AS updated_at,
      IFF(dim_namespace.visibility_level = 'private',
        'private - masked',
        gitlab_dotcom_epics_dedupe_source.title::VARCHAR)                                    AS epic_title,
      gitlab_dotcom_epics_dedupe_source.description::VARCHAR                                 AS epic_description,
      gitlab_dotcom_epics_dedupe_source.closed_at::TIMESTAMP                                 AS closed_at,
      gitlab_dotcom_epics_dedupe_source.state_id::NUMBER                                     AS state_id,
      gitlab_dotcom_epics_dedupe_source.parent_id::NUMBER                                    AS parent_id,
      gitlab_dotcom_epics_dedupe_source.relative_position::NUMBER                            AS relative_position,
      gitlab_dotcom_epics_dedupe_source.start_date_sourcing_epic_id::NUMBER                  AS start_date_sourcing_epic_id,
      gitlab_dotcom_epics_dedupe_source.external_key::VARCHAR                                AS external_key,
      gitlab_dotcom_epics_dedupe_source.confidential::BOOLEAN                                AS is_confidential,
      {{ map_state_id('gitlab_dotcom_epics_dedupe_source.state_id') }}                       AS state_name,
      LENGTH(gitlab_dotcom_epics_dedupe_source.title)::NUMBER                                AS epic_title_length,
      LENGTH(gitlab_dotcom_epics_dedupe_source.description)::NUMBER                          AS epic_description_length,
      IFF(dim_namespace.visibility_level = 'private',
        'private - masked',
        'https://gitlab.com/groups/' || gitlab_dotcom_routes_source.path || '/-/epics/' || gitlab_dotcom_epics_dedupe_source.iid)
                                                                                             AS epic_url,
      IFF(dim_namespace.visibility_level = 'private',
        ARRAY_CONSTRUCT('private - masked'),
        agg_labels.labels)                                                                   AS labels,
      IFNULL(upvote_count.upvote_count, 0)                                                   AS upvote_count
    FROM gitlab_dotcom_epics_dedupe_source
    LEFT JOIN dim_namespace 
        ON gitlab_dotcom_epics_dedupe_source.group_id = dim_namespace.dim_namespace_id
    LEFT JOIN dim_namespace_plan_hist 
        ON dim_namespace.ultimate_parent_namespace_id = dim_namespace_plan_hist.dim_namespace_id
        AND gitlab_dotcom_epics_dedupe_source.created_at >= dim_namespace_plan_hist.valid_from
        AND gitlab_dotcom_epics_dedupe_source.created_at < COALESCE(dim_namespace_plan_hist.valid_to, '2099-01-01')
    LEFT JOIN dim_date 
        ON TO_DATE(gitlab_dotcom_epics_dedupe_source.created_at) = dim_date.date_day
    LEFT JOIN gitlab_dotcom_routes_source
        ON gitlab_dotcom_routes_source.source_id = gitlab_dotcom_epics_dedupe_source.group_id
        AND gitlab_dotcom_routes_source.source_type = 'Namespace'
    LEFT JOIN agg_labels
        ON agg_labels.dim_epic_id = gitlab_dotcom_epics_dedupe_source.id
    LEFT JOIN upvote_count
        ON upvote_count.dim_epic_id = gitlab_dotcom_epics_dedupe_source.id

)

{{ dbt_audit(
    cte_ref="joined",
    created_by="@mpeychet_",
    updated_by="@chrissharp",
    created_date="2021-06-22",
    updated_date="2022-05-30"
) }}43:T1cfc,





WITH dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_namespace_plan_hist AS (

    SELECT * 
    FROM "PROD".common.dim_namespace_plan_hist

), plans AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_plans_source

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), gitlab_dotcom_routes_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_routes_source

), prep_label_links AS (

    SELECT * 
    FROM "PROD".common_prep.prep_label_links

), prep_labels AS (

    SELECT * 
    FROM "PROD".common_prep.prep_labels

), gitlab_dotcom_award_emoji_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_award_emoji_source

)

, gitlab_dotcom_epics_dedupe_source AS (
    
    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_epics_dedupe_source 
    

    WHERE updated_at >= (SELECT MAX(updated_at) FROM "PROD".common_prep.prep_epic)

    

), upvote_count AS (

    SELECT
      awardable_id                                        AS dim_epic_id,
      SUM(IFF(award_emoji_name LIKE 'thumbsup%', 1, 0))   AS thumbsups_count,
      SUM(IFF(award_emoji_name LIKE 'thumbsdown%', 1, 0)) AS thumbsdowns_count,
      thumbsups_count - thumbsdowns_count                 AS upvote_count
    FROM gitlab_dotcom_award_emoji_source
    WHERE awardable_type = 'Epic'
    GROUP BY 1

), agg_labels AS (

    SELECT 
      prep_label_links.dim_epic_id                                                                  AS dim_epic_id,
      ARRAY_AGG(LOWER(prep_labels.label_title)) WITHIN GROUP (ORDER BY prep_labels.label_title ASC) AS labels
    FROM prep_label_links
    LEFT JOIN prep_labels
      ON prep_label_links.dim_label_id = prep_labels.dim_label_id
    WHERE prep_label_links.dim_epic_id IS NOT NULL
    GROUP BY 1  

), joined AS (

    SELECT 
      gitlab_dotcom_epics_dedupe_source.id::NUMBER                                           AS dim_epic_id,
      gitlab_dotcom_epics_dedupe_source.author_id::NUMBER                                    AS author_id,
      gitlab_dotcom_epics_dedupe_source.group_id::NUMBER                                     AS group_id,
      dim_namespace.ultimate_parent_namespace_id::NUMBER                                     AS ultimate_parent_namespace_id,
      dim_date.date_id::NUMBER                                                               AS created_date_id,
      IFNULL(dim_namespace_plan_hist.dim_plan_id, 34)::NUMBER                                AS dim_plan_id,
      gitlab_dotcom_epics_dedupe_source.assignee_id::NUMBER                                  AS assignee_id,
      gitlab_dotcom_epics_dedupe_source.iid::NUMBER                                          AS epic_internal_id,
      gitlab_dotcom_epics_dedupe_source.updated_by_id::NUMBER                                AS updated_by_id,
      gitlab_dotcom_epics_dedupe_source.last_edited_by_id::NUMBER                            AS last_edited_by_id,
      gitlab_dotcom_epics_dedupe_source.lock_version::NUMBER                                 AS lock_version,
      gitlab_dotcom_epics_dedupe_source.start_date::DATE                                     AS epic_start_date,
      gitlab_dotcom_epics_dedupe_source.end_date::DATE                                       AS epic_end_date,
      gitlab_dotcom_epics_dedupe_source.last_edited_at::TIMESTAMP                            AS epic_last_edited_at,
      gitlab_dotcom_epics_dedupe_source.created_at::TIMESTAMP                                AS created_at,
      gitlab_dotcom_epics_dedupe_source.updated_at::TIMESTAMP                                AS updated_at,
      IFF(dim_namespace.visibility_level = 'private',
        'private - masked',
        gitlab_dotcom_epics_dedupe_source.title::VARCHAR)                                    AS epic_title,
      gitlab_dotcom_epics_dedupe_source.description::VARCHAR                                 AS epic_description,
      gitlab_dotcom_epics_dedupe_source.closed_at::TIMESTAMP                                 AS closed_at,
      gitlab_dotcom_epics_dedupe_source.state_id::NUMBER                                     AS state_id,
      gitlab_dotcom_epics_dedupe_source.parent_id::NUMBER                                    AS parent_id,
      gitlab_dotcom_epics_dedupe_source.relative_position::NUMBER                            AS relative_position,
      gitlab_dotcom_epics_dedupe_source.start_date_sourcing_epic_id::NUMBER                  AS start_date_sourcing_epic_id,
      gitlab_dotcom_epics_dedupe_source.external_key::VARCHAR                                AS external_key,
      gitlab_dotcom_epics_dedupe_source.confidential::BOOLEAN                                AS is_confidential,
      CASE
      WHEN gitlab_dotcom_epics_dedupe_source.state_id::NUMBER = 1 THEN 'opened'
      WHEN gitlab_dotcom_epics_dedupe_source.state_id::NUMBER = 2 THEN 'closed'
      WHEN gitlab_dotcom_epics_dedupe_source.state_id::NUMBER = 3 THEN 'merged'
      WHEN gitlab_dotcom_epics_dedupe_source.state_id::NUMBER = 4 THEN 'locked'
      ELSE NULL
    END                       AS state_name,
      LENGTH(gitlab_dotcom_epics_dedupe_source.title)::NUMBER                                AS epic_title_length,
      LENGTH(gitlab_dotcom_epics_dedupe_source.description)::NUMBER                          AS epic_description_length,
      IFF(dim_namespace.visibility_level = 'private',
        'private - masked',
        'https://gitlab.com/groups/' || gitlab_dotcom_routes_source.path || '/-/epics/' || gitlab_dotcom_epics_dedupe_source.iid)
                                                                                             AS epic_url,
      IFF(dim_namespace.visibility_level = 'private',
        ARRAY_CONSTRUCT('private - masked'),
        agg_labels.labels)                                                                   AS labels,
      IFNULL(upvote_count.upvote_count, 0)                                                   AS upvote_count
    FROM gitlab_dotcom_epics_dedupe_source
    LEFT JOIN dim_namespace 
        ON gitlab_dotcom_epics_dedupe_source.group_id = dim_namespace.dim_namespace_id
    LEFT JOIN dim_namespace_plan_hist 
        ON dim_namespace.ultimate_parent_namespace_id = dim_namespace_plan_hist.dim_namespace_id
        AND gitlab_dotcom_epics_dedupe_source.created_at >= dim_namespace_plan_hist.valid_from
        AND gitlab_dotcom_epics_dedupe_source.created_at < COALESCE(dim_namespace_plan_hist.valid_to, '2099-01-01')
    LEFT JOIN dim_date 
        ON TO_DATE(gitlab_dotcom_epics_dedupe_source.created_at) = dim_date.date_day
    LEFT JOIN gitlab_dotcom_routes_source
        ON gitlab_dotcom_routes_source.source_id = gitlab_dotcom_epics_dedupe_source.group_id
        AND gitlab_dotcom_routes_source.source_type = 'Namespace'
    LEFT JOIN agg_labels
        ON agg_labels.dim_epic_id = gitlab_dotcom_epics_dedupe_source.id
    LEFT JOIN upvote_count
        ON upvote_count.dim_epic_id = gitlab_dotcom_epics_dedupe_source.id

)

SELECT
      *,
      '@mpeychet_'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-06-22'::DATE        AS model_created_date,
      '2022-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

                CURRENT_TIMESTAMP()               AS dbt_created_at

            

        
    
    

    FROM joined44:T3541,{{ config(
    materialized='table',
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('company_domain_account','bdg_company_domain_account'),
    ('crm_account','dim_crm_account'),
    ('company','wk_dim_company'),
    ('namespace_order_subscription_monthly','bdg_namespace_order_subscription_monthly'),
    ('namespaces','dim_namespace'),
    ('users','dim_user')
]) }},

user_namespace_account_company AS (
  SELECT *
  FROM {{ ref('wk_fct_user_namespace_account_company') }}
  WHERE is_billable = TRUE
),

domain_matching AS (
  -- Joins dimension tables and changes the grain to the ultimate parent namespace
  SELECT
    user_namespace_account_company.user_id,
    user_namespace_account_company.is_creator,
    user_namespace_account_company.is_owner,
    namespaces.ultimate_parent_namespace_id,
    company.source_company_id,
    users.email_domain,
    users.email_domain_classification,
    COALESCE(
      user_namespace_account_company.crm_account_id,
      company_domain_account.crm_account_id
    ) AS crm_account_id
  FROM user_namespace_account_company
  LEFT JOIN namespaces
    ON user_namespace_account_company.namespace_id = namespaces.dim_namespace_id
  LEFT JOIN company
    ON user_namespace_account_company.company_id = company.company_id
  LEFT JOIN users
    ON user_namespace_account_company.user_id = users.dim_user_id
  LEFT JOIN company_domain_account
    ON company.source_company_id = company_domain_account.company_id
      AND users.email_domain = company_domain_account.email_domain
  QUALIFY ROW_NUMBER() OVER (PARTITION BY
    namespaces.ultimate_parent_namespace_id,
    user_namespace_account_company.user_id
    ORDER BY user_namespace_account_company.access_level ) = 1
),

top_namespace_domain AS (
  -- Find the top used user email domains for the ultimate parent namespace for matching
  SELECT
    domain_matching.ultimate_parent_namespace_id,
    domain_matching.email_domain,
    IFF(domain_matching.email_domain_classification IS NULL, TRUE, FALSE) AS is_business_email,
    COUNT(DISTINCT domain_matching.user_id) AS number_of_users,
    ROW_NUMBER() OVER (
      PARTITION BY domain_matching.ultimate_parent_namespace_id
      ORDER BY number_of_users DESC) AS domain_rank
  FROM domain_matching
  WHERE is_business_email = TRUE
  GROUP BY 1, 2, 3
  QUALIFY domain_rank = 1

),

namespace_domain_account AS (
  -- Finds the crm account related to the top namespace email domain.
  SELECT DISTINCT
    top_namespace_domain.ultimate_parent_namespace_id,
    top_namespace_domain.email_domain,
    company_domain_account.crm_account_id,
    company_domain_account.account_domain_rank,
    ROW_NUMBER() OVER (PARTITION BY
      top_namespace_domain.ultimate_parent_namespace_id,
      top_namespace_domain.email_domain
      ORDER BY company_domain_account.account_domain_rank DESC,
        company_domain_account.crm_account_id ASC) AS namespace_account_rank
  FROM top_namespace_domain
  INNER JOIN company_domain_account
    ON top_namespace_domain.email_domain = company_domain_account.email_domain
  QUALIFY namespace_account_rank = 1


),

namespace_company AS (
  -- Measures and applies logic for determining the best match for a namespace and company
  SELECT
    ultimate_parent_namespace_id,
    source_company_id,
    CASE
      WHEN source_company_id IS NOT NULL THEN 1
      ELSE 0
    END AS has_company,
    MAX(IFF(is_creator, 1, 0)) AS has_creator,
    COUNT(DISTINCT IFF(is_owner, user_id, NULL)) AS total_owners,
    COUNT(DISTINCT user_id) AS total_users,
    SUM(total_owners) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners,
    SUM(total_users) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users,
    SUM(IFF(source_company_id IS NOT NULL, total_owners, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners_qualified,
    SUM(IFF(source_company_id IS NOT NULL, total_users, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users_qualified,
    SUM(IFF(source_company_id IS NOT NULL, has_creator, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_creator_qualified,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_company DESC, has_creator DESC, total_owners DESC,
        total_users DESC) AS company_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_company DESC, total_owners DESC, total_users DESC) AS company_owner_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_company DESC, total_users DESC) AS company_user_rank,

    IFF(total_namespace_owners_qualified > 0, total_owners / total_namespace_owners_qualified,
        0) AS owner_percent_qualified,
    IFF(total_namespace_users_qualified > 0, total_users / total_namespace_users_qualified,
        0) AS users_percent_qualified,
    IFF(total_namespace_owners > 0, total_owners / total_namespace_owners, 0) AS owner_percent,
    IFF(total_namespace_users > 0, total_users / total_namespace_users, 0) AS users_percent,

    -- Matching logic ratios derived from an evaluation of the results of the query
    IFF(company_rank = 1
      AND has_company = 1
      AND (
        (
          has_creator = 1
          AND company_owner_rank = 1
          AND company_user_rank = 1
          AND owner_percent_qualified > 0.5
          AND users_percent_qualified > 0.5
          AND owner_percent > 0.2
          AND users_percent > 0.2
        )
        OR (
          has_creator = 0
          AND company_owner_rank = 1
          AND company_user_rank = 1
          AND total_namespace_creator_qualified = 0
          AND owner_percent_qualified > 0.6
          AND users_percent_qualified > 0.6
          AND owner_percent > 0.33
          AND users_percent > 0.33
        )
      ), TRUE, FALSE) AS is_best_match
  FROM domain_matching
  GROUP BY 1, 2, 3

),


namespace_account AS (
  -- Measures and applies logic for determining the best match for a namespace and crm account
  SELECT
    ultimate_parent_namespace_id,
    crm_account_id,
    CASE
      WHEN crm_account_id IS NOT NULL THEN 1
      ELSE 0
    END AS has_account,
    MAX(IFF(is_creator, 1, 0)) AS has_creator,
    COUNT(DISTINCT IFF(is_owner, user_id, NULL)) AS total_owners,
    COUNT(DISTINCT user_id) AS total_users,
    SUM(total_owners) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners,
    SUM(total_users) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users,
    SUM(IFF(crm_account_id IS NOT NULL, total_owners, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners_qualified,
    SUM(IFF(crm_account_id IS NOT NULL, total_users, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users_qualified,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, has_creator DESC, total_owners DESC,
        total_users DESC) AS account_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_owners DESC, total_users DESC) AS account_owner_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS account_user_rank,
    NTH_VALUE(total_users, 1) OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS users_count_1st,
    NTH_VALUE(total_users, 2) OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS users_count_2nd,
    NTH_VALUE(has_account, 2) OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS users_count_2nd_has_account,
    IFF(total_namespace_owners_qualified > 0, total_owners / total_namespace_owners_qualified,
        0) AS owner_percent_qualified,
    --IFF(total_namespace_users_qualified > 0, total_users / total_namespace_users_qualified,
        --0) AS users_percent_qualified, -- ?

    IFF(
      account_user_rank = 1
      AND total_users >= 1
      AND has_account = 1
      AND (
        COALESCE(users_count_2nd_has_account, 0) = 0
        OR (
          users_count_1st > COALESCE(users_count_2nd, 0)
          AND COALESCE(users_count_2nd_has_account, 1) = 1
        )
      ), TRUE, FALSE) AS is_most_matched_account,
    IFF(
      account_rank = 1
      AND has_account = 1
      AND (
        (
          has_creator = 1
          AND account_owner_rank = 1
          AND owner_percent_qualified > 0.5
        )
        OR (
          has_creator = 0
          AND account_owner_rank = 1
          AND owner_percent_qualified > 0.66
        )
      ), TRUE, FALSE) AS is_best_match
  FROM domain_matching
  GROUP BY 1, 2, 3
),

subscription_accounts AS (
  -- Finds the direct link between namespace and crm account.
  SELECT DISTINCT
    dim_namespace_id AS namespace_id,
    dim_crm_account_id AS crm_account_id
  FROM namespace_order_subscription_monthly
  WHERE dim_crm_account_id IS NOT NULL
    AND dim_namespace_id IS NOT NULL
    AND snapshot_month <= DATE_TRUNC('month', CURRENT_DATE())
  QUALIFY MAX(snapshot_month) OVER (PARTITION BY dim_namespace_id) = snapshot_month
    AND ROW_NUMBER() OVER (PARTITION BY dim_namespace_id, snapshot_month ORDER BY order_start_date DESC) = 1
),

direct_company_account AS (
  -- Finds the source company that is associated with the direct link crm account
  SELECT
    subscription_accounts.namespace_id,
    crm_account.dim_crm_account_id AS crm_account_id,
    company.source_company_id
  FROM subscription_accounts
  LEFT JOIN crm_account
    ON subscription_accounts.crm_account_id = crm_account.dim_crm_account_id
  LEFT JOIN company
    ON crm_account.crm_account_zoom_info_dozisf_zi_id = company.company_id
),

source_company_accounts AS (
  -- Finds all of the crm account related to a source company id
  SELECT
    company.source_company_id,
    COUNT(DISTINCT crm_account.dim_crm_account_id) AS number_of_accounts,
    COUNT(DISTINCT crm_account.dim_parent_crm_account_id) AS number_of_parent_accounts,
    ARRAY_AGG(DISTINCT CONCAT(crm_account.dim_crm_account_id, ':',
      crm_account.crm_account_name)) AS list_of_accounts,
    ARRAY_AGG(DISTINCT CONCAT(crm_account.dim_parent_crm_account_id, ':',
      crm_account.parent_crm_account_name)) AS list_of_parent_accounts
  FROM crm_account
  LEFT JOIN company
    ON crm_account.crm_account_zoom_info_dozisf_zi_id::VARCHAR = company.company_id::VARCHAR
  GROUP BY 1

),

mart AS (

  SELECT
    namespaces.namespace_type,
    namespaces.creator_id,
    namespaces.visibility_level,
    namespaces.dim_namespace_id AS namespace_id,
    namespaces.gitlab_plan_title,
    namespaces.gitlab_plan_is_paid,
    namespaces.is_setup_for_company,
    namespaces.created_at,
    namespaces.namespace_is_ultimate_parent,
    namespaces.namespace_is_internal,
    namespaces.namespace_creator_is_blocked,
    source_company_accounts.number_of_accounts,
    source_company_accounts.number_of_parent_accounts,
    source_company_accounts.list_of_accounts,
    source_company_accounts.list_of_parent_accounts,
    direct_company_account.crm_account_id AS actual_crm_account_id,
    direct_company_account.source_company_id AS actual_company_id,
    CASE
      WHEN users.dim_user_id IS NULL THEN 'Missing'
      ELSE COALESCE(users.email_domain_classification, 'Business')
    END AS email_domain_type,
    IFF(namespace_company.ultimate_parent_namespace_id IS NOT NULL,
      namespace_company.source_company_id, NULL) AS predicted_company_id,
    IFF(namespace_account.ultimate_parent_namespace_id IS NOT NULL,
      namespace_account.crm_account_id, NULL) AS predicted_crm_account_id,
    COALESCE(actual_crm_account_id, predicted_crm_account_id) AS namespace_crm_account_id,
    COALESCE(actual_company_id, predicted_company_id) AS namespace_company_id,
    COALESCE(
      IFF(source_company_accounts.number_of_accounts = 1,
        source_company_accounts.list_of_accounts[0], NULL),
      namespace_domain_account.crm_account_id) AS company_linked_account,
    COALESCE(namespace_crm_account_id, company_linked_account) AS combined_crm_account_id,
    CASE
      WHEN actual_crm_account_id IS NOT NULL THEN 'actual_account'
      WHEN predicted_crm_account_id IS NOT NULL THEN 'predicted_account'
      WHEN company_linked_account IS NOT NULL THEN 'company_linked_account'
      WHEN source_company_accounts.number_of_accounts > 1 THEN 'company_linked_multi_account'
      WHEN predicted_company_id IS NOT NULL THEN 'company_linked_but_no_account_match'
      ELSE 'None'
    END AS match_account_type
  FROM namespaces
  LEFT JOIN users
    ON users.dim_user_id = namespaces.creator_id
  LEFT JOIN direct_company_account
    ON direct_company_account.namespace_id = namespaces.dim_namespace_id
  LEFT JOIN namespace_company
    ON namespace_company.ultimate_parent_namespace_id = namespaces.dim_namespace_id
      AND namespace_company.is_best_match = TRUE
  LEFT JOIN namespace_account
    ON namespace_account.ultimate_parent_namespace_id = namespaces.dim_namespace_id
      AND namespace_account.is_best_match = TRUE
  LEFT JOIN namespace_domain_account
    ON namespaces.dim_namespace_id = namespace_domain_account.ultimate_parent_namespace_id
  LEFT JOIN source_company_accounts
    ON source_company_accounts.source_company_id = COALESCE(
      direct_company_account.source_company_id, namespace_company.source_company_id)

)

SELECT *
FROM mart45:T35fd,



WITH company_domain_account AS (

    SELECT * 
    FROM "PROD".workspace_marketing.bdg_company_domain_account

), crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), company AS (

    SELECT * 
    FROM "PROD".workspace_marketing.wk_dim_company

), namespace_order_subscription_monthly AS (

    SELECT * 
    FROM "PROD".common.bdg_namespace_order_subscription_monthly

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), users AS (

    SELECT * 
    FROM "PROD".common.dim_user

),

user_namespace_account_company AS (
  SELECT *
  FROM "PROD".workspace_marketing.wk_fct_user_namespace_account_company
  WHERE is_billable = TRUE
),

domain_matching AS (
  -- Joins dimension tables and changes the grain to the ultimate parent namespace
  SELECT
    user_namespace_account_company.user_id,
    user_namespace_account_company.is_creator,
    user_namespace_account_company.is_owner,
    namespaces.ultimate_parent_namespace_id,
    company.source_company_id,
    users.email_domain,
    users.email_domain_classification,
    COALESCE(
      user_namespace_account_company.crm_account_id,
      company_domain_account.crm_account_id
    ) AS crm_account_id
  FROM user_namespace_account_company
  LEFT JOIN namespaces
    ON user_namespace_account_company.namespace_id = namespaces.dim_namespace_id
  LEFT JOIN company
    ON user_namespace_account_company.company_id = company.company_id
  LEFT JOIN users
    ON user_namespace_account_company.user_id = users.dim_user_id
  LEFT JOIN company_domain_account
    ON company.source_company_id = company_domain_account.company_id
      AND users.email_domain = company_domain_account.email_domain
  QUALIFY ROW_NUMBER() OVER (PARTITION BY
    namespaces.ultimate_parent_namespace_id,
    user_namespace_account_company.user_id
    ORDER BY user_namespace_account_company.access_level ) = 1
),

top_namespace_domain AS (
  -- Find the top used user email domains for the ultimate parent namespace for matching
  SELECT
    domain_matching.ultimate_parent_namespace_id,
    domain_matching.email_domain,
    IFF(domain_matching.email_domain_classification IS NULL, TRUE, FALSE) AS is_business_email,
    COUNT(DISTINCT domain_matching.user_id) AS number_of_users,
    ROW_NUMBER() OVER (
      PARTITION BY domain_matching.ultimate_parent_namespace_id
      ORDER BY number_of_users DESC) AS domain_rank
  FROM domain_matching
  WHERE is_business_email = TRUE
  GROUP BY 1, 2, 3
  QUALIFY domain_rank = 1

),

namespace_domain_account AS (
  -- Finds the crm account related to the top namespace email domain.
  SELECT DISTINCT
    top_namespace_domain.ultimate_parent_namespace_id,
    top_namespace_domain.email_domain,
    company_domain_account.crm_account_id,
    company_domain_account.account_domain_rank,
    ROW_NUMBER() OVER (PARTITION BY
      top_namespace_domain.ultimate_parent_namespace_id,
      top_namespace_domain.email_domain
      ORDER BY company_domain_account.account_domain_rank DESC,
        company_domain_account.crm_account_id ASC) AS namespace_account_rank
  FROM top_namespace_domain
  INNER JOIN company_domain_account
    ON top_namespace_domain.email_domain = company_domain_account.email_domain
  QUALIFY namespace_account_rank = 1


),

namespace_company AS (
  -- Measures and applies logic for determining the best match for a namespace and company
  SELECT
    ultimate_parent_namespace_id,
    source_company_id,
    CASE
      WHEN source_company_id IS NOT NULL THEN 1
      ELSE 0
    END AS has_company,
    MAX(IFF(is_creator, 1, 0)) AS has_creator,
    COUNT(DISTINCT IFF(is_owner, user_id, NULL)) AS total_owners,
    COUNT(DISTINCT user_id) AS total_users,
    SUM(total_owners) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners,
    SUM(total_users) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users,
    SUM(IFF(source_company_id IS NOT NULL, total_owners, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners_qualified,
    SUM(IFF(source_company_id IS NOT NULL, total_users, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users_qualified,
    SUM(IFF(source_company_id IS NOT NULL, has_creator, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_creator_qualified,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_company DESC, has_creator DESC, total_owners DESC,
        total_users DESC) AS company_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_company DESC, total_owners DESC, total_users DESC) AS company_owner_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_company DESC, total_users DESC) AS company_user_rank,

    IFF(total_namespace_owners_qualified > 0, total_owners / total_namespace_owners_qualified,
        0) AS owner_percent_qualified,
    IFF(total_namespace_users_qualified > 0, total_users / total_namespace_users_qualified,
        0) AS users_percent_qualified,
    IFF(total_namespace_owners > 0, total_owners / total_namespace_owners, 0) AS owner_percent,
    IFF(total_namespace_users > 0, total_users / total_namespace_users, 0) AS users_percent,

    -- Matching logic ratios derived from an evaluation of the results of the query
    IFF(company_rank = 1
      AND has_company = 1
      AND (
        (
          has_creator = 1
          AND company_owner_rank = 1
          AND company_user_rank = 1
          AND owner_percent_qualified > 0.5
          AND users_percent_qualified > 0.5
          AND owner_percent > 0.2
          AND users_percent > 0.2
        )
        OR (
          has_creator = 0
          AND company_owner_rank = 1
          AND company_user_rank = 1
          AND total_namespace_creator_qualified = 0
          AND owner_percent_qualified > 0.6
          AND users_percent_qualified > 0.6
          AND owner_percent > 0.33
          AND users_percent > 0.33
        )
      ), TRUE, FALSE) AS is_best_match
  FROM domain_matching
  GROUP BY 1, 2, 3

),


namespace_account AS (
  -- Measures and applies logic for determining the best match for a namespace and crm account
  SELECT
    ultimate_parent_namespace_id,
    crm_account_id,
    CASE
      WHEN crm_account_id IS NOT NULL THEN 1
      ELSE 0
    END AS has_account,
    MAX(IFF(is_creator, 1, 0)) AS has_creator,
    COUNT(DISTINCT IFF(is_owner, user_id, NULL)) AS total_owners,
    COUNT(DISTINCT user_id) AS total_users,
    SUM(total_owners) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners,
    SUM(total_users) OVER (PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users,
    SUM(IFF(crm_account_id IS NOT NULL, total_owners, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_owners_qualified,
    SUM(IFF(crm_account_id IS NOT NULL, total_users, 0)) OVER (
      PARTITION BY ultimate_parent_namespace_id) AS total_namespace_users_qualified,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, has_creator DESC, total_owners DESC,
        total_users DESC) AS account_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_owners DESC, total_users DESC) AS account_owner_rank,
    ROW_NUMBER() OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS account_user_rank,
    NTH_VALUE(total_users, 1) OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS users_count_1st,
    NTH_VALUE(total_users, 2) OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS users_count_2nd,
    NTH_VALUE(has_account, 2) OVER (
      PARTITION BY ultimate_parent_namespace_id
      ORDER BY has_account DESC, total_users DESC) AS users_count_2nd_has_account,
    IFF(total_namespace_owners_qualified > 0, total_owners / total_namespace_owners_qualified,
        0) AS owner_percent_qualified,
    --IFF(total_namespace_users_qualified > 0, total_users / total_namespace_users_qualified,
        --0) AS users_percent_qualified, -- ?

    IFF(
      account_user_rank = 1
      AND total_users >= 1
      AND has_account = 1
      AND (
        COALESCE(users_count_2nd_has_account, 0) = 0
        OR (
          users_count_1st > COALESCE(users_count_2nd, 0)
          AND COALESCE(users_count_2nd_has_account, 1) = 1
        )
      ), TRUE, FALSE) AS is_most_matched_account,
    IFF(
      account_rank = 1
      AND has_account = 1
      AND (
        (
          has_creator = 1
          AND account_owner_rank = 1
          AND owner_percent_qualified > 0.5
        )
        OR (
          has_creator = 0
          AND account_owner_rank = 1
          AND owner_percent_qualified > 0.66
        )
      ), TRUE, FALSE) AS is_best_match
  FROM domain_matching
  GROUP BY 1, 2, 3
),

subscription_accounts AS (
  -- Finds the direct link between namespace and crm account.
  SELECT DISTINCT
    dim_namespace_id AS namespace_id,
    dim_crm_account_id AS crm_account_id
  FROM namespace_order_subscription_monthly
  WHERE dim_crm_account_id IS NOT NULL
    AND dim_namespace_id IS NOT NULL
    AND snapshot_month <= DATE_TRUNC('month', CURRENT_DATE())
  QUALIFY MAX(snapshot_month) OVER (PARTITION BY dim_namespace_id) = snapshot_month
    AND ROW_NUMBER() OVER (PARTITION BY dim_namespace_id, snapshot_month ORDER BY order_start_date DESC) = 1
),

direct_company_account AS (
  -- Finds the source company that is associated with the direct link crm account
  SELECT
    subscription_accounts.namespace_id,
    crm_account.dim_crm_account_id AS crm_account_id,
    company.source_company_id
  FROM subscription_accounts
  LEFT JOIN crm_account
    ON subscription_accounts.crm_account_id = crm_account.dim_crm_account_id
  LEFT JOIN company
    ON crm_account.crm_account_zoom_info_dozisf_zi_id = company.company_id
),

source_company_accounts AS (
  -- Finds all of the crm account related to a source company id
  SELECT
    company.source_company_id,
    COUNT(DISTINCT crm_account.dim_crm_account_id) AS number_of_accounts,
    COUNT(DISTINCT crm_account.dim_parent_crm_account_id) AS number_of_parent_accounts,
    ARRAY_AGG(DISTINCT CONCAT(crm_account.dim_crm_account_id, ':',
      crm_account.crm_account_name)) AS list_of_accounts,
    ARRAY_AGG(DISTINCT CONCAT(crm_account.dim_parent_crm_account_id, ':',
      crm_account.parent_crm_account_name)) AS list_of_parent_accounts
  FROM crm_account
  LEFT JOIN company
    ON crm_account.crm_account_zoom_info_dozisf_zi_id::VARCHAR = company.company_id::VARCHAR
  GROUP BY 1

),

mart AS (

  SELECT
    namespaces.namespace_type,
    namespaces.creator_id,
    namespaces.visibility_level,
    namespaces.dim_namespace_id AS namespace_id,
    namespaces.gitlab_plan_title,
    namespaces.gitlab_plan_is_paid,
    namespaces.is_setup_for_company,
    namespaces.created_at,
    namespaces.namespace_is_ultimate_parent,
    namespaces.namespace_is_internal,
    namespaces.namespace_creator_is_blocked,
    source_company_accounts.number_of_accounts,
    source_company_accounts.number_of_parent_accounts,
    source_company_accounts.list_of_accounts,
    source_company_accounts.list_of_parent_accounts,
    direct_company_account.crm_account_id AS actual_crm_account_id,
    direct_company_account.source_company_id AS actual_company_id,
    CASE
      WHEN users.dim_user_id IS NULL THEN 'Missing'
      ELSE COALESCE(users.email_domain_classification, 'Business')
    END AS email_domain_type,
    IFF(namespace_company.ultimate_parent_namespace_id IS NOT NULL,
      namespace_company.source_company_id, NULL) AS predicted_company_id,
    IFF(namespace_account.ultimate_parent_namespace_id IS NOT NULL,
      namespace_account.crm_account_id, NULL) AS predicted_crm_account_id,
    COALESCE(actual_crm_account_id, predicted_crm_account_id) AS namespace_crm_account_id,
    COALESCE(actual_company_id, predicted_company_id) AS namespace_company_id,
    COALESCE(
      IFF(source_company_accounts.number_of_accounts = 1,
        source_company_accounts.list_of_accounts[0], NULL),
      namespace_domain_account.crm_account_id) AS company_linked_account,
    COALESCE(namespace_crm_account_id, company_linked_account) AS combined_crm_account_id,
    CASE
      WHEN actual_crm_account_id IS NOT NULL THEN 'actual_account'
      WHEN predicted_crm_account_id IS NOT NULL THEN 'predicted_account'
      WHEN company_linked_account IS NOT NULL THEN 'company_linked_account'
      WHEN source_company_accounts.number_of_accounts > 1 THEN 'company_linked_multi_account'
      WHEN predicted_company_id IS NOT NULL THEN 'company_linked_but_no_account_match'
      ELSE 'None'
    END AS match_account_type
  FROM namespaces
  LEFT JOIN users
    ON users.dim_user_id = namespaces.creator_id
  LEFT JOIN direct_company_account
    ON direct_company_account.namespace_id = namespaces.dim_namespace_id
  LEFT JOIN namespace_company
    ON namespace_company.ultimate_parent_namespace_id = namespaces.dim_namespace_id
      AND namespace_company.is_best_match = TRUE
  LEFT JOIN namespace_account
    ON namespace_account.ultimate_parent_namespace_id = namespaces.dim_namespace_id
      AND namespace_account.is_best_match = TRUE
  LEFT JOIN namespace_domain_account
    ON namespaces.dim_namespace_id = namespace_domain_account.ultimate_parent_namespace_id
  LEFT JOIN source_company_accounts
    ON source_company_accounts.source_company_id = COALESCE(
      direct_company_account.source_company_id, namespace_company.source_company_id)

)

SELECT *
FROM mart46:T886,{{ simple_cte([
    ('ci_runner_activity', 'fct_ci_runner_activity'),
    ('dim_namespace', 'dim_namespace'),
    ('dim_date', 'dim_date')
]) }}

, ci_runner_activity_monthly AS (

    SELECT
      dim_date.first_day_of_month                                                       AS report_month,
      ci_runner_activity.dim_namespace_id,
      ci_runner_activity.dim_ci_runner_id,
      ci_runner_activity.dim_ci_pipeline_id,
      ci_runner_activity.dim_ci_stage_id,
      ci_runner_activity.is_paid_by_gitlab,
      ci_runner_activity.public_projects_minutes_cost_factor,
      ci_runner_activity.private_projects_minutes_cost_factor,
      SUM(ci_build_duration_in_s)                                                       AS ci_build_duration_in_s
    FROM ci_runner_activity
    INNER JOIN dim_date
      ON TO_DATE(ci_runner_activity.ci_build_started_at) = dim_date.date_day
    WHERE ci_runner_activity.ci_build_finished_at IS NOT NULL
    {{ dbt_utils.group_by(n=8) }}

), joined AS (

    SELECT
      ci_runner_activity_monthly.report_month,
      dim_namespace.dim_namespace_id,
      dim_namespace.ultimate_parent_namespace_id,
      dim_namespace.gitlab_plan_id                                                      AS dim_plan_id,
      ci_runner_activity_monthly.dim_ci_runner_id,
      ci_runner_activity_monthly.dim_ci_pipeline_id,
      ci_runner_activity_monthly.dim_ci_stage_id,


      -- CI RUNNER METRICS
      ci_runner_activity_monthly.ci_build_duration_in_s,
      ci_runner_activity_monthly.public_projects_minutes_cost_factor,
      ci_runner_activity_monthly.private_projects_minutes_cost_factor,

      -- CI RUNNER ACTIVITY METADATA
      ci_runner_activity_monthly.is_paid_by_gitlab,
      dim_namespace.namespace_is_internal,
      dim_namespace.gitlab_plan_title                                   AS ultimate_parent_plan_title

    FROM ci_runner_activity_monthly
    INNER JOIN dim_namespace
      ON ci_runner_activity_monthly.dim_namespace_id = dim_namespace.dim_namespace_id

)

{{ dbt_audit(
    cte_ref="joined",
    created_by="@ischweickartDD",
    updated_by="@chrissharp",
    created_date="2021-07-30",
    updated_date="2021-10-11"
) }}47:T9cc,

WITH ci_runner_activity AS (

    SELECT * 
    FROM "PROD".common.fct_ci_runner_activity

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

)

, ci_runner_activity_monthly AS (

    SELECT
      dim_date.first_day_of_month                                                       AS report_month,
      ci_runner_activity.dim_namespace_id,
      ci_runner_activity.dim_ci_runner_id,
      ci_runner_activity.dim_ci_pipeline_id,
      ci_runner_activity.dim_ci_stage_id,
      ci_runner_activity.is_paid_by_gitlab,
      ci_runner_activity.public_projects_minutes_cost_factor,
      ci_runner_activity.private_projects_minutes_cost_factor,
      SUM(ci_build_duration_in_s)                                                       AS ci_build_duration_in_s
    FROM ci_runner_activity
    INNER JOIN dim_date
      ON TO_DATE(ci_runner_activity.ci_build_started_at) = dim_date.date_day
    WHERE ci_runner_activity.ci_build_finished_at IS NOT NULL
    group by 1,2,3,4,5,6,7,8

), joined AS (

    SELECT
      ci_runner_activity_monthly.report_month,
      dim_namespace.dim_namespace_id,
      dim_namespace.ultimate_parent_namespace_id,
      dim_namespace.gitlab_plan_id                                                      AS dim_plan_id,
      ci_runner_activity_monthly.dim_ci_runner_id,
      ci_runner_activity_monthly.dim_ci_pipeline_id,
      ci_runner_activity_monthly.dim_ci_stage_id,


      -- CI RUNNER METRICS
      ci_runner_activity_monthly.ci_build_duration_in_s,
      ci_runner_activity_monthly.public_projects_minutes_cost_factor,
      ci_runner_activity_monthly.private_projects_minutes_cost_factor,

      -- CI RUNNER ACTIVITY METADATA
      ci_runner_activity_monthly.is_paid_by_gitlab,
      dim_namespace.namespace_is_internal,
      dim_namespace.gitlab_plan_title                                   AS ultimate_parent_plan_title

    FROM ci_runner_activity_monthly
    INNER JOIN dim_namespace
      ON ci_runner_activity_monthly.dim_namespace_id = dim_namespace.dim_namespace_id

)

SELECT
      *,
      '@ischweickartDD'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-07-30'::DATE        AS model_created_date,
      '2021-10-11'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM joined48:T9ed,{{ simple_cte([
   ('ci_runner_activity', 'fct_ci_runner_activity'),
   ('dim_namespace', 'dim_namespace'),
   ('dim_project', 'dim_project'),
   ('dim_date', 'dim_date')
]) }}

, ci_runner_activity_daily AS (

   SELECT
     dim_date.date_day                                                 AS report_date,
     ci_runner_activity.dim_project_id,
     ci_runner_activity.dim_namespace_id,
     ci_runner_activity.dim_ci_runner_id,
     ci_runner_activity.dim_ci_pipeline_id,
     ci_runner_activity.dim_ci_stage_id,
     ci_runner_activity.is_paid_by_gitlab,
     ci_runner_activity.public_projects_minutes_cost_factor,
     ci_runner_activity.private_projects_minutes_cost_factor,
     COUNT(DISTINCT ci_runner_activity.dim_ci_build_id)                AS job_count,
     SUM(ci_runner_activity.ci_build_duration_in_s)                    AS ci_build_duration_in_s
   FROM ci_runner_activity
   INNER JOIN dim_date
      ON TO_DATE(ci_runner_activity.ci_build_started_at) = dim_date.date_day
   WHERE ci_runner_activity.ci_build_finished_at IS NOT NULL
   {{ dbt_utils.group_by(n=9) }}

), joined AS (

   SELECT
     ci_runner_activity_daily.report_date,
     dim_project.dim_project_id,
     dim_namespace.dim_namespace_id,
     dim_namespace.ultimate_parent_namespace_id,
     dim_namespace.gitlab_plan_id                                      AS dim_plan_id,
     ci_runner_activity_daily.dim_ci_runner_id,
     ci_runner_activity_daily.dim_ci_pipeline_id,
     ci_runner_activity_daily.dim_ci_stage_id,


     -- CI RUNNER METRICS
     ci_runner_activity_daily.job_count,
     ci_runner_activity_daily.ci_build_duration_in_s,
     ci_runner_activity_daily.public_projects_minutes_cost_factor,
     ci_runner_activity_daily.private_projects_minutes_cost_factor,

     -- CI RUNNER ACTIVITY METADATA
     ci_runner_activity_daily.is_paid_by_gitlab,
     dim_project.visibility_level                                      AS project_visibility_level,
     dim_project.project_path,
     dim_namespace.namespace_is_internal,
     dim_namespace.gitlab_plan_title                                   AS ultimate_parent_plan_title

   FROM ci_runner_activity_daily
   INNER JOIN dim_project
     ON ci_runner_activity_daily.dim_project_id = dim_project.dim_project_id
   INNER JOIN dim_namespace
     ON ci_runner_activity_daily.dim_namespace_id = dim_namespace.dim_namespace_id

)

{{ dbt_audit(
   cte_ref="joined",
   created_by="@ischweickartDD",
   updated_by="@davis_townsend",
   created_date="2021-07-30",
   updated_date="2021-11-09"
) }}49:Tb61,

WITH ci_runner_activity AS (

    SELECT * 
    FROM "PROD".common.fct_ci_runner_activity

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), dim_project AS (

    SELECT * 
    FROM "PROD".common.dim_project

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

)

, ci_runner_activity_daily AS (

   SELECT
     dim_date.date_day                                                 AS report_date,
     ci_runner_activity.dim_project_id,
     ci_runner_activity.dim_namespace_id,
     ci_runner_activity.dim_ci_runner_id,
     ci_runner_activity.dim_ci_pipeline_id,
     ci_runner_activity.dim_ci_stage_id,
     ci_runner_activity.is_paid_by_gitlab,
     ci_runner_activity.public_projects_minutes_cost_factor,
     ci_runner_activity.private_projects_minutes_cost_factor,
     COUNT(DISTINCT ci_runner_activity.dim_ci_build_id)                AS job_count,
     SUM(ci_runner_activity.ci_build_duration_in_s)                    AS ci_build_duration_in_s
   FROM ci_runner_activity
   INNER JOIN dim_date
      ON TO_DATE(ci_runner_activity.ci_build_started_at) = dim_date.date_day
   WHERE ci_runner_activity.ci_build_finished_at IS NOT NULL
   group by 1,2,3,4,5,6,7,8,9

), joined AS (

   SELECT
     ci_runner_activity_daily.report_date,
     dim_project.dim_project_id,
     dim_namespace.dim_namespace_id,
     dim_namespace.ultimate_parent_namespace_id,
     dim_namespace.gitlab_plan_id                                      AS dim_plan_id,
     ci_runner_activity_daily.dim_ci_runner_id,
     ci_runner_activity_daily.dim_ci_pipeline_id,
     ci_runner_activity_daily.dim_ci_stage_id,


     -- CI RUNNER METRICS
     ci_runner_activity_daily.job_count,
     ci_runner_activity_daily.ci_build_duration_in_s,
     ci_runner_activity_daily.public_projects_minutes_cost_factor,
     ci_runner_activity_daily.private_projects_minutes_cost_factor,

     -- CI RUNNER ACTIVITY METADATA
     ci_runner_activity_daily.is_paid_by_gitlab,
     dim_project.visibility_level                                      AS project_visibility_level,
     dim_project.project_path,
     dim_namespace.namespace_is_internal,
     dim_namespace.gitlab_plan_title                                   AS ultimate_parent_plan_title

   FROM ci_runner_activity_daily
   INNER JOIN dim_project
     ON ci_runner_activity_daily.dim_project_id = dim_project.dim_project_id
   INNER JOIN dim_namespace
     ON ci_runner_activity_daily.dim_namespace_id = dim_namespace.dim_namespace_id

)

SELECT
      *,
      '@ischweickartDD'::VARCHAR       AS created_by,
      '@davis_townsend'::VARCHAR       AS updated_by,
      '2021-07-30'::DATE        AS model_created_date,
      '2021-11-09'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM joined4a:Tfd2,{{ config(

    materialized='incremental',
    unique_key='behavior_structured_event_pk',
    tags=['product'],
    full_refresh= only_force_full_refresh(),
    on_schema_change='sync_all_columns',
    cluster_by=['behavior_at::DATE','event_action']
  )

}}

{{ simple_cte([
    ('event', 'dim_behavior_event'),
    ('namespace', 'dim_namespace'),
    ('project', 'dim_project'),
    ('operating_system', 'dim_behavior_operating_system'),
    ('browser','dim_behavior_browser'),
    ('plan','dim_plan'),
    ('dates', 'dim_date')
]) }},

structured_behavior AS (

  SELECT
    behavior_structured_event_pk,
    behavior_at,
    app_id,
    user_snowplow_domain_id,
    contexts,
    page_url_path,
    page_url_fragment,
    gsc_google_analytics_client_id,
    gsc_pseudonymized_user_id,
    gsc_extra,
    gsc_plan,
    gsc_source,
    event_value,
    session_index,
    session_id,
    has_gitlab_service_ping_context,
    has_gitlab_experiment_context,
    has_customer_standard_context,
    dim_behavior_referrer_page_sk,
    dim_behavior_event_sk,
    dim_namespace_id,
    dim_project_id,
    dim_behavior_operating_system_sk,
    dim_behavior_browser_sk,
    dim_plan_sk
  FROM {{ ref('fct_behavior_structured_event') }}
  {% if is_incremental() %}

    WHERE behavior_at > (SELECT MAX({{ var('incremental_backfill_date', 'behavior_at') }}) FROM {{ this }})
      AND behavior_at <= (SELECT DATEADD(MONTH, 1, MAX({{ var('incremental_backfill_date', 'behavior_at') }})) FROM {{ this }})

  {% else %}
  -- This will cover the first creation of the table or a full refresh and requires that the table be backfilled
  WHERE behavior_at > DATEADD('day', -30 ,CURRENT_DATE())

  {% endif %}

),

report AS (
  SELECT
    structured_behavior.behavior_structured_event_pk,
    structured_behavior.behavior_at,
    dates.date_actual AS behavior_date,
    structured_behavior.app_id,
    structured_behavior.user_snowplow_domain_id,
    structured_behavior.contexts,
    structured_behavior.page_url_path,
    structured_behavior.page_url_fragment,
    structured_behavior.gsc_google_analytics_client_id,
    structured_behavior.gsc_pseudonymized_user_id,
    structured_behavior.gsc_extra,
    structured_behavior.gsc_plan,
    structured_behavior.gsc_source,
    structured_behavior.event_value,
    structured_behavior.session_index,
    structured_behavior.session_id,
    structured_behavior.has_gitlab_service_ping_context,
    structured_behavior.has_gitlab_experiment_context,
    structured_behavior.has_customer_standard_context,
    event.event_category,
    event.event_action,
    event.event_label,
    event.event_property,
    namespace.dim_namespace_id,
    namespace.ultimate_parent_namespace_id,
    namespace.namespace_is_internal,
    namespace.namespace_is_ultimate_parent,
    namespace.namespace_type,
    namespace.visibility_level,
    project.dim_project_id,
    operating_system.device_type,
    operating_system.is_device_mobile,
    browser.browser_name,
    browser.dim_behavior_browser_sk,
    plan.dim_plan_id,
    plan.plan_id_modified,
    plan.plan_name,
    plan.plan_name_modified,
    structured_behavior.dim_behavior_referrer_page_sk
  FROM structured_behavior
  LEFT JOIN event
    ON structured_behavior.dim_behavior_event_sk = event.dim_behavior_event_sk
  LEFT JOIN namespace
    ON structured_behavior.dim_namespace_id = namespace.dim_namespace_id
  LEFT JOIN project
    ON structured_behavior.dim_project_id = project.dim_project_id
  LEFT JOIN operating_system
    ON structured_behavior.dim_behavior_operating_system_sk = operating_system.dim_behavior_operating_system_sk
  LEFT JOIN browser
    ON structured_behavior.dim_behavior_browser_sk = browser.dim_behavior_browser_sk
  LEFT JOIN plan
    ON structured_behavior.dim_plan_sk = plan.dim_plan_sk
  LEFT JOIN dates
    ON{{ get_date_id('structured_behavior.behavior_at') }} = dates.date_id
)

{{ dbt_audit(
    cte_ref="report",
    created_by="@pempey",
    updated_by="@pempey",
    created_date="2023-02-22",
    updated_date="2023-03-27"
) }}4b:T5f0,**Description:** Enriched Snowplow table for the analysis of structured events. This is an enhanced version of `fct_behavior_structured_event`. 

**Data Grain:** behavior_structured_event_pk

This ID is generated using `event_id` from [prep_snowplow_unnested_events_all](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.prep_snowplow_unnested_events_all) 

**Filters Applied to Model:**
- `Inherited` - This model only includes Structured events (when `event=struct` from `dim_behavior_event`)

**Tips for use:**
- There is a cluster key on `behavior_at::DATE`. Using `behavior_at` in a WHERE clause or INNER JOIN will improve query performance.
- Join this model to `dim_behavior_website_page` using `dim_behavior_website_page_sk` in order to pull in information about the page URL
- Join this model to `dim_behavior_operating_system` using `dim_behavior_operating_system_sk` in order to pull in information about the user OS 
- Join this model to `dim_behavior_browser` using `dim_behavior_browser_sk` in  order to pull in information about the user browser 

**Other Comments:**
- Structured events are custom events implemented with five parameters: event_category, event_action, event_label, event_property and event_value. Snowplow documentation on [types of events](https://docs.snowplow.io/docs/understanding-tracking-design/out-of-the-box-vs-custom-events-and-entities/).
- There is information on some Snowplow structured events in the [Snowplow event dictionary](https://metrics.gitlab.com/snowplow)4c:Tffa,



WITH event AS (

    SELECT * 
    FROM "PROD".common.dim_behavior_event

), namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), project AS (

    SELECT * 
    FROM "PROD".common.dim_project

), operating_system AS (

    SELECT * 
    FROM "PROD".common.dim_behavior_operating_system

), browser AS (

    SELECT * 
    FROM "PROD".common.dim_behavior_browser

), plan AS (

    SELECT * 
    FROM "PROD".common.dim_plan

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

),

structured_behavior AS (

  SELECT
    behavior_structured_event_pk,
    behavior_at,
    app_id,
    user_snowplow_domain_id,
    contexts,
    page_url_path,
    page_url_fragment,
    gsc_google_analytics_client_id,
    gsc_pseudonymized_user_id,
    gsc_extra,
    gsc_plan,
    gsc_source,
    event_value,
    session_index,
    session_id,
    has_gitlab_service_ping_context,
    has_gitlab_experiment_context,
    has_customer_standard_context,
    dim_behavior_referrer_page_sk,
    dim_behavior_event_sk,
    dim_namespace_id,
    dim_project_id,
    dim_behavior_operating_system_sk,
    dim_behavior_browser_sk,
    dim_plan_sk
  FROM "PROD".common.fct_behavior_structured_event
  

    WHERE behavior_at > (SELECT MAX(behavior_at) FROM "PROD".common_mart.mart_behavior_structured_event)
      AND behavior_at <= (SELECT DATEADD(MONTH, 1, MAX(behavior_at)) FROM "PROD".common_mart.mart_behavior_structured_event)

  

),

report AS (
  SELECT
    structured_behavior.behavior_structured_event_pk,
    structured_behavior.behavior_at,
    dates.date_actual AS behavior_date,
    structured_behavior.app_id,
    structured_behavior.user_snowplow_domain_id,
    structured_behavior.contexts,
    structured_behavior.page_url_path,
    structured_behavior.page_url_fragment,
    structured_behavior.gsc_google_analytics_client_id,
    structured_behavior.gsc_pseudonymized_user_id,
    structured_behavior.gsc_extra,
    structured_behavior.gsc_plan,
    structured_behavior.gsc_source,
    structured_behavior.event_value,
    structured_behavior.session_index,
    structured_behavior.session_id,
    structured_behavior.has_gitlab_service_ping_context,
    structured_behavior.has_gitlab_experiment_context,
    structured_behavior.has_customer_standard_context,
    event.event_category,
    event.event_action,
    event.event_label,
    event.event_property,
    namespace.dim_namespace_id,
    namespace.ultimate_parent_namespace_id,
    namespace.namespace_is_internal,
    namespace.namespace_is_ultimate_parent,
    namespace.namespace_type,
    namespace.visibility_level,
    project.dim_project_id,
    operating_system.device_type,
    operating_system.is_device_mobile,
    browser.browser_name,
    browser.dim_behavior_browser_sk,
    plan.dim_plan_id,
    plan.plan_id_modified,
    plan.plan_name,
    plan.plan_name_modified,
    structured_behavior.dim_behavior_referrer_page_sk
  FROM structured_behavior
  LEFT JOIN event
    ON structured_behavior.dim_behavior_event_sk = event.dim_behavior_event_sk
  LEFT JOIN namespace
    ON structured_behavior.dim_namespace_id = namespace.dim_namespace_id
  LEFT JOIN project
    ON structured_behavior.dim_project_id = project.dim_project_id
  LEFT JOIN operating_system
    ON structured_behavior.dim_behavior_operating_system_sk = operating_system.dim_behavior_operating_system_sk
  LEFT JOIN browser
    ON structured_behavior.dim_behavior_browser_sk = browser.dim_behavior_browser_sk
  LEFT JOIN plan
    ON structured_behavior.dim_plan_sk = plan.dim_plan_sk
  LEFT JOIN dates
    ON

  TO_NUMBER(TO_CHAR(structured_behavior.behavior_at::DATE,'YYYYMMDD'),'99999999')

 = dates.date_id
)

SELECT
      *,
      '@pempey'::VARCHAR       AS created_by,
      '@pempey'::VARCHAR       AS updated_by,
      '2023-02-22'::DATE        AS model_created_date,
      '2023-03-27'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

                CURRENT_TIMESTAMP()               AS dbt_created_at

            

        
    
    

    FROM report4d:T555,{{ config(
    materialized='table',
    tags=["mnpi_exception", "product"]
) }}

{{ simple_cte([
    ('dim_namespace', 'dim_namespace'),
    ('fct_event_namespace_daily', 'fct_event_namespace_daily'),
    ('dim_date', 'dim_date')
    ])
}},

fact AS (

  SELECT
    {{ dbt_utils.star(from=ref('fct_event_namespace_daily'), except=["CREATED_BY",
        "UPDATED_BY","CREATED_DATE","UPDATED_DATE","MODEL_CREATED_DATE","MODEL_UPDATED_DATE","DBT_UPDATED_AT","DBT_CREATED_AT"]) }}
  FROM fct_event_namespace_daily
  
), 

fact_with_dims AS (

  SELECT
    fact.*,
    dim_namespace.namespace_type AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,
    dim_date.first_day_of_month AS event_calendar_month,
    dim_date.quarter_name AS event_calendar_quarter,
    dim_date.year_actual AS event_calendar_year
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_date
    ON fact.dim_event_date_id = dim_date.date_id
        
)

{{ dbt_audit(
    cte_ref="fact_with_dims",
    created_by="@icooper-acp",
    updated_by="@tpoole1",
    created_date="2022-02-15",
    updated_date="2022-08-01"
) }}4e:T7de,**Description:** Enriched GitLab.com usage event data for valid events, grouped by date, event name, and ultimate parent namespace. This is an enhanced version of `fct_event_namespace_daily`
- This data is enhanced with additional namespace attributes for ease of analysis

**Data Grain:**
- event_date
- event_name
- dim_ultimate_parent_namespace_id

**Filters Applied to Model:**
- `Inherited` - Include valid events for standard analysis and reporting:
  - Exclude events where the event created date < the user created date (`days_since_user_creation_at_event_date >= 0`)
    - These are usually events from projects that were created before the GitLab.com user and then imported after the user is created 
  - Exclude events from blocked users (based on the current user state)
- `Inherited` - Rolling 24 months of data
- `Inherited` - Exclude events not associated with a namespace (ex: 'users_created')

**Business Logic in this Model:**
- `Inherited` - A namespace's plan information (ex: `plan_name_at_event_date`) is determined by the plan for the last event on a given day
- `Inherited` - The ultimate parent namespace's subscription, billing, and account information (ex: `dim_latest_subscription_id`) reflects the most recent available attributes associated with that namespace
- `Inherited` - `dim_latest_product_tier_id` reflects the _current_ product tier of the namespace
- `Inherited` - `section_name`, `stage_name`, `group_name`, and xMAU metric flags (ex: `is_gmau`) are based on the _current_ event mappings and may not match the mapping at the time of the event

**Other Comments:**
- Note about the `action` event: This "event" captures everything from the [Events API](https://docs.gitlab.com/ee/api/events.html) - issue comments, MRs created, etc. While the `action` event is mapped to the Manage stage, the events included actually span multiple stages (plan, create, etc), which is why this is used for UMAU. Be mindful of the impact of including `action` during stage adoption analysis.4f:T77a,



WITH dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), fct_event_namespace_daily AS (

    SELECT * 
    FROM "PROD".common.fct_event_namespace_daily

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

),

fact AS (

  SELECT
    "EVENT_NAMESPACE_DAILY_PK",
  "DIM_LATEST_PRODUCT_TIER_ID",
  "DIM_LATEST_SUBSCRIPTION_ID",
  "DIM_CRM_ACCOUNT_ID",
  "DIM_BILLING_ACCOUNT_ID",
  "DIM_ULTIMATE_PARENT_NAMESPACE_ID",
  "DIM_EVENT_DATE_ID",
  "PLAN_ID_AT_EVENT_DATE",
  "PLAN_NAME_AT_EVENT_DATE",
  "PLAN_WAS_PAID_AT_EVENT_DATE",
  "DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE",
  "EVENT_DATE",
  "EVENT_NAME",
  "STAGE_NAME",
  "SECTION_NAME",
  "GROUP_NAME",
  "DATA_SOURCE",
  "IS_SMAU",
  "IS_GMAU",
  "IS_UMAU",
  "EVENT_COUNT",
  "USER_COUNT"
  FROM fct_event_namespace_daily
  
), 

fact_with_dims AS (

  SELECT
    fact.*,
    dim_namespace.namespace_type AS ultimate_parent_namespace_type,
    dim_namespace.namespace_is_internal,
    dim_namespace.namespace_creator_is_blocked,
    dim_namespace.created_at AS namespace_created_at,
    CAST(dim_namespace.created_at AS DATE) AS namespace_created_date,
    dim_date.first_day_of_month AS event_calendar_month,
    dim_date.quarter_name AS event_calendar_quarter,
    dim_date.year_actual AS event_calendar_year
  FROM fact
  LEFT JOIN dim_namespace
    ON fact.dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id
  LEFT JOIN dim_date
    ON fact.dim_event_date_id = dim_date.date_id
        
)

SELECT
      *,
      '@icooper-acp'::VARCHAR       AS created_by,
      '@tpoole1'::VARCHAR       AS updated_by,
      '2022-02-15'::DATE        AS model_created_date,
      '2022-08-01'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM fact_with_dims50:T4e61,{{ config(
    tags=["mnpi_exception","product"]
) }}

{{ simple_cte([
    ('free_user_metrics', 'fct_ping_instance_free_user_metrics_monthly'),
    ('crm_accounts', 'dim_crm_account'),
    ('namespaces', 'dim_namespace')
]) }}

, joined AS (

    SELECT
      free_user_metrics.reporting_month,
      free_user_metrics.dim_namespace_id,
      namespaces.namespace_name,
      free_user_metrics.uuid,
      free_user_metrics.hostname,
      free_user_metrics.dim_installation_id,
      free_user_metrics.delivery_type,
      free_user_metrics.deployment_type,
      free_user_metrics.cleaned_version,
      {{ get_keyed_nulls('crm_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      crm_account_name,
      parent_crm_account_name,
      free_user_metrics.ping_date,
      free_user_metrics.installation_creation_date,
      -- Wave 2 & 3
      free_user_metrics.umau_28_days_user,
      free_user_metrics.action_monthly_active_users_project_repo_28_days_user,
      free_user_metrics.merge_requests_28_days_user,
      free_user_metrics.projects_with_repositories_enabled_28_days_user,
      free_user_metrics.commit_comment_all_time_event,
      free_user_metrics.source_code_pushes_all_time_event,
      free_user_metrics.ci_pipelines_28_days_user,
      free_user_metrics.ci_internal_pipelines_28_days_user,
      free_user_metrics.ci_builds_28_days_user,
      free_user_metrics.ci_builds_all_time_user,
      free_user_metrics.ci_builds_all_time_event,
      free_user_metrics.ci_runners_all_time_event,
      free_user_metrics.auto_devops_enabled_all_time_event,
      free_user_metrics.gitlab_shared_runners_enabled,
      free_user_metrics.container_registry_enabled,
      free_user_metrics.template_repositories_all_time_event,
      free_user_metrics.ci_pipeline_config_repository_28_days_user,
      free_user_metrics.user_unique_users_all_secure_scanners_28_days_user,
      free_user_metrics.user_sast_jobs_28_days_user,
      free_user_metrics.user_dast_jobs_28_days_user,
      free_user_metrics.user_dependency_scanning_jobs_28_days_user,
      free_user_metrics.user_license_management_jobs_28_days_user,
      free_user_metrics.user_secret_detection_jobs_28_days_user,
      free_user_metrics.user_container_scanning_jobs_28_days_user,
      free_user_metrics.object_store_packages_enabled,
      free_user_metrics.projects_with_packages_all_time_event,
      free_user_metrics.projects_with_packages_28_days_event,
      free_user_metrics.deployments_28_days_user,
      free_user_metrics.releases_28_days_user,
      free_user_metrics.epics_28_days_user,
      free_user_metrics.issues_28_days_user,
      -- Wave 3.1
      free_user_metrics.ci_internal_pipelines_all_time_event,
      free_user_metrics.ci_external_pipelines_all_time_event,
      free_user_metrics.merge_requests_all_time_event,
      free_user_metrics.todos_all_time_event,
      free_user_metrics.epics_all_time_event,
      free_user_metrics.issues_all_time_event,
      free_user_metrics.projects_all_time_event,
      free_user_metrics.deployments_28_days_event,
      free_user_metrics.packages_28_days_event,
      free_user_metrics.sast_jobs_all_time_event,
      free_user_metrics.dast_jobs_all_time_event,
      free_user_metrics.dependency_scanning_jobs_all_time_event,
      free_user_metrics.license_management_jobs_all_time_event,
      free_user_metrics.secret_detection_jobs_all_time_event,
      free_user_metrics.container_scanning_jobs_all_time_event,
      free_user_metrics.projects_jenkins_active_all_time_event,
      free_user_metrics.projects_bamboo_active_all_time_event,
      free_user_metrics.projects_jira_active_all_time_event,
      free_user_metrics.projects_drone_ci_active_all_time_event,
      free_user_metrics.projects_github_active_all_time_event,
      free_user_metrics.projects_jira_server_active_all_time_event,
      free_user_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      free_user_metrics.projects_with_repositories_enabled_all_time_event,
      free_user_metrics.protected_branches_all_time_event,
      free_user_metrics.remote_mirrors_all_time_event,
      free_user_metrics.projects_enforcing_code_owner_approval_28_days_user,
      free_user_metrics.project_clusters_enabled_28_days_user,
      free_user_metrics.analytics_28_days_user,
      free_user_metrics.issues_edit_28_days_user,
      free_user_metrics.user_packages_28_days_user,
      free_user_metrics.terraform_state_api_28_days_user,
      free_user_metrics.incident_management_28_days_user,
      -- Wave 3.2
      free_user_metrics.auto_devops_enabled,
      free_user_metrics.gitaly_clusters_instance,
      free_user_metrics.epics_deepest_relationship_level_instance,
      free_user_metrics.clusters_applications_cilium_all_time_event,
      free_user_metrics.network_policy_forwards_all_time_event,
      free_user_metrics.network_policy_drops_all_time_event,
      free_user_metrics.requirements_with_test_report_all_time_event,
      free_user_metrics.requirement_test_reports_ci_all_time_event,
      free_user_metrics.projects_imported_from_github_all_time_event,
      free_user_metrics.projects_jira_cloud_active_all_time_event,
      free_user_metrics.projects_jira_dvcs_server_active_all_time_event,
      free_user_metrics.service_desk_issues_all_time_event,
      free_user_metrics.ci_pipelines_all_time_user,
      free_user_metrics.service_desk_issues_28_days_user,
      free_user_metrics.projects_jira_active_28_days_user,
      free_user_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      free_user_metrics.projects_jira_dvcs_server_active_28_days_user,
      free_user_metrics.merge_requests_with_required_code_owners_28_days_user,
      free_user_metrics.analytics_value_stream_28_days_event,
      free_user_metrics.code_review_user_approve_mr_28_days_user,
      free_user_metrics.epics_usage_28_days_user,
      free_user_metrics.ci_templates_usage_28_days_event,
      free_user_metrics.project_management_issue_milestone_changed_28_days_user,
      free_user_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      free_user_metrics.protected_branches_28_days_user,
      free_user_metrics.ci_cd_lead_time_usage_28_days_event,
      free_user_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      free_user_metrics.projects_with_repositories_enabled_all_time_user,
      free_user_metrics.api_fuzzing_jobs_usage_28_days_user,
      free_user_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      free_user_metrics.api_fuzzing_pipeline_usage_28_days_event,
      free_user_metrics.container_scanning_pipeline_usage_28_days_event,
      free_user_metrics.dependency_scanning_pipeline_usage_28_days_event,
      free_user_metrics.sast_pipeline_usage_28_days_event,
      free_user_metrics.secret_detection_pipeline_usage_28_days_event,
      free_user_metrics.dast_pipeline_usage_28_days_event,
      free_user_metrics.coverage_fuzzing_jobs_28_days_user,
      free_user_metrics.environments_all_time_event,
      free_user_metrics.feature_flags_all_time_event,
      free_user_metrics.successful_deployments_28_days_event,
      free_user_metrics.failed_deployments_28_days_event,
      free_user_metrics.projects_compliance_framework_all_time_event,
      free_user_metrics.commit_ci_config_file_28_days_user,
      free_user_metrics.view_audit_all_time_user,
      -- Wave 5.2
      free_user_metrics.dependency_scanning_jobs_all_time_user,
      free_user_metrics.analytics_devops_adoption_all_time_user,
      free_user_metrics.projects_imported_all_time_event,
      free_user_metrics.preferences_security_dashboard_28_days_user,
      free_user_metrics.web_ide_edit_28_days_user,
      free_user_metrics.auto_devops_pipelines_all_time_event,
      free_user_metrics.projects_prometheus_active_all_time_event,
      free_user_metrics.prometheus_enabled,
      free_user_metrics.prometheus_metrics_enabled,
      free_user_metrics.group_saml_enabled,
      free_user_metrics.jira_issue_imports_all_time_event,
      free_user_metrics.author_epic_all_time_user,
      free_user_metrics.author_issue_all_time_user,
      free_user_metrics.failed_deployments_28_days_user,
      free_user_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      free_user_metrics.geo_enabled,
      free_user_metrics.auto_devops_pipelines_28_days_user,
      free_user_metrics.active_instance_runners_all_time_event,
      free_user_metrics.active_group_runners_all_time_event,
      free_user_metrics.active_project_runners_all_time_event,
      free_user_metrics.gitaly_version,
      free_user_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      free_user_metrics.api_fuzzing_scans_all_time_event,
      free_user_metrics.api_fuzzing_scans_28_days_event,
      free_user_metrics.coverage_fuzzing_scans_all_time_event,
      free_user_metrics.coverage_fuzzing_scans_28_days_event,
      free_user_metrics.secret_detection_scans_all_time_event,
      free_user_metrics.secret_detection_scans_28_days_event,
      free_user_metrics.dependency_scanning_scans_all_time_event,
      free_user_metrics.dependency_scanning_scans_28_days_event,
      free_user_metrics.container_scanning_scans_all_time_event,
      free_user_metrics.container_scanning_scans_28_days_event,
      free_user_metrics.dast_scans_all_time_event,
      free_user_metrics.dast_scans_28_days_event,
      free_user_metrics.sast_scans_all_time_event,
      free_user_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      free_user_metrics.packages_pushed_registry_all_time_event,
      free_user_metrics.packages_pulled_registry_all_time_event,
      free_user_metrics.compliance_dashboard_view_28_days_user,
      free_user_metrics.audit_screen_view_28_days_user,
      free_user_metrics.instance_audit_screen_view_28_days_user,
      free_user_metrics.credential_inventory_view_28_days_user,
      free_user_metrics.compliance_frameworks_pipeline_all_time_event,
      free_user_metrics.compliance_frameworks_pipeline_28_days_event,
      free_user_metrics.groups_streaming_destinations_all_time_event,
      free_user_metrics.groups_streaming_destinations_28_days_event,
      free_user_metrics.audit_event_destinations_all_time_event,
      free_user_metrics.audit_event_destinations_28_days_event,
      free_user_metrics.projects_status_checks_all_time_event,
      free_user_metrics.external_status_checks_all_time_event,
      free_user_metrics.paid_license_search_28_days_user,
      free_user_metrics.last_activity_28_days_user,
      -- Wave 7
      free_user_metrics.snippets_28_days_event,
      free_user_metrics.single_file_editor_28_days_user,
      free_user_metrics.merge_requests_created_28_days_event,
      free_user_metrics.merge_requests_created_28_days_user,
      free_user_metrics.merge_requests_approval_rules_28_days_event,
      free_user_metrics.custom_compliance_frameworks_28_days_event,
      free_user_metrics.projects_security_policy_28_days_event,
      free_user_metrics.merge_requests_security_policy_28_days_user,
      free_user_metrics.pipelines_implicit_auto_devops_28_days_event,
      free_user_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      free_user_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      free_user_metrics.is_latest_data
    FROM free_user_metrics
    LEFT JOIN crm_accounts
      ON free_user_metrics.dim_crm_account_id = crm_accounts.dim_crm_account_id
    LEFT JOIN namespaces
      ON namespaces.dim_namespace_id = free_user_metrics.dim_namespace_id

)

{{ hash_diff(
    cte_ref="joined",
    return_cte="final",
    columns=[
        'reporting_month',
        'dim_namespace_id',
        'uuid',
        'hostname',
        'dim_installation_id',
        'delivery_type',
        'deployment_type',
        'cleaned_version',
        'dim_crm_account_id',
        'crm_account_name',
        'parent_crm_account_name',
        'ping_date',
        'installation_creation_date',
        'umau_28_days_user',
        'action_monthly_active_users_project_repo_28_days_user',
        'merge_requests_28_days_user',
        'projects_with_repositories_enabled_28_days_user',
        'commit_comment_all_time_event',
        'source_code_pushes_all_time_event',
        'ci_pipelines_28_days_user',
        'ci_internal_pipelines_28_days_user',
        'ci_builds_28_days_user',
        'ci_builds_all_time_user',
        'ci_builds_all_time_event',
        'ci_runners_all_time_event',
        'auto_devops_enabled_all_time_event',
        'gitlab_shared_runners_enabled',
        'container_registry_enabled',
        'template_repositories_all_time_event',
        'ci_pipeline_config_repository_28_days_user',
        'user_unique_users_all_secure_scanners_28_days_user',
        'user_sast_jobs_28_days_user',
        'user_dast_jobs_28_days_user',
        'user_dependency_scanning_jobs_28_days_user',
        'user_license_management_jobs_28_days_user',
        'user_secret_detection_jobs_28_days_user',
        'user_container_scanning_jobs_28_days_user',
        'object_store_packages_enabled',
        'projects_with_packages_all_time_event',
        'projects_with_packages_28_days_event',
        'deployments_28_days_user',
        'releases_28_days_user',
        'epics_28_days_user',
        'issues_28_days_user',
        'ci_internal_pipelines_all_time_event',
        'ci_external_pipelines_all_time_event',
        'merge_requests_all_time_event',
        'todos_all_time_event',
        'epics_all_time_event',
        'issues_all_time_event',
        'projects_all_time_event',
        'deployments_28_days_event',
        'packages_28_days_event',
        'sast_jobs_all_time_event',
        'dast_jobs_all_time_event',
        'dependency_scanning_jobs_all_time_event',
        'license_management_jobs_all_time_event',
        'secret_detection_jobs_all_time_event',
        'container_scanning_jobs_all_time_event',
        'projects_jenkins_active_all_time_event',
        'projects_bamboo_active_all_time_event',
        'projects_jira_active_all_time_event',
        'projects_drone_ci_active_all_time_event',
        'projects_github_active_all_time_event',
        'projects_jira_server_active_all_time_event',
        'projects_jira_dvcs_cloud_active_all_time_event',
        'projects_with_repositories_enabled_all_time_event',
        'protected_branches_all_time_event',
        'remote_mirrors_all_time_event',
        'projects_enforcing_code_owner_approval_28_days_user',
        'project_clusters_enabled_28_days_user',
        'analytics_28_days_user',
        'issues_edit_28_days_user',
        'user_packages_28_days_user',
        'terraform_state_api_28_days_user',
        'incident_management_28_days_user',
        'auto_devops_enabled',
        'gitaly_clusters_instance',
        'epics_deepest_relationship_level_instance',
        'clusters_applications_cilium_all_time_event',
        'network_policy_forwards_all_time_event',
        'network_policy_drops_all_time_event',
        'requirements_with_test_report_all_time_event',
        'requirement_test_reports_ci_all_time_event',
        'projects_imported_from_github_all_time_event',
        'projects_jira_cloud_active_all_time_event',
        'projects_jira_dvcs_server_active_all_time_event',
        'service_desk_issues_all_time_event',
        'ci_pipelines_all_time_user',
        'service_desk_issues_28_days_user',
        'projects_jira_active_28_days_user',
        'projects_jira_dvcs_cloud_active_28_days_user',
        'projects_jira_dvcs_server_active_28_days_user',
        'merge_requests_with_required_code_owners_28_days_user',
        'analytics_value_stream_28_days_event',
        'code_review_user_approve_mr_28_days_user',
        'epics_usage_28_days_user',
        'ci_templates_usage_28_days_event',
        'project_management_issue_milestone_changed_28_days_user',
        'project_management_issue_iteration_changed_28_days_user',
        'protected_branches_28_days_user',
        'ci_cd_lead_time_usage_28_days_event',
        'ci_cd_deployment_frequency_usage_28_days_event',
        'projects_with_repositories_enabled_all_time_user',
        'api_fuzzing_jobs_usage_28_days_user',
        'coverage_fuzzing_pipeline_usage_28_days_event',
        'api_fuzzing_pipeline_usage_28_days_event',
        'container_scanning_pipeline_usage_28_days_event',
        'dependency_scanning_pipeline_usage_28_days_event',
        'sast_pipeline_usage_28_days_event',
        'secret_detection_pipeline_usage_28_days_event',
        'dast_pipeline_usage_28_days_event',
        'coverage_fuzzing_jobs_28_days_user',
        'environments_all_time_event',
        'feature_flags_all_time_event',
        'successful_deployments_28_days_event',
        'failed_deployments_28_days_event',
        'projects_compliance_framework_all_time_event',
        'commit_ci_config_file_28_days_user',
        'view_audit_all_time_user',
        'dependency_scanning_jobs_all_time_user',
        'analytics_devops_adoption_all_time_user',
        'projects_imported_all_time_event',
        'preferences_security_dashboard_28_days_user',
        'web_ide_edit_28_days_user',
        'auto_devops_pipelines_all_time_event',
        'projects_prometheus_active_all_time_event',
        'prometheus_enabled',
        'prometheus_metrics_enabled',
        'group_saml_enabled',
        'jira_issue_imports_all_time_event',
        'author_epic_all_time_user',
        'author_issue_all_time_user',
        'failed_deployments_28_days_user',
        'successful_deployments_28_days_user',
        'geo_enabled',
        'auto_devops_pipelines_28_days_user',
        'active_instance_runners_all_time_event',
        'active_group_runners_all_time_event',
        'active_project_runners_all_time_event',
        'gitaly_version',
        'gitaly_servers_all_time_event',
        'api_fuzzing_scans_all_time_event',
        'api_fuzzing_scans_28_days_event',
        'coverage_fuzzing_scans_all_time_event',
        'coverage_fuzzing_scans_28_days_event',
        'secret_detection_scans_all_time_event',
        'secret_detection_scans_28_days_event',
        'dependency_scanning_scans_all_time_event',
        'dependency_scanning_scans_28_days_event',
        'container_scanning_scans_all_time_event',
        'container_scanning_scans_28_days_event',
        'dast_scans_all_time_event',
        'dast_scans_28_days_event',
        'sast_scans_all_time_event',
        'sast_scans_28_days_event',
        'packages_pushed_registry_all_time_event',
        'packages_pulled_registry_all_time_event',
        'compliance_dashboard_view_28_days_user',
        'audit_screen_view_28_days_user',
        'instance_audit_screen_view_28_days_user',
        'credential_inventory_view_28_days_user',
        'compliance_frameworks_pipeline_all_time_event',
        'compliance_frameworks_pipeline_28_days_event',
        'groups_streaming_destinations_all_time_event',
        'groups_streaming_destinations_28_days_event',
        'audit_event_destinations_all_time_event',
        'audit_event_destinations_28_days_event',
        'projects_status_checks_all_time_event',
        'external_status_checks_all_time_event',
        'paid_license_search_28_days_user',
        'last_activity_28_days_user',
        'snippets_28_days_event',
        'single_file_editor_28_days_user',
        'merge_requests_created_28_days_event',
        'merge_requests_created_28_days_user',
        'merge_requests_approval_rules_28_days_event',
        'custom_compliance_frameworks_28_days_event',
        'projects_security_policy_28_days_event',
        'merge_requests_security_policy_28_days_user',
        'pipelines_implicit_auto_devops_28_days_event',
        'pipeline_schedules_28_days_user',
        'ci_internal_pipelines_28_days_event',
        'is_latest_data'
    ]
) }}

{{ dbt_audit(
    cte_ref="final",
    created_by="@ischweickartDD",
    updated_by="@jpeguero",
    created_date="2021-06-14",
    updated_date="2023-06-22"
) }}51:T6adb,



WITH free_user_metrics AS (

    SELECT * 
    FROM "PROD".common.fct_ping_instance_free_user_metrics_monthly

), crm_accounts AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

)

, joined AS (

    SELECT
      free_user_metrics.reporting_month,
      free_user_metrics.dim_namespace_id,
      namespaces.namespace_name,
      free_user_metrics.uuid,
      free_user_metrics.hostname,
      free_user_metrics.dim_installation_id,
      free_user_metrics.delivery_type,
      free_user_metrics.deployment_type,
      free_user_metrics.cleaned_version,
      

  COALESCE(crm_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      crm_account_name,
      parent_crm_account_name,
      free_user_metrics.ping_date,
      free_user_metrics.installation_creation_date,
      -- Wave 2 & 3
      free_user_metrics.umau_28_days_user,
      free_user_metrics.action_monthly_active_users_project_repo_28_days_user,
      free_user_metrics.merge_requests_28_days_user,
      free_user_metrics.projects_with_repositories_enabled_28_days_user,
      free_user_metrics.commit_comment_all_time_event,
      free_user_metrics.source_code_pushes_all_time_event,
      free_user_metrics.ci_pipelines_28_days_user,
      free_user_metrics.ci_internal_pipelines_28_days_user,
      free_user_metrics.ci_builds_28_days_user,
      free_user_metrics.ci_builds_all_time_user,
      free_user_metrics.ci_builds_all_time_event,
      free_user_metrics.ci_runners_all_time_event,
      free_user_metrics.auto_devops_enabled_all_time_event,
      free_user_metrics.gitlab_shared_runners_enabled,
      free_user_metrics.container_registry_enabled,
      free_user_metrics.template_repositories_all_time_event,
      free_user_metrics.ci_pipeline_config_repository_28_days_user,
      free_user_metrics.user_unique_users_all_secure_scanners_28_days_user,
      free_user_metrics.user_sast_jobs_28_days_user,
      free_user_metrics.user_dast_jobs_28_days_user,
      free_user_metrics.user_dependency_scanning_jobs_28_days_user,
      free_user_metrics.user_license_management_jobs_28_days_user,
      free_user_metrics.user_secret_detection_jobs_28_days_user,
      free_user_metrics.user_container_scanning_jobs_28_days_user,
      free_user_metrics.object_store_packages_enabled,
      free_user_metrics.projects_with_packages_all_time_event,
      free_user_metrics.projects_with_packages_28_days_event,
      free_user_metrics.deployments_28_days_user,
      free_user_metrics.releases_28_days_user,
      free_user_metrics.epics_28_days_user,
      free_user_metrics.issues_28_days_user,
      -- Wave 3.1
      free_user_metrics.ci_internal_pipelines_all_time_event,
      free_user_metrics.ci_external_pipelines_all_time_event,
      free_user_metrics.merge_requests_all_time_event,
      free_user_metrics.todos_all_time_event,
      free_user_metrics.epics_all_time_event,
      free_user_metrics.issues_all_time_event,
      free_user_metrics.projects_all_time_event,
      free_user_metrics.deployments_28_days_event,
      free_user_metrics.packages_28_days_event,
      free_user_metrics.sast_jobs_all_time_event,
      free_user_metrics.dast_jobs_all_time_event,
      free_user_metrics.dependency_scanning_jobs_all_time_event,
      free_user_metrics.license_management_jobs_all_time_event,
      free_user_metrics.secret_detection_jobs_all_time_event,
      free_user_metrics.container_scanning_jobs_all_time_event,
      free_user_metrics.projects_jenkins_active_all_time_event,
      free_user_metrics.projects_bamboo_active_all_time_event,
      free_user_metrics.projects_jira_active_all_time_event,
      free_user_metrics.projects_drone_ci_active_all_time_event,
      free_user_metrics.projects_github_active_all_time_event,
      free_user_metrics.projects_jira_server_active_all_time_event,
      free_user_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      free_user_metrics.projects_with_repositories_enabled_all_time_event,
      free_user_metrics.protected_branches_all_time_event,
      free_user_metrics.remote_mirrors_all_time_event,
      free_user_metrics.projects_enforcing_code_owner_approval_28_days_user,
      free_user_metrics.project_clusters_enabled_28_days_user,
      free_user_metrics.analytics_28_days_user,
      free_user_metrics.issues_edit_28_days_user,
      free_user_metrics.user_packages_28_days_user,
      free_user_metrics.terraform_state_api_28_days_user,
      free_user_metrics.incident_management_28_days_user,
      -- Wave 3.2
      free_user_metrics.auto_devops_enabled,
      free_user_metrics.gitaly_clusters_instance,
      free_user_metrics.epics_deepest_relationship_level_instance,
      free_user_metrics.clusters_applications_cilium_all_time_event,
      free_user_metrics.network_policy_forwards_all_time_event,
      free_user_metrics.network_policy_drops_all_time_event,
      free_user_metrics.requirements_with_test_report_all_time_event,
      free_user_metrics.requirement_test_reports_ci_all_time_event,
      free_user_metrics.projects_imported_from_github_all_time_event,
      free_user_metrics.projects_jira_cloud_active_all_time_event,
      free_user_metrics.projects_jira_dvcs_server_active_all_time_event,
      free_user_metrics.service_desk_issues_all_time_event,
      free_user_metrics.ci_pipelines_all_time_user,
      free_user_metrics.service_desk_issues_28_days_user,
      free_user_metrics.projects_jira_active_28_days_user,
      free_user_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      free_user_metrics.projects_jira_dvcs_server_active_28_days_user,
      free_user_metrics.merge_requests_with_required_code_owners_28_days_user,
      free_user_metrics.analytics_value_stream_28_days_event,
      free_user_metrics.code_review_user_approve_mr_28_days_user,
      free_user_metrics.epics_usage_28_days_user,
      free_user_metrics.ci_templates_usage_28_days_event,
      free_user_metrics.project_management_issue_milestone_changed_28_days_user,
      free_user_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      free_user_metrics.protected_branches_28_days_user,
      free_user_metrics.ci_cd_lead_time_usage_28_days_event,
      free_user_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      free_user_metrics.projects_with_repositories_enabled_all_time_user,
      free_user_metrics.api_fuzzing_jobs_usage_28_days_user,
      free_user_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      free_user_metrics.api_fuzzing_pipeline_usage_28_days_event,
      free_user_metrics.container_scanning_pipeline_usage_28_days_event,
      free_user_metrics.dependency_scanning_pipeline_usage_28_days_event,
      free_user_metrics.sast_pipeline_usage_28_days_event,
      free_user_metrics.secret_detection_pipeline_usage_28_days_event,
      free_user_metrics.dast_pipeline_usage_28_days_event,
      free_user_metrics.coverage_fuzzing_jobs_28_days_user,
      free_user_metrics.environments_all_time_event,
      free_user_metrics.feature_flags_all_time_event,
      free_user_metrics.successful_deployments_28_days_event,
      free_user_metrics.failed_deployments_28_days_event,
      free_user_metrics.projects_compliance_framework_all_time_event,
      free_user_metrics.commit_ci_config_file_28_days_user,
      free_user_metrics.view_audit_all_time_user,
      -- Wave 5.2
      free_user_metrics.dependency_scanning_jobs_all_time_user,
      free_user_metrics.analytics_devops_adoption_all_time_user,
      free_user_metrics.projects_imported_all_time_event,
      free_user_metrics.preferences_security_dashboard_28_days_user,
      free_user_metrics.web_ide_edit_28_days_user,
      free_user_metrics.auto_devops_pipelines_all_time_event,
      free_user_metrics.projects_prometheus_active_all_time_event,
      free_user_metrics.prometheus_enabled,
      free_user_metrics.prometheus_metrics_enabled,
      free_user_metrics.group_saml_enabled,
      free_user_metrics.jira_issue_imports_all_time_event,
      free_user_metrics.author_epic_all_time_user,
      free_user_metrics.author_issue_all_time_user,
      free_user_metrics.failed_deployments_28_days_user,
      free_user_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      free_user_metrics.geo_enabled,
      free_user_metrics.auto_devops_pipelines_28_days_user,
      free_user_metrics.active_instance_runners_all_time_event,
      free_user_metrics.active_group_runners_all_time_event,
      free_user_metrics.active_project_runners_all_time_event,
      free_user_metrics.gitaly_version,
      free_user_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      free_user_metrics.api_fuzzing_scans_all_time_event,
      free_user_metrics.api_fuzzing_scans_28_days_event,
      free_user_metrics.coverage_fuzzing_scans_all_time_event,
      free_user_metrics.coverage_fuzzing_scans_28_days_event,
      free_user_metrics.secret_detection_scans_all_time_event,
      free_user_metrics.secret_detection_scans_28_days_event,
      free_user_metrics.dependency_scanning_scans_all_time_event,
      free_user_metrics.dependency_scanning_scans_28_days_event,
      free_user_metrics.container_scanning_scans_all_time_event,
      free_user_metrics.container_scanning_scans_28_days_event,
      free_user_metrics.dast_scans_all_time_event,
      free_user_metrics.dast_scans_28_days_event,
      free_user_metrics.sast_scans_all_time_event,
      free_user_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      free_user_metrics.packages_pushed_registry_all_time_event,
      free_user_metrics.packages_pulled_registry_all_time_event,
      free_user_metrics.compliance_dashboard_view_28_days_user,
      free_user_metrics.audit_screen_view_28_days_user,
      free_user_metrics.instance_audit_screen_view_28_days_user,
      free_user_metrics.credential_inventory_view_28_days_user,
      free_user_metrics.compliance_frameworks_pipeline_all_time_event,
      free_user_metrics.compliance_frameworks_pipeline_28_days_event,
      free_user_metrics.groups_streaming_destinations_all_time_event,
      free_user_metrics.groups_streaming_destinations_28_days_event,
      free_user_metrics.audit_event_destinations_all_time_event,
      free_user_metrics.audit_event_destinations_28_days_event,
      free_user_metrics.projects_status_checks_all_time_event,
      free_user_metrics.external_status_checks_all_time_event,
      free_user_metrics.paid_license_search_28_days_user,
      free_user_metrics.last_activity_28_days_user,
      -- Wave 7
      free_user_metrics.snippets_28_days_event,
      free_user_metrics.single_file_editor_28_days_user,
      free_user_metrics.merge_requests_created_28_days_event,
      free_user_metrics.merge_requests_created_28_days_user,
      free_user_metrics.merge_requests_approval_rules_28_days_event,
      free_user_metrics.custom_compliance_frameworks_28_days_event,
      free_user_metrics.projects_security_policy_28_days_event,
      free_user_metrics.merge_requests_security_policy_28_days_user,
      free_user_metrics.pipelines_implicit_auto_devops_28_days_event,
      free_user_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      free_user_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      free_user_metrics.is_latest_data
    FROM free_user_metrics
    LEFT JOIN crm_accounts
      ON free_user_metrics.dim_crm_account_id = crm_accounts.dim_crm_account_id
    LEFT JOIN namespaces
      ON namespaces.dim_namespace_id = free_user_metrics.dim_namespace_id

)



  , hashing AS (

    SELECT *,

      md5(cast(coalesce(cast(reporting_month as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_installation_id as 
    varchar
), '') || '-' || coalesce(cast(delivery_type as 
    varchar
), '') || '-' || coalesce(cast(deployment_type as 
    varchar
), '') || '-' || coalesce(cast(cleaned_version as 
    varchar
), '') || '-' || coalesce(cast(dim_crm_account_id as 
    varchar
), '') || '-' || coalesce(cast(crm_account_name as 
    varchar
), '') || '-' || coalesce(cast(parent_crm_account_name as 
    varchar
), '') || '-' || coalesce(cast(ping_date as 
    varchar
), '') || '-' || coalesce(cast(installation_creation_date as 
    varchar
), '') || '-' || coalesce(cast(umau_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(action_monthly_active_users_project_repo_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(projects_with_repositories_enabled_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(commit_comment_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(source_code_pushes_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(ci_pipelines_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_internal_pipelines_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_builds_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_builds_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(ci_builds_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(ci_runners_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(auto_devops_enabled_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(gitlab_shared_runners_enabled as 
    varchar
), '') || '-' || coalesce(cast(container_registry_enabled as 
    varchar
), '') || '-' || coalesce(cast(template_repositories_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(ci_pipeline_config_repository_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_unique_users_all_secure_scanners_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_sast_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_dast_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_dependency_scanning_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_license_management_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_secret_detection_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_container_scanning_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(object_store_packages_enabled as 
    varchar
), '') || '-' || coalesce(cast(projects_with_packages_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_with_packages_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(deployments_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(releases_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(epics_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(issues_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_internal_pipelines_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(ci_external_pipelines_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(todos_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(epics_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(issues_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(deployments_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(packages_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(sast_jobs_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(dast_jobs_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(dependency_scanning_jobs_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(license_management_jobs_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(secret_detection_jobs_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(container_scanning_jobs_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_jenkins_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_bamboo_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_drone_ci_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_github_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_server_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_dvcs_cloud_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_with_repositories_enabled_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(protected_branches_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(remote_mirrors_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_enforcing_code_owner_approval_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(project_clusters_enabled_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(analytics_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(issues_edit_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(user_packages_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(terraform_state_api_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(incident_management_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(auto_devops_enabled as 
    varchar
), '') || '-' || coalesce(cast(gitaly_clusters_instance as 
    varchar
), '') || '-' || coalesce(cast(epics_deepest_relationship_level_instance as 
    varchar
), '') || '-' || coalesce(cast(clusters_applications_cilium_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(network_policy_forwards_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(network_policy_drops_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(requirements_with_test_report_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(requirement_test_reports_ci_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_imported_from_github_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_cloud_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_dvcs_server_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(service_desk_issues_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(ci_pipelines_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(service_desk_issues_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_active_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_dvcs_cloud_active_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(projects_jira_dvcs_server_active_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_with_required_code_owners_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(analytics_value_stream_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(code_review_user_approve_mr_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(epics_usage_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_templates_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(project_management_issue_milestone_changed_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(project_management_issue_iteration_changed_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(protected_branches_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_cd_lead_time_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(ci_cd_deployment_frequency_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(projects_with_repositories_enabled_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(api_fuzzing_jobs_usage_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(coverage_fuzzing_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(api_fuzzing_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(container_scanning_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(dependency_scanning_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(sast_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(secret_detection_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(dast_pipeline_usage_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(coverage_fuzzing_jobs_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(environments_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(feature_flags_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(successful_deployments_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(failed_deployments_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(projects_compliance_framework_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(commit_ci_config_file_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(view_audit_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(dependency_scanning_jobs_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(analytics_devops_adoption_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(projects_imported_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(preferences_security_dashboard_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(web_ide_edit_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(auto_devops_pipelines_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(projects_prometheus_active_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(prometheus_enabled as 
    varchar
), '') || '-' || coalesce(cast(prometheus_metrics_enabled as 
    varchar
), '') || '-' || coalesce(cast(group_saml_enabled as 
    varchar
), '') || '-' || coalesce(cast(jira_issue_imports_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(author_epic_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(author_issue_all_time_user as 
    varchar
), '') || '-' || coalesce(cast(failed_deployments_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(successful_deployments_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(geo_enabled as 
    varchar
), '') || '-' || coalesce(cast(auto_devops_pipelines_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(active_instance_runners_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(active_group_runners_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(active_project_runners_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(gitaly_version as 
    varchar
), '') || '-' || coalesce(cast(gitaly_servers_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(api_fuzzing_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(api_fuzzing_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(coverage_fuzzing_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(coverage_fuzzing_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(secret_detection_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(secret_detection_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(dependency_scanning_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(dependency_scanning_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(container_scanning_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(container_scanning_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(dast_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(dast_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(sast_scans_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(sast_scans_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(packages_pushed_registry_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(packages_pulled_registry_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(compliance_dashboard_view_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(audit_screen_view_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(instance_audit_screen_view_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(credential_inventory_view_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(compliance_frameworks_pipeline_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(compliance_frameworks_pipeline_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(groups_streaming_destinations_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(groups_streaming_destinations_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(audit_event_destinations_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(audit_event_destinations_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(projects_status_checks_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(external_status_checks_all_time_event as 
    varchar
), '') || '-' || coalesce(cast(paid_license_search_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(last_activity_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(snippets_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(single_file_editor_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_created_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_created_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_approval_rules_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(custom_compliance_frameworks_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(projects_security_policy_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(merge_requests_security_policy_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(pipelines_implicit_auto_devops_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(pipeline_schedules_28_days_user as 
    varchar
), '') || '-' || coalesce(cast(ci_internal_pipelines_28_days_event as 
    varchar
), '') || '-' || coalesce(cast(is_latest_data as 
    varchar
), '') as 
    varchar
)) as prev_hash

    FROM joined

  ), final as (

      

        SELECT hashing.*,
          CASE
            WHEN hashing.prev_hash = t.prev_hash THEN last_changed
            ELSE CURRENT_TIMESTAMP()
          END AS last_changed
        FROM hashing
        LEFT JOIN "PROD".common_mart_product.mart_product_usage_free_user_metrics_monthly as t on t.prev_hash = hashing.prev_hash

      

  )


SELECT
      *,
      '@ischweickartDD'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-06-14'::DATE        AS model_created_date,
      '2023-06-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final52:T1085,{{ config(
    tags=["product"]
) }}

{{ config({
    "materialized": "incremental",
    "unique_key": "dim_note_id"
    })
}}

{{ simple_cte([
    ('dim_date', 'dim_date'),
    ('dim_namespace_plan_hist', 'dim_namespace_plan_hist'),
    ('plans', 'gitlab_dotcom_plans_source'),
    ('prep_project', 'prep_project'),
    ('dim_epic', 'dim_epic'),
    ('dim_namespace', 'dim_namespace')
]) }}

, gitlab_dotcom_notes_dedupe_source AS (
    
    SELECT *
    FROM {{ ref('gitlab_dotcom_notes_dedupe_source') }} 
    {% if is_incremental() %}

    WHERE updated_at > (SELECT MAX(updated_at) FROM {{this}})

    {% endif %}

), joined AS (

    SELECT 
      gitlab_dotcom_notes_dedupe_source.id::NUMBER                                            AS dim_note_id,
      gitlab_dotcom_notes_dedupe_source.author_id::NUMBER                                     AS author_id,
      gitlab_dotcom_notes_dedupe_source.project_id::NUMBER                                    AS dim_project_id,
      IFNULL(prep_project.ultimate_parent_namespace_id::NUMBER,
              dim_namespace.ultimate_parent_namespace_id::NUMBER)                             AS ultimate_parent_namespace_id,
      gitlab_dotcom_notes_dedupe_source.noteable_id::NUMBER                                   AS noteable_id,
      dim_date.date_id::NUMBER                                                                AS created_date_id,
      IFNULL(dim_namespace_plan_hist.dim_plan_id, 34)::NUMBER                                 AS dim_plan_id,
      IFF(noteable_type = '', NULL, noteable_type)::VARCHAR                                   AS noteable_type,
      gitlab_dotcom_notes_dedupe_source.created_at::TIMESTAMP                                 AS created_at,
      gitlab_dotcom_notes_dedupe_source.updated_at::TIMESTAMP                                 AS updated_at,
      gitlab_dotcom_notes_dedupe_source.note::VARCHAR                                         AS note,
      gitlab_dotcom_notes_dedupe_source.attachment::VARCHAR                                   AS attachment,
      gitlab_dotcom_notes_dedupe_source.line_code::VARCHAR                                    AS line_code,
      gitlab_dotcom_notes_dedupe_source.commit_id::VARCHAR                                    AS commit_id,
      gitlab_dotcom_notes_dedupe_source.system::BOOLEAN                                       AS is_system_note,
      gitlab_dotcom_notes_dedupe_source.updated_by_id::NUMBER                                 AS note_updated_by_id,
      gitlab_dotcom_notes_dedupe_source.position::VARCHAR                                     AS position_number,
      gitlab_dotcom_notes_dedupe_source.original_position::VARCHAR                            AS original_position,
      gitlab_dotcom_notes_dedupe_source.resolved_at::TIMESTAMP                                AS resolved_at,
      gitlab_dotcom_notes_dedupe_source.resolved_by_id::NUMBER                                AS resolved_by_id,
      gitlab_dotcom_notes_dedupe_source.discussion_id::VARCHAR                                AS discussion_id,
      gitlab_dotcom_notes_dedupe_source.cached_markdown_version::NUMBER                       AS cached_markdown_version,
      gitlab_dotcom_notes_dedupe_source.resolved_by_push::BOOLEAN                             AS resolved_by_push
    FROM gitlab_dotcom_notes_dedupe_source
    LEFT JOIN prep_project ON gitlab_dotcom_notes_dedupe_source.project_id = prep_project.dim_project_id
    LEFT JOIN dim_epic ON gitlab_dotcom_notes_dedupe_source.noteable_id = dim_epic.dim_epic_id
    LEFT JOIN dim_namespace 
        ON dim_epic.group_id = dim_namespace.dim_namespace_id
    LEFT JOIN dim_namespace_plan_hist ON prep_project.ultimate_parent_namespace_id = dim_namespace_plan_hist.dim_namespace_id
        AND gitlab_dotcom_notes_dedupe_source.created_at >= dim_namespace_plan_hist.valid_from
        AND gitlab_dotcom_notes_dedupe_source.created_at < COALESCE(dim_namespace_plan_hist.valid_to, '2099-01-01')
    INNER JOIN dim_date ON TO_DATE(gitlab_dotcom_notes_dedupe_source.created_at) = dim_date.date_day

)

{{ dbt_audit(
    cte_ref="joined",
    created_by="@mpeychet_",
    updated_by="@chrissharp",
    created_date="2021-06-22",
    updated_date="2022-05-30"
) }}53:T11d3,





WITH dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_namespace_plan_hist AS (

    SELECT * 
    FROM "PROD".common.dim_namespace_plan_hist

), plans AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_plans_source

), prep_project AS (

    SELECT * 
    FROM "PROD".common_prep.prep_project

), dim_epic AS (

    SELECT * 
    FROM "PROD".common.dim_epic

), dim_namespace AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

)

, gitlab_dotcom_notes_dedupe_source AS (
    
    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_notes_dedupe_source 
    

    WHERE updated_at > (SELECT MAX(updated_at) FROM "PROD".common_prep.prep_note)

    

), joined AS (

    SELECT 
      gitlab_dotcom_notes_dedupe_source.id::NUMBER                                            AS dim_note_id,
      gitlab_dotcom_notes_dedupe_source.author_id::NUMBER                                     AS author_id,
      gitlab_dotcom_notes_dedupe_source.project_id::NUMBER                                    AS dim_project_id,
      IFNULL(prep_project.ultimate_parent_namespace_id::NUMBER,
              dim_namespace.ultimate_parent_namespace_id::NUMBER)                             AS ultimate_parent_namespace_id,
      gitlab_dotcom_notes_dedupe_source.noteable_id::NUMBER                                   AS noteable_id,
      dim_date.date_id::NUMBER                                                                AS created_date_id,
      IFNULL(dim_namespace_plan_hist.dim_plan_id, 34)::NUMBER                                 AS dim_plan_id,
      IFF(noteable_type = '', NULL, noteable_type)::VARCHAR                                   AS noteable_type,
      gitlab_dotcom_notes_dedupe_source.created_at::TIMESTAMP                                 AS created_at,
      gitlab_dotcom_notes_dedupe_source.updated_at::TIMESTAMP                                 AS updated_at,
      gitlab_dotcom_notes_dedupe_source.note::VARCHAR                                         AS note,
      gitlab_dotcom_notes_dedupe_source.attachment::VARCHAR                                   AS attachment,
      gitlab_dotcom_notes_dedupe_source.line_code::VARCHAR                                    AS line_code,
      gitlab_dotcom_notes_dedupe_source.commit_id::VARCHAR                                    AS commit_id,
      gitlab_dotcom_notes_dedupe_source.system::BOOLEAN                                       AS is_system_note,
      gitlab_dotcom_notes_dedupe_source.updated_by_id::NUMBER                                 AS note_updated_by_id,
      gitlab_dotcom_notes_dedupe_source.position::VARCHAR                                     AS position_number,
      gitlab_dotcom_notes_dedupe_source.original_position::VARCHAR                            AS original_position,
      gitlab_dotcom_notes_dedupe_source.resolved_at::TIMESTAMP                                AS resolved_at,
      gitlab_dotcom_notes_dedupe_source.resolved_by_id::NUMBER                                AS resolved_by_id,
      gitlab_dotcom_notes_dedupe_source.discussion_id::VARCHAR                                AS discussion_id,
      gitlab_dotcom_notes_dedupe_source.cached_markdown_version::NUMBER                       AS cached_markdown_version,
      gitlab_dotcom_notes_dedupe_source.resolved_by_push::BOOLEAN                             AS resolved_by_push
    FROM gitlab_dotcom_notes_dedupe_source
    LEFT JOIN prep_project ON gitlab_dotcom_notes_dedupe_source.project_id = prep_project.dim_project_id
    LEFT JOIN dim_epic ON gitlab_dotcom_notes_dedupe_source.noteable_id = dim_epic.dim_epic_id
    LEFT JOIN dim_namespace 
        ON dim_epic.group_id = dim_namespace.dim_namespace_id
    LEFT JOIN dim_namespace_plan_hist ON prep_project.ultimate_parent_namespace_id = dim_namespace_plan_hist.dim_namespace_id
        AND gitlab_dotcom_notes_dedupe_source.created_at >= dim_namespace_plan_hist.valid_from
        AND gitlab_dotcom_notes_dedupe_source.created_at < COALESCE(dim_namespace_plan_hist.valid_to, '2099-01-01')
    INNER JOIN dim_date ON TO_DATE(gitlab_dotcom_notes_dedupe_source.created_at) = dim_date.date_day

)

SELECT
      *,
      '@mpeychet_'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-06-22'::DATE        AS model_created_date,
      '2022-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

                CURRENT_TIMESTAMP()               AS dbt_created_at

            

        
    
    

    FROM joined54:T89c,{{ config(
    materialized='ephemeral'
) }}

WITH namespaces AS (
    SELECT *
    FROM {{ ref('dim_namespace') }} 

), namespace_path AS (

    SELECT
      namespaces.dim_namespace_id,
      CASE
        WHEN namespace_4.dim_namespace_id IS NOT NULL THEN namespace_4.namespace_path || '/' ||
                                                           namespace_3.namespace_path || '/' ||
                                                           namespace_2.namespace_path || '/' ||
                                                           namespace_1.namespace_path || '/' ||
                                                           namespaces.namespace_path
        WHEN namespace_3.dim_namespace_id IS NOT NULL THEN namespace_3.namespace_path || '/' ||
                                                           namespace_2.namespace_path || '/' ||
                                                           namespace_1.namespace_path || '/' ||
                                                           namespaces.namespace_path
        WHEN namespace_2.dim_namespace_id IS NOT NULL THEN namespace_2.namespace_path || '/' ||
                                                           namespace_1.namespace_path || '/' ||
                                                           namespaces.namespace_path
        WHEN namespace_1.dim_namespace_id IS NOT NULL
          THEN namespace_1.namespace_path || '/' || namespaces.namespace_path
        ELSE namespaces.namespace_path
      END AS full_namespace_path
    FROM namespaces
    LEFT OUTER JOIN namespaces namespace_1
      ON namespace_1.dim_namespace_id = namespaces.parent_id AND namespaces.namespace_is_ultimate_parent = FALSE
    LEFT OUTER JOIN namespaces namespace_2
      ON namespace_2.dim_namespace_id = namespace_1.parent_id AND namespace_1.namespace_is_ultimate_parent = FALSE
    LEFT OUTER JOIN namespaces namespace_3
      ON namespace_3.dim_namespace_id = namespace_2.parent_id AND namespace_2.namespace_is_ultimate_parent = FALSE
    LEFT OUTER JOIN namespaces namespace_4
      ON namespace_4.dim_namespace_id = namespace_3.parent_id AND namespace_3.namespace_is_ultimate_parent = FALSE

)

SELECT *
FROM namespace_path55:T871,

WITH namespaces AS (
    SELECT *
    FROM "PROD".common.dim_namespace 

), namespace_path AS (

    SELECT
      namespaces.dim_namespace_id,
      CASE
        WHEN namespace_4.dim_namespace_id IS NOT NULL THEN namespace_4.namespace_path || '/' ||
                                                           namespace_3.namespace_path || '/' ||
                                                           namespace_2.namespace_path || '/' ||
                                                           namespace_1.namespace_path || '/' ||
                                                           namespaces.namespace_path
        WHEN namespace_3.dim_namespace_id IS NOT NULL THEN namespace_3.namespace_path || '/' ||
                                                           namespace_2.namespace_path || '/' ||
                                                           namespace_1.namespace_path || '/' ||
                                                           namespaces.namespace_path
        WHEN namespace_2.dim_namespace_id IS NOT NULL THEN namespace_2.namespace_path || '/' ||
                                                           namespace_1.namespace_path || '/' ||
                                                           namespaces.namespace_path
        WHEN namespace_1.dim_namespace_id IS NOT NULL
          THEN namespace_1.namespace_path || '/' || namespaces.namespace_path
        ELSE namespaces.namespace_path
      END AS full_namespace_path
    FROM namespaces
    LEFT OUTER JOIN namespaces namespace_1
      ON namespace_1.dim_namespace_id = namespaces.parent_id AND namespaces.namespace_is_ultimate_parent = FALSE
    LEFT OUTER JOIN namespaces namespace_2
      ON namespace_2.dim_namespace_id = namespace_1.parent_id AND namespace_1.namespace_is_ultimate_parent = FALSE
    LEFT OUTER JOIN namespaces namespace_3
      ON namespace_3.dim_namespace_id = namespace_2.parent_id AND namespace_2.namespace_is_ultimate_parent = FALSE
    LEFT OUTER JOIN namespaces namespace_4
      ON namespace_4.dim_namespace_id = namespace_3.parent_id AND namespace_3.namespace_is_ultimate_parent = FALSE

)

SELECT *
FROM namespace_path56:T1f62,{{ config(
    tags=["product"]
) }}

{{ simple_cte([
    ('namespace_current', 'gitlab_dotcom_namespaces_source'),
    ('namespace_snapshots', 'prep_namespace_hist'),
    ('namespace_settings', 'gitlab_dotcom_namespace_settings_source'),
    ('namespace_lineage_historical', 'gitlab_dotcom_namespace_lineage_historical_daily'),
    ('map_namespace_internal', 'map_namespace_internal'),
    ('plans', 'gitlab_dotcom_plans_source'),
    ('product_tiers', 'prep_product_tier'),
    ('members_source', 'gitlab_dotcom_members_source'),
    ('projects_source', 'gitlab_dotcom_projects_source'),
    ('audit_events', 'gitlab_dotcom_audit_events_source'),
    ('audit_event_details_clean', 'prep_audit_event_details_clean'),
    ('users', 'prep_user')
]) }},

members AS (

  SELECT
    source_id,
    COUNT(DISTINCT member_id) AS member_count
  FROM members_source
  WHERE is_currently_valid = TRUE
    AND member_source_type = 'Namespace'
    AND {{ filter_out_blocked_users('members_source', 'user_id') }}
  GROUP BY 1

),

projects AS (

  SELECT
    namespace_id,
    COUNT(DISTINCT project_id) AS project_count
  FROM projects_source
  GROUP BY 1

),

creators AS (

  SELECT
    author_id AS creator_id,
    entity_id AS group_id
  FROM audit_events
  INNER JOIN audit_event_details_clean
    ON audit_events.audit_event_id = audit_event_details_clean.audit_event_id
  WHERE entity_type = 'Group'
    AND key_name = 'add'
    AND key_value = 'group'
  GROUP BY 1, 2

),

namespace_lineage AS (

  SELECT
    namespace_lineage_historical.*,
    IFF(ROW_NUMBER() OVER (
      PARTITION BY namespace_lineage_historical.namespace_id
      ORDER BY namespace_lineage_historical.snapshot_day DESC) = 1,
      TRUE, FALSE)     AS is_current,
    IFF(namespace_lineage_historical.snapshot_day = CURRENT_DATE,
      TRUE, FALSE)     AS ultimate_parent_is_current,
    plans.plan_title   AS ultimate_parent_plan_title,
    plans.plan_is_paid AS ultimate_parent_plan_is_paid,
    plans.plan_name    AS ultimate_parent_plan_name
  FROM namespace_lineage_historical
  INNER JOIN plans
    ON namespace_lineage_historical.ultimate_parent_plan_id = plans.plan_id
  QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        namespace_lineage_historical.namespace_id,
        namespace_lineage_historical.parent_id,
        namespace_lineage_historical.ultimate_parent_id
      ORDER BY namespace_lineage_historical.snapshot_day DESC
    ) = 1

),

namespaces AS (

  SELECT
    namespace_snapshots.*,
    IFF(namespace_current.namespace_id IS NOT NULL,
      TRUE, FALSE) AS is_current
  FROM namespace_snapshots
  LEFT JOIN namespace_current
    ON namespace_snapshots.dim_namespace_id = namespace_current.namespace_id

),

joined AS (

  SELECT
    namespaces.dim_namespace_id,
    COALESCE(namespace_lineage.ultimate_parent_id,
      namespaces.parent_id,
      namespaces.dim_namespace_id)                                          AS ultimate_parent_namespace_id,
    IFF(namespaces.dim_namespace_id = COALESCE(namespace_lineage.ultimate_parent_id,
      namespaces.parent_id,
      namespaces.dim_namespace_id),
      TRUE, FALSE)                                                          AS namespace_is_ultimate_parent,
    IFF(map_namespace_internal.ultimate_parent_namespace_id IS NOT NULL,
      TRUE, FALSE)                                                          AS namespace_is_internal,
    CASE
      WHEN namespaces.visibility_level = 'public'
        OR namespace_is_internal THEN namespace_name
      WHEN namespaces.visibility_level = 'internal' THEN 'internal - masked'
      WHEN namespaces.visibility_level = 'private' THEN 'private - masked'
    END                                                                     AS namespace_name,
    CASE
      WHEN namespaces.visibility_level = 'public'
        OR namespace_is_internal THEN namespace_path
      WHEN namespaces.visibility_level = 'internal' THEN 'internal - masked'
      WHEN namespaces.visibility_level = 'private' THEN 'private - masked'
    END                                                                     AS namespace_path,
    namespaces.owner_id,
    namespaces.namespace_type                                               AS namespace_type,
    namespaces.has_avatar,
    namespaces.namespace_created_at                                         AS created_at,
    namespaces.namespace_updated_at                                         AS updated_at,
    namespaces.is_membership_locked,
    namespaces.has_request_access_enabled,
    namespaces.has_share_with_group_locked,
    namespace_settings.is_setup_for_company,
    namespaces.visibility_level,
    namespaces.ldap_sync_status,
    namespaces.ldap_sync_error,
    namespaces.ldap_sync_last_update_at,
    namespaces.ldap_sync_last_successful_update_at,
    namespaces.ldap_sync_last_sync_at,
    namespaces.lfs_enabled,
    namespaces.parent_id,
    namespaces.shared_runners_enabled,
    namespaces.shared_runners_minutes_limit,
    namespaces.extra_shared_runners_minutes_limit,
    namespaces.repository_size_limit,
    namespaces.does_require_two_factor_authentication,
    namespaces.two_factor_grace_period,
    namespaces.project_creation_level,
    namespaces.push_rule_id,
    IFNULL(creators.creator_id, namespaces.owner_id)                        AS creator_id,
    IFNULL(users.is_blocked_user, FALSE)                                    AS namespace_creator_is_blocked,
    namespace_lineage.ultimate_parent_plan_id                               AS gitlab_plan_id,
    namespace_lineage.ultimate_parent_plan_title                            AS gitlab_plan_title,
    namespace_lineage.ultimate_parent_plan_is_paid                          AS gitlab_plan_is_paid,
    {{ get_keyed_nulls('saas_product_tiers.dim_product_tier_id') }}         AS dim_product_tier_id,
    namespace_lineage.seats                                                 AS gitlab_plan_seats,
    namespace_lineage.seats_in_use                                          AS gitlab_plan_seats_in_use,
    namespace_lineage.max_seats_used                                        AS gitlab_plan_max_seats_used,
    IFNULL(members.member_count, 0)                                         AS namespace_member_count,
    IFNULL(projects.project_count, 0)                                       AS namespace_project_count,
    namespace_settings.code_suggestions                                     AS has_code_suggestions_enabled,
    IFNULL(namespaces.is_current AND namespace_lineage.is_current, FALSE)   AS is_currently_valid
  FROM namespaces
  LEFT JOIN namespace_lineage
    ON namespaces.dim_namespace_id = namespace_lineage.namespace_id
      AND IFNULL(namespaces.parent_id, namespaces.dim_namespace_id) = IFNULL(namespace_lineage.parent_id, namespace_lineage.namespace_id)
  LEFT JOIN namespace_settings
    ON namespaces.dim_namespace_id = namespace_settings.namespace_id
  LEFT JOIN members
    ON namespaces.dim_namespace_id = members.source_id
  LEFT JOIN projects
    ON namespaces.dim_namespace_id = projects.namespace_id
  LEFT JOIN creators
    ON namespaces.dim_namespace_id = creators.group_id
  LEFT JOIN users
    ON creators.creator_id = users.dim_user_id
  LEFT JOIN map_namespace_internal
    ON namespace_lineage.ultimate_parent_id = map_namespace_internal.ultimate_parent_namespace_id
  LEFT JOIN product_tiers saas_product_tiers
    ON saas_product_tiers.product_deployment_type = 'GitLab.com'
      AND namespace_lineage.ultimate_parent_plan_name = LOWER(IFF(saas_product_tiers.product_tier_name_short != 'Trial: Ultimate',
        saas_product_tiers.product_tier_historical_short,
        'ultimate_trial'))
  QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        namespaces.dim_namespace_id,
        namespaces.parent_id,
        namespace_lineage.ultimate_parent_id
      ORDER BY namespaces.namespace_updated_at DESC
    ) = 1

)

{{ dbt_audit(
    cte_ref="joined",
    created_by="@ischweickartDD",
    updated_by="@jpeguero",
    created_date="2021-01-14",
    updated_date="2023-06-22"
) }}57:T22ae,



WITH namespace_current AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_namespaces_source

), namespace_snapshots AS (

    SELECT * 
    FROM "PROD".common_prep.prep_namespace_hist

), namespace_settings AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_namespace_settings_source

), namespace_lineage_historical AS (

    SELECT * 
    FROM "PREP".preparation.gitlab_dotcom_namespace_lineage_historical_daily

), map_namespace_internal AS (

    SELECT * 
    FROM "PROD".common_mapping.map_namespace_internal

), plans AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_plans_source

), product_tiers AS (

    SELECT * 
    FROM "PROD".common_prep.prep_product_tier

), members_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_members_source

), projects_source AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_projects_source

), audit_events AS (

    SELECT * 
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_audit_events_source

), audit_event_details_clean AS (

    SELECT * 
    FROM "PROD".common_prep.prep_audit_event_details_clean

), users AS (

    SELECT * 
    FROM "PROD".common_prep.prep_user

),

members AS (

  SELECT
    source_id,
    COUNT(DISTINCT member_id) AS member_count
  FROM members_source
  WHERE is_currently_valid = TRUE
    AND member_source_type = 'Namespace'
    AND NOT EXISTS (

        SELECT 1
        FROM "PREP".gitlab_dotcom.gitlab_dotcom_users_source users_source
        WHERE users_source.state = 'blocked' 
          AND users_source.user_id = members_source.user_id

    )
  GROUP BY 1

),

projects AS (

  SELECT
    namespace_id,
    COUNT(DISTINCT project_id) AS project_count
  FROM projects_source
  GROUP BY 1

),

creators AS (

  SELECT
    author_id AS creator_id,
    entity_id AS group_id
  FROM audit_events
  INNER JOIN audit_event_details_clean
    ON audit_events.audit_event_id = audit_event_details_clean.audit_event_id
  WHERE entity_type = 'Group'
    AND key_name = 'add'
    AND key_value = 'group'
  GROUP BY 1, 2

),

namespace_lineage AS (

  SELECT
    namespace_lineage_historical.*,
    IFF(ROW_NUMBER() OVER (
      PARTITION BY namespace_lineage_historical.namespace_id
      ORDER BY namespace_lineage_historical.snapshot_day DESC) = 1,
      TRUE, FALSE)     AS is_current,
    IFF(namespace_lineage_historical.snapshot_day = CURRENT_DATE,
      TRUE, FALSE)     AS ultimate_parent_is_current,
    plans.plan_title   AS ultimate_parent_plan_title,
    plans.plan_is_paid AS ultimate_parent_plan_is_paid,
    plans.plan_name    AS ultimate_parent_plan_name
  FROM namespace_lineage_historical
  INNER JOIN plans
    ON namespace_lineage_historical.ultimate_parent_plan_id = plans.plan_id
  QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        namespace_lineage_historical.namespace_id,
        namespace_lineage_historical.parent_id,
        namespace_lineage_historical.ultimate_parent_id
      ORDER BY namespace_lineage_historical.snapshot_day DESC
    ) = 1

),

namespaces AS (

  SELECT
    namespace_snapshots.*,
    IFF(namespace_current.namespace_id IS NOT NULL,
      TRUE, FALSE) AS is_current
  FROM namespace_snapshots
  LEFT JOIN namespace_current
    ON namespace_snapshots.dim_namespace_id = namespace_current.namespace_id

),

joined AS (

  SELECT
    namespaces.dim_namespace_id,
    COALESCE(namespace_lineage.ultimate_parent_id,
      namespaces.parent_id,
      namespaces.dim_namespace_id)                                          AS ultimate_parent_namespace_id,
    IFF(namespaces.dim_namespace_id = COALESCE(namespace_lineage.ultimate_parent_id,
      namespaces.parent_id,
      namespaces.dim_namespace_id),
      TRUE, FALSE)                                                          AS namespace_is_ultimate_parent,
    IFF(map_namespace_internal.ultimate_parent_namespace_id IS NOT NULL,
      TRUE, FALSE)                                                          AS namespace_is_internal,
    CASE
      WHEN namespaces.visibility_level = 'public'
        OR namespace_is_internal THEN namespace_name
      WHEN namespaces.visibility_level = 'internal' THEN 'internal - masked'
      WHEN namespaces.visibility_level = 'private' THEN 'private - masked'
    END                                                                     AS namespace_name,
    CASE
      WHEN namespaces.visibility_level = 'public'
        OR namespace_is_internal THEN namespace_path
      WHEN namespaces.visibility_level = 'internal' THEN 'internal - masked'
      WHEN namespaces.visibility_level = 'private' THEN 'private - masked'
    END                                                                     AS namespace_path,
    namespaces.owner_id,
    namespaces.namespace_type                                               AS namespace_type,
    namespaces.has_avatar,
    namespaces.namespace_created_at                                         AS created_at,
    namespaces.namespace_updated_at                                         AS updated_at,
    namespaces.is_membership_locked,
    namespaces.has_request_access_enabled,
    namespaces.has_share_with_group_locked,
    namespace_settings.is_setup_for_company,
    namespaces.visibility_level,
    namespaces.ldap_sync_status,
    namespaces.ldap_sync_error,
    namespaces.ldap_sync_last_update_at,
    namespaces.ldap_sync_last_successful_update_at,
    namespaces.ldap_sync_last_sync_at,
    namespaces.lfs_enabled,
    namespaces.parent_id,
    namespaces.shared_runners_enabled,
    namespaces.shared_runners_minutes_limit,
    namespaces.extra_shared_runners_minutes_limit,
    namespaces.repository_size_limit,
    namespaces.does_require_two_factor_authentication,
    namespaces.two_factor_grace_period,
    namespaces.project_creation_level,
    namespaces.push_rule_id,
    IFNULL(creators.creator_id, namespaces.owner_id)                        AS creator_id,
    IFNULL(users.is_blocked_user, FALSE)                                    AS namespace_creator_is_blocked,
    namespace_lineage.ultimate_parent_plan_id                               AS gitlab_plan_id,
    namespace_lineage.ultimate_parent_plan_title                            AS gitlab_plan_title,
    namespace_lineage.ultimate_parent_plan_is_paid                          AS gitlab_plan_is_paid,
    

  COALESCE(saas_product_tiers.dim_product_tier_id, MD5(-1)) 

         AS dim_product_tier_id,
    namespace_lineage.seats                                                 AS gitlab_plan_seats,
    namespace_lineage.seats_in_use                                          AS gitlab_plan_seats_in_use,
    namespace_lineage.max_seats_used                                        AS gitlab_plan_max_seats_used,
    IFNULL(members.member_count, 0)                                         AS namespace_member_count,
    IFNULL(projects.project_count, 0)                                       AS namespace_project_count,
    namespace_settings.code_suggestions                                     AS has_code_suggestions_enabled,
    IFNULL(namespaces.is_current AND namespace_lineage.is_current, FALSE)   AS is_currently_valid
  FROM namespaces
  LEFT JOIN namespace_lineage
    ON namespaces.dim_namespace_id = namespace_lineage.namespace_id
      AND IFNULL(namespaces.parent_id, namespaces.dim_namespace_id) = IFNULL(namespace_lineage.parent_id, namespace_lineage.namespace_id)
  LEFT JOIN namespace_settings
    ON namespaces.dim_namespace_id = namespace_settings.namespace_id
  LEFT JOIN members
    ON namespaces.dim_namespace_id = members.source_id
  LEFT JOIN projects
    ON namespaces.dim_namespace_id = projects.namespace_id
  LEFT JOIN creators
    ON namespaces.dim_namespace_id = creators.group_id
  LEFT JOIN users
    ON creators.creator_id = users.dim_user_id
  LEFT JOIN map_namespace_internal
    ON namespace_lineage.ultimate_parent_id = map_namespace_internal.ultimate_parent_namespace_id
  LEFT JOIN product_tiers saas_product_tiers
    ON saas_product_tiers.product_deployment_type = 'GitLab.com'
      AND namespace_lineage.ultimate_parent_plan_name = LOWER(IFF(saas_product_tiers.product_tier_name_short != 'Trial: Ultimate',
        saas_product_tiers.product_tier_historical_short,
        'ultimate_trial'))
  QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        namespaces.dim_namespace_id,
        namespaces.parent_id,
        namespace_lineage.ultimate_parent_id
      ORDER BY namespaces.namespace_updated_at DESC
    ) = 1

)

SELECT
      *,
      '@ischweickartDD'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-01-14'::DATE        AS model_created_date,
      '2023-06-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM joined58:T571,{%- macro dbt_audit(cte_ref, created_by, updated_by, created_date, updated_date) -%}

    SELECT
      *,
      '{{ created_by }}'::VARCHAR       AS created_by,
      '{{ updated_by }}'::VARCHAR       AS updated_by,
      '{{ created_date }}'::DATE        AS model_created_date,
      '{{ updated_date }}'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    {% if execute %}

        {% if not flags.FULL_REFRESH and config.get('materialized') == "incremental" %}

            {%- set source_relation = adapter.get_relation(
                database=target.database,
                schema=this.schema,
                identifier=this.table,
                ) -%}      

            {% if source_relation != None %}

                {% set min_created_date %}
                    SELECT LEAST(MIN(dbt_created_at), CURRENT_TIMESTAMP()) AS min_ts 
                    FROM {{ this }}
                {% endset %}

                {% set results = run_query(min_created_date) %}

                '{{results.columns[0].values()[0]}}'::TIMESTAMP AS dbt_created_at

            {% else %}

                CURRENT_TIMESTAMP()               AS dbt_created_at

            {% endif %}

        {% else %}

            CURRENT_TIMESTAMP()               AS dbt_created_at

        {% endif %}
    
    {% endif %}

    FROM {{ cte_ref }}

{%- endmacro -%}59:T416,Used to simplify CTE imports in a model.

A large portion of import statements in a SQL model are simple `SELECT * FROM table`. Writing pure SQL is verbose and this macro aims to simplify the imports.

The macro accepts once argument which is a list of tuples where each tuple has the alias name and the table reference.

Below is an example and the expected output:

```sql

{{ simple_cte([
    ('map_merged_crm_account','map_merged_crm_account'),
    ('zuora_account','zuora_account_source'),
    ('zuora_contact','zuora_contact_source')
]) }}

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM {{ref('zuora_excluded_accounts')}}

)

```

```sql
WITH map_merged_crm_account AS (

    SELECT * 
    FROM "PROD".common.map_merged_crm_account

), zuora_account AS (

    SELECT * 
    FROM "PREP".zuora.zuora_account_source

), zuora_contact AS (

    SELECT * 
    FROM "PREP".zuora.zuora_contact_source

)

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM "PROD".legacy.zuora_excluded_accounts

)
```5b:T58e,{{ config(
    tags=["product"]
) }}

{{ simple_cte([
    ('prep_namespace', 'prep_namespace')
]) }},

final AS (

  SELECT
    dim_namespace_id,
    namespace_is_internal,
    namespace_is_ultimate_parent,
    namespace_name,
    namespace_path,
    owner_id,
    namespace_type,
    has_avatar,
    created_at,
    updated_at,
    is_membership_locked,
    has_request_access_enabled,
    has_share_with_group_locked,
    is_setup_for_company,
    visibility_level,
    ldap_sync_status,
    ldap_sync_error,
    ldap_sync_last_update_at,
    ldap_sync_last_successful_update_at,
    ldap_sync_last_sync_at,
    lfs_enabled,
    parent_id,
    shared_runners_enabled,
    shared_runners_minutes_limit,
    extra_shared_runners_minutes_limit,
    repository_size_limit,
    does_require_two_factor_authentication,
    two_factor_grace_period,
    project_creation_level,
    push_rule_id,
    creator_id,
    namespace_creator_is_blocked,
    ultimate_parent_namespace_id,
    gitlab_plan_id,
    gitlab_plan_title,
    gitlab_plan_is_paid,
    dim_product_tier_id,
    namespace_member_count  AS current_member_count,
    namespace_project_count AS current_project_count,
    has_code_suggestions_enabled
  FROM prep_namespace
  WHERE is_currently_valid = TRUE

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@snalamaru",
    updated_by="@cbraza",
    created_date="2020-12-29",
    updated_date="2023-05-18"
) }}5c:T674,



WITH prep_namespace AS (

    SELECT * 
    FROM "PROD".common_prep.prep_namespace

),

final AS (

  SELECT
    dim_namespace_id,
    namespace_is_internal,
    namespace_is_ultimate_parent,
    namespace_name,
    namespace_path,
    owner_id,
    namespace_type,
    has_avatar,
    created_at,
    updated_at,
    is_membership_locked,
    has_request_access_enabled,
    has_share_with_group_locked,
    is_setup_for_company,
    visibility_level,
    ldap_sync_status,
    ldap_sync_error,
    ldap_sync_last_update_at,
    ldap_sync_last_successful_update_at,
    ldap_sync_last_sync_at,
    lfs_enabled,
    parent_id,
    shared_runners_enabled,
    shared_runners_minutes_limit,
    extra_shared_runners_minutes_limit,
    repository_size_limit,
    does_require_two_factor_authentication,
    two_factor_grace_period,
    project_creation_level,
    push_rule_id,
    creator_id,
    namespace_creator_is_blocked,
    ultimate_parent_namespace_id,
    gitlab_plan_id,
    gitlab_plan_title,
    gitlab_plan_is_paid,
    dim_product_tier_id,
    namespace_member_count  AS current_member_count,
    namespace_project_count AS current_project_count,
    has_code_suggestions_enabled
  FROM prep_namespace
  WHERE is_currently_valid = TRUE

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@cbraza'::VARCHAR       AS updated_by,
      '2020-12-29'::DATE        AS model_created_date,
      '2023-05-18'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM finalc:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.dim_namespace"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"dim_namespace"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","product",{"children":[["$","code",null,{"children":["$","a",null,{"children":"product"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PROD.common.dim_namespace"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"2 GB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-10 12:41UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"Includes all columns from the namespaces base model. The plan columns in this table (gitlab_plan_id, gitlab_plan_title, gitlab_plan_is_paid) reference the plan that is inheritted from the namespace's ultimate parent.\n\nThis table add a count of members and projects currently associated with the namespace.\nBoolean columns: gitlab_plan_is_paid, namespace_is_internal, namespace_is_ultimate_parent\n\nA NULL namespace type defaults to \"Individual\".\nThis table joins to common product tier dimension via dim_product_tier_id to get the current product tier."}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_NAMESPACE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_NAMESPACE_ID":{"type":"NUMBER","index":1,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_namespace_id"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":2,"name":"namespace_is_internal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_IS_ULTIMATE_PARENT":{"type":"BOOLEAN","index":3,"name":"namespace_is_ultimate_parent","comment":null,"description":"Boolean flag which is set to True if the namespace is the ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_ultimate_parent"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"namespace_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"NAMESPACE_PATH":{"type":"TEXT","index":5,"name":"namespace_path","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_path"},"OWNER_ID":{"type":"NUMBER","index":6,"name":"owner_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"owner_id"},"NAMESPACE_TYPE":{"type":"TEXT","index":7,"name":"namespace_type","comment":null,"description":"The type of namespace: Group, User, or Project.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"namespace_type"},"HAS_AVATAR":{"type":"BOOLEAN","index":8,"name":"has_avatar","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_avatar"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":9,"name":"created_at","comment":null,"description":"The timestamp of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":10,"name":"updated_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_at"},"IS_MEMBERSHIP_LOCKED":{"type":"BOOLEAN","index":11,"name":"is_membership_locked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_membership_locked"},"HAS_REQUEST_ACCESS_ENABLED":{"type":"BOOLEAN","index":12,"name":"has_request_access_enabled","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_request_access_enabled"},"HAS_SHARE_WITH_GROUP_LOCKED":{"type":"BOOLEAN","index":13,"name":"has_share_with_group_locked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_share_with_group_locked"},"IS_SETUP_FOR_COMPANY":{"type":"BOOLEAN","index":14,"name":"IS_SETUP_FOR_COMPANY","comment":null,"display_name":"is_setup_for_company"},"VISIBILITY_LEVEL":{"type":"TEXT","index":15,"name":"visibility_level","comment":null,"description":"The visibility setting for the namespace or project: public, private, or internal. More information about namespace and project visibility [here](https://docs.gitlab.com/ee/user/public_access.html)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"visibility_level"},"LDAP_SYNC_STATUS":{"type":"TEXT","index":16,"name":"LDAP_SYNC_STATUS","comment":null,"display_name":"ldap_sync_status"},"LDAP_SYNC_ERROR":{"type":"TEXT","index":17,"name":"ldap_sync_error","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_error"},"LDAP_SYNC_LAST_UPDATE_AT":{"type":"TIMESTAMP_NTZ","index":18,"name":"ldap_sync_last_update_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_update_at"},"LDAP_SYNC_LAST_SUCCESSFUL_UPDATE_AT":{"type":"TIMESTAMP_NTZ","index":19,"name":"ldap_sync_last_successful_update_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_successful_update_at"},"LDAP_SYNC_LAST_SYNC_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ldap_sync_last_sync_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_sync_at"},"LFS_ENABLED":{"type":"BOOLEAN","index":21,"name":"lfs_enabled","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lfs_enabled"},"PARENT_ID":{"type":"NUMBER","index":22,"name":"parent_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":23,"name":"SHARED_RUNNERS_ENABLED","comment":null,"display_name":"shared_runners_enabled"},"SHARED_RUNNERS_MINUTES_LIMIT":{"type":"NUMBER","index":24,"name":"shared_runners_minutes_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"shared_runners_minutes_limit"},"EXTRA_SHARED_RUNNERS_MINUTES_LIMIT":{"type":"NUMBER","index":25,"name":"extra_shared_runners_minutes_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"extra_shared_runners_minutes_limit"},"REPOSITORY_SIZE_LIMIT":{"type":"NUMBER","index":26,"name":"repository_size_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"repository_size_limit"},"DOES_REQUIRE_TWO_FACTOR_AUTHENTICATION":{"type":"BOOLEAN","index":27,"name":"does_require_two_factor_authentication","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"does_require_two_factor_authentication"},"TWO_FACTOR_GRACE_PERIOD":{"type":"NUMBER","index":28,"name":"two_factor_grace_period","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"two_factor_grace_period"},"PROJECT_CREATION_LEVEL":{"type":"NUMBER","index":29,"name":"project_creation_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_creation_level"},"PUSH_RULE_ID":{"type":"NUMBER","index":30,"name":"push_rule_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"push_rule_id"},"CREATOR_ID":{"type":"NUMBER","index":31,"name":"creator_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"creator_id"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":32,"name":"namespace_creator_is_blocked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":33,"name":"ultimate_parent_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_id"},"GITLAB_PLAN_ID":{"type":"NUMBER","index":34,"name":"gitlab_plan_id","comment":null,"description":"The **plan_id** associated with the namespace's subscription. This can be inheritted from the namespaces's ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"gitlab_plan_id"},"GITLAB_PLAN_TITLE":{"type":"TEXT","index":35,"name":"gitlab_plan_title","comment":null,"description":"Whether or not the namespace associated with the project is subscribed to a paid plan. This can be inheritted from the namespaces's ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"gitlab_plan_title"},"GITLAB_PLAN_IS_PAID":{"type":"BOOLEAN","index":36,"name":"gitlab_plan_is_paid","comment":null,"description":"Whether or not the namespace associated with the project is subscribed to a paid plan. This can be inheritted from the namespaces's ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"gitlab_plan_is_paid"},"DIM_PRODUCT_TIER_ID":{"type":"TEXT","index":37,"name":"DIM_PRODUCT_TIER_ID","comment":null,"display_name":"dim_product_tier_id"},"CURRENT_MEMBER_COUNT":{"type":"NUMBER","index":38,"name":"current_member_count","comment":null,"description":"Do not use this count, it is incorrect. Use [gitlab_dotcom_memberships](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.gitlab_dotcom_memberships) for member counts.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_member_count"},"CURRENT_PROJECT_COUNT":{"type":"NUMBER","index":39,"name":"current_project_count","comment":null,"description":"The number of projects that are presently associated with the namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_project_count"},"HAS_CODE_SUGGESTIONS_ENABLED":{"type":"BOOLEAN","index":40,"name":"has_code_suggestions_enabled","comment":null,"description":"Boolean flag set to True if the namespace has code suggestions enabled. This appears as `code_suggestions` in the gitlab.com db `namespace_settings` table.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_code_suggestions_enabled"},"CREATED_BY":{"type":"TEXT","index":41,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":42,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":43,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":44,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":45,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":46,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dap_sync_status":{"name":"dap_sync_status","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dap_sync_status"},"dim_product_tier_id,":{"name":"dim_product_tier_id,","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_tier_id,"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:41UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2379771904,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_namespace","raw_sql":"$10","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_namespace","model.gitlab_snowflake.prep_namespace"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_namespace"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_namespace.sql","original_file_path":"models/common/dimensions_shared/dim_namespace.sql","name":"dim_namespace","alias":"dim_namespace","checksum":{"name":"sha256","checksum":"d3c3eb2c87eefef5b6eb267206f557d6518f148b908434d5b6818ccf512de269"},"tags":["product"],"refs":[["prep_namespace"],["prep_namespace"]],"sources":[],"metrics":[],"description":"Includes all columns from the namespaces base model. The plan columns in this table (gitlab_plan_id, gitlab_plan_title, gitlab_plan_is_paid) reference the plan that is inheritted from the namespace's ultimate parent.\n\nThis table add a count of members and projects currently associated with the namespace.\nBoolean columns: gitlab_plan_is_paid, namespace_is_internal, namespace_is_ultimate_parent\n\nA NULL namespace type defaults to \"Individual\".\nThis table joins to common product tier dimension via dim_product_tier_id to get the current product tier.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_namespace.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product"]},"created_at":1689033751.1079912,"compiled_sql":"$11","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_namespace","label":"dim_namespace"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"MART_MARKETING_CONTACT","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_MARKETING_CONTACT_ID":{"type":"TEXT","index":1,"name":"dim_marketing_contact_id","comment":null,"description":"A primary key for the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_marketing_contact_id"},"IS_GROUP_NAMESPACE_OWNER":{"type":"BOOLEAN","index":2,"name":"is_group_namespace_owner","comment":null,"description":"Flags if group namespace owner","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_group_namespace_owner"},"IS_GROUP_NAMESPACE_MEMBER":{"type":"BOOLEAN","index":3,"name":"is_group_namespace_member","comment":null,"description":"Flags if group namespace member","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_group_namespace_member"},"IS_INDIVIDUAL_NAMESPACE_OWNER":{"type":"BOOLEAN","index":4,"name":"is_individual_namespace_owner","comment":null,"description":"Flags if personal namespace owner","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_individual_namespace_owner"},"IS_GROUP_MAINTAINER_OF_SAAS_PAID_TIER":{"type":"BOOLEAN","index":5,"name":"is_group_maintainer_of_saas_paid_tier","comment":null,"description":"Flags if group maintainer of a SaaS paid tier namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_group_maintainer_of_saas_paid_tier"},"IS_GROUP_MAINTAINER_OF_SAAS_FREE_TIER":{"type":"BOOLEAN","index":6,"name":"is_group_maintainer_of_saas_free_tier","comment":null,"description":"Flags if group maintainer of a SaaS free tier namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_group_maintainer_of_saas_free_tier"},"IS_GROUP_MAINTAINER_OF_SAAS":{"type":"BOOLEAN","index":7,"name":"is_group_maintainer_of_saas","comment":null,"description":"Flags if group maintainer of a SaaS namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_group_maintainer_of_saas"},"IS_CUSTOMER_DB_OWNER":{"type":"BOOLEAN","index":8,"name":"is_customer_db_owner","comment":null,"description":"Flags if customer db owner","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_customer_db_owner"},"IS_ZUORA_BILLING_CONTACT":{"type":"BOOLEAN","index":9,"name":"is_zuora_billing_contact","comment":null,"description":"Flags whether or not marketing contact is in Zuora","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zuora_billing_contact"},"DAYS_SINCE_SAAS_TRIAL_ENDED":{"type":"NUMBER","index":10,"name":"days_since_saas_trial_ended","comment":null,"description":"Number of days since saas trial ended","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_saas_trial_ended"},"DAYS_SINCE_SAAS_TRIAL_ENDED_BUCKET":{"type":"TEXT","index":11,"name":"DAYS_SINCE_SAAS_TRIAL_ENDED_BUCKET","comment":null,"display_name":"days_since_saas_trial_ended_bucket"},"DAYS_UNTIL_SAAS_TRIAL_ENDS":{"type":"NUMBER","index":12,"name":"days_until_saas_trial_ends","comment":null,"description":"Number of days until saas trial ends","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_until_saas_trial_ends"},"DAYS_UNTIL_SAAS_TRIAL_ENDS_BUCKET":{"type":"TEXT","index":13,"name":"DAYS_UNTIL_SAAS_TRIAL_ENDS_BUCKET","comment":null,"display_name":"days_until_saas_trial_ends_bucket"},"INDIVIDUAL_NAMESPACE_IS_SAAS_TRIAL":{"type":"BOOLEAN","index":14,"name":"individual_namespace_is_saas_trial","comment":null,"description":"Flags if individual namespace is on saas trial","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"individual_namespace_is_saas_trial"},"INDIVIDUAL_NAMESPACE_IS_SAAS_FREE_TIER":{"type":"BOOLEAN","index":15,"name":"individual_namespace_is_saas_free_tier","comment":null,"description":"Flags if individual namespace is on free saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"individual_namespace_is_saas_free_tier"},"INDIVIDUAL_NAMESPACE_IS_SAAS_BRONZE_TIER":{"type":"BOOLEAN","index":16,"name":"individual_namespace_is_saas_bronze_tier","comment":null,"description":"Flags if individual namespace is on bronze saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"individual_namespace_is_saas_bronze_tier"},"INDIVIDUAL_NAMESPACE_IS_SAAS_PREMIUM_TIER":{"type":"BOOLEAN","index":17,"name":"individual_namespace_is_saas_premium_tier","comment":null,"description":"Flags if individual namespace is on premium saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"individual_namespace_is_saas_premium_tier"},"INDIVIDUAL_NAMESPACE_IS_SAAS_ULTIMATE_TIER":{"type":"BOOLEAN","index":18,"name":"individual_namespace_is_saas_ultimate_tier","comment":null,"description":"Flags if individual namespace is on ultimate saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"individual_namespace_is_saas_ultimate_tier"},"GROUP_MEMBER_OF_SAAS_TRIAL":{"type":"BOOLEAN","index":19,"name":"group_member_of_saas_trial","comment":null,"description":"Flags if namespace of group member is on saas trial","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_member_of_saas_trial"},"GROUP_MEMBER_OF_SAAS_FREE_TIER":{"type":"BOOLEAN","index":20,"name":"group_member_of_saas_free_tier","comment":null,"description":"Flags if namespace of group member is on free saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_member_of_saas_free_tier"},"GROUP_MEMBER_OF_SAAS_BRONZE_TIER":{"type":"BOOLEAN","index":21,"name":"group_member_of_saas_bronze_tier","comment":null,"description":"Flags if namespace of group member is on bronze saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_member_of_saas_bronze_tier"},"GROUP_MEMBER_OF_SAAS_PREMIUM_TIER":{"type":"BOOLEAN","index":22,"name":"group_member_of_saas_premium_tier","comment":null,"description":"Flags if namespace of group member is on premium saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_member_of_saas_premium_tier"},"GROUP_MEMBER_OF_SAAS_ULTIMATE_TIER":{"type":"BOOLEAN","index":23,"name":"group_member_of_saas_ultimate_tier","comment":null,"description":"Flags if namespace of group member is on ultimate saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_member_of_saas_ultimate_tier"},"GROUP_OWNER_OF_SAAS_TRIAL":{"type":"BOOLEAN","index":24,"name":"group_owner_of_saas_trial","comment":null,"description":"Flags if namespace of group owner is on saas trial","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_owner_of_saas_trial"},"GROUP_OWNER_OF_SAAS_FREE_TIER":{"type":"BOOLEAN","index":25,"name":"group_owner_of_saas_free_tier","comment":null,"description":"Flags if namespace of group owner is on free saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_owner_of_saas_free_tier"},"GROUP_OWNER_OF_SAAS_BRONZE_TIER":{"type":"BOOLEAN","index":26,"name":"group_owner_of_saas_bronze_tier","comment":null,"description":"Flags if namespace of group owner is on bronze saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_owner_of_saas_bronze_tier"},"GROUP_OWNER_OF_SAAS_PREMIUM_TIER":{"type":"BOOLEAN","index":27,"name":"group_owner_of_saas_premium_tier","comment":null,"description":"Flags if namespace of group owner is on premium saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_owner_of_saas_premium_tier"},"GROUP_OWNER_OF_SAAS_ULTIMATE_TIER":{"type":"BOOLEAN","index":28,"name":"group_owner_of_saas_ultimate_tier","comment":null,"description":"Flags if namespace of group owner is on ultimate saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_owner_of_saas_ultimate_tier"},"RESPONSIBLE_FOR_GROUP_SAAS_TRIAL":{"type":"BOOLEAN","index":29,"name":"responsible_for_group_saas_trial","comment":null,"description":"Flags if is customer db owner or zuora billing contact of a saas trial","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"responsible_for_group_saas_trial"},"RESPONSIBLE_FOR_GROUP_SAAS_FREE_TIER":{"type":"BOOLEAN","index":30,"name":"responsible_for_group_saas_free_tier","comment":null,"description":"Flags if is customer db owner or zuora billing contact of a free saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"responsible_for_group_saas_free_tier"},"RESPONSIBLE_FOR_GROUP_SAAS_BRONZE_TIER":{"type":"BOOLEAN","index":31,"name":"responsible_for_group_saas_bronze_tier","comment":null,"description":"Flags if is customer db owner or zuora billing contact of a bronze saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"responsible_for_group_saas_bronze_tier"},"RESPONSIBLE_FOR_GROUP_SAAS_PREMIUM_TIER":{"type":"BOOLEAN","index":32,"name":"responsible_for_group_saas_premium_tier","comment":null,"description":"Flags if is customer db owner or zuora billing contact of a premium saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"responsible_for_group_saas_premium_tier"},"RESPONSIBLE_FOR_GROUP_SAAS_ULTIMATE_TIER":{"type":"BOOLEAN","index":33,"name":"responsible_for_group_saas_ultimate_tier","comment":null,"description":"Flags if is customer db owner or zuora billing contact of a ultimate saas tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"responsible_for_group_saas_ultimate_tier"},"IS_SELF_MANAGED_STARTER_TIER":{"type":"BOOLEAN","index":34,"name":"is_self_managed_starter_tier","comment":null,"description":"Flags if customer db owner or zuora billing account is self managed and is on starter tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_self_managed_starter_tier"},"IS_SELF_MANAGED_PREMIUM_TIER":{"type":"BOOLEAN","index":35,"name":"is_self_managed_premium_tier","comment":null,"description":"Flags if customer db owner or zuora billing account is self managed and is on premium tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_self_managed_premium_tier"},"IS_SELF_MANAGED_ULTIMATE_TIER":{"type":"BOOLEAN","index":36,"name":"is_self_managed_ultimate_tier","comment":null,"description":"Flags if customer db owner or zuora billing account is self managed and is on ultimate tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_self_managed_ultimate_tier"},"HAS_NAMESPACE_SETUP_FOR_COMPANY_USE":{"type":"BOOLEAN","index":37,"name":"has_namespace_setup_for_company_use","comment":null,"description":"If True, the marketing contact is a member of a namespace that has been checked for company use","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_namespace_setup_for_company_use"},"HAS_NAMESPACE_WITH_PUBLIC_PROJECT":{"type":"BOOLEAN","index":38,"name":"has_namespace_with_public_project","comment":null,"description":"If True, the marketing contact is a member of a namespace that has at least one public project","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_namespace_with_public_project"},"HAS_FREE_NAMESPACE_WITH_PUBLIC_PROJECT":{"type":"BOOLEAN","index":39,"name":"has_free_namespace_with_public_project","comment":null,"description":"If True, the marketing contact is a member of a Free namespace that has at least one public project","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_free_namespace_with_public_project"},"IS_MEMBER_OF_PUBLIC_ULTIMATE_PARENT_NAMESPACE":{"type":"BOOLEAN","index":40,"name":"is_member_of_public_ultimate_parent_namespace","comment":null,"description":"If True, the marketing contact is a member of an ultimate parent namespace that is public.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_member_of_public_ultimate_parent_namespace"},"IS_MEMBER_OF_PRIVATE_ULTIMATE_PARENT_NAMESPACE":{"type":"BOOLEAN","index":41,"name":"is_member_of_private_ultimate_parent_namespace","comment":null,"description":"If True, the marketing contact is a member of an ultimate parent namespace that is private.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_member_of_private_ultimate_parent_namespace"},"PUBLIC_ULTIMATE_PARENT_NAMESPACES":{"type":"ARRAY","index":42,"name":"public_ultimate_parent_namespaces","comment":null,"description":"Array containing all the public ultimate parent namespaces the marketing contact is a member of.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"public_ultimate_parent_namespaces"},"PRIVATE_ULTIMATE_PARENT_NAMESPACES":{"type":"ARRAY","index":43,"name":"private_ultimate_parent_namespaces","comment":null,"description":"Array containing all the private ultimate parent namespaces the marketing contact is a member of.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"private_ultimate_parent_namespaces"},"ROLE_TIER_ULTIMATE_NAMESPACE_TEXT":{"type":"ARRAY","index":44,"name":"ROLE_TIER_ULTIMATE_NAMESPACE_TEXT","comment":null,"display_name":"role_tier_ultimate_namespace_text"},"IS_SAAS_BRONZE_TIER":{"type":"BOOLEAN","index":45,"name":"IS_SAAS_BRONZE_TIER","comment":null,"display_name":"is_saas_bronze_tier"},"IS_SAAS_PREMIUM_TIER":{"type":"BOOLEAN","index":46,"name":"IS_SAAS_PREMIUM_TIER","comment":null,"display_name":"is_saas_premium_tier"},"IS_SAAS_ULTIMATE_TIER":{"type":"BOOLEAN","index":47,"name":"IS_SAAS_ULTIMATE_TIER","comment":null,"display_name":"is_saas_ultimate_tier"},"IS_BRONZE_STARTER_TIER":{"type":"BOOLEAN","index":48,"name":"IS_BRONZE_STARTER_TIER","comment":null,"display_name":"is_bronze_starter_tier"},"IS_PREMIUM_TIER":{"type":"BOOLEAN","index":49,"name":"IS_PREMIUM_TIER","comment":null,"display_name":"is_premium_tier"},"IS_ULTIMATE_TIER":{"type":"BOOLEAN","index":50,"name":"IS_ULTIMATE_TIER","comment":null,"display_name":"is_ultimate_tier"},"IS_SAAS_DELIVERY":{"type":"BOOLEAN","index":51,"name":"IS_SAAS_DELIVERY","comment":null,"display_name":"is_saas_delivery"},"IS_SELF_MANAGED_DELIVERY":{"type":"BOOLEAN","index":52,"name":"IS_SELF_MANAGED_DELIVERY","comment":null,"display_name":"is_self_managed_delivery"},"IS_SAAS_FREE_TIER":{"type":"BOOLEAN","index":53,"name":"IS_SAAS_FREE_TIER","comment":null,"display_name":"is_saas_free_tier"},"IS_PAID_TIER":{"type":"BOOLEAN","index":54,"name":"IS_PAID_TIER","comment":null,"display_name":"is_paid_tier"},"IS_PAID_TIER_MARKETO":{"type":"BOOLEAN","index":55,"name":"IS_PAID_TIER_MARKETO","comment":null,"display_name":"is_paid_tier_marketo"},"IS_PAID_TIER_CHANGE":{"type":"BOOLEAN","index":56,"name":"is_paid_tier_change","comment":null,"description":"This is a flag designed to keep Marketo in sync with the marketing database. If True, the marketing contact is_paid_tier flag is set to True OR the is_paid_tier flag is set to False and the is_paid_tier_marketo set to True (which means that it needs to be updated in Marketo)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_paid_tier_change"},"MIN_SUBSCRIPTION_START_DATE":{"type":"DATE","index":57,"name":"min_subscription_start_date","comment":null,"description":"Earliest subscription start date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"min_subscription_start_date"},"MAX_SUBSCRIPTION_END_DATE":{"type":"DATE","index":58,"name":"max_subscription_end_date","comment":null,"description":"Latest subscription end date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"max_subscription_end_date"},"NBR_OF_PAID_SUBSCRIPTIONS":{"type":"NUMBER","index":59,"name":"nbr_of_paid_subscriptions","comment":null,"description":"Number of paid subscriptions the user is on","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"nbr_of_paid_subscriptions"},"RESPONSIBLE_FOR_FREE_TIER_ONLY":{"type":"BOOLEAN","index":60,"name":"responsible_for_free_tier_only","comment":null,"description":"Flags if responsible for or individual namespace of only free tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"responsible_for_free_tier_only"},"EMAIL_ADDRESS":{"type":"TEXT","index":61,"name":"email_address","comment":null,"description":"Email address for the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"email_address"},"FIRST_NAME":{"type":"TEXT","index":62,"name":"first_name","comment":null,"description":"First name of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":63,"name":"last_name","comment":null,"description":"Last name of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_name"},"GITLAB_USER_NAME":{"type":"TEXT","index":64,"name":"gitlab_user_name","comment":null,"description":"Gitlab.com user name of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_user_name"},"COMPANY_NAME":{"type":"TEXT","index":65,"name":"company_name","comment":null,"description":"Company of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_name"},"SFDC_RECORD_ID":{"type":"TEXT","index":66,"name":"SFDC_RECORD_ID","comment":null,"display_name":"sfdc_record_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":67,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"JOB_TITLE":{"type":"TEXT","index":68,"name":"job_title","comment":null,"description":"Job title of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_title"},"IT_JOB_TITLE_HIERARCHY":{"type":"TEXT","index":69,"name":"it_job_title_hierarchy","comment":null,"description":"$13","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"it_job_title_hierarchy"},"COUNTRY":{"type":"TEXT","index":70,"name":"country","comment":null,"description":"Country where marketing contacted is located","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"country"},"MOBILE_PHONE":{"type":"TEXT","index":71,"name":"MOBILE_PHONE","comment":null,"display_name":"mobile_phone"},"SFDC_PARENT_SALES_SEGMENT":{"type":"TEXT","index":72,"name":"sfdc_parent_sales_segment","comment":null,"description":"Sales segment of the CRM account related to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_parent_sales_segment"},"SFDC_PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":73,"name":"SFDC_PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"sfdc_parent_crm_account_region"},"MARKETO_LEAD_ID":{"type":"FLOAT","index":74,"name":"marketo_lead_id","comment":null,"description":"Marketo id assigned to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"marketo_lead_id"},"IS_MARKETO_LEAD":{"type":"BOOLEAN","index":75,"name":"is_marketo_lead","comment":null,"description":"Flags if marketo lead","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_marketo_lead"},"IS_MARKETO_EMAIL_HARD_BOUNCED":{"type":"BOOLEAN","index":76,"name":"is_marketo_email_hard_bounced","comment":null,"description":"Flags if marketing contact email has hard bounced","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_marketo_email_hard_bounced"},"MARKETO_EMAIL_HARD_BOUNCED_DATE":{"type":"DATE","index":77,"name":"marketo_email_hard_bounced_date","comment":null,"description":"Date when the marketing contact email hard bounced","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"marketo_email_hard_bounced_date"},"IS_MARKETO_UNSUBSCRIBED":{"type":"BOOLEAN","index":78,"name":"is_marketo_unsubscribed","comment":null,"description":"A flag indicating if a lead is unsubscribed in Marketo","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_marketo_unsubscribed"},"IS_MARKETO_OPTED_IN":{"type":"BOOLEAN","index":79,"name":"is_marketo_opted_in","comment":null,"description":"Flag if a lead in marketo is opted in. This can be false and `has_marketo_unsubscribed` can be false as a lead could have started unsubscribed","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_marketo_opted_in"},"HAS_MARKETO_UNSUBSCRIBED":{"type":"BOOLEAN","index":80,"name":"has_marketo_unsubscribed","comment":null,"description":"A flag to indicate if a lead in Marketo has been unsubscribed either the preference center or other method","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_marketo_unsubscribed"},"MARKETO_COMPLIANCE_SEGMENT_VALUE":{"type":"TEXT","index":81,"name":"marketo_compliance_segment_value","comment":null,"description":"Holds one of 4 values saying if they are compliant to be emailed or not","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"marketo_compliance_segment_value"},"IS_SFDC_LEAD_CONTACT":{"type":"BOOLEAN","index":82,"name":"is_sfdc_lead_contact","comment":null,"description":"Flags whether or not marketing contact is a Salesforce contact/lead","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sfdc_lead_contact"},"SFDC_LEAD_CONTACT":{"type":"TEXT","index":83,"name":"sfdc_lead_contact","comment":null,"description":"Lists whether marketing contact is a Lead or a Contact in Salesforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_lead_contact"},"SFDC_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":84,"name":"sfdc_created_date","comment":null,"description":"Date that the Salesforce record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_created_date"},"IS_SFDC_OPTED_OUT":{"type":"BOOLEAN","index":85,"name":"is_sfdc_opted_out","comment":null,"description":"Flags whether or not contact is opted out of Salesforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sfdc_opted_out"},"IS_GITLAB_DOTCOM_USER":{"type":"BOOLEAN","index":86,"name":"IS_GITLAB_DOTCOM_USER","comment":null,"display_name":"is_gitlab_dotcom_user"},"GITLAB_DOTCOM_USER_ID":{"type":"NUMBER","index":87,"name":"GITLAB_DOTCOM_USER_ID","comment":null,"display_name":"gitlab_dotcom_user_id"},"GITLAB_DOTCOM_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":88,"name":"GITLAB_DOTCOM_CREATED_DATE","comment":null,"display_name":"gitlab_dotcom_created_date"},"GITLAB_DOTCOM_CONFIRMED_DATE":{"type":"TIMESTAMP_NTZ","index":89,"name":"GITLAB_DOTCOM_CONFIRMED_DATE","comment":null,"display_name":"gitlab_dotcom_confirmed_date"},"GITLAB_DOTCOM_ACTIVE_STATE":{"type":"TEXT","index":90,"name":"GITLAB_DOTCOM_ACTIVE_STATE","comment":null,"display_name":"gitlab_dotcom_active_state"},"GITLAB_DOTCOM_LAST_LOGIN_DATE":{"type":"TIMESTAMP_NTZ","index":91,"name":"GITLAB_DOTCOM_LAST_LOGIN_DATE","comment":null,"display_name":"gitlab_dotcom_last_login_date"},"GITLAB_DOTCOM_EMAIL_OPTED_IN":{"type":"BOOLEAN","index":92,"name":"GITLAB_DOTCOM_EMAIL_OPTED_IN","comment":null,"display_name":"gitlab_dotcom_email_opted_in"},"DAYS_SINCE_SAAS_SIGNUP":{"type":"NUMBER","index":93,"name":"days_since_saas_signup","comment":null,"description":"Number of days since gitlab_com_confirmed_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_saas_signup"},"DAYS_SINCE_SAAS_SIGNUP_BUCKET":{"type":"TEXT","index":94,"name":"DAYS_SINCE_SAAS_SIGNUP_BUCKET","comment":null,"display_name":"days_since_saas_signup_bucket"},"IS_CUSTOMER_DB_USER":{"type":"BOOLEAN","index":95,"name":"is_customer_db_user","comment":null,"description":"Flags whether or not marketing contact is in Customer_DB","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_customer_db_user"},"CUSTOMER_DB_CUSTOMER_ID":{"type":"NUMBER","index":96,"name":"customer_db_customer_id","comment":null,"description":"Customer_DB user id of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_db_customer_id"},"CUSTOMER_DB_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":97,"name":"customer_db_created_date","comment":null,"description":"Date that Customer_db record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_db_created_date"},"CUSTOMER_DB_CONFIRMED_DATE":{"type":"TIMESTAMP_NTZ","index":98,"name":"customer_db_confirmed_date","comment":null,"description":"Date that Customer_db record was confirmed for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_db_confirmed_date"},"IS_PQL":{"type":"BOOLEAN","index":99,"name":"IS_PQL","comment":null,"display_name":"is_pql"},"IS_PQL_MARKETO":{"type":"BOOLEAN","index":100,"name":"IS_PQL_MARKETO","comment":null,"display_name":"is_pql_marketo"},"IS_PQL_CHANGE":{"type":"BOOLEAN","index":101,"name":"is_pql_change","comment":null,"description":"This is a flag designed to keep Marketo in sync with the marketing database. If True, the marketing contact is_pql flag is set to True OR the is_pql flag is set to False and the is_pql_marketo flag set to True (which means that it needs to be updated in Marketo)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_pql_change"},"PQL_NAMESPACE_ID":{"type":"NUMBER","index":102,"name":"pql_namespace_id","comment":null,"description":"Namespace id of the latest PQL namespace of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_namespace_id"},"PQL_NAMESPACE_NAME":{"type":"TEXT","index":103,"name":"pql_namespace_name","comment":null,"description":"Namespace name of the latest PQL namespace of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_namespace_name"},"PQL_NAMESPACE_NAME_MASKED":{"type":"TEXT","index":104,"name":"pql_namespace_name_masked","comment":null,"description":"Masked version of PQL namespace_name. Field created to be used in mart_marketing_contact_no_pii.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_namespace_name_masked"},"PQL_PRODUCT_INTERACTION":{"type":"TEXT","index":105,"name":"pql_product_interaction","comment":null,"description":"Type of product interaction that the PQL had. As of now, it can either be SaaS Trial or Hand Raise PQL.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_product_interaction"},"PQL_LIST_STAGES":{"type":"ARRAY","index":106,"name":"pql_list_stages","comment":null,"description":"List of product stages adopted by the PQL namespace. It only counts the events done before any conversion was done (if any), SMAU events and events done in the first year of the creation of the namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_list_stages"},"PQL_NBR_STAGES":{"type":"NUMBER","index":107,"name":"pql_nbr_stages","comment":null,"description":"Number of product stages adopted by the PQL namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_nbr_stages"},"PQL_NBR_NAMESPACE_USERS":{"type":"NUMBER","index":108,"name":"pql_nbr_namespace_users","comment":null,"description":"Current member count of the PQL namespace. This is calculated using the data in the Gitlab.com members table based on the number of accepted invites. If this number is zero, this is replaced to be 1 as all namespaces have at least one member, the creator.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_nbr_namespace_users"},"PQL_TRIAL_START_DATE":{"type":"DATE","index":109,"name":"pql_trial_start_date","comment":null,"description":"Trial start date of the PQL namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_trial_start_date"},"PQL_MIN_SUBSCRIPTION_START_DATE":{"type":"DATE","index":110,"name":"PQL_MIN_SUBSCRIPTION_START_DATE","comment":null,"display_name":"pql_min_subscription_start_date"},"PQL_EVENT_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":111,"name":"pql_event_created_at","comment":null,"description":"Date that the PQL lead was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_event_created_at"},"PQL_NBR_INTEGRATIONS_INSTALLED":{"type":"NUMBER","index":112,"name":"pql_nbr_integrations_installed","comment":null,"description":"Number of integrations services installed in the latest PQL namespace of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_nbr_integrations_installed"},"PQL_INTEGRATIONS_INSTALLED":{"type":"ARRAY","index":113,"name":"pql_integrations_installed","comment":null,"description":"List of all the integrations services installed in the latest PQL namespace of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_integrations_installed"},"PQL_NAMESPACE_CREATOR_JOB_DESCRIPTION":{"type":"TEXT","index":114,"name":"pql_namespace_creator_job_description","comment":null,"description":"Namespace creator job description of the latest PQL namespace of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pql_namespace_creator_job_description"},"DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP":{"type":"NUMBER","index":115,"name":"days_since_self_managed_owner_signup","comment":null,"description":"Number of days since customer_db_confirmed_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_self_managed_owner_signup"},"DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP_BUCKET":{"type":"TEXT","index":116,"name":"DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP_BUCKET","comment":null,"display_name":"days_since_self_managed_owner_signup_bucket"},"ZUORA_CONTACT_ID":{"type":"TEXT","index":117,"name":"zuora_contact_id","comment":null,"description":"Zuora contact id of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_contact_id"},"ZUORA_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":118,"name":"zuora_created_date","comment":null,"description":"Date that Zuora record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_created_date"},"ZUORA_ACTIVE_STATE":{"type":"TEXT","index":119,"name":"zuora_active_state","comment":null,"description":"Lists if marketing contact is active in Zuora.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_active_state"},"WIP_IS_VALID_EMAIL_ADDRESS":{"type":"BOOLEAN","index":120,"name":"WIP_IS_VALID_EMAIL_ADDRESS","comment":null,"display_name":"wip_is_valid_email_address"},"WIP_INVALID_EMAIL_ADDRESS_REASON":{"type":"TEXT","index":121,"name":"wip_invalid_email_address_reason","comment":null,"description":"Reason why the email address is invalid. Work in progress - full list of invalid emails is not loaded","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"wip_invalid_email_address_reason"},"IS_PTPT_CONTACT":{"type":"BOOLEAN","index":122,"name":"is_ptpt_contact","comment":null,"description":"Flag if marketing contact has a ptpt score","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_ptpt_contact"},"IS_PTPT_CONTACT_CHANGE":{"type":"BOOLEAN","index":123,"name":"IS_PTPT_CONTACT_CHANGE","comment":null,"display_name":"is_ptpt_contact_change"},"PTPT_NAMESPACE_ID":{"type":"TEXT","index":124,"name":"ptpt_namespace_id","comment":null,"description":"Namespace id which corresponds to the propensity to purchase Trial score. More information on the propensity to purchase project can be seen [HERE](https://docs.google.com/presentation/d/1EyS9Wq6F0qlQwt5sj7x8VnSSGD1vIy3AcSpMGddZdbk/edit#slide=id.g13222807856_0_0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpt_namespace_id"},"PTPT_SCORE_GROUP":{"type":"NUMBER","index":125,"name":"ptpt_score_group","comment":null,"description":"1-5 value which condenses the likelihood to convert the ptpt_namespace_id to paid. The higher the value the more likely the conversion.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpt_score_group"},"PTPT_INSIGHTS":{"type":"TEXT","index":126,"name":"ptpt_insights","comment":null,"description":"Top explanatory insights for the ptpt_namespace_id","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpt_insights"},"PTPT_SCORE_DATE":{"type":"DATE","index":127,"name":"ptpt_score_date","comment":null,"description":"Date the ptpt_score_group was last updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpt_score_date"},"PTPT_PAST_SCORE_GROUP":{"type":"NUMBER","index":128,"name":"ptpt_past_score_group","comment":null,"description":"Past ptpt_score_group given to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpt_past_score_group"},"PTPT_PAST_SCORE_DATE":{"type":"DATE","index":129,"name":"ptpt_past_score_date","comment":null,"description":"Past ptpt_score_date given to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpt_past_score_date"},"IS_PTPF_CONTACT":{"type":"BOOLEAN","index":130,"name":"is_ptpf_contact","comment":null,"description":"Flag if marketing contact has a ptpf score","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_ptpf_contact"},"PTPF_NAMESPACE_ID":{"type":"TEXT","index":131,"name":"ptpf_namespace_id","comment":null,"description":"Namespace id which corresponds to the propensity to purchase Free score.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpf_namespace_id"},"PTPF_SCORE_GROUP":{"type":"NUMBER","index":132,"name":"ptpf_score_group","comment":null,"description":"1-5 value which condenses the likelihood to convert the ptpf_namespace_id to paid. The higher the value the more likely the conversion.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpf_score_group"},"PTPF_SCORE_DATE":{"type":"DATE","index":133,"name":"ptpf_score_date","comment":null,"description":"Date the ptpf_score_group was last updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpf_score_date"},"PTPF_PAST_SCORE_GROUP":{"type":"NUMBER","index":134,"name":"ptpf_past_score_group","comment":null,"description":"Past ptpf_score_group given to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpf_past_score_group"},"PTPF_PAST_SCORE_DATE":{"type":"DATE","index":135,"name":"ptpf_past_score_date","comment":null,"description":"Past ptpf_score_date givene to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptpf_past_score_date"},"IS_PTP_CONTACT":{"type":"BOOLEAN","index":136,"name":"is_ptp_contact","comment":null,"description":"Flag if marketing contact has a ptp score","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_ptp_contact"},"IS_PTP_CONTACT_CHANGE":{"type":"BOOLEAN","index":137,"name":"is_ptp_contact_change","comment":null,"description":"This is a flag designed to keep Marketo in sync with the marketing database. If True, the marketing contact is_ptp_contact flag is set to True OR the is_ptp_contact flag is set to False and the is_ptp_contact_marketo flag set to True (which means that it needs to be updated in Marketo)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_ptp_contact_change"},"PTP_NAMESPACE_ID":{"type":"TEXT","index":138,"name":"ptp_namespace_id","comment":null,"description":"Namespace id which corresponds to the propensity to purchase score. This is in turn a combination of the ptpt and ptpf scores and is the score that will be ultimately shown in SFDC. More information on how the scores where combined can be found in the documentation of the prep_ptp_scores_by_user dbt model.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_namespace_id"},"PTP_SCORE_GROUP":{"type":"NUMBER","index":139,"name":"ptp_score_group","comment":null,"description":"1-5 value which condenses the likelihood to convert the ptp_namespace_id to paid. The higher the value the more likely the conversion.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_score_group"},"PTP_SCORE_DATE":{"type":"DATE","index":140,"name":"ptp_score_date","comment":null,"description":"Date the ptp_score_group was last updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_score_date"},"PTP_INSIGHTS":{"type":"TEXT","index":141,"name":"ptp_insights","comment":null,"description":"Top explanatory insights for the ptp_namespace_id.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_insights"},"PTP_PAST_INSIGHTS":{"type":"TEXT","index":142,"name":"ptp_past_insights","comment":null,"description":"Top explanatory insights for the past score given to the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_past_insights"},"PTP_PAST_SCORE_GROUP":{"type":"NUMBER","index":143,"name":"ptp_past_score_group","comment":null,"description":"Past ptp_score_group assigned to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_past_score_group"},"PTP_PAST_SCORE_DATE":{"type":"DATE","index":144,"name":"ptp_past_score_date","comment":null,"description":"Past ptp_score_date assigned to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_past_score_date"},"PTP_DAYS_SINCE_TRIAL_START":{"type":"TEXT","index":145,"name":"ptp_days_since_trial_start","comment":null,"description":"Days since last trial started. Currently, only filled for marketing contacts with `ptp_source = Free`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_days_since_trial_start"},"PTP_SOURCE":{"type":"TEXT","index":146,"name":"ptp_source","comment":null,"description":"The source of the score. Currently, only two values are possible, Free (PtPF model) or Trial (PtPT model)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptp_source"},"USER_LIMIT_NAMESPACE_ID":{"type":"NUMBER","index":147,"name":"user_limit_namespace_id","comment":null,"description":"Namespace id corresponding to the user limit campaign","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_limit_namespace_id"},"USER_LIMIT_NOTIFICATION_AT":{"type":"TIMESTAMP_NTZ","index":148,"name":"user_limit_notification_at","comment":null,"description":"Date time indicating when the marketing contact user_limit_namespace_id entered the user limit notification state. More information about this field can be seen [HERE](https://gitlab.com/gitlab-org/gitlab/-/issues/375748)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_limit_notification_at"},"USER_LIMIT_ENFORCEMENT_AT":{"type":"TIMESTAMP_NTZ","index":149,"name":"user_limit_enforcement_at","comment":null,"description":"Date time indicating when the marketing contact user_limit_namespace_id entered the user limit enforcement state. More information about this field can be seen [HERE](https://gitlab.com/gitlab-org/gitlab/-/issues/375748)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_limit_enforcement_at"},"IS_IMPACTED_BY_USER_LIMIT":{"type":"BOOLEAN","index":150,"name":"is_impacted_by_user_limit","comment":null,"description":"Flag that indicates if marketing contact is affected by namespace user limit campaign","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_impacted_by_user_limit"},"IS_IMPACTED_BY_USER_LIMIT_CHANGE":{"type":"BOOLEAN","index":151,"name":"IS_IMPACTED_BY_USER_LIMIT_CHANGE","comment":null,"display_name":"is_impacted_by_user_limit_change"},"USAGE_UMAU_28_DAYS_USER":{"type":"NUMBER","index":152,"name":"USAGE_UMAU_28_DAYS_USER","comment":null,"display_name":"usage_umau_28_days_user"},"USAGE_ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":153,"name":"USAGE_ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER","comment":null,"display_name":"usage_action_monthly_active_users_project_repo_28_days_user"},"USAGE_MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":154,"name":"USAGE_MERGE_REQUESTS_28_DAYS_USER","comment":null,"display_name":"usage_merge_requests_28_days_user"},"USAGE_COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":155,"name":"USAGE_COMMIT_COMMENT_ALL_TIME_EVENT","comment":null,"display_name":"usage_commit_comment_all_time_event"},"USAGE_SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":156,"name":"USAGE_SOURCE_CODE_PUSHES_ALL_TIME_EVENT","comment":null,"display_name":"usage_source_code_pushes_all_time_event"},"USAGE_CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":157,"name":"USAGE_CI_PIPELINES_28_DAYS_USER","comment":null,"display_name":"usage_ci_pipelines_28_days_user"},"USAGE_CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":158,"name":"USAGE_CI_INTERNAL_PIPELINES_28_DAYS_USER","comment":null,"display_name":"usage_ci_internal_pipelines_28_days_user"},"USAGE_CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":159,"name":"USAGE_CI_BUILDS_28_DAYS_USER","comment":null,"display_name":"usage_ci_builds_28_days_user"},"USAGE_CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":160,"name":"USAGE_CI_BUILDS_ALL_TIME_USER","comment":null,"display_name":"usage_ci_builds_all_time_user"},"USAGE_CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"USAGE_CI_BUILDS_ALL_TIME_EVENT","comment":null,"display_name":"usage_ci_builds_all_time_event"},"USAGE_CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":162,"name":"USAGE_CI_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"usage_ci_runners_all_time_event"},"USAGE_AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":163,"name":"USAGE_AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT","comment":null,"display_name":"usage_auto_devops_enabled_all_time_event"},"USAGE_TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":164,"name":"USAGE_TEMPLATE_REPOSITORIES_ALL_TIME_EVENT","comment":null,"display_name":"usage_template_repositories_all_time_event"},"USAGE_CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":165,"name":"USAGE_CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER","comment":null,"display_name":"usage_ci_pipeline_config_repository_28_days_user"},"USAGE_USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":166,"name":"USAGE_USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER","comment":null,"display_name":"usage_user_unique_users_all_secure_scanners_28_days_user"},"USAGE_USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":167,"name":"USAGE_USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER","comment":null,"display_name":"usage_user_container_scanning_jobs_28_days_user"},"USAGE_USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":168,"name":"USAGE_USER_SAST_JOBS_28_DAYS_USER","comment":null,"display_name":"usage_user_sast_jobs_28_days_user"},"USAGE_USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":169,"name":"USAGE_USER_DAST_JOBS_28_DAYS_USER","comment":null,"display_name":"usage_user_dast_jobs_28_days_user"},"USAGE_USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":170,"name":"USAGE_USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER","comment":null,"display_name":"usage_user_dependency_scanning_jobs_28_days_user"},"USAGE_USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":171,"name":"USAGE_USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER","comment":null,"display_name":"usage_user_license_management_jobs_28_days_user"},"USAGE_USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":172,"name":"USAGE_USER_SECRET_DETECTION_JOBS_28_DAYS_USER","comment":null,"display_name":"usage_user_secret_detection_jobs_28_days_user"},"USAGE_PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":173,"name":"USAGE_PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT","comment":null,"display_name":"usage_projects_with_packages_all_time_event"},"USAGE_PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":174,"name":"USAGE_PROJECTS_WITH_PACKAGES_28_DAYS_EVENT","comment":null,"display_name":"usage_projects_with_packages_28_days_event"},"USAGE_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":175,"name":"USAGE_DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"usage_deployments_28_days_user"},"USAGE_RELEASES_28_DAYS_USER":{"type":"NUMBER","index":176,"name":"USAGE_RELEASES_28_DAYS_USER","comment":null,"display_name":"usage_releases_28_days_user"},"USAGE_EPICS_28_DAYS_USER":{"type":"NUMBER","index":177,"name":"USAGE_EPICS_28_DAYS_USER","comment":null,"display_name":"usage_epics_28_days_user"},"USAGE_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":178,"name":"USAGE_ISSUES_28_DAYS_USER","comment":null,"display_name":"usage_issues_28_days_user"},"USAGE_INSTANCE_USER_COUNT_NOT_ALIGNED":{"type":"NUMBER","index":179,"name":"USAGE_INSTANCE_USER_COUNT_NOT_ALIGNED","comment":null,"display_name":"usage_instance_user_count_not_aligned"},"USAGE_HISTORICAL_MAX_USERS_NOT_ALIGNED":{"type":"NUMBER","index":180,"name":"USAGE_HISTORICAL_MAX_USERS_NOT_ALIGNED","comment":null,"display_name":"usage_historical_max_users_not_aligned"},"LEAD_STATUS":{"type":"TEXT","index":181,"name":"LEAD_STATUS","comment":null,"display_name":"lead_status"},"LEAD_SOURCE":{"type":"TEXT","index":182,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"PREV_HASH":{"type":"TEXT","index":183,"name":"PREV_HASH","comment":null,"display_name":"prev_hash"},"LAST_CHANGED":{"type":"TIMESTAMP_LTZ","index":184,"name":"LAST_CHANGED","comment":null,"display_name":"last_changed"},"CREATED_BY":{"type":"TEXT","index":185,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":186,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":187,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":188,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":189,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":190,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"role_tier_text":{"name":"role_tier_text","description":"Json array of the person's roles and product tiers","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"role_tier_text"},"role_tier_namespace_text":{"name":"role_tier_namespace_text","description":"Json array of the person's roles and namespaces and product tiers","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"role_tier_namespace_text"},"is_gitlab_com_user":{"name":"is_gitlab_com_user","description":"Flags whether or not marketing contact is in Gitlab.com","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_gitlab_com_user"},"gitlab_com_user_id":{"name":"gitlab_com_user_id","description":"Gitlab.com user id of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_user_id"},"gitlab_com_created_date":{"name":"gitlab_com_created_date","description":"Date that the GitLab.com record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_created_date"},"gitlab_com_confirmed_date":{"name":"gitlab_com_confirmed_date","description":"Date that the GitLab.com record was confirmed for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_confirmed_date"},"gitlab_com_active_state":{"name":"gitlab_com_active_state","description":"Lists whether marketing contact is active or not in GitLab.com. Can be 'active', 'blocked', 'deactivated'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_active_state"},"gitlab_com_last_login_date":{"name":"gitlab_com_last_login_date","description":"Most recent date that marketing contact logged into gitlab.com","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_last_login_date"},"gitlab_com_email_opted_in":{"name":"gitlab_com_email_opted_in","description":"Flags whether or not contact is opted out of Gitlab.com.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_email_opted_in"},"wip_is_email_address_valid":{"name":"wip_is_email_address_valid","description":"Flags if the email address is valid. Work in progress - full list of invalid emails is not loaded","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"wip_is_email_address_valid"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 15:02UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2033378816,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_marketing_contact","raw_sql":"$14","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.hash_diff","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.bdg_marketing_contact_order","model.gitlab_snowflake.bdg_marketing_contact_order","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.gitlab_dotcom_namespaces_source","model.gitlab_snowflake.gitlab_dotcom_namespaces_source","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_members_source","model.gitlab_snowflake.gitlab_dotcom_members_source","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.customers_db_charges_xf","model.gitlab_snowflake.customers_db_charges_xf","model.gitlab_snowflake.customers_db_trials","model.gitlab_snowflake.customers_db_trials","model.gitlab_snowflake.customers_db_leads_source","model.gitlab_snowflake.customers_db_leads_source","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics","model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics","model.gitlab_snowflake.gitlab_dotcom_integrations_source","model.gitlab_snowflake.gitlab_dotcom_integrations_source","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.prep_ptpt_scores_by_user","model.gitlab_snowflake.prep_ptpt_scores_by_user","model.gitlab_snowflake.prep_ptpf_scores_by_user","model.gitlab_snowflake.prep_ptpf_scores_by_user","model.gitlab_snowflake.prep_ptp_scores_by_user","model.gitlab_snowflake.prep_ptp_scores_by_user","model.gitlab_snowflake.gitlab_dotcom_namespace_details_source","model.gitlab_snowflake.gitlab_dotcom_namespace_details_source"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","common","sensitive","mart_marketing_contact"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/sensitive/mart_marketing_contact.sql","original_file_path":"models/common/sensitive/mart_marketing_contact.sql","name":"mart_marketing_contact","alias":"mart_marketing_contact","checksum":{"name":"sha256","checksum":"82f4387b0d23609d1e098201843c1ab45ea28ba701ac9a5eab34193c76ed905d"},"tags":["product"],"refs":[["dim_marketing_contact"],["dim_marketing_contact"],["bdg_marketing_contact_order"],["bdg_marketing_contact_order"],["dim_namespace"],["dim_namespace"],["gitlab_dotcom_namespaces_source"],["gitlab_dotcom_namespaces_source"],["gitlab_dotcom_users_source"],["gitlab_dotcom_users_source"],["gitlab_dotcom_members_source"],["gitlab_dotcom_members_source"],["gitlab_dotcom_memberships"],["gitlab_dotcom_memberships"],["customers_db_charges_xf"],["customers_db_charges_xf"],["customers_db_trials"],["customers_db_trials"],["customers_db_leads_source"],["customers_db_leads_source"],["fct_event_user_daily"],["fct_event_user_daily"],["map_gitlab_dotcom_xmau_metrics"],["map_gitlab_dotcom_xmau_metrics"],["gitlab_dotcom_integrations_source"],["gitlab_dotcom_integrations_source"],["prep_project"],["prep_project"],["prep_ptpt_scores_by_user"],["prep_ptpt_scores_by_user"],["prep_ptpf_scores_by_user"],["prep_ptpf_scores_by_user"],["prep_ptp_scores_by_user"],["prep_ptp_scores_by_user"],["gitlab_dotcom_namespace_details_source"],["gitlab_dotcom_namespace_details_source"]],"sources":[],"metrics":[],"description":"This table aggregates data from namespaces, orders, and subscriptions to the level of a marketing contact. Therefore a marketing contact can fall into multiple plan types. An individual could be a Free Individual namespace owner, a member of an Ultimate Group Namespace, and an Owner of a Premium Group Namespace. Each column aggregates data to answers a specific question at the contact level.\n\nAll the usage metrics, fields prefixed by `usage_` come from the latest month of data from the Self-Managed Usage Ping data. This data is related to marketing contact by the user that makes the order in the customers portal or the billing account related to the subscription_id  of the self-managed instance. In case there are multiple self-managed instances per user, then these are summed.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/sensitive/mart_marketing_contact.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true,"tags":["product"]},"created_at":1689033756.29843,"compiled_sql":"$15","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.mart_marketing_contact","label":"mart_marketing_contact"},{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"POC_PUMP_MARKETING_CONTACT_NAMESPACE_DETAIL","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_MARKETING_CONTACT_ID":{"type":"TEXT","index":1,"name":"dim_marketing_contact_id","comment":null,"description":"A primary key for the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_marketing_contact_id"},"EMAIL_ADDRESS":{"type":"TEXT","index":2,"name":"EMAIL_ADDRESS","comment":null,"display_name":"email_address"},"FIRST_NAME":{"type":"TEXT","index":3,"name":"FIRST_NAME","comment":null,"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":4,"name":"LAST_NAME","comment":null,"display_name":"last_name"},"COUNTRY":{"type":"TEXT","index":5,"name":"COUNTRY","comment":null,"display_name":"country"},"COMPANY_NAME":{"type":"TEXT","index":6,"name":"COMPANY_NAME","comment":null,"display_name":"company_name"},"JOB_TITLE":{"type":"TEXT","index":7,"name":"JOB_TITLE","comment":null,"display_name":"job_title"},"GITLAB_DOTCOM_USER_ID":{"type":"NUMBER","index":8,"name":"GITLAB_DOTCOM_USER_ID","comment":null,"display_name":"gitlab_dotcom_user_id"},"GITLAB_USER_NAME":{"type":"TEXT","index":9,"name":"GITLAB_USER_NAME","comment":null,"display_name":"gitlab_user_name"},"GITLAB_DOTCOM_ACTIVE_STATE":{"type":"TEXT","index":10,"name":"GITLAB_DOTCOM_ACTIVE_STATE","comment":null,"display_name":"gitlab_dotcom_active_state"},"GITLAB_DOTCOM_CONFIRMED_DATE":{"type":"TIMESTAMP_NTZ","index":11,"name":"GITLAB_DOTCOM_CONFIRMED_DATE","comment":null,"display_name":"gitlab_dotcom_confirmed_date"},"GITLAB_DOTCOM_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":12,"name":"GITLAB_DOTCOM_CREATED_DATE","comment":null,"display_name":"gitlab_dotcom_created_date"},"GITLAB_DOTCOM_LAST_LOGIN_DATE":{"type":"TIMESTAMP_NTZ","index":13,"name":"GITLAB_DOTCOM_LAST_LOGIN_DATE","comment":null,"display_name":"gitlab_dotcom_last_login_date"},"GITLAB_DOTCOM_EMAIL_OPTED_IN":{"type":"BOOLEAN","index":14,"name":"GITLAB_DOTCOM_EMAIL_OPTED_IN","comment":null,"display_name":"gitlab_dotcom_email_opted_in"},"IS_PQL":{"type":"BOOLEAN","index":15,"name":"IS_PQL","comment":null,"display_name":"is_pql"},"MAX_TRIAL_START_DATE":{"type":"TIMESTAMP_NTZ","index":16,"name":"max_trial_start_date","comment":null,"description":"The most recent trial start date across all the namespaces associated with the marketing_contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"max_trial_start_date"},"NAMESPACES_ARRAY":{"type":"ARRAY","index":17,"name":"namespaces_array","comment":null,"description":"$16","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespaces_array"},"PREV_HASH":{"type":"TEXT","index":18,"name":"PREV_HASH","comment":null,"display_name":"prev_hash"},"LAST_CHANGED":{"type":"TIMESTAMP_LTZ","index":19,"name":"LAST_CHANGED","comment":null,"display_name":"last_changed"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:50UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":318652416,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.poc_pump_marketing_contact_namespace_detail","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.filter_out_blocked_users","macro.dbt_utils.group_by","macro.gitlab_snowflake.hash_diff","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.gitlab_dotcom_members_source","model.gitlab_snowflake.gitlab_dotcom_members_source","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.ptpt_scores","model.gitlab_snowflake.ptpt_scores","model.gitlab_snowflake.ptpf_scores","model.gitlab_snowflake.ptpf_scores","model.gitlab_snowflake.customers_db_trial_histories_source","model.gitlab_snowflake.customers_db_trial_histories_source","model.gitlab_snowflake.gitlab_dotcom_namespace_details_source","model.gitlab_snowflake.gitlab_dotcom_namespace_details_source","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.customers_db_trials","model.gitlab_snowflake.customers_db_trials","model.gitlab_snowflake.customers_db_charges_xf","model.gitlab_snowflake.customers_db_charges_xf","model.gitlab_snowflake.customers_db_leads_source","model.gitlab_snowflake.customers_db_leads_source","model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics","model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics","model.gitlab_snowflake.gitlab_dotcom_integrations_source","model.gitlab_snowflake.gitlab_dotcom_integrations_source","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_users_source"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","common","sensitive","poc_pump_marketing_contact_namespace_detail"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/sensitive/poc_pump_marketing_contact_namespace_detail.sql","original_file_path":"models/common/sensitive/poc_pump_marketing_contact_namespace_detail.sql","name":"poc_pump_marketing_contact_namespace_detail","alias":"poc_pump_marketing_contact_namespace_detail","checksum":{"name":"sha256","checksum":"b4c6a11217caa9a515d07b42f1e6819823a5b4717d2314ade4e35276553606fd"},"tags":[],"refs":[["dim_marketing_contact"],["dim_marketing_contact"],["gitlab_dotcom_members_source"],["gitlab_dotcom_members_source"],["dim_namespace"],["dim_namespace"],["ptpt_scores"],["ptpt_scores"],["ptpf_scores"],["ptpf_scores"],["customers_db_trial_histories_source"],["customers_db_trial_histories_source"],["gitlab_dotcom_namespace_details_source"],["gitlab_dotcom_namespace_details_source"],["gitlab_dotcom_users_source"],["gitlab_dotcom_users_source"],["gitlab_dotcom_memberships"],["gitlab_dotcom_memberships"],["customers_db_trials"],["customers_db_trials"],["customers_db_charges_xf"],["customers_db_charges_xf"],["customers_db_leads_source"],["customers_db_leads_source"],["map_gitlab_dotcom_xmau_metrics"],["map_gitlab_dotcom_xmau_metrics"],["gitlab_dotcom_integrations_source"],["gitlab_dotcom_integrations_source"],["prep_project"],["prep_project"],["fct_event_user_daily"],["fct_event_user_daily"],["gitlab_dotcom_users_source"],["gitlab_dotcom_users_source"]],"sources":[],"metrics":[],"description":"This table contains information of the marketing contact (email address) and namespace information for Gitlab.com users. The grain of the table is one row per email address, the namespace details are then stored in an array of JSON objects.  Only the ultimate parent namespaces are being synced into the namespace details array. If an user has access only to a subgroup of a ultimate parent namespace, the ultimate namespace is not linked to the ultimate namespace. For example, user A is a member of the sub group namespace 2. The ultimate parent namespace of namespace 2 is namespace 1. Since user A is only a direct member of namespace 2 and namespace 2 is not an ultimate namespace, user A has no namespaces listed in the namespace array list.  ","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/sensitive/poc_pump_marketing_contact_namespace_detail.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033756.3011067,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.poc_pump_marketing_contact_namespace_detail","label":"poc_pump_marketing_contact_namespace_detail"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART","name":"MART_EVENT_USER_DAILY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"EVENT_USER_DAILY_PK":{"type":"TEXT","index":1,"name":"event_user_daily_pk","comment":null,"description":"the unique composite ID for the mart_event_user_daily model consisting of event_date, dim_user_id, dim_ultimate_parent_namespace_id, and event_name.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"event_user_daily_pk"},"DIM_LATEST_PRODUCT_TIER_ID":{"type":"TEXT","index":2,"name":"dim_latest_product_tier_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest product tier, easily joined to `dim_product_tier`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_product_tier_id"},"DIM_LATEST_SUBSCRIPTION_ID":{"type":"TEXT","index":3,"name":"dim_latest_subscription_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest subscription, easily joined to `dim_subscription`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_subscription_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"dim_crm_account_id","comment":null,"description":"The unique identifier of a crm account, easily joined to `dim_crm_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":5,"name":"dim_billing_account_id","comment":null,"description":"The identifier of the Zuora account associated with the subscription, easily joined to `dim_billing_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_USER_SK":{"type":"TEXT","index":6,"name":"DIM_USER_SK","comment":null,"display_name":"dim_user_sk"},"DIM_USER_ID":{"type":"NUMBER","index":7,"name":"dim_user_id","comment":null,"description":"The unique identifier of the user who generated the event, easily joined to `dim_user`. This will be NULL if the event is not tied to a specific user (ex. terraform_reports, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_user_id"},"DIM_ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":8,"name":"dim_ultimate_parent_namespace_id","comment":null,"description":"The unique identifier of the ultimate parent namespace in which the event was generated, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it. This field will be NULL if the event is not tied to a namespace (ex. users_created)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ultimate_parent_namespace_id"},"DIM_EVENT_DATE_ID":{"type":"NUMBER","index":9,"name":"dim_event_date_id","comment":null,"description":"The ID of the event date, easily joined to `dim_date`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_event_date_id"},"EVENT_DATE":{"type":"DATE","index":10,"name":"event_date","comment":null,"description":"The date of the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_date"},"EVENT_NAME":{"type":"TEXT","index":11,"name":"event_name","comment":null,"description":"The name tied to the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_name"},"DAYS_SINCE_USER_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":12,"name":"days_since_user_creation_at_event_date","comment":null,"description":"The count of days between user creation and the event. This will be NULL if a user is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_user_creation_at_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":13,"name":"days_since_namespace_creation_at_event_date","comment":null,"description":"The count of days between ultimate parent namespace creation and the event. This will be NULL if a namespace is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_event_date"},"PLAN_ID_AT_EVENT_DATE":{"type":"NUMBER","index":14,"name":"plan_id_at_event_date","comment":null,"description":"The ID of the ultimate parent namespace's plan on the day the event was created (ex. 34, 100, 101, etc). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to '34' (free) if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_id_at_event_date"},"PLAN_NAME_AT_EVENT_DATE":{"type":"TEXT","index":15,"name":"plan_name_at_event_date","comment":null,"description":"The name of the ultimate parent namespace's plan type on the day when the event was created (ex. free, premium, ultimate). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to 'free' if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_name_at_event_date"},"PLAN_WAS_PAID_AT_EVENT_DATE":{"type":"BOOLEAN","index":16,"name":"plan_was_paid_at_event_date","comment":null,"description":"Boolean flag which is set to True if the ultimate parent namespace's plan was paid on the day when the event was created. If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to False if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_was_paid_at_event_date"},"STAGE_NAME":{"type":"TEXT","index":17,"name":"stage_name","comment":null,"description":"The name of the [product stage](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. secure, plan, create, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"stage_name"},"SECTION_NAME":{"type":"TEXT","index":18,"name":"section_name","comment":null,"description":"The name of the [product section](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/sections.yml) (ex. dev, ops, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"section_name"},"GROUP_NAME":{"type":"TEXT","index":19,"name":"group_name","comment":null,"description":"The name of the [product group](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. code_review, project_management, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"group_name"},"IS_SMAU":{"type":"BOOLEAN","index":20,"name":"is_smau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the stage's SMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_smau"},"IS_GMAU":{"type":"BOOLEAN","index":21,"name":"is_gmau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the group's GMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_gmau"},"IS_UMAU":{"type":"BOOLEAN","index":22,"name":"is_umau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the UMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_umau"},"DATA_SOURCE":{"type":"TEXT","index":23,"name":"data_source","comment":null,"description":"The source application where the data was extracted from (ex. GITLAB_DOTCOM, VERSION_DB)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"data_source"},"EVENT_COUNT":{"type":"NUMBER","index":24,"name":"event_count","comment":null,"description":"The count of events generated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_count"},"ULTIMATE_PARENT_NAMESPACE_TYPE":{"type":"TEXT","index":25,"name":"ultimate_parent_namespace_type","comment":null,"description":"The type of Ultimate Parent Namespace (user,group,project)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_type"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":26,"name":"namespace_is_internal","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace in which the event was generated is identified as an internal GitLab namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":27,"name":"namespace_creator_is_blocked","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace creator is in a 'blocked' or 'banned' state","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"NAMESPACE_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":28,"name":"namespace_created_at","comment":null,"description":"The timestamp of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_at"},"NAMESPACE_CREATED_DATE":{"type":"DATE","index":29,"name":"namespace_created_date","comment":null,"description":"The date of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_date"},"USER_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":30,"name":"user_created_at","comment":null,"description":"The timestamp of the user creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_created_at"},"EVENT_CALENDAR_MONTH":{"type":"DATE","index":31,"name":"event_calendar_month","comment":null,"description":"The first day of the calendar month of the event (ex. 2022-05-01, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_month"},"EVENT_CALENDAR_QUARTER":{"type":"TEXT","index":32,"name":"event_calendar_quarter","comment":null,"description":"The calendar quarter of the event (ex. 2022-Q2, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_quarter"},"EVENT_CALENDAR_YEAR":{"type":"NUMBER","index":33,"name":"event_calendar_year","comment":null,"description":"The calendar year of the event (ex. 2022, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_year"},"CREATED_BY":{"type":"TEXT","index":34,"name":"created_by","comment":null,"description":"The GitLab handle of the original model creator","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":35,"name":"updated_by","comment":null,"description":"The GitLab handle of the most recent model editor","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":36,"name":"model_created_date","comment":null,"description":"Manually input ISO date of when model was original created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":37,"name":"model_updated_date","comment":null,"description":"Manually input ISO date of when model was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":38,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":39,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 15:05UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":46054681600,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_event_user_daily","raw_sql":"$19","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.fct_event_user_daily","model.gitlab_snowflake.fct_event_user_daily"]},"config":{"enabled":true,"alias":null,"schema":"common_mart","database":"PROD","tags":["product","mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart","fqn":["gitlab_snowflake","common_mart","mart_event_user_daily"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart/mart_event_user_daily.sql","original_file_path":"models/common_mart/mart_event_user_daily.sql","name":"mart_event_user_daily","alias":"mart_event_user_daily","checksum":{"name":"sha256","checksum":"b6c09975f976433619dba55ceeffbcf765988979c6b0b4a583157a50b57f2eed"},"tags":["product","mnpi_exception"],"refs":[["dim_namespace"],["dim_namespace"],["fct_event_user_daily"],["fct_event_user_daily"],["dim_user"],["dim_user"],["dim_date"],["dim_date"],["fct_event_user_daily"],["fct_event_user_daily"]],"sources":[],"metrics":[],"description":"$1a","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart/mart_event_user_daily.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033731.50354,"compiled_sql":"$1b","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart.mart_event_user_daily","label":"mart_event_user_daily"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_MARKETING","name":"NAMESPACE_COMPANY_BASE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"USER_ID":{"type":"NUMBER","index":1,"name":"USER_ID","comment":null,"display_name":"user_id"},"USER_TYPE":{"type":"NUMBER","index":2,"name":"USER_TYPE","comment":null,"display_name":"user_type"},"MEMBERSHIP_SOURCE_TYPE":{"type":"TEXT","index":3,"name":"MEMBERSHIP_SOURCE_TYPE","comment":null,"display_name":"membership_source_type"},"ACCESS_LEVEL":{"type":"NUMBER","index":4,"name":"ACCESS_LEVEL","comment":null,"display_name":"access_level"},"ULTIMATE_PARENT_ID":{"type":"VARIANT","index":5,"name":"ULTIMATE_PARENT_ID","comment":null,"display_name":"ultimate_parent_id"},"NAMESPACE_TYPE":{"type":"TEXT","index":6,"name":"NAMESPACE_TYPE","comment":null,"display_name":"namespace_type"},"CREATOR_ID":{"type":"NUMBER","index":7,"name":"CREATOR_ID","comment":null,"display_name":"creator_id"},"RELATIONSHIP_TYPE":{"type":"TEXT","index":8,"name":"RELATIONSHIP_TYPE","comment":null,"display_name":"relationship_type"},"IS_CREATOR":{"type":"BOOLEAN","index":9,"name":"IS_CREATOR","comment":null,"display_name":"is_creator"},"IS_OWNER":{"type":"BOOLEAN","index":10,"name":"IS_OWNER","comment":null,"display_name":"is_owner"},"COMPANY_ID":{"type":"TEXT","index":11,"name":"COMPANY_ID","comment":null,"display_name":"company_id"},"CRM_ACCOUNT_ID":{"type":"TEXT","index":12,"name":"CRM_ACCOUNT_ID","comment":null,"display_name":"crm_account_id"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:58UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":214398464,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.namespace_company_base","raw_sql":"$1c","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.wk_bdg_user_company","model.gitlab_snowflake.wk_bdg_user_company","model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account"]},"config":{"enabled":true,"alias":null,"schema":"workspace_marketing","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_marketing","fqn":["gitlab_snowflake","workspaces","workspace_marketing","namespace_account_matching","namespace_company_base"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_marketing/namespace_account_matching/namespace_company_base.sql","original_file_path":"models/workspaces/workspace_marketing/namespace_account_matching/namespace_company_base.sql","name":"namespace_company_base","alias":"namespace_company_base","checksum":{"name":"sha256","checksum":"4d2259bd632eb00116c23402481ab79d5c05009e3f49c92bc6bfd2b7fef22b13"},"tags":["workspace","mnpi_exception"],"refs":[["gitlab_dotcom_memberships"],["gitlab_dotcom_memberships"],["dim_namespace"],["dim_namespace"],["wk_bdg_user_company"],["wk_bdg_user_company"],["dim_marketing_contact"],["dim_marketing_contact"],["dim_crm_account"],["dim_crm_account"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_marketing/namespace_account_matching/namespace_company_base.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033684.1327882,"compiled_sql":"$1d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_marketing.namespace_company_base","label":"namespace_company_base"},{"metadata":{"type":"BASE TABLE","schema":"PUMPS","name":"PUMP_GAINSIGHT_METRICS_MONTHLY_PAID","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SNAPSHOT_MONTH":{"type":"DATE","index":1,"name":"snapshot_month","comment":null,"description":"Month in which the product usage was reported.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_month"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":2,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_NAMESPACE_ID":{"type":"TEXT","index":3,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"NAMESPACE_NAME","comment":null,"display_name":"namespace_name"},"NAMESPACE_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":5,"name":"NAMESPACE_CREATION_DATE","comment":null,"display_name":"namespace_creation_date"},"UUID":{"type":"TEXT","index":6,"name":"uuid","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"uuid"},"HOSTNAME":{"type":"TEXT","index":7,"name":"hostname","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hostname"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":8,"name":"dim_installation_id","comment":null,"description":"The unique identifier of the installation, easily joined to `dim_installation`. This id is the combination of `dim_host_id` and `dim_instance_id` and is considered the unique identifier of the installation for reporting and analysis","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_installation_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"dim_billing_account_id","comment":null,"description":"Returns unknown ID (MD5(-1)) if the `account_id` from `fct_product_usage_wave_1_3_metrics_monthly` is not found in `dim_billing_account`.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_crm_account_id","comment":null,"description":"Returns unknown ID (MD5(-1)) if the `dim_crm_account_id` from `dim_billing_account` is not found in `dim_crm_account`.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":11,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":12,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":13,"name":"subscription_status","comment":null,"description":"Status of the subscription at the time the usage ping was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_status"},"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION":{"type":"TEXT","index":14,"name":"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION","comment":null,"display_name":"subscription_status_most_recent_version"},"TERM_START_DATE":{"type":"DATE","index":15,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":16,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":17,"name":"subscription_start_date","comment":null,"description":"Date the subscription term of the subscription_id started.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":18,"name":"subscription_end_date","comment":null,"description":"Date the subscription term of the subscription_id ended.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":19,"name":"snapshot_date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_date_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ping_created_at","comment":null,"description":"Actual date that the usage ping was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ping_created_at"},"DIM_USAGE_PING_ID":{"type":"TEXT","index":21,"name":"dim_usage_ping_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_usage_ping_id"},"INSTANCE_TYPE":{"type":"TEXT","index":22,"name":"instance_type","comment":null,"description":"Type of the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":23,"name":"INCLUDED_IN_HEALTH_MEASURES_STR","comment":null,"display_name":"included_in_health_measures_str"},"CLEANED_VERSION":{"type":"TEXT","index":24,"name":"cleaned_version","comment":null,"description":"Version of GitLab running on the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cleaned_version"},"COUNTRY_NAME":{"type":"TEXT","index":25,"name":"country_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"country_name"},"ISO_2_COUNTRY_CODE":{"type":"TEXT","index":26,"name":"iso_2_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iso_2_country_code"},"ISO_3_COUNTRY_CODE":{"type":"TEXT","index":27,"name":"iso_3_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iso_3_country_code"},"DELIVERY_TYPE":{"type":"TEXT","index":28,"name":"delivery_type","comment":null,"description":"Indicates if the product usage came from a SaaS or Self-Managed user.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"delivery_type"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":29,"name":"installation_creation_date","comment":null,"description":"Based off of the [`installation_creation_date`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20230228110448_installation_creation_date.yml) \nService Ping metric. For installations where the root user (id = 1) is not deleted, it returns the root user creation date. For installations where the root user \nis deleted, it returns the earliest available user creation date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"installation_creation_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":30,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":31,"name":"BILLABLE_USER_COUNT","comment":null,"display_name":"billable_user_count"},"ACTIVE_USER_COUNT":{"type":"NUMBER","index":32,"name":"ACTIVE_USER_COUNT","comment":null,"display_name":"active_user_count"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":33,"name":"MAX_HISTORICAL_USER_COUNT","comment":null,"display_name":"max_historical_user_count"},"LICENSE_USER_COUNT":{"type":"FLOAT","index":34,"name":"LICENSE_USER_COUNT","comment":null,"display_name":"license_user_count"},"LICENSE_USER_COUNT_SOURCE":{"type":"TEXT","index":35,"name":"LICENSE_USER_COUNT_SOURCE","comment":null,"display_name":"license_user_count_source"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":36,"name":"umau_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"action_monthly_active_users_project_repo_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"merge_requests_28_days_user","comment":null,"description":"Count distinct authors of merge requests. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175055_merge_requests.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":39,"name":"projects_with_repositories_enabled_28_days_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action, for last 28 days.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182049_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":40,"name":"commit_comment_all_time_event","comment":null,"description":"Count of total unique commit comments. Does not include MR diff comments.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216182004_commit_comment.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":41,"name":"source_code_pushes_all_time_event","comment":null,"description":"Count of total Git push operations.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216182006_source_code_pushes.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":42,"name":"ci_pipelines_28_days_user","comment":null,"description":"Distinct users triggering pipelines in a month.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175554_ci_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"ci_internal_pipelines_28_days_user","comment":null,"description":"Total pipelines in GitLab repositories in a month.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175546_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"ci_builds_28_days_user","comment":null,"description":"Unique monthly builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175542_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":45,"name":"ci_builds_all_time_user","comment":null,"description":"Unique count of builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175525_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":46,"name":"ci_builds_all_time_event","comment":null,"description":"Unique builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175510_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"ci_runners_all_time_event","comment":null,"description":"All-time count of CI Runners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_runners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"auto_devops_enabled_all_time_event","comment":null,"description":"All-time count of Projects with auto DevOps template enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsauto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":49,"name":"gitlab_shared_runners_enabled","comment":null,"description":"Flags whether shared runners are enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitlab_shared_runners_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":50,"name":"container_registry_enabled","comment":null,"description":"Flags whether container registry is enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#container_registry_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":51,"name":"template_repositories_all_time_event","comment":null,"description":"All-time total of custom project templates and projects without namespaces ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstemplate_repositories))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":52,"name":"ci_pipeline_config_repository_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines from templates in repository ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipeline_config_repository))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":53,"name":"user_unique_users_all_secure_scanners_28_days_user","comment":null,"description":"Monthly count of unique users running secure CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_unique_users_all_secure_scanners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":54,"name":"user_sast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_sast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":55,"name":"user_dast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":56,"name":"user_dependency_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running dependency scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":57,"name":"user_license_management_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running license management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_license_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":58,"name":"user_secret_detection_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running secret detection CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_secret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":59,"name":"user_container_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running container scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_container_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":60,"name":"object_store_packages_enabled","comment":null,"description":"Flags whether Object Storage is enabled for Uploads ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#object_storepackagesenabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":61,"name":"projects_with_packages_all_time_event","comment":null,"description":"All-time count of projects with package registry configured ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":62,"name":"projects_with_packages_28_days_event","comment":null,"description":"Projects with package registry enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181055_projects_with_packages.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":63,"name":"deployments_28_days_user","comment":null,"description":"Monthly count of unique users triggering deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasedeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":64,"name":"releases_28_days_user","comment":null,"description":"Monthly count of unique users authoring releases ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasereleases))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":65,"name":"epics_28_days_user","comment":null,"description":"Monthly count of unique users authoring epics ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":66,"name":"issues_28_days_user","comment":null,"description":"Monthly count of unique users authoring issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":67,"name":"ci_internal_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"ci_external_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in external repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_external_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"merge_requests_all_time_event","comment":null,"description":"All-time count of Merge Requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsmerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"todos_all_time_event","comment":null,"description":"All-time count of ToDos created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstodos))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":71,"name":"epics_all_time_event","comment":null,"description":"All-time count of Epics created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":72,"name":"issues_all_time_event","comment":null,"description":"All-time count of Issues created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":73,"name":"projects_all_time_event","comment":null,"description":"All-time count of Projects created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":74,"name":"deployments_28_days_event","comment":null,"description":"Monthly count of deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlydeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":75,"name":"packages_28_days_event","comment":null,"description":"Monthly count of Packages ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlypackages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":76,"name":"sast_jobs_all_time_event","comment":null,"description":"All-time count of SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":77,"name":"dast_jobs_all_time_event","comment":null,"description":"All-time count of DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":78,"name":"dependency_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Dependency Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":79,"name":"license_management_jobs_all_time_event","comment":null,"description":"All-time count of License Management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countslicense_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":80,"name":"secret_detection_jobs_all_time_event","comment":null,"description":"All-time count of Secret Detectionâ CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssecret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"container_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Container Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscontainer_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"projects_jenkins_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jenkins ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jenkins_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"projects_bamboo_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Bamboo CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_bamboo_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"projects_jira_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"projects_drone_ci_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Drone CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_drone_ci_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"projects_github_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_github_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"projects_jira_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Server ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"projects_jira_dvcs_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud (DVCS Connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"projects_with_repositories_enabled_all_time_event","comment":null,"description":"All-time count of projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":90,"name":"protected_branches_all_time_event","comment":null,"description":"All-time count of protected branches ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprotected_branches))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":91,"name":"remote_mirrors_all_time_event","comment":null,"description":"All-time count of remote mirrors ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsremote_mirrors))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":92,"name":"projects_enforcing_code_owner_approval_28_days_user","comment":null,"description":"Monthly count of unique users creating projects that require code owner approval ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_enforcing_code_owner_approval))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"project_clusters_enabled_28_days_user","comment":null,"description":"Monthly count of unique users using GitLab Managed enabled clusters attached to projects ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyconfigureproject_clusters_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"analytics_28_days_user","comment":null,"description":"The number of unique users viewing any [Analytics page](https://docs.gitlab.com/ee/user/analytics/) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#manage-manageoptimize---smau-gmau---mau-viewing-analytics-features))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"issues_edit_28_days_user","comment":null,"description":"Number of unique users interacting with an issue (open, close, reopen, adjust label, adjust milestone, adjust weight, comment) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#plan-planproject-management---smau-paid-gmau---mau-interacting-with-issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":96,"name":"user_packages_28_days_user","comment":null,"description":"The maximum distinct count of users who published a package to the Package Registry. In the future, this value will the distinct count of users across all Package AMAUs ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#packagepackage---smau-gmau---count-of-users-publishing-packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"terraform_state_api_28_days_user","comment":null,"description":"Monthly active users of GitLab Managed Terraform State ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#configureconfigure---smau-gmau---mau-of-gitlab-managed-terraform-state))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"incident_management_28_days_user","comment":null,"description":"Unique users that interact with alerts or incidents ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#monitormonitor---smau-gmau---unique-users-that-interact-with-alerts-and-incidents))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":99,"name":"auto_devops_enabled","comment":null,"description":"Flags whether auto DevOps is enabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#instance_auto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":100,"name":"gitaly_clusters_instance","comment":null,"description":"Number of GitLab Managed clusters both enabled and disabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitalyclusters))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":101,"name":"epics_deepest_relationship_level_instance","comment":null,"description":"Numeric level of the deepest relationship of all epics on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics_deepest_relationship_level))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":102,"name":"clusters_applications_cilium_all_time_event","comment":null,"description":"All-time total of GitLab Managed clusters with GitLab Managed App:Cilium installed ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsclusters_applications_cilium))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":103,"name":"network_policy_forwards_all_time_event","comment":null,"description":"Cumulative count of packets forwarded by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_forwards))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":104,"name":"network_policy_drops_all_time_event","comment":null,"description":"Cumulative count of packets dropped by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_drops))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":105,"name":"requirements_with_test_report_all_time_event","comment":null,"description":"All-time count of requirements having a test report ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirements_with_test_report))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":106,"name":"requirement_test_reports_ci_all_time_event","comment":null,"description":"All-time count of requirement test reports created from CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirement_test_reports_ci))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":107,"name":"projects_imported_from_github_all_time_event","comment":null,"description":"All-time count of project imported from GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_imported_from_github))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":108,"name":"projects_jira_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":109,"name":"projects_jira_dvcs_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":110,"name":"service_desk_issues_all_time_event","comment":null,"description":"All-time count of service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":111,"name":"ci_pipelines_all_time_user","comment":null,"description":"All-time count of distinct Users triggering Total pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":112,"name":"service_desk_issues_28_days_user","comment":null,"description":"Monthly count of users opening service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":113,"name":"projects_jira_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"projects_jira_dvcs_cloud_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Cloud (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":115,"name":"projects_jira_dvcs_server_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":116,"name":"merge_requests_with_required_code_owners_28_days_user","comment":null,"description":"Monthly count of users creating merge requests with required code owners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests_with_required_codeowners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":117,"name":"analytics_value_stream_28_days_event","comment":null,"description":"Monthly count of visits to [Value Stream Analytics](https://about.gitlab.com/stages-devops-lifecycle/value-stream-analytics/) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersanalyticsg_analytics_valuestream_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":118,"name":"code_review_user_approve_mr_28_days_user","comment":null,"description":"Monthly count of users approving merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_counterscode_reviewi_code_review_user_approve_mr_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":119,"name":"epics_usage_28_days_user","comment":null,"description":"Monthly users count for epics_usage ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersepics_usageepics_usage_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":120,"name":"ci_templates_usage_28_days_event","comment":null,"description":"Monthly count of CI templates ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersci_templatesci_templates_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":121,"name":"project_management_issue_milestone_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs milestone ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_milestone_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":122,"name":"project_management_issue_iteration_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs iteration ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_iteration_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":123,"name":"protected_branches_28_days_user","comment":null,"description":"Count of users creating projects with repositories making use of at least one protected branch in last 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182051_protected_branches.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":124,"name":"ci_cd_lead_time_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics lead time tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126091206_p_analytics_ci_cd_lead_time_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":125,"name":"ci_cd_deployment_frequency_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics deployment frequency tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126090835_p_analytics_ci_cd_deployment_frequency_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":126,"name":"projects_with_repositories_enabled_all_time_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182023_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":127,"name":"api_fuzzing_jobs_usage_28_days_user","comment":null,"description":"Count of distinct users creating API Fuzzing jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180355_user_api_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":128,"name":"coverage_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 coverage-guided Fuzz Testing job.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180359_coverage_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":129,"name":"api_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 API Fuzzing Testing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180401_api_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":130,"name":"container_scanning_pipeline_usage_28_days_event","comment":null,"description":"Pipelines containing a Container Scanning job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175507_container_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":131,"name":"dependency_scanning_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines with successful Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175226_dependency_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":132,"name":"sast_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 SAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182129_sast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":133,"name":"secret_detection_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 Secret Detection job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182131_secret_detection_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":134,"name":"dast_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines that have at least 1 DAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175618_dast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":135,"name":"coverage_fuzzing_jobs_28_days_user","comment":null,"description":"Users who run a coverage fuzzing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183817_user_coverage_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":136,"name":"environments_all_time_event","comment":null,"description":"Total available and stopped environments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181914_environments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":137,"name":"feature_flags_all_time_event","comment":null,"description":"Number of feature flag toggles. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181249_feature_flags.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":138,"name":"successful_deployments_28_days_event","comment":null,"description":"Total successful deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181923_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":139,"name":"failed_deployments_28_days_event","comment":null,"description":"Total failed deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181924_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":140,"name":"projects_compliance_framework_all_time_event","comment":null,"description":"Number of projects labeled with a compliance framework label. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180825_projects_with_compliance_framework.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":141,"name":"commit_ci_config_file_28_days_user","comment":null,"description":"Monthly unique user count doing commits which contains the CI config file.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184303_o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":142,"name":"view_audit_all_time_user","comment":null,"description":"Unique users who have viewed audit events. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216183906_g_compliance_audit_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":143,"name":"dependency_scanning_jobs_all_time_user","comment":null,"description":"Total number of users running Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175216_user_dependency_scanning_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":144,"name":"analytics_devops_adoption_all_time_user","comment":null,"description":"Unique users viewing analytics devops adoption. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210423005644_i_analytics_dev_ops_adoption.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":145,"name":"projects_imported_all_time_event","comment":null,"description":"Number of projects imported. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210514141520_project_imports_total.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":146,"name":"preferences_security_dashboard_28_days_user","comment":null,"description":"Users who set personal preference to see Security Dashboard on Group\n information page. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182209_user_preferences_group_overview_security_dashboard.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":147,"name":"web_ide_edit_28_days_user","comment":null,"description":"Number of unique users per month who edited a file from any web editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180327_action_monthly_active_users_ide_edit.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":148,"name":"auto_devops_pipelines_all_time_event","comment":null,"description":"Total pipelines from an Auto DevOps template. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175516_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":149,"name":"projects_prometheus_active_all_time_event","comment":null,"description":"Count of projects with active integrations for Prometheus. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180931_projects_prometheus_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":150,"name":"prometheus_enabled","comment":null,"description":"Whether the bundled Prometheus is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124912_prometheus_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":151,"name":"prometheus_metrics_enabled","comment":null,"description":"Whether Prometheus Metrics endpoint is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124914_prometheus_metrics_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":152,"name":"group_saml_enabled","comment":null,"description":"Has the instance enabled Group SAML SSO `https://docs.gitlab.com/ee/user/group/saml_sso/`\n on at least 1 group? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180813_group_saml_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":153,"name":"jira_issue_imports_all_time_event","comment":null,"description":"Count of projects imported from Jira. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180654_jira.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":154,"name":"author_epic_all_time_user","comment":null,"description":"Count distinct author ids from epics. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181134_epics.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":155,"name":"author_issue_all_time_user","comment":null,"description":"Count of users creating Issues. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181115_issues.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":156,"name":"failed_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a failed deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181937_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":157,"name":"successful_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a successful deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181941_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":158,"name":"geo_enabled","comment":null,"description":"Is Geo enabled? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180406_geo_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":159,"name":"auto_devops_pipelines_28_days_user","comment":null,"description":"Distinct users that ran an auto DevOps pipeline without a .gitlab-ci.yml file. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175548_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":160,"name":"active_instance_runners_all_time_event","comment":null,"description":"Total active Shared (Instance) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502045402_ci_runners_instance_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"active_group_runners_all_time_event","comment":null,"description":"Total active Group Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050341_ci_runners_group_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":162,"name":"active_project_runners_all_time_event","comment":null,"description":"Total active Specific (Project) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050834_ci_runners_project_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":163,"name":"gitaly_version","comment":null,"description":"Version of Gitaly. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20210204124928_version.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":164,"name":"gitaly_servers_all_time_event","comment":null,"description":"Total Gitalty Servers. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210204124930_servers.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":165,"name":"api_fuzzing_scans_all_time_event","comment":null,"description":"Number of DAST API Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180353_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":166,"name":"api_fuzzing_scans_28_days_event","comment":null,"description":"Count of API fuzz test scans. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183838_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":167,"name":"coverage_fuzzing_scans_all_time_event","comment":null,"description":"Number of Coverage Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180352_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":168,"name":"coverage_fuzzing_scans_28_days_event","comment":null,"description":"Number of Coverage Guided Fuzz Test security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183836_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":169,"name":"secret_detection_scans_all_time_event","comment":null,"description":"Counts secret detection jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182123_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":170,"name":"secret_detection_scans_28_days_event","comment":null,"description":"Number of Secret Detection security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231956_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":171,"name":"dependency_scanning_scans_all_time_event","comment":null,"description":"Total count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175220_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":172,"name":"dependency_scanning_scans_28_days_event","comment":null,"description":"Monthly count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183828_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":173,"name":"container_scanning_scans_all_time_event","comment":null,"description":"Counts container scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175503_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":174,"name":"container_scanning_scans_28_days_event","comment":null,"description":"Number of Container Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231849_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":175,"name":"dast_scans_all_time_event","comment":null,"description":"Counts dast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182122_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":176,"name":"dast_scans_28_days_event","comment":null,"description":"Number of DAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183832_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":177,"name":"sast_scans_all_time_event","comment":null,"description":"Counts sast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182120_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":178,"name":"sast_scans_28_days_event","comment":null,"description":"Number of SAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231329_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":179,"name":"packages_pushed_registry_all_time_event","comment":null,"description":"A count of packages that have been published to the package registry\nusing a deploy token. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183005_package_events_i_package_push_package_by_deploy_token.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":180,"name":"packages_pulled_registry_all_time_event","comment":null,"description":"A count of packages that have been downloaded from the package registry\nby a guest. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183000_package_events_i_package_pull_package_by_guest.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":181,"name":"compliance_dashboard_view_28_days_user","comment":null,"description":"Unique users who have viewed the compliance dashboard in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183926_g_compliance_dashboard_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":182,"name":"audit_screen_view_28_days_user","comment":null,"description":"Unique users who have viewed the audit event screen in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183930_g_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"instance_audit_screen_view_28_days_user","comment":null,"description":"Unique users that have viewed the instance-level audit events screen. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183934_i_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":184,"name":"credential_inventory_view_28_days_user","comment":null,"description":"Unique users who have viewed the credential inventory in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183938_i_compliance_credential_inventory_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":185,"name":"compliance_frameworks_pipeline_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":186,"name":"compliance_frameworks_pipeline_28_days_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210622091519_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":187,"name":"groups_streaming_destinations_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":188,"name":"groups_streaming_destinations_28_days_event","comment":null,"description":"Distinct count of groups with any event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130091657_groups_with_event_streaming_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":189,"name":"audit_event_destinations_all_time_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":190,"name":"audit_event_destinations_28_days_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":191,"name":"projects_status_checks_all_time_event","comment":null,"description":"Total number of distinct projects with external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308162514_projects_with_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":192,"name":"external_status_checks_all_time_event","comment":null,"description":"Total number of external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308155129_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":193,"name":"paid_license_search_28_days_user","comment":null,"description":"Calculated unique users to perform a search with a paid license enabled\nby month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216184035_i_search_paid_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":194,"name":"last_activity_28_days_user","comment":null,"description":"Users that have a last_activity_on date within the past 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20220621085114_unique_active_users_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":195,"name":"snippets_28_days_event","comment":null,"description":"Monthly count of All Snippets. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180312_snippets.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":196,"name":"single_file_editor_28_days_user","comment":null,"description":"Number of users editing a file from the single file editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180334_g_edit_by_sfe_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":197,"name":"merge_requests_created_28_days_event","comment":null,"description":"Count of unique merge requests created per month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20221213182900_i_code_review_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":198,"name":"merge_requests_created_28_days_user","comment":null,"description":"Count of unique users per month who created a MR. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/60dda716679ae92aa368633bdee597b8fa57984f/config/metrics/counts_28d/20210216175132_i_code_review_user_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":199,"name":"merge_requests_approval_rules_28_days_event","comment":null,"description":"Count of distinct merge requests merged using approval rules. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20221211202138_merged_merge_requests_using_approval_rules_distinct.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":200,"name":"custom_compliance_frameworks_28_days_event","comment":null,"description":"Monthly count of all custom compliance framework labels. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210507165054_custom_compliance_frameworks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":201,"name":"projects_security_policy_28_days_event","comment":null,"description":"The total number of projects with an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083011_distinct_count_project_id_from_security_orchestration_policy_configurations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":202,"name":"merge_requests_security_policy_28_days_user","comment":null,"description":"The total number of users who have created merge requests in Projects that have an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083016_user_merge_requests_for_projects_with_security_policy_project.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":203,"name":"pipelines_implicit_auto_devops_28_days_event","comment":null,"description":"Count of pipelines with implicit Auto DevOps runs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184458_p_ci_templates_implicit_auto_devops_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":204,"name":"pipeline_schedules_28_days_user","comment":null,"description":"Distinct users creating pipeline schedules in a month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175552_ci_pipeline_schedules.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":205,"name":"ci_internal_pipelines_28_days_event","comment":null,"description":"Total monthly (28D) pipelines in Gitlab repositories for all project and project types [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20230217215050_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"ci_internal_pipelines_28_days_event"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":206,"name":"is_latest_data","comment":null,"description":"Flags the row with the most recently received data from Usage Ping","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_latest_data"},"PRIMARY_KEY":{"type":"TEXT","index":207,"name":"primary_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"primary_key"},"CREATED_BY":{"type":"TEXT","index":208,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":209,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":210,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":211,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":212,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":213,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"subscription_status_original":{"name":"subscription_status_original","description":"Status of the original subscription id at the time the usage ping was created. This was added to allow a status to be reported even when manual changes to Zuora subscriptions have broken the join.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_status_original"},"subscription_start_date_original":{"name":"subscription_start_date_original","description":"Date the subscription term of the orgininal subscription version started.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date_original"},"subscription_end_date_original":{"name":"subscription_end_date_original","description":"Date the subscription term of the original subscription version ended. Because of how subscription end dates are calcuated in dim_subscription_snapshot_bottom_up, this will be the same as the subscription_end_date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date_original"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":242752000,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid","raw_sql":"$1e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_keyed_nulls","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time"]},"config":{"enabled":true,"alias":null,"schema":"pumps","database":"PROD","tags":["product","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"pumps","fqn":["gitlab_snowflake","marts","pumps","pump_gainsight_metrics_monthly_paid"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"marts/pumps/pump_gainsight_metrics_monthly_paid.sql","original_file_path":"models/marts/pumps/pump_gainsight_metrics_monthly_paid.sql","name":"pump_gainsight_metrics_monthly_paid","alias":"pump_gainsight_metrics_monthly_paid","checksum":{"name":"sha256","checksum":"cee1a3f900ebc8cc3afd6fb5821da9d30eeb172b3e3ccba677bb2ed92e204427"},"tags":["product","mnpi_exception"],"refs":[["rpt_gainsight_metrics_monthly_paid_saas"],["rpt_gainsight_metrics_monthly_paid_saas"],["rpt_gainsight_metrics_monthly_paid_self_managed"],["rpt_gainsight_metrics_monthly_paid_self_managed"],["dim_billing_account"],["dim_billing_account"],["dim_location_country"],["dim_location_country"],["dim_subscription"],["dim_subscription"],["dim_namespace"],["dim_namespace"],["mart_charge"],["mart_charge"],["dim_date"],["dim_date"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["wk_rpt_event_based_metric_counts_namespace_all_time"]],"sources":[],"metrics":[],"description":"$1f","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/marts/pumps/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/pump_gainsight_metrics_monthly_paid.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"pumps","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product","mnpi_exception"]},"created_at":1689033729.6612644,"compiled_sql":"$20","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".pumps.pump_gainsight_metrics_monthly_paid","label":"pump_gainsight_metrics_monthly_paid"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_CUSTOMER_SUCCESS","name":"MART_PRODUCT_USAGE_PAID_USER_METRICS_MONTHLY_WORKSPACE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SNAPSHOT_MONTH":{"type":"DATE","index":1,"name":"snapshot_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_month"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":2,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_NAMESPACE_ID":{"type":"TEXT","index":3,"name":"DIM_NAMESPACE_ID","comment":null,"display_name":"dim_namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"NAMESPACE_NAME","comment":null,"display_name":"namespace_name"},"NAMESPACE_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":5,"name":"NAMESPACE_CREATION_DATE","comment":null,"display_name":"namespace_creation_date"},"UUID":{"type":"TEXT","index":6,"name":"UUID","comment":null,"display_name":"uuid"},"HOSTNAME":{"type":"TEXT","index":7,"name":"HOSTNAME","comment":null,"display_name":"hostname"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":8,"name":"DIM_INSTALLATION_ID","comment":null,"display_name":"dim_installation_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"dim_billing_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":11,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":12,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":13,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION":{"type":"TEXT","index":14,"name":"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION","comment":null,"display_name":"subscription_status_most_recent_version"},"TERM_START_DATE":{"type":"DATE","index":15,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":16,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":17,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":18,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":19,"name":"snapshot_date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_date_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"PING_CREATED_AT","comment":null,"display_name":"ping_created_at"},"DIM_USAGE_PING_ID":{"type":"TEXT","index":21,"name":"DIM_USAGE_PING_ID","comment":null,"display_name":"dim_usage_ping_id"},"INSTANCE_TYPE":{"type":"TEXT","index":22,"name":"INSTANCE_TYPE","comment":null,"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":23,"name":"INCLUDED_IN_HEALTH_MEASURES_STR","comment":null,"display_name":"included_in_health_measures_str"},"CLEANED_VERSION":{"type":"TEXT","index":24,"name":"CLEANED_VERSION","comment":null,"display_name":"cleaned_version"},"COUNTRY_NAME":{"type":"TEXT","index":25,"name":"COUNTRY_NAME","comment":null,"display_name":"country_name"},"ISO_2_COUNTRY_CODE":{"type":"TEXT","index":26,"name":"ISO_2_COUNTRY_CODE","comment":null,"display_name":"iso_2_country_code"},"ISO_3_COUNTRY_CODE":{"type":"TEXT","index":27,"name":"ISO_3_COUNTRY_CODE","comment":null,"display_name":"iso_3_country_code"},"DELIVERY_TYPE":{"type":"TEXT","index":28,"name":"delivery_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"delivery_type"},"DEPLOYMENT_TYPE":{"type":"TEXT","index":29,"name":"deployment_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"deployment_type"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":30,"name":"INSTALLATION_CREATION_DATE","comment":null,"display_name":"installation_creation_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":31,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":32,"name":"BILLABLE_USER_COUNT","comment":null,"display_name":"billable_user_count"},"ACTIVE_USER_COUNT":{"type":"NUMBER","index":33,"name":"ACTIVE_USER_COUNT","comment":null,"display_name":"active_user_count"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":34,"name":"MAX_HISTORICAL_USER_COUNT","comment":null,"display_name":"max_historical_user_count"},"LICENSE_USER_COUNT":{"type":"FLOAT","index":35,"name":"LICENSE_USER_COUNT","comment":null,"display_name":"license_user_count"},"LICENSE_USER_COUNT_SOURCE":{"type":"TEXT","index":36,"name":"LICENSE_USER_COUNT_SOURCE","comment":null,"display_name":"license_user_count_source"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"UMAU_28_DAYS_USER","comment":null,"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER","comment":null,"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":39,"name":"MERGE_REQUESTS_28_DAYS_USER","comment":null,"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":40,"name":"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER","comment":null,"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":41,"name":"COMMIT_COMMENT_ALL_TIME_EVENT","comment":null,"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":42,"name":"SOURCE_CODE_PUSHES_ALL_TIME_EVENT","comment":null,"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"CI_PIPELINES_28_DAYS_USER","comment":null,"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"CI_INTERNAL_PIPELINES_28_DAYS_USER","comment":null,"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":45,"name":"CI_BUILDS_28_DAYS_USER","comment":null,"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":46,"name":"CI_BUILDS_ALL_TIME_USER","comment":null,"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"CI_BUILDS_ALL_TIME_EVENT","comment":null,"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"CI_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":49,"name":"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT","comment":null,"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":50,"name":"GITLAB_SHARED_RUNNERS_ENABLED","comment":null,"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":51,"name":"CONTAINER_REGISTRY_ENABLED","comment":null,"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":52,"name":"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT","comment":null,"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":53,"name":"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER","comment":null,"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":54,"name":"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER","comment":null,"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":55,"name":"USER_SAST_JOBS_28_DAYS_USER","comment":null,"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":56,"name":"USER_DAST_JOBS_28_DAYS_USER","comment":null,"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":57,"name":"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER","comment":null,"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":58,"name":"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER","comment":null,"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":59,"name":"USER_SECRET_DETECTION_JOBS_28_DAYS_USER","comment":null,"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":60,"name":"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER","comment":null,"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":61,"name":"OBJECT_STORE_PACKAGES_ENABLED","comment":null,"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":62,"name":"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT","comment":null,"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":63,"name":"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT","comment":null,"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":64,"name":"DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":65,"name":"RELEASES_28_DAYS_USER","comment":null,"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":66,"name":"EPICS_28_DAYS_USER","comment":null,"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":67,"name":"ISSUES_28_DAYS_USER","comment":null,"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT","comment":null,"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT","comment":null,"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"MERGE_REQUESTS_ALL_TIME_EVENT","comment":null,"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":71,"name":"TODOS_ALL_TIME_EVENT","comment":null,"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":72,"name":"EPICS_ALL_TIME_EVENT","comment":null,"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":73,"name":"ISSUES_ALL_TIME_EVENT","comment":null,"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":74,"name":"PROJECTS_ALL_TIME_EVENT","comment":null,"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":75,"name":"DEPLOYMENTS_28_DAYS_EVENT","comment":null,"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":76,"name":"PACKAGES_28_DAYS_EVENT","comment":null,"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":77,"name":"SAST_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":78,"name":"DAST_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":79,"name":"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":80,"name":"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"SECRET_DETECTION_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":90,"name":"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT","comment":null,"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":91,"name":"PROTECTED_BRANCHES_ALL_TIME_EVENT","comment":null,"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":92,"name":"REMOTE_MIRRORS_ALL_TIME_EVENT","comment":null,"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER","comment":null,"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER","comment":null,"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"ANALYTICS_28_DAYS_USER","comment":null,"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":96,"name":"ISSUES_EDIT_28_DAYS_USER","comment":null,"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"USER_PACKAGES_28_DAYS_USER","comment":null,"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"TERRAFORM_STATE_API_28_DAYS_USER","comment":null,"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":99,"name":"INCIDENT_MANAGEMENT_28_DAYS_USER","comment":null,"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":100,"name":"AUTO_DEVOPS_ENABLED","comment":null,"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":101,"name":"GITALY_CLUSTERS_INSTANCE","comment":null,"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":102,"name":"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE","comment":null,"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":103,"name":"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT","comment":null,"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":104,"name":"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT","comment":null,"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":105,"name":"NETWORK_POLICY_DROPS_ALL_TIME_EVENT","comment":null,"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":106,"name":"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT","comment":null,"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":107,"name":"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT","comment":null,"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":108,"name":"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT","comment":null,"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":109,"name":"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":110,"name":"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":111,"name":"SERVICE_DESK_ISSUES_ALL_TIME_EVENT","comment":null,"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":112,"name":"CI_PIPELINES_ALL_TIME_USER","comment":null,"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":113,"name":"SERVICE_DESK_ISSUES_28_DAYS_USER","comment":null,"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"PROJECTS_JIRA_ACTIVE_28_DAYS_USER","comment":null,"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":115,"name":"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER","comment":null,"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":116,"name":"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER","comment":null,"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":117,"name":"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER","comment":null,"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":118,"name":"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT","comment":null,"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":119,"name":"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER","comment":null,"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":120,"name":"EPICS_USAGE_28_DAYS_USER","comment":null,"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":121,"name":"CI_TEMPLATES_USAGE_28_DAYS_EVENT","comment":null,"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":122,"name":"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER","comment":null,"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":123,"name":"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER","comment":null,"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":124,"name":"PROTECTED_BRANCHES_28_DAYS_USER","comment":null,"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":125,"name":"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT","comment":null,"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":126,"name":"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT","comment":null,"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":127,"name":"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER","comment":null,"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":128,"name":"API_FUZZING_JOBS_USAGE_28_DAYS_USER","comment":null,"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":129,"name":"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":130,"name":"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":131,"name":"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":132,"name":"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":133,"name":"SAST_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":134,"name":"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":135,"name":"DAST_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":136,"name":"COVERAGE_FUZZING_JOBS_28_DAYS_USER","comment":null,"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":137,"name":"ENVIRONMENTS_ALL_TIME_EVENT","comment":null,"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":138,"name":"FEATURE_FLAGS_ALL_TIME_EVENT","comment":null,"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":139,"name":"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT","comment":null,"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":140,"name":"FAILED_DEPLOYMENTS_28_DAYS_EVENT","comment":null,"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":141,"name":"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT","comment":null,"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":142,"name":"COMMIT_CI_CONFIG_FILE_28_DAYS_USER","comment":null,"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":143,"name":"VIEW_AUDIT_ALL_TIME_USER","comment":null,"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":144,"name":"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER","comment":null,"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":145,"name":"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER","comment":null,"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":146,"name":"PROJECTS_IMPORTED_ALL_TIME_EVENT","comment":null,"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":147,"name":"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER","comment":null,"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":148,"name":"WEB_IDE_EDIT_28_DAYS_USER","comment":null,"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":149,"name":"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT","comment":null,"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":150,"name":"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":151,"name":"PROMETHEUS_ENABLED","comment":null,"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":152,"name":"PROMETHEUS_METRICS_ENABLED","comment":null,"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":153,"name":"GROUP_SAML_ENABLED","comment":null,"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":154,"name":"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT","comment":null,"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":155,"name":"AUTHOR_EPIC_ALL_TIME_USER","comment":null,"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":156,"name":"AUTHOR_ISSUE_ALL_TIME_USER","comment":null,"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":157,"name":"FAILED_DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":158,"name":"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":159,"name":"GEO_ENABLED","comment":null,"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":160,"name":"AUTO_DEVOPS_PIPELINES_28_DAYS_USER","comment":null,"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":162,"name":"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":163,"name":"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":164,"name":"GITALY_VERSION","comment":null,"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":165,"name":"GITALY_SERVERS_ALL_TIME_EVENT","comment":null,"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":166,"name":"API_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":167,"name":"API_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":168,"name":"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":169,"name":"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":170,"name":"SECRET_DETECTION_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":171,"name":"SECRET_DETECTION_SCANS_28_DAYS_EVENT","comment":null,"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":172,"name":"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":173,"name":"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":174,"name":"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":175,"name":"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":176,"name":"DAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":177,"name":"DAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":178,"name":"SAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":179,"name":"SAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":180,"name":"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":181,"name":"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":182,"name":"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER","comment":null,"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":184,"name":"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":185,"name":"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER","comment":null,"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":186,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":187,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":188,"name":"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":189,"name":"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":190,"name":"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":191,"name":"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":192,"name":"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":193,"name":"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":194,"name":"PAID_LICENSE_SEARCH_28_DAYS_USER","comment":null,"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":195,"name":"LAST_ACTIVITY_28_DAYS_USER","comment":null,"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":196,"name":"SNIPPETS_28_DAYS_EVENT","comment":null,"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":197,"name":"SINGLE_FILE_EDITOR_28_DAYS_USER","comment":null,"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":198,"name":"MERGE_REQUESTS_CREATED_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":199,"name":"MERGE_REQUESTS_CREATED_28_DAYS_USER","comment":null,"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":200,"name":"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":201,"name":"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT","comment":null,"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":202,"name":"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT","comment":null,"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":203,"name":"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER","comment":null,"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":204,"name":"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT","comment":null,"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":205,"name":"PIPELINE_SCHEDULES_28_DAYS_USER","comment":null,"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":206,"name":"CI_INTERNAL_PIPELINES_28_DAYS_EVENT","comment":null,"display_name":"ci_internal_pipelines_28_days_event"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":207,"name":"IS_LATEST_DATA","comment":null,"display_name":"is_latest_data"},"PRIMARY_KEY":{"type":"TEXT","index":208,"name":"primary_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"primary_key"},"CREATED_BY":{"type":"TEXT","index":209,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":210,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":211,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":212,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":213,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":214,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:53UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":1299031552,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_product_usage_paid_user_metrics_monthly_workspace","raw_sql":"$21","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_keyed_nulls","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_saas_product_usage_metrics_monthly","model.gitlab_snowflake.fct_saas_product_usage_metrics_monthly","model.gitlab_snowflake.fct_ping_instance_metric_wave_monthly","model.gitlab_snowflake.fct_ping_instance_metric_wave_monthly","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail"]},"config":{"enabled":true,"alias":null,"schema":"workspace_customer_success","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_customer_success","fqn":["gitlab_snowflake","workspaces","workspace_customer_success","mart_product_usage_paid_user_metrics_monthly_workspace"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_customer_success/mart_product_usage_paid_user_metrics_monthly_workspace.sql","original_file_path":"models/workspaces/workspace_customer_success/mart_product_usage_paid_user_metrics_monthly_workspace.sql","name":"mart_product_usage_paid_user_metrics_monthly_workspace","alias":"mart_product_usage_paid_user_metrics_monthly_workspace","checksum":{"name":"sha256","checksum":"800b6674710aec03940f65166e6718adaaca14a23a70b28f121543cb6ba310fb"},"tags":["workspace","mnpi_exception"],"refs":[["fct_saas_product_usage_metrics_monthly"],["fct_saas_product_usage_metrics_monthly"],["fct_ping_instance_metric_wave_monthly"],["fct_ping_instance_metric_wave_monthly"],["dim_billing_account"],["dim_billing_account"],["dim_location_country"],["dim_location_country"],["dim_subscription"],["dim_subscription"],["dim_namespace"],["dim_namespace"],["mart_charge"],["mart_charge"],["dim_date"],["dim_date"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["dim_product_detail"],["dim_product_detail"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_customer_success/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_customer_success/mart_product_usage_paid_user_metrics_monthly_workspace.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_customer_success","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033732.8935497,"compiled_sql":"$22","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_customer_success.mart_product_usage_paid_user_metrics_monthly_workspace","label":"mart_product_usage_paid_user_metrics_monthly_workspace"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_ENGINEERING","name":"INTERNAL_ISSUES_ENHANCED","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"ISSUE_ID":{"type":"NUMBER","index":1,"name":"ISSUE_ID","comment":null,"display_name":"issue_id"},"ISSUE_IID":{"type":"NUMBER","index":2,"name":"ISSUE_IID","comment":null,"display_name":"issue_iid"},"AUTHOR_ID":{"type":"NUMBER","index":3,"name":"AUTHOR_ID","comment":null,"display_name":"author_id"},"IS_CREATED_BY_BOT":{"type":"BOOLEAN","index":4,"name":"IS_CREATED_BY_BOT","comment":null,"display_name":"is_created_by_bot"},"PROJECT_ID":{"type":"NUMBER","index":5,"name":"PROJECT_ID","comment":null,"display_name":"project_id"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":6,"name":"CREATED_AT","comment":null,"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":7,"name":"UPDATED_AT","comment":null,"display_name":"updated_at"},"CLOSED_AT":{"type":"TIMESTAMP_NTZ","index":8,"name":"CLOSED_AT","comment":null,"display_name":"closed_at"},"CREATED_MONTH":{"type":"DATE","index":9,"name":"CREATED_MONTH","comment":null,"display_name":"created_month"},"CLOSED_MONTH":{"type":"DATE","index":10,"name":"CLOSED_MONTH","comment":null,"display_name":"closed_month"},"DAYS_TO_CLOSE":{"type":"NUMBER","index":11,"name":"DAYS_TO_CLOSE","comment":null,"display_name":"days_to_close"},"ISSUE_TITLE":{"type":"TEXT","index":12,"name":"ISSUE_TITLE","comment":null,"display_name":"issue_title"},"ISSUE_DESCRIPTION":{"type":"TEXT","index":13,"name":"ISSUE_DESCRIPTION","comment":null,"display_name":"issue_description"},"MILESTONE_ID":{"type":"NUMBER","index":14,"name":"MILESTONE_ID","comment":null,"display_name":"milestone_id"},"MILESTONE_TITLE":{"type":"TEXT","index":15,"name":"MILESTONE_TITLE","comment":null,"display_name":"milestone_title"},"MILESTONE_DESCRIPTION":{"type":"TEXT","index":16,"name":"MILESTONE_DESCRIPTION","comment":null,"display_name":"milestone_description"},"MILESTONE_START_DATE":{"type":"DATE","index":17,"name":"MILESTONE_START_DATE","comment":null,"display_name":"milestone_start_date"},"MILESTONE_DUE_DATE":{"type":"DATE","index":18,"name":"MILESTONE_DUE_DATE","comment":null,"display_name":"milestone_due_date"},"WEIGHT":{"type":"NUMBER","index":19,"name":"WEIGHT","comment":null,"display_name":"weight"},"NAMESPACE_ID":{"type":"NUMBER","index":20,"name":"NAMESPACE_ID","comment":null,"display_name":"namespace_id"},"ULTIMATE_PARENT_ID":{"type":"NUMBER","index":21,"name":"ULTIMATE_PARENT_ID","comment":null,"display_name":"ultimate_parent_id"},"LABELS":{"type":"ARRAY","index":22,"name":"LABELS","comment":null,"display_name":"labels"},"MASKED_LABEL_TITLE":{"type":"TEXT","index":23,"name":"MASKED_LABEL_TITLE","comment":null,"display_name":"masked_label_title"},"IS_COMMUNITY_CONTRIBUTION":{"type":"BOOLEAN","index":24,"name":"IS_COMMUNITY_CONTRIBUTION","comment":null,"display_name":"is_community_contribution"},"IS_SECURITY":{"type":"BOOLEAN","index":25,"name":"IS_SECURITY","comment":null,"display_name":"is_security"},"IS_CORRECTIVE_ACTION":{"type":"BOOLEAN","index":26,"name":"IS_CORRECTIVE_ACTION","comment":null,"display_name":"is_corrective_action"},"PRIORITY_LABEL":{"type":"TEXT","index":27,"name":"PRIORITY_LABEL","comment":null,"display_name":"priority_label"},"SEVERITY_LABEL":{"type":"TEXT","index":28,"name":"SEVERITY_LABEL","comment":null,"display_name":"severity_label"},"GROUP_LABEL":{"type":"TEXT","index":29,"name":"GROUP_LABEL","comment":null,"display_name":"group_label"},"SECTION_LABEL":{"type":"TEXT","index":30,"name":"SECTION_LABEL","comment":null,"display_name":"section_label"},"STAGE_LABEL":{"type":"TEXT","index":31,"name":"STAGE_LABEL","comment":null,"display_name":"stage_label"},"TYPE_LABEL":{"type":"TEXT","index":32,"name":"TYPE_LABEL","comment":null,"display_name":"type_label"},"SUBTYPE_LABEL":{"type":"TEXT","index":33,"name":"SUBTYPE_LABEL","comment":null,"display_name":"subtype_label"},"WORKFLOW_LABEL":{"type":"TEXT","index":34,"name":"WORKFLOW_LABEL","comment":null,"display_name":"workflow_label"},"IS_INFRADEV":{"type":"BOOLEAN","index":35,"name":"IS_INFRADEV","comment":null,"display_name":"is_infradev"},"FEDRAMP_VULNERABILITY":{"type":"BOOLEAN","index":36,"name":"FEDRAMP_VULNERABILITY","comment":null,"display_name":"fedramp_vulnerability"},"VISIBILITY_LEVEL":{"type":"TEXT","index":37,"name":"VISIBILITY_LEVEL","comment":null,"display_name":"visibility_level"},"PROJECT_PATH":{"type":"TEXT","index":38,"name":"PROJECT_PATH","comment":null,"display_name":"project_path"},"FULL_GROUP_PATH":{"type":"TEXT","index":39,"name":"FULL_GROUP_PATH","comment":null,"display_name":"full_group_path"},"URL":{"type":"TEXT","index":40,"name":"URL","comment":null,"display_name":"url"},"IS_PART_OF_PRODUCT":{"type":"BOOLEAN","index":41,"name":"IS_PART_OF_PRODUCT","comment":null,"display_name":"is_part_of_product"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:51UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":1142859264,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.internal_issues_enhanced","raw_sql":"$23","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.internal_issues","model.gitlab_snowflake.internal_issues","model.gitlab_snowflake.gitlab_dotcom_namespace_lineage_scd","model.gitlab_snowflake.gitlab_dotcom_namespace_lineage_scd","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.gitlab_dotcom_milestones","model.gitlab_snowflake.gitlab_dotcom_milestones","seed.gitlab_snowflake.engineering_analytics_workflow_labels","seed.gitlab_snowflake.engineering_analytics_workflow_labels","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_project"]},"config":{"enabled":true,"alias":null,"schema":"workspace_engineering","database":"PROD","tags":["workspace"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_engineering","fqn":["gitlab_snowflake","workspaces","workspace_engineering","internal_issues_enhanced"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_engineering/internal_issues_enhanced.sql","original_file_path":"models/workspaces/workspace_engineering/internal_issues_enhanced.sql","name":"internal_issues_enhanced","alias":"internal_issues_enhanced","checksum":{"name":"sha256","checksum":"e5bc51925b364b097d72e0c73849069b2e49d62665a42e403e4ec9e1fa62b5c7"},"tags":["workspace"],"refs":[["internal_issues"],["internal_issues"],["gitlab_dotcom_namespace_lineage_scd"],["gitlab_dotcom_namespace_lineage_scd"],["dim_namespace"],["dim_namespace"],["stages_groups_yaml_source"],["stages_groups_yaml_source"],["stages_groups_yaml_source"],["stages_groups_yaml_source"],["dim_user"],["dim_user"],["gitlab_dotcom_milestones"],["gitlab_dotcom_milestones"],["engineering_analytics_workflow_labels"],["engineering_analytics_workflow_labels"],["dim_project"],["dim_project"]],"sources":[],"metrics":[],"description":"A model containing all issues. This model includes relevant and common flags that are used in engineering metrics.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_engineering/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_engineering/internal_issues_enhanced.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_engineering","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["workspace"]},"created_at":1689033733.4033933,"compiled_sql":"$24","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_engineering.internal_issues_enhanced","label":"internal_issues_enhanced"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_ENGINEERING","name":"CONTAINER_DOWNLOADS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DOWNLOADED_DATE":{"type":"DATE","index":1,"name":"DOWNLOADED_DATE","comment":null,"display_name":"downloaded_date"},"CONTAINER_REPOSITORY_ID":{"type":"NUMBER","index":2,"name":"CONTAINER_REPOSITORY_ID","comment":null,"display_name":"container_repository_id"},"PROJECT_ID":{"type":"NUMBER","index":3,"name":"PROJECT_ID","comment":null,"display_name":"project_id"},"NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"NAMESPACE_ID","comment":null,"display_name":"namespace_id"},"NAMESPACE_PATH":{"type":"TEXT","index":5,"name":"NAMESPACE_PATH","comment":null,"display_name":"namespace_path"},"CONTAINER_PATH":{"type":"TEXT","index":6,"name":"CONTAINER_PATH","comment":null,"display_name":"container_path"},"ULTIMATE_PARENT_ID":{"type":"NUMBER","index":7,"name":"ULTIMATE_PARENT_ID","comment":null,"display_name":"ultimate_parent_id"},"ULTIMATE_PARENT_NAME":{"type":"TEXT","index":8,"name":"ULTIMATE_PARENT_NAME","comment":null,"display_name":"ultimate_parent_name"},"ULTIMATE_PARENT_PATH":{"type":"TEXT","index":9,"name":"ULTIMATE_PARENT_PATH","comment":null,"display_name":"ultimate_parent_path"},"NAMESPACE_TYPE":{"type":"TEXT","index":10,"name":"NAMESPACE_TYPE","comment":null,"display_name":"namespace_type"},"GITLAB_PLAN_ID":{"type":"NUMBER","index":11,"name":"GITLAB_PLAN_ID","comment":null,"display_name":"gitlab_plan_id"},"GITLAB_PLAN_TYPE":{"type":"TEXT","index":12,"name":"GITLAB_PLAN_TYPE","comment":null,"display_name":"gitlab_plan_type"},"GITLAB_PLAN_TITLE":{"type":"TEXT","index":13,"name":"GITLAB_PLAN_TITLE","comment":null,"display_name":"gitlab_plan_title"},"GITLAB_PLAN_IS_PAID":{"type":"BOOLEAN","index":14,"name":"GITLAB_PLAN_IS_PAID","comment":null,"display_name":"gitlab_plan_is_paid"},"CREATOR_ID":{"type":"NUMBER","index":15,"name":"CREATOR_ID","comment":null,"display_name":"creator_id"},"CURRENT_MEMBER_COUNT":{"type":"NUMBER","index":16,"name":"CURRENT_MEMBER_COUNT","comment":null,"display_name":"current_member_count"},"CURRENT_PROJECT_COUNT":{"type":"NUMBER","index":17,"name":"CURRENT_PROJECT_COUNT","comment":null,"display_name":"current_project_count"},"DOWNLOAD_COUNT":{"type":"NUMBER","index":18,"name":"DOWNLOAD_COUNT","comment":null,"display_name":"download_count"},"GCP_SCOPE":{"type":"TEXT","index":19,"name":"GCP_SCOPE","comment":null,"display_name":"gcp_scope"},"TOTAL_BYTES":{"type":"NUMBER","index":20,"name":"TOTAL_BYTES","comment":null,"display_name":"total_bytes"},"AVG_BYTES":{"type":"NUMBER","index":21,"name":"AVG_BYTES","comment":null,"display_name":"avg_bytes"},"TOTAL_GB":{"type":"NUMBER","index":22,"name":"TOTAL_GB","comment":null,"display_name":"total_gb"},"TOTAL_GIB":{"type":"NUMBER","index":23,"name":"TOTAL_GIB","comment":null,"display_name":"total_gib"},"EST_COST":{"type":"NUMBER","index":24,"name":"EST_COST","comment":null,"display_name":"est_cost"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:51UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":281015296,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.container_downloads","raw_sql":"$25","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.valid_google_service_ips","model.gitlab_snowflake.valid_google_service_ips","model.gitlab_snowflake.container_namespace_map","model.gitlab_snowflake.container_namespace_map","model.gitlab_snowflake.container_registry_download_logs_source","model.gitlab_snowflake.container_registry_download_logs_source","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"workspace_engineering","database":"PROD","tags":["workspace"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_engineering","fqn":["gitlab_snowflake","workspaces","workspace_engineering","container_downloads","container_downloads"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_engineering/container_downloads/container_downloads.sql","original_file_path":"models/workspaces/workspace_engineering/container_downloads/container_downloads.sql","name":"container_downloads","alias":"container_downloads","checksum":{"name":"sha256","checksum":"60eccba389a5939fb372b2facfbc3a3e09d8bf37ae8f585f76403eb4986dd504"},"tags":["workspace"],"refs":[["valid_google_service_ips"],["valid_google_service_ips"],["container_namespace_map"],["container_namespace_map"],["container_registry_download_logs_source"],["container_registry_download_logs_source"],["dim_namespace"],["dim_namespace"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_engineering/container_downloads/container_downloads.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_engineering","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["workspace"]},"created_at":1689033685.0520802,"compiled_sql":"$26","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_engineering.container_downloads","label":"container_downloads"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_ENGINEERING","name":"NAMESPACE_PL_DAILY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_DAY":{"type":"DATE","index":1,"name":"DATE_DAY","comment":null,"display_name":"date_day"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"DIM_NAMESPACE_ID","comment":null,"display_name":"dim_namespace_id"},"DIM_PLAN_ID":{"type":"NUMBER","index":3,"name":"DIM_PLAN_ID","comment":null,"display_name":"dim_plan_id"},"FINANCE_PL":{"type":"TEXT","index":4,"name":"FINANCE_PL","comment":null,"display_name":"finance_pl"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:50UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":20319650816,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.namespace_pl_daily","raw_sql":"$27","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace_plan_hist","model.gitlab_snowflake.dim_namespace_plan_hist","seed.gitlab_snowflake.internal_gitlab_namespaces","seed.gitlab_snowflake.internal_gitlab_namespaces"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_workspace_engineering","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_engineering","fqn":["gitlab_snowflake","workspaces","workspace_engineering","restricted_safe","finops","pl_mappings","namespace_pl_daily"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_engineering/restricted_safe/finops/pl_mappings/namespace_pl_daily.sql","original_file_path":"models/workspaces/workspace_engineering/restricted_safe/finops/pl_mappings/namespace_pl_daily.sql","name":"namespace_pl_daily","alias":"namespace_pl_daily","checksum":{"name":"sha256","checksum":"b45acdcd150341fefb9fd7b49602eb340990a5261639b2c2c2861401c4f2ac4b"},"tags":["workspace","safe"],"refs":[["dim_date"],["dim_date"],["dim_namespace"],["dim_namespace"],["dim_namespace_plan_hist"],["dim_namespace_plan_hist"],["internal_gitlab_namespaces"],["internal_gitlab_namespaces"]],"sources":[],"metrics":[],"description":"**namespace_pl_daily**\n\n    Mission: Maintain a daily history of active namespaces and their associated Profit & Loss categories.\n    Objective: Provide an historical view of namespace usage by pl_category for analysis and reporting.\n    Input: GitLab Product Information\n    Granularity: Daily\n    Inputs: N/A\n\n    date_day: date - Date of the record\n    dim_namespace_id: number - Namespace identifier\n    dim_plan_id: number - Plan identifier\n    finance_pl: varchar - Profit & Loss category","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_engineering/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_engineering/restricted_safe/finops/pl_mappings/namespace_pl_daily.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_engineering","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033733.472956,"compiled_sql":"$28","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_engineering.namespace_pl_daily","label":"namespace_pl_daily"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"FCT_EVENT_VALID","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"EVENT_PK":{"type":"TEXT","index":1,"name":"event_pk","comment":null,"description":"The unique identifier of an event. This is a generated primary key and will not join back to the source models","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"event_pk"},"DIM_EVENT_DATE_ID":{"type":"NUMBER","index":2,"name":"dim_event_date_id","comment":null,"description":"The ID of the event date, easily joined to `dim_date`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_event_date_id"},"DIM_ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":3,"name":"dim_ultimate_parent_namespace_id","comment":null,"description":"The unique identifier of the ultimate parent namespace in which the event was generated, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it. This field will be NULL if the event is not tied to a namespace (ex. users_created)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ultimate_parent_namespace_id"},"DIM_PROJECT_ID":{"type":"NUMBER","index":4,"name":"dim_project_id","comment":null,"description":"The unique identifier of the project in which the event was generated, easily joined to `dim_project`. This will be NULL if the event is not tied to a project (ex. epic_creation, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_project_id"},"DIM_USER_SK":{"type":"TEXT","index":5,"name":"DIM_USER_SK","comment":null,"display_name":"dim_user_sk"},"DIM_USER_ID":{"type":"NUMBER","index":6,"name":"dim_user_id","comment":null,"description":"The unique identifier of the user who generated the event, easily joined to `dim_user`. This will be NULL if the event is not tied to a specific user (ex. terraform_reports, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_user_id"},"DIM_LATEST_PRODUCT_TIER_ID":{"type":"TEXT","index":7,"name":"dim_latest_product_tier_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest product tier, easily joined to `dim_product_tier`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_product_tier_id"},"DIM_LATEST_SUBSCRIPTION_ID":{"type":"TEXT","index":8,"name":"dim_latest_subscription_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest subscription, easily joined to `dim_subscription`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_subscription_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"dim_crm_account_id","comment":null,"description":"The unique identifier of a crm account, easily joined to `dim_crm_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_billing_account_id","comment":null,"description":"The identifier of the Zuora account associated with the subscription, easily joined to `dim_billing_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"ORDER_ID":{"type":"NUMBER","index":11,"name":"ORDER_ID","comment":null,"display_name":"order_id"},"EVENT_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":12,"name":"event_created_at","comment":null,"description":"Timestamp of the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_created_at"},"EVENT_DATE":{"type":"DATE","index":13,"name":"event_date","comment":null,"description":"The date of the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_date"},"IS_NULL_USER":{"type":"BOOLEAN","index":14,"name":"IS_NULL_USER","comment":null,"display_name":"is_null_user"},"GROUP_NAME":{"type":"TEXT","index":15,"name":"group_name","comment":null,"description":"The name of the [product group](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. code_review, project_management, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"group_name"},"SECTION_NAME":{"type":"TEXT","index":16,"name":"section_name","comment":null,"description":"The name of the [product section](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/sections.yml) (ex. dev, ops, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"section_name"},"STAGE_NAME":{"type":"TEXT","index":17,"name":"stage_name","comment":null,"description":"The name of the [product stage](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. secure, plan, create, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"stage_name"},"IS_SMAU":{"type":"BOOLEAN","index":18,"name":"is_smau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the stage's SMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_smau"},"IS_GMAU":{"type":"BOOLEAN","index":19,"name":"is_gmau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the group's GMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_gmau"},"IS_UMAU":{"type":"BOOLEAN","index":20,"name":"is_umau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the UMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_umau"},"PARENT_ID":{"type":"NUMBER","index":21,"name":"parent_id","comment":null,"description":"The unique identifier of the project (dim_project_id) associated with the event. If no project is associated, the ultimate parent namespace associated with the event. This will be NULL if neither a project or namespace is associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"PARENT_TYPE":{"type":"TEXT","index":22,"name":"parent_type","comment":null,"description":"Denotes whether the event was associate with a project or namespace ('project' or 'group'). This will be NULL if neither a project or namespace is associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_type"},"EVENT_NAME":{"type":"TEXT","index":23,"name":"event_name","comment":null,"description":"The name tied to the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_name"},"PLAN_ID_AT_EVENT_DATE":{"type":"NUMBER","index":24,"name":"plan_id_at_event_date","comment":null,"description":"The ID of the ultimate parent namespace's plan on the day the event was created (ex. 34, 100, 101, etc). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to '34' (free) if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_id_at_event_date"},"PLAN_NAME_AT_EVENT_DATE":{"type":"TEXT","index":25,"name":"plan_name_at_event_date","comment":null,"description":"The name of the ultimate parent namespace's plan type on the day when the event was created (ex. free, premium, ultimate). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to 'free' if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_name_at_event_date"},"PLAN_WAS_PAID_AT_EVENT_DATE":{"type":"BOOLEAN","index":26,"name":"plan_was_paid_at_event_date","comment":null,"description":"Boolean flag which is set to True if the ultimate parent namespace's plan was paid on the day when the event was created. If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to False if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_was_paid_at_event_date"},"DAYS_SINCE_USER_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":27,"name":"days_since_user_creation_at_event_date","comment":null,"description":"The count of days between user creation and the event. This will be NULL if a user is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_user_creation_at_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":28,"name":"days_since_namespace_creation_at_event_date","comment":null,"description":"The count of days between ultimate parent namespace creation and the event. This will be NULL if a namespace is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_event_date"},"DAYS_SINCE_PROJECT_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":29,"name":"days_since_project_creation_at_event_date","comment":null,"description":"The count of days between project creation and the event. This will be NULL if a project is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_project_creation_at_event_date"},"DATA_SOURCE":{"type":"TEXT","index":30,"name":"data_source","comment":null,"description":"The source application where the data was extracted from (ex. GITLAB_DOTCOM, VERSION_DB)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"data_source"},"CREATED_BY":{"type":"TEXT","index":31,"name":"created_by","comment":null,"description":"The GitLab handle of the original model creator","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":32,"name":"updated_by","comment":null,"description":"The GitLab handle of the most recent model editor","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":33,"name":"model_created_date","comment":null,"description":"Manually input ISO date of when model was original created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":34,"name":"model_updated_date","comment":null,"description":"Manually input ISO date of when model was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":35,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":36,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 14:47UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":523363277312,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.fct_event_valid","raw_sql":"$29","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_event","model.gitlab_snowflake.fct_event","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics","model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics","model.gitlab_snowflake.bdg_namespace_order_subscription","model.gitlab_snowflake.bdg_namespace_order_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.fct_event","model.gitlab_snowflake.fct_event"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":["mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","facts_product_and_engineering","fct_event_valid"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/facts_product_and_engineering/fct_event_valid.sql","original_file_path":"models/common/facts_product_and_engineering/fct_event_valid.sql","name":"fct_event_valid","alias":"fct_event_valid","checksum":{"name":"sha256","checksum":"6de01b97662d5d99aaec69b34816a2f3bb954005847fb3eaab94748dc7a57ad9"},"tags":["mnpi_exception","product"],"refs":[["fct_event"],["fct_event"],["dim_user"],["dim_user"],["map_gitlab_dotcom_xmau_metrics"],["map_gitlab_dotcom_xmau_metrics"],["bdg_namespace_order_subscription"],["bdg_namespace_order_subscription"],["dim_subscription"],["dim_subscription"],["dim_namespace"],["dim_namespace"],["fct_event"],["fct_event"]],"sources":[],"metrics":[],"description":"$2a","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/facts_product_and_engineering/fct_event_valid.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033750.9805472,"compiled_sql":"$2b","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.fct_event_valid","label":"fct_event_valid"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_ENGINEERING","name":"CI_RUNNERS_PL_DAILY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORTING_DAY":{"type":"DATE","index":1,"name":"REPORTING_DAY","comment":null,"display_name":"reporting_day"},"MAPPING":{"type":"TEXT","index":2,"name":"MAPPING","comment":null,"display_name":"mapping"},"PL":{"type":"TEXT","index":3,"name":"PL","comment":null,"display_name":"pl"},"TOTAL_CI_MINUTES":{"type":"NUMBER","index":4,"name":"TOTAL_CI_MINUTES","comment":null,"display_name":"total_ci_minutes"},"PCT_CI_MINUTES":{"type":"NUMBER","index":5,"name":"PCT_CI_MINUTES","comment":null,"display_name":"pct_ci_minutes"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:46UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":327680,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.ci_runners_pl_daily","raw_sql":"$2c","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_ci_runner_activity","model.gitlab_snowflake.fct_ci_runner_activity","model.gitlab_snowflake.dim_ci_runner","model.gitlab_snowflake.dim_ci_runner","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.prep_gitlab_dotcom_plan","model.gitlab_snowflake.prep_gitlab_dotcom_plan"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_workspace_engineering","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_engineering","fqn":["gitlab_snowflake","workspaces","workspace_engineering","restricted_safe","finops","pl_mappings","ci_runners_pl_daily"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_engineering/restricted_safe/finops/pl_mappings/ci_runners_pl_daily.sql","original_file_path":"models/workspaces/workspace_engineering/restricted_safe/finops/pl_mappings/ci_runners_pl_daily.sql","name":"ci_runners_pl_daily","alias":"ci_runners_pl_daily","checksum":{"name":"sha256","checksum":"60b533858e36d22597e805021c235542070135ed0c3e0c7a135696ba02c3971d"},"tags":["workspace","safe"],"refs":[["fct_ci_runner_activity"],["fct_ci_runner_activity"],["dim_ci_runner"],["dim_ci_runner"],["dim_namespace"],["dim_namespace"],["prep_gitlab_dotcom_plan"],["prep_gitlab_dotcom_plan"]],"sources":[],"metrics":[],"description":"**ci_runners_pl_daily**\n\n    Mission: Map daily CI runner usage to Profit & Loss categories.\n    Objective: Provide daily CI runner usage data by pl_category for cost analysis and reporting.\n    Granularity: Daily\n    Inputs: GitLab API: ci_minutes consumption per type of customer and plan over time\n    Accuracy rating: Very High\n    Completeness rating: Very High\n\n    reporting_day: date - Date of the report\n    mapping: varchar - Mapping data\n    pl: varchar - Profit & Loss category\n    total_ci_minutes: number - Total CI minutes used\n    pct_ci_minutes: number - Percentage of CI minutes used","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_engineering/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_engineering/restricted_safe/finops/pl_mappings/ci_runners_pl_daily.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_engineering","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033733.466583,"compiled_sql":"$2d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_engineering.ci_runners_pl_daily","label":"ci_runners_pl_daily"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"FCT_CI_RUNNER_ACTIVITY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CI_BUILD_ID":{"type":"NUMBER","index":1,"name":"dim_ci_build_id","comment":null,"description":"Unique key of CI Build","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_ci_build_id"},"DIM_CI_RUNNER_ID":{"type":"NUMBER","index":2,"name":"dim_ci_runner_id","comment":null,"description":"ID of the runner with which the CI build has been run.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ci_runner_id"},"DIM_CI_PIPELINE_ID":{"type":"NUMBER","index":3,"name":"dim_ci_pipeline_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ci_pipeline_id"},"DIM_CI_STAGE_ID":{"type":"NUMBER","index":4,"name":"dim_ci_stage_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ci_stage_id"},"DIM_PROJECT_ID":{"type":"NUMBER","index":5,"name":"dim_project_id","comment":null,"description":"Foreign key that shows the ID of the project in which the build has been triggered.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_project_id"},"DIM_USER_ID":{"type":"NUMBER","index":6,"name":"dim_user_id","comment":null,"description":"Foreign key that shows the ID of the user who triggered the CI Build","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_user_id"},"CI_BUILD_CREATED_DATE_ID":{"type":"NUMBER","index":7,"name":"ci_build_created_date_id","comment":null,"description":"Foreign key to `dim_date` that shows the ID of the date on which the stage was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_build_created_date_id"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":8,"name":"dim_namespace_id","comment":null,"description":"Foreign key that shows the ID of the namespace in which the build has been triggered.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":9,"name":"ultimate_parent_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_id"},"DIM_PLAN_ID":{"type":"NUMBER","index":10,"name":"dim_plan_id","comment":null,"description":"ID of the Plan","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_plan_id"},"CI_BUILD_STARTED_AT":{"type":"TIMESTAMP_NTZ","index":11,"name":"ci_build_started_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_build_started_at"},"CI_BUILD_FINISHED_AT":{"type":"TIMESTAMP_NTZ","index":12,"name":"ci_build_finished_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_build_finished_at"},"CI_BUILD_DURATION_IN_S":{"type":"NUMBER","index":13,"name":"ci_build_duration_in_s","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_build_duration_in_s"},"IS_PAID_BY_GITLAB":{"type":"BOOLEAN","index":14,"name":"is_paid_by_gitlab","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_paid_by_gitlab"},"PUBLIC_PROJECTS_MINUTES_COST_FACTOR":{"type":"FLOAT","index":15,"name":"public_projects_minutes_cost_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"public_projects_minutes_cost_factor"},"PRIVATE_PROJECTS_MINUTES_COST_FACTOR":{"type":"FLOAT","index":16,"name":"private_projects_minutes_cost_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"private_projects_minutes_cost_factor"},"CREATED_BY":{"type":"TEXT","index":17,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":18,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":19,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":20,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":21,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":22,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 13:13UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":155565586432,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.fct_ci_runner_activity","raw_sql":"$2e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_ci_build","model.gitlab_snowflake.prep_ci_build","model.gitlab_snowflake.prep_ci_runner","model.gitlab_snowflake.prep_ci_runner","model.gitlab_snowflake.prep_ci_pipeline","model.gitlab_snowflake.prep_ci_pipeline","model.gitlab_snowflake.prep_ci_stage","model.gitlab_snowflake.prep_ci_stage","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.prep_user","model.gitlab_snowflake.prep_user","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","facts_product_and_engineering","fct_ci_runner_activity"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/facts_product_and_engineering/fct_ci_runner_activity.sql","original_file_path":"models/common/facts_product_and_engineering/fct_ci_runner_activity.sql","name":"fct_ci_runner_activity","alias":"fct_ci_runner_activity","checksum":{"name":"sha256","checksum":"3480008dd69f9c3221843881db838336cbc13e2110a548641d37fc84784f86ce"},"tags":["product"],"refs":[["prep_ci_build"],["prep_ci_build"],["prep_ci_runner"],["prep_ci_runner"],["prep_ci_pipeline"],["prep_ci_pipeline"],["prep_ci_stage"],["prep_ci_stage"],["prep_project"],["prep_project"],["dim_namespace"],["dim_namespace"],["prep_user"],["prep_user"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"Fact table containing quantitative data related to CI runner activity on GitLab.com.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/facts_product_and_engineering/fct_ci_runner_activity.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product"]},"created_at":1689033751.203825,"compiled_sql":"$2f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.fct_ci_runner_activity","label":"fct_ci_runner_activity"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_PRODUCT","name":"WK_RPT_NAMESPACE_ONBOARDING","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":1,"name":"ultimate_parent_namespace_id","comment":null,"description":"The unique identifier (and natural key) of the namespace's ultimate parent, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"ultimate_parent_namespace_id"},"NAMESPACE_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":2,"name":"namespace_created_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_at"},"NAMESPACE_CREATED_DATE":{"type":"DATE","index":3,"name":"namespace_created_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_date"},"NAMESPACE_CREATED_MONTH":{"type":"DATE","index":4,"name":"namespace_created_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_month"},"NAMESPACE_CREATED_WEEK":{"type":"DATE","index":5,"name":"namespace_created_week","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_week"},"CREATOR_ID":{"type":"NUMBER","index":6,"name":"creator_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"creator_id"},"SFDC_RECORD_ID":{"type":"TEXT","index":7,"name":"sfdc_record_id","comment":null,"description":"Functional analytics team owner is Marketing Analytics. Is the SFDC ID of namespace creator. This could be either a lead or contact in SFDC. Joined from dim_crm_person","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_record_id"},"NAMESPACE_TYPE":{"type":"TEXT","index":8,"name":"namespace_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_type"},"SETUP_FOR_COMPANY":{"type":"TEXT","index":9,"name":"setup_for_company","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"setup_for_company"},"VISIBILITY_LEVEL":{"type":"TEXT","index":10,"name":"visibility_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"visibility_level"},"CURRENT_GITLAB_PLAN_ID":{"type":"NUMBER","index":11,"name":"current_gitlab_plan_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_gitlab_plan_id"},"CURRENT_GITLAB_PLAN_TITLE":{"type":"TEXT","index":12,"name":"current_gitlab_plan_title","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_gitlab_plan_title"},"CURRENT_PROJECT_COUNT":{"type":"NUMBER","index":13,"name":"current_project_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_project_count"},"DAYS_SINCE_NAMESPACE_CREATION":{"type":"NUMBER","index":14,"name":"days_since_namespace_creation","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation"},"HANDRAISE_PQL_DATE":{"type":"DATE","index":15,"name":"handraise_pql_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"handraise_pql_date"},"IS_NAMESPACE_CREATED_WITHIN_2MIN_OF_CREATOR_INVITE_ACCEPTANCE":{"type":"BOOLEAN","index":16,"name":"is_namespace_created_within_2min_of_creator_invite_acceptance","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_namespace_created_within_2min_of_creator_invite_acceptance"},"TRIAL_START_DATE":{"type":"DATE","index":17,"name":"trial_start_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"trial_start_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_TRIAL":{"type":"NUMBER","index":18,"name":"days_since_namespace_creation_at_trial","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_trial"},"FIRST_PAID_SUBSCRIPTION_START_DATE":{"type":"DATE","index":19,"name":"first_paid_subscription_start_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_paid_subscription_start_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_FIRST_PAID_SUBSCRIPTION":{"type":"NUMBER","index":20,"name":"days_since_namespace_creation_at_first_paid_subscription","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_first_paid_subscription"},"FIRST_PAID_PLAN_NAME":{"type":"TEXT","index":21,"name":"first_paid_plan_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_paid_plan_name"},"IS_FIRST_PAID_PLAN_PURCHASED_THROUGH_SUBSCRIPTION_PORTAL":{"type":"BOOLEAN","index":22,"name":"is_first_paid_plan_purchased_through_subscription_portal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_paid_plan_purchased_through_subscription_portal"},"DAYS_SINCE_NAMESPACE_CREATION_AT_ACTIVATION_EVENT":{"type":"NUMBER","index":23,"name":"days_since_namespace_creation_at_activation_event","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_activation_event"},"ACTIVATION_EVENT_ARRAY":{"type":"TEXT","index":24,"name":"activation_event_array","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"activation_event_array"},"ACITIVITY_BETWEEN_D60_D90":{"type":"BOOLEAN","index":25,"name":"acitivity_between_d60_d90","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"acitivity_between_d60_d90"},"CREATOR_IS_VALUABLE_SIGNUP":{"type":"BOOLEAN","index":26,"name":"creator_is_valuable_signup","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"creator_is_valuable_signup"},"NAMESPACE_CONTAINS_VALUABLE_SIGNUP":{"type":"BOOLEAN","index":27,"name":"namespace_contains_valuable_signup","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_contains_valuable_signup"},"DAYS_SINCE_NAMESPACE_CREATION_AT_2ND_USER_ADD":{"type":"NUMBER","index":28,"name":"DAYS_SINCE_NAMESPACE_CREATION_AT_2ND_USER_ADD","comment":null,"display_name":"days_since_namespace_creation_at_2nd_user_add"},"HAS_TEAM_ACTIVATION":{"type":"BOOLEAN","index":29,"name":"has_team_activation","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_team_activation"},"NAMESPACE_CREATOR_ROLE":{"type":"TEXT","index":30,"name":"namespace_creator_role","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_role"},"NAMESPACE_CREATOR_JTBD":{"type":"TEXT","index":31,"name":"namespace_creator_jtbd","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_jtbd"},"NAMESPACE_CREATOR_IS_FIRST_ORDER_PERSON":{"type":"BOOLEAN","index":32,"name":"namespace_creator_is_first_order_person","comment":null,"description":"Functional analytics team owner is Marketing Analytics. Is First Order field from the lead and contact model in SFDC joined from dim_crm_person through dim_marketing_contact. When this value is true, the creator of the namespace is a first order person in SFDC right now. This join is ultimately is created by matching email addresses.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_first_order_person"},"DAYS_SINCE_NAMESPACE_CREATION_AT_FIRST_PLAN_EVENT_DATE":{"type":"NUMBER","index":33,"name":"days_since_namespace_creation_at_first_plan_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_first_plan_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_FIRST_SECURE_EVENT_DATE":{"type":"NUMBER","index":34,"name":"days_since_namespace_creation_at_first_secure_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_first_secure_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_FIRST_CREATE_EVENT_DATE":{"type":"NUMBER","index":35,"name":"days_since_namespace_creation_at_first_create_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_first_create_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_FIRST_VERIFY_EVENT_DATE":{"type":"NUMBER","index":36,"name":"days_since_namespace_creation_at_first_verify_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_first_verify_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_FIRST_RELEASE_EVENT_DATE":{"type":"NUMBER","index":37,"name":"days_since_namespace_creation_at_first_release_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_first_release_event_date"},"DAYS_SINCE_LATEST_PLAN_EVENT_DATE":{"type":"NUMBER","index":38,"name":"days_since_latest_plan_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_latest_plan_event_date"},"DAYS_SINCE_LATEST_SECURE_EVENT_DATE":{"type":"NUMBER","index":39,"name":"days_since_latest_secure_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_latest_secure_event_date"},"DAYS_SINCE_LATEST_CREATE_EVENT_DATE":{"type":"NUMBER","index":40,"name":"days_since_latest_create_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_latest_create_event_date"},"DAYS_SINCE_LATEST_VERIFY_EVENT_DATE":{"type":"NUMBER","index":41,"name":"days_since_latest_verify_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_latest_verify_event_date"},"DAYS_SINCE_LATEST_RELEASE_EVENT_DATE":{"type":"NUMBER","index":42,"name":"days_since_latest_release_event_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_latest_release_event_date"},"STAGE_ADOPTION_ORDER":{"type":"TEXT","index":43,"name":"stage_adoption_order","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_adoption_order"},"TOTAL_STAGES_ADOPTED":{"type":"NUMBER","index":44,"name":"total_stages_adopted","comment":null,"description":"Unique count of product stages adopted all time.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"total_stages_adopted"},"CURRENT_BILLABLE_MEMBER_COUNT":{"type":"NUMBER","index":45,"name":"current_billable_member_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_billable_member_count"},"CURRENT_MONTH_STORAGE_GIB":{"type":"NUMBER","index":46,"name":"current_month_storage_gib","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_month_storage_gib"},"FIRST_ACTIVITY_DATE":{"type":"DATE","index":47,"name":"first_activity_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_activity_date"},"LATEST_ACTIVITY_DATE":{"type":"DATE","index":48,"name":"latest_activity_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"latest_activity_date"},"CREATED_BY":{"type":"TEXT","index":49,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":50,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":51,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":52,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":53,"name":"dbt_updated_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":54,"name":"dbt_created_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":533284352,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_rpt_namespace_onboarding","raw_sql":"$30","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.prep_gitlab_dotcom_plan","model.gitlab_snowflake.prep_gitlab_dotcom_plan","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.customers_db_leads","model.gitlab_snowflake.customers_db_leads","model.gitlab_snowflake.gitlab_dotcom_members","model.gitlab_snowflake.gitlab_dotcom_members","model.gitlab_snowflake.customers_db_trial_histories","model.gitlab_snowflake.customers_db_trial_histories","model.gitlab_snowflake.customers_db_charges_xf","model.gitlab_snowflake.customers_db_charges_xf","model.gitlab_snowflake.mart_event_namespace_daily","model.gitlab_snowflake.mart_event_namespace_daily","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.mart_event_valid","model.gitlab_snowflake.mart_event_valid","model.gitlab_snowflake.fct_usage_storage","model.gitlab_snowflake.fct_usage_storage","model.gitlab_snowflake.dim_marketing_contact_no_pii","model.gitlab_snowflake.dim_marketing_contact_no_pii","model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.dim_crm_person"]},"config":{"enabled":true,"alias":null,"schema":"workspace_product","database":"PROD","tags":["workspace","product","mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_product","fqn":["gitlab_snowflake","workspaces","workspace_product","reporting","wk_rpt_namespace_onboarding"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_product/reporting/wk_rpt_namespace_onboarding.sql","original_file_path":"models/workspaces/workspace_product/reporting/wk_rpt_namespace_onboarding.sql","name":"wk_rpt_namespace_onboarding","alias":"wk_rpt_namespace_onboarding","checksum":{"name":"sha256","checksum":"630b2452e68823e86f0430a061ab933af09dadd8a3e655a542d785dcc9eba5ff"},"tags":["workspace","product","mnpi_exception"],"refs":[["dim_namespace"],["dim_namespace"],["prep_gitlab_dotcom_plan"],["prep_gitlab_dotcom_plan"],["dim_user"],["dim_user"],["customers_db_leads"],["customers_db_leads"],["gitlab_dotcom_members"],["gitlab_dotcom_members"],["customers_db_trial_histories"],["customers_db_trial_histories"],["customers_db_charges_xf"],["customers_db_charges_xf"],["mart_event_namespace_daily"],["mart_event_namespace_daily"],["gitlab_dotcom_memberships"],["gitlab_dotcom_memberships"],["mart_event_valid"],["mart_event_valid"],["fct_usage_storage"],["fct_usage_storage"],["dim_marketing_contact_no_pii"],["dim_marketing_contact_no_pii"],["dim_crm_person"],["dim_crm_person"]],"sources":[],"metrics":[],"description":"**Description:**\n\nThis model is aggregated at the ultimate parent namespaces level and contains a wide variety of namesapace onboarding behaviors and attributes. This model contains one row per ultimate_parent_namespace_id and is designed to meet most of the primary analytics use cases for the Growth team. \n\n**Data Grain:**\n* ultimate_parent_namespace_id\n* namespace_created_at\n\n**Intended Usage**\n\nThis model is intended to be used as a reporting model for the Growth Section and any other teams at GitLab that are interested in ultimate parent namespace level onboarding behaviors and attributes.\n\n**Filters & Business Logic in this Model:**\n\n* This model filters out internal ultimate parent namespaces, ultimate parent namespaces whose creator is blocked, and is aggregated at the ultimate parent namespace level meaning that sub-groups and projects are not included in this model.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_product/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_product/reporting/wk_rpt_namespace_onboarding.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033733.9347246,"compiled_sql":"$31","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_product.wk_rpt_namespace_onboarding","label":"wk_rpt_namespace_onboarding"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART","name":"MART_EVENT_VALID","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"EVENT_PK":{"type":"TEXT","index":1,"name":"event_pk","comment":null,"description":"The unique identifier of an event. This is a generated primary key and will not join back to the source models","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"event_pk"},"DIM_EVENT_DATE_ID":{"type":"NUMBER","index":2,"name":"dim_event_date_id","comment":null,"description":"The ID of the event date, easily joined to `dim_date`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_event_date_id"},"DIM_ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":3,"name":"dim_ultimate_parent_namespace_id","comment":null,"description":"The unique identifier of the ultimate parent namespace in which the event was generated, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it. This field will be NULL if the event is not tied to a namespace (ex. users_created)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ultimate_parent_namespace_id"},"DIM_PROJECT_ID":{"type":"NUMBER","index":4,"name":"dim_project_id","comment":null,"description":"The unique identifier of the project in which the event was generated, easily joined to `dim_project`. This will be NULL if the event is not tied to a project (ex. epic_creation, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_project_id"},"DIM_USER_SK":{"type":"TEXT","index":5,"name":"DIM_USER_SK","comment":null,"display_name":"dim_user_sk"},"DIM_USER_ID":{"type":"NUMBER","index":6,"name":"dim_user_id","comment":null,"description":"The unique identifier of the user who generated the event, easily joined to `dim_user`. This will be NULL if the event is not tied to a specific user (ex. terraform_reports, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_user_id"},"DIM_LATEST_PRODUCT_TIER_ID":{"type":"TEXT","index":7,"name":"dim_latest_product_tier_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest product tier, easily joined to `dim_product_tier`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_product_tier_id"},"DIM_LATEST_SUBSCRIPTION_ID":{"type":"TEXT","index":8,"name":"dim_latest_subscription_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest subscription, easily joined to `dim_subscription`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_subscription_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"dim_crm_account_id","comment":null,"description":"The unique identifier of a crm account, easily joined to `dim_crm_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_billing_account_id","comment":null,"description":"The identifier of the Zuora account associated with the subscription, easily joined to `dim_billing_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"ORDER_ID":{"type":"NUMBER","index":11,"name":"ORDER_ID","comment":null,"display_name":"order_id"},"EVENT_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":12,"name":"event_created_at","comment":null,"description":"Timestamp of the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_created_at"},"EVENT_DATE":{"type":"DATE","index":13,"name":"event_date","comment":null,"description":"The date of the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_date"},"IS_NULL_USER":{"type":"BOOLEAN","index":14,"name":"IS_NULL_USER","comment":null,"display_name":"is_null_user"},"GROUP_NAME":{"type":"TEXT","index":15,"name":"group_name","comment":null,"description":"The name of the [product group](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. code_review, project_management, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"group_name"},"SECTION_NAME":{"type":"TEXT","index":16,"name":"section_name","comment":null,"description":"The name of the [product section](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/sections.yml) (ex. dev, ops, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"section_name"},"STAGE_NAME":{"type":"TEXT","index":17,"name":"stage_name","comment":null,"description":"The name of the [product stage](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. secure, plan, create, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"stage_name"},"IS_SMAU":{"type":"BOOLEAN","index":18,"name":"is_smau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the stage's SMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_smau"},"IS_GMAU":{"type":"BOOLEAN","index":19,"name":"is_gmau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the group's GMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_gmau"},"IS_UMAU":{"type":"BOOLEAN","index":20,"name":"is_umau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the UMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_umau"},"PARENT_ID":{"type":"NUMBER","index":21,"name":"parent_id","comment":null,"description":"The unique identifier of the project (dim_project_id) associated with the event. If no project is associated, the ultimate parent namespace associated with the event. This will be NULL if neither a project or namespace is associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"PARENT_TYPE":{"type":"TEXT","index":22,"name":"parent_type","comment":null,"description":"Denotes whether the event was associate with a project or namespace ('project' or 'group'). This will be NULL if neither a project or namespace is associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_type"},"EVENT_NAME":{"type":"TEXT","index":23,"name":"event_name","comment":null,"description":"The name tied to the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_name"},"PLAN_ID_AT_EVENT_DATE":{"type":"NUMBER","index":24,"name":"plan_id_at_event_date","comment":null,"description":"The ID of the ultimate parent namespace's plan on the day the event was created (ex. 34, 100, 101, etc). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to '34' (free) if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_id_at_event_date"},"PLAN_NAME_AT_EVENT_DATE":{"type":"TEXT","index":25,"name":"plan_name_at_event_date","comment":null,"description":"The name of the ultimate parent namespace's plan type on the day when the event was created (ex. free, premium, ultimate). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to 'free' if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_name_at_event_date"},"PLAN_WAS_PAID_AT_EVENT_DATE":{"type":"BOOLEAN","index":26,"name":"plan_was_paid_at_event_date","comment":null,"description":"Boolean flag which is set to True if the ultimate parent namespace's plan was paid on the day when the event was created. If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to False if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_was_paid_at_event_date"},"DAYS_SINCE_USER_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":27,"name":"days_since_user_creation_at_event_date","comment":null,"description":"The count of days between user creation and the event. This will be NULL if a user is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_user_creation_at_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":28,"name":"days_since_namespace_creation_at_event_date","comment":null,"description":"The count of days between ultimate parent namespace creation and the event. This will be NULL if a namespace is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_event_date"},"DAYS_SINCE_PROJECT_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":29,"name":"days_since_project_creation_at_event_date","comment":null,"description":"The count of days between project creation and the event. This will be NULL if a project is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_project_creation_at_event_date"},"DATA_SOURCE":{"type":"TEXT","index":30,"name":"data_source","comment":null,"description":"The source application where the data was extracted from (ex. GITLAB_DOTCOM, VERSION_DB)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"data_source"},"ULTIMATE_PARENT_NAMESPACE_TYPE":{"type":"TEXT","index":31,"name":"ultimate_parent_namespace_type","comment":null,"description":"The type of Ultimate Parent Namespace (user,group,project)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_type"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":32,"name":"namespace_is_internal","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace in which the event was generated is identified as an internal GitLab namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":33,"name":"namespace_creator_is_blocked","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace creator is in a 'blocked' or 'banned' state","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"NAMESPACE_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":34,"name":"namespace_created_at","comment":null,"description":"The timestamp of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_at"},"NAMESPACE_CREATED_DATE":{"type":"DATE","index":35,"name":"namespace_created_date","comment":null,"description":"The date of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_date"},"USER_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":36,"name":"user_created_at","comment":null,"description":"The timestamp of the user creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_created_at"},"PROJECT_IS_LEARN_GITLAB":{"type":"BOOLEAN","index":37,"name":"project_is_learn_gitlab","comment":null,"description":"Boolean flag set to True if the project in which the event was generated was a Learn GitLab project, one automatically created during user onboarding","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_is_learn_gitlab"},"PROJECT_IS_IMPORTED":{"type":"BOOLEAN","index":38,"name":"project_is_imported","comment":null,"description":"Boolean flag set to True if the project in which the event was generated was imported","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_is_imported"},"EVENT_CALENDAR_MONTH":{"type":"DATE","index":39,"name":"event_calendar_month","comment":null,"description":"The first day of the calendar month of the event (ex. 2022-05-01, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_month"},"EVENT_CALENDAR_QUARTER":{"type":"TEXT","index":40,"name":"event_calendar_quarter","comment":null,"description":"The calendar quarter of the event (ex. 2022-Q2, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_quarter"},"EVENT_CALENDAR_YEAR":{"type":"NUMBER","index":41,"name":"event_calendar_year","comment":null,"description":"The calendar year of the event (ex. 2022, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_year"},"CREATED_BY":{"type":"TEXT","index":42,"name":"created_by","comment":null,"description":"The GitLab handle of the original model creator","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":43,"name":"updated_by","comment":null,"description":"The GitLab handle of the most recent model editor","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":44,"name":"model_created_date","comment":null,"description":"Manually input ISO date of when model was original created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":45,"name":"model_updated_date","comment":null,"description":"Manually input ISO date of when model was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":46,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":47,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 15:43UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":446654114816,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_event_valid","raw_sql":"$32","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.fct_event_valid","model.gitlab_snowflake.fct_event_valid","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.fct_event_valid","model.gitlab_snowflake.fct_event_valid"]},"config":{"enabled":true,"alias":null,"schema":"common_mart","database":"PROD","tags":["product","mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart","fqn":["gitlab_snowflake","common_mart","mart_event_valid"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart/mart_event_valid.sql","original_file_path":"models/common_mart/mart_event_valid.sql","name":"mart_event_valid","alias":"mart_event_valid","checksum":{"name":"sha256","checksum":"155365dc53bd94e8a4b08cee7b28ac80ba6a73c60d4912297d4c3d6b2cf6b406"},"tags":["product","mnpi_exception"],"refs":[["dim_namespace"],["dim_namespace"],["fct_event_valid"],["fct_event_valid"],["dim_user"],["dim_user"],["dim_project"],["dim_project"],["dim_date"],["dim_date"],["fct_event_valid"],["fct_event_valid"]],"sources":[],"metrics":[],"description":"$33","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart/mart_event_valid.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033731.4632576,"compiled_sql":"$34","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart.mart_event_valid","label":"mart_event_valid"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_CUSTOMER_SUCCESS","name":"WK_PUMP_GAINSIGHT_METRICS_MONTHLY_PAID","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SNAPSHOT_MONTH":{"type":"DATE","index":1,"name":"SNAPSHOT_MONTH","comment":null,"display_name":"snapshot_month"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":2,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"DIM_NAMESPACE_ID":{"type":"TEXT","index":3,"name":"DIM_NAMESPACE_ID","comment":null,"display_name":"dim_namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"NAMESPACE_NAME","comment":null,"display_name":"namespace_name"},"NAMESPACE_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":5,"name":"NAMESPACE_CREATION_DATE","comment":null,"display_name":"namespace_creation_date"},"UUID":{"type":"TEXT","index":6,"name":"UUID","comment":null,"display_name":"uuid"},"HOSTNAME":{"type":"TEXT","index":7,"name":"HOSTNAME","comment":null,"display_name":"hostname"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":8,"name":"DIM_INSTALLATION_ID","comment":null,"display_name":"dim_installation_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":11,"name":"DIM_SUBSCRIPTION_ID_ORIGINAL","comment":null,"display_name":"dim_subscription_id_original"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":12,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":13,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION":{"type":"TEXT","index":14,"name":"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION","comment":null,"display_name":"subscription_status_most_recent_version"},"TERM_START_DATE":{"type":"DATE","index":15,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":16,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":17,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":18,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":19,"name":"SNAPSHOT_DATE_ID","comment":null,"display_name":"snapshot_date_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"PING_CREATED_AT","comment":null,"display_name":"ping_created_at"},"DIM_USAGE_PING_ID":{"type":"TEXT","index":21,"name":"DIM_USAGE_PING_ID","comment":null,"display_name":"dim_usage_ping_id"},"INSTANCE_TYPE":{"type":"TEXT","index":22,"name":"INSTANCE_TYPE","comment":null,"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":23,"name":"INCLUDED_IN_HEALTH_MEASURES_STR","comment":null,"display_name":"included_in_health_measures_str"},"CLEANED_VERSION":{"type":"TEXT","index":24,"name":"CLEANED_VERSION","comment":null,"display_name":"cleaned_version"},"COUNTRY_NAME":{"type":"TEXT","index":25,"name":"COUNTRY_NAME","comment":null,"display_name":"country_name"},"ISO_2_COUNTRY_CODE":{"type":"TEXT","index":26,"name":"ISO_2_COUNTRY_CODE","comment":null,"display_name":"iso_2_country_code"},"ISO_3_COUNTRY_CODE":{"type":"TEXT","index":27,"name":"ISO_3_COUNTRY_CODE","comment":null,"display_name":"iso_3_country_code"},"DELIVERY_TYPE":{"type":"TEXT","index":28,"name":"DELIVERY_TYPE","comment":null,"display_name":"delivery_type"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":29,"name":"INSTALLATION_CREATION_DATE","comment":null,"display_name":"installation_creation_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":30,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":31,"name":"BILLABLE_USER_COUNT","comment":null,"display_name":"billable_user_count"},"ACTIVE_USER_COUNT":{"type":"NUMBER","index":32,"name":"ACTIVE_USER_COUNT","comment":null,"display_name":"active_user_count"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":33,"name":"MAX_HISTORICAL_USER_COUNT","comment":null,"display_name":"max_historical_user_count"},"LICENSE_USER_COUNT":{"type":"FLOAT","index":34,"name":"LICENSE_USER_COUNT","comment":null,"display_name":"license_user_count"},"LICENSE_USER_COUNT_SOURCE":{"type":"TEXT","index":35,"name":"LICENSE_USER_COUNT_SOURCE","comment":null,"display_name":"license_user_count_source"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":36,"name":"UMAU_28_DAYS_USER","comment":null,"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER","comment":null,"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"MERGE_REQUESTS_28_DAYS_USER","comment":null,"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":39,"name":"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER","comment":null,"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":40,"name":"COMMIT_COMMENT_ALL_TIME_EVENT","comment":null,"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":41,"name":"SOURCE_CODE_PUSHES_ALL_TIME_EVENT","comment":null,"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":42,"name":"CI_PIPELINES_28_DAYS_USER","comment":null,"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"CI_INTERNAL_PIPELINES_28_DAYS_USER","comment":null,"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"CI_BUILDS_28_DAYS_USER","comment":null,"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":45,"name":"CI_BUILDS_ALL_TIME_USER","comment":null,"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":46,"name":"CI_BUILDS_ALL_TIME_EVENT","comment":null,"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"CI_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT","comment":null,"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":49,"name":"GITLAB_SHARED_RUNNERS_ENABLED","comment":null,"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":50,"name":"CONTAINER_REGISTRY_ENABLED","comment":null,"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":51,"name":"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT","comment":null,"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":52,"name":"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER","comment":null,"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":53,"name":"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER","comment":null,"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":54,"name":"USER_SAST_JOBS_28_DAYS_USER","comment":null,"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":55,"name":"USER_DAST_JOBS_28_DAYS_USER","comment":null,"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":56,"name":"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER","comment":null,"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":57,"name":"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER","comment":null,"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":58,"name":"USER_SECRET_DETECTION_JOBS_28_DAYS_USER","comment":null,"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":59,"name":"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER","comment":null,"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":60,"name":"OBJECT_STORE_PACKAGES_ENABLED","comment":null,"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":61,"name":"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT","comment":null,"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":62,"name":"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT","comment":null,"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":63,"name":"DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":64,"name":"RELEASES_28_DAYS_USER","comment":null,"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":65,"name":"EPICS_28_DAYS_USER","comment":null,"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":66,"name":"ISSUES_28_DAYS_USER","comment":null,"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":67,"name":"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT","comment":null,"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT","comment":null,"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"MERGE_REQUESTS_ALL_TIME_EVENT","comment":null,"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"TODOS_ALL_TIME_EVENT","comment":null,"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":71,"name":"EPICS_ALL_TIME_EVENT","comment":null,"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":72,"name":"ISSUES_ALL_TIME_EVENT","comment":null,"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":73,"name":"PROJECTS_ALL_TIME_EVENT","comment":null,"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":74,"name":"DEPLOYMENTS_28_DAYS_EVENT","comment":null,"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":75,"name":"PACKAGES_28_DAYS_EVENT","comment":null,"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":76,"name":"SAST_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":77,"name":"DAST_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":78,"name":"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":79,"name":"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":80,"name":"SECRET_DETECTION_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT","comment":null,"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT","comment":null,"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":90,"name":"PROTECTED_BRANCHES_ALL_TIME_EVENT","comment":null,"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":91,"name":"REMOTE_MIRRORS_ALL_TIME_EVENT","comment":null,"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":92,"name":"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER","comment":null,"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER","comment":null,"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"ANALYTICS_28_DAYS_USER","comment":null,"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"ISSUES_EDIT_28_DAYS_USER","comment":null,"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":96,"name":"USER_PACKAGES_28_DAYS_USER","comment":null,"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"TERRAFORM_STATE_API_28_DAYS_USER","comment":null,"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"INCIDENT_MANAGEMENT_28_DAYS_USER","comment":null,"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":99,"name":"AUTO_DEVOPS_ENABLED","comment":null,"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":100,"name":"GITALY_CLUSTERS_INSTANCE","comment":null,"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":101,"name":"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE","comment":null,"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":102,"name":"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT","comment":null,"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":103,"name":"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT","comment":null,"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":104,"name":"NETWORK_POLICY_DROPS_ALL_TIME_EVENT","comment":null,"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":105,"name":"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT","comment":null,"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":106,"name":"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT","comment":null,"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":107,"name":"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT","comment":null,"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":108,"name":"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":109,"name":"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":110,"name":"SERVICE_DESK_ISSUES_ALL_TIME_EVENT","comment":null,"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":111,"name":"CI_PIPELINES_ALL_TIME_USER","comment":null,"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":112,"name":"SERVICE_DESK_ISSUES_28_DAYS_USER","comment":null,"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":113,"name":"PROJECTS_JIRA_ACTIVE_28_DAYS_USER","comment":null,"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER","comment":null,"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":115,"name":"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER","comment":null,"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":116,"name":"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER","comment":null,"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":117,"name":"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT","comment":null,"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":118,"name":"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER","comment":null,"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":119,"name":"EPICS_USAGE_28_DAYS_USER","comment":null,"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":120,"name":"CI_TEMPLATES_USAGE_28_DAYS_EVENT","comment":null,"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":121,"name":"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER","comment":null,"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":122,"name":"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER","comment":null,"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":123,"name":"PROTECTED_BRANCHES_28_DAYS_USER","comment":null,"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":124,"name":"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT","comment":null,"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":125,"name":"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT","comment":null,"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":126,"name":"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER","comment":null,"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":127,"name":"API_FUZZING_JOBS_USAGE_28_DAYS_USER","comment":null,"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":128,"name":"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":129,"name":"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":130,"name":"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":131,"name":"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":132,"name":"SAST_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":133,"name":"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":134,"name":"DAST_PIPELINE_USAGE_28_DAYS_EVENT","comment":null,"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":135,"name":"COVERAGE_FUZZING_JOBS_28_DAYS_USER","comment":null,"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":136,"name":"ENVIRONMENTS_ALL_TIME_EVENT","comment":null,"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":137,"name":"FEATURE_FLAGS_ALL_TIME_EVENT","comment":null,"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":138,"name":"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT","comment":null,"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":139,"name":"FAILED_DEPLOYMENTS_28_DAYS_EVENT","comment":null,"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":140,"name":"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT","comment":null,"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":141,"name":"COMMIT_CI_CONFIG_FILE_28_DAYS_USER","comment":null,"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":142,"name":"VIEW_AUDIT_ALL_TIME_USER","comment":null,"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":143,"name":"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER","comment":null,"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":144,"name":"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER","comment":null,"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":145,"name":"PROJECTS_IMPORTED_ALL_TIME_EVENT","comment":null,"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":146,"name":"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER","comment":null,"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":147,"name":"WEB_IDE_EDIT_28_DAYS_USER","comment":null,"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":148,"name":"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT","comment":null,"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":149,"name":"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT","comment":null,"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":150,"name":"PROMETHEUS_ENABLED","comment":null,"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":151,"name":"PROMETHEUS_METRICS_ENABLED","comment":null,"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":152,"name":"GROUP_SAML_ENABLED","comment":null,"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":153,"name":"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT","comment":null,"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":154,"name":"AUTHOR_EPIC_ALL_TIME_USER","comment":null,"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":155,"name":"AUTHOR_ISSUE_ALL_TIME_USER","comment":null,"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":156,"name":"FAILED_DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":157,"name":"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER","comment":null,"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":158,"name":"GEO_ENABLED","comment":null,"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":159,"name":"AUTO_DEVOPS_PIPELINES_28_DAYS_USER","comment":null,"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":160,"name":"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":162,"name":"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT","comment":null,"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":163,"name":"GITALY_VERSION","comment":null,"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":164,"name":"GITALY_SERVERS_ALL_TIME_EVENT","comment":null,"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":165,"name":"API_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":166,"name":"API_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":167,"name":"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":168,"name":"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":169,"name":"SECRET_DETECTION_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":170,"name":"SECRET_DETECTION_SCANS_28_DAYS_EVENT","comment":null,"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":171,"name":"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":172,"name":"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":173,"name":"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":174,"name":"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":175,"name":"DAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":176,"name":"DAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":177,"name":"SAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":178,"name":"SAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":179,"name":"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":180,"name":"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":181,"name":"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER","comment":null,"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":182,"name":"AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":184,"name":"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER","comment":null,"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":185,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":186,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":187,"name":"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":188,"name":"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":189,"name":"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":190,"name":"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":191,"name":"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":192,"name":"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":193,"name":"PAID_LICENSE_SEARCH_28_DAYS_USER","comment":null,"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":194,"name":"LAST_ACTIVITY_28_DAYS_USER","comment":null,"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":195,"name":"SNIPPETS_28_DAYS_EVENT","comment":null,"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":196,"name":"SINGLE_FILE_EDITOR_28_DAYS_USER","comment":null,"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":197,"name":"MERGE_REQUESTS_CREATED_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":198,"name":"MERGE_REQUESTS_CREATED_28_DAYS_USER","comment":null,"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":199,"name":"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":200,"name":"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT","comment":null,"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":201,"name":"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT","comment":null,"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":202,"name":"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER","comment":null,"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":203,"name":"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT","comment":null,"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":204,"name":"PIPELINE_SCHEDULES_28_DAYS_USER","comment":null,"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":205,"name":"CI_INTERNAL_PIPELINES_28_DAYS_EVENT","comment":null,"display_name":"ci_internal_pipelines_28_days_event"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":206,"name":"IS_LATEST_DATA","comment":null,"display_name":"is_latest_data"},"PRIMARY_KEY":{"type":"TEXT","index":207,"name":"PRIMARY_KEY","comment":null,"display_name":"primary_key"},"CREATED_BY":{"type":"TEXT","index":208,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":209,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":210,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":211,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":212,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":213,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:53UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":242408960,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_pump_gainsight_metrics_monthly_paid","raw_sql":"$35","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_keyed_nulls","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time"]},"config":{"enabled":true,"alias":null,"schema":"workspace_customer_success","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_customer_success","fqn":["gitlab_snowflake","workspaces","workspace_customer_success","wk_pump_gainsight_metrics_monthly_paid"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_customer_success/wk_pump_gainsight_metrics_monthly_paid.sql","original_file_path":"models/workspaces/workspace_customer_success/wk_pump_gainsight_metrics_monthly_paid.sql","name":"wk_pump_gainsight_metrics_monthly_paid","alias":"wk_pump_gainsight_metrics_monthly_paid","checksum":{"name":"sha256","checksum":"185ac0a1b407800fef867e0b60ce830c9b60fddca4ee944187805c861b47b6e9"},"tags":["workspace","mnpi_exception"],"refs":[["rpt_gainsight_metrics_monthly_paid_saas"],["rpt_gainsight_metrics_monthly_paid_saas"],["rpt_gainsight_metrics_monthly_paid_self_managed"],["rpt_gainsight_metrics_monthly_paid_self_managed"],["dim_billing_account"],["dim_billing_account"],["dim_location_country"],["dim_location_country"],["dim_subscription"],["dim_subscription"],["dim_namespace"],["dim_namespace"],["mart_charge"],["mart_charge"],["dim_date"],["dim_date"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["wk_rpt_event_based_metric_counts_namespace_all_time"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_customer_success/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_customer_success/wk_pump_gainsight_metrics_monthly_paid.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_customer_success","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033732.9050465,"compiled_sql":"$36","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_customer_success.wk_pump_gainsight_metrics_monthly_paid","label":"wk_pump_gainsight_metrics_monthly_paid"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART","name":"MART_EVENT_NAMESPACE_MONTHLY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"EVENT_NAMESPACE_MONTHLY_PK":{"type":"TEXT","index":1,"name":"event_namespace_monthly_pk","comment":null,"description":"The unique composite ID of the mart_event_namespace_monthly model consisting of event_calendar_month, event_name, and dim_ultimate_parent_namespace_id","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"event_namespace_monthly_pk"},"DIM_ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"dim_ultimate_parent_namespace_id","comment":null,"description":"The unique identifier of the ultimate parent namespace in which the event was generated, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it. This field will be NULL if the event is not tied to a namespace (ex. users_created)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ultimate_parent_namespace_id"},"DIM_LATEST_PRODUCT_TIER_ID":{"type":"TEXT","index":3,"name":"dim_latest_product_tier_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest product tier, easily joined to `dim_product_tier`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_product_tier_id"},"DIM_LATEST_SUBSCRIPTION_ID":{"type":"TEXT","index":4,"name":"dim_latest_subscription_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest subscription, easily joined to `dim_subscription`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_subscription_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":5,"name":"dim_crm_account_id","comment":null,"description":"The unique identifier of a crm account, easily joined to `dim_crm_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":6,"name":"dim_billing_account_id","comment":null,"description":"The identifier of the Zuora account associated with the subscription, easily joined to `dim_billing_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"PLAN_ID_AT_EVENT_MONTH":{"type":"NUMBER","index":7,"name":"plan_id_at_event_month","comment":null,"description":"The ID of the ultimate parent namespace's plan on the month the event was created (ex. 34, 100, 101, etc). If multiple plans are available during the month, this reflects the plan on the last event of the month for the namespace. Defaults to '34' (free) if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_id_at_event_month"},"PLAN_NAME_AT_EVENT_MONTH":{"type":"TEXT","index":8,"name":"plan_name_at_event_month","comment":null,"description":"The name of the ultimate parent namespace's plan on the month the event was created (ex. free, premium, ultimate, etc). If multiple plans are available during the month, this reflects the plan on the last event of the month for the namespace. Defaults to 'free' if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_name_at_event_month"},"PLAN_WAS_PAID_AT_EVENT_MONTH":{"type":"BOOLEAN","index":9,"name":"plan_was_paid_at_event_month","comment":null,"description":"Boolean flag which is set to True if the ultimate parent namespace's plan was paid on the month when the event was created. If multiple plans are available during the month, this reflects the plan on the last event of the month for the namespace. Defaults to False if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_was_paid_at_event_month"},"ULTIMATE_PARENT_NAMESPACE_TYPE":{"type":"TEXT","index":10,"name":"ultimate_parent_namespace_type","comment":null,"description":"The type of Ultimate Parent Namespace (user,group,project)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_type"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":11,"name":"namespace_is_internal","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace in which the event was generated is identified as an internal GitLab namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":12,"name":"namespace_creator_is_blocked","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace creator is in a 'blocked' or 'banned' state","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"NAMESPACE_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":13,"name":"namespace_created_at","comment":null,"description":"The timestamp of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_at"},"NAMESPACE_CREATED_DATE":{"type":"DATE","index":14,"name":"namespace_created_date","comment":null,"description":"The date of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_date"},"EVENT_CALENDAR_MONTH":{"type":"DATE","index":15,"name":"event_calendar_month","comment":null,"description":"The first day of the calendar month of the event (ex. 2022-05-01, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_month"},"EVENT_CALENDAR_QUARTER":{"type":"TEXT","index":16,"name":"event_calendar_quarter","comment":null,"description":"The calendar quarter of the event (ex. 2022-Q2, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_quarter"},"EVENT_CALENDAR_YEAR":{"type":"NUMBER","index":17,"name":"event_calendar_year","comment":null,"description":"The calendar year of the event (ex. 2022, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_year"},"EVENT_NAME":{"type":"TEXT","index":18,"name":"event_name","comment":null,"description":"The name tied to the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_name"},"SECTION_NAME":{"type":"TEXT","index":19,"name":"section_name","comment":null,"description":"The name of the [product section](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/sections.yml) (ex. dev, ops, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"section_name"},"STAGE_NAME":{"type":"TEXT","index":20,"name":"stage_name","comment":null,"description":"The name of the [product stage](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. secure, plan, create, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"stage_name"},"GROUP_NAME":{"type":"TEXT","index":21,"name":"group_name","comment":null,"description":"The name of the [product group](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. code_review, project_management, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"group_name"},"IS_SMAU":{"type":"BOOLEAN","index":22,"name":"is_smau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the stage's SMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_smau"},"IS_GMAU":{"type":"BOOLEAN","index":23,"name":"is_gmau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the group's GMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_gmau"},"IS_UMAU":{"type":"BOOLEAN","index":24,"name":"is_umau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the UMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_umau"},"DATA_SOURCE":{"type":"TEXT","index":25,"name":"data_source","comment":null,"description":"The source application where the data was extracted from (ex. GITLAB_DOTCOM, VERSION_DB)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"data_source"},"EVENT_COUNT":{"type":"NUMBER","index":26,"name":"event_count","comment":null,"description":"The count of events generated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_count"},"USER_COUNT":{"type":"NUMBER","index":27,"name":"user_count","comment":null,"description":"The count of distinct users who generated an event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_count"},"EVENT_DATE_COUNT":{"type":"NUMBER","index":28,"name":"event_date_count","comment":null,"description":"The count of distinct days in which an event was generated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_date_count"},"CREATED_BY":{"type":"TEXT","index":29,"name":"created_by","comment":null,"description":"The GitLab handle of the original model creator","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":30,"name":"updated_by","comment":null,"description":"The GitLab handle of the most recent model editor","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":31,"name":"model_created_date","comment":null,"description":"Manually input ISO date of when model was original created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":32,"name":"model_updated_date","comment":null,"description":"Manually input ISO date of when model was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":33,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":34,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 15:21UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2931297280,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_event_namespace_monthly","raw_sql":"$37","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.fct_event_namespace_monthly","model.gitlab_snowflake.fct_event_namespace_monthly","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.fct_event_namespace_monthly","model.gitlab_snowflake.fct_event_namespace_monthly"]},"config":{"enabled":true,"alias":null,"schema":"common_mart","database":"PROD","tags":["product","mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart","fqn":["gitlab_snowflake","common_mart","mart_event_namespace_monthly"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart/mart_event_namespace_monthly.sql","original_file_path":"models/common_mart/mart_event_namespace_monthly.sql","name":"mart_event_namespace_monthly","alias":"mart_event_namespace_monthly","checksum":{"name":"sha256","checksum":"a9006977593dd0c59c80ca3cfb66225ea65d6cbbd270f428e38141d5d88c3f44"},"tags":["product","mnpi_exception"],"refs":[["dim_namespace"],["dim_namespace"],["fct_event_namespace_monthly"],["fct_event_namespace_monthly"],["dim_date"],["dim_date"],["fct_event_namespace_monthly"],["fct_event_namespace_monthly"]],"sources":[],"metrics":[],"description":"$38","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart/mart_event_namespace_monthly.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033731.7508194,"compiled_sql":"$39","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart.mart_event_namespace_monthly","label":"mart_event_namespace_monthly"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_MARKETING","name":"WK_FCT_USER_NAMESPACE_ACCOUNT_COMPANY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"USER_NAMESPACE_ACCOUNT_COMPANY_PK":{"type":"TEXT","index":1,"name":"user_namespace_account_company_pk","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"user_namespace_account_company_pk"},"DIM_USER_SK":{"type":"TEXT","index":2,"name":"DIM_USER_SK","comment":null,"display_name":"dim_user_sk"},"DIM_NAMESPACE_SK":{"type":"TEXT","index":3,"name":"DIM_NAMESPACE_SK","comment":null,"display_name":"dim_namespace_sk"},"DIM_COMPANY_SK":{"type":"TEXT","index":4,"name":"DIM_COMPANY_SK","comment":null,"display_name":"dim_company_sk"},"DIM_CRM_ACCOUNT_SK":{"type":"TEXT","index":5,"name":"DIM_CRM_ACCOUNT_SK","comment":null,"display_name":"dim_crm_account_sk"},"USER_ID":{"type":"NUMBER","index":6,"name":"USER_ID","comment":null,"display_name":"user_id"},"NAMESPACE_ID":{"type":"NUMBER","index":7,"name":"NAMESPACE_ID","comment":null,"display_name":"namespace_id"},"COMPANY_ID":{"type":"TEXT","index":8,"name":"COMPANY_ID","comment":null,"display_name":"company_id"},"CRM_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"CRM_ACCOUNT_ID","comment":null,"display_name":"crm_account_id"},"IS_BILLABLE":{"type":"BOOLEAN","index":10,"name":"IS_BILLABLE","comment":null,"display_name":"is_billable"},"ACCESS_LEVEL":{"type":"NUMBER","index":11,"name":"ACCESS_LEVEL","comment":null,"display_name":"access_level"},"ACCESS_LEVEL_NAME":{"type":"TEXT","index":12,"name":"ACCESS_LEVEL_NAME","comment":null,"display_name":"access_level_name"},"IS_CREATOR":{"type":"BOOLEAN","index":13,"name":"IS_CREATOR","comment":null,"display_name":"is_creator"},"IS_OWNER":{"type":"BOOLEAN","index":14,"name":"IS_OWNER","comment":null,"display_name":"is_owner"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:50UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2614292992,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_fct_user_namespace_account_company","raw_sql":"$3a","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.wk_bdg_user_company","model.gitlab_snowflake.wk_bdg_user_company","model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.dim_marketing_contact","model.gitlab_snowflake.gitlab_dotcom_access_levels_source","model.gitlab_snowflake.gitlab_dotcom_access_levels_source"]},"config":{"enabled":true,"alias":null,"schema":"workspace_marketing","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_marketing","fqn":["gitlab_snowflake","workspaces","workspace_marketing","namespace_account_matching","wk_fct_user_namespace_account_company"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_marketing/namespace_account_matching/wk_fct_user_namespace_account_company.sql","original_file_path":"models/workspaces/workspace_marketing/namespace_account_matching/wk_fct_user_namespace_account_company.sql","name":"wk_fct_user_namespace_account_company","alias":"wk_fct_user_namespace_account_company","checksum":{"name":"sha256","checksum":"a3bfcff2db0019359780623201fe3ea9e1598f9169f61f2a08fe54eef34a9568"},"tags":["workspace","mnpi_exception"],"refs":[["gitlab_dotcom_memberships"],["gitlab_dotcom_memberships"],["dim_namespace"],["dim_namespace"],["wk_bdg_user_company"],["wk_bdg_user_company"],["dim_marketing_contact"],["dim_marketing_contact"],["gitlab_dotcom_access_levels_source"],["gitlab_dotcom_access_levels_source"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_marketing/namespace_account_matching/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_marketing/namespace_account_matching/wk_fct_user_namespace_account_company.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033733.306022,"compiled_sql":"$3b","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_marketing.wk_fct_user_namespace_account_company","label":"wk_fct_user_namespace_account_company"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_PRODUCT","name":"MART_PRODUCT_USAGE_PAID_USER_METRICS_MONTHLY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SNAPSHOT_MONTH":{"type":"DATE","index":1,"name":"snapshot_month","comment":null,"description":"Month in which the product usage was reported.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_month"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":2,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_NAMESPACE_ID":{"type":"TEXT","index":3,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"NAMESPACE_NAME","comment":null,"display_name":"namespace_name"},"NAMESPACE_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":5,"name":"NAMESPACE_CREATION_DATE","comment":null,"display_name":"namespace_creation_date"},"UUID":{"type":"TEXT","index":6,"name":"uuid","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"uuid"},"HOSTNAME":{"type":"TEXT","index":7,"name":"hostname","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hostname"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":8,"name":"dim_installation_id","comment":null,"description":"The unique identifier of the installation, easily joined to `dim_installation`. This id is the combination of `dim_host_id` and `dim_instance_id` and is considered the unique identifier of the installation for reporting and analysis","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_installation_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"dim_billing_account_id","comment":null,"description":"Returns unknown ID (MD5(-1)) if the `account_id` from `fct_product_usage_wave_1_3_metrics_monthly` is not found in `dim_billing_account`.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_crm_account_id","comment":null,"description":"Returns unknown ID (MD5(-1)) if the `dim_crm_account_id` from `dim_billing_account` is not found in `dim_crm_account`.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":11,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":12,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":13,"name":"subscription_status","comment":null,"description":"Status of the subscription at the time the usage ping was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_status"},"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION":{"type":"TEXT","index":14,"name":"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION","comment":null,"display_name":"subscription_status_most_recent_version"},"TERM_START_DATE":{"type":"DATE","index":15,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":16,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":17,"name":"subscription_start_date","comment":null,"description":"Date the subscription term of the subscription_id started.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":18,"name":"subscription_end_date","comment":null,"description":"Date the subscription term of the subscription_id ended.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":19,"name":"snapshot_date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_date_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ping_created_at","comment":null,"description":"Actual date that the usage ping was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ping_created_at"},"DIM_USAGE_PING_ID":{"type":"TEXT","index":21,"name":"dim_usage_ping_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_usage_ping_id"},"INSTANCE_TYPE":{"type":"TEXT","index":22,"name":"instance_type","comment":null,"description":"Type of the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":23,"name":"INCLUDED_IN_HEALTH_MEASURES_STR","comment":null,"display_name":"included_in_health_measures_str"},"CLEANED_VERSION":{"type":"TEXT","index":24,"name":"cleaned_version","comment":null,"description":"Version of GitLab running on the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cleaned_version"},"COUNTRY_NAME":{"type":"TEXT","index":25,"name":"country_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"country_name"},"ISO_2_COUNTRY_CODE":{"type":"TEXT","index":26,"name":"iso_2_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iso_2_country_code"},"ISO_3_COUNTRY_CODE":{"type":"TEXT","index":27,"name":"iso_3_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iso_3_country_code"},"DELIVERY_TYPE":{"type":"TEXT","index":28,"name":"delivery_type","comment":null,"description":"Indicates if the product usage came from a SaaS or Self-Managed user.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"delivery_type"},"DEPLOYMENT_TYPE":{"type":"TEXT","index":29,"name":"DEPLOYMENT_TYPE","comment":null,"display_name":"deployment_type"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":30,"name":"installation_creation_date","comment":null,"description":"Based off of the [`installation_creation_date`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20230228110448_installation_creation_date.yml) \nService Ping metric. For installations where the root user (id = 1) is not deleted, it returns the root user creation date. For installations where the root user \nis deleted, it returns the earliest available user creation date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"installation_creation_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":31,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":32,"name":"BILLABLE_USER_COUNT","comment":null,"display_name":"billable_user_count"},"ACTIVE_USER_COUNT":{"type":"NUMBER","index":33,"name":"ACTIVE_USER_COUNT","comment":null,"display_name":"active_user_count"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":34,"name":"MAX_HISTORICAL_USER_COUNT","comment":null,"display_name":"max_historical_user_count"},"LICENSE_USER_COUNT":{"type":"FLOAT","index":35,"name":"LICENSE_USER_COUNT","comment":null,"display_name":"license_user_count"},"LICENSE_USER_COUNT_SOURCE":{"type":"TEXT","index":36,"name":"LICENSE_USER_COUNT_SOURCE","comment":null,"display_name":"license_user_count_source"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"umau_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"action_monthly_active_users_project_repo_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":39,"name":"merge_requests_28_days_user","comment":null,"description":"Count distinct authors of merge requests. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175055_merge_requests.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":40,"name":"projects_with_repositories_enabled_28_days_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action, for last 28 days.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182049_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":41,"name":"commit_comment_all_time_event","comment":null,"description":"Count of total unique commit comments. Does not include MR diff comments.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216182004_commit_comment.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":42,"name":"source_code_pushes_all_time_event","comment":null,"description":"Count of total Git push operations.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216182006_source_code_pushes.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"ci_pipelines_28_days_user","comment":null,"description":"Distinct users triggering pipelines in a month.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175554_ci_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"ci_internal_pipelines_28_days_user","comment":null,"description":"Total pipelines in GitLab repositories in a month.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175546_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":45,"name":"ci_builds_28_days_user","comment":null,"description":"Unique monthly builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175542_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":46,"name":"ci_builds_all_time_user","comment":null,"description":"Unique count of builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175525_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"ci_builds_all_time_event","comment":null,"description":"Unique builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175510_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"ci_runners_all_time_event","comment":null,"description":"All-time count of CI Runners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_runners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":49,"name":"auto_devops_enabled_all_time_event","comment":null,"description":"All-time count of Projects with auto DevOps template enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsauto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":50,"name":"gitlab_shared_runners_enabled","comment":null,"description":"Flags whether shared runners are enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitlab_shared_runners_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":51,"name":"container_registry_enabled","comment":null,"description":"Flags whether container registry is enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#container_registry_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":52,"name":"template_repositories_all_time_event","comment":null,"description":"All-time total of custom project templates and projects without namespaces ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstemplate_repositories))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":53,"name":"ci_pipeline_config_repository_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines from templates in repository ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipeline_config_repository))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":54,"name":"user_unique_users_all_secure_scanners_28_days_user","comment":null,"description":"Monthly count of unique users running secure CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_unique_users_all_secure_scanners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":55,"name":"user_sast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_sast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":56,"name":"user_dast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":57,"name":"user_dependency_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running dependency scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":58,"name":"user_license_management_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running license management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_license_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":59,"name":"user_secret_detection_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running secret detection CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_secret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":60,"name":"user_container_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running container scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_container_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":61,"name":"object_store_packages_enabled","comment":null,"description":"Flags whether Object Storage is enabled for Uploads ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#object_storepackagesenabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":62,"name":"projects_with_packages_all_time_event","comment":null,"description":"All-time count of projects with package registry configured ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":63,"name":"projects_with_packages_28_days_event","comment":null,"description":"Projects with package registry enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181055_projects_with_packages.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":64,"name":"deployments_28_days_user","comment":null,"description":"Monthly count of unique users triggering deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasedeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":65,"name":"releases_28_days_user","comment":null,"description":"Monthly count of unique users authoring releases ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasereleases))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":66,"name":"epics_28_days_user","comment":null,"description":"Monthly count of unique users authoring epics ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":67,"name":"issues_28_days_user","comment":null,"description":"Monthly count of unique users authoring issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"ci_internal_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"ci_external_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in external repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_external_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"merge_requests_all_time_event","comment":null,"description":"All-time count of Merge Requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsmerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":71,"name":"todos_all_time_event","comment":null,"description":"All-time count of ToDos created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstodos))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":72,"name":"epics_all_time_event","comment":null,"description":"All-time count of Epics created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":73,"name":"issues_all_time_event","comment":null,"description":"All-time count of Issues created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":74,"name":"projects_all_time_event","comment":null,"description":"All-time count of Projects created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":75,"name":"deployments_28_days_event","comment":null,"description":"Monthly count of deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlydeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":76,"name":"packages_28_days_event","comment":null,"description":"Monthly count of Packages ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlypackages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":77,"name":"sast_jobs_all_time_event","comment":null,"description":"All-time count of SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":78,"name":"dast_jobs_all_time_event","comment":null,"description":"All-time count of DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":79,"name":"dependency_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Dependency Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":80,"name":"license_management_jobs_all_time_event","comment":null,"description":"All-time count of License Management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countslicense_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"secret_detection_jobs_all_time_event","comment":null,"description":"All-time count of Secret Detectionâ CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssecret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"container_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Container Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscontainer_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"projects_jenkins_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jenkins ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jenkins_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"projects_bamboo_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Bamboo CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_bamboo_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"projects_jira_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"projects_drone_ci_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Drone CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_drone_ci_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"projects_github_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_github_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"projects_jira_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Server ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"projects_jira_dvcs_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud (DVCS Connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":90,"name":"projects_with_repositories_enabled_all_time_event","comment":null,"description":"All-time count of projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":91,"name":"protected_branches_all_time_event","comment":null,"description":"All-time count of protected branches ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprotected_branches))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":92,"name":"remote_mirrors_all_time_event","comment":null,"description":"All-time count of remote mirrors ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsremote_mirrors))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"projects_enforcing_code_owner_approval_28_days_user","comment":null,"description":"Monthly count of unique users creating projects that require code owner approval ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_enforcing_code_owner_approval))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"project_clusters_enabled_28_days_user","comment":null,"description":"Monthly count of unique users using GitLab Managed enabled clusters attached to projects ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyconfigureproject_clusters_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"analytics_28_days_user","comment":null,"description":"The number of unique users viewing any [Analytics page](https://docs.gitlab.com/ee/user/analytics/) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#manage-manageoptimize---smau-gmau---mau-viewing-analytics-features))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":96,"name":"issues_edit_28_days_user","comment":null,"description":"Number of unique users interacting with an issue (open, close, reopen, adjust label, adjust milestone, adjust weight, comment) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#plan-planproject-management---smau-paid-gmau---mau-interacting-with-issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"user_packages_28_days_user","comment":null,"description":"The maximum distinct count of users who published a package to the Package Registry. In the future, this value will the distinct count of users across all Package AMAUs ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#packagepackage---smau-gmau---count-of-users-publishing-packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"terraform_state_api_28_days_user","comment":null,"description":"Monthly active users of GitLab Managed Terraform State ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#configureconfigure---smau-gmau---mau-of-gitlab-managed-terraform-state))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":99,"name":"incident_management_28_days_user","comment":null,"description":"Unique users that interact with alerts or incidents ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#monitormonitor---smau-gmau---unique-users-that-interact-with-alerts-and-incidents))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":100,"name":"auto_devops_enabled","comment":null,"description":"Flags whether auto DevOps is enabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#instance_auto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":101,"name":"gitaly_clusters_instance","comment":null,"description":"Number of GitLab Managed clusters both enabled and disabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitalyclusters))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":102,"name":"epics_deepest_relationship_level_instance","comment":null,"description":"Numeric level of the deepest relationship of all epics on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics_deepest_relationship_level))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":103,"name":"clusters_applications_cilium_all_time_event","comment":null,"description":"All-time total of GitLab Managed clusters with GitLab Managed App:Cilium installed ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsclusters_applications_cilium))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":104,"name":"network_policy_forwards_all_time_event","comment":null,"description":"Cumulative count of packets forwarded by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_forwards))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":105,"name":"network_policy_drops_all_time_event","comment":null,"description":"Cumulative count of packets dropped by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_drops))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":106,"name":"requirements_with_test_report_all_time_event","comment":null,"description":"All-time count of requirements having a test report ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirements_with_test_report))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":107,"name":"requirement_test_reports_ci_all_time_event","comment":null,"description":"All-time count of requirement test reports created from CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirement_test_reports_ci))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":108,"name":"projects_imported_from_github_all_time_event","comment":null,"description":"All-time count of project imported from GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_imported_from_github))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":109,"name":"projects_jira_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":110,"name":"projects_jira_dvcs_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":111,"name":"service_desk_issues_all_time_event","comment":null,"description":"All-time count of service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":112,"name":"ci_pipelines_all_time_user","comment":null,"description":"All-time count of distinct Users triggering Total pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":113,"name":"service_desk_issues_28_days_user","comment":null,"description":"Monthly count of users opening service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"projects_jira_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":115,"name":"projects_jira_dvcs_cloud_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Cloud (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":116,"name":"projects_jira_dvcs_server_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":117,"name":"merge_requests_with_required_code_owners_28_days_user","comment":null,"description":"Monthly count of users creating merge requests with required code owners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests_with_required_codeowners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":118,"name":"analytics_value_stream_28_days_event","comment":null,"description":"Monthly count of visits to [Value Stream Analytics](https://about.gitlab.com/stages-devops-lifecycle/value-stream-analytics/) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersanalyticsg_analytics_valuestream_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":119,"name":"code_review_user_approve_mr_28_days_user","comment":null,"description":"Monthly count of users approving merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_counterscode_reviewi_code_review_user_approve_mr_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":120,"name":"epics_usage_28_days_user","comment":null,"description":"Monthly users count for epics_usage ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersepics_usageepics_usage_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":121,"name":"ci_templates_usage_28_days_event","comment":null,"description":"Monthly count of CI templates ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersci_templatesci_templates_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":122,"name":"project_management_issue_milestone_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs milestone ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_milestone_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":123,"name":"project_management_issue_iteration_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs iteration ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_iteration_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":124,"name":"protected_branches_28_days_user","comment":null,"description":"Count of users creating projects with repositories making use of at least one protected branch in last 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182051_protected_branches.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":125,"name":"ci_cd_lead_time_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics lead time tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126091206_p_analytics_ci_cd_lead_time_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":126,"name":"ci_cd_deployment_frequency_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics deployment frequency tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126090835_p_analytics_ci_cd_deployment_frequency_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":127,"name":"projects_with_repositories_enabled_all_time_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182023_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":128,"name":"api_fuzzing_jobs_usage_28_days_user","comment":null,"description":"Count of distinct users creating API Fuzzing jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180355_user_api_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":129,"name":"coverage_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 coverage-guided Fuzz Testing job.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180359_coverage_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":130,"name":"api_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 API Fuzzing Testing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180401_api_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":131,"name":"container_scanning_pipeline_usage_28_days_event","comment":null,"description":"Pipelines containing a Container Scanning job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175507_container_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":132,"name":"dependency_scanning_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines with successful Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175226_dependency_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":133,"name":"sast_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 SAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182129_sast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":134,"name":"secret_detection_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 Secret Detection job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182131_secret_detection_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":135,"name":"dast_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines that have at least 1 DAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175618_dast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":136,"name":"coverage_fuzzing_jobs_28_days_user","comment":null,"description":"Users who run a coverage fuzzing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183817_user_coverage_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":137,"name":"environments_all_time_event","comment":null,"description":"Total available and stopped environments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181914_environments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":138,"name":"feature_flags_all_time_event","comment":null,"description":"Number of feature flag toggles. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181249_feature_flags.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":139,"name":"successful_deployments_28_days_event","comment":null,"description":"Total successful deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181923_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":140,"name":"failed_deployments_28_days_event","comment":null,"description":"Total failed deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181924_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":141,"name":"projects_compliance_framework_all_time_event","comment":null,"description":"Number of projects labeled with a compliance framework label. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180825_projects_with_compliance_framework.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":142,"name":"commit_ci_config_file_28_days_user","comment":null,"description":"Monthly unique user count doing commits which contains the CI config file.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184303_o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":143,"name":"view_audit_all_time_user","comment":null,"description":"Unique users who have viewed audit events. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216183906_g_compliance_audit_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":144,"name":"dependency_scanning_jobs_all_time_user","comment":null,"description":"Total number of users running Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175216_user_dependency_scanning_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":145,"name":"analytics_devops_adoption_all_time_user","comment":null,"description":"Unique users viewing analytics devops adoption. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210423005644_i_analytics_dev_ops_adoption.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":146,"name":"projects_imported_all_time_event","comment":null,"description":"Number of projects imported. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210514141520_project_imports_total.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":147,"name":"preferences_security_dashboard_28_days_user","comment":null,"description":"Users who set personal preference to see Security Dashboard on Group\n information page. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182209_user_preferences_group_overview_security_dashboard.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":148,"name":"web_ide_edit_28_days_user","comment":null,"description":"Number of unique users per month who edited a file from any web editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180327_action_monthly_active_users_ide_edit.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":149,"name":"auto_devops_pipelines_all_time_event","comment":null,"description":"Total pipelines from an Auto DevOps template. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175516_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":150,"name":"projects_prometheus_active_all_time_event","comment":null,"description":"Count of projects with active integrations for Prometheus. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180931_projects_prometheus_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":151,"name":"prometheus_enabled","comment":null,"description":"Whether the bundled Prometheus is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124912_prometheus_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":152,"name":"prometheus_metrics_enabled","comment":null,"description":"Whether Prometheus Metrics endpoint is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124914_prometheus_metrics_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":153,"name":"group_saml_enabled","comment":null,"description":"Has the instance enabled Group SAML SSO `https://docs.gitlab.com/ee/user/group/saml_sso/`\n on at least 1 group? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180813_group_saml_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":154,"name":"jira_issue_imports_all_time_event","comment":null,"description":"Count of projects imported from Jira. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180654_jira.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":155,"name":"author_epic_all_time_user","comment":null,"description":"Count distinct author ids from epics. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181134_epics.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":156,"name":"author_issue_all_time_user","comment":null,"description":"Count of users creating Issues. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181115_issues.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":157,"name":"failed_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a failed deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181937_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":158,"name":"successful_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a successful deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181941_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":159,"name":"geo_enabled","comment":null,"description":"Is Geo enabled? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180406_geo_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":160,"name":"auto_devops_pipelines_28_days_user","comment":null,"description":"Distinct users that ran an auto DevOps pipeline without a .gitlab-ci.yml file. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175548_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"active_instance_runners_all_time_event","comment":null,"description":"Total active Shared (Instance) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502045402_ci_runners_instance_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":162,"name":"active_group_runners_all_time_event","comment":null,"description":"Total active Group Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050341_ci_runners_group_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":163,"name":"active_project_runners_all_time_event","comment":null,"description":"Total active Specific (Project) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050834_ci_runners_project_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":164,"name":"gitaly_version","comment":null,"description":"Version of Gitaly. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20210204124928_version.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":165,"name":"gitaly_servers_all_time_event","comment":null,"description":"Total Gitalty Servers. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210204124930_servers.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":166,"name":"api_fuzzing_scans_all_time_event","comment":null,"description":"Number of DAST API Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180353_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":167,"name":"api_fuzzing_scans_28_days_event","comment":null,"description":"Count of API fuzz test scans. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183838_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":168,"name":"coverage_fuzzing_scans_all_time_event","comment":null,"description":"Number of Coverage Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180352_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":169,"name":"coverage_fuzzing_scans_28_days_event","comment":null,"description":"Number of Coverage Guided Fuzz Test security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183836_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":170,"name":"secret_detection_scans_all_time_event","comment":null,"description":"Counts secret detection jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182123_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":171,"name":"secret_detection_scans_28_days_event","comment":null,"description":"Number of Secret Detection security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231956_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":172,"name":"dependency_scanning_scans_all_time_event","comment":null,"description":"Total count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175220_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":173,"name":"dependency_scanning_scans_28_days_event","comment":null,"description":"Monthly count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183828_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":174,"name":"container_scanning_scans_all_time_event","comment":null,"description":"Counts container scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175503_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":175,"name":"container_scanning_scans_28_days_event","comment":null,"description":"Number of Container Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231849_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":176,"name":"dast_scans_all_time_event","comment":null,"description":"Counts dast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182122_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":177,"name":"dast_scans_28_days_event","comment":null,"description":"Number of DAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183832_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":178,"name":"sast_scans_all_time_event","comment":null,"description":"Counts sast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182120_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":179,"name":"sast_scans_28_days_event","comment":null,"description":"Number of SAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231329_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":180,"name":"packages_pushed_registry_all_time_event","comment":null,"description":"A count of packages that have been published to the package registry\nusing a deploy token. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183005_package_events_i_package_push_package_by_deploy_token.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":181,"name":"packages_pulled_registry_all_time_event","comment":null,"description":"A count of packages that have been downloaded from the package registry\nby a guest. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183000_package_events_i_package_pull_package_by_guest.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":182,"name":"compliance_dashboard_view_28_days_user","comment":null,"description":"Unique users who have viewed the compliance dashboard in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183926_g_compliance_dashboard_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"audit_screen_view_28_days_user","comment":null,"description":"Unique users who have viewed the audit event screen in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183930_g_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":184,"name":"instance_audit_screen_view_28_days_user","comment":null,"description":"Unique users that have viewed the instance-level audit events screen. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183934_i_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":185,"name":"credential_inventory_view_28_days_user","comment":null,"description":"Unique users who have viewed the credential inventory in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183938_i_compliance_credential_inventory_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":186,"name":"compliance_frameworks_pipeline_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":187,"name":"compliance_frameworks_pipeline_28_days_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210622091519_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":188,"name":"groups_streaming_destinations_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":189,"name":"groups_streaming_destinations_28_days_event","comment":null,"description":"Distinct count of groups with any event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130091657_groups_with_event_streaming_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":190,"name":"audit_event_destinations_all_time_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":191,"name":"audit_event_destinations_28_days_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":192,"name":"projects_status_checks_all_time_event","comment":null,"description":"Total number of distinct projects with external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308162514_projects_with_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":193,"name":"external_status_checks_all_time_event","comment":null,"description":"Total number of external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308155129_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":194,"name":"paid_license_search_28_days_user","comment":null,"description":"Calculated unique users to perform a search with a paid license enabled\nby month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216184035_i_search_paid_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":195,"name":"last_activity_28_days_user","comment":null,"description":"Users that have a last_activity_on date within the past 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20220621085114_unique_active_users_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":196,"name":"snippets_28_days_event","comment":null,"description":"Monthly count of All Snippets. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180312_snippets.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":197,"name":"single_file_editor_28_days_user","comment":null,"description":"Number of users editing a file from the single file editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180334_g_edit_by_sfe_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":198,"name":"merge_requests_created_28_days_event","comment":null,"description":"Count of unique merge requests created per month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20221213182900_i_code_review_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":199,"name":"merge_requests_created_28_days_user","comment":null,"description":"Count of unique users per month who created a MR. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/60dda716679ae92aa368633bdee597b8fa57984f/config/metrics/counts_28d/20210216175132_i_code_review_user_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":200,"name":"merge_requests_approval_rules_28_days_event","comment":null,"description":"Count of distinct merge requests merged using approval rules. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20221211202138_merged_merge_requests_using_approval_rules_distinct.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":201,"name":"custom_compliance_frameworks_28_days_event","comment":null,"description":"Monthly count of all custom compliance framework labels. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210507165054_custom_compliance_frameworks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":202,"name":"projects_security_policy_28_days_event","comment":null,"description":"The total number of projects with an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083011_distinct_count_project_id_from_security_orchestration_policy_configurations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":203,"name":"merge_requests_security_policy_28_days_user","comment":null,"description":"The total number of users who have created merge requests in Projects that have an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083016_user_merge_requests_for_projects_with_security_policy_project.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":204,"name":"pipelines_implicit_auto_devops_28_days_event","comment":null,"description":"Count of pipelines with implicit Auto DevOps runs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184458_p_ci_templates_implicit_auto_devops_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":205,"name":"pipeline_schedules_28_days_user","comment":null,"description":"Distinct users creating pipeline schedules in a month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175552_ci_pipeline_schedules.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":206,"name":"ci_internal_pipelines_28_days_event","comment":null,"description":"Total monthly (28D) pipelines in Gitlab repositories for all project and project types [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20230217215050_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_paid_user_metrics_monthly')) }}\"})"}],"display_name":"ci_internal_pipelines_28_days_event"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":207,"name":"is_latest_data","comment":null,"description":"Flags the row with the most recently received data from Usage Ping","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_latest_data"},"PRIMARY_KEY":{"type":"TEXT","index":208,"name":"primary_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"primary_key"},"CREATED_BY":{"type":"TEXT","index":209,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":210,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":211,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":212,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":213,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":214,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"subscription_status_original":{"name":"subscription_status_original","description":"Status of the original subscription id at the time the usage ping was created. This was added to allow a status to be reported even when manual changes to Zuora subscriptions have broken the join.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_status_original"},"subscription_start_date_original":{"name":"subscription_start_date_original","description":"Date the subscription term of the orgininal subscription version started.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date_original"},"subscription_end_date_original":{"name":"subscription_end_date_original","description":"Date the subscription term of the original subscription version ended. Because of how subscription end dates are calcuated in dim_subscription_snapshot_bottom_up, this will be the same as the subscription_end_date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date_original"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:53UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":1292314624,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_product_usage_paid_user_metrics_monthly","raw_sql":"$3c","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_keyed_nulls","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_saas_product_usage_metrics_monthly","model.gitlab_snowflake.fct_saas_product_usage_metrics_monthly","model.gitlab_snowflake.fct_ping_instance_metric_wave_monthly","model.gitlab_snowflake.fct_ping_instance_metric_wave_monthly","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_product","database":"PROD","tags":["product","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_product","fqn":["gitlab_snowflake","marts","pumps","mart_product_usage_paid_user_metrics_monthly"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"marts/pumps/mart_product_usage_paid_user_metrics_monthly.sql","original_file_path":"models/marts/pumps/mart_product_usage_paid_user_metrics_monthly.sql","name":"mart_product_usage_paid_user_metrics_monthly","alias":"mart_product_usage_paid_user_metrics_monthly","checksum":{"name":"sha256","checksum":"67062c3c1be411ee9ce263a46737105f9340e5e50f4b3bbb414dcc8b7d3ec144"},"tags":["product","mnpi_exception"],"refs":[["fct_saas_product_usage_metrics_monthly"],["fct_saas_product_usage_metrics_monthly"],["fct_ping_instance_metric_wave_monthly"],["fct_ping_instance_metric_wave_monthly"],["dim_billing_account"],["dim_billing_account"],["dim_location_country"],["dim_location_country"],["dim_subscription"],["dim_subscription"],["dim_namespace"],["dim_namespace"],["mart_charge"],["mart_charge"],["dim_date"],["dim_date"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["dim_product_detail"],["dim_product_detail"]],"sources":[],"metrics":[],"description":"This table unions the sets of all Self-Managed and SaaS **paid users**. The data from this table will be used for Customer Product Insights.\n\nThe grain of this table is subscription per namespace || uuid-hostname per month.\n\nThe join to `dim_subscription_snapshot_bottom_up` uses a datediff of -1 day so that the `subscription_status` reflects the position at the end of the previous month. This avoids the situation where a subscription expires on the last day of the month and new one begins on the 1st of the next month meaning the join produces a NULL.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/marts/pumps/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/mart_product_usage_paid_user_metrics_monthly.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product","mnpi_exception"]},"created_at":1689033729.5500338,"compiled_sql":"$3d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_product.mart_product_usage_paid_user_metrics_monthly","label":"mart_product_usage_paid_user_metrics_monthly"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_ENGINEERING","name":"ENGINEERING_MERGE_REQUESTS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"MERGE_REQUEST_ID":{"type":"NUMBER","index":1,"name":"merge_request_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"merge_request_id"},"MERGE_REQUEST_IID":{"type":"NUMBER","index":2,"name":"merge_request_iid","comment":null,"description":"The ID appended to the merge request link","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_request_iid"},"AUTHOR_ID":{"type":"NUMBER","index":3,"name":"author_id","comment":null,"description":"The user_id that created the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"author_id"},"IS_CREATED_BY_BOT":{"type":"BOOLEAN","index":4,"name":"is_created_by_bot","comment":null,"description":"Boolean field that identifies whether the merge request was created by a bot","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_created_by_bot"},"ASSIGNEE_ID":{"type":"NUMBER","index":5,"name":"assignee_id","comment":null,"description":"The user_id that is assigned to the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"assignee_id"},"PROJECT_ID":{"type":"NUMBER","index":6,"name":"project_id","comment":null,"description":"The project_id related to the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_id"},"TARGET_PROJECT_ID":{"type":"NUMBER","index":7,"name":"target_project_id","comment":null,"description":"The target_project_id related to the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"target_project_id"},"MERGE_REQUEST_STATE":{"type":"TEXT","index":8,"name":"merge_request_state","comment":null,"description":"The merge_request_state related to the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_request_state"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":9,"name":"created_at","comment":null,"description":"When the merge request was created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":10,"name":"updated_at","comment":null,"description":"When the merge request was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_at"},"MERGED_AT":{"type":"TIMESTAMP_NTZ","index":11,"name":"merged_at","comment":null,"description":"When the merge request was merged","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merged_at"},"CREATED_MONTH":{"type":"DATE","index":12,"name":"created_month","comment":null,"description":"Which month the merge request was created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_month"},"MERGE_MONTH":{"type":"DATE","index":13,"name":"merge_month","comment":null,"description":"Which month the merge request was merged","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_month"},"DAYS_TO_MERGE":{"type":"NUMBER","index":14,"name":"days_to_merge","comment":null,"description":"Number of days it takes from when the merge request was created to merged","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_to_merge"},"MERGE_REQUEST_TITLE":{"type":"TEXT","index":15,"name":"merge_request_title","comment":null,"description":"Title of merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_request_title"},"MERGE_REQUEST_DESCRIPTION":{"type":"TEXT","index":16,"name":"merge_request_description","comment":null,"description":"Description of merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_request_description"},"MILESTONE_ID":{"type":"NUMBER","index":17,"name":"milestone_id","comment":null,"description":"The milestone_id related to the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"milestone_id"},"MILESTONE_TITLE":{"type":"TEXT","index":18,"name":"milestone_title","comment":null,"description":"The title of the related milestone_id","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"milestone_title"},"MILESTONE_DESCRIPTION":{"type":"TEXT","index":19,"name":"milestone_description","comment":null,"description":"The description of the related milestone_id","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"milestone_description"},"MILESTONE_START_DATE":{"type":"DATE","index":20,"name":"MILESTONE_START_DATE","comment":null,"display_name":"milestone_start_date"},"MILESTONE_DUE_DATE":{"type":"DATE","index":21,"name":"MILESTONE_DUE_DATE","comment":null,"display_name":"milestone_due_date"},"NAMESPACE_ID":{"type":"NUMBER","index":22,"name":"namespace_id","comment":null,"description":"The namespace_id related to the merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_id"},"ULTIMATE_PARENT_ID":{"type":"NUMBER","index":23,"name":"ULTIMATE_PARENT_ID","comment":null,"display_name":"ultimate_parent_id"},"LABELS":{"type":"ARRAY","index":24,"name":"labels","comment":null,"description":"The labels on a merge request","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"labels"},"MASKED_LABEL_TITLE":{"type":"TEXT","index":25,"name":"masked_label_title","comment":null,"description":"String version of labels, separated by '|'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"masked_label_title"},"IS_COMMUNITY_CONTRIBUTION":{"type":"BOOLEAN","index":26,"name":"is_community_contribution","comment":null,"description":"Boolean field that identifies whether the merge request is a community contribution via labels","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_community_contribution"},"IS_SECURITY":{"type":"BOOLEAN","index":27,"name":"is_security","comment":null,"description":"Boolean field that identifies whether the merge request is related to security via labels","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_security"},"PRIORITY_LABEL":{"type":"TEXT","index":28,"name":"priority_label","comment":null,"description":"The value following a priority label ('priority::%'')","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"priority_label"},"SEVERITY_LABEL":{"type":"TEXT","index":29,"name":"severity_label","comment":null,"description":"The value following a severity label ('severity::%'')","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"severity_label"},"GROUP_LABEL":{"type":"TEXT","index":30,"name":"group_label","comment":null,"description":"The group that the merge request is related to. This is extracted from labels ('group::%''), however, if a group is not in the latest yml file, it will be considered undefined.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"group_label"},"SECTION_LABEL":{"type":"TEXT","index":31,"name":"section_label","comment":null,"description":"The section that the merge request is related to. This is extracted from labels ('section::%''), however, if a group is not in the latest yml file, it will be considered undefined.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"section_label"},"STAGE_LABEL":{"type":"TEXT","index":32,"name":"stage_label","comment":null,"description":"The stage that the merge request is related to. This is extracted from labels ('devops::%''), however, if a group is not in the latest yml file, it will be considered undefined.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_label"},"TYPE_LABEL":{"type":"TEXT","index":33,"name":"type_label","comment":null,"description":"The worktype type classification, defined as either a bug, maintenance, or feature.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"type_label"},"SUBTYPE_LABEL":{"type":"TEXT","index":34,"name":"subtype_label","comment":null,"description":"The worktype subtype classification that matches a type_label","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subtype_label"},"VISIBILITY_LEVEL":{"type":"TEXT","index":35,"name":"visibility_level","comment":null,"description":"Indicate if the merge request lives in a private or public project","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"visibility_level"},"FULL_GROUP_PATH":{"type":"TEXT","index":36,"name":"full_group_path","comment":null,"description":"The group path in the merge request URL","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"full_group_path"},"URL":{"type":"TEXT","index":37,"name":"url","comment":null,"description":"Merge request URL","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"url"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:51UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":198473216,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.engineering_merge_requests","raw_sql":"$3e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.internal_merge_requests","model.gitlab_snowflake.internal_merge_requests","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.stages_groups_yaml_source","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.gitlab_dotcom_milestones","model.gitlab_snowflake.gitlab_dotcom_milestones","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_project"]},"config":{"enabled":true,"alias":null,"schema":"workspace_engineering","database":"PROD","tags":["workspace"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_engineering","fqn":["gitlab_snowflake","workspaces","workspace_engineering","engineering_merge_requests"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_engineering/engineering_merge_requests.sql","original_file_path":"models/workspaces/workspace_engineering/engineering_merge_requests.sql","name":"engineering_merge_requests","alias":"engineering_merge_requests","checksum":{"name":"sha256","checksum":"37705c41574bce800dccca1e1a5718009d690b187a54bd927ecd0438ca2e479e"},"tags":["workspace"],"refs":[["internal_merge_requests"],["internal_merge_requests"],["dim_namespace"],["dim_namespace"],["stages_groups_yaml_source"],["stages_groups_yaml_source"],["stages_groups_yaml_source"],["stages_groups_yaml_source"],["dim_user"],["dim_user"],["gitlab_dotcom_milestones"],["gitlab_dotcom_milestones"],["dim_project"],["dim_project"]],"sources":[],"metrics":[],"description":"A model containing all MRs that affect our product. This model includes relevant and common flags that are used in engineering metrics.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_engineering/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_engineering/engineering_merge_requests.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_engineering","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["workspace"]},"created_at":1689033733.4333897,"compiled_sql":"$3f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_engineering.engineering_merge_requests","label":"engineering_merge_requests"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_MARKETING","name":"SCRATCH_NAMESPACE_COMPANY_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"NAMESPACE_ID":{"type":"NUMBER","index":1,"name":"NAMESPACE_ID","comment":null,"display_name":"namespace_id"},"NAMESPACE_TYPE":{"type":"TEXT","index":2,"name":"NAMESPACE_TYPE","comment":null,"display_name":"namespace_type"},"GITLAB_PLAN_TITLE":{"type":"TEXT","index":3,"name":"GITLAB_PLAN_TITLE","comment":null,"display_name":"gitlab_plan_title"},"ACCOUNT_ID":{"type":"TEXT","index":4,"name":"ACCOUNT_ID","comment":null,"display_name":"account_id"},"COMPANY_ID":{"type":"TEXT","index":5,"name":"COMPANY_ID","comment":null,"display_name":"company_id"},"CUSTOMER_ACCOUNT_ID":{"type":"TEXT","index":6,"name":"CUSTOMER_ACCOUNT_ID","comment":null,"display_name":"customer_account_id"},"CUSTOMER_COMPANY_ID":{"type":"TEXT","index":7,"name":"CUSTOMER_COMPANY_ID","comment":null,"display_name":"customer_company_id"},"USER_ACCOUNT_ID":{"type":"TEXT","index":8,"name":"USER_ACCOUNT_ID","comment":null,"display_name":"user_account_id"},"USER_COMPANY_ID":{"type":"TEXT","index":9,"name":"USER_COMPANY_ID","comment":null,"display_name":"user_company_id"},"COMPANY_COMBINED_SCORE":{"type":"NUMBER","index":10,"name":"COMPANY_COMBINED_SCORE","comment":null,"display_name":"company_combined_score"},"ACCOUNT_COMBINED_SCORE":{"type":"NUMBER","index":11,"name":"ACCOUNT_COMBINED_SCORE","comment":null,"display_name":"account_combined_score"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:59UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":208556544,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.scratch_namespace_company_account","raw_sql":"$40","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.customer_account_company","model.gitlab_snowflake.customer_account_company","model.gitlab_snowflake.account_score","model.gitlab_snowflake.account_score","model.gitlab_snowflake.company_score","model.gitlab_snowflake.company_score"]},"config":{"enabled":true,"alias":null,"schema":"workspace_marketing","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_marketing","fqn":["gitlab_snowflake","workspaces","workspace_marketing","namespace_account_matching","scratch_namespace_company_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_marketing/namespace_account_matching/scratch_namespace_company_account.sql","original_file_path":"models/workspaces/workspace_marketing/namespace_account_matching/scratch_namespace_company_account.sql","name":"scratch_namespace_company_account","alias":"scratch_namespace_company_account","checksum":{"name":"sha256","checksum":"0c1c7d0ced1c9d4c2cee82d251cf9f90cfaa787c0e0d5e81ee03483982e2927e"},"tags":["workspace","mnpi_exception"],"refs":[["dim_namespace"],["dim_namespace"],["customer_account_company"],["customer_account_company"],["account_score"],["account_score"],["company_score"],["company_score"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_marketing/namespace_account_matching/scratch_namespace_company_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033684.3140821,"compiled_sql":"$41","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_marketing.scratch_namespace_company_account","label":"scratch_namespace_company_account"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_EPIC","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_EPIC_ID":{"type":"NUMBER","index":1,"name":"dim_epic_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_epic_id"},"AUTHOR_ID":{"type":"NUMBER","index":2,"name":"AUTHOR_ID","comment":null,"display_name":"author_id"},"GROUP_ID":{"type":"NUMBER","index":3,"name":"GROUP_ID","comment":null,"display_name":"group_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"ULTIMATE_PARENT_NAMESPACE_ID","comment":null,"display_name":"ultimate_parent_namespace_id"},"CREATED_DATE_ID":{"type":"NUMBER","index":5,"name":"CREATED_DATE_ID","comment":null,"display_name":"created_date_id"},"DIM_PLAN_ID":{"type":"NUMBER","index":6,"name":"DIM_PLAN_ID","comment":null,"display_name":"dim_plan_id"},"ASSIGNEE_ID":{"type":"NUMBER","index":7,"name":"ASSIGNEE_ID","comment":null,"display_name":"assignee_id"},"EPIC_INTERNAL_ID":{"type":"NUMBER","index":8,"name":"EPIC_INTERNAL_ID","comment":null,"display_name":"epic_internal_id"},"UPDATED_BY_ID":{"type":"NUMBER","index":9,"name":"UPDATED_BY_ID","comment":null,"display_name":"updated_by_id"},"LAST_EDITED_BY_ID":{"type":"NUMBER","index":10,"name":"LAST_EDITED_BY_ID","comment":null,"display_name":"last_edited_by_id"},"LOCK_VERSION":{"type":"NUMBER","index":11,"name":"LOCK_VERSION","comment":null,"display_name":"lock_version"},"EPIC_START_DATE":{"type":"DATE","index":12,"name":"EPIC_START_DATE","comment":null,"display_name":"epic_start_date"},"EPIC_END_DATE":{"type":"DATE","index":13,"name":"EPIC_END_DATE","comment":null,"display_name":"epic_end_date"},"EPIC_LAST_EDITED_AT":{"type":"TIMESTAMP_NTZ","index":14,"name":"EPIC_LAST_EDITED_AT","comment":null,"display_name":"epic_last_edited_at"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":15,"name":"CREATED_AT","comment":null,"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":16,"name":"UPDATED_AT","comment":null,"display_name":"updated_at"},"EPIC_TITLE":{"type":"TEXT","index":17,"name":"EPIC_TITLE","comment":null,"display_name":"epic_title"},"EPIC_DESCRIPTION":{"type":"TEXT","index":18,"name":"EPIC_DESCRIPTION","comment":null,"display_name":"epic_description"},"CLOSED_AT":{"type":"TIMESTAMP_NTZ","index":19,"name":"CLOSED_AT","comment":null,"display_name":"closed_at"},"STATE_ID":{"type":"NUMBER","index":20,"name":"STATE_ID","comment":null,"display_name":"state_id"},"PARENT_ID":{"type":"NUMBER","index":21,"name":"PARENT_ID","comment":null,"display_name":"parent_id"},"RELATIVE_POSITION":{"type":"NUMBER","index":22,"name":"RELATIVE_POSITION","comment":null,"display_name":"relative_position"},"START_DATE_SOURCING_EPIC_ID":{"type":"NUMBER","index":23,"name":"START_DATE_SOURCING_EPIC_ID","comment":null,"display_name":"start_date_sourcing_epic_id"},"EXTERNAL_KEY":{"type":"TEXT","index":24,"name":"EXTERNAL_KEY","comment":null,"display_name":"external_key"},"IS_CONFIDENTIAL":{"type":"BOOLEAN","index":25,"name":"IS_CONFIDENTIAL","comment":null,"display_name":"is_confidential"},"STATE_NAME":{"type":"TEXT","index":26,"name":"STATE_NAME","comment":null,"display_name":"state_name"},"EPIC_TITLE_LENGTH":{"type":"NUMBER","index":27,"name":"EPIC_TITLE_LENGTH","comment":null,"display_name":"epic_title_length"},"EPIC_DESCRIPTION_LENGTH":{"type":"NUMBER","index":28,"name":"EPIC_DESCRIPTION_LENGTH","comment":null,"display_name":"epic_description_length"},"EPIC_URL":{"type":"TEXT","index":29,"name":"EPIC_URL","comment":null,"display_name":"epic_url"},"LABELS":{"type":"ARRAY","index":30,"name":"LABELS","comment":null,"display_name":"labels"},"UPVOTE_COUNT":{"type":"NUMBER","index":31,"name":"UPVOTE_COUNT","comment":null,"display_name":"upvote_count"},"CREATED_BY":{"type":"TEXT","index":32,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":33,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":34,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":35,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":36,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":37,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:49UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":108048896,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_epic","raw_sql":"$42","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt.is_incremental","macro.gitlab_snowflake.map_state_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_namespace_plan_hist","model.gitlab_snowflake.dim_namespace_plan_hist","model.gitlab_snowflake.gitlab_dotcom_plans_source","model.gitlab_snowflake.gitlab_dotcom_plans_source","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.gitlab_dotcom_routes_source","model.gitlab_snowflake.gitlab_dotcom_routes_source","model.gitlab_snowflake.prep_label_links","model.gitlab_snowflake.prep_label_links","model.gitlab_snowflake.prep_labels","model.gitlab_snowflake.prep_labels","model.gitlab_snowflake.gitlab_dotcom_award_emoji_source","model.gitlab_snowflake.gitlab_dotcom_award_emoji_source","model.gitlab_snowflake.gitlab_dotcom_epics_dedupe_source","model.gitlab_snowflake.gitlab_dotcom_epics_dedupe_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["product"],"meta":{},"materialized":"incremental","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":"dim_epic_id","on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_epic"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_epic.sql","original_file_path":"models/common_prep/prep_epic.sql","name":"prep_epic","alias":"prep_epic","checksum":{"name":"sha256","checksum":"4ccaaef9eded0ef2ff33eb56e69eb8b718166e65d0f83a93fa5558facb0cc04c"},"tags":["product"],"refs":[["dim_date"],["dim_date"],["dim_namespace_plan_hist"],["dim_namespace_plan_hist"],["gitlab_dotcom_plans_source"],["gitlab_dotcom_plans_source"],["dim_namespace"],["dim_namespace"],["gitlab_dotcom_routes_source"],["gitlab_dotcom_routes_source"],["prep_label_links"],["prep_label_links"],["prep_labels"],["prep_labels"],["gitlab_dotcom_award_emoji_source"],["gitlab_dotcom_award_emoji_source"],["gitlab_dotcom_epics_dedupe_source"],["gitlab_dotcom_epics_dedupe_source"]],"sources":[],"metrics":[],"description":"Prep table for the dim table `dim_epic`.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_epic.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"incremental","tags":["product"],"unique_key":"dim_epic_id"},"created_at":1689033756.692324,"compiled_sql":"$43","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_epic","label":"prep_epic"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_MARKETING","name":"WK_MART_NAMESPACE_COMPANY_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"NAMESPACE_TYPE":{"type":"TEXT","index":1,"name":"NAMESPACE_TYPE","comment":null,"display_name":"namespace_type"},"CREATOR_ID":{"type":"NUMBER","index":2,"name":"CREATOR_ID","comment":null,"display_name":"creator_id"},"VISIBILITY_LEVEL":{"type":"TEXT","index":3,"name":"VISIBILITY_LEVEL","comment":null,"display_name":"visibility_level"},"NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"NAMESPACE_ID","comment":null,"display_name":"namespace_id"},"GITLAB_PLAN_TITLE":{"type":"TEXT","index":5,"name":"GITLAB_PLAN_TITLE","comment":null,"display_name":"gitlab_plan_title"},"GITLAB_PLAN_IS_PAID":{"type":"BOOLEAN","index":6,"name":"GITLAB_PLAN_IS_PAID","comment":null,"display_name":"gitlab_plan_is_paid"},"IS_SETUP_FOR_COMPANY":{"type":"BOOLEAN","index":7,"name":"IS_SETUP_FOR_COMPANY","comment":null,"display_name":"is_setup_for_company"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":8,"name":"CREATED_AT","comment":null,"display_name":"created_at"},"NAMESPACE_IS_ULTIMATE_PARENT":{"type":"BOOLEAN","index":9,"name":"NAMESPACE_IS_ULTIMATE_PARENT","comment":null,"display_name":"namespace_is_ultimate_parent"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":10,"name":"NAMESPACE_IS_INTERNAL","comment":null,"display_name":"namespace_is_internal"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":11,"name":"NAMESPACE_CREATOR_IS_BLOCKED","comment":null,"display_name":"namespace_creator_is_blocked"},"NUMBER_OF_ACCOUNTS":{"type":"NUMBER","index":12,"name":"NUMBER_OF_ACCOUNTS","comment":null,"display_name":"number_of_accounts"},"NUMBER_OF_PARENT_ACCOUNTS":{"type":"NUMBER","index":13,"name":"NUMBER_OF_PARENT_ACCOUNTS","comment":null,"display_name":"number_of_parent_accounts"},"LIST_OF_ACCOUNTS":{"type":"ARRAY","index":14,"name":"LIST_OF_ACCOUNTS","comment":null,"display_name":"list_of_accounts"},"LIST_OF_PARENT_ACCOUNTS":{"type":"ARRAY","index":15,"name":"LIST_OF_PARENT_ACCOUNTS","comment":null,"display_name":"list_of_parent_accounts"},"ACTUAL_CRM_ACCOUNT_ID":{"type":"TEXT","index":16,"name":"ACTUAL_CRM_ACCOUNT_ID","comment":null,"display_name":"actual_crm_account_id"},"ACTUAL_COMPANY_ID":{"type":"NUMBER","index":17,"name":"ACTUAL_COMPANY_ID","comment":null,"display_name":"actual_company_id"},"EMAIL_DOMAIN_TYPE":{"type":"TEXT","index":18,"name":"EMAIL_DOMAIN_TYPE","comment":null,"display_name":"email_domain_type"},"PREDICTED_COMPANY_ID":{"type":"NUMBER","index":19,"name":"PREDICTED_COMPANY_ID","comment":null,"display_name":"predicted_company_id"},"PREDICTED_CRM_ACCOUNT_ID":{"type":"TEXT","index":20,"name":"PREDICTED_CRM_ACCOUNT_ID","comment":null,"display_name":"predicted_crm_account_id"},"NAMESPACE_CRM_ACCOUNT_ID":{"type":"TEXT","index":21,"name":"NAMESPACE_CRM_ACCOUNT_ID","comment":null,"display_name":"namespace_crm_account_id"},"NAMESPACE_COMPANY_ID":{"type":"NUMBER","index":22,"name":"NAMESPACE_COMPANY_ID","comment":null,"display_name":"namespace_company_id"},"COMPANY_LINKED_ACCOUNT":{"type":"TEXT","index":23,"name":"COMPANY_LINKED_ACCOUNT","comment":null,"display_name":"company_linked_account"},"COMBINED_CRM_ACCOUNT_ID":{"type":"TEXT","index":24,"name":"COMBINED_CRM_ACCOUNT_ID","comment":null,"display_name":"combined_crm_account_id"},"MATCH_ACCOUNT_TYPE":{"type":"TEXT","index":25,"name":"MATCH_ACCOUNT_TYPE","comment":null,"display_name":"match_account_type"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:51UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":981789696,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_mart_namespace_company_account","raw_sql":"$44","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bdg_company_domain_account","model.gitlab_snowflake.bdg_company_domain_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.wk_dim_company","model.gitlab_snowflake.wk_dim_company","model.gitlab_snowflake.bdg_namespace_order_subscription_monthly","model.gitlab_snowflake.bdg_namespace_order_subscription_monthly","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.dim_user","model.gitlab_snowflake.wk_fct_user_namespace_account_company","model.gitlab_snowflake.wk_fct_user_namespace_account_company"]},"config":{"enabled":true,"alias":null,"schema":"workspace_marketing","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_marketing","fqn":["gitlab_snowflake","workspaces","workspace_marketing","namespace_account_matching","wk_mart_namespace_company_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_marketing/namespace_account_matching/wk_mart_namespace_company_account.sql","original_file_path":"models/workspaces/workspace_marketing/namespace_account_matching/wk_mart_namespace_company_account.sql","name":"wk_mart_namespace_company_account","alias":"wk_mart_namespace_company_account","checksum":{"name":"sha256","checksum":"1073ed6f4ce00c34ca1a78af8a3d251de23ccfd08e969839e66225d03692c988"},"tags":["workspace","mnpi_exception"],"refs":[["bdg_company_domain_account"],["bdg_company_domain_account"],["dim_crm_account"],["dim_crm_account"],["wk_dim_company"],["wk_dim_company"],["bdg_namespace_order_subscription_monthly"],["bdg_namespace_order_subscription_monthly"],["dim_namespace"],["dim_namespace"],["dim_user"],["dim_user"],["wk_fct_user_namespace_account_company"],["wk_fct_user_namespace_account_company"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_marketing/namespace_account_matching/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_marketing/namespace_account_matching/wk_mart_namespace_company_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033733.3067303,"compiled_sql":"$45","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_marketing.wk_mart_namespace_company_account","label":"wk_mart_namespace_company_account"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_PRODUCT","name":"MART_CI_RUNNER_ACTIVITY_MONTHLY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORT_MONTH":{"type":"DATE","index":1,"name":"report_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"report_month"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_namespace_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":3,"name":"ultimate_parent_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"ultimate_parent_namespace_id"},"DIM_PLAN_ID":{"type":"NUMBER","index":4,"name":"dim_plan_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_plan_id"},"DIM_CI_RUNNER_ID":{"type":"NUMBER","index":5,"name":"dim_ci_runner_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_ci_runner_id"},"DIM_CI_PIPELINE_ID":{"type":"NUMBER","index":6,"name":"dim_ci_pipeline_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_ci_pipeline_id"},"DIM_CI_STAGE_ID":{"type":"NUMBER","index":7,"name":"dim_ci_stage_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_ci_stage_id"},"CI_BUILD_DURATION_IN_S":{"type":"NUMBER","index":8,"name":"ci_build_duration_in_s","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_build_duration_in_s"},"PUBLIC_PROJECTS_MINUTES_COST_FACTOR":{"type":"FLOAT","index":9,"name":"public_projects_minutes_cost_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"public_projects_minutes_cost_factor"},"PRIVATE_PROJECTS_MINUTES_COST_FACTOR":{"type":"FLOAT","index":10,"name":"private_projects_minutes_cost_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"private_projects_minutes_cost_factor"},"IS_PAID_BY_GITLAB":{"type":"BOOLEAN","index":11,"name":"is_paid_by_gitlab","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_paid_by_gitlab"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":12,"name":"namespace_is_internal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"ULTIMATE_PARENT_PLAN_TITLE":{"type":"TEXT","index":13,"name":"ultimate_parent_plan_title","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_plan_title"},"CREATED_BY":{"type":"TEXT","index":14,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":15,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":16,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":17,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":18,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":19,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 13:15UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":31667448832,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_ci_runner_activity_monthly","raw_sql":"$46","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_ci_runner_activity","model.gitlab_snowflake.fct_ci_runner_activity","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_product","database":"PROD","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_product","fqn":["gitlab_snowflake","common_mart_product","mart_ci_runner_activity_monthly"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_product/mart_ci_runner_activity_monthly.sql","original_file_path":"models/common_mart_product/mart_ci_runner_activity_monthly.sql","name":"mart_ci_runner_activity_monthly","alias":"mart_ci_runner_activity_monthly","checksum":{"name":"sha256","checksum":"a1bb0c579998bbb274a54c9d928fc1b4b3ea9d653f654a74f9784081b5058349"},"tags":["product"],"refs":[["fct_ci_runner_activity"],["fct_ci_runner_activity"],["dim_namespace"],["dim_namespace"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"Mart table containing quantitative data related to CI runner activity on GitLab.com.\n\nThese metrics are aggregated at a monthly grain per `dim_namespace_id`.\n\nAdditional identifier/key fields - `dim_ci_runner_id`, `dim_ci_pipeline_id`, `dim_ci_stage_id` have been included for Reporting purposes.\n\nOnly activity since 2020-01-01 is being processed due to the high volume of the data.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_product/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_product/mart_ci_runner_activity_monthly.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product"]},"created_at":1689033735.2308142,"compiled_sql":"$47","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_product.mart_ci_runner_activity_monthly","label":"mart_ci_runner_activity_monthly"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_PRODUCT","name":"MART_CI_RUNNER_ACTIVITY_DAILY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORT_DATE":{"type":"DATE","index":1,"name":"report_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"report_date"},"DIM_PROJECT_ID":{"type":"NUMBER","index":2,"name":"dim_project_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_project_id"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":3,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_namespace_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"ultimate_parent_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"ultimate_parent_namespace_id"},"DIM_PLAN_ID":{"type":"NUMBER","index":5,"name":"dim_plan_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_plan_id"},"DIM_CI_RUNNER_ID":{"type":"NUMBER","index":6,"name":"dim_ci_runner_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_ci_runner_id"},"DIM_CI_PIPELINE_ID":{"type":"NUMBER","index":7,"name":"dim_ci_pipeline_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_ci_pipeline_id"},"DIM_CI_STAGE_ID":{"type":"NUMBER","index":8,"name":"dim_ci_stage_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_ci_stage_id"},"JOB_COUNT":{"type":"NUMBER","index":9,"name":"JOB_COUNT","comment":null,"display_name":"job_count"},"CI_BUILD_DURATION_IN_S":{"type":"NUMBER","index":10,"name":"ci_build_duration_in_s","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_build_duration_in_s"},"PUBLIC_PROJECTS_MINUTES_COST_FACTOR":{"type":"FLOAT","index":11,"name":"public_projects_minutes_cost_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"public_projects_minutes_cost_factor"},"PRIVATE_PROJECTS_MINUTES_COST_FACTOR":{"type":"FLOAT","index":12,"name":"private_projects_minutes_cost_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"private_projects_minutes_cost_factor"},"IS_PAID_BY_GITLAB":{"type":"BOOLEAN","index":13,"name":"is_paid_by_gitlab","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_paid_by_gitlab"},"PROJECT_VISIBILITY_LEVEL":{"type":"TEXT","index":14,"name":"project_visibility_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_visibility_level"},"PROJECT_PATH":{"type":"TEXT","index":15,"name":"project_path","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_path"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":16,"name":"namespace_is_internal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"ULTIMATE_PARENT_PLAN_TITLE":{"type":"TEXT","index":17,"name":"ultimate_parent_plan_title","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_plan_title"},"CREATED_BY":{"type":"TEXT","index":18,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":19,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":20,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":21,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":22,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":23,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 13:18UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":41890142720,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_ci_runner_activity_daily","raw_sql":"$48","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_ci_runner_activity","model.gitlab_snowflake.fct_ci_runner_activity","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_product","database":"PROD","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_product","fqn":["gitlab_snowflake","common_mart_product","mart_ci_runner_activity_daily"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_product/mart_ci_runner_activity_daily.sql","original_file_path":"models/common_mart_product/mart_ci_runner_activity_daily.sql","name":"mart_ci_runner_activity_daily","alias":"mart_ci_runner_activity_daily","checksum":{"name":"sha256","checksum":"d607f33ce7e0878dd2353b57f3043037299449e7ab0d2915eba72b4c01456ca3"},"tags":["product"],"refs":[["fct_ci_runner_activity"],["fct_ci_runner_activity"],["dim_namespace"],["dim_namespace"],["dim_project"],["dim_project"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"Mart table containing quantitative data related to CI runner activity on GitLab.com.\n\nThese metrics are aggregated at a daily grain per `dim_project_id`.\n\nAdditional identifier/key fields - `dim_ci_runner_id`, `dim_ci_pipeline_id`, `dim_ci_stage_id` have been included for Reporting purposes.\n\nOnly activity since 2020-01-01 is being processed due to the high volume of the data.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_product/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_product/mart_ci_runner_activity_daily.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product"]},"created_at":1689033735.2405777,"compiled_sql":"$49","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_product.mart_ci_runner_activity_daily","label":"mart_ci_runner_activity_daily"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART","name":"MART_BEHAVIOR_STRUCTURED_EVENT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"BEHAVIOR_STRUCTURED_EVENT_PK":{"type":"TEXT","index":1,"name":"behavior_structured_event_pk","comment":null,"description":"This is the Primary key. This ID is generated from [prep_snowplow_unnested_events_all](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.prep_snowplow_unnested_events_all) using `event_id`.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"behavior_structured_event_pk"},"BEHAVIOR_AT":{"type":"TIMESTAMP_NTZ","index":2,"name":"behavior_at","comment":null,"description":"Timestamp for when the event actually happened. This appears as `derived_tstamp` in the raw Snowplow data.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"behavior_at"},"BEHAVIOR_DATE":{"type":"DATE","index":3,"name":"behavior_date","comment":null,"description":"Timestamp for when the event actually happened. This appears as `derived_tstamp` in the raw Snowplow data.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"behavior_date"},"APP_ID":{"type":"TEXT","index":4,"name":"app_id","comment":null,"description":"The environment of the event - Production, Staging OR Development. To only include GitLab.com Production events, set filter to `app_id IN ('gitlab','gitlab_customers')`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"app_id"},"USER_SNOWPLOW_DOMAIN_ID":{"type":"TEXT","index":5,"name":"user_snowplow_domain_id","comment":null,"description":"Unique User ID set by Snowplow when the user visits GitLab.com for the first time (using 1st party cookie). This value will remain the same until a user clears their cookies. Note: if a user visits GitLab.com on a different browser, they will have a different unique ID.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_snowplow_domain_id"},"CONTEXTS":{"type":"VARIANT","index":6,"name":"contexts","comment":null,"description":"JSON object for custom contexts implemented during tracking implementation. [More information on Snowplow contexts](https://docs.snowplow.io/docs/understanding-your-pipeline/canonical-event/#contexts). [More information on GitLab standard context](https://docs.gitlab.com/ee/development/snowplow/schemas.html#gitlab_standard)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"contexts"},"PAGE_URL_PATH":{"type":"TEXT","index":7,"name":"page_url_path","comment":null,"description":"The page URL path of the event **without** the host (gitlab.com) information. Example: `/namespace9495566/project21362945/-/merge_requests/1575`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"page_url_path"},"PAGE_URL_FRAGMENT":{"type":"TEXT","index":8,"name":"page_url_fragment","comment":null,"description":"Fragment aka anchor. Ex. For gitlab.com/projects/new#blank_project, the page_url_fragment is `blank_project`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"page_url_fragment"},"GSC_GOOGLE_ANALYTICS_CLIENT_ID":{"type":"TEXT","index":9,"name":"gsc_google_analytics_client_id","comment":null,"description":"Google Analytics ID, present when set from our marketing sites.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gsc_google_analytics_client_id"},"GSC_PSEUDONYMIZED_USER_ID":{"type":"TEXT","index":10,"name":"gsc_pseudonymized_user_id","comment":null,"description":"User database record ID attribute. This value undergoes a pseudonymization process at the collector level. Note: This field is only populated after a user susccessfully registers on GitLab.com i.e. they verify their e-mail and log-in for the first time. This value will be NULL in the following situations:\n\n- The event occurred before `2021-09-29` (when the collection of this data started)\n- A user is not logged in\n- The event occurs on a page outside of the SaaS product (ex. about.gitlab.com, docs.gitlab.com)\n- It is an unstructured event\n- The event is not associated with a user (some backend events)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gsc_pseudonymized_user_id"},"GSC_EXTRA":{"type":"VARIANT","index":11,"name":"gsc_extra","comment":null,"description":"Any additional data associated with the event, in the form of key-value pairs.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gsc_extra"},"GSC_PLAN":{"type":"TEXT","index":12,"name":"gsc_plan","comment":null,"description":"Name of the plan for the namespace, such as free, premium, or ultimate. Automatically picked from the namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gsc_plan"},"GSC_SOURCE":{"type":"TEXT","index":13,"name":"gsc_source","comment":null,"description":"Name of the source application/ event tracker, such as gitlab-rails or gitlab-javascript. This field can be used to distinguish front-end events V/S back-end events. When `gsc_source = 'gitlab-rails'` THEN back-end event i.e. event was tracked using Ruby. When `gsc_source = 'gitlab-javascrip'` THEN front-end event i.e. event was tracked using Javascript.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gsc_source"},"EVENT_VALUE":{"type":"TEXT","index":14,"name":"event_value","comment":null,"description":"An optional numeric data to quantify or further describe the user action. Example: `1` could mean success and `0` could mean failure of an event . See [GitLab Event schema for more details](https://docs.gitlab.com/ee/development/snowplow/index.html#event-schema).\n\nNote: \n- It is only populated for strutured events (`event=struct`)\n- The value of this field is not standardized and depends on implementing engineer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_value"},"SESSION_INDEX":{"type":"NUMBER","index":15,"name":"session_index","comment":null,"description":"It is the number of the current user session. For example, an event occurring during a user's first session would have session_index set to 1.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"session_index"},"SESSION_ID":{"type":"TEXT","index":16,"name":"session_id","comment":null,"description":"Unique idenfitier for each user session. Note: session_id is NULL for back-end events (`tracker_version LIKE '%rb%'`)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"session_id"},"EVENT_CATEGORY":{"type":"TEXT","index":17,"name":"event_category","comment":null,"description":"The event category i.e. The page or backend section of the application. Example: `projects:merge_requests:creations:new`, `InvitesController`, `projects:issues:designs` etc. See [GitLab Event schema for more details](https://docs.gitlab.com/ee/development/snowplow/index.html#event-schema). \n\nNote: \n- It is only populated for strutured events (`event=struct`) and **can not be NULL**\n- The value of this field is not standardized and depends on implementing engineer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_category"},"EVENT_ACTION":{"type":"TEXT","index":18,"name":"event_action","comment":null,"description":"The action the user takes, or aspect thatâs being instrumented. Example: `invite_email_sent`, `join_clicked` etc. See [GitLab Event schema for more details](https://docs.gitlab.com/ee/development/snowplow/index.html#event-schema). \n\nNote:\n- It is only populated for strutured events (`event=struct`) and **can not be NULL**\n- The value of this field is not standardized and depends on implementing engineer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_action"},"EVENT_LABEL":{"type":"TEXT","index":19,"name":"event_label","comment":null,"description":"An optional string which identifies the specific object being actioned. Example: `invite_email`, `content_editor` etc. See [GitLab Event schema for more details](https://docs.gitlab.com/ee/development/snowplow/index.html#event-schema). \n\nNote: \n- It is only populated for strutured events (`event=struct`)\n- The value of this field is not standardized and depends on implementing engineer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_label"},"EVENT_PROPERTY":{"type":"TEXT","index":20,"name":"event_property","comment":null,"description":"An optional string describing the object or the action performed on it. Example: There are four different possible merge request actions: âcreateâ, âmergeâ, âcommentâ, and âcloseâ. Each of these would be a possible property value. See [GitLab Event schema for more details](https://docs.gitlab.com/ee/development/snowplow/index.html#event-schema). \n\nNote: \n- It is only populated for strutured events (`event=struct`)\n- The value of this field is not standardized and depends on implementing engineer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_property"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":21,"name":"dim_namespace_id","comment":null,"description":"The unique identifier of the namespace in which the event was generated, easily joined to `dim_namespace`. This field will be NULL if the event is not tied to a namespace (ex. viewing the To Dos page) and/or if the event occurred before `2021-09-02` (when collection of this data started). This is passed in the GitLab standard context and appears as `gsc_namespace_id` in the raw Snowplow data.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":22,"name":"ultimate_parent_namespace_id","comment":null,"description":"The unique identifier (and natural key) of the namespace's ultimate parent, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_id"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":23,"name":"namespace_is_internal","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace in which the event was generated is identified as an internal GitLab namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_IS_ULTIMATE_PARENT":{"type":"BOOLEAN","index":24,"name":"namespace_is_ultimate_parent","comment":null,"description":"Boolean flag which is set to True if the namespace is the ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_ultimate_parent"},"NAMESPACE_TYPE":{"type":"TEXT","index":25,"name":"namespace_type","comment":null,"description":"The type of namespace: Group, User, or Project.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_type"},"VISIBILITY_LEVEL":{"type":"TEXT","index":26,"name":"visibility_level","comment":null,"description":"The visibility setting for the namespace or project: public, private, or internal. More information about namespace and project visibility [here](https://docs.gitlab.com/ee/user/public_access.html)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"visibility_level"},"DIM_PROJECT_ID":{"type":"NUMBER","index":27,"name":"dim_project_id","comment":null,"description":"The unique identifier of the project in which the event was generated, easily joined to `dim_project`. This field will be NULL if the event is not tied to a project (ex. viewing an epic) and/or if the event occurred before `2021-09-02` (when collection of this data started).. This is passed in the GitLab standard context and appears as `gsc_project_id` in the raw Snowplow data.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_project_id"},"DEVICE_TYPE":{"type":"TEXT","index":28,"name":"device_type","comment":null,"description":"The type of device (ex. 'Mobile', 'Computer'). This appears as `dvce_type` in the raw Snowplow data","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"device_type"},"IS_DEVICE_MOBILE":{"type":"BOOLEAN","index":29,"name":"is_device_mobile","comment":null,"description":"Boolean flag set to True if the event is triggered on a mobile device. This appears as `dvce_ismobile` in the raw Snowplow data","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_device_mobile"},"DIM_BEHAVIOR_REFERRER_PAGE_SK":{"type":"TEXT","index":30,"name":"dim_behavior_referrer_page_sk","comment":null,"description":"Surrogate key consisting of referer_url, app_id and referer_url_scheme, easily JOINed to dim_behavior_website_page ON `dim_behavior_website_page_sk`. This ID in generated using `referer_url`, `app_id`, `referer_url_scheme` from [prep_snowplow_unnested_events_all](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.prep_snowplow_unnested_events_all).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_behavior_referrer_page_sk"},"CREATED_BY":{"type":"TEXT","index":31,"name":"created_by","comment":null,"description":"The GitLab handle of the original model creator","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":32,"name":"updated_by","comment":null,"description":"The GitLab handle of the most recent model editor","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":33,"name":"model_created_date","comment":null,"description":"Manually input ISO date of when model was original created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":34,"name":"model_updated_date","comment":null,"description":"Manually input ISO date of when model was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":35,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":36,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"HAS_GITLAB_SERVICE_PING_CONTEXT":{"type":"BOOLEAN","index":38,"name":"has_gitlab_service_ping_context","comment":null,"description":"A flag to indicate if the event has additional information in the context field related to `gitlab_service_ping`.  This context is defined in the Gitlab [iglu project](https://gitlab.com/gitlab-org/iglu/-/tree/master/public/schemas/com.gitlab)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_gitlab_service_ping_context"},"HAS_GITLAB_EXPERIMENT_CONTEXT":{"type":"BOOLEAN","index":39,"name":"has_gitlab_experiment_context","comment":null,"description":"A flag to indicate if the event has additional information in the context field related to `gitlab_experiment`.  This context is defined in the Gitlab [iglu project](https://gitlab.com/gitlab-org/iglu/-/tree/master/public/schemas/com.gitlab)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_gitlab_experiment_context"},"HAS_CUSTOMER_STANDARD_CONTEXT":{"type":"BOOLEAN","index":40,"name":"has_customer_standard_context","comment":null,"description":"A flag to indicate if the event has additional information in the context field related to `customer_standard`.  This context is defined in the Gitlab [iglu project](https://gitlab.com/gitlab-org/iglu/-/tree/master/public/schemas/com.gitlab)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_customer_standard_context"},"BROWSER_NAME":{"type":"TEXT","index":41,"name":"browser_name","comment":null,"description":"The name of the browser family (ex. 'Chrome', 'Firefox', 'Safari', etc). This appears as `br_family` in the raw Snowplow data","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"browser_name"},"DIM_BEHAVIOR_BROWSER_SK":{"type":"TEXT","index":42,"name":"dim_behavior_browser_sk","comment":null,"description":"Surrogate key consisting of browser_name, browser_major_version, browser_minor_version, and browser_language, easily JOINed to dim_behavior_browser. This ID in generated in [prep_snowplow_unnested_events_all](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.prep_snowplow_unnested_events_all) using `br_family`, `br_name`, `br_version`, and `br_lang`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_behavior_browser_sk"},"DIM_PLAN_ID":{"type":"NUMBER","index":43,"name":"DIM_PLAN_ID","comment":null,"display_name":"dim_plan_id"},"PLAN_ID_MODIFIED":{"type":"NUMBER","index":44,"name":"PLAN_ID_MODIFIED","comment":null,"display_name":"plan_id_modified"},"PLAN_NAME":{"type":"TEXT","index":45,"name":"PLAN_NAME","comment":null,"display_name":"plan_name"},"PLAN_NAME_MODIFIED":{"type":"TEXT","index":46,"name":"PLAN_NAME_MODIFIED","comment":null,"display_name":"plan_name_modified"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2713790832640,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"clustering_key":{"id":"clustering_key","label":"Clustering Key","value":"LINEAR(behavior_at::DATE)","include":true,"description":"The key used to cluster this table"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_behavior_structured_event","raw_sql":"$4a","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.only_force_full_refresh","macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt.is_incremental","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_behavior_event","model.gitlab_snowflake.dim_behavior_event","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_behavior_operating_system","model.gitlab_snowflake.dim_behavior_operating_system","model.gitlab_snowflake.dim_behavior_browser","model.gitlab_snowflake.dim_behavior_browser","model.gitlab_snowflake.dim_plan","model.gitlab_snowflake.dim_plan","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.fct_behavior_structured_event","model.gitlab_snowflake.fct_behavior_structured_event"]},"config":{"enabled":true,"alias":null,"schema":"common_mart","database":"PROD","tags":["product","product"],"meta":{},"materialized":"incremental","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":false,"unique_key":"behavior_structured_event_pk","on_schema_change":"sync_all_columns","grants":{},"copy_grants":true,"query_tag":"dbt","cluster_by":["behavior_at::DATE","event_action"],"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart","fqn":["gitlab_snowflake","common_mart","mart_behavior_structured_event"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart/mart_behavior_structured_event.sql","original_file_path":"models/common_mart/mart_behavior_structured_event.sql","name":"mart_behavior_structured_event","alias":"mart_behavior_structured_event","checksum":{"name":"sha256","checksum":"5178bb6e768eecccaf3867530740e23739b679af4fea9d7eb6d565109c441688"},"tags":["product"],"refs":[["dim_behavior_event"],["dim_behavior_event"],["dim_namespace"],["dim_namespace"],["dim_project"],["dim_project"],["dim_behavior_operating_system"],["dim_behavior_operating_system"],["dim_behavior_browser"],["dim_behavior_browser"],["dim_plan"],["dim_plan"],["dim_date"],["dim_date"],["fct_behavior_structured_event"],["fct_behavior_structured_event"]],"sources":[],"metrics":[],"description":"$4b","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart/mart_behavior_structured_event.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"incremental","tags":["product"],"unique_key":"behavior_structured_event_pk","full_refresh":false,"on_schema_change":"sync_all_columns","cluster_by":["behavior_at::DATE","event_action"]},"created_at":1689033731.7724087,"compiled_sql":"$4c","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart.mart_behavior_structured_event","label":"mart_behavior_structured_event"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART","name":"MART_EVENT_NAMESPACE_DAILY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"EVENT_NAMESPACE_DAILY_PK":{"type":"TEXT","index":1,"name":"event_namespace_daily_pk","comment":null,"description":"the unique ID combination of the event_date, event_name, and dim_ultimate_parent_namespace_id in mart_event_namespace_daily.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"event_namespace_daily_pk"},"DIM_LATEST_PRODUCT_TIER_ID":{"type":"TEXT","index":2,"name":"dim_latest_product_tier_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest product tier, easily joined to `dim_product_tier`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_product_tier_id"},"DIM_LATEST_SUBSCRIPTION_ID":{"type":"TEXT","index":3,"name":"dim_latest_subscription_id","comment":null,"description":"The unique identifier of the ultimate parent namespace's latest subscription, easily joined to `dim_subscription`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_latest_subscription_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"dim_crm_account_id","comment":null,"description":"The unique identifier of a crm account, easily joined to `dim_crm_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":5,"name":"dim_billing_account_id","comment":null,"description":"The identifier of the Zuora account associated with the subscription, easily joined to `dim_billing_account`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":6,"name":"dim_ultimate_parent_namespace_id","comment":null,"description":"The unique identifier of the ultimate parent namespace in which the event was generated, easily joined to `dim_namespace`. The recommended JOIN is `dim_ultimate_parent_namespace_id = dim_namespace.dim_namespace_id`, which will be a one-to-one relationship. JOINing on `dim_ultimate_parent_namespace_id = dim_namespace.ultimate_parent_namespace_id` will return `dim_namespace` records for both the ultimate parent _and_ all sub-groups underneath it. This field will be NULL if the event is not tied to a namespace (ex. users_created)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_ultimate_parent_namespace_id"},"DIM_EVENT_DATE_ID":{"type":"NUMBER","index":7,"name":"dim_event_date_id","comment":null,"description":"The ID of the event date, easily joined to `dim_date`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_event_date_id"},"PLAN_ID_AT_EVENT_DATE":{"type":"NUMBER","index":8,"name":"plan_id_at_event_date","comment":null,"description":"The ID of the ultimate parent namespace's plan on the day the event was created (ex. 34, 100, 101, etc). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to '34' (free) if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_id_at_event_date"},"PLAN_NAME_AT_EVENT_DATE":{"type":"TEXT","index":9,"name":"plan_name_at_event_date","comment":null,"description":"The name of the ultimate parent namespace's plan type on the day when the event was created (ex. free, premium, ultimate). If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to 'free' if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_name_at_event_date"},"PLAN_WAS_PAID_AT_EVENT_DATE":{"type":"BOOLEAN","index":10,"name":"plan_was_paid_at_event_date","comment":null,"description":"Boolean flag which is set to True if the ultimate parent namespace's plan was paid on the day when the event was created. If multiple plans are available on a given day, this reflects the plan on the last event of the day for the namespace. Defaults to False if a value is not available","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"plan_was_paid_at_event_date"},"DAYS_SINCE_NAMESPACE_CREATION_AT_EVENT_DATE":{"type":"NUMBER","index":11,"name":"days_since_namespace_creation_at_event_date","comment":null,"description":"The count of days between ultimate parent namespace creation and the event. This will be NULL if a namespace is not associated with the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_namespace_creation_at_event_date"},"EVENT_DATE":{"type":"DATE","index":12,"name":"event_date","comment":null,"description":"The date of the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_date"},"EVENT_NAME":{"type":"TEXT","index":13,"name":"event_name","comment":null,"description":"The name tied to the event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_name"},"STAGE_NAME":{"type":"TEXT","index":14,"name":"stage_name","comment":null,"description":"The name of the [product stage](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. secure, plan, create, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"stage_name"},"SECTION_NAME":{"type":"TEXT","index":15,"name":"section_name","comment":null,"description":"The name of the [product section](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/sections.yml) (ex. dev, ops, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"section_name"},"GROUP_NAME":{"type":"TEXT","index":16,"name":"group_name","comment":null,"description":"The name of the [product group](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/stages.yml) (ex. code_review, project_management, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"group_name"},"DATA_SOURCE":{"type":"TEXT","index":17,"name":"data_source","comment":null,"description":"The source application where the data was extracted from (ex. GITLAB_DOTCOM, VERSION_DB)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"data_source"},"IS_SMAU":{"type":"BOOLEAN","index":18,"name":"is_smau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the stage's SMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_smau"},"IS_GMAU":{"type":"BOOLEAN","index":19,"name":"is_gmau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the group's GMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_gmau"},"IS_UMAU":{"type":"BOOLEAN","index":20,"name":"is_umau","comment":null,"description":"Boolean flag set to True if the event (gitlab.com db data) or metric (Service Ping data) is chosen for the UMAU metric","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_umau"},"EVENT_COUNT":{"type":"NUMBER","index":21,"name":"event_count","comment":null,"description":"The count of events generated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_count"},"USER_COUNT":{"type":"NUMBER","index":22,"name":"user_count","comment":null,"description":"The count of distinct users who generated an event","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_count"},"ULTIMATE_PARENT_NAMESPACE_TYPE":{"type":"TEXT","index":23,"name":"ultimate_parent_namespace_type","comment":null,"description":"The type of Ultimate Parent Namespace (user,group,project)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_type"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":24,"name":"namespace_is_internal","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace in which the event was generated is identified as an internal GitLab namespace","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":25,"name":"namespace_creator_is_blocked","comment":null,"description":"Boolean flag set to True if the ultimate parent namespace creator is in a 'blocked' or 'banned' state","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"NAMESPACE_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":26,"name":"namespace_created_at","comment":null,"description":"The timestamp of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_at"},"NAMESPACE_CREATED_DATE":{"type":"DATE","index":27,"name":"namespace_created_date","comment":null,"description":"The date of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_date"},"EVENT_CALENDAR_MONTH":{"type":"DATE","index":28,"name":"event_calendar_month","comment":null,"description":"The first day of the calendar month of the event (ex. 2022-05-01, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_month"},"EVENT_CALENDAR_QUARTER":{"type":"TEXT","index":29,"name":"event_calendar_quarter","comment":null,"description":"The calendar quarter of the event (ex. 2022-Q2, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_quarter"},"EVENT_CALENDAR_YEAR":{"type":"NUMBER","index":30,"name":"event_calendar_year","comment":null,"description":"The calendar year of the event (ex. 2022, etc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"event_calendar_year"},"CREATED_BY":{"type":"TEXT","index":31,"name":"created_by","comment":null,"description":"The GitLab handle of the original model creator","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":32,"name":"updated_by","comment":null,"description":"The GitLab handle of the most recent model editor","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":33,"name":"model_created_date","comment":null,"description":"Manually input ISO date of when model was original created","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":34,"name":"model_updated_date","comment":null,"description":"Manually input ISO date of when model was updated","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":35,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":36,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 15:06UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":15384087040,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_event_namespace_daily","raw_sql":"$4d","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.fct_event_namespace_daily","model.gitlab_snowflake.fct_event_namespace_daily","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.fct_event_namespace_daily","model.gitlab_snowflake.fct_event_namespace_daily"]},"config":{"enabled":true,"alias":null,"schema":"common_mart","database":"PROD","tags":["product","mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart","fqn":["gitlab_snowflake","common_mart","mart_event_namespace_daily"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart/mart_event_namespace_daily.sql","original_file_path":"models/common_mart/mart_event_namespace_daily.sql","name":"mart_event_namespace_daily","alias":"mart_event_namespace_daily","checksum":{"name":"sha256","checksum":"afeeb8c52eddfc8cfac5f0319d6124e9f4dfe16449ee05580fcd23d689705c96"},"tags":["product","mnpi_exception"],"refs":[["dim_namespace"],["dim_namespace"],["fct_event_namespace_daily"],["fct_event_namespace_daily"],["dim_date"],["dim_date"],["fct_event_namespace_daily"],["fct_event_namespace_daily"]],"sources":[],"metrics":[],"description":"$4e","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart/mart_event_namespace_daily.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033731.4825535,"compiled_sql":"$4f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart.mart_event_namespace_daily","label":"mart_event_namespace_daily"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_PRODUCT","name":"MART_PRODUCT_USAGE_FREE_USER_METRICS_MONTHLY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORTING_MONTH":{"type":"DATE","index":1,"name":"reporting_month","comment":null,"description":"Month in which the product usage was reported.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"reporting_month"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":3,"name":"namespace_name","comment":null,"description":"Name associated with the dim_namespace_id. Brought in as part of Wave 5.1 Metrics.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"UUID":{"type":"TEXT","index":4,"name":"uuid","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"uuid"},"HOSTNAME":{"type":"TEXT","index":5,"name":"hostname","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hostname"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":6,"name":"dim_installation_id","comment":null,"description":"The unique identifier of the installation, easily joined to `dim_installation`. This id is the combination of `dim_host_id` and `dim_instance_id` and is considered the unique identifier of the installation for reporting and analysis","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_installation_id"},"DELIVERY_TYPE":{"type":"TEXT","index":7,"name":"delivery_type","comment":null,"description":"Indicated if the product usage came from a SaaS or Self-Managed user.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"delivery_type"},"DEPLOYMENT_TYPE":{"type":"TEXT","index":8,"name":"deployment_type","comment":null,"description":"Indicates whether the ping comes from a GitLab.com, SaaS Dedicated or Self-Managed instance.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployment_type"},"CLEANED_VERSION":{"type":"TEXT","index":9,"name":"cleaned_version","comment":null,"description":"Version of GitLab running on the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cleaned_version"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_crm_account_id","comment":null,"description":"ID of the CRM account associated with the free trial.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":11,"name":"crm_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":12,"name":"parent_crm_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_name"},"PING_DATE":{"type":"DATE","index":13,"name":"ping_date","comment":null,"description":"Actual date when ping is executed and data is extracted into Data Warehouse. This value determinates when data is processed.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ping_date"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":14,"name":"installation_creation_date","comment":null,"description":"Based off of the [`installation_creation_date`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20230228110448_installation_creation_date.yml) \nService Ping metric. For installations where the root user (id = 1) is not deleted, it returns the root user creation date. For installations where the root user \nis deleted, it returns the earliest available user creation date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"installation_creation_date"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":15,"name":"umau_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":16,"name":"action_monthly_active_users_project_repo_28_days_user","comment":null,"description":"Monthly count of unique users that made an Action on a valid [Target](https://docs.gitlab.com/ee/api/events.html#target-types) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateaction_monthly_active_users_project_repo))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":17,"name":"merge_requests_28_days_user","comment":null,"description":"Monthly count of unique users making merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":18,"name":"projects_with_repositories_enabled_28_days_user","comment":null,"description":"Monthly count of unique users that created projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":19,"name":"commit_comment_all_time_event","comment":null,"description":"All-time count commit comments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscommit_comment))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":20,"name":"source_code_pushes_all_time_event","comment":null,"description":"All-time count of source code pushes ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssource_code_pushes))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":21,"name":"ci_pipelines_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":22,"name":"ci_internal_pipelines_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":23,"name":"ci_builds_28_days_user","comment":null,"description":"Monthly count of unique users running CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_builds))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":24,"name":"ci_builds_all_time_user","comment":null,"description":"All-time count of unique users running CI builds ([source]()https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_builds)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":25,"name":"ci_builds_all_time_event","comment":null,"description":"All-time count of CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_builds))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":26,"name":"ci_runners_all_time_event","comment":null,"description":"All-time count of CI Runners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_runners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":27,"name":"auto_devops_enabled_all_time_event","comment":null,"description":"All-time count of Projects with auto DevOps template enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsauto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":28,"name":"gitlab_shared_runners_enabled","comment":null,"description":"Flags whether shared runners are enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitlab_shared_runners_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":29,"name":"container_registry_enabled","comment":null,"description":"Flags whether container registry is enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#container_registry_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":30,"name":"template_repositories_all_time_event","comment":null,"description":"All-time total of custom project templates and projects without namespaces ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstemplate_repositories))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":31,"name":"ci_pipeline_config_repository_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines from templates in repository ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipeline_config_repository))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":32,"name":"user_unique_users_all_secure_scanners_28_days_user","comment":null,"description":"Monthly count of unique users running secure CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_unique_users_all_secure_scanners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":33,"name":"user_sast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_sast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":34,"name":"user_dast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":35,"name":"user_dependency_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running dependency scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":36,"name":"user_license_management_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running license management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_license_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"user_secret_detection_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running secret detection CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_secret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"user_container_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running container scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_container_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":39,"name":"object_store_packages_enabled","comment":null,"description":"Flags whether Object Storage is enabled for Uploads ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#object_storepackagesenabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":40,"name":"projects_with_packages_all_time_event","comment":null,"description":"All-time count of projects with package registry configured ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":41,"name":"projects_with_packages_28_days_event","comment":null,"description":"Projects with package registry enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181055_projects_with_packages.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":42,"name":"deployments_28_days_user","comment":null,"description":"Monthly count of unique users triggering deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasedeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"releases_28_days_user","comment":null,"description":"Monthly count of unique users authoring releases ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasereleases))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"epics_28_days_user","comment":null,"description":"Monthly count of unique users authoring epics ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":45,"name":"issues_28_days_user","comment":null,"description":"Monthly count of unique users authoring issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":46,"name":"ci_internal_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"ci_external_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in external repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_external_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"merge_requests_all_time_event","comment":null,"description":"All-time count of Merge Requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsmerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":49,"name":"todos_all_time_event","comment":null,"description":"All-time count of ToDos created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstodos))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":50,"name":"epics_all_time_event","comment":null,"description":"All-time count of Epics created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":51,"name":"issues_all_time_event","comment":null,"description":"All-time count of Issues created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":52,"name":"projects_all_time_event","comment":null,"description":"All-time count of Projects created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":53,"name":"deployments_28_days_event","comment":null,"description":"Monthly count of deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlydeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":54,"name":"packages_28_days_event","comment":null,"description":"Monthly count of Packages ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlypackages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":55,"name":"sast_jobs_all_time_event","comment":null,"description":"All-time count of SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":56,"name":"dast_jobs_all_time_event","comment":null,"description":"All-time count of DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":57,"name":"dependency_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Dependency Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":58,"name":"license_management_jobs_all_time_event","comment":null,"description":"All-time count of License Management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countslicense_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":59,"name":"secret_detection_jobs_all_time_event","comment":null,"description":"All-time count of Secret Detectionâ CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssecret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":60,"name":"container_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Container Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscontainer_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":61,"name":"projects_jenkins_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jenkins ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jenkins_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":62,"name":"projects_bamboo_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Bamboo CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_bamboo_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":63,"name":"projects_jira_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":64,"name":"projects_drone_ci_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Drone CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_drone_ci_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":65,"name":"projects_github_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_github_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":66,"name":"projects_jira_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Server ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":67,"name":"projects_jira_dvcs_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud (DVCS Connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"projects_with_repositories_enabled_all_time_event","comment":null,"description":"All-time count of projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"protected_branches_all_time_event","comment":null,"description":"All-time count of protected branches ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprotected_branches))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"remote_mirrors_all_time_event","comment":null,"description":"All-time count of remote mirrors ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsremote_mirrors))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":71,"name":"projects_enforcing_code_owner_approval_28_days_user","comment":null,"description":"Monthly count of unique users creating projects that require code owner approval ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_enforcing_code_owner_approval))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":72,"name":"project_clusters_enabled_28_days_user","comment":null,"description":"Monthly count of unique users using GitLab Managed enabled clusters attached to projects ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyconfigureproject_clusters_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":73,"name":"analytics_28_days_user","comment":null,"description":"The number of unique users viewing any [Analytics page](https://docs.gitlab.com/ee/user/analytics/) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#manage-manageoptimize---smau-gmau---mau-viewing-analytics-features))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":74,"name":"issues_edit_28_days_user","comment":null,"description":"Number of unique users interacting with an issue (open, close, reopen, adjust label, adjust milestone, adjust weight, comment) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#plan-planproject-management---smau-paid-gmau---mau-interacting-with-issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":75,"name":"user_packages_28_days_user","comment":null,"description":"The maximum distinct count of users who published a package to the Package Registry. In the future, this value will the distinct count of users across all Package AMAUs ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#packagepackage---smau-gmau---count-of-users-publishing-packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":76,"name":"terraform_state_api_28_days_user","comment":null,"description":"Monthly active users of GitLab Managed Terraform State ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#configureconfigure---smau-gmau---mau-of-gitlab-managed-terraform-state))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":77,"name":"incident_management_28_days_user","comment":null,"description":"Unique users that interact with alerts or incidents ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#monitormonitor---smau-gmau---unique-users-that-interact-with-alerts-and-incidents))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":78,"name":"auto_devops_enabled","comment":null,"description":"Flags whether auto DevOps is enabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#instance_auto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":79,"name":"gitaly_clusters_instance","comment":null,"description":"Number of GitLab Managed clusters both enabled and disabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitalyclusters))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":80,"name":"epics_deepest_relationship_level_instance","comment":null,"description":"Numeric level of the deepest relationship of all epics on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics_deepest_relationship_level))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"clusters_applications_cilium_all_time_event","comment":null,"description":"All-time total of GitLab Managed clusters with GitLab Managed App:Cilium installed ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsclusters_applications_cilium))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"network_policy_forwards_all_time_event","comment":null,"description":"Cumulative count of packets forwarded by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_forwards))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"network_policy_drops_all_time_event","comment":null,"description":"Cumulative count of packets dropped by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_drops))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"requirements_with_test_report_all_time_event","comment":null,"description":"All-time count of requirements having a test report ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirements_with_test_report))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"requirement_test_reports_ci_all_time_event","comment":null,"description":"All-time count of requirement test reports created from CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirement_test_reports_ci))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"projects_imported_from_github_all_time_event","comment":null,"description":"All-time count of project imported from GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_imported_from_github))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"projects_jira_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"projects_jira_dvcs_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"service_desk_issues_all_time_event","comment":null,"description":"All-time count of service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":90,"name":"ci_pipelines_all_time_user","comment":null,"description":"All-time count of distinct Users triggering Total pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":91,"name":"service_desk_issues_28_days_user","comment":null,"description":"Monthly count of users opening service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":92,"name":"projects_jira_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"projects_jira_dvcs_cloud_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Cloud (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"projects_jira_dvcs_server_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"merge_requests_with_required_code_owners_28_days_user","comment":null,"description":"Monthly count of users creating merge requests with required code owners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests_with_required_codeowners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":96,"name":"analytics_value_stream_28_days_event","comment":null,"description":"Monthly count of visits to [Value Stream Analytics](https://about.gitlab.com/stages-devops-lifecycle/value-stream-analytics/) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersanalyticsg_analytics_valuestream_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"code_review_user_approve_mr_28_days_user","comment":null,"description":"Monthly count of users approving merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_counterscode_reviewi_code_review_user_approve_mr_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"epics_usage_28_days_user","comment":null,"description":"Monthly users count for epics_usage ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersepics_usageepics_usage_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":99,"name":"ci_templates_usage_28_days_event","comment":null,"description":"Monthly count of CI templates ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersci_templatesci_templates_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":100,"name":"project_management_issue_milestone_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs milestone ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_milestone_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":101,"name":"project_management_issue_iteration_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs iteration ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_iteration_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":102,"name":"protected_branches_28_days_user","comment":null,"description":"Count of users creating projects with repositories making use of at least one protected branch in last 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182051_protected_branches.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":103,"name":"ci_cd_lead_time_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics lead time tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126091206_p_analytics_ci_cd_lead_time_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":104,"name":"ci_cd_deployment_frequency_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics deployment frequency tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126090835_p_analytics_ci_cd_deployment_frequency_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":105,"name":"projects_with_repositories_enabled_all_time_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182023_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":106,"name":"api_fuzzing_jobs_usage_28_days_user","comment":null,"description":"Count of distinct users creating API Fuzzing jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180355_user_api_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":107,"name":"coverage_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 coverage-guided Fuzz Testing job.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180359_coverage_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":108,"name":"api_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 API Fuzzing Testing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180401_api_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":109,"name":"container_scanning_pipeline_usage_28_days_event","comment":null,"description":"Pipelines containing a Container Scanning job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175507_container_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":110,"name":"dependency_scanning_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines with successful Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175226_dependency_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":111,"name":"sast_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 SAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182129_sast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":112,"name":"secret_detection_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 Secret Detection job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182131_secret_detection_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":113,"name":"dast_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines that have at least 1 DAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175618_dast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"coverage_fuzzing_jobs_28_days_user","comment":null,"description":"Users who run a coverage fuzzing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183817_user_coverage_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":115,"name":"environments_all_time_event","comment":null,"description":"Total available and stopped environments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181914_environments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":116,"name":"feature_flags_all_time_event","comment":null,"description":"Number of feature flag toggles. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181249_feature_flags.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":117,"name":"successful_deployments_28_days_event","comment":null,"description":"Total successful deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181923_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":118,"name":"failed_deployments_28_days_event","comment":null,"description":"Total failed deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181924_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":119,"name":"projects_compliance_framework_all_time_event","comment":null,"description":"Number of projects labeled with a compliance framework label. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180825_projects_with_compliance_framework.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":120,"name":"commit_ci_config_file_28_days_user","comment":null,"description":"Monthly unique user count doing commits which contains the CI config file.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184303_o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":121,"name":"view_audit_all_time_user","comment":null,"description":"Unique users who have viewed audit events. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216183906_g_compliance_audit_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":122,"name":"dependency_scanning_jobs_all_time_user","comment":null,"description":"Total number of users running Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175216_user_dependency_scanning_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":123,"name":"analytics_devops_adoption_all_time_user","comment":null,"description":"Unique users viewing analytics devops adoption. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210423005644_i_analytics_dev_ops_adoption.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":124,"name":"projects_imported_all_time_event","comment":null,"description":"Number of projects imported. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210514141520_project_imports_total.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":125,"name":"preferences_security_dashboard_28_days_user","comment":null,"description":"Users who set personal preference to see Security Dashboard on Group\n information page. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182209_user_preferences_group_overview_security_dashboard.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":126,"name":"web_ide_edit_28_days_user","comment":null,"description":"Number of unique users per month who edited a file from any web editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180327_action_monthly_active_users_ide_edit.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":127,"name":"auto_devops_pipelines_all_time_event","comment":null,"description":"Total pipelines from an Auto DevOps template. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175516_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":128,"name":"projects_prometheus_active_all_time_event","comment":null,"description":"Count of projects with active integrations for Prometheus. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180931_projects_prometheus_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":129,"name":"prometheus_enabled","comment":null,"description":"Whether the bundled Prometheus is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124912_prometheus_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":130,"name":"prometheus_metrics_enabled","comment":null,"description":"Whether Prometheus Metrics endpoint is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124914_prometheus_metrics_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":131,"name":"group_saml_enabled","comment":null,"description":"Has the instance enabled Group SAML SSO `https://docs.gitlab.com/ee/user/group/saml_sso/`\n on at least 1 group? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180813_group_saml_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":132,"name":"jira_issue_imports_all_time_event","comment":null,"description":"Count of projects imported from Jira. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180654_jira.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":133,"name":"author_epic_all_time_user","comment":null,"description":"Count distinct author ids from epics. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181134_epics.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":134,"name":"author_issue_all_time_user","comment":null,"description":"Count of users creating Issues. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181115_issues.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":135,"name":"failed_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a failed deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181937_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":136,"name":"successful_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a successful deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181941_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":137,"name":"geo_enabled","comment":null,"description":"Is Geo enabled? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180406_geo_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":138,"name":"auto_devops_pipelines_28_days_user","comment":null,"description":"Distinct users that ran an auto DevOps pipeline without a .gitlab-ci.yml file. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175548_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":139,"name":"active_instance_runners_all_time_event","comment":null,"description":"Total active Shared (Instance) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502045402_ci_runners_instance_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":140,"name":"active_group_runners_all_time_event","comment":null,"description":"Total active Group Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050341_ci_runners_group_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":141,"name":"active_project_runners_all_time_event","comment":null,"description":"Total active Specific (Project) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050834_ci_runners_project_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":142,"name":"gitaly_version","comment":null,"description":"Version of Gitaly. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20210204124928_version.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":143,"name":"gitaly_servers_all_time_event","comment":null,"description":"Total Gitalty Servers. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210204124930_servers.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":144,"name":"api_fuzzing_scans_all_time_event","comment":null,"description":"Number of DAST API Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180353_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":145,"name":"api_fuzzing_scans_28_days_event","comment":null,"description":"Count of API fuzz test scans. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183838_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":146,"name":"coverage_fuzzing_scans_all_time_event","comment":null,"description":"Number of Coverage Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180352_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":147,"name":"coverage_fuzzing_scans_28_days_event","comment":null,"description":"Number of Coverage Guided Fuzz Test security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183836_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":148,"name":"secret_detection_scans_all_time_event","comment":null,"description":"Counts secret detection jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182123_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":149,"name":"secret_detection_scans_28_days_event","comment":null,"description":"Number of Secret Detection security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231956_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":150,"name":"dependency_scanning_scans_all_time_event","comment":null,"description":"Total count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175220_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":151,"name":"dependency_scanning_scans_28_days_event","comment":null,"description":"Monthly count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183828_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":152,"name":"container_scanning_scans_all_time_event","comment":null,"description":"Counts container scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175503_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":153,"name":"container_scanning_scans_28_days_event","comment":null,"description":"Number of Container Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231849_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":154,"name":"dast_scans_all_time_event","comment":null,"description":"Counts dast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182122_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":155,"name":"dast_scans_28_days_event","comment":null,"description":"Number of DAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183832_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":156,"name":"sast_scans_all_time_event","comment":null,"description":"Counts sast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182120_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":157,"name":"sast_scans_28_days_event","comment":null,"description":"Number of SAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231329_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":158,"name":"packages_pushed_registry_all_time_event","comment":null,"description":"A count of packages that have been published to the package registry\nusing a deploy token. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183005_package_events_i_package_push_package_by_deploy_token.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":159,"name":"packages_pulled_registry_all_time_event","comment":null,"description":"A count of packages that have been downloaded from the package registry\nby a guest. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183000_package_events_i_package_pull_package_by_guest.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":160,"name":"compliance_dashboard_view_28_days_user","comment":null,"description":"Unique users who have viewed the compliance dashboard in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183926_g_compliance_dashboard_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":161,"name":"audit_screen_view_28_days_user","comment":null,"description":"Unique users who have viewed the audit event screen in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183930_g_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":162,"name":"instance_audit_screen_view_28_days_user","comment":null,"description":"Unique users that have viewed the instance-level audit events screen. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183934_i_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":163,"name":"credential_inventory_view_28_days_user","comment":null,"description":"Unique users who have viewed the credential inventory in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183938_i_compliance_credential_inventory_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":164,"name":"compliance_frameworks_pipeline_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":165,"name":"compliance_frameworks_pipeline_28_days_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210622091519_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":166,"name":"groups_streaming_destinations_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":167,"name":"groups_streaming_destinations_28_days_event","comment":null,"description":"Distinct count of groups with any event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130091657_groups_with_event_streaming_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":168,"name":"audit_event_destinations_all_time_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":169,"name":"audit_event_destinations_28_days_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":170,"name":"projects_status_checks_all_time_event","comment":null,"description":"Total number of distinct projects with external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308162514_projects_with_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":171,"name":"external_status_checks_all_time_event","comment":null,"description":"Total number of external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308155129_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":172,"name":"paid_license_search_28_days_user","comment":null,"description":"Calculated unique users to perform a search with a paid license enabled\nby month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216184035_i_search_paid_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":173,"name":"last_activity_28_days_user","comment":null,"description":"Users that have a last_activity_on date within the past 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20220621085114_unique_active_users_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":174,"name":"snippets_28_days_event","comment":null,"description":"Monthly count of All Snippets. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180312_snippets.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":175,"name":"single_file_editor_28_days_user","comment":null,"description":"Number of users editing a file from the single file editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180334_g_edit_by_sfe_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":176,"name":"merge_requests_created_28_days_event","comment":null,"description":"Count of unique merge requests created per month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20221213182900_i_code_review_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":177,"name":"merge_requests_created_28_days_user","comment":null,"description":"Count of unique users per month who created a MR. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/60dda716679ae92aa368633bdee597b8fa57984f/config/metrics/counts_28d/20210216175132_i_code_review_user_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":178,"name":"merge_requests_approval_rules_28_days_event","comment":null,"description":"Count of distinct merge requests merged using approval rules. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20221211202138_merged_merge_requests_using_approval_rules_distinct.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":179,"name":"custom_compliance_frameworks_28_days_event","comment":null,"description":"Monthly count of all custom compliance framework labels. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210507165054_custom_compliance_frameworks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":180,"name":"projects_security_policy_28_days_event","comment":null,"description":"The total number of projects with an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083011_distinct_count_project_id_from_security_orchestration_policy_configurations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":181,"name":"merge_requests_security_policy_28_days_user","comment":null,"description":"The total number of users who have created merge requests in Projects that have an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083016_user_merge_requests_for_projects_with_security_policy_project.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":182,"name":"pipelines_implicit_auto_devops_28_days_event","comment":null,"description":"Count of pipelines with implicit Auto DevOps runs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184458_p_ci_templates_implicit_auto_devops_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"pipeline_schedules_28_days_user","comment":null,"description":"Distinct users creating pipeline schedules in a month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175552_ci_pipeline_schedules.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":184,"name":"ci_internal_pipelines_28_days_event","comment":null,"description":"Total monthly (28D) pipelines in Gitlab repositories for all project and project types [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20230217215050_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('mart_product_usage_free_user_metrics_monthly')) }}\"})"}],"display_name":"ci_internal_pipelines_28_days_event"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":185,"name":"is_latest_data","comment":null,"description":"Flags the row with the most recently received data from Usage Ping","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_latest_data"},"PREV_HASH":{"type":"TEXT","index":186,"name":"PREV_HASH","comment":null,"display_name":"prev_hash"},"LAST_CHANGED":{"type":"TIMESTAMP_LTZ","index":187,"name":"LAST_CHANGED","comment":null,"display_name":"last_changed"},"CREATED_BY":{"type":"TEXT","index":188,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":189,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":190,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":191,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":192,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":193,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"jira_imports_28_days_event":{"name":"jira_imports_28_days_event","description":"Monthly count of Issues imported from Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlymanageissue_importsjira)). This metric has been deprecated but we are keeping the field around for history.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"jira_imports_28_days_event"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:55UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":20689443328,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_product_usage_free_user_metrics_monthly","raw_sql":"$50","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.hash_diff","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.fct_ping_instance_free_user_metrics_monthly","model.gitlab_snowflake.fct_ping_instance_free_user_metrics_monthly","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_product","database":"PROD","tags":["product","mnpi_exception","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_product","fqn":["gitlab_snowflake","common_mart_product","mart_product_usage_free_user_metrics_monthly"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_product/mart_product_usage_free_user_metrics_monthly.sql","original_file_path":"models/common_mart_product/mart_product_usage_free_user_metrics_monthly.sql","name":"mart_product_usage_free_user_metrics_monthly","alias":"mart_product_usage_free_user_metrics_monthly","checksum":{"name":"sha256","checksum":"ce9afb20bd16175de31079e22aa9d1d2d88c1b373d1ce768594e9c315e8d1c48"},"tags":["product","mnpi_exception"],"refs":[["fct_ping_instance_free_user_metrics_monthly"],["fct_ping_instance_free_user_metrics_monthly"],["dim_crm_account"],["dim_crm_account"],["dim_namespace"],["dim_namespace"]],"sources":[],"metrics":[],"description":"This table unions the sets of all Self-Managed and SaaS **free users**. The data from this table will be used for  Customer Product Insights by Sales team.\n\nThe grain of this table is namespace || uuid-hostname per month.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_product/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_product/mart_product_usage_free_user_metrics_monthly.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception","product"]},"created_at":1689033735.3518562,"compiled_sql":"$51","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_product.mart_product_usage_free_user_metrics_monthly","label":"mart_product_usage_free_user_metrics_monthly"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_NOTE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_NOTE_ID":{"type":"NUMBER","index":1,"name":"dim_note_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_note_id"},"AUTHOR_ID":{"type":"NUMBER","index":2,"name":"AUTHOR_ID","comment":null,"display_name":"author_id"},"DIM_PROJECT_ID":{"type":"NUMBER","index":3,"name":"DIM_PROJECT_ID","comment":null,"display_name":"dim_project_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"ULTIMATE_PARENT_NAMESPACE_ID","comment":null,"display_name":"ultimate_parent_namespace_id"},"NOTEABLE_ID":{"type":"NUMBER","index":5,"name":"NOTEABLE_ID","comment":null,"display_name":"noteable_id"},"CREATED_DATE_ID":{"type":"NUMBER","index":6,"name":"CREATED_DATE_ID","comment":null,"display_name":"created_date_id"},"DIM_PLAN_ID":{"type":"NUMBER","index":7,"name":"DIM_PLAN_ID","comment":null,"display_name":"dim_plan_id"},"NOTEABLE_TYPE":{"type":"TEXT","index":8,"name":"NOTEABLE_TYPE","comment":null,"display_name":"noteable_type"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":9,"name":"CREATED_AT","comment":null,"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":10,"name":"UPDATED_AT","comment":null,"display_name":"updated_at"},"NOTE":{"type":"TEXT","index":11,"name":"NOTE","comment":null,"display_name":"note"},"ATTACHMENT":{"type":"TEXT","index":12,"name":"ATTACHMENT","comment":null,"display_name":"attachment"},"LINE_CODE":{"type":"TEXT","index":13,"name":"LINE_CODE","comment":null,"display_name":"line_code"},"COMMIT_ID":{"type":"TEXT","index":14,"name":"COMMIT_ID","comment":null,"display_name":"commit_id"},"IS_SYSTEM_NOTE":{"type":"BOOLEAN","index":15,"name":"IS_SYSTEM_NOTE","comment":null,"display_name":"is_system_note"},"NOTE_UPDATED_BY_ID":{"type":"NUMBER","index":16,"name":"NOTE_UPDATED_BY_ID","comment":null,"display_name":"note_updated_by_id"},"POSITION_NUMBER":{"type":"TEXT","index":17,"name":"POSITION_NUMBER","comment":null,"display_name":"position_number"},"ORIGINAL_POSITION":{"type":"TEXT","index":18,"name":"ORIGINAL_POSITION","comment":null,"display_name":"original_position"},"RESOLVED_AT":{"type":"TIMESTAMP_NTZ","index":19,"name":"RESOLVED_AT","comment":null,"display_name":"resolved_at"},"RESOLVED_BY_ID":{"type":"NUMBER","index":20,"name":"RESOLVED_BY_ID","comment":null,"display_name":"resolved_by_id"},"DISCUSSION_ID":{"type":"TEXT","index":21,"name":"DISCUSSION_ID","comment":null,"display_name":"discussion_id"},"CACHED_MARKDOWN_VERSION":{"type":"NUMBER","index":22,"name":"CACHED_MARKDOWN_VERSION","comment":null,"display_name":"cached_markdown_version"},"RESOLVED_BY_PUSH":{"type":"BOOLEAN","index":23,"name":"RESOLVED_BY_PUSH","comment":null,"display_name":"resolved_by_push"},"CREATED_BY":{"type":"TEXT","index":24,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":25,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":26,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":27,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":28,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":29,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:50UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":154686201856,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_note","raw_sql":"$52","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt.is_incremental","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_namespace_plan_hist","model.gitlab_snowflake.dim_namespace_plan_hist","model.gitlab_snowflake.gitlab_dotcom_plans_source","model.gitlab_snowflake.gitlab_dotcom_plans_source","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.prep_project","model.gitlab_snowflake.dim_epic","model.gitlab_snowflake.dim_epic","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.gitlab_dotcom_notes_dedupe_source","model.gitlab_snowflake.gitlab_dotcom_notes_dedupe_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["product"],"meta":{},"materialized":"incremental","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":"dim_note_id","on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_note"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_note.sql","original_file_path":"models/common_prep/prep_note.sql","name":"prep_note","alias":"prep_note","checksum":{"name":"sha256","checksum":"44548356ae844d41e83b1086fe9166eeadf1c2207f0640cbae7b5b64ce192bc3"},"tags":["product"],"refs":[["dim_date"],["dim_date"],["dim_namespace_plan_hist"],["dim_namespace_plan_hist"],["gitlab_dotcom_plans_source"],["gitlab_dotcom_plans_source"],["prep_project"],["prep_project"],["dim_epic"],["dim_epic"],["dim_namespace"],["dim_namespace"],["gitlab_dotcom_notes_dedupe_source"],["gitlab_dotcom_notes_dedupe_source"]],"sources":[],"metrics":[],"description":"Prep table for the dim table `dim_note`.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_note.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"incremental","tags":["product"],"unique_key":"dim_note_id"},"created_at":1689033756.6894264,"compiled_sql":"$53","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_note","label":"prep_note"},{"raw_sql":"$54","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"workspace_engineering","database":"PROD","tags":["workspace"],"meta":{},"materialized":"ephemeral","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_engineering","fqn":["gitlab_snowflake","workspaces","workspace_engineering","infradev","intermediate","infradev_namespace_path"],"unique_id":"model.gitlab_snowflake.infradev_namespace_path","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_engineering/infradev/intermediate/infradev_namespace_path.sql","original_file_path":"models/workspaces/workspace_engineering/infradev/intermediate/infradev_namespace_path.sql","name":"infradev_namespace_path","alias":"infradev_namespace_path","checksum":{"name":"sha256","checksum":"850a48c028640a82e8fb83e945cfb2a96606bac6e384c470de9cfab42a7014b6"},"tags":["workspace"],"refs":[["dim_namespace"],["dim_namespace"]],"sources":[],"metrics":[],"description":"A model to concatenate the full namespace path, up to four levels deep.  Not explicitly limited to the infradev team.","columns":{},"meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_engineering/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_engineering/infradev/intermediate/infradev_namespace_path.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_engineering","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"ephemeral","tags":["workspace"]},"created_at":1689033733.4003315,"compiled_sql":"$55","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"label":"infradev_namespace_path"}],"test":[{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_namespace_id","model":"{{ get_where_subquery(ref('dim_namespace')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","not_null_dim_namespace_dim_namespace_id"],"unique_id":"test.gitlab_snowflake.not_null_dim_namespace_dim_namespace_id.2bd407e0ef","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_dim_namespace_dim_namespace_id.sql","original_file_path":"models/common/schema.yml","name":"not_null_dim_namespace_dim_namespace_id","alias":"not_null_dim_namespace_dim_namespace_id","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["dim_namespace"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/not_null_dim_namespace_dim_namespace_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033754.1080573,"compiled_sql":"\n    \n    \n\n\n\nselect dim_namespace_id\nfrom \"PROD\".common.dim_namespace\nwhere dim_namespace_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_namespace_id","file_key_name":"models.dim_namespace","label":"not_null_dim_namespace_dim_namespace_id"},{"raw_sql":"{{ test_unique(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"unique","kwargs":{"column_name":"dim_namespace_id","model":"{{ get_where_subquery(ref('dim_namespace')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_unique","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","unique_dim_namespace_dim_namespace_id"],"unique_id":"test.gitlab_snowflake.unique_dim_namespace_dim_namespace_id.a47482f472","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"unique_dim_namespace_dim_namespace_id.sql","original_file_path":"models/common/schema.yml","name":"unique_dim_namespace_dim_namespace_id","alias":"unique_dim_namespace_dim_namespace_id","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["dim_namespace"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/unique_dim_namespace_dim_namespace_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033754.1118288,"compiled_sql":"\n    \n    \n\nselect\n    dim_namespace_id as unique_field,\n    count(*) as n_records\n\nfrom \"PROD\".common.dim_namespace\nwhere dim_namespace_id is not null\ngroup by dim_namespace_id\nhaving count(*) > 1\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_namespace_id","file_key_name":"models.dim_namespace","label":"unique_dim_namespace_dim_namespace_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"namespace_type","model":"{{ get_where_subquery(ref('dim_namespace')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","not_null_dim_namespace_namespace_type"],"unique_id":"test.gitlab_snowflake.not_null_dim_namespace_namespace_type.196c56a4e6","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_dim_namespace_namespace_type.sql","original_file_path":"models/common/schema.yml","name":"not_null_dim_namespace_namespace_type","alias":"not_null_dim_namespace_namespace_type","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["dim_namespace"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/not_null_dim_namespace_namespace_type.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033754.1155248,"compiled_sql":"\n    \n    \n\n\n\nselect namespace_type\nfrom \"PROD\".common.dim_namespace\nwhere namespace_type is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"namespace_type","file_key_name":"models.dim_namespace","label":"not_null_dim_namespace_namespace_type"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"gitlab_plan_id","model":"{{ get_where_subquery(ref('dim_namespace')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","not_null_dim_namespace_gitlab_plan_id"],"unique_id":"test.gitlab_snowflake.not_null_dim_namespace_gitlab_plan_id.cbe80dbf39","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_dim_namespace_gitlab_plan_id.sql","original_file_path":"models/common/schema.yml","name":"not_null_dim_namespace_gitlab_plan_id","alias":"not_null_dim_namespace_gitlab_plan_id","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["dim_namespace"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/not_null_dim_namespace_gitlab_plan_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033754.119559,"compiled_sql":"\n    \n    \n\n\n\nselect gitlab_plan_id\nfrom \"PROD\".common.dim_namespace\nwhere gitlab_plan_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"gitlab_plan_id","file_key_name":"models.dim_namespace","label":"not_null_dim_namespace_gitlab_plan_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"gitlab_plan_title","model":"{{ get_where_subquery(ref('dim_namespace')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","not_null_dim_namespace_gitlab_plan_title"],"unique_id":"test.gitlab_snowflake.not_null_dim_namespace_gitlab_plan_title.df9a7f6037","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_dim_namespace_gitlab_plan_title.sql","original_file_path":"models/common/schema.yml","name":"not_null_dim_namespace_gitlab_plan_title","alias":"not_null_dim_namespace_gitlab_plan_title","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["dim_namespace"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/not_null_dim_namespace_gitlab_plan_title.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033754.1229835,"compiled_sql":"\n    \n    \n\n\n\nselect gitlab_plan_title\nfrom \"PROD\".common.dim_namespace\nwhere gitlab_plan_title is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"gitlab_plan_title","file_key_name":"models.dim_namespace","label":"not_null_dim_namespace_gitlab_plan_title"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"gitlab_plan_is_paid","model":"{{ get_where_subquery(ref('dim_namespace')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_namespace"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","not_null_dim_namespace_gitlab_plan_is_paid"],"unique_id":"test.gitlab_snowflake.not_null_dim_namespace_gitlab_plan_is_paid.271c217c52","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_dim_namespace_gitlab_plan_is_paid.sql","original_file_path":"models/common/schema.yml","name":"not_null_dim_namespace_gitlab_plan_is_paid","alias":"not_null_dim_namespace_gitlab_plan_is_paid","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["dim_namespace"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/not_null_dim_namespace_gitlab_plan_is_paid.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033754.1264307,"compiled_sql":"\n    \n    \n\n\n\nselect gitlab_plan_is_paid\nfrom \"PROD\".common.dim_namespace\nwhere gitlab_plan_is_paid is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"gitlab_plan_is_paid","file_key_name":"models.dim_namespace","label":"not_null_dim_namespace_gitlab_plan_is_paid"}],"exposure":[{"fqn":["gitlab_snowflake","propensity_to_purchase_trials"],"unique_id":"exposure.gitlab_snowflake.propensity_to_purchase_trials","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"data_science_exposures.yml","original_file_path":"models/data_science_exposures.yml","name":"propensity_to_purchase_trials","type":"ml","owner":{"email":"kdietz@gitlab.com","name":"Kevin Dietz"},"resource_type":"exposure","description":"","maturity":"high","meta":{},"tags":[],"url":"https://gitlab.com/gitlab-data/data-science-projects/propensity-to-purchase/-/blob/main/prod/saas-trials/ptp_trials_base_query.sql","depends_on":{"macros":[],"nodes":["model.gitlab_snowflake.customers_db_trial_histories","model.gitlab_snowflake.dim_order_hist","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.gitlab_dotcom_user_details","model.gitlab_snowflake.gitlab_dotcom_users_xf","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_usage_data_events","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.snowplow_structured_events","model.gitlab_snowflake.snowplow_gitlab_events_experiment_contexts","model.gitlab_snowflake.mart_product_usage_free_user_metrics_monthly","model.gitlab_snowflake.monthly_stage_usage_by_namespace"]},"refs":[["customers_db_trial_histories"],["dim_order_hist"],["dim_namespace"],["gitlab_dotcom_user_details"],["gitlab_dotcom_users_xf"],["gitlab_dotcom_memberships"],["gitlab_dotcom_usage_data_events"],["gitlab_dotcom_users_source"],["snowplow_structured_events"],["snowplow_gitlab_events_experiment_contexts"],["mart_product_usage_free_user_metrics_monthly"],["monthly_stage_usage_by_namespace"]],"sources":[],"created_at":1689033729.294149,"label":"propensity_to_purchase_trials"},{"fqn":["gitlab_snowflake","propensity_to_purchase_free"],"unique_id":"exposure.gitlab_snowflake.propensity_to_purchase_free","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"data_science_exposures.yml","original_file_path":"models/data_science_exposures.yml","name":"propensity_to_purchase_free","type":"ml","owner":{"email":"kdietz@gitlab.com","name":"Kevin Dietz"},"resource_type":"exposure","description":"","maturity":"high","meta":{},"tags":[],"url":"https://gitlab.com/gitlab-data/data-science-projects/propensity-to-purchase/-/blob/main/prod/saas-free/ptp_free_query.sql","depends_on":{"macros":[],"nodes":["model.gitlab_snowflake.customers_db_trial_histories","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.gitlab_dotcom_user_details","model.gitlab_snowflake.gitlab_dotcom_users_xf","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.snowplow_structured_events","model.gitlab_snowflake.snowplow_gitlab_events_experiment_contexts","model.gitlab_snowflake.mart_product_usage_free_user_metrics_monthly","model.gitlab_snowflake.monthly_stage_usage_by_namespace","model.gitlab_snowflake.gitlab_dotcom_usage_data_events","model.gitlab_snowflake.dim_marketing_contact_no_pii","model.gitlab_snowflake.mart_crm_attribution_touchpoint"]},"refs":[["customers_db_trial_histories"],["dim_namespace"],["gitlab_dotcom_user_details"],["gitlab_dotcom_users_xf"],["gitlab_dotcom_memberships"],["gitlab_dotcom_users_source"],["snowplow_structured_events"],["snowplow_gitlab_events_experiment_contexts"],["mart_product_usage_free_user_metrics_monthly"],["monthly_stage_usage_by_namespace"],["gitlab_dotcom_usage_data_events"],["dim_marketing_contact_no_pii"],["mart_crm_attribution_touchpoint"]],"sources":[],"created_at":1689033729.3139508,"label":"propensity_to_purchase_free"},{"fqn":["gitlab_snowflake","namespace_segmentation"],"unique_id":"exposure.gitlab_snowflake.namespace_segmentation","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"data_science_exposures.yml","original_file_path":"models/data_science_exposures.yml","name":"namespace_segmentation","type":"ml","owner":{"email":"kmagda@gitlab.com","name":"Klaudia Magda"},"resource_type":"exposure","description":"","maturity":"high","meta":{},"tags":[],"url":"https://gitlab.com/gitlab-data/data-science-projects/namespace-segmentation/-/blob/main/prod/final_model_training_query.sql","depends_on":{"macros":[],"nodes":["model.gitlab_snowflake.monthly_stage_usage_by_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.mart_product_usage_paid_user_metrics_monthly","model.gitlab_snowflake.mart_product_usage_free_user_metrics_monthly","model.gitlab_snowflake.gitlab_dotcom_namespace_settings","model.gitlab_snowflake.gitlab_dotcom_namespaces_xf","model.gitlab_snowflake.gitlab_dotcom_memberships","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_namespace_lineage_historical_monthly","model.gitlab_snowflake.gitlab_dotcom_usage_data_events"]},"refs":[["monthly_stage_usage_by_namespace"],["dim_namespace"],["mart_product_usage_paid_user_metrics_monthly"],["mart_product_usage_free_user_metrics_monthly"],["gitlab_dotcom_namespace_settings"],["gitlab_dotcom_namespaces_xf"],["gitlab_dotcom_memberships"],["gitlab_dotcom_users_source"],["gitlab_dotcom_namespace_lineage_historical_monthly"],["gitlab_dotcom_usage_data_events"]],"sources":[],"created_at":1689033729.332378,"label":"namespace_segmentation"},{"fqn":["gitlab_snowflake","common_mart","behavior_structured_event"],"unique_id":"exposure.gitlab_snowflake.behavior_structured_event","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart/exposures.yml","original_file_path":"models/common_mart/exposures.yml","name":"behavior_structured_event","type":"analysis","owner":{"email":"slack channel or email","name":"Product Insights"},"resource_type":"exposure","description":"TBA\n","maturity":"high","meta":{},"tags":[],"url":"https://lucid.app/lucidchart/5d5c918d-2e6d-47d6-a2e5-db3c4951c531/edit?invitationId=inv_a4c5f29c-930f-4103-a121-320dd8009b5a&page=-3ovyOx0~RdS#","depends_on":{"macros":[],"nodes":["model.gitlab_snowflake.fct_behavior_structured_event","model.gitlab_snowflake.dim_behavior_event","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_project","model.gitlab_snowflake.dim_behavior_operating_system","model.gitlab_snowflake.dim_date"]},"refs":[["fct_behavior_structured_event"],["dim_behavior_event"],["dim_namespace"],["dim_project"],["dim_behavior_operating_system"],["dim_date"]],"sources":[],"created_at":1689033731.4374905,"label":"behavior_structured_event"}]},"node":{"resource_type":"model","name":"dim_namespace","unique_id":"model.gitlab_snowflake.dim_namespace"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_NAMESPACE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_NAMESPACE_ID":{"type":"NUMBER","index":1,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_namespace_id"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"ultimate_parent_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"ultimate_parent_namespace_id"},"NAMESPACE_IS_ULTIMATE_PARENT":{"type":"BOOLEAN","index":3,"name":"namespace_is_ultimate_parent","comment":null,"description":"Boolean flag which is set to True if the namespace is the ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_ultimate_parent"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":4,"name":"namespace_is_internal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_NAME":{"type":"TEXT","index":5,"name":"namespace_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"NAMESPACE_PATH":{"type":"TEXT","index":6,"name":"namespace_path","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_path"},"OWNER_ID":{"type":"NUMBER","index":7,"name":"owner_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"owner_id"},"NAMESPACE_TYPE":{"type":"TEXT","index":8,"name":"namespace_type","comment":null,"description":"The type of namespace: Group, User, or Project.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"namespace_type"},"HAS_AVATAR":{"type":"BOOLEAN","index":9,"name":"has_avatar","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_avatar"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":10,"name":"CREATED_AT","comment":null,"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":11,"name":"UPDATED_AT","comment":null,"display_name":"updated_at"},"IS_MEMBERSHIP_LOCKED":{"type":"BOOLEAN","index":12,"name":"is_membership_locked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_membership_locked"},"HAS_REQUEST_ACCESS_ENABLED":{"type":"BOOLEAN","index":13,"name":"has_request_access_enabled","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_request_access_enabled"},"HAS_SHARE_WITH_GROUP_LOCKED":{"type":"BOOLEAN","index":14,"name":"has_share_with_group_locked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_share_with_group_locked"},"IS_SETUP_FOR_COMPANY":{"type":"BOOLEAN","index":15,"name":"IS_SETUP_FOR_COMPANY","comment":null,"display_name":"is_setup_for_company"},"VISIBILITY_LEVEL":{"type":"TEXT","index":16,"name":"visibility_level","comment":null,"description":"The visibility setting for the namespace or project: public, private, or internal. More information about namespace and project visibility [here](https://docs.gitlab.com/ee/user/public_access.html)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"visibility_level"},"LDAP_SYNC_STATUS":{"type":"TEXT","index":17,"name":"LDAP_SYNC_STATUS","comment":null,"display_name":"ldap_sync_status"},"LDAP_SYNC_ERROR":{"type":"TEXT","index":18,"name":"ldap_sync_error","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_error"},"LDAP_SYNC_LAST_UPDATE_AT":{"type":"TIMESTAMP_NTZ","index":19,"name":"ldap_sync_last_update_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_update_at"},"LDAP_SYNC_LAST_SUCCESSFUL_UPDATE_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ldap_sync_last_successful_update_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_successful_update_at"},"LDAP_SYNC_LAST_SYNC_AT":{"type":"TIMESTAMP_NTZ","index":21,"name":"ldap_sync_last_sync_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_sync_at"},"LFS_ENABLED":{"type":"BOOLEAN","index":22,"name":"lfs_enabled","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lfs_enabled"},"PARENT_ID":{"type":"NUMBER","index":23,"name":"parent_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":24,"name":"SHARED_RUNNERS_ENABLED","comment":null,"display_name":"shared_runners_enabled"},"SHARED_RUNNERS_MINUTES_LIMIT":{"type":"NUMBER","index":25,"name":"shared_runners_minutes_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"shared_runners_minutes_limit"},"EXTRA_SHARED_RUNNERS_MINUTES_LIMIT":{"type":"NUMBER","index":26,"name":"extra_shared_runners_minutes_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"extra_shared_runners_minutes_limit"},"REPOSITORY_SIZE_LIMIT":{"type":"NUMBER","index":27,"name":"repository_size_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"repository_size_limit"},"DOES_REQUIRE_TWO_FACTOR_AUTHENTICATION":{"type":"BOOLEAN","index":28,"name":"does_require_two_factor_authentication","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"does_require_two_factor_authentication"},"TWO_FACTOR_GRACE_PERIOD":{"type":"NUMBER","index":29,"name":"two_factor_grace_period","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"two_factor_grace_period"},"PROJECT_CREATION_LEVEL":{"type":"NUMBER","index":30,"name":"project_creation_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_creation_level"},"PUSH_RULE_ID":{"type":"NUMBER","index":31,"name":"push_rule_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"push_rule_id"},"CREATOR_ID":{"type":"NUMBER","index":32,"name":"creator_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"creator_id"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":33,"name":"namespace_creator_is_blocked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"GITLAB_PLAN_ID":{"type":"NUMBER","index":34,"name":"gitlab_plan_id","comment":null,"description":"The `plan_id` associated with the namespace's _GitLab_ subscription. This can be inherited from the namespace's ultimate parent. `NULL` if the namespace has been deleted.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_plan_id"},"GITLAB_PLAN_TITLE":{"type":"TEXT","index":35,"name":"gitlab_plan_title","comment":null,"description":"The `plan_title` associated with the namespace's _GitLab_ subscription. This can be inherited from the namespace's ultimate parent. `NULL` if the namespace has been deleted.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_plan_title"},"GITLAB_PLAN_IS_PAID":{"type":"BOOLEAN","index":36,"name":"gitlab_plan_is_paid","comment":null,"description":"Indicates whether or not the namespace is subscribed to a paid plan. This can be inherited from the namespace's ultimate parent. `NULL` if the namespace has been deleted.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_plan_is_paid"},"DIM_PRODUCT_TIER_ID":{"type":"TEXT","index":37,"name":"dim_product_tier_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_tier_id"},"GITLAB_PLAN_SEATS":{"type":"NUMBER","index":38,"name":"gitlab_plan_seats","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_plan_seats"},"GITLAB_PLAN_SEATS_IN_USE":{"type":"NUMBER","index":39,"name":"gitlab_plan_seats_in_use","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_plan_seats_in_use"},"GITLAB_PLAN_MAX_SEATS_USED":{"type":"NUMBER","index":40,"name":"gitlab_plan_max_seats_used","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_plan_max_seats_used"},"NAMESPACE_MEMBER_COUNT":{"type":"NUMBER","index":41,"name":"namespace_member_count","comment":null,"description":"Do not use this count, it is incorrect. Use [gitlab_dotcom_memberships](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.gitlab_dotcom_memberships) for member counts.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_member_count"},"NAMESPACE_PROJECT_COUNT":{"type":"NUMBER","index":42,"name":"NAMESPACE_PROJECT_COUNT","comment":null,"display_name":"namespace_project_count"},"HAS_CODE_SUGGESTIONS_ENABLED":{"type":"BOOLEAN","index":43,"name":"has_code_suggestions_enabled","comment":null,"description":"Boolean flag set to True if the namespace has code suggestions enabled. This appears as `code_suggestions` in the gitlab.com db `namespace_settings` table.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_code_suggestions_enabled"},"IS_CURRENTLY_VALID":{"type":"BOOLEAN","index":44,"name":"is_currently_valid","comment":null,"description":"Flags whether the namespace is currently valid. `FALSE` if the namespace has been deleted.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_currently_valid"},"CREATED_BY":{"type":"TEXT","index":45,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":46,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":47,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":48,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":49,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":50,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"namespace_created_at":{"name":"namespace_created_at","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_created_at"},"namespace_updated_at":{"name":"namespace_updated_at","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_updated_at"},"dap_sync_status":{"name":"dap_sync_status","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dap_sync_status"},"current_project_count":{"name":"current_project_count","description":"The number of projects that are presently associated with the namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_project_count"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:40UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2699501568,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_namespace","raw_sql":"$56","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.filter_out_blocked_users","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.gitlab_dotcom_namespaces_source","model.gitlab_snowflake.gitlab_dotcom_namespaces_source","model.gitlab_snowflake.prep_namespace_hist","model.gitlab_snowflake.prep_namespace_hist","model.gitlab_snowflake.gitlab_dotcom_namespace_settings_source","model.gitlab_snowflake.gitlab_dotcom_namespace_settings_source","model.gitlab_snowflake.gitlab_dotcom_namespace_lineage_historical_daily","model.gitlab_snowflake.gitlab_dotcom_namespace_lineage_historical_daily","model.gitlab_snowflake.map_namespace_internal","model.gitlab_snowflake.map_namespace_internal","model.gitlab_snowflake.gitlab_dotcom_plans_source","model.gitlab_snowflake.gitlab_dotcom_plans_source","model.gitlab_snowflake.prep_product_tier","model.gitlab_snowflake.prep_product_tier","model.gitlab_snowflake.gitlab_dotcom_members_source","model.gitlab_snowflake.gitlab_dotcom_members_source","model.gitlab_snowflake.gitlab_dotcom_projects_source","model.gitlab_snowflake.gitlab_dotcom_projects_source","model.gitlab_snowflake.gitlab_dotcom_audit_events_source","model.gitlab_snowflake.gitlab_dotcom_audit_events_source","model.gitlab_snowflake.prep_audit_event_details_clean","model.gitlab_snowflake.prep_audit_event_details_clean","model.gitlab_snowflake.prep_user","model.gitlab_snowflake.prep_user","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_users_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_namespace"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_namespace.sql","original_file_path":"models/common_prep/prep_namespace.sql","name":"prep_namespace","alias":"prep_namespace","checksum":{"name":"sha256","checksum":"41dc2b8ac8a4f3a99595d23a39b60f3ed05ba69d14805879b5fdd176d1f7736e"},"tags":["product"],"refs":[["gitlab_dotcom_namespaces_source"],["gitlab_dotcom_namespaces_source"],["prep_namespace_hist"],["prep_namespace_hist"],["gitlab_dotcom_namespace_settings_source"],["gitlab_dotcom_namespace_settings_source"],["gitlab_dotcom_namespace_lineage_historical_daily"],["gitlab_dotcom_namespace_lineage_historical_daily"],["map_namespace_internal"],["map_namespace_internal"],["gitlab_dotcom_plans_source"],["gitlab_dotcom_plans_source"],["prep_product_tier"],["prep_product_tier"],["gitlab_dotcom_members_source"],["gitlab_dotcom_members_source"],["gitlab_dotcom_projects_source"],["gitlab_dotcom_projects_source"],["gitlab_dotcom_audit_events_source"],["gitlab_dotcom_audit_events_source"],["prep_audit_event_details_clean"],["prep_audit_event_details_clean"],["prep_user"],["prep_user"],["gitlab_dotcom_users_source"],["gitlab_dotcom_users_source"]],"sources":[],"metrics":[],"description":"Includes all columns from the namespaces base model. The plan columns in this table (gitlab_plan_id, gitlab_plan_title, gitlab_plan_is_paid) reference the plan that is inheritted from the namespace's ultimate parent.\n\nThis table add a count of members and projects currently associated with the namespace.\nBoolean columns: gitlab_plan_is_paid, namespace_is_internal, namespace_is_ultimate_parent\n\nA NULL namespace type defaults to \"Individual\".\nThis table joins to common product tier dimension via dim_product_tier_id to get the current product tier.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_namespace.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product"]},"created_at":1689033756.4780283,"compiled_sql":"$57","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_namespace","label":"prep_namespace"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.dbt_audit","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/dbt_audit.sql","original_file_path":"macros/utils/dbt_audit.sql","name":"dbt_audit","macro_sql":"$58","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt.run_query"]},"description":"Used to append audit columns to a model.\n\nThis model assumes that the final statement in your model is a `SELECT *` from a CTE. The final SQL will still be a `SELECT *` just with 6 additional columns added to it. Further SQL DML can be added after the macro call, such as ORDER BY and GROUP BY.\n\nThere are two internally calculated date values based on when the table is created and, for an incremental model, when data was inserted.\n\n```sql\nWITH my_cte AS (...)\n\n{{ dbt_audit(\n    cte_ref=\"my_cte\", \n    created_by=\"@gitlab_user1\", \n    updated_by=\"@gitlab_user2\", \n    created_date=\"2019-02-12\", \n    updated_date=\"2020-08-20\"\n) }}\n\nORDER BY updated_at\n```","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"cte_ref","type":"string","description":"The CTE immediately preceding the macro call"},{"name":"created_by","type":"string","description":"The GitLab handle of the original model creator"},{"name":"updated_by","type":"string","description":"The GitLab handle of the model editor"},{"name":"created_date","type":"date","description":"Manually input ISO date of when model was original created"},{"name":"updated_date","type":"date","description":"Manually input ISO date of when model was updated"}],"created_at":1689033766.0350642},{"unique_id":"macro.gitlab_snowflake.simple_cte","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/simple_cte.sql","original_file_path":"macros/utils/simple_cte.sql","name":"simple_cte","macro_sql":"{% macro simple_cte(tuple_list) %}\n\nWITH{% for cte_ref in tuple_list %} {{cte_ref[0]}} AS (\n\n    SELECT * \n    FROM {{ ref(cte_ref[1]) }}\n\n)\n    {%- if not loop.last -%}\n    ,\n    {%- endif -%}\n    \n    {%- endfor -%}\n\n{%- endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":[]},"description":"$59","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"tuple_list","type":"list","description":"List of tuples with the alias as the first item and the dbt table reference as the second item."}],"created_at":1689033766.0494742}]},"node":{"resource_type":"model","name":"dim_namespace","unique_id":"model.gitlab_snowflake.dim_namespace"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L5a",null,{"versions":{"Source":"$5b","Compiled":"$5c"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
