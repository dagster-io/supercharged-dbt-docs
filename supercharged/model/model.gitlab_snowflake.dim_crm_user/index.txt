1:HL["/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/67011378c759fca7.css",{"as":"style"}]
0:["UXH5preSpvs-I3nPBe5RL",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.dim_crm_user","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.dim_crm_user\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/67011378c759fca7.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","185:static/chunks/app/layout-37793ad3571953e0.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-7bf5c4b4325e2618.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-14adc0d2c014a317.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-7bf5c4b4325e2618.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-14adc0d2c014a317.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_20951f","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.dim_crm_user","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.dim_crm_user\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.dim_crm_user","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","185:static/chunks/app/layout-37793ad3571953e0.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"ColumnDetails","async":false}
11:I{"id":9941,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"ReferenceListClient","async":false}
2a:I{"id":4431,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:T570,-- depends_on: "PROD".common_prep.prep_crm_user


WITH final AS (

    SELECT 
      "DIM_CRM_USER_ID",
  "EMPLOYEE_NUMBER",
  "USER_NAME",
  "TITLE",
  "DEPARTMENT",
  "TEAM",
  "MANAGER_ID",
  "MANAGER_NAME",
  "USER_EMAIL",
  "IS_ACTIVE",
  "START_DATE",
  "RAMPING_QUOTA",
  "USER_TIMEZONE",
  "USER_ROLE_ID",
  "USER_ROLE_NAME",
  "DIM_CRM_USER_SALES_SEGMENT_ID",
  "CRM_USER_SALES_SEGMENT",
  "CRM_USER_SALES_SEGMENT_GROUPED",
  "DIM_CRM_USER_GEO_ID",
  "CRM_USER_GEO",
  "DIM_CRM_USER_REGION_ID",
  "CRM_USER_REGION",
  "DIM_CRM_USER_AREA_ID",
  "CRM_USER_AREA",
  "DIM_CRM_USER_BUSINESS_UNIT_ID",
  "CRM_USER_BUSINESS_UNIT",
  "DIM_CRM_USER_ROLE_TYPE_ID",
  "CRM_USER_ROLE_TYPE",
  "IS_HYBRID_USER",
  "DIM_CRM_USER_HIERARCHY_SK",
  "CRM_USER_SALES_SEGMENT_GEO_REGION_AREA",
  "CRM_USER_SALES_SEGMENT_REGION_GROUPED",
  "SDR_SALES_SEGMENT",
  "SDR_REGION",
  "CREATED_DATE",
  "CRM_USER_SUB_BUSINESS_UNIT",
  "CRM_USER_DIVISION",
  "ASM"
    FROM "PROD".common_prep.prep_crm_user

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2020-11-20'::DATE        AS model_created_date,
      '2023-05-04'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final12:T39f2,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{{ simple_cte([
    ('dim_amendment','dim_amendment'),
    ('dim_billing_account','dim_billing_account'),
    ('dim_charge','dim_charge'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_product_detail','dim_product_detail'),
    ('dim_subscription','dim_subscription'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_order', 'dim_order'),
    ('dim_order_action', 'dim_order_action'),
    ('fct_charge','fct_charge'),
    ('prep_billing_account_user', 'prep_billing_account_user')
]) }}

, mart_charge AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.invoice_owner_account,
      dim_subscription.creator_account,
      dim_subscription.was_purchased_through_reseller,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,
      dim_billing_account.auto_pay                                                    AS auto_pay,
      dim_billing_account.default_payment_method_type                                 AS default_payment_method_type,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      -- order info
      fct_charge.dim_order_id                                                         AS dim_order_id,
      CASE
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_name = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_type = 'Composite')
            THEN 'Auto-Renewal'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (prep_billing_account_user.user_name = 'svc_ZuoraSFDC_integration@gitlab.com'
          OR dim_subscription.subscription_sales_type = 'Sales-Assisted')
            THEN 'Sales-Assisted'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description NOT IN 
            ('AutoRenew by CustomersDot', 'Automated seat reconciliation')
            OR dim_order.order_description IS NULL)
          AND prep_billing_account_user.user_name IN (
            'svc_zuora_fulfillment_int@gitlab.com',
            'ruben_APIproduction@gitlab.com')
            THEN 'Customer Portal'
        ELSE NULL
      END                                                                             AS subscription_renewal_type,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.product_ranking                                              AS product_ranking,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,
      dim_product_detail.is_licensed_user                                             AS is_licensed_user,
      dim_product_detail.is_arpu                                                      AS is_arpu,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings

    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    LEFT JOIN dim_order
      ON fct_charge.dim_order_id = dim_order.dim_order_id
    LEFT JOIN dim_order_action
      ON fct_charge.dim_order_id = dim_order_action.dim_order_id
      AND dim_order_action.order_action_type IN ('RenewSubscription', 'CancelSubscription')
    LEFT JOIN prep_billing_account_user
      ON fct_charge.subscription_created_by_user_id = prep_billing_account_user.zuora_user_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'
    ORDER BY dim_crm_account.dim_parent_crm_account_id, dim_crm_account.dim_crm_account_id, fct_charge.subscription_name,
      fct_charge.subscription_version, fct_charge.rate_plan_charge_number, fct_charge.rate_plan_charge_version,
      fct_charge.rate_plan_charge_segment

)

{{ dbt_audit(
    cte_ref="mart_charge",
    created_by="@iweeks",
    updated_by="@chrissharp",
    created_date="2021-06-07",
    updated_date="2023-06-13"
) }}13:T3c5c,



WITH dim_amendment AS (

    SELECT * 
    FROM "PROD".common.dim_amendment

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_charge

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_order AS (

    SELECT * 
    FROM "PROD".common.dim_order

), dim_order_action AS (

    SELECT * 
    FROM "PROD".common.dim_order_action

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

), prep_billing_account_user AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_prep.prep_billing_account_user

)

, mart_charge AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.invoice_owner_account,
      dim_subscription.creator_account,
      dim_subscription.was_purchased_through_reseller,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,
      dim_billing_account.auto_pay                                                    AS auto_pay,
      dim_billing_account.default_payment_method_type                                 AS default_payment_method_type,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      -- order info
      fct_charge.dim_order_id                                                         AS dim_order_id,
      CASE
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_name = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_type = 'Composite')
            THEN 'Auto-Renewal'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (prep_billing_account_user.user_name = 'svc_ZuoraSFDC_integration@gitlab.com'
          OR dim_subscription.subscription_sales_type = 'Sales-Assisted')
            THEN 'Sales-Assisted'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description NOT IN 
            ('AutoRenew by CustomersDot', 'Automated seat reconciliation')
            OR dim_order.order_description IS NULL)
          AND prep_billing_account_user.user_name IN (
            'svc_zuora_fulfillment_int@gitlab.com',
            'ruben_APIproduction@gitlab.com')
            THEN 'Customer Portal'
        ELSE NULL
      END                                                                             AS subscription_renewal_type,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.product_ranking                                              AS product_ranking,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,
      dim_product_detail.is_licensed_user                                             AS is_licensed_user,
      dim_product_detail.is_arpu                                                      AS is_arpu,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings

    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    LEFT JOIN dim_order
      ON fct_charge.dim_order_id = dim_order.dim_order_id
    LEFT JOIN dim_order_action
      ON fct_charge.dim_order_id = dim_order_action.dim_order_id
      AND dim_order_action.order_action_type IN ('RenewSubscription', 'CancelSubscription')
    LEFT JOIN prep_billing_account_user
      ON fct_charge.subscription_created_by_user_id = prep_billing_account_user.zuora_user_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'
    ORDER BY dim_crm_account.dim_parent_crm_account_id, dim_crm_account.dim_crm_account_id, fct_charge.subscription_name,
      fct_charge.subscription_version, fct_charge.rate_plan_charge_number, fct_charge.rate_plan_charge_version,
      fct_charge.rate_plan_charge_segment

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-06-07'::DATE        AS model_created_date,
      '2023-06-13'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM mart_charge14:Td73,{{ simple_cte([
    ('bamboohr_job_info_current_division_base','bamboohr_job_info_current_division_base'),
    ('sheetload_mapping_sdr_sfdc_bamboohr','sheetload_mapping_sdr_sfdc_bamboohr'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_date','dim_date')
    
]) }}

, sdr_prep AS (

    SELECT
      employee_id,
      job_role,
      MIN(effective_date) AS start_date,
      MAX(IFNULL(effective_end_date, '2030-12-12')) AS emp_end_date,
      MAX(termination_date) AS termination_date
    FROM bamboohr_job_info_current_division_base
    WHERE LOWER(job_title) LIKE '%sales development representative%' OR LOWER(job_title) LIKE '%sales development team lead%' OR LOWER(job_title) LIKE '%business development representative%' OR LOWER(job_title) LIKE '%sales development rep%' OR LOWER(job_title) LIKE '%business development team lead%'
    GROUP BY 1, 2

), sdr AS (
  
    SELECT
      sdr_prep.*,
      COALESCE(termination_date, emp_end_date) AS company_or_role_end_date
    FROM sdr_prep

), sdr_ramp AS (
  
    SELECT
      sdr.*,
      sheetload_mapping_sdr_sfdc_bamboohr.first_name,
      sheetload_mapping_sdr_sfdc_bamboohr.last_name,
      sheetload_mapping_sdr_sfdc_bamboohr.active,
      sheetload_mapping_sdr_sfdc_bamboohr.user_id AS dim_crm_user_id,
      sheetload_mapping_sdr_sfdc_bamboohr.sdr_segment,
      sheetload_mapping_sdr_sfdc_bamboohr.sdr_region,
      IFF(sheetload_mapping_sdr_sfdc_bamboohr.sdr_region IN ('East', 'West'), 'AMER',
          sheetload_mapping_sdr_sfdc_bamboohr.sdr_region) AS sdr_region_grouped,
      IFNULL(sheetload_mapping_sdr_sfdc_bamboohr.sdr_order_type, 'Other') AS sdr_order_type,
      CASE
        WHEN DAY(sdr.start_date) < 14 THEN d_1.last_day_of_month
        WHEN DAY(sdr.start_date) >= 14 THEN d_2.last_day_of_month
        ELSE NULL
      END AS sdr_ramp_end_date
    FROM sdr
    INNER JOIN sheetload_mapping_sdr_sfdc_bamboohr
      ON sdr.employee_id = sheetload_mapping_sdr_sfdc_bamboohr.eeid
    LEFT JOIN dim_crm_user
      ON dim_crm_user.dim_crm_user_id = sheetload_mapping_sdr_sfdc_bamboohr.user_id
    LEFT JOIN dim_date AS d_1
      ON DATEADD('month', 1, sdr.start_date) = d_1.date_actual
    LEFT JOIN dim_date AS d_2
      ON DATEADD('month', 2, sdr.start_date) = d_2.date_actual

), dim_date_final AS (
  
    SELECT *
    FROM dim_date
    WHERE first_day_of_month > '2020-11-01'
      AND first_day_of_month <= CURRENT_DATE
  
), final AS (
  
    SELECT
      dim_date_final.date_actual,
      dim_date_final.first_day_of_month,
      dim_date_final.last_day_of_month,
      dim_date_final.first_day_of_week,
      dim_date_final.last_day_of_week,
      dim_date_final.fiscal_quarter_name_fy,
      dim_date_final.last_day_of_fiscal_quarter,
      CASE
        WHEN dim_date_final.date_actual >= start_date
          AND dim_date_final.date_actual <= sdr_ramp_end_date
          THEN 'Ramping'
        WHEN dim_date_final.date_actual >= start_date
          AND dim_date_final.date_actual > sdr_ramp_end_date
          AND dim_date_final.date_actual <= emp_end_date 
          THEN 'Active'
        ELSE NULL
       END AS sdr_type,
      sdr_ramp.*
    FROM sdr_ramp
    INNER JOIN dim_date_final
      ON dim_date_final.date_actual BETWEEN sdr_ramp.start_date AND sdr_ramp.company_or_role_end_date
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@rkohnke",
    updated_by="@rkohnke",
    created_date="2022-01-20",
    updated_date="2022-01-25",
  ) }}15:Tedd,

WITH bamboohr_job_info_current_division_base AS (

    SELECT * 
    FROM "PROD".legacy.bamboohr_job_info_current_division_base

), sheetload_mapping_sdr_sfdc_bamboohr AS (

    SELECT * 
    FROM "PROD".legacy.sheetload_mapping_sdr_sfdc_bamboohr

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

)

, sdr_prep AS (

    SELECT
      employee_id,
      job_role,
      MIN(effective_date) AS start_date,
      MAX(IFNULL(effective_end_date, '2030-12-12')) AS emp_end_date,
      MAX(termination_date) AS termination_date
    FROM bamboohr_job_info_current_division_base
    WHERE LOWER(job_title) LIKE '%sales development representative%' OR LOWER(job_title) LIKE '%sales development team lead%' OR LOWER(job_title) LIKE '%business development representative%' OR LOWER(job_title) LIKE '%sales development rep%' OR LOWER(job_title) LIKE '%business development team lead%'
    GROUP BY 1, 2

), sdr AS (
  
    SELECT
      sdr_prep.*,
      COALESCE(termination_date, emp_end_date) AS company_or_role_end_date
    FROM sdr_prep

), sdr_ramp AS (
  
    SELECT
      sdr.*,
      sheetload_mapping_sdr_sfdc_bamboohr.first_name,
      sheetload_mapping_sdr_sfdc_bamboohr.last_name,
      sheetload_mapping_sdr_sfdc_bamboohr.active,
      sheetload_mapping_sdr_sfdc_bamboohr.user_id AS dim_crm_user_id,
      sheetload_mapping_sdr_sfdc_bamboohr.sdr_segment,
      sheetload_mapping_sdr_sfdc_bamboohr.sdr_region,
      IFF(sheetload_mapping_sdr_sfdc_bamboohr.sdr_region IN ('East', 'West'), 'AMER',
          sheetload_mapping_sdr_sfdc_bamboohr.sdr_region) AS sdr_region_grouped,
      IFNULL(sheetload_mapping_sdr_sfdc_bamboohr.sdr_order_type, 'Other') AS sdr_order_type,
      CASE
        WHEN DAY(sdr.start_date) < 14 THEN d_1.last_day_of_month
        WHEN DAY(sdr.start_date) >= 14 THEN d_2.last_day_of_month
        ELSE NULL
      END AS sdr_ramp_end_date
    FROM sdr
    INNER JOIN sheetload_mapping_sdr_sfdc_bamboohr
      ON sdr.employee_id = sheetload_mapping_sdr_sfdc_bamboohr.eeid
    LEFT JOIN dim_crm_user
      ON dim_crm_user.dim_crm_user_id = sheetload_mapping_sdr_sfdc_bamboohr.user_id
    LEFT JOIN dim_date AS d_1
      ON DATEADD('month', 1, sdr.start_date) = d_1.date_actual
    LEFT JOIN dim_date AS d_2
      ON DATEADD('month', 2, sdr.start_date) = d_2.date_actual

), dim_date_final AS (
  
    SELECT *
    FROM dim_date
    WHERE first_day_of_month > '2020-11-01'
      AND first_day_of_month <= CURRENT_DATE
  
), final AS (
  
    SELECT
      dim_date_final.date_actual,
      dim_date_final.first_day_of_month,
      dim_date_final.last_day_of_month,
      dim_date_final.first_day_of_week,
      dim_date_final.last_day_of_week,
      dim_date_final.fiscal_quarter_name_fy,
      dim_date_final.last_day_of_fiscal_quarter,
      CASE
        WHEN dim_date_final.date_actual >= start_date
          AND dim_date_final.date_actual <= sdr_ramp_end_date
          THEN 'Ramping'
        WHEN dim_date_final.date_actual >= start_date
          AND dim_date_final.date_actual > sdr_ramp_end_date
          AND dim_date_final.date_actual <= emp_end_date 
          THEN 'Active'
        ELSE NULL
       END AS sdr_type,
      sdr_ramp.*
    FROM sdr_ramp
    INNER JOIN dim_date_final
      ON dim_date_final.date_actual BETWEEN sdr_ramp.start_date AND sdr_ramp.company_or_role_end_date
  
)

SELECT
      *,
      '@rkohnke'::VARCHAR       AS created_by,
      '@rkohnke'::VARCHAR       AS updated_by,
      '2022-01-20'::DATE        AS model_created_date,
      '2022-01-25'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final16:T98ef,{{ simple_cte([
    ('prep_label_links', 'prep_label_links'),
    ('prep_labels', 'prep_labels'),
    ('bdg_epic_user_request', 'bdg_epic_user_request'),
    ('bdg_issue_user_request', 'bdg_issue_user_request'),
    ('dim_epic', 'dim_epic'),
    ('dim_issue', 'dim_issue'),
    ('fct_mrr', 'fct_mrr'),
    ('dim_date', 'dim_date'),
    ('dim_product_detail', 'dim_product_detail'),
    ('dim_crm_account', 'dim_crm_account'),
    ('dim_subscription', 'dim_subscription'),
    ('fct_crm_opportunity', 'fct_crm_opportunity'),
    ('dim_crm_user', 'dim_crm_user'),
    ('fct_quote_item', 'fct_quote_item'),
    ('dim_quote', 'dim_quote'),
    ('dim_crm_opportunity', 'dim_crm_opportunity'),
    ('dim_order_type', 'dim_order_type'),
    ('dim_crm_user', 'dim_crm_user')
])}}

, opportunity_seats AS (

    SELECT
      dim_crm_opportunity.dim_crm_opportunity_id,
      dim_crm_opportunity.dim_crm_account_id,
      dim_crm_opportunity.stage_name,
      fct_crm_opportunity.is_closed,
      dim_crm_opportunity.order_type,
      SUM(fct_quote_item.quantity)              AS quantity
    FROM fct_quote_item
    INNER JOIN dim_crm_opportunity
      ON dim_crm_opportunity.dim_crm_opportunity_id = fct_quote_item.dim_crm_opportunity_id
    INNER JOIN fct_crm_opportunity
      ON fct_crm_opportunity.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    INNER JOIN dim_quote
      ON dim_quote.dim_quote_id = fct_quote_item.dim_quote_id
    INNER JOIN dim_product_detail
      ON dim_product_detail.dim_product_detail_id = fct_quote_item.dim_product_detail_id
    WHERE dim_quote.is_primary_quote = TRUE
      AND dim_product_detail.product_tier_name IN ('Plus', 'GitHost', 'Standard', 'Self-Managed - Starter', 'Self-Managed - Premium',
        'SaaS - Premium', 'SaaS - Bronze', 'Basic', 'Self-Managed - Ultimate', 'SaaS - Ultimate', 'Dedicated - Ultimate')
      AND fct_crm_opportunity.close_date >= '2019-02-01'
    {{ dbt_utils.group_by(5) }}

), account_open_fo_opp_seats AS (

    SELECT
      dim_crm_account_id,
      SUM(quantity) AS seats
    FROM opportunity_seats
    WHERE order_type = '1. New - First Order'
      AND is_closed = FALSE
    GROUP BY 1

), opportunity_net_arr AS (

    SELECT
      fct_crm_opportunity.dim_crm_opportunity_id,
      fct_crm_opportunity.dim_crm_account_id,
      dim_crm_opportunity.stage_name,
      fct_crm_opportunity.is_closed,
      dim_order_type.order_type_name,
      fct_crm_opportunity.net_arr,
      fct_crm_opportunity.arr_basis
    FROM fct_crm_opportunity
    INNER JOIN dim_order_type
      ON dim_order_type.dim_order_type_id = fct_crm_opportunity.dim_order_type_id
    INNER JOIN dim_crm_opportunity
      ON dim_crm_opportunity.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id
    WHERE fct_crm_opportunity.close_date >= '2019-02-01' -- Net ARR is only good after 2019-02-01

), account_lost_opp_arr AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE order_type_name IN ('1. New - First Order')
      AND stage_name IN ('8-Closed Lost')
    GROUP BY 1
  
), account_lost_customer_arr AS (

    SELECT
      dim_crm_account_id,
      SUM(arr_basis)  AS arr_basis
    FROM opportunity_net_arr
    WHERE order_type_name IN ('6. Churn - Final')
      AND stage_name IN ('8-Closed Lost')
    GROUP BY 1

), account_open_opp_net_arr AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE is_closed = FALSE
    GROUP BY 1 

), account_open_opp_net_arr_fo AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE is_closed = FALSE
      AND order_type_name IN ('1. New - First Order')
    GROUP BY 1 

), account_open_opp_net_arr_growth AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE is_closed = FALSE
      AND order_type_name IN ('2. New - Connected', '3. Growth')
    GROUP BY 1 

), account_next_renewal_month AS (

    SELECT
      fct_mrr.dim_crm_account_id,
      MIN(subscription_end_month) AS next_renewal_month
    FROM fct_mrr
    INNER JOIN dim_date
      ON dim_date.date_id = fct_mrr.dim_date_id
    LEFT JOIN dim_subscription
      ON dim_subscription.dim_subscription_id = fct_mrr.dim_subscription_id
    WHERE dim_subscription.subscription_end_month >= DATE_TRUNC('month',CURRENT_DATE)
      AND fct_mrr.subscription_status IN ('Active', 'Cancelled')
    GROUP BY 1

), arr_metrics_current_month AS (

    SELECT
      fct_mrr.dim_crm_account_id,
      SUM(fct_mrr.mrr)                                                               AS mrr,
      SUM(fct_mrr.arr)                                                               AS arr,
      SUM(fct_mrr.quantity)                                                          AS quantity
    FROM fct_mrr
    INNER JOIN dim_date
      ON dim_date.date_id = fct_mrr.dim_date_id
    INNER JOIN dim_product_detail
      ON dim_product_detail.dim_product_detail_id = fct_mrr.dim_product_detail_id
    WHERE subscription_status IN ('Active', 'Cancelled')
      AND dim_date.date_actual = DATE_TRUNC('month', CURRENT_DATE)
      AND dim_product_detail.product_tier_name IN ('Plus', 'GitHost', 'Standard', 'Self-Managed - Starter', 'Self-Managed - Premium',
        'SaaS - Premium', 'SaaS - Bronze', 'Basic', 'Self-Managed - Ultimate', 'SaaS - Ultimate', 'Dedicated - Ultimate')
    GROUP BY 1

), epic_weight AS (

    SELECT
      dim_epic_id,
      SUM(weight)                                                             AS epic_weight,
      SUM(IFF(state_name = 'closed', weight, 0)) / NULLIFZERO(epic_weight)    AS epic_completeness,
      SUM(IFF(state_name = 'closed', 1, 0)) / COUNT(*)                        AS epic_completeness_alternative,
      COALESCE(epic_completeness, epic_completeness_alternative)              AS epic_status
    FROM dim_issue
    GROUP BY 1
    
), label_links_joined AS (

    SELECT
      prep_label_links.*,
      prep_labels.label_title
    FROM prep_label_links
    LEFT JOIN prep_labels
      ON prep_label_links.dim_label_id = prep_labels.dim_label_id

), issue_labels AS (

    SELECT 
      label_links_joined.dim_issue_id,
      IFF(LOWER(label_links_joined.label_title) LIKE 'group::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)    AS group_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'devops::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)   AS devops_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'section::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)  AS section_label,
      COALESCE(group_label, devops_label, section_label)                                                                       AS product_group_extended,

      IFF(LOWER(label_links_joined.label_title) LIKE 'category:%', SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)   AS category_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'type::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)     AS type_label,

      IFF(LOWER(label_links_joined.label_title) LIKE 'theme:%'
        AND NOT CONTAINS(label_links_joined.label_title, '::'), -- This second condition makes sure we are not matching the scoped label theme::*, only the non scoped theme:*
          SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)                                                             AS theme_label,
      CASE
        WHEN group_label IS NOT NULL THEN 3
        WHEN devops_label IS NOT NULL THEN 2
        WHEN section_label IS NOT NULL THEN 1
        ELSE 0
      END product_group_level
    FROM label_links_joined

), epic_labels AS (

    SELECT 
      label_links_joined.dim_epic_id,
      IFF(LOWER(label_links_joined.label_title) LIKE 'group::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)    AS group_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'devops::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)   AS devops_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'section::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)  AS section_label,
      COALESCE(group_label, devops_label, section_label)                                                                       AS product_group_extended,

      IFF(LOWER(label_links_joined.label_title) LIKE 'category:%', SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)   AS category_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'type::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)     AS type_label,

      IFF(LOWER(label_links_joined.label_title) LIKE 'theme:%'
        AND NOT CONTAINS(label_links_joined.label_title, '::'), -- This second condition makes sure we are not matching the scoped label theme::*, only the non scoped theme:*
          SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)                                                             AS theme_label,

      CASE
        WHEN group_label IS NOT NULL THEN 3
        WHEN devops_label IS NOT NULL THEN 2
        WHEN section_label IS NOT NULL THEN 1
        ELSE 0
      END product_group_level
    FROM label_links_joined

), issue_theme_labels AS (

    SELECT
      dim_issue_id,
      ARRAY_AGG(theme_label) WITHIN GROUP (ORDER BY theme_label) AS theme_labels
    FROM issue_labels
    GROUP BY 1

), epic_theme_labels AS (

    SELECT
      dim_epic_id,
      ARRAY_AGG(theme_label) WITHIN GROUP (ORDER BY theme_label) AS theme_labels
    FROM epic_labels
    GROUP BY 1

), issue_group_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the group::* label

    SELECT
      dim_issue_id,
      group_label
    FROM issue_labels
    WHERE group_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY group_label) = 1

), issue_group_extended_label AS (

    SELECT
      dim_issue_id,
      product_group_extended
    FROM issue_labels
    WHERE product_group_extended IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY product_group_level DESC) = 1

), issue_category_dedup AS ( -- Since category: is not an scoped label, need to make sure I only pull one of them
  
    SELECT
      dim_issue_id,
      category_label
    FROM issue_labels
    WHERE category_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY category_label DESC) = 1
  
), issue_type_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the type::* label

    SELECT
      dim_issue_id,
      type_label
    FROM issue_labels
    WHERE type_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY type_label) = 1

), issue_devops_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the devops::* label

    SELECT
      dim_issue_id,
      devops_label
    FROM issue_labels
    WHERE devops_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY devops_label) = 1

), issue_status AS ( -- Some issues for some reason had two valid workflow labels, this dedup them

    SELECT
      label_links_joined.dim_issue_id,
      IFF(LOWER(label_links_joined.label_title) LIKE 'workflow::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)   AS workflow_label
    FROM label_links_joined
    WHERE workflow_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY workflow_label DESC) = 1 

), epic_group_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the group::* label

    SELECT
      dim_epic_id,
      group_label
    FROM epic_labels
    WHERE group_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY group_label) = 1

), epic_group_extended_label AS (

    SELECT
      dim_epic_id,
      product_group_extended
    FROM epic_labels
    WHERE product_group_extended IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY product_group_level DESC) = 1

), epic_category_dedup AS ( -- Since category: is not an scoped label, need to make sure I only pull one of them
  
    SELECT
      dim_epic_id,
      category_label
    FROM epic_labels
    WHERE category_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY category_label DESC) = 1
  
), epic_type_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the type::* label

    SELECT
      dim_epic_id,
      type_label
    FROM epic_labels
    WHERE type_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY type_label) = 1

), epic_devops_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the devops::* label

    SELECT
      dim_epic_id,
      devops_label
    FROM epic_labels
    WHERE devops_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY devops_label) = 1

), epic_last_milestone AS ( -- Get issue milestone with the latest due dates for epics
    
    SELECT
      dim_epic_id,
      milestone_title,
      milestone_due_date
    FROM dim_issue
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY milestone_due_date DESC NULLS LAST) = 1

), user_request AS (

    SELECT
      bdg_issue_user_request.dim_issue_id                                         AS dim_issue_id,
      IFNULL(dim_issue.dim_epic_id, -1)                                           AS dim_epic_id,
      'Issue'                                                                     AS user_request_in,

      bdg_issue_user_request.link_type                                            AS link_type,
      bdg_issue_user_request.dim_crm_opportunity_id                               AS dim_crm_opportunity_id,
      bdg_issue_user_request.dim_crm_account_id                                   AS dim_crm_account_id,
      bdg_issue_user_request.dim_ticket_id                                        AS dim_ticket_id,
      bdg_issue_user_request.request_priority                                     AS request_priority,
      bdg_issue_user_request.is_request_priority_empty                            AS is_request_priority_empty,
      bdg_issue_user_request.is_user_request_only_in_collaboration_project        AS is_user_request_only_in_collaboration_project,
      bdg_issue_user_request.link_last_updated_at                                 AS link_last_updated_at,
      bdg_issue_user_request.link_last_updated_at::DATE                           AS link_last_updated_date,
      DATE_TRUNC('month', bdg_issue_user_request.link_last_updated_at::DATE)      AS link_last_updated_month,

      IFF(link_type = 'Opportunity', 'https://gitlab.my.salesforce.com/' || bdg_issue_user_request.dim_crm_opportunity_id, 'No Link')
                                                                                  AS crm_opportunity_link,
      'https://gitlab.my.salesforce.com/' || bdg_issue_user_request.dim_crm_account_id
                                                                                  AS crm_account_link,
      IFF(link_type = 'Zendesk Ticket', 'https://gitlab.zendesk.com/agent/tickets/' || bdg_issue_user_request.dim_ticket_id, 'No Link')
                                                                                  AS ticket_link,

      -- Epic / Issue attributes
      dim_issue.issue_title                                                       AS issue_epic_title,
      dim_issue.issue_url                                                         AS issue_epic_url,
      dim_issue.created_at                                                        AS issue_epic_created_at,
      dim_issue.created_at::DATE                                                  AS issue_epic_created_date,
      DATE_TRUNC('month', dim_issue.created_at::DATE)                             AS issue_epic_created_month,
      dim_issue.state_name                                                        AS issue_epic_state_name,
      dim_issue.issue_closed_at                                                   AS issue_epic_closed_at,
      dim_issue.issue_closed_at::DATE                                             AS issue_epic_closed_date,
      DATE_TRUNC('month', dim_issue.issue_closed_at::DATE)                        AS issue_epic_closed_month,
      dim_issue.milestone_title                                                   AS milestone_title,
      dim_issue.milestone_due_date                                                AS milestone_due_date,
      dim_issue.labels                                                            AS issue_epic_labels,
      CASE
        WHEN ARRAY_CONTAINS('deliverable'::VARIANT, dim_issue.labels) THEN 'Yes'
        WHEN ARRAY_CONTAINS('stretch'::VARIANT, dim_issue.labels) THEN 'Stretch'
        ELSE 'No'
      END                                                                         AS deliverable,
      IFNULL(issue_group_extended_label.product_group_extended, 'Unknown')        AS product_group_extended,
      group_label.group_label                                                     AS product_group,
      category_label.category_label                                               AS product_category,
      devops_label.devops_label                                                   AS product_stage,
      CASE type_label.type_label
        WHEN 'bug' THEN 'bug fix'
        WHEN 'feature' THEN 'feature request'
      END                                                                         AS issue_epic_type,
      IFNULL(issue_status.workflow_label, 'Not Started')                          AS issue_status,
      issue_theme_labels.theme_labels                                             AS theme_labels,
      -1                                                                          AS epic_status,
      dim_epic.epic_url                                                           AS parent_epic_path,
      dim_epic.epic_title                                                         AS parent_epic_title,
      dim_issue.upvote_count                                                      AS upvote_count,
      IFNULL(dim_issue.weight, 0)                                                 AS issue_epic_weight

    FROM bdg_issue_user_request
    LEFT JOIN dim_issue
      ON dim_issue.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_group_extended_label
      ON issue_group_extended_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_status
      ON issue_status.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN dim_epic
      ON dim_epic.dim_epic_id = dim_issue.dim_epic_id
    LEFT JOIN issue_category_dedup AS category_label
      ON category_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_group_label AS group_label
      ON group_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_devops_label AS devops_label
      ON devops_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_type_label AS type_label
      ON type_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_theme_labels
      ON issue_theme_labels.dim_issue_id = bdg_issue_user_request.dim_issue_id

    UNION

    SELECT
      -1                                                                          AS dim_issue_id,
      bdg_epic_user_request.dim_epic_id                                           AS dim_epic_id,
      'Epic'                                                                      AS user_request_in,
      
      bdg_epic_user_request.link_type                                             AS link_type,
      bdg_epic_user_request.dim_crm_opportunity_id                                AS dim_crm_opportunity_id,
      bdg_epic_user_request.dim_crm_account_id                                    AS dim_crm_account_id,
      bdg_epic_user_request.dim_ticket_id                                         AS dim_ticket_id,
      bdg_epic_user_request.request_priority                                      AS request_priority,
      bdg_epic_user_request.is_request_priority_empty                             AS is_request_priority_empty,
      bdg_epic_user_request.is_user_request_only_in_collaboration_project         AS is_user_request_only_in_collaboration_project,
      bdg_epic_user_request.link_last_updated_at                                  AS link_last_updated_at,
      bdg_epic_user_request.link_last_updated_at::DATE                            AS link_last_updated_date,
      DATE_TRUNC('month', bdg_epic_user_request.link_last_updated_at::DATE)       AS link_last_updated_month,

      IFF(link_type = 'Opportunity', 'https://gitlab.my.salesforce.com/' || bdg_epic_user_request.dim_crm_opportunity_id, 'No Link')
                                                                                  AS crm_opportunity_link,
      'https://gitlab.my.salesforce.com/' || bdg_epic_user_request.dim_crm_account_id
                                                                                  AS crm_account_link,
      IFF(link_type = 'Zendesk Ticket', 'https://gitlab.zendesk.com/agent/tickets/' || bdg_epic_user_request.dim_ticket_id, 'No Link')
                                                                                  AS ticket_link,

      -- Epic / Issue attributes
      dim_epic.epic_title                                                         AS epic_title,
      dim_epic.epic_url                                                           AS epic_url,
      dim_epic.created_at                                                         AS issue_epic_created_at,
      dim_epic.created_at::DATE                                                   AS issue_epic_created_date,
      DATE_TRUNC('month', dim_epic.created_at::DATE)                              AS issue_epic_created_month,
      dim_epic.state_name                                                         AS issue_epic_state_name,
      dim_epic.closed_at                                                          AS issue_epic_closed_at,
      dim_epic.closed_at::DATE                                                    AS issue_epic_closed_date,
      DATE_TRUNC('month', dim_epic.closed_at::DATE)                               AS issue_epic_closed_month,
      epic_last_milestone.milestone_title                                         AS milestone_title,
      epic_last_milestone.milestone_due_date                                      AS milestone_due_date,
      dim_epic.labels                                                             AS issue_epic_labels,
      CASE
        WHEN ARRAY_CONTAINS('deliverable'::VARIANT, dim_epic.labels) THEN 'Yes'
        WHEN ARRAY_CONTAINS('stretch'::VARIANT, dim_epic.labels) THEN 'Stretch'
        ELSE 'No'
      END                                                                         AS deliverable,
      IFNULL(epic_group_extended_label.product_group_extended, 'Unknown')         AS product_group_extended,
      group_label.group_label                                                     AS product_group,
      category_label.category_label                                               AS product_category,
      devops_label.devops_label                                                   AS product_stage,
      CASE type_label.type_label
        WHEN 'bug' THEN 'bug fix'
        WHEN 'feature' THEN 'feature request'
      END                                                                         AS issue_epic_type,
      'Not Applicable'                                                            AS issue_status,
      epic_theme_labels.theme_labels                                              AS theme_labels,
      IFNULL(epic_weight.epic_status, 0)                                          AS epic_status,
      parent_epic.epic_url                                                        AS parent_epic_path,
      parent_epic.epic_title                                                      AS parent_epic_title,
      dim_epic.upvote_count                                                       AS upvote_count,
      IFNULL(epic_weight.epic_weight, 0)                                          AS issue_epic_weight

    FROM bdg_epic_user_request
    LEFT JOIN dim_issue
      ON dim_issue.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN dim_epic
      ON dim_epic.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_last_milestone
      ON epic_last_milestone.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_group_extended_label
      ON epic_group_extended_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_weight
      ON epic_weight.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN dim_epic AS parent_epic
      ON parent_epic.dim_epic_id = dim_epic.parent_id
    LEFT JOIN epic_category_dedup AS category_label
      ON category_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_group_label AS group_label
      ON group_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_devops_label AS devops_label
      ON devops_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_type_label AS type_label
      ON type_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_theme_labels
      ON epic_theme_labels.dim_epic_id = bdg_epic_user_request.dim_epic_id

), user_request_with_account_opp_attributes AS (

    SELECT
      {{ dbt_utils.surrogate_key(['user_request.dim_issue_id',
                                  'user_request.dim_epic_id',
                                  'user_request.dim_crm_account_id',
                                  'user_request.dim_crm_opportunity_id',
                                  'user_request.dim_ticket_id']
                                ) }}                                              AS primary_key,
      user_request.*,

      -- CRM Account attributes
      dim_crm_account.crm_account_name                                            AS crm_account_name,
      account_next_renewal_month.next_renewal_month                               AS crm_account_next_renewal_month,
      dim_crm_account.health_score_color                                          AS crm_account_health_score_color,
      dim_crm_account.parent_crm_account_sales_segment                            AS parent_crm_account_sales_segment,
      dim_crm_account.technical_account_manager                                   AS technical_account_manager,
      dim_crm_account.account_owner                                               AS strategic_account_leader,
      IFNULL(arr_metrics_current_month.quantity, 0)                               AS customer_reach,
      IFNULL(arr_metrics_current_month.arr, 0)                                    AS crm_account_arr,
      IFNULL(account_open_opp_net_arr.net_arr, 0)                                 AS crm_account_open_opp_net_arr,
      IFNULL(account_open_opp_net_arr_fo.net_arr, 0)                              AS crm_account_open_opp_net_arr_fo,
      IFNULL(account_open_opp_net_arr_growth.net_arr, 0)                          AS crm_account_open_opp_net_arr_growth,
      IFNULL(account_open_fo_opp_seats.seats, 0)                                  AS opportunity_reach,
      IFNULL(account_lost_opp_arr.net_arr, 0)                                     AS crm_account_lost_opp_net_arr,
      IFNULL(account_lost_customer_arr.arr_basis, 0)                              AS crm_account_lost_customer_arr,
      crm_account_lost_opp_net_arr + crm_account_lost_customer_arr                AS lost_arr,

      -- CRM Opportunity attributes
      dim_crm_opportunity.stage_name                                              AS crm_opp_stage_name,
      fct_crm_opportunity.is_closed                                               AS crm_opp_is_closed,
      fct_crm_opportunity.close_date                                              AS crm_opp_close_date,
      dim_order_type.order_type_name                                              AS crm_opp_order_type,
      dim_order_type.order_type_grouped                                           AS crm_opp_order_type_grouped,
      primary_solution_architect.dim_crm_user_id                                  AS primary_solution_architect_id,
      primary_solution_architect.user_name                                        AS primary_solution_architect_user_name,
      IFF(DATE_TRUNC('month', dim_crm_opportunity.subscription_end_date) >= DATE_TRUNC('month',CURRENT_DATE),
        DATE_TRUNC('month', dim_crm_opportunity.subscription_end_date),
        NULL
      )                                                                           AS crm_opp_next_renewal_month,
      fct_crm_opportunity.net_arr                                                 AS crm_opp_net_arr,
      fct_crm_opportunity.arr_basis                                               AS crm_opp_arr_basis,
      opportunity_seats.quantity                                                  AS crm_opp_seats,
      fct_crm_opportunity.probability                                             AS crm_opp_probability

    FROM user_request

    -- Account Joins
    LEFT JOIN arr_metrics_current_month
      ON arr_metrics_current_month.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_next_renewal_month
      ON account_next_renewal_month.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_fo_opp_seats
      ON account_open_fo_opp_seats.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_lost_opp_arr
      ON account_lost_opp_arr.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_lost_customer_arr
      ON account_lost_customer_arr.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_opp_net_arr
      ON account_open_opp_net_arr.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_opp_net_arr_fo
      ON account_open_opp_net_arr_fo.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_opp_net_arr_growth
      ON account_open_opp_net_arr_growth.dim_crm_account_id = user_request.dim_crm_account_id

    -- Opportunity Joins
    LEFT JOIN fct_crm_opportunity
      ON fct_crm_opportunity.dim_crm_opportunity_id = user_request.dim_crm_opportunity_id
    LEFT JOIN dim_order_type
      ON dim_order_type.dim_order_type_id = fct_crm_opportunity.dim_order_type_id
    LEFT JOIN dim_crm_opportunity
      ON dim_crm_opportunity.dim_crm_opportunity_id = user_request.dim_crm_opportunity_id
    LEFT JOIN opportunity_seats
      ON opportunity_seats.dim_crm_opportunity_id = user_request.dim_crm_opportunity_id
    LEFT JOIN dim_crm_user AS primary_solution_architect
      ON primary_solution_architect.dim_crm_user_id = dim_crm_opportunity.primary_solution_architect


), customer_value_scores AS (

    SELECT
      primary_key,
      CASE
        WHEN crm_account_health_score_color = 'Green'
          THEN 1
        WHEN crm_account_health_score_color = 'Yellow'
          THEN
          CASE
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 18
              THEN 1.5
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 12
              THEN 2
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) <= 12
              THEN 2.5
          END
        WHEN crm_account_health_score_color = 'Red'
          THEN
            CASE
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 18
              THEN 2
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 12
              THEN 3
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) <= 12
              THEN 4
          END
        ELSE 1
      END                                                                                                     AS retention_urgency_score,
      CASE
        WHEN crm_opp_probability > 60
          THEN 1
        WHEN crm_opp_probability > 39
          THEN
            CASE
              WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 6
                THEN 1.25
              WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 3
                THEN 1.5
              WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) <= 3
                THEN 2
            END
        WHEN crm_opp_probability < 40
          THEN 
          CASE
            WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 6
              THEN 1.5
            WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 3
              THEN 2
            WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) <= 3
              THEN 2.5
          END
        ELSE 1
      END                                                                                                     AS opportunity_urgency_score,
      IFF(link_type = 'Opportunity', crm_opp_arr_basis, crm_account_arr)                                      AS arr_to_use,
      ZEROIFNULL(crm_opp_net_arr / NULLIF(ZEROIFNULL(crm_opp_net_arr) + ZEROIFNULL(arr_to_use), 0))           AS growth_percentage,
      ZEROIFNULL(arr_to_use / NULLIF(ZEROIFNULL(crm_opp_net_arr) + ZEROIFNULL(arr_to_use), 0))                AS retention_percentage,
      request_priority * growth_percentage                                                                    AS growth_priority,
      request_priority * retention_percentage                                                                 AS retention_priority,
      -- for that account's links in that opportunity - use multiple partitions
      ZEROIFNULL(growth_priority / NULLIF(SUM(growth_priority) OVER(PARTITION BY dim_crm_account_id, dim_crm_opportunity_id), 0))
                                                                                                              AS growth_priority_weighting,
      ZEROIFNULL(retention_priority / NULLIF(SUM(retention_priority) OVER(PARTITION BY dim_crm_account_id), 0))
                                                                                                              AS retention_priority_weighting,
      -- a utility column to allow sum of all epics for customer reach
      customer_reach / NULLIF(COUNT(*) OVER(PARTITION BY dim_epic_id, dim_crm_account_id), 0)                 AS customer_epic_reach,
      CASE
        WHEN link_type = 'Opportunity'
          THEN crm_opp_net_arr * growth_priority_weighting
        ELSE 0
      END                                                                                                     AS growth_score,
      retention_priority_weighting * crm_account_arr                                                          AS retention_score,
      growth_score + retention_score                                                                          AS combined_score,
      combined_score * CASE
        WHEN link_type = 'Opportunity'
          THEN opportunity_urgency_score
        ELSE retention_urgency_score
      END                                                                                                     AS priority_score
    FROM user_request_with_account_opp_attributes
    WHERE issue_epic_state_name = 'opened'
      AND (
        CASE
          WHEN link_type = 'Opportunity'
            THEN crm_opp_is_closed = FALSE
          ELSE TRUE
        END
      )

), final AS (

    SELECT
      user_request_with_account_opp_attributes.*,
      CASE
        WHEN user_request_with_account_opp_attributes.is_request_priority_empty
          THEN '[Input (Using 1 as Default)](' || user_request_with_account_opp_attributes.issue_epic_url || ')'
        ELSE request_priority::TEXT
      END                                                                            AS priority_input_url,
      CASE
        WHEN user_request_with_account_opp_attributes.link_type = 'Zendesk Ticket'
          THEN '[' || user_request_with_account_opp_attributes.link_type || '](' || user_request_with_account_opp_attributes.ticket_link || ')'
        WHEN user_request_with_account_opp_attributes.link_type = 'Opportunity'
          THEN '[' || user_request_with_account_opp_attributes.link_type || '](' || user_request_with_account_opp_attributes.crm_opportunity_link || ')'
        WHEN user_request_with_account_opp_attributes.link_type = 'Account'
          THEN '[' || user_request_with_account_opp_attributes.link_type || '](' || user_request_with_account_opp_attributes.crm_account_link || ')'
      END                                                                            AS user_request_link,
      customer_value_scores.retention_percentage                                     AS link_retention_percentage,
      customer_value_scores.growth_percentage                                        AS link_growth_percentage,
      customer_value_scores.retention_priority                                       AS link_retention_priority,
      customer_value_scores.growth_priority                                          AS link_growth_priority,
      customer_value_scores.retention_priority_weighting                             AS link_retention_priority_weighting,
      customer_value_scores.growth_priority_weighting                                AS link_growth_priority_weighting,
      customer_value_scores.retention_score                                          AS link_retention_score,
      customer_value_scores.growth_score                                             AS link_growth_score,
      customer_value_scores.combined_score                                           AS link_combined_score,
      customer_value_scores.priority_score                                           AS link_priority_score,
      link_priority_score / NULLIFZERO(issue_epic_weight)                            AS link_weighted_priority_score,
      IFF(link_weighted_priority_score IS NULL,
        '[Effort is Empty, Input Effort Here](' || user_request_with_account_opp_attributes.issue_epic_url || ')',
        link_weighted_priority_score::TEXT)                                          AS link_weighted_priority_score_input
    FROM user_request_with_account_opp_attributes
    LEFT JOIN customer_value_scores
      ON user_request_with_account_opp_attributes.primary_key = customer_value_scores.primary_key

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@jpeguero",
    updated_by="@lvinueza",
    created_date="2021-10-22",
    updated_date="2023-05-21",
  ) }}17:T9cbb,

WITH prep_label_links AS (

    SELECT * 
    FROM "PROD".common_prep.prep_label_links

), prep_labels AS (

    SELECT * 
    FROM "PROD".common_prep.prep_labels

), bdg_epic_user_request AS (

    SELECT * 
    FROM "PROD".common.bdg_epic_user_request

), bdg_issue_user_request AS (

    SELECT * 
    FROM "PROD".common.bdg_issue_user_request

), dim_epic AS (

    SELECT * 
    FROM "PROD".common.dim_epic

), dim_issue AS (

    SELECT * 
    FROM "PROD".common.dim_issue

), fct_mrr AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_mrr

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), fct_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_opportunity

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), fct_quote_item AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_quote_item

), dim_quote AS (

    SELECT * 
    FROM "PROD".common.dim_quote

), dim_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_opportunity

), dim_order_type AS (

    SELECT * 
    FROM "PROD".common.dim_order_type

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

)

, opportunity_seats AS (

    SELECT
      dim_crm_opportunity.dim_crm_opportunity_id,
      dim_crm_opportunity.dim_crm_account_id,
      dim_crm_opportunity.stage_name,
      fct_crm_opportunity.is_closed,
      dim_crm_opportunity.order_type,
      SUM(fct_quote_item.quantity)              AS quantity
    FROM fct_quote_item
    INNER JOIN dim_crm_opportunity
      ON dim_crm_opportunity.dim_crm_opportunity_id = fct_quote_item.dim_crm_opportunity_id
    INNER JOIN fct_crm_opportunity
      ON fct_crm_opportunity.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    INNER JOIN dim_quote
      ON dim_quote.dim_quote_id = fct_quote_item.dim_quote_id
    INNER JOIN dim_product_detail
      ON dim_product_detail.dim_product_detail_id = fct_quote_item.dim_product_detail_id
    WHERE dim_quote.is_primary_quote = TRUE
      AND dim_product_detail.product_tier_name IN ('Plus', 'GitHost', 'Standard', 'Self-Managed - Starter', 'Self-Managed - Premium',
        'SaaS - Premium', 'SaaS - Bronze', 'Basic', 'Self-Managed - Ultimate', 'SaaS - Ultimate', 'Dedicated - Ultimate')
      AND fct_crm_opportunity.close_date >= '2019-02-01'
    group by 1,2,3,4,5

), account_open_fo_opp_seats AS (

    SELECT
      dim_crm_account_id,
      SUM(quantity) AS seats
    FROM opportunity_seats
    WHERE order_type = '1. New - First Order'
      AND is_closed = FALSE
    GROUP BY 1

), opportunity_net_arr AS (

    SELECT
      fct_crm_opportunity.dim_crm_opportunity_id,
      fct_crm_opportunity.dim_crm_account_id,
      dim_crm_opportunity.stage_name,
      fct_crm_opportunity.is_closed,
      dim_order_type.order_type_name,
      fct_crm_opportunity.net_arr,
      fct_crm_opportunity.arr_basis
    FROM fct_crm_opportunity
    INNER JOIN dim_order_type
      ON dim_order_type.dim_order_type_id = fct_crm_opportunity.dim_order_type_id
    INNER JOIN dim_crm_opportunity
      ON dim_crm_opportunity.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id
    WHERE fct_crm_opportunity.close_date >= '2019-02-01' -- Net ARR is only good after 2019-02-01

), account_lost_opp_arr AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE order_type_name IN ('1. New - First Order')
      AND stage_name IN ('8-Closed Lost')
    GROUP BY 1
  
), account_lost_customer_arr AS (

    SELECT
      dim_crm_account_id,
      SUM(arr_basis)  AS arr_basis
    FROM opportunity_net_arr
    WHERE order_type_name IN ('6. Churn - Final')
      AND stage_name IN ('8-Closed Lost')
    GROUP BY 1

), account_open_opp_net_arr AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE is_closed = FALSE
    GROUP BY 1 

), account_open_opp_net_arr_fo AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE is_closed = FALSE
      AND order_type_name IN ('1. New - First Order')
    GROUP BY 1 

), account_open_opp_net_arr_growth AS (

    SELECT
      dim_crm_account_id,
      SUM(net_arr) AS net_arr
    FROM opportunity_net_arr
    WHERE is_closed = FALSE
      AND order_type_name IN ('2. New - Connected', '3. Growth')
    GROUP BY 1 

), account_next_renewal_month AS (

    SELECT
      fct_mrr.dim_crm_account_id,
      MIN(subscription_end_month) AS next_renewal_month
    FROM fct_mrr
    INNER JOIN dim_date
      ON dim_date.date_id = fct_mrr.dim_date_id
    LEFT JOIN dim_subscription
      ON dim_subscription.dim_subscription_id = fct_mrr.dim_subscription_id
    WHERE dim_subscription.subscription_end_month >= DATE_TRUNC('month',CURRENT_DATE)
      AND fct_mrr.subscription_status IN ('Active', 'Cancelled')
    GROUP BY 1

), arr_metrics_current_month AS (

    SELECT
      fct_mrr.dim_crm_account_id,
      SUM(fct_mrr.mrr)                                                               AS mrr,
      SUM(fct_mrr.arr)                                                               AS arr,
      SUM(fct_mrr.quantity)                                                          AS quantity
    FROM fct_mrr
    INNER JOIN dim_date
      ON dim_date.date_id = fct_mrr.dim_date_id
    INNER JOIN dim_product_detail
      ON dim_product_detail.dim_product_detail_id = fct_mrr.dim_product_detail_id
    WHERE subscription_status IN ('Active', 'Cancelled')
      AND dim_date.date_actual = DATE_TRUNC('month', CURRENT_DATE)
      AND dim_product_detail.product_tier_name IN ('Plus', 'GitHost', 'Standard', 'Self-Managed - Starter', 'Self-Managed - Premium',
        'SaaS - Premium', 'SaaS - Bronze', 'Basic', 'Self-Managed - Ultimate', 'SaaS - Ultimate', 'Dedicated - Ultimate')
    GROUP BY 1

), epic_weight AS (

    SELECT
      dim_epic_id,
      SUM(weight)                                                             AS epic_weight,
      SUM(IFF(state_name = 'closed', weight, 0)) / NULLIFZERO(epic_weight)    AS epic_completeness,
      SUM(IFF(state_name = 'closed', 1, 0)) / COUNT(*)                        AS epic_completeness_alternative,
      COALESCE(epic_completeness, epic_completeness_alternative)              AS epic_status
    FROM dim_issue
    GROUP BY 1
    
), label_links_joined AS (

    SELECT
      prep_label_links.*,
      prep_labels.label_title
    FROM prep_label_links
    LEFT JOIN prep_labels
      ON prep_label_links.dim_label_id = prep_labels.dim_label_id

), issue_labels AS (

    SELECT 
      label_links_joined.dim_issue_id,
      IFF(LOWER(label_links_joined.label_title) LIKE 'group::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)    AS group_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'devops::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)   AS devops_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'section::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)  AS section_label,
      COALESCE(group_label, devops_label, section_label)                                                                       AS product_group_extended,

      IFF(LOWER(label_links_joined.label_title) LIKE 'category:%', SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)   AS category_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'type::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)     AS type_label,

      IFF(LOWER(label_links_joined.label_title) LIKE 'theme:%'
        AND NOT CONTAINS(label_links_joined.label_title, '::'), -- This second condition makes sure we are not matching the scoped label theme::*, only the non scoped theme:*
          SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)                                                             AS theme_label,
      CASE
        WHEN group_label IS NOT NULL THEN 3
        WHEN devops_label IS NOT NULL THEN 2
        WHEN section_label IS NOT NULL THEN 1
        ELSE 0
      END product_group_level
    FROM label_links_joined

), epic_labels AS (

    SELECT 
      label_links_joined.dim_epic_id,
      IFF(LOWER(label_links_joined.label_title) LIKE 'group::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)    AS group_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'devops::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)   AS devops_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'section::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)  AS section_label,
      COALESCE(group_label, devops_label, section_label)                                                                       AS product_group_extended,

      IFF(LOWER(label_links_joined.label_title) LIKE 'category:%', SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)   AS category_label,
      IFF(LOWER(label_links_joined.label_title) LIKE 'type::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)     AS type_label,

      IFF(LOWER(label_links_joined.label_title) LIKE 'theme:%'
        AND NOT CONTAINS(label_links_joined.label_title, '::'), -- This second condition makes sure we are not matching the scoped label theme::*, only the non scoped theme:*
          SPLIT_PART(label_links_joined.label_title, ':', 2), NULL)                                                             AS theme_label,

      CASE
        WHEN group_label IS NOT NULL THEN 3
        WHEN devops_label IS NOT NULL THEN 2
        WHEN section_label IS NOT NULL THEN 1
        ELSE 0
      END product_group_level
    FROM label_links_joined

), issue_theme_labels AS (

    SELECT
      dim_issue_id,
      ARRAY_AGG(theme_label) WITHIN GROUP (ORDER BY theme_label) AS theme_labels
    FROM issue_labels
    GROUP BY 1

), epic_theme_labels AS (

    SELECT
      dim_epic_id,
      ARRAY_AGG(theme_label) WITHIN GROUP (ORDER BY theme_label) AS theme_labels
    FROM epic_labels
    GROUP BY 1

), issue_group_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the group::* label

    SELECT
      dim_issue_id,
      group_label
    FROM issue_labels
    WHERE group_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY group_label) = 1

), issue_group_extended_label AS (

    SELECT
      dim_issue_id,
      product_group_extended
    FROM issue_labels
    WHERE product_group_extended IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY product_group_level DESC) = 1

), issue_category_dedup AS ( -- Since category: is not an scoped label, need to make sure I only pull one of them
  
    SELECT
      dim_issue_id,
      category_label
    FROM issue_labels
    WHERE category_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY category_label DESC) = 1
  
), issue_type_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the type::* label

    SELECT
      dim_issue_id,
      type_label
    FROM issue_labels
    WHERE type_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY type_label) = 1

), issue_devops_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the devops::* label

    SELECT
      dim_issue_id,
      devops_label
    FROM issue_labels
    WHERE devops_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY devops_label) = 1

), issue_status AS ( -- Some issues for some reason had two valid workflow labels, this dedup them

    SELECT
      label_links_joined.dim_issue_id,
      IFF(LOWER(label_links_joined.label_title) LIKE 'workflow::%', SPLIT_PART(label_links_joined.label_title, '::', 2), NULL)   AS workflow_label
    FROM label_links_joined
    WHERE workflow_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_issue_id ORDER BY workflow_label DESC) = 1 

), epic_group_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the group::* label

    SELECT
      dim_epic_id,
      group_label
    FROM epic_labels
    WHERE group_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY group_label) = 1

), epic_group_extended_label AS (

    SELECT
      dim_epic_id,
      product_group_extended
    FROM epic_labels
    WHERE product_group_extended IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY product_group_level DESC) = 1

), epic_category_dedup AS ( -- Since category: is not an scoped label, need to make sure I only pull one of them
  
    SELECT
      dim_epic_id,
      category_label
    FROM epic_labels
    WHERE category_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY category_label DESC) = 1
  
), epic_type_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the type::* label

    SELECT
      dim_epic_id,
      type_label
    FROM epic_labels
    WHERE type_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY type_label) = 1

), epic_devops_label AS ( -- There is a bug in the product where some scoped labels are used twice. This is a temporary fix for that for the devops::* label

    SELECT
      dim_epic_id,
      devops_label
    FROM epic_labels
    WHERE devops_label IS NOT NULL
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY devops_label) = 1

), epic_last_milestone AS ( -- Get issue milestone with the latest due dates for epics
    
    SELECT
      dim_epic_id,
      milestone_title,
      milestone_due_date
    FROM dim_issue
    QUALIFY ROW_NUMBER() OVER(PARTITION BY dim_epic_id ORDER BY milestone_due_date DESC NULLS LAST) = 1

), user_request AS (

    SELECT
      bdg_issue_user_request.dim_issue_id                                         AS dim_issue_id,
      IFNULL(dim_issue.dim_epic_id, -1)                                           AS dim_epic_id,
      'Issue'                                                                     AS user_request_in,

      bdg_issue_user_request.link_type                                            AS link_type,
      bdg_issue_user_request.dim_crm_opportunity_id                               AS dim_crm_opportunity_id,
      bdg_issue_user_request.dim_crm_account_id                                   AS dim_crm_account_id,
      bdg_issue_user_request.dim_ticket_id                                        AS dim_ticket_id,
      bdg_issue_user_request.request_priority                                     AS request_priority,
      bdg_issue_user_request.is_request_priority_empty                            AS is_request_priority_empty,
      bdg_issue_user_request.is_user_request_only_in_collaboration_project        AS is_user_request_only_in_collaboration_project,
      bdg_issue_user_request.link_last_updated_at                                 AS link_last_updated_at,
      bdg_issue_user_request.link_last_updated_at::DATE                           AS link_last_updated_date,
      DATE_TRUNC('month', bdg_issue_user_request.link_last_updated_at::DATE)      AS link_last_updated_month,

      IFF(link_type = 'Opportunity', 'https://gitlab.my.salesforce.com/' || bdg_issue_user_request.dim_crm_opportunity_id, 'No Link')
                                                                                  AS crm_opportunity_link,
      'https://gitlab.my.salesforce.com/' || bdg_issue_user_request.dim_crm_account_id
                                                                                  AS crm_account_link,
      IFF(link_type = 'Zendesk Ticket', 'https://gitlab.zendesk.com/agent/tickets/' || bdg_issue_user_request.dim_ticket_id, 'No Link')
                                                                                  AS ticket_link,

      -- Epic / Issue attributes
      dim_issue.issue_title                                                       AS issue_epic_title,
      dim_issue.issue_url                                                         AS issue_epic_url,
      dim_issue.created_at                                                        AS issue_epic_created_at,
      dim_issue.created_at::DATE                                                  AS issue_epic_created_date,
      DATE_TRUNC('month', dim_issue.created_at::DATE)                             AS issue_epic_created_month,
      dim_issue.state_name                                                        AS issue_epic_state_name,
      dim_issue.issue_closed_at                                                   AS issue_epic_closed_at,
      dim_issue.issue_closed_at::DATE                                             AS issue_epic_closed_date,
      DATE_TRUNC('month', dim_issue.issue_closed_at::DATE)                        AS issue_epic_closed_month,
      dim_issue.milestone_title                                                   AS milestone_title,
      dim_issue.milestone_due_date                                                AS milestone_due_date,
      dim_issue.labels                                                            AS issue_epic_labels,
      CASE
        WHEN ARRAY_CONTAINS('deliverable'::VARIANT, dim_issue.labels) THEN 'Yes'
        WHEN ARRAY_CONTAINS('stretch'::VARIANT, dim_issue.labels) THEN 'Stretch'
        ELSE 'No'
      END                                                                         AS deliverable,
      IFNULL(issue_group_extended_label.product_group_extended, 'Unknown')        AS product_group_extended,
      group_label.group_label                                                     AS product_group,
      category_label.category_label                                               AS product_category,
      devops_label.devops_label                                                   AS product_stage,
      CASE type_label.type_label
        WHEN 'bug' THEN 'bug fix'
        WHEN 'feature' THEN 'feature request'
      END                                                                         AS issue_epic_type,
      IFNULL(issue_status.workflow_label, 'Not Started')                          AS issue_status,
      issue_theme_labels.theme_labels                                             AS theme_labels,
      -1                                                                          AS epic_status,
      dim_epic.epic_url                                                           AS parent_epic_path,
      dim_epic.epic_title                                                         AS parent_epic_title,
      dim_issue.upvote_count                                                      AS upvote_count,
      IFNULL(dim_issue.weight, 0)                                                 AS issue_epic_weight

    FROM bdg_issue_user_request
    LEFT JOIN dim_issue
      ON dim_issue.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_group_extended_label
      ON issue_group_extended_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_status
      ON issue_status.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN dim_epic
      ON dim_epic.dim_epic_id = dim_issue.dim_epic_id
    LEFT JOIN issue_category_dedup AS category_label
      ON category_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_group_label AS group_label
      ON group_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_devops_label AS devops_label
      ON devops_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_type_label AS type_label
      ON type_label.dim_issue_id = bdg_issue_user_request.dim_issue_id
    LEFT JOIN issue_theme_labels
      ON issue_theme_labels.dim_issue_id = bdg_issue_user_request.dim_issue_id

    UNION

    SELECT
      -1                                                                          AS dim_issue_id,
      bdg_epic_user_request.dim_epic_id                                           AS dim_epic_id,
      'Epic'                                                                      AS user_request_in,
      
      bdg_epic_user_request.link_type                                             AS link_type,
      bdg_epic_user_request.dim_crm_opportunity_id                                AS dim_crm_opportunity_id,
      bdg_epic_user_request.dim_crm_account_id                                    AS dim_crm_account_id,
      bdg_epic_user_request.dim_ticket_id                                         AS dim_ticket_id,
      bdg_epic_user_request.request_priority                                      AS request_priority,
      bdg_epic_user_request.is_request_priority_empty                             AS is_request_priority_empty,
      bdg_epic_user_request.is_user_request_only_in_collaboration_project         AS is_user_request_only_in_collaboration_project,
      bdg_epic_user_request.link_last_updated_at                                  AS link_last_updated_at,
      bdg_epic_user_request.link_last_updated_at::DATE                            AS link_last_updated_date,
      DATE_TRUNC('month', bdg_epic_user_request.link_last_updated_at::DATE)       AS link_last_updated_month,

      IFF(link_type = 'Opportunity', 'https://gitlab.my.salesforce.com/' || bdg_epic_user_request.dim_crm_opportunity_id, 'No Link')
                                                                                  AS crm_opportunity_link,
      'https://gitlab.my.salesforce.com/' || bdg_epic_user_request.dim_crm_account_id
                                                                                  AS crm_account_link,
      IFF(link_type = 'Zendesk Ticket', 'https://gitlab.zendesk.com/agent/tickets/' || bdg_epic_user_request.dim_ticket_id, 'No Link')
                                                                                  AS ticket_link,

      -- Epic / Issue attributes
      dim_epic.epic_title                                                         AS epic_title,
      dim_epic.epic_url                                                           AS epic_url,
      dim_epic.created_at                                                         AS issue_epic_created_at,
      dim_epic.created_at::DATE                                                   AS issue_epic_created_date,
      DATE_TRUNC('month', dim_epic.created_at::DATE)                              AS issue_epic_created_month,
      dim_epic.state_name                                                         AS issue_epic_state_name,
      dim_epic.closed_at                                                          AS issue_epic_closed_at,
      dim_epic.closed_at::DATE                                                    AS issue_epic_closed_date,
      DATE_TRUNC('month', dim_epic.closed_at::DATE)                               AS issue_epic_closed_month,
      epic_last_milestone.milestone_title                                         AS milestone_title,
      epic_last_milestone.milestone_due_date                                      AS milestone_due_date,
      dim_epic.labels                                                             AS issue_epic_labels,
      CASE
        WHEN ARRAY_CONTAINS('deliverable'::VARIANT, dim_epic.labels) THEN 'Yes'
        WHEN ARRAY_CONTAINS('stretch'::VARIANT, dim_epic.labels) THEN 'Stretch'
        ELSE 'No'
      END                                                                         AS deliverable,
      IFNULL(epic_group_extended_label.product_group_extended, 'Unknown')         AS product_group_extended,
      group_label.group_label                                                     AS product_group,
      category_label.category_label                                               AS product_category,
      devops_label.devops_label                                                   AS product_stage,
      CASE type_label.type_label
        WHEN 'bug' THEN 'bug fix'
        WHEN 'feature' THEN 'feature request'
      END                                                                         AS issue_epic_type,
      'Not Applicable'                                                            AS issue_status,
      epic_theme_labels.theme_labels                                              AS theme_labels,
      IFNULL(epic_weight.epic_status, 0)                                          AS epic_status,
      parent_epic.epic_url                                                        AS parent_epic_path,
      parent_epic.epic_title                                                      AS parent_epic_title,
      dim_epic.upvote_count                                                       AS upvote_count,
      IFNULL(epic_weight.epic_weight, 0)                                          AS issue_epic_weight

    FROM bdg_epic_user_request
    LEFT JOIN dim_issue
      ON dim_issue.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN dim_epic
      ON dim_epic.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_last_milestone
      ON epic_last_milestone.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_group_extended_label
      ON epic_group_extended_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_weight
      ON epic_weight.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN dim_epic AS parent_epic
      ON parent_epic.dim_epic_id = dim_epic.parent_id
    LEFT JOIN epic_category_dedup AS category_label
      ON category_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_group_label AS group_label
      ON group_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_devops_label AS devops_label
      ON devops_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_type_label AS type_label
      ON type_label.dim_epic_id = bdg_epic_user_request.dim_epic_id
    LEFT JOIN epic_theme_labels
      ON epic_theme_labels.dim_epic_id = bdg_epic_user_request.dim_epic_id

), user_request_with_account_opp_attributes AS (

    SELECT
      md5(cast(coalesce(cast(user_request.dim_issue_id as 
    varchar
), '') || '-' || coalesce(cast(user_request.dim_epic_id as 
    varchar
), '') || '-' || coalesce(cast(user_request.dim_crm_account_id as 
    varchar
), '') || '-' || coalesce(cast(user_request.dim_crm_opportunity_id as 
    varchar
), '') || '-' || coalesce(cast(user_request.dim_ticket_id as 
    varchar
), '') as 
    varchar
))                                              AS primary_key,
      user_request.*,

      -- CRM Account attributes
      dim_crm_account.crm_account_name                                            AS crm_account_name,
      account_next_renewal_month.next_renewal_month                               AS crm_account_next_renewal_month,
      dim_crm_account.health_score_color                                          AS crm_account_health_score_color,
      dim_crm_account.parent_crm_account_sales_segment                            AS parent_crm_account_sales_segment,
      dim_crm_account.technical_account_manager                                   AS technical_account_manager,
      dim_crm_account.account_owner                                               AS strategic_account_leader,
      IFNULL(arr_metrics_current_month.quantity, 0)                               AS customer_reach,
      IFNULL(arr_metrics_current_month.arr, 0)                                    AS crm_account_arr,
      IFNULL(account_open_opp_net_arr.net_arr, 0)                                 AS crm_account_open_opp_net_arr,
      IFNULL(account_open_opp_net_arr_fo.net_arr, 0)                              AS crm_account_open_opp_net_arr_fo,
      IFNULL(account_open_opp_net_arr_growth.net_arr, 0)                          AS crm_account_open_opp_net_arr_growth,
      IFNULL(account_open_fo_opp_seats.seats, 0)                                  AS opportunity_reach,
      IFNULL(account_lost_opp_arr.net_arr, 0)                                     AS crm_account_lost_opp_net_arr,
      IFNULL(account_lost_customer_arr.arr_basis, 0)                              AS crm_account_lost_customer_arr,
      crm_account_lost_opp_net_arr + crm_account_lost_customer_arr                AS lost_arr,

      -- CRM Opportunity attributes
      dim_crm_opportunity.stage_name                                              AS crm_opp_stage_name,
      fct_crm_opportunity.is_closed                                               AS crm_opp_is_closed,
      fct_crm_opportunity.close_date                                              AS crm_opp_close_date,
      dim_order_type.order_type_name                                              AS crm_opp_order_type,
      dim_order_type.order_type_grouped                                           AS crm_opp_order_type_grouped,
      primary_solution_architect.dim_crm_user_id                                  AS primary_solution_architect_id,
      primary_solution_architect.user_name                                        AS primary_solution_architect_user_name,
      IFF(DATE_TRUNC('month', dim_crm_opportunity.subscription_end_date) >= DATE_TRUNC('month',CURRENT_DATE),
        DATE_TRUNC('month', dim_crm_opportunity.subscription_end_date),
        NULL
      )                                                                           AS crm_opp_next_renewal_month,
      fct_crm_opportunity.net_arr                                                 AS crm_opp_net_arr,
      fct_crm_opportunity.arr_basis                                               AS crm_opp_arr_basis,
      opportunity_seats.quantity                                                  AS crm_opp_seats,
      fct_crm_opportunity.probability                                             AS crm_opp_probability

    FROM user_request

    -- Account Joins
    LEFT JOIN arr_metrics_current_month
      ON arr_metrics_current_month.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_next_renewal_month
      ON account_next_renewal_month.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_fo_opp_seats
      ON account_open_fo_opp_seats.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_lost_opp_arr
      ON account_lost_opp_arr.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_lost_customer_arr
      ON account_lost_customer_arr.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_opp_net_arr
      ON account_open_opp_net_arr.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_opp_net_arr_fo
      ON account_open_opp_net_arr_fo.dim_crm_account_id = user_request.dim_crm_account_id
    LEFT JOIN account_open_opp_net_arr_growth
      ON account_open_opp_net_arr_growth.dim_crm_account_id = user_request.dim_crm_account_id

    -- Opportunity Joins
    LEFT JOIN fct_crm_opportunity
      ON fct_crm_opportunity.dim_crm_opportunity_id = user_request.dim_crm_opportunity_id
    LEFT JOIN dim_order_type
      ON dim_order_type.dim_order_type_id = fct_crm_opportunity.dim_order_type_id
    LEFT JOIN dim_crm_opportunity
      ON dim_crm_opportunity.dim_crm_opportunity_id = user_request.dim_crm_opportunity_id
    LEFT JOIN opportunity_seats
      ON opportunity_seats.dim_crm_opportunity_id = user_request.dim_crm_opportunity_id
    LEFT JOIN dim_crm_user AS primary_solution_architect
      ON primary_solution_architect.dim_crm_user_id = dim_crm_opportunity.primary_solution_architect


), customer_value_scores AS (

    SELECT
      primary_key,
      CASE
        WHEN crm_account_health_score_color = 'Green'
          THEN 1
        WHEN crm_account_health_score_color = 'Yellow'
          THEN
          CASE
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 18
              THEN 1.5
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 12
              THEN 2
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) <= 12
              THEN 2.5
          END
        WHEN crm_account_health_score_color = 'Red'
          THEN
            CASE
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 18
              THEN 2
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) > 12
              THEN 3
            WHEN DATEDIFF('months', CURRENT_DATE, crm_account_next_renewal_month) <= 12
              THEN 4
          END
        ELSE 1
      END                                                                                                     AS retention_urgency_score,
      CASE
        WHEN crm_opp_probability > 60
          THEN 1
        WHEN crm_opp_probability > 39
          THEN
            CASE
              WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 6
                THEN 1.25
              WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 3
                THEN 1.5
              WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) <= 3
                THEN 2
            END
        WHEN crm_opp_probability < 40
          THEN 
          CASE
            WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 6
              THEN 1.5
            WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) > 3
              THEN 2
            WHEN DATEDIFF('months', CURRENT_DATE, crm_opp_close_date) <= 3
              THEN 2.5
          END
        ELSE 1
      END                                                                                                     AS opportunity_urgency_score,
      IFF(link_type = 'Opportunity', crm_opp_arr_basis, crm_account_arr)                                      AS arr_to_use,
      ZEROIFNULL(crm_opp_net_arr / NULLIF(ZEROIFNULL(crm_opp_net_arr) + ZEROIFNULL(arr_to_use), 0))           AS growth_percentage,
      ZEROIFNULL(arr_to_use / NULLIF(ZEROIFNULL(crm_opp_net_arr) + ZEROIFNULL(arr_to_use), 0))                AS retention_percentage,
      request_priority * growth_percentage                                                                    AS growth_priority,
      request_priority * retention_percentage                                                                 AS retention_priority,
      -- for that account's links in that opportunity - use multiple partitions
      ZEROIFNULL(growth_priority / NULLIF(SUM(growth_priority) OVER(PARTITION BY dim_crm_account_id, dim_crm_opportunity_id), 0))
                                                                                                              AS growth_priority_weighting,
      ZEROIFNULL(retention_priority / NULLIF(SUM(retention_priority) OVER(PARTITION BY dim_crm_account_id), 0))
                                                                                                              AS retention_priority_weighting,
      -- a utility column to allow sum of all epics for customer reach
      customer_reach / NULLIF(COUNT(*) OVER(PARTITION BY dim_epic_id, dim_crm_account_id), 0)                 AS customer_epic_reach,
      CASE
        WHEN link_type = 'Opportunity'
          THEN crm_opp_net_arr * growth_priority_weighting
        ELSE 0
      END                                                                                                     AS growth_score,
      retention_priority_weighting * crm_account_arr                                                          AS retention_score,
      growth_score + retention_score                                                                          AS combined_score,
      combined_score * CASE
        WHEN link_type = 'Opportunity'
          THEN opportunity_urgency_score
        ELSE retention_urgency_score
      END                                                                                                     AS priority_score
    FROM user_request_with_account_opp_attributes
    WHERE issue_epic_state_name = 'opened'
      AND (
        CASE
          WHEN link_type = 'Opportunity'
            THEN crm_opp_is_closed = FALSE
          ELSE TRUE
        END
      )

), final AS (

    SELECT
      user_request_with_account_opp_attributes.*,
      CASE
        WHEN user_request_with_account_opp_attributes.is_request_priority_empty
          THEN '[Input (Using 1 as Default)](' || user_request_with_account_opp_attributes.issue_epic_url || ')'
        ELSE request_priority::TEXT
      END                                                                            AS priority_input_url,
      CASE
        WHEN user_request_with_account_opp_attributes.link_type = 'Zendesk Ticket'
          THEN '[' || user_request_with_account_opp_attributes.link_type || '](' || user_request_with_account_opp_attributes.ticket_link || ')'
        WHEN user_request_with_account_opp_attributes.link_type = 'Opportunity'
          THEN '[' || user_request_with_account_opp_attributes.link_type || '](' || user_request_with_account_opp_attributes.crm_opportunity_link || ')'
        WHEN user_request_with_account_opp_attributes.link_type = 'Account'
          THEN '[' || user_request_with_account_opp_attributes.link_type || '](' || user_request_with_account_opp_attributes.crm_account_link || ')'
      END                                                                            AS user_request_link,
      customer_value_scores.retention_percentage                                     AS link_retention_percentage,
      customer_value_scores.growth_percentage                                        AS link_growth_percentage,
      customer_value_scores.retention_priority                                       AS link_retention_priority,
      customer_value_scores.growth_priority                                          AS link_growth_priority,
      customer_value_scores.retention_priority_weighting                             AS link_retention_priority_weighting,
      customer_value_scores.growth_priority_weighting                                AS link_growth_priority_weighting,
      customer_value_scores.retention_score                                          AS link_retention_score,
      customer_value_scores.growth_score                                             AS link_growth_score,
      customer_value_scores.combined_score                                           AS link_combined_score,
      customer_value_scores.priority_score                                           AS link_priority_score,
      link_priority_score / NULLIFZERO(issue_epic_weight)                            AS link_weighted_priority_score,
      IFF(link_weighted_priority_score IS NULL,
        '[Effort is Empty, Input Effort Here](' || user_request_with_account_opp_attributes.issue_epic_url || ')',
        link_weighted_priority_score::TEXT)                                          AS link_weighted_priority_score_input
    FROM user_request_with_account_opp_attributes
    LEFT JOIN customer_value_scores
      ON user_request_with_account_opp_attributes.primary_key = customer_value_scores.primary_key

)

SELECT
      *,
      '@jpeguero'::VARCHAR       AS created_by,
      '@lvinueza'::VARCHAR       AS updated_by,
      '2021-10-22'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final18:T26b2,{{ config(alias='sfdc_users_xf') }}

WITH source_user AS (

    SELECT 
        sfdc_users.id                   AS user_id,
        sfdc_users.user_segment__c      AS user_segment,
        sfdc_users.user_role_type__c    AS user_role_type,
        sfdc_user_roles_source.name     AS user_role_name,
        COALESCE(CAST(REPLACE(
                REPLACE(sfdc_users.hybrid__c,'Yes','1')
                ,'No','0') 
            AS INTEGER),0)              AS is_hybrid_flag
    FROM {{ source('salesforce', 'user') }} sfdc_users
    LEFT JOIN {{ ref('sfdc_user_roles_source') }} sfdc_user_roles_source
      ON sfdc_users.userroleid = sfdc_user_roles_source.id

),  base AS (
    SELECT
      edm_user.dim_crm_user_id           AS user_id,
      edm_user.user_name                 AS name,
      edm_user.department,
      edm_user.title,
      edm_user.team,
      CASE --only expose GitLab.com email addresses of internal employees
        WHEN edm_user.user_email LIKE '%gitlab.com' THEN edm_user.user_email ELSE NULL
      END                       AS user_email,
      edm_user.manager_name,
      edm_user.manager_id,
      
      CASE 
        WHEN LOWER(edm_user.crm_user_geo) IN ('amer','apac','jihu','emea','pubsec')
          THEN IFNULL(edm_user.crm_user_geo, 'Other')   
        ELSE 'Other'
      END                                                   AS user_geo,
      IFNULL(edm_user.crm_user_region, 'Other')             AS user_region,


      CASE 
        WHEN LOWER(source_user.user_segment) = 'lrg' 
          THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'mm' 
          THEN 'Mid-Market' 
        WHEN LOWER(source_user.user_segment) = 'jihu' 
          THEN 'Jihu'         
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'All'        
        ELSE
          IFNULL(source_user.user_segment, 'Other') 
      END                                                   AS final_user_segment,

      LOWER(source_user.user_segment)                       AS raw_user_segment,

        -- JK 2023-02-06 adding adjusted segment
        -- If MM / SMB and Region = META then Segment = Large
        -- If MM/SMB and Region = LATAM then Segment = Large
        -- If MM/SMB and Geo = APAC then Segment = Large
        -- Use that Adjusted Segment Field in our FY23 models
        CASE
        WHEN (LOWER(final_user_segment) = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'meta'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'latam'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_geo) = 'apac'
            THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'Large'     
        ELSE final_user_segment
        END                                            AS adjusted_user_segment,

      IFNULL(edm_user.crm_user_area, 'Other')          AS user_area,
      IFNULL(edm_user.user_role_name, 'Other')         AS role_name,
      IFNULL(edm_user.crm_user_role_type, 'Other')     AS role_type,
      edm_user.start_date,
      edm_user.is_active,
      edm_user.employee_number,

      source_user.is_hybrid_flag

    FROM {{ref('dim_crm_user')}} edm_user
    LEFT JOIN source_user
        ON edm_user.dim_crm_user_id = source_user.user_id

), consolidation AS (
    SELECT
      base.user_id,
      base.name,
      base.department,
      base.title,
      base.team,
      base.user_email,
      base.manager_name,
      base.manager_id,
      base.user_geo,
      base.user_region,
      -- NF: adjusted to account for the updates the data team ran on source
      -- Needed to adjust ALL to Large
      base.final_user_segment AS user_segment,
      base.raw_user_segment,
      base.adjusted_user_segment,
      base.user_area,
      base.role_name,
      base.role_type,
      base.start_date,
      base.is_active,
      base.is_hybrid_flag,
      base.employee_number,
     
      CASE
        WHEN LOWER(title) LIKE '%strategic account%'
           OR LOWER(title) LIKE '%account executive%'
           OR LOWER(title) LIKE '%country manager%'
           OR LOWER(title) LIKE '%public sector channel manager%'
        THEN 1
        ELSE 0
      END                                                                                          AS is_rep_flag

    FROM base

), user_based_reporting_keys AS (
    SELECT
      consolidation.*,

      -- Business Unit (X-Ray 1st hierarchy)
      -- will be replaced with the actual field
      CASE 
        WHEN LOWER(user_segment) IN ('large','pubsec','all') -- "all" segment is PubSec for ROW
            THEN 'ENTG'
        WHEN LOWER(user_region) IN ('latam','meta')
            OR LOWER(user_geo) IN ('apac')
            THEN 'ENTG'         
        WHEN LOWER(user_segment) IN ('mid-market','smb')
            THEN 'COMM'
        WHEN LOWER(user_segment) = 'jihu' THEN 'JiHu'
        ELSE 'Other'
      END AS business_unit,

      -- Sub-Business Unit (X-Ray 2nd hierarchy)
      /*
      JK 2023-02-06: sub-BU is used in lower hierarchy fields calculation (division & asm).
      Therefore when making changes to the field, make sure to understand implications on the whole key hierarchy
      */
      CASE
        WHEN LOWER(business_unit) = 'entg'
          THEN user_geo

        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'smb'
            AND LOWER(user_geo) = 'amer'
            AND LOWER(user_area) = 'lowtouch'
            ) 
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'mid-market'
            AND (LOWER(user_geo) = 'amer' 
                OR LOWER(user_geo) = 'emea')
            AND LOWER(role_type) = 'fo'
            )
          THEN 'MM First Orders'  --mid-market FO(?)
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'emea'
          THEN  'EMEA'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'amer'
          THEN 'AMER'
        ELSE 'Other'
      END AS sub_business_unit,

      -- Division (X-Ray 3rd hierarchy)
      CASE 
        WHEN LOWER(business_unit) = 'entg'
          THEN user_region

        WHEN 
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'mid-market'
          THEN 'Mid-Market'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'mid-market'         
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN 'MM First Orders'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer'
             OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'smb'
          THEN 'SMB'
        ELSE 'Other'
      END AS division,

      -- ASM (X-Ray 4th hierarchy): definition pending
      CASE
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'amer'
          THEN user_area
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND (LOWER(division) = 'dach' 
            OR LOWER(division) = 'neur' 
            OR LOWER(division) = 'seur')
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND LOWER(division) = 'meta'
          THEN user_segment 
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'apac'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) != 'sled'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) = 'sled'
          THEN user_region
        WHEN 
          LOWER(business_unit) = 'comm'
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN user_geo
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) = 'fo'
          THEN 'LowTouch FO'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) != 'fo'
          THEN 'LowTouch Pool'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          THEN user_area
        ELSE 'Other'
      END AS asm
    FROM consolidation

), final AS (

    SELECT *
    FROM user_based_reporting_keys

)

SELECT *,

    LOWER(business_unit)                                                              AS key_bu,
    LOWER(business_unit || '_' || sub_business_unit)                                  AS key_bu_subbu,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division)               AS key_bu_subbu_division,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division || '_' || asm) AS key_bu_subbu_division_asm,
    LOWER(key_bu_subbu_division_asm || '_' || role_type || '_' || TO_VARCHAR(employee_number))  AS key_sal_heatmap

FROM final19:T268b,

WITH source_user AS (

    SELECT 
        sfdc_users.id                   AS user_id,
        sfdc_users.user_segment__c      AS user_segment,
        sfdc_users.user_role_type__c    AS user_role_type,
        sfdc_user_roles_source.name     AS user_role_name,
        COALESCE(CAST(REPLACE(
                REPLACE(sfdc_users.hybrid__c,'Yes','1')
                ,'No','0') 
            AS INTEGER),0)              AS is_hybrid_flag
    FROM "RAW".salesforce_stitch.user sfdc_users
    LEFT JOIN "PREP".sfdc.sfdc_user_roles_source sfdc_user_roles_source
      ON sfdc_users.userroleid = sfdc_user_roles_source.id

),  base AS (
    SELECT
      edm_user.dim_crm_user_id           AS user_id,
      edm_user.user_name                 AS name,
      edm_user.department,
      edm_user.title,
      edm_user.team,
      CASE --only expose GitLab.com email addresses of internal employees
        WHEN edm_user.user_email LIKE '%gitlab.com' THEN edm_user.user_email ELSE NULL
      END                       AS user_email,
      edm_user.manager_name,
      edm_user.manager_id,
      
      CASE 
        WHEN LOWER(edm_user.crm_user_geo) IN ('amer','apac','jihu','emea','pubsec')
          THEN IFNULL(edm_user.crm_user_geo, 'Other')   
        ELSE 'Other'
      END                                                   AS user_geo,
      IFNULL(edm_user.crm_user_region, 'Other')             AS user_region,


      CASE 
        WHEN LOWER(source_user.user_segment) = 'lrg' 
          THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'mm' 
          THEN 'Mid-Market' 
        WHEN LOWER(source_user.user_segment) = 'jihu' 
          THEN 'Jihu'         
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'All'        
        ELSE
          IFNULL(source_user.user_segment, 'Other') 
      END                                                   AS final_user_segment,

      LOWER(source_user.user_segment)                       AS raw_user_segment,

        -- JK 2023-02-06 adding adjusted segment
        -- If MM / SMB and Region = META then Segment = Large
        -- If MM/SMB and Region = LATAM then Segment = Large
        -- If MM/SMB and Geo = APAC then Segment = Large
        -- Use that Adjusted Segment Field in our FY23 models
        CASE
        WHEN (LOWER(final_user_segment) = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'meta'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'latam'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_geo) = 'apac'
            THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'Large'     
        ELSE final_user_segment
        END                                            AS adjusted_user_segment,

      IFNULL(edm_user.crm_user_area, 'Other')          AS user_area,
      IFNULL(edm_user.user_role_name, 'Other')         AS role_name,
      IFNULL(edm_user.crm_user_role_type, 'Other')     AS role_type,
      edm_user.start_date,
      edm_user.is_active,
      edm_user.employee_number,

      source_user.is_hybrid_flag

    FROM "PROD".common.dim_crm_user edm_user
    LEFT JOIN source_user
        ON edm_user.dim_crm_user_id = source_user.user_id

), consolidation AS (
    SELECT
      base.user_id,
      base.name,
      base.department,
      base.title,
      base.team,
      base.user_email,
      base.manager_name,
      base.manager_id,
      base.user_geo,
      base.user_region,
      -- NF: adjusted to account for the updates the data team ran on source
      -- Needed to adjust ALL to Large
      base.final_user_segment AS user_segment,
      base.raw_user_segment,
      base.adjusted_user_segment,
      base.user_area,
      base.role_name,
      base.role_type,
      base.start_date,
      base.is_active,
      base.is_hybrid_flag,
      base.employee_number,
     
      CASE
        WHEN LOWER(title) LIKE '%strategic account%'
           OR LOWER(title) LIKE '%account executive%'
           OR LOWER(title) LIKE '%country manager%'
           OR LOWER(title) LIKE '%public sector channel manager%'
        THEN 1
        ELSE 0
      END                                                                                          AS is_rep_flag

    FROM base

), user_based_reporting_keys AS (
    SELECT
      consolidation.*,

      -- Business Unit (X-Ray 1st hierarchy)
      -- will be replaced with the actual field
      CASE 
        WHEN LOWER(user_segment) IN ('large','pubsec','all') -- "all" segment is PubSec for ROW
            THEN 'ENTG'
        WHEN LOWER(user_region) IN ('latam','meta')
            OR LOWER(user_geo) IN ('apac')
            THEN 'ENTG'         
        WHEN LOWER(user_segment) IN ('mid-market','smb')
            THEN 'COMM'
        WHEN LOWER(user_segment) = 'jihu' THEN 'JiHu'
        ELSE 'Other'
      END AS business_unit,

      -- Sub-Business Unit (X-Ray 2nd hierarchy)
      /*
      JK 2023-02-06: sub-BU is used in lower hierarchy fields calculation (division & asm).
      Therefore when making changes to the field, make sure to understand implications on the whole key hierarchy
      */
      CASE
        WHEN LOWER(business_unit) = 'entg'
          THEN user_geo

        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'smb'
            AND LOWER(user_geo) = 'amer'
            AND LOWER(user_area) = 'lowtouch'
            ) 
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'mid-market'
            AND (LOWER(user_geo) = 'amer' 
                OR LOWER(user_geo) = 'emea')
            AND LOWER(role_type) = 'fo'
            )
          THEN 'MM First Orders'  --mid-market FO(?)
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'emea'
          THEN  'EMEA'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'amer'
          THEN 'AMER'
        ELSE 'Other'
      END AS sub_business_unit,

      -- Division (X-Ray 3rd hierarchy)
      CASE 
        WHEN LOWER(business_unit) = 'entg'
          THEN user_region

        WHEN 
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'mid-market'
          THEN 'Mid-Market'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'mid-market'         
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN 'MM First Orders'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer'
             OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'smb'
          THEN 'SMB'
        ELSE 'Other'
      END AS division,

      -- ASM (X-Ray 4th hierarchy): definition pending
      CASE
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'amer'
          THEN user_area
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND (LOWER(division) = 'dach' 
            OR LOWER(division) = 'neur' 
            OR LOWER(division) = 'seur')
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND LOWER(division) = 'meta'
          THEN user_segment 
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'apac'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) != 'sled'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) = 'sled'
          THEN user_region
        WHEN 
          LOWER(business_unit) = 'comm'
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN user_geo
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) = 'fo'
          THEN 'LowTouch FO'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) != 'fo'
          THEN 'LowTouch Pool'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          THEN user_area
        ELSE 'Other'
      END AS asm
    FROM consolidation

), final AS (

    SELECT *
    FROM user_based_reporting_keys

)

SELECT *,

    LOWER(business_unit)                                                              AS key_bu,
    LOWER(business_unit || '_' || sub_business_unit)                                  AS key_bu_subbu,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division)               AS key_bu_subbu_division,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division || '_' || asm) AS key_bu_subbu_division_asm,
    LOWER(key_bu_subbu_division_asm || '_' || role_type || '_' || TO_VARCHAR(employee_number))  AS key_sal_heatmap

FROM final1a:T1c77,{{ simple_cte([
    ('dim_crm_account','dim_crm_account'),
    ('mart_crm_opportunity','mart_crm_opportunity'),
    ('mart_crm_person','mart_crm_person'),
    ('dim_crm_user','dim_crm_user')
    
]) }}

, upa_base AS (
  
    SELECT 
      dim_parent_crm_account_id,
      dim_crm_account_id
    FROM dim_crm_account
  
  ), first_order_opps AS (

    SELECT *
    FROM mart_crm_opportunity
    WHERE is_new_logo_first_order = true
    
  ), accounts_with_first_order_opps AS (

    SELECT
      upa_base.dim_parent_crm_account_id,
      upa_base.dim_crm_account_id,
      first_order_opps.dim_crm_opportunity_id,
      False AS is_first_order_available
    FROM upa_base 
    LEFT JOIN first_order_opps 
      ON upa_base.dim_crm_account_id=first_order_opps.dim_crm_account_id
    WHERE dim_crm_opportunity_id IS NOT null
      
  ), final AS (

    SELECT 
      mart_crm_person.dim_crm_person_id,
      mart_crm_person.dim_crm_user_id,
      mart_crm_person.dim_crm_account_id,
      mart_crm_person.mql_date_first_id,
      mart_crm_person.mql_date_first,
      mart_crm_person.mql_datetime_first,
      mart_crm_person.mql_datetime_first_pt,
      mart_crm_person.mql_date_first_pt,
      mart_crm_person.mql_month_first,
      mart_crm_person.mql_month_first_pt,
      mart_crm_person.mql_date_lastest,
      mart_crm_person.mql_datetime_latest,
      mart_crm_person.mql_datetime_latest_pt,
      mart_crm_person.mql_date_lastest_pt,
      mart_crm_person.mql_month_latest,
      mart_crm_person.mql_month_latest_pt,
      mart_crm_person.created_date,
      mart_crm_person.created_date_pt,
      mart_crm_person.created_month,
      mart_crm_person.created_month_pt,
      mart_crm_person.lead_created_date,
      mart_crm_person.lead_created_date_pt,
      mart_crm_person.lead_created_month,
      mart_crm_person.lead_created_month_pt,
      mart_crm_person.contact_created_date,
      mart_crm_person.contact_created_date_pt,
      mart_crm_person.contact_created_month,
      mart_crm_person.contact_created_month_pt,
      mart_crm_person.true_inquiry_date,
      mart_crm_person.inquiry_date,
      mart_crm_person.inquiry_date_pt,
      mart_crm_person.inquiry_month,
      mart_crm_person.inquiry_month_pt,      
      mart_crm_person.inquiry_inferred_date,
      mart_crm_person.inquiry_inferred_datetime,
      mart_crm_person.inquiry_inferred_date_pt,
      mart_crm_person.inquiry_inferred_month,
      mart_crm_person.inquiry_inferred_month_pt,      
      mart_crm_person.accepted_date,
      mart_crm_person.accepted_datetime,
      mart_crm_person.accepted_datetime_pt,
      mart_crm_person.accepted_date_pt,
      mart_crm_person.accepted_month,
      mart_crm_person.accepted_month_pt,
      mart_crm_person.mql_sfdc_date,
      mart_crm_person.mql_sfdc_datetime,
      mart_crm_person.mql_sfdc_date_pt,
      mart_crm_person.mql_sfdc_month,
      mart_crm_person.mql_sfdc_month_pt,   
      mart_crm_person.mql_inferred_date,
      mart_crm_person.mql_inferred_datetime,
      mart_crm_person.mql_inferred_date_pt,
      mart_crm_person.mql_inferred_month,
      mart_crm_person.mql_inferred_month_pt,
      mart_crm_person.qualifying_date,
      mart_crm_person.qualifying_date_pt,
      mart_crm_person.qualifying_month,
      mart_crm_person.qualifying_month_pt,
      mart_crm_person.qualified_date,
      mart_crm_person.qualified_date_pt,
      mart_crm_person.qualified_month,
      mart_crm_person.qualified_month_pt,
      mart_crm_person.converted_date,
      mart_crm_person.converted_date_pt,
      mart_crm_person.converted_month,
      mart_crm_person.converted_month_pt,
      mart_crm_person.worked_date,
      mart_crm_person.worked_date_pt,
      mart_crm_person.worked_month,
      mart_crm_person.worked_month_pt,
      mart_crm_person.email_domain,
      mart_crm_person.email_domain_type,
      mart_crm_person.email_hash,
      mart_crm_person.status,
      mart_crm_person.lead_source,
      mart_crm_person.source_buckets,
      mart_crm_person.crm_partner_id,
      mart_crm_person.sequence_step_type,
      mart_crm_person.account_demographics_geo AS region,
      mart_crm_person.state,
      mart_crm_person.country,
      mart_crm_person.name_of_active_sequence,
      mart_crm_person.sequence_task_due_date,
      mart_crm_person.sequence_status,
      mart_crm_person.last_activity_date,
      mart_crm_person.is_actively_being_sequenced,
      mart_crm_person.bizible_marketing_channel_path_name,
      mart_crm_person.sales_segment_name,
      mart_crm_person.sales_segment_grouped,
      mart_crm_person.marketo_last_interesting_moment,
      mart_crm_person.marketo_last_interesting_moment_date,
      mart_crm_person.outreach_step_number,
      mart_crm_person.matched_account_owner_role,
      mart_crm_person.matched_account_account_owner_name,
      mart_crm_person.matched_account_sdr_assigned,
      mart_crm_person.matched_account_type,
      mart_crm_person.matched_account_gtm_strategy,
      mart_crm_person.account_demographics_sales_segment,
      mart_crm_person.account_demographics_geo,
      mart_crm_person.account_demographics_region,
      mart_crm_person.account_demographics_area,
      mart_crm_person.account_demographics_territory,
      mart_crm_person.account_demographics_employee_count,
      mart_crm_person.account_demographics_max_family_employee,
      mart_crm_person.account_demographics_upa_country,
      mart_crm_person.account_demographics_upa_state,  
      mart_crm_person.account_demographics_upa_city,
      mart_crm_person.account_demographics_upa_street,
      mart_crm_person.account_demographics_upa_postal_code,
      mart_crm_person.account_demographics_sales_segment_grouped,
      mart_crm_person.account_demographics_segment_region_grouped,
      mart_crm_person.is_mql,
      mart_crm_person.is_inquiry,
      mart_crm_person.is_lead_source_trial,
      mart_crm_opportunity.dim_crm_opportunity_id,
      mart_crm_opportunity.created_date AS opportunity_created_date,
      mart_crm_opportunity.sales_accepted_date,
      mart_crm_opportunity.close_date,
      mart_crm_opportunity.sales_qualified_source_name, 
      mart_crm_opportunity.is_won,
      mart_crm_opportunity.net_arr,
      mart_crm_opportunity.is_edu_oss,
      mart_crm_opportunity.stage_name,
      mart_crm_opportunity.is_sao,
      dim_crm_user.crm_user_sales_segment AS user_sales_segment,
      CASE WHEN is_first_order_available = False THEN mart_crm_opportunity.order_type
           ELSE '1. New - First Order'
      END AS person_order_type,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      dim_crm_user.crm_user_geo
    FROM mart_crm_person
    LEFT JOIN mart_crm_opportunity 
      ON mart_crm_person.dim_crm_account_id=mart_crm_opportunity.dim_crm_account_id
    LEFT JOIN dim_crm_user 
      ON mart_crm_person.dim_crm_user_id=dim_crm_user.dim_crm_user_id
    LEFT JOIN upa_base 
      ON mart_crm_person.dim_crm_account_id=upa_base.dim_crm_account_id
    LEFT JOIN accounts_with_first_order_opps 
      ON upa_base.dim_parent_crm_account_id = accounts_with_first_order_opps.dim_parent_crm_account_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@rkohnke",
    updated_by="@rkohnke",
    created_date="2022-01-20",
    updated_date="2022-10-07",
  ) }}1b:T1e1b,

WITH dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), mart_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_crm_opportunity

), mart_crm_person AS (

    SELECT * 
    FROM "PROD".common_mart_marketing.mart_crm_person

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

)

, upa_base AS (
  
    SELECT 
      dim_parent_crm_account_id,
      dim_crm_account_id
    FROM dim_crm_account
  
  ), first_order_opps AS (

    SELECT *
    FROM mart_crm_opportunity
    WHERE is_new_logo_first_order = true
    
  ), accounts_with_first_order_opps AS (

    SELECT
      upa_base.dim_parent_crm_account_id,
      upa_base.dim_crm_account_id,
      first_order_opps.dim_crm_opportunity_id,
      False AS is_first_order_available
    FROM upa_base 
    LEFT JOIN first_order_opps 
      ON upa_base.dim_crm_account_id=first_order_opps.dim_crm_account_id
    WHERE dim_crm_opportunity_id IS NOT null
      
  ), final AS (

    SELECT 
      mart_crm_person.dim_crm_person_id,
      mart_crm_person.dim_crm_user_id,
      mart_crm_person.dim_crm_account_id,
      mart_crm_person.mql_date_first_id,
      mart_crm_person.mql_date_first,
      mart_crm_person.mql_datetime_first,
      mart_crm_person.mql_datetime_first_pt,
      mart_crm_person.mql_date_first_pt,
      mart_crm_person.mql_month_first,
      mart_crm_person.mql_month_first_pt,
      mart_crm_person.mql_date_lastest,
      mart_crm_person.mql_datetime_latest,
      mart_crm_person.mql_datetime_latest_pt,
      mart_crm_person.mql_date_lastest_pt,
      mart_crm_person.mql_month_latest,
      mart_crm_person.mql_month_latest_pt,
      mart_crm_person.created_date,
      mart_crm_person.created_date_pt,
      mart_crm_person.created_month,
      mart_crm_person.created_month_pt,
      mart_crm_person.lead_created_date,
      mart_crm_person.lead_created_date_pt,
      mart_crm_person.lead_created_month,
      mart_crm_person.lead_created_month_pt,
      mart_crm_person.contact_created_date,
      mart_crm_person.contact_created_date_pt,
      mart_crm_person.contact_created_month,
      mart_crm_person.contact_created_month_pt,
      mart_crm_person.true_inquiry_date,
      mart_crm_person.inquiry_date,
      mart_crm_person.inquiry_date_pt,
      mart_crm_person.inquiry_month,
      mart_crm_person.inquiry_month_pt,      
      mart_crm_person.inquiry_inferred_date,
      mart_crm_person.inquiry_inferred_datetime,
      mart_crm_person.inquiry_inferred_date_pt,
      mart_crm_person.inquiry_inferred_month,
      mart_crm_person.inquiry_inferred_month_pt,      
      mart_crm_person.accepted_date,
      mart_crm_person.accepted_datetime,
      mart_crm_person.accepted_datetime_pt,
      mart_crm_person.accepted_date_pt,
      mart_crm_person.accepted_month,
      mart_crm_person.accepted_month_pt,
      mart_crm_person.mql_sfdc_date,
      mart_crm_person.mql_sfdc_datetime,
      mart_crm_person.mql_sfdc_date_pt,
      mart_crm_person.mql_sfdc_month,
      mart_crm_person.mql_sfdc_month_pt,   
      mart_crm_person.mql_inferred_date,
      mart_crm_person.mql_inferred_datetime,
      mart_crm_person.mql_inferred_date_pt,
      mart_crm_person.mql_inferred_month,
      mart_crm_person.mql_inferred_month_pt,
      mart_crm_person.qualifying_date,
      mart_crm_person.qualifying_date_pt,
      mart_crm_person.qualifying_month,
      mart_crm_person.qualifying_month_pt,
      mart_crm_person.qualified_date,
      mart_crm_person.qualified_date_pt,
      mart_crm_person.qualified_month,
      mart_crm_person.qualified_month_pt,
      mart_crm_person.converted_date,
      mart_crm_person.converted_date_pt,
      mart_crm_person.converted_month,
      mart_crm_person.converted_month_pt,
      mart_crm_person.worked_date,
      mart_crm_person.worked_date_pt,
      mart_crm_person.worked_month,
      mart_crm_person.worked_month_pt,
      mart_crm_person.email_domain,
      mart_crm_person.email_domain_type,
      mart_crm_person.email_hash,
      mart_crm_person.status,
      mart_crm_person.lead_source,
      mart_crm_person.source_buckets,
      mart_crm_person.crm_partner_id,
      mart_crm_person.sequence_step_type,
      mart_crm_person.account_demographics_geo AS region,
      mart_crm_person.state,
      mart_crm_person.country,
      mart_crm_person.name_of_active_sequence,
      mart_crm_person.sequence_task_due_date,
      mart_crm_person.sequence_status,
      mart_crm_person.last_activity_date,
      mart_crm_person.is_actively_being_sequenced,
      mart_crm_person.bizible_marketing_channel_path_name,
      mart_crm_person.sales_segment_name,
      mart_crm_person.sales_segment_grouped,
      mart_crm_person.marketo_last_interesting_moment,
      mart_crm_person.marketo_last_interesting_moment_date,
      mart_crm_person.outreach_step_number,
      mart_crm_person.matched_account_owner_role,
      mart_crm_person.matched_account_account_owner_name,
      mart_crm_person.matched_account_sdr_assigned,
      mart_crm_person.matched_account_type,
      mart_crm_person.matched_account_gtm_strategy,
      mart_crm_person.account_demographics_sales_segment,
      mart_crm_person.account_demographics_geo,
      mart_crm_person.account_demographics_region,
      mart_crm_person.account_demographics_area,
      mart_crm_person.account_demographics_territory,
      mart_crm_person.account_demographics_employee_count,
      mart_crm_person.account_demographics_max_family_employee,
      mart_crm_person.account_demographics_upa_country,
      mart_crm_person.account_demographics_upa_state,  
      mart_crm_person.account_demographics_upa_city,
      mart_crm_person.account_demographics_upa_street,
      mart_crm_person.account_demographics_upa_postal_code,
      mart_crm_person.account_demographics_sales_segment_grouped,
      mart_crm_person.account_demographics_segment_region_grouped,
      mart_crm_person.is_mql,
      mart_crm_person.is_inquiry,
      mart_crm_person.is_lead_source_trial,
      mart_crm_opportunity.dim_crm_opportunity_id,
      mart_crm_opportunity.created_date AS opportunity_created_date,
      mart_crm_opportunity.sales_accepted_date,
      mart_crm_opportunity.close_date,
      mart_crm_opportunity.sales_qualified_source_name, 
      mart_crm_opportunity.is_won,
      mart_crm_opportunity.net_arr,
      mart_crm_opportunity.is_edu_oss,
      mart_crm_opportunity.stage_name,
      mart_crm_opportunity.is_sao,
      dim_crm_user.crm_user_sales_segment AS user_sales_segment,
      CASE WHEN is_first_order_available = False THEN mart_crm_opportunity.order_type
           ELSE '1. New - First Order'
      END AS person_order_type,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      dim_crm_user.crm_user_geo
    FROM mart_crm_person
    LEFT JOIN mart_crm_opportunity 
      ON mart_crm_person.dim_crm_account_id=mart_crm_opportunity.dim_crm_account_id
    LEFT JOIN dim_crm_user 
      ON mart_crm_person.dim_crm_user_id=dim_crm_user.dim_crm_user_id
    LEFT JOIN upa_base 
      ON mart_crm_person.dim_crm_account_id=upa_base.dim_crm_account_id
    LEFT JOIN accounts_with_first_order_opps 
      ON upa_base.dim_parent_crm_account_id = accounts_with_first_order_opps.dim_parent_crm_account_id

)

SELECT
      *,
      '@rkohnke'::VARCHAR       AS created_by,
      '@rkohnke'::VARCHAR       AS updated_by,
      '2022-01-20'::DATE        AS model_created_date,
      '2022-10-07'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1c:T23c1,{{ simple_cte([
    ('dim_crm_account', 'dim_crm_account'),
    ('fct_crm_account', 'fct_crm_account'),
    ('dim_crm_user', 'dim_crm_user')
    ])

}},

 final AS ( 

    SELECT
       --primary key
      dim_crm_account.dim_crm_account_id,

      --surrogate keys
      fct_crm_account.dim_parent_crm_account_id,
      fct_crm_account.dim_crm_user_id,
      fct_crm_account.merged_to_account_id,
      fct_crm_account.record_type_id,
      fct_crm_account.crm_account_owner_id,
      fct_crm_account.proposed_crm_account_owner_id,
      fct_crm_account.technical_account_manager_id,
      fct_crm_account.master_record_id,
      fct_crm_account.dim_crm_person_primary_contact_id,

      --account people
      dim_crm_account.crm_account_owner,
      dim_crm_account.account_owner,
      dim_crm_account.proposed_crm_account_owner,
      dim_crm_account.technical_account_manager,
      dim_crm_account.owner_role,
      dim_crm_account.user_role_type,

      --crm account owner attributes
      crm_account_owner.crm_user_geo AS crm_account_owner_geo,
      crm_account_owner.crm_user_region AS crm_account_owner_region,
      crm_account_owner.crm_user_area AS crm_account_owner_area,

      ----ultimate parent crm account info
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_business_unit,
      dim_crm_account.parent_crm_account_geo,
      dim_crm_account.parent_crm_account_region,
      dim_crm_account.parent_crm_account_area,
      dim_crm_account.parent_crm_account_territory,
      dim_crm_account.parent_crm_account_role_type,
      dim_crm_account.parent_crm_account_max_family_employee,
      dim_crm_account.parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_upa_state,
      dim_crm_account.parent_crm_account_upa_city,
      dim_crm_account.parent_crm_account_upa_street,
      dim_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_employee_count,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_billing_country_code,
      dim_crm_account.crm_account_type,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_sub_industry,
      dim_crm_account.crm_account_employee_count_band,
      dim_crm_account.partner_vat_tax_id,
      dim_crm_account.account_manager,
      dim_crm_account.business_development_rep,
      dim_crm_account.dedicated_service_engineer,
      dim_crm_account.account_tier,
      dim_crm_account.account_tier_notes,
      dim_crm_account.license_utilization,
      dim_crm_account.support_level,
      dim_crm_account.named_account,
      dim_crm_account.billing_postal_code,
      dim_crm_account.partner_type,
      dim_crm_account.partner_status,
      dim_crm_account.gitlab_customer_success_project,
      dim_crm_account.demandbase_account_list,
      dim_crm_account.demandbase_intent,
      dim_crm_account.demandbase_page_views,
      dim_crm_account.demandbase_score,
      dim_crm_account.demandbase_sessions,
      dim_crm_account.demandbase_trending_offsite_intent,
      dim_crm_account.demandbase_trending_onsite_engagement,
      dim_crm_account.is_locally_managed_account,
      dim_crm_account.is_strategic_account,
      dim_crm_account.partner_track,
      dim_crm_account.partners_partner_type,
      dim_crm_account.gitlab_partner_program,
      dim_crm_account.zoom_info_company_name,
      dim_crm_account.zoom_info_company_revenue,
      dim_crm_account.zoom_info_company_employee_count,
      dim_crm_account.zoom_info_company_industry,
      dim_crm_account.zoom_info_company_city,
      dim_crm_account.zoom_info_company_state_province,
      dim_crm_account.zoom_info_company_country,
      dim_crm_account.zoominfo_account_phone,
      dim_crm_account.account_phone,
      dim_crm_account.abm_tier,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.partner_account_iban_number,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_zi_technologies,
      dim_crm_account.crm_account_zoom_info_website,
      dim_crm_account.crm_account_zoom_info_company_other_domains,
      dim_crm_account.crm_account_zoom_info_dozisf_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_name,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      dim_crm_account.forbes_2000_rank,
      dim_crm_account.sales_development_rep,
      dim_crm_account.admin_manual_source_number_of_employees,
      dim_crm_account.admin_manual_source_account_address,
      dim_crm_account.eoa_sentiment,
      dim_crm_account.gs_health_user_engagement,
      dim_crm_account.gs_health_cd,
      dim_crm_account.gs_health_devsecops,
      dim_crm_account.gs_health_ci,
      dim_crm_account.gs_health_scm,
      dim_crm_account.risk_impact,
      dim_crm_account.risk_reason,
      dim_crm_account.last_timeline_at_risk_update,
      dim_crm_account.last_at_risk_update_comments,
      dim_crm_account.bdr_prospecting_status,

      --degenerative dimensions
      dim_crm_account.is_sdr_target_account,
      dim_crm_account.is_key_account,
      dim_crm_account.is_reseller,
      dim_crm_account.is_jihu_account,
      dim_crm_account.is_first_order_available,
      dim_crm_account.is_excluded_from_zoom_info_enrich,
      dim_crm_account.is_zi_jenkins_present,
      dim_crm_account.is_zi_svn_present,
      dim_crm_account.is_zi_tortoise_svn_present,
      dim_crm_account.is_zi_gcp_present,
      dim_crm_account.is_zi_atlassian_present,
      dim_crm_account.is_zi_github_present,
      dim_crm_account.is_zi_github_enterprise_present,
      dim_crm_account.is_zi_aws_present,
      dim_crm_account.is_zi_kubernetes_present,
      dim_crm_account.is_zi_apache_subversion_present,
      dim_crm_account.is_zi_apache_subversion_svn_present,
      dim_crm_account.is_zi_hashicorp_present,
      dim_crm_account.is_zi_aws_cloud_trail_present,
      dim_crm_account.is_zi_circle_ci_present,
      dim_crm_account.is_zi_bit_bucket_present,

      --dates
      dim_crm_account.crm_account_created_date,
      dim_crm_account.abm_tier_1_date,
      dim_crm_account.abm_tier_2_date,
      dim_crm_account.abm_tier_3_date,
      dim_crm_account.gtm_acceleration_date,
      dim_crm_account.gtm_account_based_date,
      dim_crm_account.gtm_account_centric_date,
      dim_crm_account.partners_signed_contract_date,
      dim_crm_account.technical_account_manager_date,
      dim_crm_account.next_renewal_date,
      dim_crm_account.customer_since_date,
      dim_crm_account.gs_first_value_date,
      dim_crm_account.gs_last_csm_activity_date,

      --measures
      fct_crm_account.count_active_subscription_charges,
      fct_crm_account.count_active_subscriptions,
      fct_crm_account.count_billing_accounts,
      fct_crm_account.count_licensed_users,
      fct_crm_account.count_of_new_business_won_opportunities,
      fct_crm_account.count_open_renewal_opportunities,
      fct_crm_account.count_opportunities,
      fct_crm_account.count_products_purchased,
      fct_crm_account.count_won_opportunities,
      fct_crm_account.count_concurrent_ee_subscriptions,
      fct_crm_account.count_ce_instances,
      fct_crm_account.count_active_ce_users,
      fct_crm_account.count_open_opportunities,
      fct_crm_account.count_using_ce,
      fct_crm_account.parent_crm_account_lam,
      fct_crm_account.parent_crm_account_lam_dev_count,
      fct_crm_account.carr_this_account,
      fct_crm_account.carr_account_family,
      fct_crm_account.potential_users,
      fct_crm_account.number_of_licenses_this_account,
      fct_crm_account.crm_account_zoom_info_number_of_developers,
      fct_crm_account.crm_account_zoom_info_total_funding,
      fct_crm_account.decision_maker_count_linkedin,
      fct_crm_account.number_of_employees,

      --metadata
      fct_crm_account.created_by_id,
      dim_crm_account.created_by_name,
      fct_crm_account.last_modified_by_id,
      dim_crm_account.last_modified_by_name,
      fct_crm_account.last_modified_date_id,
      dim_crm_account.last_modified_date,
      fct_crm_account.last_activity_date_id,
      dim_crm_account.last_activity_date,
      dim_crm_account.is_deleted

      FROM dim_crm_account
      INNER JOIN fct_crm_account
        ON dim_crm_account.dim_crm_account_id = fct_crm_account.dim_crm_account_id
      LEFT JOIN dim_crm_user crm_account_owner
        ON fct_crm_account.crm_account_owner_id = crm_account_owner.dim_crm_user_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@michellecooper",
    updated_by="@lisvinueza",
    created_date="2022-08-10",
    updated_date="2023-05-21"
) }}1d:T2527,

WITH dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), fct_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

),

 final AS ( 

    SELECT
       --primary key
      dim_crm_account.dim_crm_account_id,

      --surrogate keys
      fct_crm_account.dim_parent_crm_account_id,
      fct_crm_account.dim_crm_user_id,
      fct_crm_account.merged_to_account_id,
      fct_crm_account.record_type_id,
      fct_crm_account.crm_account_owner_id,
      fct_crm_account.proposed_crm_account_owner_id,
      fct_crm_account.technical_account_manager_id,
      fct_crm_account.master_record_id,
      fct_crm_account.dim_crm_person_primary_contact_id,

      --account people
      dim_crm_account.crm_account_owner,
      dim_crm_account.account_owner,
      dim_crm_account.proposed_crm_account_owner,
      dim_crm_account.technical_account_manager,
      dim_crm_account.owner_role,
      dim_crm_account.user_role_type,

      --crm account owner attributes
      crm_account_owner.crm_user_geo AS crm_account_owner_geo,
      crm_account_owner.crm_user_region AS crm_account_owner_region,
      crm_account_owner.crm_user_area AS crm_account_owner_area,

      ----ultimate parent crm account info
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_business_unit,
      dim_crm_account.parent_crm_account_geo,
      dim_crm_account.parent_crm_account_region,
      dim_crm_account.parent_crm_account_area,
      dim_crm_account.parent_crm_account_territory,
      dim_crm_account.parent_crm_account_role_type,
      dim_crm_account.parent_crm_account_max_family_employee,
      dim_crm_account.parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_upa_state,
      dim_crm_account.parent_crm_account_upa_city,
      dim_crm_account.parent_crm_account_upa_street,
      dim_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_employee_count,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_billing_country_code,
      dim_crm_account.crm_account_type,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_sub_industry,
      dim_crm_account.crm_account_employee_count_band,
      dim_crm_account.partner_vat_tax_id,
      dim_crm_account.account_manager,
      dim_crm_account.business_development_rep,
      dim_crm_account.dedicated_service_engineer,
      dim_crm_account.account_tier,
      dim_crm_account.account_tier_notes,
      dim_crm_account.license_utilization,
      dim_crm_account.support_level,
      dim_crm_account.named_account,
      dim_crm_account.billing_postal_code,
      dim_crm_account.partner_type,
      dim_crm_account.partner_status,
      dim_crm_account.gitlab_customer_success_project,
      dim_crm_account.demandbase_account_list,
      dim_crm_account.demandbase_intent,
      dim_crm_account.demandbase_page_views,
      dim_crm_account.demandbase_score,
      dim_crm_account.demandbase_sessions,
      dim_crm_account.demandbase_trending_offsite_intent,
      dim_crm_account.demandbase_trending_onsite_engagement,
      dim_crm_account.is_locally_managed_account,
      dim_crm_account.is_strategic_account,
      dim_crm_account.partner_track,
      dim_crm_account.partners_partner_type,
      dim_crm_account.gitlab_partner_program,
      dim_crm_account.zoom_info_company_name,
      dim_crm_account.zoom_info_company_revenue,
      dim_crm_account.zoom_info_company_employee_count,
      dim_crm_account.zoom_info_company_industry,
      dim_crm_account.zoom_info_company_city,
      dim_crm_account.zoom_info_company_state_province,
      dim_crm_account.zoom_info_company_country,
      dim_crm_account.zoominfo_account_phone,
      dim_crm_account.account_phone,
      dim_crm_account.abm_tier,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.partner_account_iban_number,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_zi_technologies,
      dim_crm_account.crm_account_zoom_info_website,
      dim_crm_account.crm_account_zoom_info_company_other_domains,
      dim_crm_account.crm_account_zoom_info_dozisf_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_name,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      dim_crm_account.forbes_2000_rank,
      dim_crm_account.sales_development_rep,
      dim_crm_account.admin_manual_source_number_of_employees,
      dim_crm_account.admin_manual_source_account_address,
      dim_crm_account.eoa_sentiment,
      dim_crm_account.gs_health_user_engagement,
      dim_crm_account.gs_health_cd,
      dim_crm_account.gs_health_devsecops,
      dim_crm_account.gs_health_ci,
      dim_crm_account.gs_health_scm,
      dim_crm_account.risk_impact,
      dim_crm_account.risk_reason,
      dim_crm_account.last_timeline_at_risk_update,
      dim_crm_account.last_at_risk_update_comments,
      dim_crm_account.bdr_prospecting_status,

      --degenerative dimensions
      dim_crm_account.is_sdr_target_account,
      dim_crm_account.is_key_account,
      dim_crm_account.is_reseller,
      dim_crm_account.is_jihu_account,
      dim_crm_account.is_first_order_available,
      dim_crm_account.is_excluded_from_zoom_info_enrich,
      dim_crm_account.is_zi_jenkins_present,
      dim_crm_account.is_zi_svn_present,
      dim_crm_account.is_zi_tortoise_svn_present,
      dim_crm_account.is_zi_gcp_present,
      dim_crm_account.is_zi_atlassian_present,
      dim_crm_account.is_zi_github_present,
      dim_crm_account.is_zi_github_enterprise_present,
      dim_crm_account.is_zi_aws_present,
      dim_crm_account.is_zi_kubernetes_present,
      dim_crm_account.is_zi_apache_subversion_present,
      dim_crm_account.is_zi_apache_subversion_svn_present,
      dim_crm_account.is_zi_hashicorp_present,
      dim_crm_account.is_zi_aws_cloud_trail_present,
      dim_crm_account.is_zi_circle_ci_present,
      dim_crm_account.is_zi_bit_bucket_present,

      --dates
      dim_crm_account.crm_account_created_date,
      dim_crm_account.abm_tier_1_date,
      dim_crm_account.abm_tier_2_date,
      dim_crm_account.abm_tier_3_date,
      dim_crm_account.gtm_acceleration_date,
      dim_crm_account.gtm_account_based_date,
      dim_crm_account.gtm_account_centric_date,
      dim_crm_account.partners_signed_contract_date,
      dim_crm_account.technical_account_manager_date,
      dim_crm_account.next_renewal_date,
      dim_crm_account.customer_since_date,
      dim_crm_account.gs_first_value_date,
      dim_crm_account.gs_last_csm_activity_date,

      --measures
      fct_crm_account.count_active_subscription_charges,
      fct_crm_account.count_active_subscriptions,
      fct_crm_account.count_billing_accounts,
      fct_crm_account.count_licensed_users,
      fct_crm_account.count_of_new_business_won_opportunities,
      fct_crm_account.count_open_renewal_opportunities,
      fct_crm_account.count_opportunities,
      fct_crm_account.count_products_purchased,
      fct_crm_account.count_won_opportunities,
      fct_crm_account.count_concurrent_ee_subscriptions,
      fct_crm_account.count_ce_instances,
      fct_crm_account.count_active_ce_users,
      fct_crm_account.count_open_opportunities,
      fct_crm_account.count_using_ce,
      fct_crm_account.parent_crm_account_lam,
      fct_crm_account.parent_crm_account_lam_dev_count,
      fct_crm_account.carr_this_account,
      fct_crm_account.carr_account_family,
      fct_crm_account.potential_users,
      fct_crm_account.number_of_licenses_this_account,
      fct_crm_account.crm_account_zoom_info_number_of_developers,
      fct_crm_account.crm_account_zoom_info_total_funding,
      fct_crm_account.decision_maker_count_linkedin,
      fct_crm_account.number_of_employees,

      --metadata
      fct_crm_account.created_by_id,
      dim_crm_account.created_by_name,
      fct_crm_account.last_modified_by_id,
      dim_crm_account.last_modified_by_name,
      fct_crm_account.last_modified_date_id,
      dim_crm_account.last_modified_date,
      fct_crm_account.last_activity_date_id,
      dim_crm_account.last_activity_date,
      dim_crm_account.is_deleted

      FROM dim_crm_account
      INNER JOIN fct_crm_account
        ON dim_crm_account.dim_crm_account_id = fct_crm_account.dim_crm_account_id
      LEFT JOIN dim_crm_user crm_account_owner
        ON fct_crm_account.crm_account_owner_id = crm_account_owner.dim_crm_user_id

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2022-08-10'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1e:T2f5a,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{{ simple_cte([
    ('dim_amendment','dim_amendment_central_sandbox'),
    ('dim_billing_account','dim_billing_account_central_sandbox'),
    ('dim_charge','dim_charge_central_sandbox'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_product_detail','dim_product_detail_central_sandbox'),
    ('dim_subscription','dim_subscription_central_sandbox'),
    ('dim_crm_user','dim_crm_user'),
    ('fct_charge','fct_charge_central_sandbox')
]) }}

, mart_charge AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings

    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'
    ORDER BY dim_crm_account.dim_parent_crm_account_id, dim_crm_account.dim_crm_account_id, fct_charge.subscription_name,
      fct_charge.subscription_version, fct_charge.rate_plan_charge_number, fct_charge.rate_plan_charge_version,
      fct_charge.rate_plan_charge_segment

)

{{ dbt_audit(
    cte_ref="mart_charge",
    created_by="@michellecooper",
    updated_by="@lisvinueza",
    created_date="2022-04-13",
    updated_date="2023-05-22"
) }}1f:T31a8,



WITH dim_amendment AS (

    SELECT * 
    FROM "PROD".restricted_safe_workspace_finance.dim_amendment_central_sandbox

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".workspace_finance.dim_billing_account_central_sandbox

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_workspace_finance.dim_charge_central_sandbox

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".restricted_safe_workspace_finance.dim_product_detail_central_sandbox

), dim_subscription AS (

    SELECT * 
    FROM "PROD".workspace_finance.dim_subscription_central_sandbox

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_workspace_finance.fct_charge_central_sandbox

)

, mart_charge AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings

    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'
    ORDER BY dim_crm_account.dim_parent_crm_account_id, dim_crm_account.dim_crm_account_id, fct_charge.subscription_name,
      fct_charge.subscription_version, fct_charge.rate_plan_charge_number, fct_charge.rate_plan_charge_version,
      fct_charge.rate_plan_charge_segment

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2022-04-13'::DATE        AS model_created_date,
      '2023-05-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM mart_charge20:T39da,{{ config(
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('dim_crm_person','dim_crm_person'),
    ('dim_bizible_marketing_channel_path','dim_bizible_marketing_channel_path'),
    ('dim_sales_segment','dim_sales_segment'),
    ('fct_crm_person','fct_crm_person'),
    ('dim_date','dim_date'),
    ('dim_crm_user', 'dim_crm_user')
]) }}

, final AS (

    SELECT
      fct_crm_person.dim_crm_person_id,
      dim_crm_person.dim_crm_user_id,
      dim_crm_person.dim_crm_account_id,
      dim_crm_person.sfdc_record_id,
      dim_crm_person.marketo_lead_id,
      mql_date_first.date_id                   AS mql_date_first_id,
      mql_date_first.date_day                  AS mql_date_first,
      initial_mql_date_first.date_id           AS initial_mql_date_first_id,
      initial_mql_date_first.date_day          AS initial_mql_date_first,
      legacy_mql_date_first.date_id            AS legacy_mql_date_first_id,
      legacy_mql_date_first.date_day           AS legacy_mql_date_first,
      fct_crm_person.mql_datetime_first,
      fct_crm_person.mql_datetime_first_pt,
      mql_date_first_pt.date_day               AS mql_date_first_pt,
      mql_date_first.first_day_of_month        AS mql_month_first,
      mql_date_first_pt.first_day_of_month     AS mql_month_first_pt,
      mql_date_latest.date_day                 AS mql_date_lastest,
       initial_mql_date_first_pt.date_day      AS initial_mql_date_first_pt,
      initial_mql_date_first.first_day_of_month
                                               AS initial_mql_month_first,
      initial_mql_date_first_pt.first_day_of_month
                                               AS initial_mql_month_first_pt,
      legacy_mql_date_first_pt.date_day        AS legacy_mql_date_first_pt,
      legacy_mql_date_first.first_day_of_month AS legacy_mql_month_first,
      legacy_mql_date_first_pt.first_day_of_month
                                               AS legacy_mql_month_first_pt,
      legacy_mql_date_latest.date_day          AS legacy_mql_date_lastest,
      fct_crm_person.mql_datetime_latest,
      fct_crm_person.mql_datetime_latest_pt,
      mql_date_latest_pt.date_day              AS mql_date_lastest_pt,
      mql_date_latest.first_day_of_month       AS mql_month_latest,
      mql_date_latest_pt.first_day_of_month    AS mql_month_latest_pt,
      legacy_mql_date_latest_pt.date_day       AS legacy_mql_date_lastest_pt,
      legacy_mql_date_latest.first_day_of_month
                                               AS legacy_mql_month_latest,
      legacy_mql_date_latest_pt.first_day_of_month
                                               AS legacy_mql_month_latest_pt,
      created_date.date_day                    AS created_date,
      created_date_pt.date_day                 AS created_date_pt,
      created_date.first_day_of_month          AS created_month,
      created_date_pt.first_day_of_month       AS created_month_pt,
      lead_created_date.date_day               AS lead_created_date,
      lead_created_date_pt.date_day            AS lead_created_date_pt,
      lead_created_date.first_day_of_month     AS lead_created_month,
      lead_created_date_pt.first_day_of_month  AS lead_created_month_pt,
      contact_created_date.date_day            AS contact_created_date,
      contact_created_date_pt.date_day         AS contact_created_date_pt,
      contact_created_date.first_day_of_month  AS contact_created_month,
      contact_created_date_pt.first_day_of_month
                                               AS contact_created_month_pt,
      fct_crm_person.true_inquiry_date         AS true_inquiry_date,
      inquiry_date.date_day                    AS inquiry_date,
      inquiry_date_pt.date_day                 AS inquiry_date_pt,
      inquiry_date.first_day_of_month          AS inquiry_month,
      inquiry_date_pt.first_day_of_month       AS inquiry_month_pt,
      inquiry_inferred_datetime.date_day       AS inquiry_inferred_date,
      fct_crm_person.inquiry_inferred_datetime,
      inquiry_inferred_datetime_pt.date_day
                                               AS inquiry_inferred_date_pt,
      inquiry_inferred_datetime.first_day_of_month
                                               AS inquiry_inferred_month,
      inquiry_inferred_datetime.first_day_of_month
                                               AS inquiry_inferred_month_pt,
      accepted_date.date_day                   AS accepted_date,
      fct_crm_person.accepted_datetime,
      fct_crm_person.accepted_datetime_pt,
      accepted_date_pt.date_day                AS accepted_date_pt,
      accepted_date.first_day_of_month         AS accepted_month,
      accepted_date_pt.first_day_of_month      AS accepted_month_pt,
      mql_sfdc_date.date_day                   AS mql_sfdc_date,
      fct_crm_person.mql_sfdc_datetime,
      mql_sfdc_date_pt.date_day                AS mql_sfdc_date_pt,
      mql_sfdc_date.first_day_of_month         AS mql_sfdc_month,
      mql_sfdc_date_pt.first_day_of_month      AS mql_sfdc_month_pt,
      mql_inferred_date.date_day               AS mql_inferred_date,
      fct_crm_person.mql_inferred_datetime,
      mql_inferred_date_pt.date_day            AS mql_inferred_date_pt,
      mql_inferred_date.first_day_of_month     AS mql_inferred_month,
      mql_inferred_date_pt.first_day_of_month  AS mql_inferred_month_pt,
      qualifying_date.date_day                 AS qualifying_date,
      qualifying_date_pt.date_day              AS qualifying_date_pt,
      qualifying_date.first_day_of_month       AS qualifying_month,
      qualifying_date_pt.first_day_of_month    AS qualifying_month_pt,
      qualified_date.date_day                  AS qualified_date,
      qualified_date_pt.date_day               AS qualified_date_pt,
      qualified_date.first_day_of_month        AS qualified_month,
      qualified_date_pt.first_day_of_month     AS qualified_month_pt,
      converted_date.date_day                  AS converted_date,
      converted_date_pt.date_day               AS converted_date_pt,
      converted_date.first_day_of_month        AS converted_month,
      converted_date_pt.first_day_of_month     AS converted_month_pt,
      worked_date.date_day                     AS worked_date,
      worked_date_pt.date_day                  AS worked_date_pt,
      worked_date.first_day_of_month           AS worked_month,
      worked_date_pt.first_day_of_month        AS worked_month_pt,
      dim_crm_person.email_domain,
      dim_crm_person.email_domain_type,
      is_valuable_signup,
      dim_crm_person.email_hash,
      dim_crm_person.status,
      dim_crm_person.lead_source,
      dim_crm_person.was_converted_lead,
      dim_crm_person.source_buckets,
      dim_crm_person.crm_partner_id,
      dim_crm_person.prospect_share_status,
      dim_crm_person.partner_prospect_status,
      dim_crm_person.partner_prospect_owner_name,
      dim_crm_person.partner_prospect_id,
      fct_crm_person.ga_client_id,
      dim_crm_person.sequence_step_type,
      dim_crm_person.state,
      dim_crm_person.country,
      fct_crm_person.name_of_active_sequence,
      fct_crm_person.sequence_task_due_date,
      fct_crm_person.sequence_status,
      fct_crm_person.last_activity_date,
      dim_crm_person.is_actively_being_sequenced,
      dim_bizible_marketing_channel_path.bizible_marketing_channel_path_name,
      dim_sales_segment.sales_segment_name,
      dim_sales_segment.sales_segment_grouped,
      dim_crm_user.sdr_sales_segment,
      dim_crm_user.sdr_region,
      dim_crm_person.person_score,
      dim_crm_person.behavior_score,
      dim_crm_person.marketo_last_interesting_moment,
      dim_crm_person.marketo_last_interesting_moment_date,
      dim_crm_person.outreach_step_number,
      dim_crm_person.matched_account_owner_role,
      dim_crm_person.matched_account_account_owner_name,
      dim_crm_person.matched_account_sdr_assigned,
      dim_crm_person.matched_account_type,
      dim_crm_person.matched_account_gtm_strategy,
      dim_crm_person.matched_account_bdr_prospecting_status,
      dim_crm_person.is_first_order_initial_mql,
      dim_crm_person.is_first_order_mql,
      dim_crm_person.is_first_order_person,
      dim_crm_person.account_demographics_sales_segment,
      dim_crm_person.account_demographics_sales_segment_grouped,
      dim_crm_person.account_demographics_geo,
      dim_crm_person.account_demographics_region,
      dim_crm_person.account_demographics_area,
      dim_crm_person.account_demographics_segment_region_grouped,
      dim_crm_person.account_demographics_territory,
      dim_crm_person.account_demographics_employee_count,
      dim_crm_person.account_demographics_max_family_employee,
      dim_crm_person.account_demographics_upa_country,
      dim_crm_person.account_demographics_upa_state,  
      dim_crm_person.account_demographics_upa_city,
      dim_crm_person.account_demographics_upa_street,
      dim_crm_person.account_demographics_upa_postal_code,
      dim_crm_person.cognism_employee_count,
      dim_crm_person.leandata_matched_account_employee_count,
      dim_crm_person.leandata_matched_account_sales_segment,
      dim_crm_person.employee_bucket,
      dim_crm_person.zoominfo_phone_number, 
      dim_crm_person.zoominfo_mobile_phone_number,
      dim_crm_person.zoominfo_do_not_call_direct_phone,
      dim_crm_person.zoominfo_do_not_call_mobile_phone,
      dim_crm_person.zoominfo_company_employee_count,
      fct_crm_person.last_transfer_date_time,
      fct_crm_person.time_from_last_transfer_to_sequence,
      fct_crm_person.time_from_mql_to_last_transfer,
      fct_crm_person.zoominfo_contact_id,
      fct_crm_person.is_mql,
      fct_crm_person.is_inquiry,
      CASE
        WHEN LOWER(dim_crm_person.lead_source) LIKE '%trial - gitlab.com%' THEN TRUE
        WHEN LOWER(dim_crm_person.lead_source) LIKE '%trial - enterprise%' THEN TRUE
        ELSE FALSE
      END                                                        AS is_lead_source_trial,
      dim_crm_person.person_first_country
    FROM fct_crm_person
    LEFT JOIN dim_crm_person
      ON fct_crm_person.dim_crm_person_id = dim_crm_person.dim_crm_person_id
    LEFT JOIN dim_sales_segment
      ON fct_crm_person.dim_account_sales_segment_id = dim_sales_segment.dim_sales_segment_id
    LEFT JOIN dim_bizible_marketing_channel_path
      ON fct_crm_person.dim_bizible_marketing_channel_path_id = dim_bizible_marketing_channel_path.dim_bizible_marketing_channel_path_id
    LEFT JOIN dim_date AS created_date
      ON fct_crm_person.created_date_id = created_date.date_id
    LEFT JOIN dim_date AS created_date_pt
      ON fct_crm_person.created_date_pt_id = created_date_pt.date_id
    LEFT JOIN dim_date AS lead_created_date
      ON fct_crm_person.lead_created_date_id = lead_created_date.date_id
    LEFT JOIN dim_date AS lead_created_date_pt
      ON fct_crm_person.lead_created_date_pt_id = lead_created_date_pt.date_id
    LEFT JOIN dim_date AS contact_created_date
      ON fct_crm_person.contact_created_date_id = contact_created_date.date_id
    LEFT JOIN dim_date AS contact_created_date_pt
      ON fct_crm_person.contact_created_date_pt_id = contact_created_date_pt.date_id
    LEFT JOIN dim_date AS inquiry_date
      ON fct_crm_person.inquiry_date_id = inquiry_date.date_id
    LEFT JOIN dim_date AS inquiry_date_pt
      ON fct_crm_person.inquiry_date_pt_id = inquiry_date_pt.date_id
    LEFT JOIN dim_date AS inquiry_inferred_datetime
      ON fct_crm_person.inquiry_inferred_datetime_id = inquiry_inferred_datetime.date_id
    LEFT JOIN dim_date AS inquiry_inferred_datetime_pt
      ON fct_crm_person.inquiry_inferred_datetime_pt_id = inquiry_inferred_datetime_pt.date_id
    LEFT JOIN dim_date AS mql_date_first
      ON fct_crm_person.mql_date_first_id = mql_date_first.date_id
    LEFT JOIN dim_date AS mql_date_first_pt
      ON fct_crm_person.mql_date_first_pt_id = mql_date_first_pt.date_id
    LEFT JOIN dim_date AS mql_date_latest
      ON fct_crm_person.mql_date_latest_id = mql_date_latest.date_id
    LEFT JOIN dim_date AS mql_date_latest_pt
      ON fct_crm_person.mql_date_latest_pt_id = mql_date_latest_pt.date_id
    LEFT JOIN dim_date AS initial_mql_date_first
      ON fct_crm_person.initial_mql_date_first_id = initial_mql_date_first.date_id
    LEFT JOIN dim_date AS initial_mql_date_first_pt
      ON fct_crm_person.initial_mql_date_first_pt_id = initial_mql_date_first_pt.date_id
    LEFT JOIN dim_date AS legacy_mql_date_first
      ON fct_crm_person.legacy_mql_date_first_id = legacy_mql_date_first.date_id
    LEFT JOIN dim_date AS legacy_mql_date_first_pt
      ON fct_crm_person.legacy_mql_date_first_pt_id = legacy_mql_date_first_pt.date_id
    LEFT JOIN dim_date AS legacy_mql_date_latest
      ON fct_crm_person.legacy_mql_date_latest_id = legacy_mql_date_latest.date_id
    LEFT JOIN dim_date AS legacy_mql_date_latest_pt
      ON fct_crm_person.legacy_mql_date_latest_pt_id = legacy_mql_date_latest_pt.date_id
    LEFT JOIN dim_date AS mql_sfdc_date
      ON fct_crm_person.mql_sfdc_date_id = mql_sfdc_date.date_id
    LEFT JOIN dim_date AS mql_sfdc_date_pt
      ON fct_crm_person.mql_sfdc_date_pt_id = mql_sfdc_date_pt.date_id
    LEFT JOIN dim_date AS mql_inferred_date
      ON fct_crm_person.mql_inferred_date_id = mql_inferred_date.date_id
    LEFT JOIN dim_date AS mql_inferred_date_pt
      ON fct_crm_person.mql_inferred_date_pt_id = mql_inferred_date_pt.date_id
    LEFT JOIN dim_date AS accepted_date
      ON fct_crm_person.accepted_date_id = accepted_date.date_id
    LEFT JOIN dim_date AS accepted_date_pt
      ON fct_crm_person.accepted_date_pt_id = accepted_date_pt.date_id
    LEFT JOIN dim_date AS qualified_date
      ON fct_crm_person.qualified_date_id = qualified_date.date_id
    LEFT JOIN dim_date AS qualified_date_pt
      ON fct_crm_person.qualified_date_pt_id = qualified_date_pt.date_id
    LEFT JOIN dim_date AS qualifying_date
      ON fct_crm_person.qualifying_date_id = qualifying_date.date_id
    LEFT JOIN dim_date AS qualifying_date_pt
      ON fct_crm_person.qualifying_date_pt_id = qualifying_date_pt.date_id
    LEFT JOIN dim_date converted_date
      ON fct_crm_person.converted_date_id = converted_date.date_id
    LEFT JOIN dim_date converted_date_pt
      ON fct_crm_person.converted_date_pt_id = converted_date_pt.date_id
    LEFT JOIN dim_date AS worked_date
      ON fct_crm_person.worked_date_id = worked_date.date_id
    LEFT JOIN dim_date AS worked_date_pt
      ON fct_crm_person.worked_date_pt_id = worked_date_pt.date_id
    LEFT JOIN dim_crm_user 
      ON fct_crm_person.dim_crm_user_id = dim_crm_user.dim_crm_user_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@iweeks",
    updated_by="@dmicovic",
    created_date="2020-12-07",
    updated_date="2023-05-10",
  ) }}21:T3b65,



WITH dim_crm_person AS (

    SELECT * 
    FROM "PROD".common.dim_crm_person

), dim_bizible_marketing_channel_path AS (

    SELECT * 
    FROM "PROD".common.dim_bizible_marketing_channel_path

), dim_sales_segment AS (

    SELECT * 
    FROM "PROD".common.dim_sales_segment

), fct_crm_person AS (

    SELECT * 
    FROM "PROD".common.fct_crm_person

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

)

, final AS (

    SELECT
      fct_crm_person.dim_crm_person_id,
      dim_crm_person.dim_crm_user_id,
      dim_crm_person.dim_crm_account_id,
      dim_crm_person.sfdc_record_id,
      dim_crm_person.marketo_lead_id,
      mql_date_first.date_id                   AS mql_date_first_id,
      mql_date_first.date_day                  AS mql_date_first,
      initial_mql_date_first.date_id           AS initial_mql_date_first_id,
      initial_mql_date_first.date_day          AS initial_mql_date_first,
      legacy_mql_date_first.date_id            AS legacy_mql_date_first_id,
      legacy_mql_date_first.date_day           AS legacy_mql_date_first,
      fct_crm_person.mql_datetime_first,
      fct_crm_person.mql_datetime_first_pt,
      mql_date_first_pt.date_day               AS mql_date_first_pt,
      mql_date_first.first_day_of_month        AS mql_month_first,
      mql_date_first_pt.first_day_of_month     AS mql_month_first_pt,
      mql_date_latest.date_day                 AS mql_date_lastest,
       initial_mql_date_first_pt.date_day      AS initial_mql_date_first_pt,
      initial_mql_date_first.first_day_of_month
                                               AS initial_mql_month_first,
      initial_mql_date_first_pt.first_day_of_month
                                               AS initial_mql_month_first_pt,
      legacy_mql_date_first_pt.date_day        AS legacy_mql_date_first_pt,
      legacy_mql_date_first.first_day_of_month AS legacy_mql_month_first,
      legacy_mql_date_first_pt.first_day_of_month
                                               AS legacy_mql_month_first_pt,
      legacy_mql_date_latest.date_day          AS legacy_mql_date_lastest,
      fct_crm_person.mql_datetime_latest,
      fct_crm_person.mql_datetime_latest_pt,
      mql_date_latest_pt.date_day              AS mql_date_lastest_pt,
      mql_date_latest.first_day_of_month       AS mql_month_latest,
      mql_date_latest_pt.first_day_of_month    AS mql_month_latest_pt,
      legacy_mql_date_latest_pt.date_day       AS legacy_mql_date_lastest_pt,
      legacy_mql_date_latest.first_day_of_month
                                               AS legacy_mql_month_latest,
      legacy_mql_date_latest_pt.first_day_of_month
                                               AS legacy_mql_month_latest_pt,
      created_date.date_day                    AS created_date,
      created_date_pt.date_day                 AS created_date_pt,
      created_date.first_day_of_month          AS created_month,
      created_date_pt.first_day_of_month       AS created_month_pt,
      lead_created_date.date_day               AS lead_created_date,
      lead_created_date_pt.date_day            AS lead_created_date_pt,
      lead_created_date.first_day_of_month     AS lead_created_month,
      lead_created_date_pt.first_day_of_month  AS lead_created_month_pt,
      contact_created_date.date_day            AS contact_created_date,
      contact_created_date_pt.date_day         AS contact_created_date_pt,
      contact_created_date.first_day_of_month  AS contact_created_month,
      contact_created_date_pt.first_day_of_month
                                               AS contact_created_month_pt,
      fct_crm_person.true_inquiry_date         AS true_inquiry_date,
      inquiry_date.date_day                    AS inquiry_date,
      inquiry_date_pt.date_day                 AS inquiry_date_pt,
      inquiry_date.first_day_of_month          AS inquiry_month,
      inquiry_date_pt.first_day_of_month       AS inquiry_month_pt,
      inquiry_inferred_datetime.date_day       AS inquiry_inferred_date,
      fct_crm_person.inquiry_inferred_datetime,
      inquiry_inferred_datetime_pt.date_day
                                               AS inquiry_inferred_date_pt,
      inquiry_inferred_datetime.first_day_of_month
                                               AS inquiry_inferred_month,
      inquiry_inferred_datetime.first_day_of_month
                                               AS inquiry_inferred_month_pt,
      accepted_date.date_day                   AS accepted_date,
      fct_crm_person.accepted_datetime,
      fct_crm_person.accepted_datetime_pt,
      accepted_date_pt.date_day                AS accepted_date_pt,
      accepted_date.first_day_of_month         AS accepted_month,
      accepted_date_pt.first_day_of_month      AS accepted_month_pt,
      mql_sfdc_date.date_day                   AS mql_sfdc_date,
      fct_crm_person.mql_sfdc_datetime,
      mql_sfdc_date_pt.date_day                AS mql_sfdc_date_pt,
      mql_sfdc_date.first_day_of_month         AS mql_sfdc_month,
      mql_sfdc_date_pt.first_day_of_month      AS mql_sfdc_month_pt,
      mql_inferred_date.date_day               AS mql_inferred_date,
      fct_crm_person.mql_inferred_datetime,
      mql_inferred_date_pt.date_day            AS mql_inferred_date_pt,
      mql_inferred_date.first_day_of_month     AS mql_inferred_month,
      mql_inferred_date_pt.first_day_of_month  AS mql_inferred_month_pt,
      qualifying_date.date_day                 AS qualifying_date,
      qualifying_date_pt.date_day              AS qualifying_date_pt,
      qualifying_date.first_day_of_month       AS qualifying_month,
      qualifying_date_pt.first_day_of_month    AS qualifying_month_pt,
      qualified_date.date_day                  AS qualified_date,
      qualified_date_pt.date_day               AS qualified_date_pt,
      qualified_date.first_day_of_month        AS qualified_month,
      qualified_date_pt.first_day_of_month     AS qualified_month_pt,
      converted_date.date_day                  AS converted_date,
      converted_date_pt.date_day               AS converted_date_pt,
      converted_date.first_day_of_month        AS converted_month,
      converted_date_pt.first_day_of_month     AS converted_month_pt,
      worked_date.date_day                     AS worked_date,
      worked_date_pt.date_day                  AS worked_date_pt,
      worked_date.first_day_of_month           AS worked_month,
      worked_date_pt.first_day_of_month        AS worked_month_pt,
      dim_crm_person.email_domain,
      dim_crm_person.email_domain_type,
      is_valuable_signup,
      dim_crm_person.email_hash,
      dim_crm_person.status,
      dim_crm_person.lead_source,
      dim_crm_person.was_converted_lead,
      dim_crm_person.source_buckets,
      dim_crm_person.crm_partner_id,
      dim_crm_person.prospect_share_status,
      dim_crm_person.partner_prospect_status,
      dim_crm_person.partner_prospect_owner_name,
      dim_crm_person.partner_prospect_id,
      fct_crm_person.ga_client_id,
      dim_crm_person.sequence_step_type,
      dim_crm_person.state,
      dim_crm_person.country,
      fct_crm_person.name_of_active_sequence,
      fct_crm_person.sequence_task_due_date,
      fct_crm_person.sequence_status,
      fct_crm_person.last_activity_date,
      dim_crm_person.is_actively_being_sequenced,
      dim_bizible_marketing_channel_path.bizible_marketing_channel_path_name,
      dim_sales_segment.sales_segment_name,
      dim_sales_segment.sales_segment_grouped,
      dim_crm_user.sdr_sales_segment,
      dim_crm_user.sdr_region,
      dim_crm_person.person_score,
      dim_crm_person.behavior_score,
      dim_crm_person.marketo_last_interesting_moment,
      dim_crm_person.marketo_last_interesting_moment_date,
      dim_crm_person.outreach_step_number,
      dim_crm_person.matched_account_owner_role,
      dim_crm_person.matched_account_account_owner_name,
      dim_crm_person.matched_account_sdr_assigned,
      dim_crm_person.matched_account_type,
      dim_crm_person.matched_account_gtm_strategy,
      dim_crm_person.matched_account_bdr_prospecting_status,
      dim_crm_person.is_first_order_initial_mql,
      dim_crm_person.is_first_order_mql,
      dim_crm_person.is_first_order_person,
      dim_crm_person.account_demographics_sales_segment,
      dim_crm_person.account_demographics_sales_segment_grouped,
      dim_crm_person.account_demographics_geo,
      dim_crm_person.account_demographics_region,
      dim_crm_person.account_demographics_area,
      dim_crm_person.account_demographics_segment_region_grouped,
      dim_crm_person.account_demographics_territory,
      dim_crm_person.account_demographics_employee_count,
      dim_crm_person.account_demographics_max_family_employee,
      dim_crm_person.account_demographics_upa_country,
      dim_crm_person.account_demographics_upa_state,  
      dim_crm_person.account_demographics_upa_city,
      dim_crm_person.account_demographics_upa_street,
      dim_crm_person.account_demographics_upa_postal_code,
      dim_crm_person.cognism_employee_count,
      dim_crm_person.leandata_matched_account_employee_count,
      dim_crm_person.leandata_matched_account_sales_segment,
      dim_crm_person.employee_bucket,
      dim_crm_person.zoominfo_phone_number, 
      dim_crm_person.zoominfo_mobile_phone_number,
      dim_crm_person.zoominfo_do_not_call_direct_phone,
      dim_crm_person.zoominfo_do_not_call_mobile_phone,
      dim_crm_person.zoominfo_company_employee_count,
      fct_crm_person.last_transfer_date_time,
      fct_crm_person.time_from_last_transfer_to_sequence,
      fct_crm_person.time_from_mql_to_last_transfer,
      fct_crm_person.zoominfo_contact_id,
      fct_crm_person.is_mql,
      fct_crm_person.is_inquiry,
      CASE
        WHEN LOWER(dim_crm_person.lead_source) LIKE '%trial - gitlab.com%' THEN TRUE
        WHEN LOWER(dim_crm_person.lead_source) LIKE '%trial - enterprise%' THEN TRUE
        ELSE FALSE
      END                                                        AS is_lead_source_trial,
      dim_crm_person.person_first_country
    FROM fct_crm_person
    LEFT JOIN dim_crm_person
      ON fct_crm_person.dim_crm_person_id = dim_crm_person.dim_crm_person_id
    LEFT JOIN dim_sales_segment
      ON fct_crm_person.dim_account_sales_segment_id = dim_sales_segment.dim_sales_segment_id
    LEFT JOIN dim_bizible_marketing_channel_path
      ON fct_crm_person.dim_bizible_marketing_channel_path_id = dim_bizible_marketing_channel_path.dim_bizible_marketing_channel_path_id
    LEFT JOIN dim_date AS created_date
      ON fct_crm_person.created_date_id = created_date.date_id
    LEFT JOIN dim_date AS created_date_pt
      ON fct_crm_person.created_date_pt_id = created_date_pt.date_id
    LEFT JOIN dim_date AS lead_created_date
      ON fct_crm_person.lead_created_date_id = lead_created_date.date_id
    LEFT JOIN dim_date AS lead_created_date_pt
      ON fct_crm_person.lead_created_date_pt_id = lead_created_date_pt.date_id
    LEFT JOIN dim_date AS contact_created_date
      ON fct_crm_person.contact_created_date_id = contact_created_date.date_id
    LEFT JOIN dim_date AS contact_created_date_pt
      ON fct_crm_person.contact_created_date_pt_id = contact_created_date_pt.date_id
    LEFT JOIN dim_date AS inquiry_date
      ON fct_crm_person.inquiry_date_id = inquiry_date.date_id
    LEFT JOIN dim_date AS inquiry_date_pt
      ON fct_crm_person.inquiry_date_pt_id = inquiry_date_pt.date_id
    LEFT JOIN dim_date AS inquiry_inferred_datetime
      ON fct_crm_person.inquiry_inferred_datetime_id = inquiry_inferred_datetime.date_id
    LEFT JOIN dim_date AS inquiry_inferred_datetime_pt
      ON fct_crm_person.inquiry_inferred_datetime_pt_id = inquiry_inferred_datetime_pt.date_id
    LEFT JOIN dim_date AS mql_date_first
      ON fct_crm_person.mql_date_first_id = mql_date_first.date_id
    LEFT JOIN dim_date AS mql_date_first_pt
      ON fct_crm_person.mql_date_first_pt_id = mql_date_first_pt.date_id
    LEFT JOIN dim_date AS mql_date_latest
      ON fct_crm_person.mql_date_latest_id = mql_date_latest.date_id
    LEFT JOIN dim_date AS mql_date_latest_pt
      ON fct_crm_person.mql_date_latest_pt_id = mql_date_latest_pt.date_id
    LEFT JOIN dim_date AS initial_mql_date_first
      ON fct_crm_person.initial_mql_date_first_id = initial_mql_date_first.date_id
    LEFT JOIN dim_date AS initial_mql_date_first_pt
      ON fct_crm_person.initial_mql_date_first_pt_id = initial_mql_date_first_pt.date_id
    LEFT JOIN dim_date AS legacy_mql_date_first
      ON fct_crm_person.legacy_mql_date_first_id = legacy_mql_date_first.date_id
    LEFT JOIN dim_date AS legacy_mql_date_first_pt
      ON fct_crm_person.legacy_mql_date_first_pt_id = legacy_mql_date_first_pt.date_id
    LEFT JOIN dim_date AS legacy_mql_date_latest
      ON fct_crm_person.legacy_mql_date_latest_id = legacy_mql_date_latest.date_id
    LEFT JOIN dim_date AS legacy_mql_date_latest_pt
      ON fct_crm_person.legacy_mql_date_latest_pt_id = legacy_mql_date_latest_pt.date_id
    LEFT JOIN dim_date AS mql_sfdc_date
      ON fct_crm_person.mql_sfdc_date_id = mql_sfdc_date.date_id
    LEFT JOIN dim_date AS mql_sfdc_date_pt
      ON fct_crm_person.mql_sfdc_date_pt_id = mql_sfdc_date_pt.date_id
    LEFT JOIN dim_date AS mql_inferred_date
      ON fct_crm_person.mql_inferred_date_id = mql_inferred_date.date_id
    LEFT JOIN dim_date AS mql_inferred_date_pt
      ON fct_crm_person.mql_inferred_date_pt_id = mql_inferred_date_pt.date_id
    LEFT JOIN dim_date AS accepted_date
      ON fct_crm_person.accepted_date_id = accepted_date.date_id
    LEFT JOIN dim_date AS accepted_date_pt
      ON fct_crm_person.accepted_date_pt_id = accepted_date_pt.date_id
    LEFT JOIN dim_date AS qualified_date
      ON fct_crm_person.qualified_date_id = qualified_date.date_id
    LEFT JOIN dim_date AS qualified_date_pt
      ON fct_crm_person.qualified_date_pt_id = qualified_date_pt.date_id
    LEFT JOIN dim_date AS qualifying_date
      ON fct_crm_person.qualifying_date_id = qualifying_date.date_id
    LEFT JOIN dim_date AS qualifying_date_pt
      ON fct_crm_person.qualifying_date_pt_id = qualifying_date_pt.date_id
    LEFT JOIN dim_date converted_date
      ON fct_crm_person.converted_date_id = converted_date.date_id
    LEFT JOIN dim_date converted_date_pt
      ON fct_crm_person.converted_date_pt_id = converted_date_pt.date_id
    LEFT JOIN dim_date AS worked_date
      ON fct_crm_person.worked_date_id = worked_date.date_id
    LEFT JOIN dim_date AS worked_date_pt
      ON fct_crm_person.worked_date_pt_id = worked_date_pt.date_id
    LEFT JOIN dim_crm_user 
      ON fct_crm_person.dim_crm_user_id = dim_crm_user.dim_crm_user_id

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@dmicovic'::VARCHAR       AS updated_by,
      '2020-12-07'::DATE        AS model_created_date,
      '2023-05-10'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final22:T35ab,{{ config(
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('dim_crm_touchpoint','dim_crm_touchpoint'),
    ('fct_crm_touchpoint','fct_crm_touchpoint'),
    ('dim_campaign','dim_campaign'),
    ('fct_campaign','fct_campaign'),
    ('dim_crm_person','dim_crm_person'),
    ('fct_crm_person', 'fct_crm_person'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_crm_user','dim_crm_user')
]) }}

, joined AS (

    SELECT
      -- touchpoint info
      dim_crm_touchpoint.dim_crm_touchpoint_id,
      {{ dbt_utils.surrogate_key(['fct_crm_touchpoint.dim_crm_person_id','dim_campaign.dim_campaign_id','dim_crm_touchpoint.bizible_touchpoint_date_time']) }} AS touchpoint_person_campaign_date_id,
      dim_crm_touchpoint.bizible_touchpoint_date,
      dim_crm_touchpoint.bizible_touchpoint_date_time,
      dim_crm_touchpoint.bizible_touchpoint_month,
      dim_crm_touchpoint.bizible_touchpoint_position,
      dim_crm_touchpoint.bizible_touchpoint_source,
      dim_crm_touchpoint.bizible_touchpoint_source_type,
      dim_crm_touchpoint.bizible_touchpoint_type,
      dim_crm_touchpoint.bizible_ad_campaign_name,
      dim_crm_touchpoint.bizible_ad_content,
      dim_crm_touchpoint.bizible_ad_group_name,
      dim_crm_touchpoint.bizible_form_url,
      dim_crm_touchpoint.bizible_form_url_raw,
      dim_crm_touchpoint.bizible_landing_page,
      dim_crm_touchpoint.bizible_landing_page_raw,
      dim_crm_touchpoint.bizible_marketing_channel,
      dim_crm_touchpoint.bizible_marketing_channel_path,
      dim_crm_touchpoint.bizible_medium,
      dim_crm_touchpoint.bizible_referrer_page,
      dim_crm_touchpoint.bizible_referrer_page_raw,
      dim_crm_touchpoint.bizible_form_page_utm_content,
      dim_crm_touchpoint.bizible_form_page_utm_budget,
      dim_crm_touchpoint.bizible_form_page_utm_allptnr,
      dim_crm_touchpoint.bizible_form_page_utm_partnerid,
      dim_crm_touchpoint.bizible_landing_page_utm_content,
      dim_crm_touchpoint.bizible_landing_page_utm_budget,
      dim_crm_touchpoint.bizible_landing_page_utm_allptnr,
      dim_crm_touchpoint.bizible_landing_page_utm_partnerid,
      dim_crm_touchpoint.bizible_salesforce_campaign,
      dim_crm_touchpoint.bizible_integrated_campaign_grouping,
      dim_crm_touchpoint.touchpoint_segment,
      dim_crm_touchpoint.gtm_motion,
      dim_crm_touchpoint.integrated_campaign_grouping,
      dim_crm_touchpoint.pipe_name,
      dim_crm_touchpoint.is_dg_influenced,
      dim_crm_touchpoint.is_dg_sourced,
      fct_crm_touchpoint.bizible_count_first_touch,
      fct_crm_touchpoint.bizible_count_lead_creation_touch,
      fct_crm_touchpoint.bizible_count_u_shaped,
      dim_crm_touchpoint.bizible_created_date,

      -- person info
      fct_crm_touchpoint.dim_crm_person_id,
      dim_crm_person.sfdc_record_id,
      dim_crm_person.sfdc_record_type,
      dim_crm_person.marketo_lead_id,
      dim_crm_person.email_hash,
      dim_crm_person.email_domain,
      dim_crm_person.owner_id,
      dim_crm_person.person_score,
      dim_crm_person.title                                                 AS crm_person_title,
      dim_crm_person.country                                               AS crm_person_country,
      dim_crm_person.state                                                 AS crm_person_state,
      dim_crm_person.status                                                AS crm_person_status,
      dim_crm_person.lead_source,
      dim_crm_person.lead_source_type,
      dim_crm_person.source_buckets,
      dim_crm_person.net_new_source_categories,
      dim_crm_person.crm_partner_id,
      fct_crm_person.created_date                                          AS crm_person_created_date,
      fct_crm_person.inquiry_date,
      fct_crm_person.mql_date_first,
      fct_crm_person.mql_date_latest,
      fct_crm_person.legacy_mql_date_first,
      fct_crm_person.legacy_mql_date_latest,
      fct_crm_person.accepted_date,
      fct_crm_person.qualifying_date,
      fct_crm_person.qualified_date,
      fct_crm_person.converted_date,
      fct_crm_person.is_mql,
      fct_crm_person.is_inquiry,
      fct_crm_person.mql_count,
      fct_crm_person.last_utm_content,
      fct_crm_person.last_utm_campaign,
      fct_crm_person.true_inquiry_date,
      dim_crm_person.account_demographics_sales_segment,
      dim_crm_person.account_demographics_geo,
      dim_crm_person.account_demographics_region,
      dim_crm_person.account_demographics_area,

      -- campaign info
      dim_campaign.dim_campaign_id,
      dim_campaign.campaign_name,
      dim_campaign.is_active                                               AS campagin_is_active,
      dim_campaign.status                                                  AS campaign_status,
      dim_campaign.type,
      dim_campaign.description,
      dim_campaign.budget_holder,
      dim_campaign.bizible_touchpoint_enabled_setting,
      dim_campaign.strategic_marketing_contribution,
      dim_campaign.large_bucket,
      dim_campaign.reporting_type,
      dim_campaign.allocadia_id,
      dim_campaign.is_a_channel_partner_involved,
      dim_campaign.is_an_alliance_partner_involved,
      dim_campaign.is_this_an_in_person_event,
      dim_campaign.will_there_be_mdf_funding,
      dim_campaign.alliance_partner_name,
      dim_campaign.channel_partner_name,
      dim_campaign.sales_play,
      dim_campaign.total_planned_mqls,
      fct_campaign.dim_parent_campaign_id,
      fct_campaign.campaign_owner_id,
      fct_campaign.created_by_id                                           AS campaign_created_by_id,
      fct_campaign.start_date                                              AS camapaign_start_date,
      fct_campaign.end_date                                                AS campaign_end_date,
      fct_campaign.created_date                                            AS campaign_created_date,
      fct_campaign.last_modified_date                                      AS campaign_last_modified_date,
      fct_campaign.last_activity_date                                      AS campaign_last_activity_date,
      fct_campaign.region                                                  AS campaign_region,
      fct_campaign.sub_region                                              AS campaign_sub_region,
      fct_campaign.budgeted_cost,
      fct_campaign.expected_response,
      fct_campaign.expected_revenue,
      fct_campaign.actual_cost,
      fct_campaign.amount_all_opportunities,
      fct_campaign.amount_won_opportunities,
      fct_campaign.count_contacts,
      fct_campaign.count_converted_leads,
      fct_campaign.count_leads,
      fct_campaign.count_opportunities,
      fct_campaign.count_responses,
      fct_campaign.count_won_opportunities,
      fct_campaign.count_sent,

      -- sales rep info
      dim_crm_user.user_name                               AS rep_name,
      dim_crm_user.title                                   AS rep_title,
      dim_crm_user.team,
      dim_crm_user.is_active                               AS rep_is_active,
      dim_crm_user.user_role_name,
      dim_crm_user.crm_user_sales_segment                  AS touchpoint_crm_user_segment_name_live,
      dim_crm_user.crm_user_geo                            AS touchpoint_crm_user_geo_name_live,
      dim_crm_user.crm_user_region                         AS touchpoint_crm_user_region_name_live,
      dim_crm_user.crm_user_area                           AS touchpoint_crm_user_area_name_live,
      dim_crm_user.sdr_sales_segment,
      dim_crm_user.sdr_region,

      -- campaign owner info
      campaign_owner.user_name                             AS campaign_rep_name,
      campaign_owner.title                                 AS campaign_rep_title,
      campaign_owner.team                                  AS campaign_rep_team,
      campaign_owner.is_active                             AS campaign_rep_is_active,
      campaign_owner.user_role_name                        AS campaign_rep_role_name,
      campaign_owner.crm_user_sales_segment                AS campaign_crm_user_segment_name_live,
      campaign_owner.crm_user_geo                          AS campaign_crm_user_geo_name_live,
      campaign_owner.crm_user_region                       AS campaign_crm_user_region_name_live,
      campaign_owner.crm_user_area                         AS campaign_crm_user_area_name_live,

      -- account info
      dim_crm_account.dim_crm_account_id,
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region,
      dim_crm_account.parent_crm_account_area,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.record_type_id,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_type,
      dim_crm_account.technical_account_manager,
      dim_crm_account.merged_to_account_id,
      dim_crm_account.is_reseller,

      -- bizible influenced
       CASE
        WHEN dim_campaign.budget_holder = 'fmm'
              OR campaign_rep_role_name = 'Field Marketing Manager'
              OR LOWER(dim_crm_touchpoint.utm_content) LIKE '%field%'
              OR LOWER(dim_campaign.type) = 'field event'
              OR LOWER(dim_crm_person.lead_source) = 'field event'
          THEN 1
        ELSE 0
      END AS is_fmm_influenced,
      CASE
        WHEN dim_crm_touchpoint.bizible_touchpoint_position LIKE '%FT%' 
          AND is_fmm_influenced = 1 
          THEN 1
        ELSE 0
      END AS is_fmm_sourced,

    -- counts
     CASE
        WHEN dim_crm_touchpoint.bizible_touchpoint_position LIKE '%LC%' 
          AND dim_crm_touchpoint.bizible_touchpoint_position NOT LIKE '%PostLC%' 
          THEN 1
        ELSE 0
      END AS count_inquiry,
      CASE
        WHEN fct_crm_person.true_inquiry_date >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN 1
        ELSE 0
      END AS count_true_inquiry,
      CASE
        WHEN fct_crm_person.mql_date_first >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN 1
        ELSE 0
      END AS count_mql,
      CASE
        WHEN fct_crm_person.mql_date_first >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN fct_crm_touchpoint.bizible_count_lead_creation_touch
        ELSE 0
      END AS count_net_new_mql,
      CASE
        WHEN fct_crm_person.accepted_date >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN 1
        ELSE '0'
      END AS count_accepted,
      CASE
        WHEN fct_crm_person.accepted_date >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN fct_crm_touchpoint.bizible_count_lead_creation_touch
        ELSE 0
      END AS count_net_new_accepted,

      CASE 
        WHEN count_mql=1 THEN dim_crm_person.sfdc_record_id
        ELSE NULL
      END AS mql_crm_person_id

    FROM fct_crm_touchpoint
    LEFT JOIN dim_crm_touchpoint
      ON fct_crm_touchpoint.dim_crm_touchpoint_id = dim_crm_touchpoint.dim_crm_touchpoint_id
    LEFT JOIN dim_campaign
      ON fct_crm_touchpoint.dim_campaign_id = dim_campaign.dim_campaign_id
    LEFT JOIN fct_campaign
      ON fct_crm_touchpoint.dim_campaign_id = fct_campaign.dim_campaign_id
    LEFT JOIN dim_crm_person
      ON fct_crm_touchpoint.dim_crm_person_id = dim_crm_person.dim_crm_person_id
    LEFT JOIN fct_crm_person
      ON fct_crm_touchpoint.dim_crm_person_id = fct_crm_person.dim_crm_person_id
    LEFT JOIN dim_crm_account
      ON fct_crm_touchpoint.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user AS campaign_owner
      ON fct_campaign.campaign_owner_id = campaign_owner.dim_crm_user_id
    LEFT JOIN dim_crm_user
      ON fct_crm_touchpoint.dim_crm_user_id = dim_crm_user.dim_crm_user_id

), count_of_pre_mql_tps AS (

    SELECT DISTINCT
      joined.email_hash,
      COUNT(DISTINCT joined.dim_crm_touchpoint_id) AS pre_mql_touches
    FROM joined
    WHERE joined.mql_date_first IS NOT NULL
      AND joined.bizible_touchpoint_date <= joined.mql_date_first
    GROUP BY 1

), pre_mql_tps_by_person AS (

    SELECT
      count_of_pre_mql_tps.email_hash,
      count_of_pre_mql_tps.pre_mql_touches,
      1/count_of_pre_mql_tps.pre_mql_touches AS pre_mql_weight
    FROM count_of_pre_mql_tps
    GROUP BY 1,2

), pre_mql_tps AS (

    SELECT
      joined.dim_crm_touchpoint_id,
      pre_mql_tps_by_person.pre_mql_weight
    FROM pre_mql_tps_by_person
    LEFT JOIN joined 
      ON pre_mql_tps_by_person.email_hash=joined.email_hash
    WHERE joined.mql_date_first IS NOT NULL
      AND joined.bizible_touchpoint_date <= joined.mql_date_first

), post_mql_tps AS (

    SELECT
      joined.dim_crm_touchpoint_id,
      0 AS pre_mql_weight
    FROM joined
    WHERE joined.bizible_touchpoint_date > joined.mql_date_first
      OR joined.mql_date_first IS null

), mql_weighted_tps AS (

    SELECT *
    FROM pre_mql_tps

    UNION ALL

    SELECT *
    FROM post_mql_tps

),final AS (

  SELECT 
    joined.*,
    mql_weighted_tps.pre_mql_weight
  FROM joined
  LEFT JOIN mql_weighted_tps 
    ON joined.dim_crm_touchpoint_id=mql_weighted_tps.dim_crm_touchpoint_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mcooperDD",
    updated_by="@rkohnke",
    created_date="2021-02-18",
    updated_date="2023-05-22"
) }}23:T3809,



WITH dim_crm_touchpoint AS (

    SELECT * 
    FROM "PROD".common.dim_crm_touchpoint

), fct_crm_touchpoint AS (

    SELECT * 
    FROM "PROD".common.fct_crm_touchpoint

), dim_campaign AS (

    SELECT * 
    FROM "PROD".common.dim_campaign

), fct_campaign AS (

    SELECT * 
    FROM "PROD".common.fct_campaign

), dim_crm_person AS (

    SELECT * 
    FROM "PROD".common.dim_crm_person

), fct_crm_person AS (

    SELECT * 
    FROM "PROD".common.fct_crm_person

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

)

, joined AS (

    SELECT
      -- touchpoint info
      dim_crm_touchpoint.dim_crm_touchpoint_id,
      md5(cast(coalesce(cast(fct_crm_touchpoint.dim_crm_person_id as 
    varchar
), '') || '-' || coalesce(cast(dim_campaign.dim_campaign_id as 
    varchar
), '') || '-' || coalesce(cast(dim_crm_touchpoint.bizible_touchpoint_date_time as 
    varchar
), '') as 
    varchar
)) AS touchpoint_person_campaign_date_id,
      dim_crm_touchpoint.bizible_touchpoint_date,
      dim_crm_touchpoint.bizible_touchpoint_date_time,
      dim_crm_touchpoint.bizible_touchpoint_month,
      dim_crm_touchpoint.bizible_touchpoint_position,
      dim_crm_touchpoint.bizible_touchpoint_source,
      dim_crm_touchpoint.bizible_touchpoint_source_type,
      dim_crm_touchpoint.bizible_touchpoint_type,
      dim_crm_touchpoint.bizible_ad_campaign_name,
      dim_crm_touchpoint.bizible_ad_content,
      dim_crm_touchpoint.bizible_ad_group_name,
      dim_crm_touchpoint.bizible_form_url,
      dim_crm_touchpoint.bizible_form_url_raw,
      dim_crm_touchpoint.bizible_landing_page,
      dim_crm_touchpoint.bizible_landing_page_raw,
      dim_crm_touchpoint.bizible_marketing_channel,
      dim_crm_touchpoint.bizible_marketing_channel_path,
      dim_crm_touchpoint.bizible_medium,
      dim_crm_touchpoint.bizible_referrer_page,
      dim_crm_touchpoint.bizible_referrer_page_raw,
      dim_crm_touchpoint.bizible_form_page_utm_content,
      dim_crm_touchpoint.bizible_form_page_utm_budget,
      dim_crm_touchpoint.bizible_form_page_utm_allptnr,
      dim_crm_touchpoint.bizible_form_page_utm_partnerid,
      dim_crm_touchpoint.bizible_landing_page_utm_content,
      dim_crm_touchpoint.bizible_landing_page_utm_budget,
      dim_crm_touchpoint.bizible_landing_page_utm_allptnr,
      dim_crm_touchpoint.bizible_landing_page_utm_partnerid,
      dim_crm_touchpoint.bizible_salesforce_campaign,
      dim_crm_touchpoint.bizible_integrated_campaign_grouping,
      dim_crm_touchpoint.touchpoint_segment,
      dim_crm_touchpoint.gtm_motion,
      dim_crm_touchpoint.integrated_campaign_grouping,
      dim_crm_touchpoint.pipe_name,
      dim_crm_touchpoint.is_dg_influenced,
      dim_crm_touchpoint.is_dg_sourced,
      fct_crm_touchpoint.bizible_count_first_touch,
      fct_crm_touchpoint.bizible_count_lead_creation_touch,
      fct_crm_touchpoint.bizible_count_u_shaped,
      dim_crm_touchpoint.bizible_created_date,

      -- person info
      fct_crm_touchpoint.dim_crm_person_id,
      dim_crm_person.sfdc_record_id,
      dim_crm_person.sfdc_record_type,
      dim_crm_person.marketo_lead_id,
      dim_crm_person.email_hash,
      dim_crm_person.email_domain,
      dim_crm_person.owner_id,
      dim_crm_person.person_score,
      dim_crm_person.title                                                 AS crm_person_title,
      dim_crm_person.country                                               AS crm_person_country,
      dim_crm_person.state                                                 AS crm_person_state,
      dim_crm_person.status                                                AS crm_person_status,
      dim_crm_person.lead_source,
      dim_crm_person.lead_source_type,
      dim_crm_person.source_buckets,
      dim_crm_person.net_new_source_categories,
      dim_crm_person.crm_partner_id,
      fct_crm_person.created_date                                          AS crm_person_created_date,
      fct_crm_person.inquiry_date,
      fct_crm_person.mql_date_first,
      fct_crm_person.mql_date_latest,
      fct_crm_person.legacy_mql_date_first,
      fct_crm_person.legacy_mql_date_latest,
      fct_crm_person.accepted_date,
      fct_crm_person.qualifying_date,
      fct_crm_person.qualified_date,
      fct_crm_person.converted_date,
      fct_crm_person.is_mql,
      fct_crm_person.is_inquiry,
      fct_crm_person.mql_count,
      fct_crm_person.last_utm_content,
      fct_crm_person.last_utm_campaign,
      fct_crm_person.true_inquiry_date,
      dim_crm_person.account_demographics_sales_segment,
      dim_crm_person.account_demographics_geo,
      dim_crm_person.account_demographics_region,
      dim_crm_person.account_demographics_area,

      -- campaign info
      dim_campaign.dim_campaign_id,
      dim_campaign.campaign_name,
      dim_campaign.is_active                                               AS campagin_is_active,
      dim_campaign.status                                                  AS campaign_status,
      dim_campaign.type,
      dim_campaign.description,
      dim_campaign.budget_holder,
      dim_campaign.bizible_touchpoint_enabled_setting,
      dim_campaign.strategic_marketing_contribution,
      dim_campaign.large_bucket,
      dim_campaign.reporting_type,
      dim_campaign.allocadia_id,
      dim_campaign.is_a_channel_partner_involved,
      dim_campaign.is_an_alliance_partner_involved,
      dim_campaign.is_this_an_in_person_event,
      dim_campaign.will_there_be_mdf_funding,
      dim_campaign.alliance_partner_name,
      dim_campaign.channel_partner_name,
      dim_campaign.sales_play,
      dim_campaign.total_planned_mqls,
      fct_campaign.dim_parent_campaign_id,
      fct_campaign.campaign_owner_id,
      fct_campaign.created_by_id                                           AS campaign_created_by_id,
      fct_campaign.start_date                                              AS camapaign_start_date,
      fct_campaign.end_date                                                AS campaign_end_date,
      fct_campaign.created_date                                            AS campaign_created_date,
      fct_campaign.last_modified_date                                      AS campaign_last_modified_date,
      fct_campaign.last_activity_date                                      AS campaign_last_activity_date,
      fct_campaign.region                                                  AS campaign_region,
      fct_campaign.sub_region                                              AS campaign_sub_region,
      fct_campaign.budgeted_cost,
      fct_campaign.expected_response,
      fct_campaign.expected_revenue,
      fct_campaign.actual_cost,
      fct_campaign.amount_all_opportunities,
      fct_campaign.amount_won_opportunities,
      fct_campaign.count_contacts,
      fct_campaign.count_converted_leads,
      fct_campaign.count_leads,
      fct_campaign.count_opportunities,
      fct_campaign.count_responses,
      fct_campaign.count_won_opportunities,
      fct_campaign.count_sent,

      -- sales rep info
      dim_crm_user.user_name                               AS rep_name,
      dim_crm_user.title                                   AS rep_title,
      dim_crm_user.team,
      dim_crm_user.is_active                               AS rep_is_active,
      dim_crm_user.user_role_name,
      dim_crm_user.crm_user_sales_segment                  AS touchpoint_crm_user_segment_name_live,
      dim_crm_user.crm_user_geo                            AS touchpoint_crm_user_geo_name_live,
      dim_crm_user.crm_user_region                         AS touchpoint_crm_user_region_name_live,
      dim_crm_user.crm_user_area                           AS touchpoint_crm_user_area_name_live,
      dim_crm_user.sdr_sales_segment,
      dim_crm_user.sdr_region,

      -- campaign owner info
      campaign_owner.user_name                             AS campaign_rep_name,
      campaign_owner.title                                 AS campaign_rep_title,
      campaign_owner.team                                  AS campaign_rep_team,
      campaign_owner.is_active                             AS campaign_rep_is_active,
      campaign_owner.user_role_name                        AS campaign_rep_role_name,
      campaign_owner.crm_user_sales_segment                AS campaign_crm_user_segment_name_live,
      campaign_owner.crm_user_geo                          AS campaign_crm_user_geo_name_live,
      campaign_owner.crm_user_region                       AS campaign_crm_user_region_name_live,
      campaign_owner.crm_user_area                         AS campaign_crm_user_area_name_live,

      -- account info
      dim_crm_account.dim_crm_account_id,
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region,
      dim_crm_account.parent_crm_account_area,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.record_type_id,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_type,
      dim_crm_account.technical_account_manager,
      dim_crm_account.merged_to_account_id,
      dim_crm_account.is_reseller,

      -- bizible influenced
       CASE
        WHEN dim_campaign.budget_holder = 'fmm'
              OR campaign_rep_role_name = 'Field Marketing Manager'
              OR LOWER(dim_crm_touchpoint.utm_content) LIKE '%field%'
              OR LOWER(dim_campaign.type) = 'field event'
              OR LOWER(dim_crm_person.lead_source) = 'field event'
          THEN 1
        ELSE 0
      END AS is_fmm_influenced,
      CASE
        WHEN dim_crm_touchpoint.bizible_touchpoint_position LIKE '%FT%' 
          AND is_fmm_influenced = 1 
          THEN 1
        ELSE 0
      END AS is_fmm_sourced,

    -- counts
     CASE
        WHEN dim_crm_touchpoint.bizible_touchpoint_position LIKE '%LC%' 
          AND dim_crm_touchpoint.bizible_touchpoint_position NOT LIKE '%PostLC%' 
          THEN 1
        ELSE 0
      END AS count_inquiry,
      CASE
        WHEN fct_crm_person.true_inquiry_date >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN 1
        ELSE 0
      END AS count_true_inquiry,
      CASE
        WHEN fct_crm_person.mql_date_first >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN 1
        ELSE 0
      END AS count_mql,
      CASE
        WHEN fct_crm_person.mql_date_first >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN fct_crm_touchpoint.bizible_count_lead_creation_touch
        ELSE 0
      END AS count_net_new_mql,
      CASE
        WHEN fct_crm_person.accepted_date >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN 1
        ELSE '0'
      END AS count_accepted,
      CASE
        WHEN fct_crm_person.accepted_date >= dim_crm_touchpoint.bizible_touchpoint_date 
          THEN fct_crm_touchpoint.bizible_count_lead_creation_touch
        ELSE 0
      END AS count_net_new_accepted,

      CASE 
        WHEN count_mql=1 THEN dim_crm_person.sfdc_record_id
        ELSE NULL
      END AS mql_crm_person_id

    FROM fct_crm_touchpoint
    LEFT JOIN dim_crm_touchpoint
      ON fct_crm_touchpoint.dim_crm_touchpoint_id = dim_crm_touchpoint.dim_crm_touchpoint_id
    LEFT JOIN dim_campaign
      ON fct_crm_touchpoint.dim_campaign_id = dim_campaign.dim_campaign_id
    LEFT JOIN fct_campaign
      ON fct_crm_touchpoint.dim_campaign_id = fct_campaign.dim_campaign_id
    LEFT JOIN dim_crm_person
      ON fct_crm_touchpoint.dim_crm_person_id = dim_crm_person.dim_crm_person_id
    LEFT JOIN fct_crm_person
      ON fct_crm_touchpoint.dim_crm_person_id = fct_crm_person.dim_crm_person_id
    LEFT JOIN dim_crm_account
      ON fct_crm_touchpoint.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user AS campaign_owner
      ON fct_campaign.campaign_owner_id = campaign_owner.dim_crm_user_id
    LEFT JOIN dim_crm_user
      ON fct_crm_touchpoint.dim_crm_user_id = dim_crm_user.dim_crm_user_id

), count_of_pre_mql_tps AS (

    SELECT DISTINCT
      joined.email_hash,
      COUNT(DISTINCT joined.dim_crm_touchpoint_id) AS pre_mql_touches
    FROM joined
    WHERE joined.mql_date_first IS NOT NULL
      AND joined.bizible_touchpoint_date <= joined.mql_date_first
    GROUP BY 1

), pre_mql_tps_by_person AS (

    SELECT
      count_of_pre_mql_tps.email_hash,
      count_of_pre_mql_tps.pre_mql_touches,
      1/count_of_pre_mql_tps.pre_mql_touches AS pre_mql_weight
    FROM count_of_pre_mql_tps
    GROUP BY 1,2

), pre_mql_tps AS (

    SELECT
      joined.dim_crm_touchpoint_id,
      pre_mql_tps_by_person.pre_mql_weight
    FROM pre_mql_tps_by_person
    LEFT JOIN joined 
      ON pre_mql_tps_by_person.email_hash=joined.email_hash
    WHERE joined.mql_date_first IS NOT NULL
      AND joined.bizible_touchpoint_date <= joined.mql_date_first

), post_mql_tps AS (

    SELECT
      joined.dim_crm_touchpoint_id,
      0 AS pre_mql_weight
    FROM joined
    WHERE joined.bizible_touchpoint_date > joined.mql_date_first
      OR joined.mql_date_first IS null

), mql_weighted_tps AS (

    SELECT *
    FROM pre_mql_tps

    UNION ALL

    SELECT *
    FROM post_mql_tps

),final AS (

  SELECT 
    joined.*,
    mql_weighted_tps.pre_mql_weight
  FROM joined
  LEFT JOIN mql_weighted_tps 
    ON joined.dim_crm_touchpoint_id=mql_weighted_tps.dim_crm_touchpoint_id

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@rkohnke'::VARCHAR       AS updated_by,
      '2021-02-18'::DATE        AS model_created_date,
      '2023-05-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final24:Tba06,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{% set renewal_fiscal_years = dbt_utils.get_column_values(
        table=ref('prep_renewal_fiscal_years'),
        where="fiscal_year >= 2019",
        column='fiscal_year',
        order_by='fiscal_year' )%}

{{ simple_cte([
    ('dim_date','dim_date'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_subscription', 'dim_subscription'),
    ('dim_crm_opportunity', 'dim_crm_opportunity'),
    ('fct_crm_opportunity', 'fct_crm_opportunity'),
    ('dim_charge', 'dim_charge'),
    ('fct_charge', 'fct_charge'),
    ('dim_billing_account', 'dim_billing_account'),
    ('dim_product_detail', 'dim_product_detail'),
    ('dim_amendment', 'dim_amendment')
]) }}

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

{% for renewal_fiscal_year in renewal_fiscal_years -%}
), renewal_subscriptions_{{renewal_fiscal_year}} AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_{{renewal_fiscal_year}} AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON mart_charge.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '{{renewal_fiscal_year}}'
        )

), agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term <= 12
    {{ dbt_utils.group_by(n=23) }}

), agg_charge_term_greater_than_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term > 12
    {{ dbt_utils.group_by(n=23) }}

), twenty_four_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

), thirty_six_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), forty_eight_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), sixty_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), combined_{{renewal_fiscal_year}} AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM sixty_mth_term_{{renewal_fiscal_year}}

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_{{renewal_fiscal_year}} AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_{{renewal_fiscal_year}}.term_end_month, base_{{renewal_fiscal_year}}.dim_charge_id)      AS concat_primary_key,
      {{ dbt_utils.surrogate_key(['concat_primary_key' ]) }}                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_{{renewal_fiscal_year}}.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_{{renewal_fiscal_year}}.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_{{renewal_fiscal_year}}.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_{{renewal_fiscal_year}}.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_{{renewal_fiscal_year}}.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_{{renewal_fiscal_year}}.subscription_name                                                                                        AS subscription_name,
      base_{{renewal_fiscal_year}}.subscription_start_month                                                                                 AS subscription_start_month,
      base_{{renewal_fiscal_year}}.subscription_end_month                                                                                   AS subscription_end_month,
      base_{{renewal_fiscal_year}}.term_start_month                                                                                         AS term_start_month,
      base_{{renewal_fiscal_year}}.term_end_month                                                                                           AS renewal_month,
      combined_{{renewal_fiscal_year}}.term_end_month                                                                                       AS bookings_term_end_month,
      base_{{renewal_fiscal_year}}.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_{{renewal_fiscal_year}}.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS current_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_{{renewal_fiscal_year}}.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_{{renewal_fiscal_year}}.crm_account_name                                                                                         AS crm_account_name,
      base_{{renewal_fiscal_year}}.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_{{renewal_fiscal_year}}.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_{{renewal_fiscal_year}}.user_name                                                                                                AS user_name,
      base_{{renewal_fiscal_year}}.user_role_id                                                                                             AS user_role_id,
      base_{{renewal_fiscal_year}}.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_{{renewal_fiscal_year}}.crm_user_geo                                                                                             AS crm_user_geo,
      base_{{renewal_fiscal_year}}.crm_user_region                                                                                          AS crm_user_region,
      base_{{renewal_fiscal_year}}.crm_user_area                                                                                            AS crm_user_area,
      base_{{renewal_fiscal_year}}.product_tier_name                                                                                        AS product_tier_name,
      base_{{renewal_fiscal_year}}.product_delivery_type                                                                                    AS product_delivery_type,
      combined_{{renewal_fiscal_year}}.renewal_type                                                                                         AS renewal_type,
      base_{{renewal_fiscal_year}}.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_{{renewal_fiscal_year}}.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS subscription_term,
      base_{{renewal_fiscal_year}}.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
          AND CONCAT('{{renewal_fiscal_year}}','-01-01')
            AND base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_{{renewal_fiscal_year}}.arr                                                                                                      AS arr
    FROM combined_{{renewal_fiscal_year}}
    LEFT JOIN dim_date
      ON combined_{{renewal_fiscal_year}}.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_{{renewal_fiscal_year}}
      ON combined_{{renewal_fiscal_year}}.dim_charge_id = base_{{renewal_fiscal_year}}.dim_charge_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON base_{{renewal_fiscal_year}}.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_{{renewal_fiscal_year}}.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
      AND CONCAT('{{renewal_fiscal_year}}','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

{% endfor -%}
), unioned as (

{% for renewal_fiscal_year in renewal_fiscal_years-%}

    SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_{{renewal_fiscal_year}}
    {%- if not loop.last %} UNION ALL {%- endif %}

{% endfor -%}

)

{{ dbt_audit(
    cte_ref="unioned",
    created_by="@michellecooper",
    updated_by="@nmcavinue",
    created_date="2021-12-06",
    updated_date="2023-05-30"
) }}25:T4f7ad,





WITH dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_opportunity

), fct_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_opportunity

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_charge

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_amendment AS (

    SELECT * 
    FROM "PROD".common.dim_amendment

)

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

), renewal_subscriptions_2019 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2019 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2019.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2019
      ON mart_charge.subscription_name = renewal_subscriptions_2019.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2019'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2019'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2019'
        )

), agg_charge_term_less_than_equal_12_2019 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2019
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2019 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2019
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2019 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2019 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2019

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2019

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2019

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2019

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2019

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2019

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2019 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2019.term_end_month, base_2019.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2019.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2019.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2019.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2019.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2019.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2019.subscription_name                                                                                        AS subscription_name,
      base_2019.subscription_start_month                                                                                 AS subscription_start_month,
      base_2019.subscription_end_month                                                                                   AS subscription_end_month,
      base_2019.term_start_month                                                                                         AS term_start_month,
      base_2019.term_end_month                                                                                           AS renewal_month,
      combined_2019.term_end_month                                                                                       AS bookings_term_end_month,
      base_2019.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2019.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2019.current_term                                                                                             AS current_term,
      renewal_subscriptions_2019.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2019.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2019.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2019.crm_account_name                                                                                         AS crm_account_name,
      base_2019.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2019.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2019.user_name                                                                                                AS user_name,
      base_2019.user_role_id                                                                                             AS user_role_id,
      base_2019.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2019.crm_user_geo                                                                                             AS crm_user_geo,
      base_2019.crm_user_region                                                                                          AS crm_user_region,
      base_2019.crm_user_area                                                                                            AS crm_user_area,
      base_2019.product_tier_name                                                                                        AS product_tier_name,
      base_2019.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2019.renewal_type                                                                                         AS renewal_type,
      base_2019.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2019.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2019.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2019.current_term                                                                                             AS subscription_term,
      base_2019.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
          AND CONCAT('2019','-01-01')
            AND base_2019.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2019.arr                                                                                                      AS arr
    FROM combined_2019
    LEFT JOIN dim_date
      ON combined_2019.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2019
      ON combined_2019.dim_charge_id = base_2019.dim_charge_id
    LEFT JOIN renewal_subscriptions_2019
      ON base_2019.subscription_name = renewal_subscriptions_2019.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2019.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
      AND CONCAT('2019','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2020 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2020 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2020.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2020
      ON mart_charge.subscription_name = renewal_subscriptions_2020.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2020'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2020'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2020'
        )

), agg_charge_term_less_than_equal_12_2020 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2020
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2020 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2020
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2020 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2020 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2020

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2020

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2020

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2020

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2020

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2020

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2020 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2020.term_end_month, base_2020.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2020.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2020.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2020.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2020.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2020.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2020.subscription_name                                                                                        AS subscription_name,
      base_2020.subscription_start_month                                                                                 AS subscription_start_month,
      base_2020.subscription_end_month                                                                                   AS subscription_end_month,
      base_2020.term_start_month                                                                                         AS term_start_month,
      base_2020.term_end_month                                                                                           AS renewal_month,
      combined_2020.term_end_month                                                                                       AS bookings_term_end_month,
      base_2020.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2020.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2020.current_term                                                                                             AS current_term,
      renewal_subscriptions_2020.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2020.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2020.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2020.crm_account_name                                                                                         AS crm_account_name,
      base_2020.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2020.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2020.user_name                                                                                                AS user_name,
      base_2020.user_role_id                                                                                             AS user_role_id,
      base_2020.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2020.crm_user_geo                                                                                             AS crm_user_geo,
      base_2020.crm_user_region                                                                                          AS crm_user_region,
      base_2020.crm_user_area                                                                                            AS crm_user_area,
      base_2020.product_tier_name                                                                                        AS product_tier_name,
      base_2020.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2020.renewal_type                                                                                         AS renewal_type,
      base_2020.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2020.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2020.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2020.current_term                                                                                             AS subscription_term,
      base_2020.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
          AND CONCAT('2020','-01-01')
            AND base_2020.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2020.arr                                                                                                      AS arr
    FROM combined_2020
    LEFT JOIN dim_date
      ON combined_2020.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2020
      ON combined_2020.dim_charge_id = base_2020.dim_charge_id
    LEFT JOIN renewal_subscriptions_2020
      ON base_2020.subscription_name = renewal_subscriptions_2020.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2020.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
      AND CONCAT('2020','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2021 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2021 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2021.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2021
      ON mart_charge.subscription_name = renewal_subscriptions_2021.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2021'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2021'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2021'
        )

), agg_charge_term_less_than_equal_12_2021 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2021
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2021 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2021
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2021 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2021 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2021

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2021

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2021

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2021

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2021

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2021

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2021 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2021.term_end_month, base_2021.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2021.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2021.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2021.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2021.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2021.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2021.subscription_name                                                                                        AS subscription_name,
      base_2021.subscription_start_month                                                                                 AS subscription_start_month,
      base_2021.subscription_end_month                                                                                   AS subscription_end_month,
      base_2021.term_start_month                                                                                         AS term_start_month,
      base_2021.term_end_month                                                                                           AS renewal_month,
      combined_2021.term_end_month                                                                                       AS bookings_term_end_month,
      base_2021.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2021.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2021.current_term                                                                                             AS current_term,
      renewal_subscriptions_2021.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2021.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2021.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2021.crm_account_name                                                                                         AS crm_account_name,
      base_2021.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2021.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2021.user_name                                                                                                AS user_name,
      base_2021.user_role_id                                                                                             AS user_role_id,
      base_2021.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2021.crm_user_geo                                                                                             AS crm_user_geo,
      base_2021.crm_user_region                                                                                          AS crm_user_region,
      base_2021.crm_user_area                                                                                            AS crm_user_area,
      base_2021.product_tier_name                                                                                        AS product_tier_name,
      base_2021.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2021.renewal_type                                                                                         AS renewal_type,
      base_2021.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2021.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2021.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2021.current_term                                                                                             AS subscription_term,
      base_2021.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
          AND CONCAT('2021','-01-01')
            AND base_2021.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2021.arr                                                                                                      AS arr
    FROM combined_2021
    LEFT JOIN dim_date
      ON combined_2021.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2021
      ON combined_2021.dim_charge_id = base_2021.dim_charge_id
    LEFT JOIN renewal_subscriptions_2021
      ON base_2021.subscription_name = renewal_subscriptions_2021.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2021.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
      AND CONCAT('2021','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2022 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2022 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2022.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2022
      ON mart_charge.subscription_name = renewal_subscriptions_2022.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2022'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2022'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2022'
        )

), agg_charge_term_less_than_equal_12_2022 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2022
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2022 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2022
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2022 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2022 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2022

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2022

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2022

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2022

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2022

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2022

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2022 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2022.term_end_month, base_2022.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2022.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2022.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2022.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2022.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2022.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2022.subscription_name                                                                                        AS subscription_name,
      base_2022.subscription_start_month                                                                                 AS subscription_start_month,
      base_2022.subscription_end_month                                                                                   AS subscription_end_month,
      base_2022.term_start_month                                                                                         AS term_start_month,
      base_2022.term_end_month                                                                                           AS renewal_month,
      combined_2022.term_end_month                                                                                       AS bookings_term_end_month,
      base_2022.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2022.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2022.current_term                                                                                             AS current_term,
      renewal_subscriptions_2022.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2022.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2022.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2022.crm_account_name                                                                                         AS crm_account_name,
      base_2022.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2022.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2022.user_name                                                                                                AS user_name,
      base_2022.user_role_id                                                                                             AS user_role_id,
      base_2022.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2022.crm_user_geo                                                                                             AS crm_user_geo,
      base_2022.crm_user_region                                                                                          AS crm_user_region,
      base_2022.crm_user_area                                                                                            AS crm_user_area,
      base_2022.product_tier_name                                                                                        AS product_tier_name,
      base_2022.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2022.renewal_type                                                                                         AS renewal_type,
      base_2022.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2022.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2022.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2022.current_term                                                                                             AS subscription_term,
      base_2022.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
          AND CONCAT('2022','-01-01')
            AND base_2022.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2022.arr                                                                                                      AS arr
    FROM combined_2022
    LEFT JOIN dim_date
      ON combined_2022.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2022
      ON combined_2022.dim_charge_id = base_2022.dim_charge_id
    LEFT JOIN renewal_subscriptions_2022
      ON base_2022.subscription_name = renewal_subscriptions_2022.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2022.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
      AND CONCAT('2022','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2023 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2023 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2023.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2023
      ON mart_charge.subscription_name = renewal_subscriptions_2023.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2023'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2023'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2023'
        )

), agg_charge_term_less_than_equal_12_2023 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2023
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2023 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2023
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2023 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2023 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2023

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2023

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2023

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2023

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2023

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2023

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2023 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2023.term_end_month, base_2023.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2023.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2023.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2023.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2023.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2023.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2023.subscription_name                                                                                        AS subscription_name,
      base_2023.subscription_start_month                                                                                 AS subscription_start_month,
      base_2023.subscription_end_month                                                                                   AS subscription_end_month,
      base_2023.term_start_month                                                                                         AS term_start_month,
      base_2023.term_end_month                                                                                           AS renewal_month,
      combined_2023.term_end_month                                                                                       AS bookings_term_end_month,
      base_2023.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2023.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2023.current_term                                                                                             AS current_term,
      renewal_subscriptions_2023.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2023.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2023.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2023.crm_account_name                                                                                         AS crm_account_name,
      base_2023.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2023.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2023.user_name                                                                                                AS user_name,
      base_2023.user_role_id                                                                                             AS user_role_id,
      base_2023.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2023.crm_user_geo                                                                                             AS crm_user_geo,
      base_2023.crm_user_region                                                                                          AS crm_user_region,
      base_2023.crm_user_area                                                                                            AS crm_user_area,
      base_2023.product_tier_name                                                                                        AS product_tier_name,
      base_2023.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2023.renewal_type                                                                                         AS renewal_type,
      base_2023.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2023.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2023.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2023.current_term                                                                                             AS subscription_term,
      base_2023.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
          AND CONCAT('2023','-01-01')
            AND base_2023.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2023.arr                                                                                                      AS arr
    FROM combined_2023
    LEFT JOIN dim_date
      ON combined_2023.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2023
      ON combined_2023.dim_charge_id = base_2023.dim_charge_id
    LEFT JOIN renewal_subscriptions_2023
      ON base_2023.subscription_name = renewal_subscriptions_2023.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2023.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
      AND CONCAT('2023','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2024 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2024 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2024.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2024
      ON mart_charge.subscription_name = renewal_subscriptions_2024.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2024'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2024'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2024'
        )

), agg_charge_term_less_than_equal_12_2024 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2024
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2024 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2024
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2024 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2024 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2024

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2024

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2024

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2024

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2024

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2024

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2024 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2024.term_end_month, base_2024.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2024.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2024.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2024.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2024.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2024.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2024.subscription_name                                                                                        AS subscription_name,
      base_2024.subscription_start_month                                                                                 AS subscription_start_month,
      base_2024.subscription_end_month                                                                                   AS subscription_end_month,
      base_2024.term_start_month                                                                                         AS term_start_month,
      base_2024.term_end_month                                                                                           AS renewal_month,
      combined_2024.term_end_month                                                                                       AS bookings_term_end_month,
      base_2024.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2024.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2024.current_term                                                                                             AS current_term,
      renewal_subscriptions_2024.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2024.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2024.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2024.crm_account_name                                                                                         AS crm_account_name,
      base_2024.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2024.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2024.user_name                                                                                                AS user_name,
      base_2024.user_role_id                                                                                             AS user_role_id,
      base_2024.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2024.crm_user_geo                                                                                             AS crm_user_geo,
      base_2024.crm_user_region                                                                                          AS crm_user_region,
      base_2024.crm_user_area                                                                                            AS crm_user_area,
      base_2024.product_tier_name                                                                                        AS product_tier_name,
      base_2024.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2024.renewal_type                                                                                         AS renewal_type,
      base_2024.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2024.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2024.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2024.current_term                                                                                             AS subscription_term,
      base_2024.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
          AND CONCAT('2024','-01-01')
            AND base_2024.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2024.arr                                                                                                      AS arr
    FROM combined_2024
    LEFT JOIN dim_date
      ON combined_2024.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2024
      ON combined_2024.dim_charge_id = base_2024.dim_charge_id
    LEFT JOIN renewal_subscriptions_2024
      ON base_2024.subscription_name = renewal_subscriptions_2024.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2024.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
      AND CONCAT('2024','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2025 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2025 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2025.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2025
      ON mart_charge.subscription_name = renewal_subscriptions_2025.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2025'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2025'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2025'
        )

), agg_charge_term_less_than_equal_12_2025 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2025
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2025 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2025
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2025 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2025 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2025

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2025

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2025

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2025

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2025

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2025

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2025 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2025.term_end_month, base_2025.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2025.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2025.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2025.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2025.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2025.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2025.subscription_name                                                                                        AS subscription_name,
      base_2025.subscription_start_month                                                                                 AS subscription_start_month,
      base_2025.subscription_end_month                                                                                   AS subscription_end_month,
      base_2025.term_start_month                                                                                         AS term_start_month,
      base_2025.term_end_month                                                                                           AS renewal_month,
      combined_2025.term_end_month                                                                                       AS bookings_term_end_month,
      base_2025.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2025.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2025.current_term                                                                                             AS current_term,
      renewal_subscriptions_2025.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2025.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2025.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2025.crm_account_name                                                                                         AS crm_account_name,
      base_2025.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2025.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2025.user_name                                                                                                AS user_name,
      base_2025.user_role_id                                                                                             AS user_role_id,
      base_2025.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2025.crm_user_geo                                                                                             AS crm_user_geo,
      base_2025.crm_user_region                                                                                          AS crm_user_region,
      base_2025.crm_user_area                                                                                            AS crm_user_area,
      base_2025.product_tier_name                                                                                        AS product_tier_name,
      base_2025.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2025.renewal_type                                                                                         AS renewal_type,
      base_2025.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2025.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2025.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2025.current_term                                                                                             AS subscription_term,
      base_2025.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
          AND CONCAT('2025','-01-01')
            AND base_2025.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2025.arr                                                                                                      AS arr
    FROM combined_2025
    LEFT JOIN dim_date
      ON combined_2025.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2025
      ON combined_2025.dim_charge_id = base_2025.dim_charge_id
    LEFT JOIN renewal_subscriptions_2025
      ON base_2025.subscription_name = renewal_subscriptions_2025.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2025.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
      AND CONCAT('2025','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2026 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2026 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2026.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2026
      ON mart_charge.subscription_name = renewal_subscriptions_2026.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2026'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2026'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2026'
        )

), agg_charge_term_less_than_equal_12_2026 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2026
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2026 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2026
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2026 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2026 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2026

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2026

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2026

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2026

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2026

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2026

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2026 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2026.term_end_month, base_2026.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2026.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2026.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2026.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2026.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2026.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2026.subscription_name                                                                                        AS subscription_name,
      base_2026.subscription_start_month                                                                                 AS subscription_start_month,
      base_2026.subscription_end_month                                                                                   AS subscription_end_month,
      base_2026.term_start_month                                                                                         AS term_start_month,
      base_2026.term_end_month                                                                                           AS renewal_month,
      combined_2026.term_end_month                                                                                       AS bookings_term_end_month,
      base_2026.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2026.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2026.current_term                                                                                             AS current_term,
      renewal_subscriptions_2026.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2026.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2026.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2026.crm_account_name                                                                                         AS crm_account_name,
      base_2026.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2026.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2026.user_name                                                                                                AS user_name,
      base_2026.user_role_id                                                                                             AS user_role_id,
      base_2026.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2026.crm_user_geo                                                                                             AS crm_user_geo,
      base_2026.crm_user_region                                                                                          AS crm_user_region,
      base_2026.crm_user_area                                                                                            AS crm_user_area,
      base_2026.product_tier_name                                                                                        AS product_tier_name,
      base_2026.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2026.renewal_type                                                                                         AS renewal_type,
      base_2026.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2026.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2026.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2026.current_term                                                                                             AS subscription_term,
      base_2026.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
          AND CONCAT('2026','-01-01')
            AND base_2026.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2026.arr                                                                                                      AS arr
    FROM combined_2026
    LEFT JOIN dim_date
      ON combined_2026.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2026
      ON combined_2026.dim_charge_id = base_2026.dim_charge_id
    LEFT JOIN renewal_subscriptions_2026
      ON base_2026.subscription_name = renewal_subscriptions_2026.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2026.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
      AND CONCAT('2026','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2027 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2027 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2027.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2027
      ON mart_charge.subscription_name = renewal_subscriptions_2027.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2027'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2027'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2027'
        )

), agg_charge_term_less_than_equal_12_2027 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2027
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2027 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2027
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2027 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2027 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2027

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2027

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2027

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2027

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2027

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2027

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2027 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2027.term_end_month, base_2027.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2027.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2027.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2027.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2027.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2027.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2027.subscription_name                                                                                        AS subscription_name,
      base_2027.subscription_start_month                                                                                 AS subscription_start_month,
      base_2027.subscription_end_month                                                                                   AS subscription_end_month,
      base_2027.term_start_month                                                                                         AS term_start_month,
      base_2027.term_end_month                                                                                           AS renewal_month,
      combined_2027.term_end_month                                                                                       AS bookings_term_end_month,
      base_2027.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2027.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2027.current_term                                                                                             AS current_term,
      renewal_subscriptions_2027.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2027.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2027.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2027.crm_account_name                                                                                         AS crm_account_name,
      base_2027.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2027.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2027.user_name                                                                                                AS user_name,
      base_2027.user_role_id                                                                                             AS user_role_id,
      base_2027.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2027.crm_user_geo                                                                                             AS crm_user_geo,
      base_2027.crm_user_region                                                                                          AS crm_user_region,
      base_2027.crm_user_area                                                                                            AS crm_user_area,
      base_2027.product_tier_name                                                                                        AS product_tier_name,
      base_2027.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2027.renewal_type                                                                                         AS renewal_type,
      base_2027.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2027.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2027.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2027.current_term                                                                                             AS subscription_term,
      base_2027.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
          AND CONCAT('2027','-01-01')
            AND base_2027.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2027.arr                                                                                                      AS arr
    FROM combined_2027
    LEFT JOIN dim_date
      ON combined_2027.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2027
      ON combined_2027.dim_charge_id = base_2027.dim_charge_id
    LEFT JOIN renewal_subscriptions_2027
      ON base_2027.subscription_name = renewal_subscriptions_2027.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2027.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
      AND CONCAT('2027','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2028 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2028 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2028.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2028
      ON mart_charge.subscription_name = renewal_subscriptions_2028.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2028'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2028'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2028'
        )

), agg_charge_term_less_than_equal_12_2028 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2028
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2028 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2028
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2028 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2028 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2028

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2028

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2028

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2028

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2028

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2028

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2028 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2028.term_end_month, base_2028.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2028.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2028.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2028.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2028.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2028.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2028.subscription_name                                                                                        AS subscription_name,
      base_2028.subscription_start_month                                                                                 AS subscription_start_month,
      base_2028.subscription_end_month                                                                                   AS subscription_end_month,
      base_2028.term_start_month                                                                                         AS term_start_month,
      base_2028.term_end_month                                                                                           AS renewal_month,
      combined_2028.term_end_month                                                                                       AS bookings_term_end_month,
      base_2028.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2028.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2028.current_term                                                                                             AS current_term,
      renewal_subscriptions_2028.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2028.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2028.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2028.crm_account_name                                                                                         AS crm_account_name,
      base_2028.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2028.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2028.user_name                                                                                                AS user_name,
      base_2028.user_role_id                                                                                             AS user_role_id,
      base_2028.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2028.crm_user_geo                                                                                             AS crm_user_geo,
      base_2028.crm_user_region                                                                                          AS crm_user_region,
      base_2028.crm_user_area                                                                                            AS crm_user_area,
      base_2028.product_tier_name                                                                                        AS product_tier_name,
      base_2028.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2028.renewal_type                                                                                         AS renewal_type,
      base_2028.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2028.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2028.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2028.current_term                                                                                             AS subscription_term,
      base_2028.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
          AND CONCAT('2028','-01-01')
            AND base_2028.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2028.arr                                                                                                      AS arr
    FROM combined_2028
    LEFT JOIN dim_date
      ON combined_2028.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2028
      ON combined_2028.dim_charge_id = base_2028.dim_charge_id
    LEFT JOIN renewal_subscriptions_2028
      ON base_2028.subscription_name = renewal_subscriptions_2028.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2028.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
      AND CONCAT('2028','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2029 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2029 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2029.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2029
      ON mart_charge.subscription_name = renewal_subscriptions_2029.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2029'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2029'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2029'
        )

), agg_charge_term_less_than_equal_12_2029 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2029
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2029 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2029
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2029 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2029 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2029

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2029

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2029

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2029

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2029

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2029

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2029 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2029.term_end_month, base_2029.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2029.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2029.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2029.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2029.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2029.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2029.subscription_name                                                                                        AS subscription_name,
      base_2029.subscription_start_month                                                                                 AS subscription_start_month,
      base_2029.subscription_end_month                                                                                   AS subscription_end_month,
      base_2029.term_start_month                                                                                         AS term_start_month,
      base_2029.term_end_month                                                                                           AS renewal_month,
      combined_2029.term_end_month                                                                                       AS bookings_term_end_month,
      base_2029.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2029.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2029.current_term                                                                                             AS current_term,
      renewal_subscriptions_2029.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2029.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2029.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2029.crm_account_name                                                                                         AS crm_account_name,
      base_2029.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2029.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2029.user_name                                                                                                AS user_name,
      base_2029.user_role_id                                                                                             AS user_role_id,
      base_2029.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2029.crm_user_geo                                                                                             AS crm_user_geo,
      base_2029.crm_user_region                                                                                          AS crm_user_region,
      base_2029.crm_user_area                                                                                            AS crm_user_area,
      base_2029.product_tier_name                                                                                        AS product_tier_name,
      base_2029.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2029.renewal_type                                                                                         AS renewal_type,
      base_2029.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2029.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2029.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2029.current_term                                                                                             AS subscription_term,
      base_2029.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
          AND CONCAT('2029','-01-01')
            AND base_2029.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2029.arr                                                                                                      AS arr
    FROM combined_2029
    LEFT JOIN dim_date
      ON combined_2029.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2029
      ON combined_2029.dim_charge_id = base_2029.dim_charge_id
    LEFT JOIN renewal_subscriptions_2029
      ON base_2029.subscription_name = renewal_subscriptions_2029.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2029.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
      AND CONCAT('2029','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), unioned as (

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2019 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2020 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2021 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2022 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2023 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2024 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2025 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2026 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2027 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2028 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2029

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2021-12-06'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM unioned26:T3fc3,{{ config(
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('dim_crm_touchpoint','dim_crm_touchpoint'),
    ('fct_crm_attribution_touchpoint','fct_crm_attribution_touchpoint'),
    ('dim_campaign','dim_campaign'),
    ('fct_campaign','fct_campaign'),
    ('dim_crm_person','dim_crm_person'),
    ('fct_crm_person', 'fct_crm_person'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_crm_user','dim_crm_user'),
    ('fct_crm_opportunity','fct_crm_opportunity'),
    ('dim_crm_opportunity', 'dim_crm_opportunity'),
    ('dim_date', 'dim_date')
]) }}

, joined AS (

    SELECT
      -- touchpoint info
      dim_crm_touchpoint.dim_crm_touchpoint_id,
      {{ dbt_utils.surrogate_key(['fct_crm_attribution_touchpoint.dim_crm_person_id','dim_campaign.dim_campaign_id','dim_crm_touchpoint.bizible_touchpoint_date_time']) }} AS touchpoint_person_campaign_date_id,
      dim_crm_touchpoint.bizible_touchpoint_date,
      dim_crm_touchpoint.bizible_touchpoint_date_time,
      dim_crm_touchpoint.bizible_touchpoint_month,
      dim_crm_touchpoint.bizible_touchpoint_position,
      dim_crm_touchpoint.bizible_touchpoint_source,
      dim_crm_touchpoint.bizible_touchpoint_source_type,
      dim_crm_touchpoint.bizible_touchpoint_type,
      dim_crm_touchpoint.bizible_ad_campaign_name,
      dim_crm_touchpoint.bizible_ad_content,
      dim_crm_touchpoint.bizible_ad_group_name,
      dim_crm_touchpoint.bizible_form_url,
      dim_crm_touchpoint.bizible_form_url_raw,
      dim_crm_touchpoint.bizible_landing_page,
      dim_crm_touchpoint.bizible_landing_page_raw,
      dim_crm_touchpoint.bizible_marketing_channel,
      dim_crm_touchpoint.bizible_marketing_channel_path,
      dim_crm_touchpoint.bizible_medium,
      dim_crm_touchpoint.bizible_referrer_page,
      dim_crm_touchpoint.bizible_referrer_page_raw,
      dim_crm_touchpoint.bizible_form_page_utm_content,
      dim_crm_touchpoint.bizible_form_page_utm_budget,
      dim_crm_touchpoint.bizible_form_page_utm_allptnr,
      dim_crm_touchpoint.bizible_form_page_utm_partnerid,
      dim_crm_touchpoint.bizible_landing_page_utm_content,
      dim_crm_touchpoint.bizible_landing_page_utm_budget,
      dim_crm_touchpoint.bizible_landing_page_utm_allptnr,
      dim_crm_touchpoint.bizible_landing_page_utm_partnerid,
      dim_crm_touchpoint.bizible_salesforce_campaign,
      dim_crm_touchpoint.bizible_integrated_campaign_grouping,
      dim_crm_touchpoint.touchpoint_segment,
      dim_crm_touchpoint.gtm_motion,
      dim_crm_touchpoint.integrated_campaign_grouping,
      dim_crm_touchpoint.pipe_name,
      dim_crm_touchpoint.is_dg_influenced,
      dim_crm_touchpoint.is_dg_sourced,
      fct_crm_attribution_touchpoint.opps_per_touchpoint,
      fct_crm_attribution_touchpoint.bizible_count_lead_creation_touch,
      fct_crm_attribution_touchpoint.bizible_count_first_touch,
      fct_crm_attribution_touchpoint.bizible_attribution_percent_full_path,
      fct_crm_attribution_touchpoint.bizible_count_custom_model,
      fct_crm_attribution_touchpoint.bizible_count_u_shaped,
      fct_crm_attribution_touchpoint.bizible_count_w_shaped,
	  fct_crm_attribution_touchpoint.bizible_weight_full_path,
      fct_crm_attribution_touchpoint.bizible_weight_custom_model,
      fct_crm_attribution_touchpoint.bizible_weight_first_touch,
      fct_crm_attribution_touchpoint.bizible_weight_lead_conversion,
      fct_crm_attribution_touchpoint.bizible_weight_u_shaped,
      fct_crm_attribution_touchpoint.bizible_weight_w_shaped,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_first_touch / 100)) AS first_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_w_shaped / 100)) AS w_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_u_shaped / 100)) AS u_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_full_path / 100)) AS full_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_custom_model / 100)) AS custom_net_arr,
      (fct_crm_opportunity.net_arr / NULLIF(fct_crm_attribution_touchpoint.campaigns_per_opp,0)) AS net_arr_per_campaign,
      fct_crm_attribution_touchpoint.bizible_revenue_full_path,
      fct_crm_attribution_touchpoint.bizible_revenue_custom_model,
      fct_crm_attribution_touchpoint.bizible_revenue_first_touch,
      fct_crm_attribution_touchpoint.bizible_revenue_lead_conversion,
      fct_crm_attribution_touchpoint.bizible_revenue_u_shaped,
      fct_crm_attribution_touchpoint.bizible_revenue_w_shaped,
      dim_crm_touchpoint.bizible_created_date, 

      -- person info
      fct_crm_attribution_touchpoint.dim_crm_person_id,
      dim_crm_person.sfdc_record_id,
      dim_crm_person.sfdc_record_type,
      dim_crm_person.marketo_lead_id,
      dim_crm_person.email_hash,
      dim_crm_person.email_domain,
      dim_crm_person.owner_id,
      dim_crm_person.person_score,
      dim_crm_person.title                                                  AS crm_person_title,
      dim_crm_person.country                                                AS crm_person_country,
      dim_crm_person.state                                                  AS crm_person_state,
      dim_crm_person.status                                                 AS crm_person_status,
      dim_crm_person.lead_source,
      dim_crm_person.lead_source_type,
      dim_crm_person.source_buckets                                         AS crm_person_source_buckets,
      dim_crm_person.net_new_source_categories,
      dim_crm_person.crm_partner_id,
      fct_crm_person.created_date                                           AS crm_person_created_date,
      fct_crm_person.inquiry_date,
      fct_crm_person.mql_date_first,
      fct_crm_person.mql_date_latest,
      fct_crm_person.legacy_mql_date_first,
      fct_crm_person.legacy_mql_date_latest,
      fct_crm_person.accepted_date,
      fct_crm_person.qualifying_date,
      fct_crm_person.qualified_date,
      fct_crm_person.converted_date,
      fct_crm_person.is_mql,
      fct_crm_person.is_inquiry,
      fct_crm_person.mql_count,
      fct_crm_person.last_utm_content,
      fct_crm_person.last_utm_campaign,
      dim_crm_person.account_demographics_sales_segment,
      dim_crm_person.account_demographics_geo,
      dim_crm_person.account_demographics_region,
      dim_crm_person.account_demographics_area,

      -- campaign info
      dim_campaign.dim_campaign_id,
      dim_campaign.campaign_name,
      dim_campaign.is_active                                                AS campaign_is_active,
      dim_campaign.status                                                   AS campagin_status,
      dim_campaign.type,
      dim_campaign.description,
      dim_campaign.budget_holder,
      dim_campaign.bizible_touchpoint_enabled_setting,
      dim_campaign.strategic_marketing_contribution,
      dim_campaign.large_bucket,
      dim_campaign.reporting_type,
      dim_campaign.allocadia_id,
      dim_campaign.is_a_channel_partner_involved,
      dim_campaign.is_an_alliance_partner_involved,
      dim_campaign.is_this_an_in_person_event,
      dim_campaign.will_there_be_mdf_funding,
      dim_campaign.alliance_partner_name,
      dim_campaign.channel_partner_name,
      dim_campaign.sales_play,
      dim_campaign.total_planned_mqls,
      fct_campaign.dim_parent_campaign_id,
      fct_campaign.campaign_owner_id,
      fct_campaign.created_by_id                                            AS campaign_created_by_id,
      fct_campaign.start_date                                               AS campaign_start_date,
      fct_campaign.end_date                                                 AS campaign_end_date,
      fct_campaign.created_date                                             AS campaign_created_date,
      fct_campaign.last_modified_date                                       AS campaign_last_modified_date,
      fct_campaign.last_activity_date                                       AS campaign_last_activity_date,
      fct_campaign.region                                                   AS campaign_region,
      fct_campaign.sub_region                                               AS campaign_sub_region,
      fct_campaign.budgeted_cost,
      fct_campaign.expected_response,
      fct_campaign.expected_revenue,
      fct_campaign.actual_cost,
      fct_campaign.amount_all_opportunities,
      fct_campaign.amount_won_opportunities,
      fct_campaign.count_contacts,
      fct_campaign.count_converted_leads,
      fct_campaign.count_leads,
      fct_campaign.count_opportunities,
      fct_campaign.count_responses,
      fct_campaign.count_won_opportunities,
      fct_campaign.count_sent,

      -- campaign owner info
      campaign_owner.user_name                             AS campaign_rep_name,
      campaign_owner.title                                 AS campaign_rep_title,
      campaign_owner.team                                  AS campaign_rep_team,
      campaign_owner.is_active                             AS campaign_rep_is_active,
      campaign_owner.user_role_name                        AS campaign_rep_role_name,
      campaign_owner.crm_user_sales_segment                AS campaign_crm_user_segment_name_live,
      campaign_owner.crm_user_geo                          AS campaign_crm_user_geo_name_live,
      campaign_owner.crm_user_region                       AS campaign_crm_user_region_name_live,
      campaign_owner.crm_user_area                         AS campaign_crm_user_area_name_live,

      -- sales rep info
      dim_crm_user.user_name                                AS rep_name,
      dim_crm_user.title                                    AS rep_title,
      dim_crm_user.team,
      dim_crm_user.is_active                                AS rep_is_active,
      dim_crm_user.user_role_name,
      dim_crm_user.crm_user_sales_segment                   AS touchpoint_crm_user_segment_name_live,
      dim_crm_user.crm_user_geo                             AS touchpoint_crm_user_geo_name_live,
      dim_crm_user.crm_user_region                          AS touchpoint_crm_user_region_name_live,
      dim_crm_user.crm_user_area                            AS touchpoint_crm_user_area_name_live,
      dim_crm_user.sdr_sales_segment,
      dim_crm_user.sdr_region,

      -- account info
      dim_crm_account.dim_crm_account_id,
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                          AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                             AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                               AS parent_crm_account_area,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.record_type_id,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_type,
      dim_crm_account.technical_account_manager,
      dim_crm_account.merged_to_account_id,
      dim_crm_account.is_reseller,

      -- opportunity info
      fct_crm_attribution_touchpoint.dim_crm_opportunity_id,
      fct_crm_opportunity.sales_accepted_date,
      fct_crm_opportunity.close_date                                       AS opportunity_close_date,
      fct_crm_opportunity.created_date                                     AS opportunity_created_date,
      dim_crm_opportunity.is_won,
      fct_crm_opportunity.is_net_arr_pipeline_created,
      fct_crm_opportunity.is_net_arr_closed_deal,
      fct_crm_opportunity.is_closed,
      fct_crm_opportunity.days_in_sao,
      fct_crm_opportunity.iacv,
      fct_crm_opportunity.net_arr,
      fct_crm_opportunity.amount,
      dim_crm_opportunity.is_edu_oss,
      dim_crm_opportunity.stage_name,
      dim_crm_opportunity.reason_for_loss,
      fct_crm_opportunity.is_sao,
      dim_crm_opportunity.deal_path AS deal_path_name,
      dim_crm_opportunity.order_type,
      dim_crm_opportunity.sales_qualified_source AS sales_qualified_source_name,
      dim_crm_opportunity.sales_type,
      fct_crm_opportunity.closed_buckets,
      dim_crm_opportunity.source_buckets                                   AS opportunity_source_buckets,
      dim_crm_opportunity.opportunity_sales_development_representative,
      dim_crm_opportunity.opportunity_business_development_representative,
      dim_crm_opportunity.sdr_or_bdr,
      dim_crm_opportunity.opportunity_development_representative,
      dim_crm_opportunity.is_web_portal_purchase,
      fct_crm_opportunity.count_crm_attribution_touchpoints                AS crm_attribution_touchpoints_per_opp,
      fct_crm_opportunity.weighted_linear_iacv,
      fct_crm_opportunity.count_campaigns                                  AS count_campaigns_per_opp,
      (fct_crm_opportunity.iacv / NULLIF(fct_crm_opportunity.count_campaigns,0))     AS iacv_per_campaign,

      -- bizible influenced
       CASE
        WHEN dim_campaign.budget_holder = 'fmm'
              OR campaign_rep_role_name = 'Field Marketing Manager'
              OR LOWER(dim_crm_touchpoint.utm_content) LIKE '%field%'
              OR LOWER(dim_campaign.type) = 'field event'
              OR LOWER(dim_crm_person.lead_source) = 'field event'
          THEN 1
        ELSE 0
      END AS is_fmm_influenced,
      CASE
        WHEN dim_crm_touchpoint.bizible_touchpoint_position LIKE '%FT%' 
          AND is_fmm_influenced = 1 
          THEN 1
        ELSE 0
      END AS is_fmm_sourced

    FROM fct_crm_attribution_touchpoint
    LEFT JOIN dim_crm_touchpoint
      ON fct_crm_attribution_touchpoint.dim_crm_touchpoint_id = dim_crm_touchpoint.dim_crm_touchpoint_id
    LEFT JOIN dim_campaign
      ON fct_crm_attribution_touchpoint.dim_campaign_id = dim_campaign.dim_campaign_id
    LEFT JOIN fct_campaign
      ON fct_crm_attribution_touchpoint.dim_campaign_id = fct_campaign.dim_campaign_id
    LEFT JOIN dim_crm_person
      ON fct_crm_attribution_touchpoint.dim_crm_person_id = dim_crm_person.dim_crm_person_id
    LEFT JOIN fct_crm_person
      ON fct_crm_attribution_touchpoint.dim_crm_person_id = fct_crm_person.dim_crm_person_id
    LEFT JOIN dim_crm_account
      ON fct_crm_attribution_touchpoint.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON fct_crm_attribution_touchpoint.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_crm_user AS campaign_owner
      ON fct_campaign.campaign_owner_id = campaign_owner.dim_crm_user_id
    LEFT JOIN fct_crm_opportunity
      ON fct_crm_attribution_touchpoint.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN dim_crm_opportunity
      ON fct_crm_attribution_touchpoint.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id

), linear_base AS ( --the number of touches a given opp has in total
    --linear attribution Net_Arr of an opp / all touches (count_touches) for each opp - weighted by the number of touches in the given bucket (campaign,channel,etc)

    SELECT
      dim_crm_opportunity_id, 
      net_arr,
      COUNT(dim_crm_touchpoint_id) AS touchpoints_per_opportunity,
      net_arr/NULLIF(touchpoints_per_opportunity,0) AS weighted_linear_net_arr
    FROM  joined
    GROUP BY 1,2

), final AS (

    SELECT
      joined.*,
      linear_base.touchpoints_per_opportunity,
      (joined.opps_per_touchpoint / NULLIF(linear_base.touchpoints_per_opportunity,0)) AS l_weight,
      (joined.net_arr * l_weight) AS linear_net_arr
    FROM joined
    LEFT JOIN linear_base 
      ON joined.dim_crm_opportunity_id = linear_base.dim_crm_opportunity_id

)


{{ dbt_audit(
    cte_ref="final",
    created_by="@mcooperDD",
    updated_by="@rkohnke",
    created_date="2020-02-18",
    updated_date="2023-05-22"
) }}27:T42ab,



WITH dim_crm_touchpoint AS (

    SELECT * 
    FROM "PROD".common.dim_crm_touchpoint

), fct_crm_attribution_touchpoint AS (

    SELECT * 
    FROM "PROD".common.fct_crm_attribution_touchpoint

), dim_campaign AS (

    SELECT * 
    FROM "PROD".common.dim_campaign

), fct_campaign AS (

    SELECT * 
    FROM "PROD".common.fct_campaign

), dim_crm_person AS (

    SELECT * 
    FROM "PROD".common.dim_crm_person

), fct_crm_person AS (

    SELECT * 
    FROM "PROD".common.fct_crm_person

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), fct_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_opportunity

), dim_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_opportunity

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

)

, joined AS (

    SELECT
      -- touchpoint info
      dim_crm_touchpoint.dim_crm_touchpoint_id,
      md5(cast(coalesce(cast(fct_crm_attribution_touchpoint.dim_crm_person_id as 
    varchar
), '') || '-' || coalesce(cast(dim_campaign.dim_campaign_id as 
    varchar
), '') || '-' || coalesce(cast(dim_crm_touchpoint.bizible_touchpoint_date_time as 
    varchar
), '') as 
    varchar
)) AS touchpoint_person_campaign_date_id,
      dim_crm_touchpoint.bizible_touchpoint_date,
      dim_crm_touchpoint.bizible_touchpoint_date_time,
      dim_crm_touchpoint.bizible_touchpoint_month,
      dim_crm_touchpoint.bizible_touchpoint_position,
      dim_crm_touchpoint.bizible_touchpoint_source,
      dim_crm_touchpoint.bizible_touchpoint_source_type,
      dim_crm_touchpoint.bizible_touchpoint_type,
      dim_crm_touchpoint.bizible_ad_campaign_name,
      dim_crm_touchpoint.bizible_ad_content,
      dim_crm_touchpoint.bizible_ad_group_name,
      dim_crm_touchpoint.bizible_form_url,
      dim_crm_touchpoint.bizible_form_url_raw,
      dim_crm_touchpoint.bizible_landing_page,
      dim_crm_touchpoint.bizible_landing_page_raw,
      dim_crm_touchpoint.bizible_marketing_channel,
      dim_crm_touchpoint.bizible_marketing_channel_path,
      dim_crm_touchpoint.bizible_medium,
      dim_crm_touchpoint.bizible_referrer_page,
      dim_crm_touchpoint.bizible_referrer_page_raw,
      dim_crm_touchpoint.bizible_form_page_utm_content,
      dim_crm_touchpoint.bizible_form_page_utm_budget,
      dim_crm_touchpoint.bizible_form_page_utm_allptnr,
      dim_crm_touchpoint.bizible_form_page_utm_partnerid,
      dim_crm_touchpoint.bizible_landing_page_utm_content,
      dim_crm_touchpoint.bizible_landing_page_utm_budget,
      dim_crm_touchpoint.bizible_landing_page_utm_allptnr,
      dim_crm_touchpoint.bizible_landing_page_utm_partnerid,
      dim_crm_touchpoint.bizible_salesforce_campaign,
      dim_crm_touchpoint.bizible_integrated_campaign_grouping,
      dim_crm_touchpoint.touchpoint_segment,
      dim_crm_touchpoint.gtm_motion,
      dim_crm_touchpoint.integrated_campaign_grouping,
      dim_crm_touchpoint.pipe_name,
      dim_crm_touchpoint.is_dg_influenced,
      dim_crm_touchpoint.is_dg_sourced,
      fct_crm_attribution_touchpoint.opps_per_touchpoint,
      fct_crm_attribution_touchpoint.bizible_count_lead_creation_touch,
      fct_crm_attribution_touchpoint.bizible_count_first_touch,
      fct_crm_attribution_touchpoint.bizible_attribution_percent_full_path,
      fct_crm_attribution_touchpoint.bizible_count_custom_model,
      fct_crm_attribution_touchpoint.bizible_count_u_shaped,
      fct_crm_attribution_touchpoint.bizible_count_w_shaped,
	  fct_crm_attribution_touchpoint.bizible_weight_full_path,
      fct_crm_attribution_touchpoint.bizible_weight_custom_model,
      fct_crm_attribution_touchpoint.bizible_weight_first_touch,
      fct_crm_attribution_touchpoint.bizible_weight_lead_conversion,
      fct_crm_attribution_touchpoint.bizible_weight_u_shaped,
      fct_crm_attribution_touchpoint.bizible_weight_w_shaped,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_first_touch / 100)) AS first_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_w_shaped / 100)) AS w_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_u_shaped / 100)) AS u_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_full_path / 100)) AS full_net_arr,
      (fct_crm_opportunity.net_arr * (fct_crm_attribution_touchpoint.bizible_weight_custom_model / 100)) AS custom_net_arr,
      (fct_crm_opportunity.net_arr / NULLIF(fct_crm_attribution_touchpoint.campaigns_per_opp,0)) AS net_arr_per_campaign,
      fct_crm_attribution_touchpoint.bizible_revenue_full_path,
      fct_crm_attribution_touchpoint.bizible_revenue_custom_model,
      fct_crm_attribution_touchpoint.bizible_revenue_first_touch,
      fct_crm_attribution_touchpoint.bizible_revenue_lead_conversion,
      fct_crm_attribution_touchpoint.bizible_revenue_u_shaped,
      fct_crm_attribution_touchpoint.bizible_revenue_w_shaped,
      dim_crm_touchpoint.bizible_created_date, 

      -- person info
      fct_crm_attribution_touchpoint.dim_crm_person_id,
      dim_crm_person.sfdc_record_id,
      dim_crm_person.sfdc_record_type,
      dim_crm_person.marketo_lead_id,
      dim_crm_person.email_hash,
      dim_crm_person.email_domain,
      dim_crm_person.owner_id,
      dim_crm_person.person_score,
      dim_crm_person.title                                                  AS crm_person_title,
      dim_crm_person.country                                                AS crm_person_country,
      dim_crm_person.state                                                  AS crm_person_state,
      dim_crm_person.status                                                 AS crm_person_status,
      dim_crm_person.lead_source,
      dim_crm_person.lead_source_type,
      dim_crm_person.source_buckets                                         AS crm_person_source_buckets,
      dim_crm_person.net_new_source_categories,
      dim_crm_person.crm_partner_id,
      fct_crm_person.created_date                                           AS crm_person_created_date,
      fct_crm_person.inquiry_date,
      fct_crm_person.mql_date_first,
      fct_crm_person.mql_date_latest,
      fct_crm_person.legacy_mql_date_first,
      fct_crm_person.legacy_mql_date_latest,
      fct_crm_person.accepted_date,
      fct_crm_person.qualifying_date,
      fct_crm_person.qualified_date,
      fct_crm_person.converted_date,
      fct_crm_person.is_mql,
      fct_crm_person.is_inquiry,
      fct_crm_person.mql_count,
      fct_crm_person.last_utm_content,
      fct_crm_person.last_utm_campaign,
      dim_crm_person.account_demographics_sales_segment,
      dim_crm_person.account_demographics_geo,
      dim_crm_person.account_demographics_region,
      dim_crm_person.account_demographics_area,

      -- campaign info
      dim_campaign.dim_campaign_id,
      dim_campaign.campaign_name,
      dim_campaign.is_active                                                AS campaign_is_active,
      dim_campaign.status                                                   AS campagin_status,
      dim_campaign.type,
      dim_campaign.description,
      dim_campaign.budget_holder,
      dim_campaign.bizible_touchpoint_enabled_setting,
      dim_campaign.strategic_marketing_contribution,
      dim_campaign.large_bucket,
      dim_campaign.reporting_type,
      dim_campaign.allocadia_id,
      dim_campaign.is_a_channel_partner_involved,
      dim_campaign.is_an_alliance_partner_involved,
      dim_campaign.is_this_an_in_person_event,
      dim_campaign.will_there_be_mdf_funding,
      dim_campaign.alliance_partner_name,
      dim_campaign.channel_partner_name,
      dim_campaign.sales_play,
      dim_campaign.total_planned_mqls,
      fct_campaign.dim_parent_campaign_id,
      fct_campaign.campaign_owner_id,
      fct_campaign.created_by_id                                            AS campaign_created_by_id,
      fct_campaign.start_date                                               AS campaign_start_date,
      fct_campaign.end_date                                                 AS campaign_end_date,
      fct_campaign.created_date                                             AS campaign_created_date,
      fct_campaign.last_modified_date                                       AS campaign_last_modified_date,
      fct_campaign.last_activity_date                                       AS campaign_last_activity_date,
      fct_campaign.region                                                   AS campaign_region,
      fct_campaign.sub_region                                               AS campaign_sub_region,
      fct_campaign.budgeted_cost,
      fct_campaign.expected_response,
      fct_campaign.expected_revenue,
      fct_campaign.actual_cost,
      fct_campaign.amount_all_opportunities,
      fct_campaign.amount_won_opportunities,
      fct_campaign.count_contacts,
      fct_campaign.count_converted_leads,
      fct_campaign.count_leads,
      fct_campaign.count_opportunities,
      fct_campaign.count_responses,
      fct_campaign.count_won_opportunities,
      fct_campaign.count_sent,

      -- campaign owner info
      campaign_owner.user_name                             AS campaign_rep_name,
      campaign_owner.title                                 AS campaign_rep_title,
      campaign_owner.team                                  AS campaign_rep_team,
      campaign_owner.is_active                             AS campaign_rep_is_active,
      campaign_owner.user_role_name                        AS campaign_rep_role_name,
      campaign_owner.crm_user_sales_segment                AS campaign_crm_user_segment_name_live,
      campaign_owner.crm_user_geo                          AS campaign_crm_user_geo_name_live,
      campaign_owner.crm_user_region                       AS campaign_crm_user_region_name_live,
      campaign_owner.crm_user_area                         AS campaign_crm_user_area_name_live,

      -- sales rep info
      dim_crm_user.user_name                                AS rep_name,
      dim_crm_user.title                                    AS rep_title,
      dim_crm_user.team,
      dim_crm_user.is_active                                AS rep_is_active,
      dim_crm_user.user_role_name,
      dim_crm_user.crm_user_sales_segment                   AS touchpoint_crm_user_segment_name_live,
      dim_crm_user.crm_user_geo                             AS touchpoint_crm_user_geo_name_live,
      dim_crm_user.crm_user_region                          AS touchpoint_crm_user_region_name_live,
      dim_crm_user.crm_user_area                            AS touchpoint_crm_user_area_name_live,
      dim_crm_user.sdr_sales_segment,
      dim_crm_user.sdr_region,

      -- account info
      dim_crm_account.dim_crm_account_id,
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                          AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                             AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                               AS parent_crm_account_area,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.record_type_id,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_type,
      dim_crm_account.technical_account_manager,
      dim_crm_account.merged_to_account_id,
      dim_crm_account.is_reseller,

      -- opportunity info
      fct_crm_attribution_touchpoint.dim_crm_opportunity_id,
      fct_crm_opportunity.sales_accepted_date,
      fct_crm_opportunity.close_date                                       AS opportunity_close_date,
      fct_crm_opportunity.created_date                                     AS opportunity_created_date,
      dim_crm_opportunity.is_won,
      fct_crm_opportunity.is_net_arr_pipeline_created,
      fct_crm_opportunity.is_net_arr_closed_deal,
      fct_crm_opportunity.is_closed,
      fct_crm_opportunity.days_in_sao,
      fct_crm_opportunity.iacv,
      fct_crm_opportunity.net_arr,
      fct_crm_opportunity.amount,
      dim_crm_opportunity.is_edu_oss,
      dim_crm_opportunity.stage_name,
      dim_crm_opportunity.reason_for_loss,
      fct_crm_opportunity.is_sao,
      dim_crm_opportunity.deal_path AS deal_path_name,
      dim_crm_opportunity.order_type,
      dim_crm_opportunity.sales_qualified_source AS sales_qualified_source_name,
      dim_crm_opportunity.sales_type,
      fct_crm_opportunity.closed_buckets,
      dim_crm_opportunity.source_buckets                                   AS opportunity_source_buckets,
      dim_crm_opportunity.opportunity_sales_development_representative,
      dim_crm_opportunity.opportunity_business_development_representative,
      dim_crm_opportunity.sdr_or_bdr,
      dim_crm_opportunity.opportunity_development_representative,
      dim_crm_opportunity.is_web_portal_purchase,
      fct_crm_opportunity.count_crm_attribution_touchpoints                AS crm_attribution_touchpoints_per_opp,
      fct_crm_opportunity.weighted_linear_iacv,
      fct_crm_opportunity.count_campaigns                                  AS count_campaigns_per_opp,
      (fct_crm_opportunity.iacv / NULLIF(fct_crm_opportunity.count_campaigns,0))     AS iacv_per_campaign,

      -- bizible influenced
       CASE
        WHEN dim_campaign.budget_holder = 'fmm'
              OR campaign_rep_role_name = 'Field Marketing Manager'
              OR LOWER(dim_crm_touchpoint.utm_content) LIKE '%field%'
              OR LOWER(dim_campaign.type) = 'field event'
              OR LOWER(dim_crm_person.lead_source) = 'field event'
          THEN 1
        ELSE 0
      END AS is_fmm_influenced,
      CASE
        WHEN dim_crm_touchpoint.bizible_touchpoint_position LIKE '%FT%' 
          AND is_fmm_influenced = 1 
          THEN 1
        ELSE 0
      END AS is_fmm_sourced

    FROM fct_crm_attribution_touchpoint
    LEFT JOIN dim_crm_touchpoint
      ON fct_crm_attribution_touchpoint.dim_crm_touchpoint_id = dim_crm_touchpoint.dim_crm_touchpoint_id
    LEFT JOIN dim_campaign
      ON fct_crm_attribution_touchpoint.dim_campaign_id = dim_campaign.dim_campaign_id
    LEFT JOIN fct_campaign
      ON fct_crm_attribution_touchpoint.dim_campaign_id = fct_campaign.dim_campaign_id
    LEFT JOIN dim_crm_person
      ON fct_crm_attribution_touchpoint.dim_crm_person_id = dim_crm_person.dim_crm_person_id
    LEFT JOIN fct_crm_person
      ON fct_crm_attribution_touchpoint.dim_crm_person_id = fct_crm_person.dim_crm_person_id
    LEFT JOIN dim_crm_account
      ON fct_crm_attribution_touchpoint.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON fct_crm_attribution_touchpoint.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_crm_user AS campaign_owner
      ON fct_campaign.campaign_owner_id = campaign_owner.dim_crm_user_id
    LEFT JOIN fct_crm_opportunity
      ON fct_crm_attribution_touchpoint.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN dim_crm_opportunity
      ON fct_crm_attribution_touchpoint.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id

), linear_base AS ( --the number of touches a given opp has in total
    --linear attribution Net_Arr of an opp / all touches (count_touches) for each opp - weighted by the number of touches in the given bucket (campaign,channel,etc)

    SELECT
      dim_crm_opportunity_id, 
      net_arr,
      COUNT(dim_crm_touchpoint_id) AS touchpoints_per_opportunity,
      net_arr/NULLIF(touchpoints_per_opportunity,0) AS weighted_linear_net_arr
    FROM  joined
    GROUP BY 1,2

), final AS (

    SELECT
      joined.*,
      linear_base.touchpoints_per_opportunity,
      (joined.opps_per_touchpoint / NULLIF(linear_base.touchpoints_per_opportunity,0)) AS l_weight,
      (joined.net_arr * l_weight) AS linear_net_arr
    FROM joined
    LEFT JOIN linear_base 
      ON joined.dim_crm_opportunity_id = linear_base.dim_crm_opportunity_id

)


SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@rkohnke'::VARCHAR       AS updated_by,
      '2020-02-18'::DATE        AS model_created_date,
      '2023-05-22'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final28:T3488,





WITH sfdc_user_roles_source AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_user_roles_source

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), sfdc_users_source AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_users_source

), sfdc_user_snapshots_source AS (

    SELECT * 
    FROM "PROD".legacy.sfdc_user_snapshots_source

)

, sheetload_mapping_sdr_sfdc_bamboohr_source AS (

    SELECT *
    FROM "PREP".sheetload.sheetload_mapping_sdr_sfdc_bamboohr_source

), sfdc_users AS (

    SELECT
        *
    FROM
      sfdc_users_source

), current_fiscal_year AS (

    SELECT 
      fiscal_year
    FROM dim_date
    WHERE date_actual = CURRENT_DATE()

), final AS (

    SELECT
      sfdc_users.user_id                                                                                                              AS dim_crm_user_id,
      sfdc_users.employee_number,
      sfdc_users.name                                                                                                                 AS user_name,
      sfdc_users.title,
      sfdc_users.department,
      sfdc_users.team,
      sfdc_users.manager_id,
      sfdc_users.manager_name,
      sfdc_users.user_email,
      sfdc_users.is_active,
      sfdc_users.start_date,
      sfdc_users.ramping_quota,
      sfdc_users.user_timezone,
      sfdc_users.user_role_id,
      sfdc_user_roles_source.name                                                                                                     AS user_role_name,
      md5(cast(coalesce(cast(sfdc_users.user_segment as 
    varchar
), '') as 
    varchar
))                                                                      AS dim_crm_user_sales_segment_id,
      sfdc_users.user_segment                                                                                                         AS crm_user_sales_segment,
      sfdc_users.user_segment_grouped                                                                                                 AS crm_user_sales_segment_grouped,
      md5(cast(coalesce(cast(sfdc_users.user_geo as 
    varchar
), '') as 
    varchar
))                                                                          AS dim_crm_user_geo_id,
      sfdc_users.user_geo                                                                                                             AS crm_user_geo,
      md5(cast(coalesce(cast(sfdc_users.user_region as 
    varchar
), '') as 
    varchar
))                                                                       AS dim_crm_user_region_id,
      sfdc_users.user_region                                                                                                          AS crm_user_region,
      md5(cast(coalesce(cast(sfdc_users.user_area as 
    varchar
), '') as 
    varchar
))                                                                         AS dim_crm_user_area_id,
      sfdc_users.user_area                                                                                                            AS crm_user_area,
      md5(cast(coalesce(cast(sfdc_users.user_business_unit as 
    varchar
), '') as 
    varchar
))                                                                AS dim_crm_user_business_unit_id,
      sfdc_users.user_business_unit                                                                                                   AS crm_user_business_unit,
      md5(cast(coalesce(cast(sfdc_users.user_role_type as 
    varchar
), '') as 
    varchar
))                                                                    AS dim_crm_user_role_type_id,
      sfdc_users.user_role_type                                                                                                       AS crm_user_role_type,
      CASE 
        WHEN sfdc_users.is_hybrid_user = 'Yes' 
          THEN 1
        WHEN sfdc_users.is_hybrid_user = 'No' 
          THEN  0
        WHEN sfdc_users.is_hybrid_user IS NULL 
          THEN 0
        ELSE 0 
      END                                                                                                                             AS is_hybrid_user,
      CASE
        WHEN LOWER(sfdc_users.user_business_unit) = 'comm'
          THEN CONCAT(
                      UPPER(sfdc_users.user_business_unit), 
                      '-',
                      UPPER(sfdc_users.user_geo), 
                      '-',
                      UPPER(sfdc_users.user_segment), 
                      '-',
                      UPPER(sfdc_users.user_region), 
                      '-',
                      UPPER(sfdc_users.user_area),
                      '-',
                      current_fiscal_year.fiscal_year
                      )
        WHEN LOWER(sfdc_users.user_business_unit) = 'entg'
          THEN CONCAT(
                      UPPER(sfdc_users.user_business_unit), 
                      '-',
                      UPPER(sfdc_users.user_geo), 
                      '-',
                      UPPER(sfdc_users.user_region), 
                      '-',
                      UPPER(sfdc_users.user_area), 
                      '-',
                      UPPER(sfdc_users.user_segment),
                      '-',
                      current_fiscal_year.fiscal_year
                      )
        WHEN sfdc_users.user_business_unit IS NOT NULL 
          AND LOWER(sfdc_users.user_business_unit) NOT IN ('comm', 'entg') -- account for non-sales reps
          THEN CONCAT(
                      UPPER(sfdc_users.user_business_unit), 
                      '-',
                      UPPER(sfdc_users.user_segment), 
                      '-',
                      UPPER(sfdc_users.user_geo), 
                      '-',
                      UPPER(sfdc_users.user_region), 
                      '-',
                      UPPER(sfdc_users.user_area),
                      '-',
                      current_fiscal_year.fiscal_year
                      )
        WHEN sfdc_users.user_business_unit IS NULL -- account for nulls/possible data issues
          THEN CONCAT(
                      UPPER(sfdc_users.user_segment), 
                      '-',
                      UPPER(sfdc_users.user_geo), 
                      '-',
                      UPPER(sfdc_users.user_region), 
                      '-',
                      UPPER(sfdc_users.user_area),
                      '-',
                      current_fiscal_year.fiscal_year
                      )
        END                                                                                                                           AS dim_crm_user_hierarchy_sk,
      COALESCE(
               sfdc_users.user_segment_geo_region_area,
               CONCAT(sfdc_users.user_segment,'-' , sfdc_users.user_geo, '-', sfdc_users.user_region, '-', sfdc_users.user_area)
               )                                                                                                                      AS crm_user_sales_segment_geo_region_area,
      sfdc_users.user_segment_region_grouped                                                                                          AS crm_user_sales_segment_region_grouped,
      sheetload_mapping_sdr_sfdc_bamboohr_source.sdr_segment                                                                          AS sdr_sales_segment,
      sheetload_mapping_sdr_sfdc_bamboohr_source.sdr_region,
      sfdc_users.created_date,
         CASE
        WHEN LOWER(sfdc_users.user_business_unit) = 'entg'
          THEN user_geo

        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
          AND
            (
            LOWER(sfdc_users.user_segment) = 'smb'
            AND LOWER(sfdc_users.user_geo) = 'amer'
            AND LOWER(sfdc_users.user_area) = 'lowtouch'
            ) 
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
          AND
            (
            LOWER(sfdc_users.user_segment) = 'mid-market'
            AND (LOWER(sfdc_users.user_geo) = 'amer' OR LOWER(sfdc_users.user_geo) = 'emea')
            AND LOWER(sfdc_users.user_role_type) = 'first order'
            )
          THEN 'MM First Orders'  --mid-market FO(?)
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
          AND LOWER(sfdc_users.user_geo) = 'emea'
          AND 
            (
            LOWER(sfdc_users.user_segment) != 'mid-market'
            AND LOWER(sfdc_users.user_role_type) != 'first order'
            )
          THEN  'EMEA'
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
          AND LOWER(sfdc_users.user_geo) = 'amer'
          AND
            (
            LOWER(sfdc_users.user_segment) != 'mid-market'
            AND LOWER(sfdc_users.user_role_type) != 'first order'
            )
          AND
            (
            LOWER(sfdc_users.user_segment) != 'smb'
            AND LOWER(sfdc_users.user_area) != 'lowtouch'
            )
          THEN 'AMER'
        ELSE 'Other'
      END                                                                                                                             AS crm_user_sub_business_unit,

      -- Division (X-Ray 3rd hierarchy)
      CASE 
        WHEN LOWER(sfdc_users.user_business_unit) = 'entg'
          THEN sfdc_users.user_region

        WHEN 
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND (LOWER(crm_user_sub_business_unit) = 'amer' OR LOWER(crm_user_sub_business_unit) = 'emea')
              AND LOWER(sfdc_users.user_segment) = 'mid-market'
          THEN 'Mid-Market'
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND (LOWER(crm_user_sub_business_unit) = 'amer' OR LOWER(crm_user_sub_business_unit) = 'emea')
              AND LOWER(sfdc_users.user_segment) = 'smb'
          THEN 'SMB'
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND LOWER(crm_user_sub_business_unit) = 'mm first orders'
          THEN 'MM First Orders'
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND LOWER(crm_user_sub_business_unit) = 'amer low-touch'
          THEN 'AMER Low-Touch'
        ELSE 'Other'
      END                                                                                                                             AS crm_user_division,

      -- ASM (X-Ray 4th hierarchy): definition pending
      CASE
        WHEN 
          LOWER(sfdc_users.user_business_unit) = 'entg'
            AND LOWER(crm_user_sub_business_unit) = 'amer'
          THEN sfdc_users.user_area
        WHEN 
          LOWER(sfdc_users.user_business_unit) = 'entg'
            AND LOWER(crm_user_sub_business_unit) = 'emea'
              AND (LOWER(crm_user_division) = 'dach' OR LOWER(crm_user_division) = 'neur' OR LOWER(crm_user_division) = 'seur')
          THEN sfdc_users.user_area
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'entg'
            AND LOWER(crm_user_sub_business_unit) = 'emea'
              AND LOWER(crm_user_division) = 'meta'
          THEN sfdc_users.user_segment --- pending/ waiting for Meri?
        WHEN 
          LOWER(sfdc_users.user_business_unit) = 'entg'
            AND LOWER(crm_user_sub_business_unit) = 'apac'
          THEN sfdc_users.user_area
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'entg'
            AND LOWER(crm_user_sub_business_unit) = 'pubsec'
              AND LOWER(crm_user_division) != 'sled'
          THEN sfdc_users.user_area
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'entg'
            AND LOWER(crm_user_sub_business_unit) = 'pubsec'
              AND LOWER(crm_user_division) = 'sled'
          THEN sfdc_users.user_region

        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND (LOWER(crm_user_sub_business_unit) = 'amer' OR LOWER(crm_user_sub_business_unit) = 'emea')
          THEN sfdc_users.user_area
        WHEN 
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND LOWER(crm_user_sub_business_unit) = 'mm first orders'
          THEN sfdc_users.user_geo
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND LOWER(crm_user_sub_business_unit) = 'amer low-touch'
              AND LOWER(sfdc_users.user_role_type) = 'first order'
          THEN 'LowTouch FO'
        WHEN
          LOWER(sfdc_users.user_business_unit) = 'comm'
            AND LOWER(crm_user_sub_business_unit) = 'amer low-touch'
              AND LOWER(sfdc_users.user_role_type) != 'first order'
          THEN 'LowTouch Pool'
        ELSE 'Other'
      END                                                                                                         AS asm
    FROM sfdc_users
    LEFT JOIN sfdc_user_roles_source
      ON sfdc_users.user_role_id = sfdc_user_roles_source.id
    LEFT JOIN sheetload_mapping_sdr_sfdc_bamboohr_source
      ON sfdc_users.user_id = sheetload_mapping_sdr_sfdc_bamboohr_source.user_id
    LEFT JOIN current_fiscal_year

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2021-01-12'::DATE        AS model_created_date,
      '2022-03-02'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final29:T571,{%- macro dbt_audit(cte_ref, created_by, updated_by, created_date, updated_date) -%}

    SELECT
      *,
      '{{ created_by }}'::VARCHAR       AS created_by,
      '{{ updated_by }}'::VARCHAR       AS updated_by,
      '{{ created_date }}'::DATE        AS model_created_date,
      '{{ updated_date }}'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    {% if execute %}

        {% if not flags.FULL_REFRESH and config.get('materialized') == "incremental" %}

            {%- set source_relation = adapter.get_relation(
                database=target.database,
                schema=this.schema,
                identifier=this.table,
                ) -%}      

            {% if source_relation != None %}

                {% set min_created_date %}
                    SELECT LEAST(MIN(dbt_created_at), CURRENT_TIMESTAMP()) AS min_ts 
                    FROM {{ this }}
                {% endset %}

                {% set results = run_query(min_created_date) %}

                '{{results.columns[0].values()[0]}}'::TIMESTAMP AS dbt_created_at

            {% else %}

                CURRENT_TIMESTAMP()               AS dbt_created_at

            {% endif %}

        {% else %}

            CURRENT_TIMESTAMP()               AS dbt_created_at

        {% endif %}
    
    {% endif %}

    FROM {{ cte_ref }}

{%- endmacro -%}2b:T570,-- depends_on: "PROD".common_prep.prep_crm_user


WITH final AS (

    SELECT 
      "DIM_CRM_USER_ID",
  "EMPLOYEE_NUMBER",
  "USER_NAME",
  "TITLE",
  "DEPARTMENT",
  "TEAM",
  "MANAGER_ID",
  "MANAGER_NAME",
  "USER_EMAIL",
  "IS_ACTIVE",
  "START_DATE",
  "RAMPING_QUOTA",
  "USER_TIMEZONE",
  "USER_ROLE_ID",
  "USER_ROLE_NAME",
  "DIM_CRM_USER_SALES_SEGMENT_ID",
  "CRM_USER_SALES_SEGMENT",
  "CRM_USER_SALES_SEGMENT_GROUPED",
  "DIM_CRM_USER_GEO_ID",
  "CRM_USER_GEO",
  "DIM_CRM_USER_REGION_ID",
  "CRM_USER_REGION",
  "DIM_CRM_USER_AREA_ID",
  "CRM_USER_AREA",
  "DIM_CRM_USER_BUSINESS_UNIT_ID",
  "CRM_USER_BUSINESS_UNIT",
  "DIM_CRM_USER_ROLE_TYPE_ID",
  "CRM_USER_ROLE_TYPE",
  "IS_HYBRID_USER",
  "DIM_CRM_USER_HIERARCHY_SK",
  "CRM_USER_SALES_SEGMENT_GEO_REGION_AREA",
  "CRM_USER_SALES_SEGMENT_REGION_GROUPED",
  "SDR_SALES_SEGMENT",
  "SDR_REGION",
  "CREATED_DATE",
  "CRM_USER_SUB_BUSINESS_UNIT",
  "CRM_USER_DIVISION",
  "ASM"
    FROM "PROD".common_prep.prep_crm_user

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2020-11-20'::DATE        AS model_created_date,
      '2023-05-04'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM finalc:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.dim_crm_user"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"dim_crm_user"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","six_hourly",{"children":[["$","code",null,{"children":["$","a",null,{"children":"six_hourly"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PROD.common.dim_crm_user"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"300 KB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-10 18:59UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"Dimension representing the associated user from salesforce. Most often this will be the record owner, which is a ubiquitous field in salesforce."}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_CRM_USER","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_USER_ID":{"type":"TEXT","index":1,"name":"dim_crm_user_id","comment":null,"description":"Primary key for Salesforce users and the primary key for this dimension","meta":{},"data_type":null,"quote":null,"tags":["tdf","common"],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_user_id"},"EMPLOYEE_NUMBER":{"type":"TEXT","index":2,"name":"EMPLOYEE_NUMBER","comment":null,"display_name":"employee_number"},"USER_NAME":{"type":"TEXT","index":3,"name":"USER_NAME","comment":null,"display_name":"user_name"},"TITLE":{"type":"TEXT","index":4,"name":"TITLE","comment":null,"display_name":"title"},"DEPARTMENT":{"type":"TEXT","index":5,"name":"DEPARTMENT","comment":null,"display_name":"department"},"TEAM":{"type":"TEXT","index":6,"name":"TEAM","comment":null,"display_name":"team"},"MANAGER_ID":{"type":"TEXT","index":7,"name":"MANAGER_ID","comment":null,"display_name":"manager_id"},"MANAGER_NAME":{"type":"TEXT","index":8,"name":"MANAGER_NAME","comment":null,"display_name":"manager_name"},"USER_EMAIL":{"type":"TEXT","index":9,"name":"USER_EMAIL","comment":null,"display_name":"user_email"},"IS_ACTIVE":{"type":"BOOLEAN","index":10,"name":"is_active","comment":null,"description":"A boolean column that flags if the user is active in salesforce, which means that the user can login and use salesforce.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common"],"display_name":"is_active"},"START_DATE":{"type":"TIMESTAMP_TZ","index":11,"name":"START_DATE","comment":null,"display_name":"start_date"},"RAMPING_QUOTA":{"type":"FLOAT","index":12,"name":"RAMPING_QUOTA","comment":null,"display_name":"ramping_quota"},"USER_TIMEZONE":{"type":"TEXT","index":13,"name":"USER_TIMEZONE","comment":null,"display_name":"user_timezone"},"USER_ROLE_ID":{"type":"TEXT","index":14,"name":"USER_ROLE_ID","comment":null,"display_name":"user_role_id"},"USER_ROLE_NAME":{"type":"TEXT","index":15,"name":"USER_ROLE_NAME","comment":null,"display_name":"user_role_name"},"DIM_CRM_USER_SALES_SEGMENT_ID":{"type":"TEXT","index":16,"name":"DIM_CRM_USER_SALES_SEGMENT_ID","comment":null,"display_name":"dim_crm_user_sales_segment_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":17,"name":"CRM_USER_SALES_SEGMENT","comment":null,"display_name":"crm_user_sales_segment"},"CRM_USER_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":18,"name":"CRM_USER_SALES_SEGMENT_GROUPED","comment":null,"display_name":"crm_user_sales_segment_grouped"},"DIM_CRM_USER_GEO_ID":{"type":"TEXT","index":19,"name":"DIM_CRM_USER_GEO_ID","comment":null,"display_name":"dim_crm_user_geo_id"},"CRM_USER_GEO":{"type":"TEXT","index":20,"name":"CRM_USER_GEO","comment":null,"display_name":"crm_user_geo"},"DIM_CRM_USER_REGION_ID":{"type":"TEXT","index":21,"name":"DIM_CRM_USER_REGION_ID","comment":null,"display_name":"dim_crm_user_region_id"},"CRM_USER_REGION":{"type":"TEXT","index":22,"name":"CRM_USER_REGION","comment":null,"display_name":"crm_user_region"},"DIM_CRM_USER_AREA_ID":{"type":"TEXT","index":23,"name":"DIM_CRM_USER_AREA_ID","comment":null,"display_name":"dim_crm_user_area_id"},"CRM_USER_AREA":{"type":"TEXT","index":24,"name":"CRM_USER_AREA","comment":null,"display_name":"crm_user_area"},"DIM_CRM_USER_BUSINESS_UNIT_ID":{"type":"TEXT","index":25,"name":"DIM_CRM_USER_BUSINESS_UNIT_ID","comment":null,"display_name":"dim_crm_user_business_unit_id"},"CRM_USER_BUSINESS_UNIT":{"type":"TEXT","index":26,"name":"CRM_USER_BUSINESS_UNIT","comment":null,"display_name":"crm_user_business_unit"},"DIM_CRM_USER_ROLE_TYPE_ID":{"type":"TEXT","index":27,"name":"DIM_CRM_USER_ROLE_TYPE_ID","comment":null,"display_name":"dim_crm_user_role_type_id"},"CRM_USER_ROLE_TYPE":{"type":"TEXT","index":28,"name":"CRM_USER_ROLE_TYPE","comment":null,"display_name":"crm_user_role_type"},"IS_HYBRID_USER":{"type":"NUMBER","index":29,"name":"IS_HYBRID_USER","comment":null,"display_name":"is_hybrid_user"},"DIM_CRM_USER_HIERARCHY_SK":{"type":"TEXT","index":30,"name":"DIM_CRM_USER_HIERARCHY_SK","comment":null,"display_name":"dim_crm_user_hierarchy_sk"},"CRM_USER_SALES_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":31,"name":"CRM_USER_SALES_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"crm_user_sales_segment_geo_region_area"},"CRM_USER_SALES_SEGMENT_REGION_GROUPED":{"type":"TEXT","index":32,"name":"CRM_USER_SALES_SEGMENT_REGION_GROUPED","comment":null,"display_name":"crm_user_sales_segment_region_grouped"},"SDR_SALES_SEGMENT":{"type":"TEXT","index":33,"name":"sdr_sales_segment","comment":null,"description":"Sales segment of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_sales_segment"},"SDR_REGION":{"type":"TEXT","index":34,"name":"sdr_region","comment":null,"description":"Region of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_region"},"CREATED_DATE":{"type":"TIMESTAMP_TZ","index":35,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"CRM_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":36,"name":"CRM_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"crm_user_sub_business_unit"},"CRM_USER_DIVISION":{"type":"TEXT","index":37,"name":"CRM_USER_DIVISION","comment":null,"display_name":"crm_user_division"},"ASM":{"type":"TEXT","index":38,"name":"ASM","comment":null,"display_name":"asm"},"CREATED_BY":{"type":"TEXT","index":39,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":40,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":41,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":42,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":43,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":44,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:59UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":307200,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_crm_user","raw_sql":"-- depends_on: {{ ref('prep_crm_user') }}\n{{ config(\n    tags=[\"six_hourly\"]\n) }}\n\nWITH final AS (\n\n    SELECT \n      {{ dbt_utils.star(\n           from=ref('prep_crm_user'), \n           except=['CREATED_BY','UPDATED_BY','MODEL_CREATED_DATE','MODEL_UPDATED_DATE','DBT_UPDATED_AT','DBT_CREATED_AT']\n           ) \n      }}\n    FROM {{ ref('prep_crm_user') }}\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@mcooperDD\",\n    updated_by=\"@chrissharp\",\n    created_date=\"2020-11-20\",\n    updated_date=\"2023-05-04\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":["six_hourly"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_crm_user"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_crm_user.sql","original_file_path":"models/common/dimensions_shared/dim_crm_user.sql","name":"dim_crm_user","alias":"dim_crm_user","checksum":{"name":"sha256","checksum":"588a33a50f090b966eb62b2fbd241c6c8d23d28fc321a104487f13099eed5795"},"tags":["six_hourly"],"refs":[["prep_crm_user"],["prep_crm_user"],["prep_crm_user"],["prep_crm_user"],["prep_crm_user"],["prep_crm_user"]],"sources":[],"metrics":[],"description":"Dimension representing the associated user from salesforce. Most often this will be the record owner, which is a ubiquitous field in salesforce.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_crm_user.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["six_hourly"]},"created_at":1689033750.59549,"compiled_sql":"$10","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_crm_user","label":"dim_crm_user"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L11",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_SALES","name":"MART_CHARGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CHARGE_ID":{"type":"TEXT","index":1,"name":"dim_charge_id","comment":null,"description":"The unique identifier of a rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_charge_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"RATE_PLAN_NAME":{"type":"TEXT","index":7,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":8,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"RATE_PLAN_CHARGE_DESCRIPTION":{"type":"TEXT","index":9,"name":"RATE_PLAN_CHARGE_DESCRIPTION","comment":null,"display_name":"rate_plan_charge_description"},"CHARGE_TYPE":{"type":"TEXT","index":10,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":11,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":12,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":13,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"EFFECTIVE_START_DATE":{"type":"DATE","index":14,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":15,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":16,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":17,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":18,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":19,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":20,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"SUBSCRIPTION_CREATED_BY_ID":{"type":"TEXT","index":21,"name":"SUBSCRIPTION_CREATED_BY_ID","comment":null,"display_name":"subscription_created_by_id"},"SUBSCRIPTION_UPDATED_BY_ID":{"type":"TEXT","index":22,"name":"SUBSCRIPTION_UPDATED_BY_ID","comment":null,"display_name":"subscription_updated_by_id"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":23,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":24,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":25,"name":"SUBSCRIPTION_START_MONTH","comment":null,"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":26,"name":"SUBSCRIPTION_END_MONTH","comment":null,"display_name":"subscription_end_month"},"SUBSCRIPTION_END_FISCAL_YEAR":{"type":"NUMBER","index":27,"name":"SUBSCRIPTION_END_FISCAL_YEAR","comment":null,"display_name":"subscription_end_fiscal_year"},"SUBSCRIPTION_CREATED_DATE":{"type":"DATE","index":28,"name":"SUBSCRIPTION_CREATED_DATE","comment":null,"display_name":"subscription_created_date"},"SUBSCRIPTION_UPDATED_DATE":{"type":"DATE","index":29,"name":"SUBSCRIPTION_UPDATED_DATE","comment":null,"display_name":"subscription_updated_date"},"SECOND_ACTIVE_RENEWAL_MONTH":{"type":"DATE","index":30,"name":"SECOND_ACTIVE_RENEWAL_MONTH","comment":null,"display_name":"second_active_renewal_month"},"TERM_START_DATE":{"type":"DATE","index":31,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":32,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"TERM_START_MONTH":{"type":"DATE","index":33,"name":"TERM_START_MONTH","comment":null,"display_name":"term_start_month"},"TERM_END_MONTH":{"type":"DATE","index":34,"name":"TERM_END_MONTH","comment":null,"display_name":"term_end_month"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":35,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":36,"name":"SUBSCRIPTION_SALES_TYPE","comment":null,"display_name":"subscription_sales_type"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":37,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":38,"name":"OLDEST_SUBSCRIPTION_IN_COHORT","comment":null,"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":39,"name":"SUBSCRIPTION_LINEAGE","comment":null,"display_name":"subscription_lineage"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":40,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":41,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":42,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":43,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":44,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":45,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":46,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":47,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":48,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":49,"name":"INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"invoice_owner_account"},"CREATOR_ACCOUNT":{"type":"TEXT","index":50,"name":"CREATOR_ACCOUNT","comment":null,"display_name":"creator_account"},"WAS_PURCHASED_THROUGH_RESELLER":{"type":"BOOLEAN","index":51,"name":"was_purchased_through_reseller","comment":null,"description":"Boolean field that indicates whether the subscription was purchased through a reseller. If TRUE, the `invoice_owner_account` will contain the name of the reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"was_purchased_through_reseller"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":52,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"SOLD_TO_COUNTRY":{"type":"TEXT","index":53,"name":"SOLD_TO_COUNTRY","comment":null,"display_name":"sold_to_country"},"BILLING_ACCOUNT_NAME":{"type":"TEXT","index":54,"name":"BILLING_ACCOUNT_NAME","comment":null,"display_name":"billing_account_name"},"BILLING_ACCOUNT_NUMBER":{"type":"TEXT","index":55,"name":"BILLING_ACCOUNT_NUMBER","comment":null,"display_name":"billing_account_number"},"SSP_CHANNEL":{"type":"TEXT","index":56,"name":"SSP_CHANNEL","comment":null,"display_name":"ssp_channel"},"PO_REQUIRED":{"type":"TEXT","index":57,"name":"PO_REQUIRED","comment":null,"display_name":"po_required"},"AUTO_PAY":{"type":"BOOLEAN","index":58,"name":"AUTO_PAY","comment":null,"display_name":"auto_pay"},"DEFAULT_PAYMENT_METHOD_TYPE":{"type":"TEXT","index":59,"name":"DEFAULT_PAYMENT_METHOD_TYPE","comment":null,"display_name":"default_payment_method_type"},"DIM_CRM_USER_ID":{"type":"TEXT","index":60,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":61,"name":"CRM_USER_SALES_SEGMENT","comment":null,"display_name":"crm_user_sales_segment"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":62,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":63,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":64,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":65,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":66,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":67,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":68,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":69,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":70,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":71,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":72,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"HEALTH_NUMBER":{"type":"FLOAT","index":73,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":74,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"DIM_ORDER_ID":{"type":"TEXT","index":75,"name":"dim_order_id","comment":null,"description":"Unique identifier for an order. Can be used to join to dim_order.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_order_id"},"SUBSCRIPTION_RENEWAL_TYPE":{"type":"TEXT","index":76,"name":"subscription_renewal_type","comment":null,"description":"Calculated field that indicates how a subscription renewal was made. Can be one of 'Auto-Renewal', 'Customer Portal', 'Sales-Assisted' or null when the charge is not related to a subscription renewal.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_renewal_type"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":77,"name":"SUBSCRIPTION_COHORT_MONTH","comment":null,"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":78,"name":"SUBSCRIPTION_COHORT_QUARTER","comment":null,"display_name":"subscription_cohort_quarter"},"BILLING_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":79,"name":"BILLING_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"billing_account_cohort_month"},"BILLING_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":80,"name":"BILLING_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"billing_account_cohort_quarter"},"CRM_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":81,"name":"CRM_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"crm_account_cohort_month"},"CRM_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":82,"name":"CRM_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"crm_account_cohort_quarter"},"PARENT_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":83,"name":"PARENT_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"parent_account_cohort_month"},"PARENT_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":84,"name":"PARENT_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"parent_account_cohort_quarter"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":85,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":86,"name":"PRODUCT_TIER_NAME","comment":null,"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":87,"name":"PRODUCT_DELIVERY_TYPE","comment":null,"display_name":"product_delivery_type"},"PRODUCT_RANKING":{"type":"NUMBER","index":88,"name":"PRODUCT_RANKING","comment":null,"display_name":"product_ranking"},"SERVICE_TYPE":{"type":"TEXT","index":89,"name":"SERVICE_TYPE","comment":null,"display_name":"service_type"},"PRODUCT_RATE_PLAN_NAME":{"type":"TEXT","index":90,"name":"PRODUCT_RATE_PLAN_NAME","comment":null,"display_name":"product_rate_plan_name"},"IS_LICENSED_USER":{"type":"BOOLEAN","index":91,"name":"IS_LICENSED_USER","comment":null,"display_name":"is_licensed_user"},"IS_ARPU":{"type":"BOOLEAN","index":92,"name":"IS_ARPU","comment":null,"display_name":"is_arpu"},"DIM_AMENDMENT_ID_SUBSCRIPTION":{"type":"TEXT","index":93,"name":"DIM_AMENDMENT_ID_SUBSCRIPTION","comment":null,"display_name":"dim_amendment_id_subscription"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":94,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"SUBSCRIPTION_AMENDMENT_EFFECTIVE_DATE":{"type":"TIMESTAMP_TZ","index":95,"name":"SUBSCRIPTION_AMENDMENT_EFFECTIVE_DATE","comment":null,"display_name":"subscription_amendment_effective_date"},"SUBSCRIPTION_AMENDMENT_TYPE":{"type":"TEXT","index":96,"name":"SUBSCRIPTION_AMENDMENT_TYPE","comment":null,"display_name":"subscription_amendment_type"},"SUBSCRIPTION_AMENDMENT_NAME":{"type":"TEXT","index":97,"name":"SUBSCRIPTION_AMENDMENT_NAME","comment":null,"display_name":"subscription_amendment_name"},"CHARGE_AMENDMENT_TYPE":{"type":"TEXT","index":98,"name":"CHARGE_AMENDMENT_TYPE","comment":null,"display_name":"charge_amendment_type"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":99,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"MRR":{"type":"FLOAT","index":100,"name":"MRR","comment":null,"display_name":"mrr"},"PREVIOUS_MRR":{"type":"FLOAT","index":101,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR":{"type":"FLOAT","index":102,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"ARR":{"type":"FLOAT","index":103,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":104,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARR":{"type":"FLOAT","index":105,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":106,"name":"QUANTITY","comment":null,"display_name":"quantity"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":107,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY":{"type":"FLOAT","index":108,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"DELTA_TCV":{"type":"FLOAT","index":109,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":110,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"CREATED_BY":{"type":"TEXT","index":111,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":112,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":113,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":114,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":115,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":116,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:26UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":121374720,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_charge","raw_sql":"$12","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_order","model.gitlab_snowflake.dim_order","model.gitlab_snowflake.dim_order_action","model.gitlab_snowflake.dim_order_action","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.prep_billing_account_user","model.gitlab_snowflake.prep_billing_account_user"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_sales","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","restricted_safe","mart_charge"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/restricted_safe/mart_charge.sql","original_file_path":"models/common_mart_sales/restricted_safe/mart_charge.sql","name":"mart_charge","alias":"mart_charge","checksum":{"name":"sha256","checksum":"32b3e052ca03ccc622c3e5b5b0fe8136c0e2e28e4778bc3017a4b27ca04c6005"},"tags":["safe"],"refs":[["dim_amendment"],["dim_amendment"],["dim_billing_account"],["dim_billing_account"],["dim_charge"],["dim_charge"],["dim_crm_account"],["dim_crm_account"],["dim_product_detail"],["dim_product_detail"],["dim_subscription"],["dim_subscription"],["dim_crm_user"],["dim_crm_user"],["dim_order"],["dim_order"],["dim_order_action"],["dim_order_action"],["fct_charge"],["fct_charge"],["prep_billing_account_user"],["prep_billing_account_user"]],"sources":[],"metrics":[],"description":"Model combining Subscription related objects such as product details and rate plan charge details into a mart.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_sales/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/restricted_safe/mart_charge.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false},"created_at":1689033765.2524543,"compiled_sql":"$13","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_sales.mart_charge","label":"mart_charge"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_SALES","name":"RPT_SDR_RAMP_DAILY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_ACTUAL":{"type":"DATE","index":1,"name":"DATE_ACTUAL","comment":null,"display_name":"date_actual"},"FIRST_DAY_OF_MONTH":{"type":"DATE","index":2,"name":"FIRST_DAY_OF_MONTH","comment":null,"display_name":"first_day_of_month"},"LAST_DAY_OF_MONTH":{"type":"DATE","index":3,"name":"LAST_DAY_OF_MONTH","comment":null,"display_name":"last_day_of_month"},"FIRST_DAY_OF_WEEK":{"type":"DATE","index":4,"name":"FIRST_DAY_OF_WEEK","comment":null,"display_name":"first_day_of_week"},"LAST_DAY_OF_WEEK":{"type":"DATE","index":5,"name":"LAST_DAY_OF_WEEK","comment":null,"display_name":"last_day_of_week"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":6,"name":"FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"fiscal_quarter_name_fy"},"LAST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":7,"name":"LAST_DAY_OF_FISCAL_QUARTER","comment":null,"display_name":"last_day_of_fiscal_quarter"},"SDR_TYPE":{"type":"TEXT","index":8,"name":"SDR_TYPE","comment":null,"display_name":"sdr_type"},"EMPLOYEE_ID":{"type":"NUMBER","index":9,"name":"EMPLOYEE_ID","comment":null,"display_name":"employee_id"},"JOB_ROLE":{"type":"TEXT","index":10,"name":"JOB_ROLE","comment":null,"display_name":"job_role"},"START_DATE":{"type":"DATE","index":11,"name":"START_DATE","comment":null,"display_name":"start_date"},"EMP_END_DATE":{"type":"DATE","index":12,"name":"EMP_END_DATE","comment":null,"display_name":"emp_end_date"},"TERMINATION_DATE":{"type":"DATE","index":13,"name":"TERMINATION_DATE","comment":null,"display_name":"termination_date"},"COMPANY_OR_ROLE_END_DATE":{"type":"DATE","index":14,"name":"COMPANY_OR_ROLE_END_DATE","comment":null,"display_name":"company_or_role_end_date"},"FIRST_NAME":{"type":"TEXT","index":15,"name":"FIRST_NAME","comment":null,"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":16,"name":"LAST_NAME","comment":null,"display_name":"last_name"},"ACTIVE":{"type":"NUMBER","index":17,"name":"ACTIVE","comment":null,"display_name":"active"},"DIM_CRM_USER_ID":{"type":"TEXT","index":18,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"SDR_SEGMENT":{"type":"TEXT","index":19,"name":"SDR_SEGMENT","comment":null,"display_name":"sdr_segment"},"SDR_REGION":{"type":"TEXT","index":20,"name":"SDR_REGION","comment":null,"display_name":"sdr_region"},"SDR_REGION_GROUPED":{"type":"TEXT","index":21,"name":"SDR_REGION_GROUPED","comment":null,"display_name":"sdr_region_grouped"},"SDR_ORDER_TYPE":{"type":"TEXT","index":22,"name":"SDR_ORDER_TYPE","comment":null,"display_name":"sdr_order_type"},"SDR_RAMP_END_DATE":{"type":"DATE","index":23,"name":"SDR_RAMP_END_DATE","comment":null,"display_name":"sdr_ramp_end_date"},"CREATED_BY":{"type":"TEXT","index":24,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":25,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":26,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":27,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":28,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":29,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:10UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":1252864,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_sdr_ramp_daily","raw_sql":"$14","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_job_info_current_division_base","model.gitlab_snowflake.bamboohr_job_info_current_division_base","model.gitlab_snowflake.sheetload_mapping_sdr_sfdc_bamboohr","model.gitlab_snowflake.sheetload_mapping_sdr_sfdc_bamboohr","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_sales","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","reports","rpt_sdr_ramp_daily"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/reports/rpt_sdr_ramp_daily.sql","original_file_path":"models/common_mart_sales/reports/rpt_sdr_ramp_daily.sql","name":"rpt_sdr_ramp_daily","alias":"rpt_sdr_ramp_daily","checksum":{"name":"sha256","checksum":"27bc99b425553cd260cc98bbc65f0b5eb1654b61ead164b983e12a5287245894"},"tags":[],"refs":[["bamboohr_job_info_current_division_base"],["bamboohr_job_info_current_division_base"],["sheetload_mapping_sdr_sfdc_bamboohr"],["sheetload_mapping_sdr_sfdc_bamboohr"],["dim_crm_user"],["dim_crm_user"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/reports/rpt_sdr_ramp_daily.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033722.738565,"compiled_sql":"$15","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_sales.rpt_sdr_ramp_daily","label":"rpt_sdr_ramp_daily"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_PRODUCT","name":"MART_USER_REQUEST","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"PRIMARY_KEY":{"type":"TEXT","index":1,"name":"primary_key","comment":null,"description":"Primary key of mart_user_request. It is at the grain of the user request (combination of the issue_id or epic_id depending on where the request was done) and the links in those requests (combination of opp_id, account_id and zendesk ticket_id)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"primary_key"},"DIM_ISSUE_ID":{"type":"NUMBER","index":2,"name":"DIM_ISSUE_ID","comment":null,"display_name":"dim_issue_id"},"DIM_EPIC_ID":{"type":"NUMBER","index":3,"name":"DIM_EPIC_ID","comment":null,"display_name":"dim_epic_id"},"USER_REQUEST_IN":{"type":"TEXT","index":4,"name":"USER_REQUEST_IN","comment":null,"display_name":"user_request_in"},"LINK_TYPE":{"type":"TEXT","index":5,"name":"LINK_TYPE","comment":null,"display_name":"link_type"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":6,"name":"DIM_CRM_OPPORTUNITY_ID","comment":null,"display_name":"dim_crm_opportunity_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":7,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_TICKET_ID":{"type":"NUMBER","index":8,"name":"DIM_TICKET_ID","comment":null,"display_name":"dim_ticket_id"},"REQUEST_PRIORITY":{"type":"NUMBER","index":9,"name":"REQUEST_PRIORITY","comment":null,"display_name":"request_priority"},"IS_REQUEST_PRIORITY_EMPTY":{"type":"BOOLEAN","index":10,"name":"IS_REQUEST_PRIORITY_EMPTY","comment":null,"display_name":"is_request_priority_empty"},"IS_USER_REQUEST_ONLY_IN_COLLABORATION_PROJECT":{"type":"BOOLEAN","index":11,"name":"is_user_request_only_in_collaboration_project","comment":null,"description":"If TRUE means that the issue / epic user request is ONLY found in the customer collaboration project, which means the priority request_prioty will always be one, and not in an issue / epic comment or description in `gitlab-org`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_user_request_only_in_collaboration_project"},"LINK_LAST_UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":12,"name":"link_last_updated_at","comment":null,"description":"Timestamp for the last updated time of the comment / description where the SFDC / Zendesk link was found in the issue / epic user request. In case the user request was only found in the customer collaboration project, it refers to the last time that the issue / epic request was found in the customer collaboration project.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"link_last_updated_at"},"LINK_LAST_UPDATED_DATE":{"type":"DATE","index":13,"name":"LINK_LAST_UPDATED_DATE","comment":null,"display_name":"link_last_updated_date"},"LINK_LAST_UPDATED_MONTH":{"type":"DATE","index":14,"name":"LINK_LAST_UPDATED_MONTH","comment":null,"display_name":"link_last_updated_month"},"CRM_OPPORTUNITY_LINK":{"type":"TEXT","index":15,"name":"CRM_OPPORTUNITY_LINK","comment":null,"display_name":"crm_opportunity_link"},"CRM_ACCOUNT_LINK":{"type":"TEXT","index":16,"name":"CRM_ACCOUNT_LINK","comment":null,"display_name":"crm_account_link"},"TICKET_LINK":{"type":"TEXT","index":17,"name":"TICKET_LINK","comment":null,"display_name":"ticket_link"},"ISSUE_EPIC_TITLE":{"type":"TEXT","index":18,"name":"ISSUE_EPIC_TITLE","comment":null,"display_name":"issue_epic_title"},"ISSUE_EPIC_URL":{"type":"TEXT","index":19,"name":"ISSUE_EPIC_URL","comment":null,"display_name":"issue_epic_url"},"ISSUE_EPIC_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ISSUE_EPIC_CREATED_AT","comment":null,"display_name":"issue_epic_created_at"},"ISSUE_EPIC_CREATED_DATE":{"type":"DATE","index":21,"name":"ISSUE_EPIC_CREATED_DATE","comment":null,"display_name":"issue_epic_created_date"},"ISSUE_EPIC_CREATED_MONTH":{"type":"DATE","index":22,"name":"ISSUE_EPIC_CREATED_MONTH","comment":null,"display_name":"issue_epic_created_month"},"ISSUE_EPIC_STATE_NAME":{"type":"TEXT","index":23,"name":"ISSUE_EPIC_STATE_NAME","comment":null,"display_name":"issue_epic_state_name"},"ISSUE_EPIC_CLOSED_AT":{"type":"TIMESTAMP_NTZ","index":24,"name":"ISSUE_EPIC_CLOSED_AT","comment":null,"display_name":"issue_epic_closed_at"},"ISSUE_EPIC_CLOSED_DATE":{"type":"DATE","index":25,"name":"ISSUE_EPIC_CLOSED_DATE","comment":null,"display_name":"issue_epic_closed_date"},"ISSUE_EPIC_CLOSED_MONTH":{"type":"DATE","index":26,"name":"ISSUE_EPIC_CLOSED_MONTH","comment":null,"display_name":"issue_epic_closed_month"},"MILESTONE_TITLE":{"type":"TEXT","index":27,"name":"MILESTONE_TITLE","comment":null,"display_name":"milestone_title"},"MILESTONE_DUE_DATE":{"type":"DATE","index":28,"name":"MILESTONE_DUE_DATE","comment":null,"display_name":"milestone_due_date"},"ISSUE_EPIC_LABELS":{"type":"ARRAY","index":29,"name":"ISSUE_EPIC_LABELS","comment":null,"display_name":"issue_epic_labels"},"DELIVERABLE":{"type":"TEXT","index":30,"name":"DELIVERABLE","comment":null,"display_name":"deliverable"},"PRODUCT_GROUP_EXTENDED":{"type":"TEXT","index":31,"name":"PRODUCT_GROUP_EXTENDED","comment":null,"display_name":"product_group_extended"},"PRODUCT_GROUP":{"type":"TEXT","index":32,"name":"PRODUCT_GROUP","comment":null,"display_name":"product_group"},"PRODUCT_CATEGORY":{"type":"TEXT","index":33,"name":"PRODUCT_CATEGORY","comment":null,"display_name":"product_category"},"PRODUCT_STAGE":{"type":"TEXT","index":34,"name":"PRODUCT_STAGE","comment":null,"display_name":"product_stage"},"ISSUE_EPIC_TYPE":{"type":"TEXT","index":35,"name":"ISSUE_EPIC_TYPE","comment":null,"display_name":"issue_epic_type"},"ISSUE_STATUS":{"type":"TEXT","index":36,"name":"ISSUE_STATUS","comment":null,"display_name":"issue_status"},"THEME_LABELS":{"type":"ARRAY","index":37,"name":"theme_labels","comment":null,"description":"Non-scoped theme:* labels in the issue or epic user request. Since there can be multiple for a single issue/epic, this field is an array.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"theme_labels"},"EPIC_STATUS":{"type":"NUMBER","index":38,"name":"EPIC_STATUS","comment":null,"display_name":"epic_status"},"PARENT_EPIC_PATH":{"type":"TEXT","index":39,"name":"PARENT_EPIC_PATH","comment":null,"display_name":"parent_epic_path"},"PARENT_EPIC_TITLE":{"type":"TEXT","index":40,"name":"PARENT_EPIC_TITLE","comment":null,"display_name":"parent_epic_title"},"UPVOTE_COUNT":{"type":"NUMBER","index":41,"name":"UPVOTE_COUNT","comment":null,"display_name":"upvote_count"},"ISSUE_EPIC_WEIGHT":{"type":"NUMBER","index":42,"name":"ISSUE_EPIC_WEIGHT","comment":null,"display_name":"issue_epic_weight"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":43,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"CRM_ACCOUNT_NEXT_RENEWAL_MONTH":{"type":"DATE","index":44,"name":"crm_account_next_renewal_month","comment":null,"description":"CRM Account next renewal month based on Zuora subscription and charge information. If NULL it means that either the renewal month has passed or the account didn't have one.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_next_renewal_month"},"CRM_ACCOUNT_HEALTH_SCORE_COLOR":{"type":"TEXT","index":45,"name":"CRM_ACCOUNT_HEALTH_SCORE_COLOR","comment":null,"display_name":"crm_account_health_score_color"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":46,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":47,"name":"TECHNICAL_ACCOUNT_MANAGER","comment":null,"display_name":"technical_account_manager"},"STRATEGIC_ACCOUNT_LEADER":{"type":"TEXT","index":48,"name":"STRATEGIC_ACCOUNT_LEADER","comment":null,"display_name":"strategic_account_leader"},"CUSTOMER_REACH":{"type":"FLOAT","index":49,"name":"customer_reach","comment":null,"description":"CRM Account amount of seats in the current month based on Zuora subscription and charge information.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_reach"},"CRM_ACCOUNT_ARR":{"type":"FLOAT","index":50,"name":"CRM_ACCOUNT_ARR","comment":null,"display_name":"crm_account_arr"},"CRM_ACCOUNT_OPEN_OPP_NET_ARR":{"type":"FLOAT","index":51,"name":"crm_account_open_opp_net_arr","comment":null,"description":"Sum of Net ARR for all currently open SFDC opportunities for the CRM Account.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_open_opp_net_arr"},"CRM_ACCOUNT_OPEN_OPP_NET_ARR_FO":{"type":"FLOAT","index":52,"name":"crm_account_open_opp_net_arr_fo","comment":null,"description":"Sum of Net ARR for all currently open SFDC opportunities for the CRM Account with order type New First Order.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_open_opp_net_arr_fo"},"CRM_ACCOUNT_OPEN_OPP_NET_ARR_GROWTH":{"type":"FLOAT","index":53,"name":"crm_account_open_opp_net_arr_growth","comment":null,"description":"Sum of Net ARR for all currently open SFDC opportunities for the CRM Account with order type New Connected and Growth.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_open_opp_net_arr_growth"},"OPPORTUNITY_REACH":{"type":"FLOAT","index":54,"name":"opportunity_reach","comment":null,"description":"Count of aggregate prospect licenses from open SFDC opportunities, where prospect means New First Order opportunities. The amount of seats in the opportunity are fetched from the primary quote linked to the opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opportunity_reach"},"CRM_ACCOUNT_LOST_OPP_NET_ARR":{"type":"FLOAT","index":55,"name":"crm_account_lost_opp_net_arr","comment":null,"description":"For the CRM Account, sum of all Net ARR where the prospect was lost. Where prospect means New First Order opportunities.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_lost_opp_net_arr"},"CRM_ACCOUNT_LOST_CUSTOMER_ARR":{"type":"FLOAT","index":56,"name":"crm_account_lost_customer_arr","comment":null,"description":"For the CRM Account, sum of all ARR lost when the customer left GitLab.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_lost_customer_arr"},"LOST_ARR":{"type":"FLOAT","index":57,"name":"lost_arr","comment":null,"description":"Sum of crm_account_lost_opp_arr and crm_account_lost_customer_arr","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lost_arr"},"CRM_OPP_STAGE_NAME":{"type":"TEXT","index":58,"name":"CRM_OPP_STAGE_NAME","comment":null,"display_name":"crm_opp_stage_name"},"CRM_OPP_IS_CLOSED":{"type":"BOOLEAN","index":59,"name":"CRM_OPP_IS_CLOSED","comment":null,"display_name":"crm_opp_is_closed"},"CRM_OPP_CLOSE_DATE":{"type":"DATE","index":60,"name":"CRM_OPP_CLOSE_DATE","comment":null,"display_name":"crm_opp_close_date"},"CRM_OPP_ORDER_TYPE":{"type":"TEXT","index":61,"name":"CRM_OPP_ORDER_TYPE","comment":null,"display_name":"crm_opp_order_type"},"CRM_OPP_ORDER_TYPE_GROUPED":{"type":"TEXT","index":62,"name":"CRM_OPP_ORDER_TYPE_GROUPED","comment":null,"display_name":"crm_opp_order_type_grouped"},"PRIMARY_SOLUTION_ARCHITECT_ID":{"type":"TEXT","index":63,"name":"primary_solution_architect_id","comment":null,"description":"The primary solution architecht user id associated with the SFDC opportunity, whenever there is an opportunity linked to the user request.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"primary_solution_architect_id"},"PRIMARY_SOLUTION_ARCHITECT_USER_NAME":{"type":"TEXT","index":64,"name":"primary_solution_architect_user_name","comment":null,"description":"The primary solution architecht user name associated with the SFDC opportunity, whenever there is an opportunity linked to the user request.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"primary_solution_architect_user_name"},"CRM_OPP_NEXT_RENEWAL_MONTH":{"type":"DATE","index":65,"name":"CRM_OPP_NEXT_RENEWAL_MONTH","comment":null,"display_name":"crm_opp_next_renewal_month"},"CRM_OPP_NET_ARR":{"type":"FLOAT","index":66,"name":"CRM_OPP_NET_ARR","comment":null,"display_name":"crm_opp_net_arr"},"CRM_OPP_ARR_BASIS":{"type":"FLOAT","index":67,"name":"CRM_OPP_ARR_BASIS","comment":null,"display_name":"crm_opp_arr_basis"},"CRM_OPP_SEATS":{"type":"FLOAT","index":68,"name":"CRM_OPP_SEATS","comment":null,"display_name":"crm_opp_seats"},"CRM_OPP_PROBABILITY":{"type":"FLOAT","index":69,"name":"CRM_OPP_PROBABILITY","comment":null,"display_name":"crm_opp_probability"},"PRIORITY_INPUT_URL":{"type":"TEXT","index":70,"name":"PRIORITY_INPUT_URL","comment":null,"display_name":"priority_input_url"},"USER_REQUEST_LINK":{"type":"TEXT","index":71,"name":"USER_REQUEST_LINK","comment":null,"display_name":"user_request_link"},"LINK_RETENTION_PERCENTAGE":{"type":"FLOAT","index":72,"name":"LINK_RETENTION_PERCENTAGE","comment":null,"display_name":"link_retention_percentage"},"LINK_GROWTH_PERCENTAGE":{"type":"FLOAT","index":73,"name":"LINK_GROWTH_PERCENTAGE","comment":null,"display_name":"link_growth_percentage"},"LINK_RETENTION_PRIORITY":{"type":"FLOAT","index":74,"name":"LINK_RETENTION_PRIORITY","comment":null,"display_name":"link_retention_priority"},"LINK_GROWTH_PRIORITY":{"type":"FLOAT","index":75,"name":"LINK_GROWTH_PRIORITY","comment":null,"display_name":"link_growth_priority"},"LINK_RETENTION_PRIORITY_WEIGHTING":{"type":"FLOAT","index":76,"name":"LINK_RETENTION_PRIORITY_WEIGHTING","comment":null,"display_name":"link_retention_priority_weighting"},"LINK_GROWTH_PRIORITY_WEIGHTING":{"type":"FLOAT","index":77,"name":"LINK_GROWTH_PRIORITY_WEIGHTING","comment":null,"display_name":"link_growth_priority_weighting"},"LINK_RETENTION_SCORE":{"type":"FLOAT","index":78,"name":"LINK_RETENTION_SCORE","comment":null,"display_name":"link_retention_score"},"LINK_GROWTH_SCORE":{"type":"FLOAT","index":79,"name":"LINK_GROWTH_SCORE","comment":null,"display_name":"link_growth_score"},"LINK_COMBINED_SCORE":{"type":"FLOAT","index":80,"name":"LINK_COMBINED_SCORE","comment":null,"display_name":"link_combined_score"},"LINK_PRIORITY_SCORE":{"type":"FLOAT","index":81,"name":"LINK_PRIORITY_SCORE","comment":null,"display_name":"link_priority_score"},"LINK_WEIGHTED_PRIORITY_SCORE":{"type":"FLOAT","index":82,"name":"LINK_WEIGHTED_PRIORITY_SCORE","comment":null,"display_name":"link_weighted_priority_score"},"LINK_WEIGHTED_PRIORITY_SCORE_INPUT":{"type":"TEXT","index":83,"name":"LINK_WEIGHTED_PRIORITY_SCORE_INPUT","comment":null,"display_name":"link_weighted_priority_score_input"},"CREATED_BY":{"type":"TEXT","index":84,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":85,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":86,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":87,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":88,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":89,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:51UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":21994496,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_user_request","raw_sql":"$16","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_label_links","model.gitlab_snowflake.prep_label_links","model.gitlab_snowflake.prep_labels","model.gitlab_snowflake.prep_labels","model.gitlab_snowflake.bdg_epic_user_request","model.gitlab_snowflake.bdg_epic_user_request","model.gitlab_snowflake.bdg_issue_user_request","model.gitlab_snowflake.bdg_issue_user_request","model.gitlab_snowflake.dim_epic","model.gitlab_snowflake.dim_epic","model.gitlab_snowflake.dim_issue","model.gitlab_snowflake.dim_issue","model.gitlab_snowflake.fct_mrr","model.gitlab_snowflake.fct_mrr","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.fct_quote_item","model.gitlab_snowflake.fct_quote_item","model.gitlab_snowflake.dim_quote","model.gitlab_snowflake.dim_quote","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_order_type","model.gitlab_snowflake.dim_order_type","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_product","database":"PROD","tags":["product","safe","product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_product","fqn":["gitlab_snowflake","common_mart_product","restricted_safe","mart_user_request"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_product/restricted_safe/mart_user_request.sql","original_file_path":"models/common_mart_product/restricted_safe/mart_user_request.sql","name":"mart_user_request","alias":"mart_user_request","checksum":{"name":"sha256","checksum":"9e3e0baea55f0f1a5f06847c3b0a0f9f14e3c366e0336e0eda36d13118997946"},"tags":["product","safe"],"refs":[["prep_label_links"],["prep_label_links"],["prep_labels"],["prep_labels"],["bdg_epic_user_request"],["bdg_epic_user_request"],["bdg_issue_user_request"],["bdg_issue_user_request"],["dim_epic"],["dim_epic"],["dim_issue"],["dim_issue"],["fct_mrr"],["fct_mrr"],["dim_date"],["dim_date"],["dim_product_detail"],["dim_product_detail"],["dim_crm_account"],["dim_crm_account"],["dim_subscription"],["dim_subscription"],["fct_crm_opportunity"],["fct_crm_opportunity"],["dim_crm_user"],["dim_crm_user"],["fct_quote_item"],["fct_quote_item"],["dim_quote"],["dim_quote"],["dim_crm_opportunity"],["dim_crm_opportunity"],["dim_order_type"],["dim_order_type"],["dim_crm_user"],["dim_crm_user"]],"sources":[],"metrics":[],"description":"Mart table that contains all user requests to the Gitlab product by the customers.\n\nIt unions `bdg_issue_user_request` and `bdg_epic_user_request` to have the product request that are contained both in the epics and issues in the `gitlab-org` group.\nAfter that, it adds useful data around these issues and epics as well the crm_account and crm_opportunity links that are useful to prioritize those user requests.\n\nMore documentation around the use cases this model solves for can be found in the [Customer Issue Prioritization Framework Handbook Page](https://about.gitlab.com/handbook/product/product-processes/customer-issues-prioritization-framework/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_product/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_product/restricted_safe/mart_user_request.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe","product"],"secure":true},"created_at":1689033737.3128543,"compiled_sql":"$17","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_product.mart_user_request","label":"mart_user_request"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_SALES","name":"SFDC_USERS_XF","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"USER_ID":{"type":"TEXT","index":1,"name":"USER_ID","comment":null,"display_name":"user_id"},"NAME":{"type":"TEXT","index":2,"name":"NAME","comment":null,"display_name":"name"},"DEPARTMENT":{"type":"TEXT","index":3,"name":"DEPARTMENT","comment":null,"display_name":"department"},"TITLE":{"type":"TEXT","index":4,"name":"TITLE","comment":null,"display_name":"title"},"TEAM":{"type":"TEXT","index":5,"name":"TEAM","comment":null,"display_name":"team"},"USER_EMAIL":{"type":"TEXT","index":6,"name":"USER_EMAIL","comment":null,"display_name":"user_email"},"MANAGER_NAME":{"type":"TEXT","index":7,"name":"MANAGER_NAME","comment":null,"display_name":"manager_name"},"MANAGER_ID":{"type":"TEXT","index":8,"name":"MANAGER_ID","comment":null,"display_name":"manager_id"},"USER_GEO":{"type":"TEXT","index":9,"name":"USER_GEO","comment":null,"display_name":"user_geo"},"USER_REGION":{"type":"TEXT","index":10,"name":"USER_REGION","comment":null,"display_name":"user_region"},"USER_SEGMENT":{"type":"TEXT","index":11,"name":"USER_SEGMENT","comment":null,"display_name":"user_segment"},"RAW_USER_SEGMENT":{"type":"TEXT","index":12,"name":"RAW_USER_SEGMENT","comment":null,"display_name":"raw_user_segment"},"ADJUSTED_USER_SEGMENT":{"type":"TEXT","index":13,"name":"ADJUSTED_USER_SEGMENT","comment":null,"display_name":"adjusted_user_segment"},"USER_AREA":{"type":"TEXT","index":14,"name":"USER_AREA","comment":null,"display_name":"user_area"},"ROLE_NAME":{"type":"TEXT","index":15,"name":"ROLE_NAME","comment":null,"display_name":"role_name"},"ROLE_TYPE":{"type":"TEXT","index":16,"name":"ROLE_TYPE","comment":null,"display_name":"role_type"},"START_DATE":{"type":"TIMESTAMP_TZ","index":17,"name":"START_DATE","comment":null,"display_name":"start_date"},"IS_ACTIVE":{"type":"BOOLEAN","index":18,"name":"IS_ACTIVE","comment":null,"display_name":"is_active"},"IS_HYBRID_FLAG":{"type":"NUMBER","index":19,"name":"IS_HYBRID_FLAG","comment":null,"display_name":"is_hybrid_flag"},"EMPLOYEE_NUMBER":{"type":"TEXT","index":20,"name":"EMPLOYEE_NUMBER","comment":null,"display_name":"employee_number"},"IS_REP_FLAG":{"type":"NUMBER","index":21,"name":"IS_REP_FLAG","comment":null,"display_name":"is_rep_flag"},"BUSINESS_UNIT":{"type":"TEXT","index":22,"name":"BUSINESS_UNIT","comment":null,"display_name":"business_unit"},"SUB_BUSINESS_UNIT":{"type":"TEXT","index":23,"name":"SUB_BUSINESS_UNIT","comment":null,"display_name":"sub_business_unit"},"DIVISION":{"type":"TEXT","index":24,"name":"DIVISION","comment":null,"display_name":"division"},"ASM":{"type":"TEXT","index":25,"name":"ASM","comment":null,"display_name":"asm"},"KEY_BU":{"type":"TEXT","index":26,"name":"KEY_BU","comment":null,"display_name":"key_bu"},"KEY_BU_SUBBU":{"type":"TEXT","index":27,"name":"KEY_BU_SUBBU","comment":null,"display_name":"key_bu_subbu"},"KEY_BU_SUBBU_DIVISION":{"type":"TEXT","index":28,"name":"KEY_BU_SUBBU_DIVISION","comment":null,"display_name":"key_bu_subbu_division"},"KEY_BU_SUBBU_DIVISION_ASM":{"type":"TEXT","index":29,"name":"KEY_BU_SUBBU_DIVISION_ASM","comment":null,"display_name":"key_bu_subbu_division_asm"},"KEY_SAL_HEATMAP":{"type":"TEXT","index":30,"name":"KEY_SAL_HEATMAP","comment":null,"display_name":"key_sal_heatmap"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:48UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":247808,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_sfdc_users_xf","raw_sql":"$18","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["source.gitlab_snowflake.salesforce.user","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":"sfdc_users_xf","schema":"workspace_sales","database":"PROD","tags":["workspace"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","wk_sales_sfdc_users_xf"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/wk_sales_sfdc_users_xf.sql","original_file_path":"models/workspaces/workspace_sales/wk_sales_sfdc_users_xf.sql","name":"wk_sales_sfdc_users_xf","alias":"sfdc_users_xf","checksum":{"name":"sha256","checksum":"49f1663c3bf4d77c597e3f13a829f5b677addf2658defcbb0a61a0980ede672a"},"tags":["workspace"],"refs":[["sfdc_user_roles_source"],["sfdc_user_roles_source"],["dim_crm_user"],["dim_crm_user"]],"sources":[["salesforce","user"]],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/wk_sales_sfdc_users_xf.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["workspace"],"alias":"sfdc_users_xf"},"created_at":1689033678.2520957,"compiled_sql":"$19","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_sales.sfdc_users_xf","label":"wk_sales_sfdc_users_xf"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_SALES","name":"RPT_CRM_PERSON_WITH_OPP","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_PERSON_ID":{"type":"TEXT","index":1,"name":"DIM_CRM_PERSON_ID","comment":null,"display_name":"dim_crm_person_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":2,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"MQL_DATE_FIRST_ID":{"type":"NUMBER","index":4,"name":"MQL_DATE_FIRST_ID","comment":null,"display_name":"mql_date_first_id"},"MQL_DATE_FIRST":{"type":"DATE","index":5,"name":"MQL_DATE_FIRST","comment":null,"display_name":"mql_date_first"},"MQL_DATETIME_FIRST":{"type":"TIMESTAMP_NTZ","index":6,"name":"MQL_DATETIME_FIRST","comment":null,"display_name":"mql_datetime_first"},"MQL_DATETIME_FIRST_PT":{"type":"TIMESTAMP_TZ","index":7,"name":"MQL_DATETIME_FIRST_PT","comment":null,"display_name":"mql_datetime_first_pt"},"MQL_DATE_FIRST_PT":{"type":"DATE","index":8,"name":"MQL_DATE_FIRST_PT","comment":null,"display_name":"mql_date_first_pt"},"MQL_MONTH_FIRST":{"type":"DATE","index":9,"name":"MQL_MONTH_FIRST","comment":null,"display_name":"mql_month_first"},"MQL_MONTH_FIRST_PT":{"type":"DATE","index":10,"name":"MQL_MONTH_FIRST_PT","comment":null,"display_name":"mql_month_first_pt"},"MQL_DATE_LASTEST":{"type":"DATE","index":11,"name":"MQL_DATE_LASTEST","comment":null,"display_name":"mql_date_lastest"},"MQL_DATETIME_LATEST":{"type":"TIMESTAMP_NTZ","index":12,"name":"MQL_DATETIME_LATEST","comment":null,"display_name":"mql_datetime_latest"},"MQL_DATETIME_LATEST_PT":{"type":"TIMESTAMP_TZ","index":13,"name":"MQL_DATETIME_LATEST_PT","comment":null,"display_name":"mql_datetime_latest_pt"},"MQL_DATE_LASTEST_PT":{"type":"DATE","index":14,"name":"MQL_DATE_LASTEST_PT","comment":null,"display_name":"mql_date_lastest_pt"},"MQL_MONTH_LATEST":{"type":"DATE","index":15,"name":"MQL_MONTH_LATEST","comment":null,"display_name":"mql_month_latest"},"MQL_MONTH_LATEST_PT":{"type":"DATE","index":16,"name":"MQL_MONTH_LATEST_PT","comment":null,"display_name":"mql_month_latest_pt"},"CREATED_DATE":{"type":"DATE","index":17,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"CREATED_DATE_PT":{"type":"DATE","index":18,"name":"CREATED_DATE_PT","comment":null,"display_name":"created_date_pt"},"CREATED_MONTH":{"type":"DATE","index":19,"name":"CREATED_MONTH","comment":null,"display_name":"created_month"},"CREATED_MONTH_PT":{"type":"DATE","index":20,"name":"CREATED_MONTH_PT","comment":null,"display_name":"created_month_pt"},"LEAD_CREATED_DATE":{"type":"DATE","index":21,"name":"LEAD_CREATED_DATE","comment":null,"display_name":"lead_created_date"},"LEAD_CREATED_DATE_PT":{"type":"DATE","index":22,"name":"LEAD_CREATED_DATE_PT","comment":null,"display_name":"lead_created_date_pt"},"LEAD_CREATED_MONTH":{"type":"DATE","index":23,"name":"LEAD_CREATED_MONTH","comment":null,"display_name":"lead_created_month"},"LEAD_CREATED_MONTH_PT":{"type":"DATE","index":24,"name":"LEAD_CREATED_MONTH_PT","comment":null,"display_name":"lead_created_month_pt"},"CONTACT_CREATED_DATE":{"type":"DATE","index":25,"name":"CONTACT_CREATED_DATE","comment":null,"display_name":"contact_created_date"},"CONTACT_CREATED_DATE_PT":{"type":"DATE","index":26,"name":"CONTACT_CREATED_DATE_PT","comment":null,"display_name":"contact_created_date_pt"},"CONTACT_CREATED_MONTH":{"type":"DATE","index":27,"name":"CONTACT_CREATED_MONTH","comment":null,"display_name":"contact_created_month"},"CONTACT_CREATED_MONTH_PT":{"type":"DATE","index":28,"name":"CONTACT_CREATED_MONTH_PT","comment":null,"display_name":"contact_created_month_pt"},"TRUE_INQUIRY_DATE":{"type":"DATE","index":29,"name":"TRUE_INQUIRY_DATE","comment":null,"display_name":"true_inquiry_date"},"INQUIRY_DATE":{"type":"DATE","index":30,"name":"INQUIRY_DATE","comment":null,"display_name":"inquiry_date"},"INQUIRY_DATE_PT":{"type":"DATE","index":31,"name":"INQUIRY_DATE_PT","comment":null,"display_name":"inquiry_date_pt"},"INQUIRY_MONTH":{"type":"DATE","index":32,"name":"INQUIRY_MONTH","comment":null,"display_name":"inquiry_month"},"INQUIRY_MONTH_PT":{"type":"DATE","index":33,"name":"INQUIRY_MONTH_PT","comment":null,"display_name":"inquiry_month_pt"},"INQUIRY_INFERRED_DATE":{"type":"DATE","index":34,"name":"INQUIRY_INFERRED_DATE","comment":null,"display_name":"inquiry_inferred_date"},"INQUIRY_INFERRED_DATETIME":{"type":"DATE","index":35,"name":"INQUIRY_INFERRED_DATETIME","comment":null,"display_name":"inquiry_inferred_datetime"},"INQUIRY_INFERRED_DATE_PT":{"type":"DATE","index":36,"name":"INQUIRY_INFERRED_DATE_PT","comment":null,"display_name":"inquiry_inferred_date_pt"},"INQUIRY_INFERRED_MONTH":{"type":"DATE","index":37,"name":"INQUIRY_INFERRED_MONTH","comment":null,"display_name":"inquiry_inferred_month"},"INQUIRY_INFERRED_MONTH_PT":{"type":"DATE","index":38,"name":"INQUIRY_INFERRED_MONTH_PT","comment":null,"display_name":"inquiry_inferred_month_pt"},"ACCEPTED_DATE":{"type":"DATE","index":39,"name":"ACCEPTED_DATE","comment":null,"display_name":"accepted_date"},"ACCEPTED_DATETIME":{"type":"TIMESTAMP_TZ","index":40,"name":"ACCEPTED_DATETIME","comment":null,"display_name":"accepted_datetime"},"ACCEPTED_DATETIME_PT":{"type":"TIMESTAMP_TZ","index":41,"name":"ACCEPTED_DATETIME_PT","comment":null,"display_name":"accepted_datetime_pt"},"ACCEPTED_DATE_PT":{"type":"DATE","index":42,"name":"ACCEPTED_DATE_PT","comment":null,"display_name":"accepted_date_pt"},"ACCEPTED_MONTH":{"type":"DATE","index":43,"name":"ACCEPTED_MONTH","comment":null,"display_name":"accepted_month"},"ACCEPTED_MONTH_PT":{"type":"DATE","index":44,"name":"ACCEPTED_MONTH_PT","comment":null,"display_name":"accepted_month_pt"},"MQL_SFDC_DATE":{"type":"DATE","index":45,"name":"MQL_SFDC_DATE","comment":null,"display_name":"mql_sfdc_date"},"MQL_SFDC_DATETIME":{"type":"TIMESTAMP_TZ","index":46,"name":"MQL_SFDC_DATETIME","comment":null,"display_name":"mql_sfdc_datetime"},"MQL_SFDC_DATE_PT":{"type":"DATE","index":47,"name":"MQL_SFDC_DATE_PT","comment":null,"display_name":"mql_sfdc_date_pt"},"MQL_SFDC_MONTH":{"type":"DATE","index":48,"name":"MQL_SFDC_MONTH","comment":null,"display_name":"mql_sfdc_month"},"MQL_SFDC_MONTH_PT":{"type":"DATE","index":49,"name":"MQL_SFDC_MONTH_PT","comment":null,"display_name":"mql_sfdc_month_pt"},"MQL_INFERRED_DATE":{"type":"DATE","index":50,"name":"MQL_INFERRED_DATE","comment":null,"display_name":"mql_inferred_date"},"MQL_INFERRED_DATETIME":{"type":"TIMESTAMP_TZ","index":51,"name":"MQL_INFERRED_DATETIME","comment":null,"display_name":"mql_inferred_datetime"},"MQL_INFERRED_DATE_PT":{"type":"DATE","index":52,"name":"MQL_INFERRED_DATE_PT","comment":null,"display_name":"mql_inferred_date_pt"},"MQL_INFERRED_MONTH":{"type":"DATE","index":53,"name":"MQL_INFERRED_MONTH","comment":null,"display_name":"mql_inferred_month"},"MQL_INFERRED_MONTH_PT":{"type":"DATE","index":54,"name":"MQL_INFERRED_MONTH_PT","comment":null,"display_name":"mql_inferred_month_pt"},"QUALIFYING_DATE":{"type":"DATE","index":55,"name":"QUALIFYING_DATE","comment":null,"display_name":"qualifying_date"},"QUALIFYING_DATE_PT":{"type":"DATE","index":56,"name":"QUALIFYING_DATE_PT","comment":null,"display_name":"qualifying_date_pt"},"QUALIFYING_MONTH":{"type":"DATE","index":57,"name":"QUALIFYING_MONTH","comment":null,"display_name":"qualifying_month"},"QUALIFYING_MONTH_PT":{"type":"DATE","index":58,"name":"QUALIFYING_MONTH_PT","comment":null,"display_name":"qualifying_month_pt"},"QUALIFIED_DATE":{"type":"DATE","index":59,"name":"QUALIFIED_DATE","comment":null,"display_name":"qualified_date"},"QUALIFIED_DATE_PT":{"type":"DATE","index":60,"name":"QUALIFIED_DATE_PT","comment":null,"display_name":"qualified_date_pt"},"QUALIFIED_MONTH":{"type":"DATE","index":61,"name":"QUALIFIED_MONTH","comment":null,"display_name":"qualified_month"},"QUALIFIED_MONTH_PT":{"type":"DATE","index":62,"name":"QUALIFIED_MONTH_PT","comment":null,"display_name":"qualified_month_pt"},"CONVERTED_DATE":{"type":"DATE","index":63,"name":"CONVERTED_DATE","comment":null,"display_name":"converted_date"},"CONVERTED_DATE_PT":{"type":"DATE","index":64,"name":"CONVERTED_DATE_PT","comment":null,"display_name":"converted_date_pt"},"CONVERTED_MONTH":{"type":"DATE","index":65,"name":"CONVERTED_MONTH","comment":null,"display_name":"converted_month"},"CONVERTED_MONTH_PT":{"type":"DATE","index":66,"name":"CONVERTED_MONTH_PT","comment":null,"display_name":"converted_month_pt"},"WORKED_DATE":{"type":"DATE","index":67,"name":"WORKED_DATE","comment":null,"display_name":"worked_date"},"WORKED_DATE_PT":{"type":"DATE","index":68,"name":"WORKED_DATE_PT","comment":null,"display_name":"worked_date_pt"},"WORKED_MONTH":{"type":"DATE","index":69,"name":"WORKED_MONTH","comment":null,"display_name":"worked_month"},"WORKED_MONTH_PT":{"type":"DATE","index":70,"name":"WORKED_MONTH_PT","comment":null,"display_name":"worked_month_pt"},"EMAIL_DOMAIN":{"type":"TEXT","index":71,"name":"EMAIL_DOMAIN","comment":null,"display_name":"email_domain"},"EMAIL_DOMAIN_TYPE":{"type":"TEXT","index":72,"name":"EMAIL_DOMAIN_TYPE","comment":null,"display_name":"email_domain_type"},"EMAIL_HASH":{"type":"TEXT","index":73,"name":"EMAIL_HASH","comment":null,"display_name":"email_hash"},"STATUS":{"type":"TEXT","index":74,"name":"STATUS","comment":null,"display_name":"status"},"LEAD_SOURCE":{"type":"TEXT","index":75,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"SOURCE_BUCKETS":{"type":"TEXT","index":76,"name":"SOURCE_BUCKETS","comment":null,"display_name":"source_buckets"},"CRM_PARTNER_ID":{"type":"TEXT","index":77,"name":"CRM_PARTNER_ID","comment":null,"display_name":"crm_partner_id"},"SEQUENCE_STEP_TYPE":{"type":"TEXT","index":78,"name":"SEQUENCE_STEP_TYPE","comment":null,"display_name":"sequence_step_type"},"REGION":{"type":"TEXT","index":79,"name":"REGION","comment":null,"display_name":"region"},"STATE":{"type":"TEXT","index":80,"name":"STATE","comment":null,"display_name":"state"},"COUNTRY":{"type":"TEXT","index":81,"name":"COUNTRY","comment":null,"display_name":"country"},"NAME_OF_ACTIVE_SEQUENCE":{"type":"TEXT","index":82,"name":"NAME_OF_ACTIVE_SEQUENCE","comment":null,"display_name":"name_of_active_sequence"},"SEQUENCE_TASK_DUE_DATE":{"type":"DATE","index":83,"name":"SEQUENCE_TASK_DUE_DATE","comment":null,"display_name":"sequence_task_due_date"},"SEQUENCE_STATUS":{"type":"TEXT","index":84,"name":"SEQUENCE_STATUS","comment":null,"display_name":"sequence_status"},"LAST_ACTIVITY_DATE":{"type":"DATE","index":85,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"IS_ACTIVELY_BEING_SEQUENCED":{"type":"BOOLEAN","index":86,"name":"IS_ACTIVELY_BEING_SEQUENCED","comment":null,"display_name":"is_actively_being_sequenced"},"BIZIBLE_MARKETING_CHANNEL_PATH_NAME":{"type":"TEXT","index":87,"name":"BIZIBLE_MARKETING_CHANNEL_PATH_NAME","comment":null,"display_name":"bizible_marketing_channel_path_name"},"SALES_SEGMENT_NAME":{"type":"TEXT","index":88,"name":"SALES_SEGMENT_NAME","comment":null,"display_name":"sales_segment_name"},"SALES_SEGMENT_GROUPED":{"type":"TEXT","index":89,"name":"SALES_SEGMENT_GROUPED","comment":null,"display_name":"sales_segment_grouped"},"MARKETO_LAST_INTERESTING_MOMENT":{"type":"TEXT","index":90,"name":"MARKETO_LAST_INTERESTING_MOMENT","comment":null,"display_name":"marketo_last_interesting_moment"},"MARKETO_LAST_INTERESTING_MOMENT_DATE":{"type":"TIMESTAMP_TZ","index":91,"name":"MARKETO_LAST_INTERESTING_MOMENT_DATE","comment":null,"display_name":"marketo_last_interesting_moment_date"},"OUTREACH_STEP_NUMBER":{"type":"FLOAT","index":92,"name":"OUTREACH_STEP_NUMBER","comment":null,"display_name":"outreach_step_number"},"MATCHED_ACCOUNT_OWNER_ROLE":{"type":"TEXT","index":93,"name":"MATCHED_ACCOUNT_OWNER_ROLE","comment":null,"display_name":"matched_account_owner_role"},"MATCHED_ACCOUNT_ACCOUNT_OWNER_NAME":{"type":"TEXT","index":94,"name":"MATCHED_ACCOUNT_ACCOUNT_OWNER_NAME","comment":null,"display_name":"matched_account_account_owner_name"},"MATCHED_ACCOUNT_SDR_ASSIGNED":{"type":"TEXT","index":95,"name":"MATCHED_ACCOUNT_SDR_ASSIGNED","comment":null,"display_name":"matched_account_sdr_assigned"},"MATCHED_ACCOUNT_TYPE":{"type":"TEXT","index":96,"name":"MATCHED_ACCOUNT_TYPE","comment":null,"display_name":"matched_account_type"},"MATCHED_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":97,"name":"MATCHED_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"matched_account_gtm_strategy"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT":{"type":"TEXT","index":98,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT","comment":null,"display_name":"account_demographics_sales_segment"},"ACCOUNT_DEMOGRAPHICS_GEO":{"type":"TEXT","index":99,"name":"ACCOUNT_DEMOGRAPHICS_GEO","comment":null,"display_name":"account_demographics_geo"},"ACCOUNT_DEMOGRAPHICS_REGION":{"type":"TEXT","index":100,"name":"ACCOUNT_DEMOGRAPHICS_REGION","comment":null,"display_name":"account_demographics_region"},"ACCOUNT_DEMOGRAPHICS_AREA":{"type":"TEXT","index":101,"name":"ACCOUNT_DEMOGRAPHICS_AREA","comment":null,"display_name":"account_demographics_area"},"ACCOUNT_DEMOGRAPHICS_TERRITORY":{"type":"TEXT","index":102,"name":"ACCOUNT_DEMOGRAPHICS_TERRITORY","comment":null,"display_name":"account_demographics_territory"},"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT":{"type":"FLOAT","index":103,"name":"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT","comment":null,"display_name":"account_demographics_employee_count"},"ACCOUNT_DEMOGRAPHICS_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":104,"name":"ACCOUNT_DEMOGRAPHICS_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"account_demographics_max_family_employee"},"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY":{"type":"TEXT","index":105,"name":"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY","comment":null,"display_name":"account_demographics_upa_country"},"ACCOUNT_DEMOGRAPHICS_UPA_STATE":{"type":"TEXT","index":106,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STATE","comment":null,"display_name":"account_demographics_upa_state"},"ACCOUNT_DEMOGRAPHICS_UPA_CITY":{"type":"TEXT","index":107,"name":"ACCOUNT_DEMOGRAPHICS_UPA_CITY","comment":null,"display_name":"account_demographics_upa_city"},"ACCOUNT_DEMOGRAPHICS_UPA_STREET":{"type":"TEXT","index":108,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STREET","comment":null,"display_name":"account_demographics_upa_street"},"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE":{"type":"TEXT","index":109,"name":"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE","comment":null,"display_name":"account_demographics_upa_postal_code"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":110,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_GROUPED","comment":null,"display_name":"account_demographics_sales_segment_grouped"},"ACCOUNT_DEMOGRAPHICS_SEGMENT_REGION_GROUPED":{"type":"TEXT","index":111,"name":"ACCOUNT_DEMOGRAPHICS_SEGMENT_REGION_GROUPED","comment":null,"display_name":"account_demographics_segment_region_grouped"},"IS_MQL":{"type":"NUMBER","index":112,"name":"IS_MQL","comment":null,"display_name":"is_mql"},"IS_INQUIRY":{"type":"NUMBER","index":113,"name":"IS_INQUIRY","comment":null,"display_name":"is_inquiry"},"IS_LEAD_SOURCE_TRIAL":{"type":"BOOLEAN","index":114,"name":"IS_LEAD_SOURCE_TRIAL","comment":null,"display_name":"is_lead_source_trial"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":115,"name":"DIM_CRM_OPPORTUNITY_ID","comment":null,"display_name":"dim_crm_opportunity_id"},"OPPORTUNITY_CREATED_DATE":{"type":"DATE","index":116,"name":"OPPORTUNITY_CREATED_DATE","comment":null,"display_name":"opportunity_created_date"},"SALES_ACCEPTED_DATE":{"type":"DATE","index":117,"name":"SALES_ACCEPTED_DATE","comment":null,"display_name":"sales_accepted_date"},"CLOSE_DATE":{"type":"DATE","index":118,"name":"CLOSE_DATE","comment":null,"display_name":"close_date"},"SALES_QUALIFIED_SOURCE_NAME":{"type":"TEXT","index":119,"name":"SALES_QUALIFIED_SOURCE_NAME","comment":null,"display_name":"sales_qualified_source_name"},"IS_WON":{"type":"BOOLEAN","index":120,"name":"IS_WON","comment":null,"display_name":"is_won"},"NET_ARR":{"type":"FLOAT","index":121,"name":"NET_ARR","comment":null,"display_name":"net_arr"},"IS_EDU_OSS":{"type":"FLOAT","index":122,"name":"IS_EDU_OSS","comment":null,"display_name":"is_edu_oss"},"STAGE_NAME":{"type":"TEXT","index":123,"name":"STAGE_NAME","comment":null,"display_name":"stage_name"},"IS_SAO":{"type":"BOOLEAN","index":124,"name":"IS_SAO","comment":null,"display_name":"is_sao"},"USER_SALES_SEGMENT":{"type":"TEXT","index":125,"name":"USER_SALES_SEGMENT","comment":null,"display_name":"user_sales_segment"},"PERSON_ORDER_TYPE":{"type":"TEXT","index":126,"name":"PERSON_ORDER_TYPE","comment":null,"display_name":"person_order_type"},"CRM_USER_REGION":{"type":"TEXT","index":127,"name":"CRM_USER_REGION","comment":null,"display_name":"crm_user_region"},"CRM_USER_AREA":{"type":"TEXT","index":128,"name":"CRM_USER_AREA","comment":null,"display_name":"crm_user_area"},"CRM_USER_GEO":{"type":"TEXT","index":129,"name":"CRM_USER_GEO","comment":null,"display_name":"crm_user_geo"},"CREATED_BY":{"type":"TEXT","index":130,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":131,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":132,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":133,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":134,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":135,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:11UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2395543040,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_crm_person_with_opp","raw_sql":"$1a","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.mart_crm_opportunity","model.gitlab_snowflake.mart_crm_opportunity","model.gitlab_snowflake.mart_crm_person","model.gitlab_snowflake.mart_crm_person","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_sales","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","restricted_safe","reports","rpt_crm_person_with_opp"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/restricted_safe/reports/rpt_crm_person_with_opp.sql","original_file_path":"models/common_mart_sales/restricted_safe/reports/rpt_crm_person_with_opp.sql","name":"rpt_crm_person_with_opp","alias":"rpt_crm_person_with_opp","checksum":{"name":"sha256","checksum":"148a645dec4698842b53f4fb533942dddb64178b5ef1fe37da4f5b0caf78cc3d"},"tags":["safe"],"refs":[["dim_crm_account"],["dim_crm_account"],["mart_crm_opportunity"],["mart_crm_opportunity"],["mart_crm_person"],["mart_crm_person"],["dim_crm_user"],["dim_crm_user"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/restricted_safe/reports/rpt_crm_person_with_opp.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033723.5980911,"compiled_sql":"$1b","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_sales.rpt_crm_person_with_opp","label":"rpt_crm_person_with_opp"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_SALES","name":"MART_CRM_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":3,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"MERGED_TO_ACCOUNT_ID","comment":null,"display_name":"merged_to_account_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":5,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"CRM_ACCOUNT_OWNER_ID":{"type":"TEXT","index":6,"name":"CRM_ACCOUNT_OWNER_ID","comment":null,"display_name":"crm_account_owner_id"},"PROPOSED_CRM_ACCOUNT_OWNER_ID":{"type":"TEXT","index":7,"name":"PROPOSED_CRM_ACCOUNT_OWNER_ID","comment":null,"display_name":"proposed_crm_account_owner_id"},"TECHNICAL_ACCOUNT_MANAGER_ID":{"type":"TEXT","index":8,"name":"TECHNICAL_ACCOUNT_MANAGER_ID","comment":null,"display_name":"technical_account_manager_id"},"MASTER_RECORD_ID":{"type":"TEXT","index":9,"name":"MASTER_RECORD_ID","comment":null,"display_name":"master_record_id"},"DIM_CRM_PERSON_PRIMARY_CONTACT_ID":{"type":"TEXT","index":10,"name":"DIM_CRM_PERSON_PRIMARY_CONTACT_ID","comment":null,"display_name":"dim_crm_person_primary_contact_id"},"CRM_ACCOUNT_OWNER":{"type":"TEXT","index":11,"name":"CRM_ACCOUNT_OWNER","comment":null,"display_name":"crm_account_owner"},"ACCOUNT_OWNER":{"type":"TEXT","index":12,"name":"ACCOUNT_OWNER","comment":null,"display_name":"account_owner"},"PROPOSED_CRM_ACCOUNT_OWNER":{"type":"TEXT","index":13,"name":"PROPOSED_CRM_ACCOUNT_OWNER","comment":null,"display_name":"proposed_crm_account_owner"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":14,"name":"TECHNICAL_ACCOUNT_MANAGER","comment":null,"display_name":"technical_account_manager"},"OWNER_ROLE":{"type":"TEXT","index":15,"name":"OWNER_ROLE","comment":null,"display_name":"owner_role"},"USER_ROLE_TYPE":{"type":"TEXT","index":16,"name":"USER_ROLE_TYPE","comment":null,"display_name":"user_role_type"},"CRM_ACCOUNT_OWNER_GEO":{"type":"TEXT","index":17,"name":"CRM_ACCOUNT_OWNER_GEO","comment":null,"display_name":"crm_account_owner_geo"},"CRM_ACCOUNT_OWNER_REGION":{"type":"TEXT","index":18,"name":"CRM_ACCOUNT_OWNER_REGION","comment":null,"display_name":"crm_account_owner_region"},"CRM_ACCOUNT_OWNER_AREA":{"type":"TEXT","index":19,"name":"CRM_ACCOUNT_OWNER_AREA","comment":null,"display_name":"crm_account_owner_area"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":20,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":21,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":22,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":23,"name":"PARENT_CRM_ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"parent_crm_account_business_unit"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":24,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":25,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":26,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":27,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":28,"name":"PARENT_CRM_ACCOUNT_ROLE_TYPE","comment":null,"display_name":"parent_crm_account_role_type"},"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":29,"name":"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"parent_crm_account_max_family_employee"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":30,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":31,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":32,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":33,"name":"PARENT_CRM_ACCOUNT_UPA_STREET","comment":null,"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":34,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":35,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"CRM_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":36,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"crm_account_employee_count"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":37,"name":"CRM_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"crm_account_gtm_strategy"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":38,"name":"CRM_ACCOUNT_FOCUS_ACCOUNT","comment":null,"display_name":"crm_account_focus_account"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":39,"name":"CRM_ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"crm_account_owner_user_segment"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":40,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_BILLING_COUNTRY_CODE":{"type":"TEXT","index":41,"name":"CRM_ACCOUNT_BILLING_COUNTRY_CODE","comment":null,"display_name":"crm_account_billing_country_code"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":42,"name":"CRM_ACCOUNT_TYPE","comment":null,"display_name":"crm_account_type"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":43,"name":"CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"crm_account_industry"},"CRM_ACCOUNT_SUB_INDUSTRY":{"type":"TEXT","index":44,"name":"CRM_ACCOUNT_SUB_INDUSTRY","comment":null,"display_name":"crm_account_sub_industry"},"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND":{"type":"TEXT","index":45,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND","comment":null,"display_name":"crm_account_employee_count_band"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":46,"name":"PARTNER_VAT_TAX_ID","comment":null,"display_name":"partner_vat_tax_id"},"ACCOUNT_MANAGER":{"type":"TEXT","index":47,"name":"ACCOUNT_MANAGER","comment":null,"display_name":"account_manager"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":48,"name":"BUSINESS_DEVELOPMENT_REP","comment":null,"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":49,"name":"DEDICATED_SERVICE_ENGINEER","comment":null,"display_name":"dedicated_service_engineer"},"ACCOUNT_TIER":{"type":"TEXT","index":50,"name":"ACCOUNT_TIER","comment":null,"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":51,"name":"ACCOUNT_TIER_NOTES","comment":null,"display_name":"account_tier_notes"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":52,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":53,"name":"SUPPORT_LEVEL","comment":null,"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":54,"name":"NAMED_ACCOUNT","comment":null,"display_name":"named_account"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":55,"name":"BILLING_POSTAL_CODE","comment":null,"display_name":"billing_postal_code"},"PARTNER_TYPE":{"type":"TEXT","index":56,"name":"PARTNER_TYPE","comment":null,"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":57,"name":"PARTNER_STATUS","comment":null,"display_name":"partner_status"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":58,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":59,"name":"DEMANDBASE_ACCOUNT_LIST","comment":null,"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":60,"name":"DEMANDBASE_INTENT","comment":null,"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":61,"name":"DEMANDBASE_PAGE_VIEWS","comment":null,"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":62,"name":"DEMANDBASE_SCORE","comment":null,"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":63,"name":"DEMANDBASE_SESSIONS","comment":null,"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":64,"name":"DEMANDBASE_TRENDING_OFFSITE_INTENT","comment":null,"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":65,"name":"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT","comment":null,"display_name":"demandbase_trending_onsite_engagement"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":66,"name":"IS_LOCALLY_MANAGED_ACCOUNT","comment":null,"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":67,"name":"IS_STRATEGIC_ACCOUNT","comment":null,"display_name":"is_strategic_account"},"PARTNER_TRACK":{"type":"TEXT","index":68,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":69,"name":"PARTNERS_PARTNER_TYPE","comment":null,"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":70,"name":"GITLAB_PARTNER_PROGRAM","comment":null,"display_name":"gitlab_partner_program"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":71,"name":"ZOOM_INFO_COMPANY_NAME","comment":null,"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":72,"name":"ZOOM_INFO_COMPANY_REVENUE","comment":null,"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":73,"name":"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT","comment":null,"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":74,"name":"ZOOM_INFO_COMPANY_INDUSTRY","comment":null,"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":75,"name":"ZOOM_INFO_COMPANY_CITY","comment":null,"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":76,"name":"ZOOM_INFO_COMPANY_STATE_PROVINCE","comment":null,"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":77,"name":"ZOOM_INFO_COMPANY_COUNTRY","comment":null,"display_name":"zoom_info_company_country"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":78,"name":"ZOOMINFO_ACCOUNT_PHONE","comment":null,"display_name":"zoominfo_account_phone"},"ACCOUNT_PHONE":{"type":"TEXT","index":79,"name":"ACCOUNT_PHONE","comment":null,"display_name":"account_phone"},"ABM_TIER":{"type":"TEXT","index":80,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"HEALTH_NUMBER":{"type":"FLOAT","index":81,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":82,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":83,"name":"PARTNER_ACCOUNT_IBAN_NUMBER","comment":null,"display_name":"partner_account_iban_number"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":84,"name":"GITLAB_COM_USER","comment":null,"display_name":"gitlab_com_user"},"CRM_ACCOUNT_ZI_TECHNOLOGIES":{"type":"TEXT","index":85,"name":"CRM_ACCOUNT_ZI_TECHNOLOGIES","comment":null,"display_name":"crm_account_zi_technologies"},"CRM_ACCOUNT_ZOOM_INFO_WEBSITE":{"type":"TEXT","index":86,"name":"CRM_ACCOUNT_ZOOM_INFO_WEBSITE","comment":null,"display_name":"crm_account_zoom_info_website"},"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":87,"name":"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS","comment":null,"display_name":"crm_account_zoom_info_company_other_domains"},"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":88,"name":"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_dozisf_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":89,"name":"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":90,"name":"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME","comment":null,"display_name":"crm_account_zoom_info_parent_company_name"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":91,"name":"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_ultimate_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":92,"name":"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME","comment":null,"display_name":"crm_account_zoom_info_ultimate_parent_company_name"},"FORBES_2000_RANK":{"type":"TEXT","index":93,"name":"FORBES_2000_RANK","comment":null,"display_name":"forbes_2000_rank"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":94,"name":"SALES_DEVELOPMENT_REP","comment":null,"display_name":"sales_development_rep"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":95,"name":"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES","comment":null,"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":96,"name":"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS","comment":null,"display_name":"admin_manual_source_account_address"},"EOA_SENTIMENT":{"type":"TEXT","index":97,"name":"eoa_sentiment","comment":null,"description":" Red - customer was unhappy with the announcement and there's potential risk of churn\nYellow - customer exhibited some dissatisfaction with the announcement but likely won't churn\nGreen - customer responded favourably to the announcement and is a strong candidate to uptier ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":98,"name":"gs_health_user_engagement","comment":null,"description":" [Customer health score for engaging in meetings, cadence calls, or EBRs](https://about.gitlab.com/handbook/customer-success/customer-health-scoring/#customer-engagement). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":99,"name":"gs_health_cd","comment":null,"description":" Customer [health score for CD use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#cd-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":100,"name":"gs_health_devsecops","comment":null,"description":" Customer [health score for DevSecOps use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#devsecops-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":101,"name":"gs_health_ci","comment":null,"description":" Customer [health score for CI use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#ci-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":102,"name":"gs_health_scm","comment":null,"description":" [Customer health score for source code management (SCM) use case adoption](https://about.gitlab.com/handbook/marketing/brand-and-product-marketing/product-and-solution-marketing/usecase-gtm/version-control-collaboration/#adoption-guide). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":103,"name":"RISK_IMPACT","comment":null,"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":104,"name":"RISK_REASON","comment":null,"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":105,"name":"LAST_TIMELINE_AT_RISK_UPDATE","comment":null,"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":106,"name":"last_at_risk_update_comments","comment":null,"description":" The most recent Account-level At-Risk Update timeline activity in Gainsight, synced to Salesforce. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_at_risk_update_comments"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":107,"name":"bdr_prospecting_status","comment":null,"description":"Indicates whether the account is actively being prospected by a BDR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bdr_prospecting_status"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":108,"name":"IS_SDR_TARGET_ACCOUNT","comment":null,"display_name":"is_sdr_target_account"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":109,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"IS_RESELLER":{"type":"BOOLEAN","index":110,"name":"IS_RESELLER","comment":null,"display_name":"is_reseller"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":112,"name":"IS_FIRST_ORDER_AVAILABLE","comment":null,"display_name":"is_first_order_available"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":113,"name":"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH","comment":null,"display_name":"is_excluded_from_zoom_info_enrich"},"IS_ZI_JENKINS_PRESENT":{"type":"NUMBER","index":114,"name":"IS_ZI_JENKINS_PRESENT","comment":null,"display_name":"is_zi_jenkins_present"},"IS_ZI_SVN_PRESENT":{"type":"NUMBER","index":115,"name":"IS_ZI_SVN_PRESENT","comment":null,"display_name":"is_zi_svn_present"},"IS_ZI_TORTOISE_SVN_PRESENT":{"type":"NUMBER","index":116,"name":"IS_ZI_TORTOISE_SVN_PRESENT","comment":null,"display_name":"is_zi_tortoise_svn_present"},"IS_ZI_GCP_PRESENT":{"type":"NUMBER","index":117,"name":"IS_ZI_GCP_PRESENT","comment":null,"display_name":"is_zi_gcp_present"},"IS_ZI_ATLASSIAN_PRESENT":{"type":"NUMBER","index":118,"name":"IS_ZI_ATLASSIAN_PRESENT","comment":null,"display_name":"is_zi_atlassian_present"},"IS_ZI_GITHUB_PRESENT":{"type":"NUMBER","index":119,"name":"IS_ZI_GITHUB_PRESENT","comment":null,"display_name":"is_zi_github_present"},"IS_ZI_GITHUB_ENTERPRISE_PRESENT":{"type":"NUMBER","index":120,"name":"IS_ZI_GITHUB_ENTERPRISE_PRESENT","comment":null,"display_name":"is_zi_github_enterprise_present"},"IS_ZI_AWS_PRESENT":{"type":"NUMBER","index":121,"name":"IS_ZI_AWS_PRESENT","comment":null,"display_name":"is_zi_aws_present"},"IS_ZI_KUBERNETES_PRESENT":{"type":"NUMBER","index":122,"name":"IS_ZI_KUBERNETES_PRESENT","comment":null,"display_name":"is_zi_kubernetes_present"},"IS_ZI_APACHE_SUBVERSION_PRESENT":{"type":"NUMBER","index":123,"name":"IS_ZI_APACHE_SUBVERSION_PRESENT","comment":null,"display_name":"is_zi_apache_subversion_present"},"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT":{"type":"NUMBER","index":124,"name":"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT","comment":null,"display_name":"is_zi_apache_subversion_svn_present"},"IS_ZI_HASHICORP_PRESENT":{"type":"NUMBER","index":125,"name":"IS_ZI_HASHICORP_PRESENT","comment":null,"display_name":"is_zi_hashicorp_present"},"IS_ZI_AWS_CLOUD_TRAIL_PRESENT":{"type":"NUMBER","index":126,"name":"IS_ZI_AWS_CLOUD_TRAIL_PRESENT","comment":null,"display_name":"is_zi_aws_cloud_trail_present"},"IS_ZI_CIRCLE_CI_PRESENT":{"type":"NUMBER","index":127,"name":"IS_ZI_CIRCLE_CI_PRESENT","comment":null,"display_name":"is_zi_circle_ci_present"},"IS_ZI_BIT_BUCKET_PRESENT":{"type":"NUMBER","index":128,"name":"IS_ZI_BIT_BUCKET_PRESENT","comment":null,"display_name":"is_zi_bit_bucket_present"},"CRM_ACCOUNT_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":129,"name":"CRM_ACCOUNT_CREATED_DATE","comment":null,"display_name":"crm_account_created_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":130,"name":"ABM_TIER_1_DATE","comment":null,"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":131,"name":"ABM_TIER_2_DATE","comment":null,"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":132,"name":"ABM_TIER_3_DATE","comment":null,"display_name":"abm_tier_3_date"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":133,"name":"GTM_ACCELERATION_DATE","comment":null,"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":134,"name":"GTM_ACCOUNT_BASED_DATE","comment":null,"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":135,"name":"GTM_ACCOUNT_CENTRIC_DATE","comment":null,"display_name":"gtm_account_centric_date"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"DATE","index":136,"name":"PARTNERS_SIGNED_CONTRACT_DATE","comment":null,"display_name":"partners_signed_contract_date"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":137,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":138,"name":"NEXT_RENEWAL_DATE","comment":null,"display_name":"next_renewal_date"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":139,"name":"CUSTOMER_SINCE_DATE","comment":null,"display_name":"customer_since_date"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":140,"name":"gs_first_value_date","comment":null,"description":" Date when the account reached 10% of license utiliztion. The goal is to reach this within 30 days. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":141,"name":"gs_last_csm_activity_date","comment":null,"description":" Last time the CSM had contact with the customer. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_last_csm_activity_date"},"COUNT_ACTIVE_SUBSCRIPTION_CHARGES":{"type":"FLOAT","index":142,"name":"COUNT_ACTIVE_SUBSCRIPTION_CHARGES","comment":null,"display_name":"count_active_subscription_charges"},"COUNT_ACTIVE_SUBSCRIPTIONS":{"type":"FLOAT","index":143,"name":"COUNT_ACTIVE_SUBSCRIPTIONS","comment":null,"display_name":"count_active_subscriptions"},"COUNT_BILLING_ACCOUNTS":{"type":"FLOAT","index":144,"name":"COUNT_BILLING_ACCOUNTS","comment":null,"display_name":"count_billing_accounts"},"COUNT_LICENSED_USERS":{"type":"FLOAT","index":145,"name":"COUNT_LICENSED_USERS","comment":null,"display_name":"count_licensed_users"},"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES":{"type":"FLOAT","index":146,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES","comment":null,"display_name":"count_of_new_business_won_opportunities"},"COUNT_OPEN_RENEWAL_OPPORTUNITIES":{"type":"FLOAT","index":147,"name":"COUNT_OPEN_RENEWAL_OPPORTUNITIES","comment":null,"display_name":"count_open_renewal_opportunities"},"COUNT_OPPORTUNITIES":{"type":"FLOAT","index":148,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_PRODUCTS_PURCHASED":{"type":"FLOAT","index":149,"name":"COUNT_PRODUCTS_PURCHASED","comment":null,"display_name":"count_products_purchased"},"COUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":150,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_CONCURRENT_EE_SUBSCRIPTIONS":{"type":"FLOAT","index":151,"name":"COUNT_CONCURRENT_EE_SUBSCRIPTIONS","comment":null,"display_name":"count_concurrent_ee_subscriptions"},"COUNT_CE_INSTANCES":{"type":"FLOAT","index":152,"name":"COUNT_CE_INSTANCES","comment":null,"display_name":"count_ce_instances"},"COUNT_ACTIVE_CE_USERS":{"type":"FLOAT","index":153,"name":"COUNT_ACTIVE_CE_USERS","comment":null,"display_name":"count_active_ce_users"},"COUNT_OPEN_OPPORTUNITIES":{"type":"FLOAT","index":154,"name":"COUNT_OPEN_OPPORTUNITIES","comment":null,"display_name":"count_open_opportunities"},"COUNT_USING_CE":{"type":"BOOLEAN","index":155,"name":"COUNT_USING_CE","comment":null,"display_name":"count_using_ce"},"PARENT_CRM_ACCOUNT_LAM":{"type":"FLOAT","index":156,"name":"PARENT_CRM_ACCOUNT_LAM","comment":null,"display_name":"parent_crm_account_lam"},"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT":{"type":"FLOAT","index":157,"name":"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT","comment":null,"display_name":"parent_crm_account_lam_dev_count"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":158,"name":"CARR_THIS_ACCOUNT","comment":null,"display_name":"carr_this_account"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":159,"name":"CARR_ACCOUNT_FAMILY","comment":null,"display_name":"carr_account_family"},"POTENTIAL_USERS":{"type":"FLOAT","index":160,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"NUMBER_OF_LICENSES_THIS_ACCOUNT":{"type":"FLOAT","index":161,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT","comment":null,"display_name":"number_of_licenses_this_account"},"CRM_ACCOUNT_ZOOM_INFO_NUMBER_OF_DEVELOPERS":{"type":"FLOAT","index":162,"name":"CRM_ACCOUNT_ZOOM_INFO_NUMBER_OF_DEVELOPERS","comment":null,"display_name":"crm_account_zoom_info_number_of_developers"},"CRM_ACCOUNT_ZOOM_INFO_TOTAL_FUNDING":{"type":"TEXT","index":163,"name":"CRM_ACCOUNT_ZOOM_INFO_TOTAL_FUNDING","comment":null,"display_name":"crm_account_zoom_info_total_funding"},"DECISION_MAKER_COUNT_LINKEDIN":{"type":"FLOAT","index":164,"name":"DECISION_MAKER_COUNT_LINKEDIN","comment":null,"display_name":"decision_maker_count_linkedin"},"NUMBER_OF_EMPLOYEES":{"type":"NUMBER","index":165,"name":"NUMBER_OF_EMPLOYEES","comment":null,"display_name":"number_of_employees"},"CREATED_BY_ID":{"type":"TEXT","index":166,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"CREATED_BY_NAME":{"type":"TEXT","index":167,"name":"CREATED_BY_NAME","comment":null,"display_name":"created_by_name"},"LAST_MODIFIED_BY_ID":{"type":"TEXT","index":168,"name":"LAST_MODIFIED_BY_ID","comment":null,"display_name":"last_modified_by_id"},"LAST_MODIFIED_BY_NAME":{"type":"TEXT","index":169,"name":"LAST_MODIFIED_BY_NAME","comment":null,"display_name":"last_modified_by_name"},"LAST_MODIFIED_DATE_ID":{"type":"NUMBER","index":170,"name":"LAST_MODIFIED_DATE_ID","comment":null,"display_name":"last_modified_date_id"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":171,"name":"LAST_MODIFIED_DATE","comment":null,"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":172,"name":"LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"last_activity_date_id"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":173,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"IS_DELETED":{"type":"BOOLEAN","index":174,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"CREATED_BY":{"type":"TEXT","index":175,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":176,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":177,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":178,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":179,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":180,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:08UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":71392768,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_crm_account","raw_sql":"$1c","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.fct_crm_account","model.gitlab_snowflake.fct_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_sales","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","restricted_safe","mart_crm_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/restricted_safe/mart_crm_account.sql","original_file_path":"models/common_mart_sales/restricted_safe/mart_crm_account.sql","name":"mart_crm_account","alias":"mart_crm_account","checksum":{"name":"sha256","checksum":"7ca0c2cff22749ecd36bdc7151109272252a1a79938c9a2b4f7d0ca1ff49f031"},"tags":["safe"],"refs":[["dim_crm_account"],["dim_crm_account"],["fct_crm_account"],["fct_crm_account"],["dim_crm_user"],["dim_crm_user"]],"sources":[],"metrics":[],"description":"Model containing Salesforce crm accounts details for existing and historical customers.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_sales/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/restricted_safe/mart_crm_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033765.2595706,"compiled_sql":"$1d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_sales.mart_crm_account","label":"mart_crm_account"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_FINANCE","name":"MART_CHARGE_CENTRAL_SANDBOX","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CHARGE_ID":{"type":"TEXT","index":1,"name":"dim_charge_id","comment":null,"description":"The unique identifier of a rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_charge_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"RATE_PLAN_NAME":{"type":"TEXT","index":7,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":8,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"CHARGE_TYPE":{"type":"TEXT","index":9,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":10,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":11,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":12,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"EFFECTIVE_START_DATE":{"type":"DATE","index":13,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":14,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":15,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":16,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":17,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":18,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":19,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"SUBSCRIPTION_CREATED_BY_ID":{"type":"TEXT","index":20,"name":"SUBSCRIPTION_CREATED_BY_ID","comment":null,"display_name":"subscription_created_by_id"},"SUBSCRIPTION_UPDATED_BY_ID":{"type":"TEXT","index":21,"name":"SUBSCRIPTION_UPDATED_BY_ID","comment":null,"display_name":"subscription_updated_by_id"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":22,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":23,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":24,"name":"SUBSCRIPTION_START_MONTH","comment":null,"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":25,"name":"SUBSCRIPTION_END_MONTH","comment":null,"display_name":"subscription_end_month"},"SUBSCRIPTION_END_FISCAL_YEAR":{"type":"NUMBER","index":26,"name":"SUBSCRIPTION_END_FISCAL_YEAR","comment":null,"display_name":"subscription_end_fiscal_year"},"SUBSCRIPTION_CREATED_DATE":{"type":"DATE","index":27,"name":"SUBSCRIPTION_CREATED_DATE","comment":null,"display_name":"subscription_created_date"},"SUBSCRIPTION_UPDATED_DATE":{"type":"DATE","index":28,"name":"SUBSCRIPTION_UPDATED_DATE","comment":null,"display_name":"subscription_updated_date"},"SECOND_ACTIVE_RENEWAL_MONTH":{"type":"DATE","index":29,"name":"SECOND_ACTIVE_RENEWAL_MONTH","comment":null,"display_name":"second_active_renewal_month"},"TERM_START_DATE":{"type":"DATE","index":30,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":31,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"TERM_START_MONTH":{"type":"DATE","index":32,"name":"TERM_START_MONTH","comment":null,"display_name":"term_start_month"},"TERM_END_MONTH":{"type":"DATE","index":33,"name":"TERM_END_MONTH","comment":null,"display_name":"term_end_month"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":34,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":35,"name":"SUBSCRIPTION_SALES_TYPE","comment":null,"display_name":"subscription_sales_type"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":36,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":37,"name":"OLDEST_SUBSCRIPTION_IN_COHORT","comment":null,"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":38,"name":"SUBSCRIPTION_LINEAGE","comment":null,"display_name":"subscription_lineage"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":39,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":40,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":41,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":42,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":43,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":44,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":45,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":46,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":47,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":48,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"SOLD_TO_COUNTRY":{"type":"TEXT","index":49,"name":"SOLD_TO_COUNTRY","comment":null,"display_name":"sold_to_country"},"BILLING_ACCOUNT_NAME":{"type":"TEXT","index":50,"name":"BILLING_ACCOUNT_NAME","comment":null,"display_name":"billing_account_name"},"BILLING_ACCOUNT_NUMBER":{"type":"TEXT","index":51,"name":"BILLING_ACCOUNT_NUMBER","comment":null,"display_name":"billing_account_number"},"SSP_CHANNEL":{"type":"TEXT","index":52,"name":"SSP_CHANNEL","comment":null,"display_name":"ssp_channel"},"PO_REQUIRED":{"type":"TEXT","index":53,"name":"PO_REQUIRED","comment":null,"display_name":"po_required"},"DIM_CRM_USER_ID":{"type":"TEXT","index":54,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":55,"name":"CRM_USER_SALES_SEGMENT","comment":null,"display_name":"crm_user_sales_segment"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":56,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":57,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":58,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":59,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":60,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":61,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":62,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":63,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":64,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":65,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":66,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"HEALTH_NUMBER":{"type":"FLOAT","index":67,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":68,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":69,"name":"SUBSCRIPTION_COHORT_MONTH","comment":null,"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":70,"name":"SUBSCRIPTION_COHORT_QUARTER","comment":null,"display_name":"subscription_cohort_quarter"},"BILLING_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":71,"name":"BILLING_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"billing_account_cohort_month"},"BILLING_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":72,"name":"BILLING_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"billing_account_cohort_quarter"},"CRM_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":73,"name":"CRM_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"crm_account_cohort_month"},"CRM_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":74,"name":"CRM_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"crm_account_cohort_quarter"},"PARENT_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":75,"name":"PARENT_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"parent_account_cohort_month"},"PARENT_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":76,"name":"PARENT_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"parent_account_cohort_quarter"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":77,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":78,"name":"PRODUCT_TIER_NAME","comment":null,"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":79,"name":"PRODUCT_DELIVERY_TYPE","comment":null,"display_name":"product_delivery_type"},"SERVICE_TYPE":{"type":"TEXT","index":80,"name":"SERVICE_TYPE","comment":null,"display_name":"service_type"},"PRODUCT_RATE_PLAN_NAME":{"type":"TEXT","index":81,"name":"PRODUCT_RATE_PLAN_NAME","comment":null,"display_name":"product_rate_plan_name"},"DIM_AMENDMENT_ID_SUBSCRIPTION":{"type":"TEXT","index":82,"name":"DIM_AMENDMENT_ID_SUBSCRIPTION","comment":null,"display_name":"dim_amendment_id_subscription"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":83,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"SUBSCRIPTION_AMENDMENT_EFFECTIVE_DATE":{"type":"TIMESTAMP_TZ","index":84,"name":"SUBSCRIPTION_AMENDMENT_EFFECTIVE_DATE","comment":null,"display_name":"subscription_amendment_effective_date"},"SUBSCRIPTION_AMENDMENT_TYPE":{"type":"TEXT","index":85,"name":"SUBSCRIPTION_AMENDMENT_TYPE","comment":null,"display_name":"subscription_amendment_type"},"SUBSCRIPTION_AMENDMENT_NAME":{"type":"TEXT","index":86,"name":"SUBSCRIPTION_AMENDMENT_NAME","comment":null,"display_name":"subscription_amendment_name"},"CHARGE_AMENDMENT_TYPE":{"type":"TEXT","index":87,"name":"CHARGE_AMENDMENT_TYPE","comment":null,"display_name":"charge_amendment_type"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":88,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"MRR":{"type":"FLOAT","index":89,"name":"MRR","comment":null,"display_name":"mrr"},"PREVIOUS_MRR":{"type":"FLOAT","index":90,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR":{"type":"FLOAT","index":91,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"ARR":{"type":"FLOAT","index":92,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":93,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARR":{"type":"FLOAT","index":94,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":95,"name":"QUANTITY","comment":null,"display_name":"quantity"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":96,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY":{"type":"FLOAT","index":97,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"DELTA_TCV":{"type":"FLOAT","index":98,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":99,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"CREATED_BY":{"type":"TEXT","index":100,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":101,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":102,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":103,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":104,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":105,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":66082816,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_charge_central_sandbox","raw_sql":"$1e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_amendment_central_sandbox","model.gitlab_snowflake.dim_amendment_central_sandbox","model.gitlab_snowflake.dim_billing_account_central_sandbox","model.gitlab_snowflake.dim_billing_account_central_sandbox","model.gitlab_snowflake.dim_charge_central_sandbox","model.gitlab_snowflake.dim_charge_central_sandbox","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_product_detail_central_sandbox","model.gitlab_snowflake.dim_product_detail_central_sandbox","model.gitlab_snowflake.dim_subscription_central_sandbox","model.gitlab_snowflake.dim_subscription_central_sandbox","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.fct_charge_central_sandbox","model.gitlab_snowflake.fct_charge_central_sandbox"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_workspace_finance","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_finance","fqn":["gitlab_snowflake","workspaces","workspace_finance","restricted_safe","mart_charge_central_sandbox"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_finance/restricted_safe/mart_charge_central_sandbox.sql","original_file_path":"models/workspaces/workspace_finance/restricted_safe/mart_charge_central_sandbox.sql","name":"mart_charge_central_sandbox","alias":"mart_charge_central_sandbox","checksum":{"name":"sha256","checksum":"7674dd8a7158d580e7b430d2d53c69b1a073973462eac03e38b18d4e7a43a264"},"tags":["workspace","safe"],"refs":[["dim_amendment_central_sandbox"],["dim_amendment_central_sandbox"],["dim_billing_account_central_sandbox"],["dim_billing_account_central_sandbox"],["dim_charge_central_sandbox"],["dim_charge_central_sandbox"],["dim_crm_account"],["dim_crm_account"],["dim_product_detail_central_sandbox"],["dim_product_detail_central_sandbox"],["dim_subscription_central_sandbox"],["dim_subscription_central_sandbox"],["dim_crm_user"],["dim_crm_user"],["fct_charge_central_sandbox"],["fct_charge_central_sandbox"]],"sources":[],"metrics":[],"description":"Model combining Subscription related objects such as product details and rate plan charge details into a mart.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_finance/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_finance/restricted_safe/mart_charge_central_sandbox.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false},"created_at":1689033734.269711,"compiled_sql":"$1f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_finance.mart_charge_central_sandbox","label":"mart_charge_central_sandbox"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_MARKETING","name":"MART_CRM_PERSON","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_PERSON_ID":{"type":"TEXT","index":1,"name":"dim_crm_person_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","sales_funnel"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_crm_person_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":2,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"SFDC_RECORD_ID":{"type":"TEXT","index":4,"name":"SFDC_RECORD_ID","comment":null,"display_name":"sfdc_record_id"},"MARKETO_LEAD_ID":{"type":"FLOAT","index":5,"name":"MARKETO_LEAD_ID","comment":null,"display_name":"marketo_lead_id"},"MQL_DATE_FIRST_ID":{"type":"NUMBER","index":6,"name":"MQL_DATE_FIRST_ID","comment":null,"display_name":"mql_date_first_id"},"MQL_DATE_FIRST":{"type":"DATE","index":7,"name":"MQL_DATE_FIRST","comment":null,"display_name":"mql_date_first"},"INITIAL_MQL_DATE_FIRST_ID":{"type":"NUMBER","index":8,"name":"INITIAL_MQL_DATE_FIRST_ID","comment":null,"display_name":"initial_mql_date_first_id"},"INITIAL_MQL_DATE_FIRST":{"type":"DATE","index":9,"name":"INITIAL_MQL_DATE_FIRST","comment":null,"display_name":"initial_mql_date_first"},"LEGACY_MQL_DATE_FIRST_ID":{"type":"NUMBER","index":10,"name":"LEGACY_MQL_DATE_FIRST_ID","comment":null,"display_name":"legacy_mql_date_first_id"},"LEGACY_MQL_DATE_FIRST":{"type":"DATE","index":11,"name":"LEGACY_MQL_DATE_FIRST","comment":null,"display_name":"legacy_mql_date_first"},"MQL_DATETIME_FIRST":{"type":"TIMESTAMP_NTZ","index":12,"name":"MQL_DATETIME_FIRST","comment":null,"display_name":"mql_datetime_first"},"MQL_DATETIME_FIRST_PT":{"type":"TIMESTAMP_TZ","index":13,"name":"MQL_DATETIME_FIRST_PT","comment":null,"display_name":"mql_datetime_first_pt"},"MQL_DATE_FIRST_PT":{"type":"DATE","index":14,"name":"MQL_DATE_FIRST_PT","comment":null,"display_name":"mql_date_first_pt"},"MQL_MONTH_FIRST":{"type":"DATE","index":15,"name":"MQL_MONTH_FIRST","comment":null,"display_name":"mql_month_first"},"MQL_MONTH_FIRST_PT":{"type":"DATE","index":16,"name":"MQL_MONTH_FIRST_PT","comment":null,"display_name":"mql_month_first_pt"},"MQL_DATE_LASTEST":{"type":"DATE","index":17,"name":"MQL_DATE_LASTEST","comment":null,"display_name":"mql_date_lastest"},"INITIAL_MQL_DATE_FIRST_PT":{"type":"DATE","index":18,"name":"INITIAL_MQL_DATE_FIRST_PT","comment":null,"display_name":"initial_mql_date_first_pt"},"INITIAL_MQL_MONTH_FIRST":{"type":"DATE","index":19,"name":"INITIAL_MQL_MONTH_FIRST","comment":null,"display_name":"initial_mql_month_first"},"INITIAL_MQL_MONTH_FIRST_PT":{"type":"DATE","index":20,"name":"INITIAL_MQL_MONTH_FIRST_PT","comment":null,"display_name":"initial_mql_month_first_pt"},"LEGACY_MQL_DATE_FIRST_PT":{"type":"DATE","index":21,"name":"LEGACY_MQL_DATE_FIRST_PT","comment":null,"display_name":"legacy_mql_date_first_pt"},"LEGACY_MQL_MONTH_FIRST":{"type":"DATE","index":22,"name":"LEGACY_MQL_MONTH_FIRST","comment":null,"display_name":"legacy_mql_month_first"},"LEGACY_MQL_MONTH_FIRST_PT":{"type":"DATE","index":23,"name":"LEGACY_MQL_MONTH_FIRST_PT","comment":null,"display_name":"legacy_mql_month_first_pt"},"LEGACY_MQL_DATE_LASTEST":{"type":"DATE","index":24,"name":"LEGACY_MQL_DATE_LASTEST","comment":null,"display_name":"legacy_mql_date_lastest"},"MQL_DATETIME_LATEST":{"type":"TIMESTAMP_NTZ","index":25,"name":"MQL_DATETIME_LATEST","comment":null,"display_name":"mql_datetime_latest"},"MQL_DATETIME_LATEST_PT":{"type":"TIMESTAMP_TZ","index":26,"name":"MQL_DATETIME_LATEST_PT","comment":null,"display_name":"mql_datetime_latest_pt"},"MQL_DATE_LASTEST_PT":{"type":"DATE","index":27,"name":"MQL_DATE_LASTEST_PT","comment":null,"display_name":"mql_date_lastest_pt"},"MQL_MONTH_LATEST":{"type":"DATE","index":28,"name":"MQL_MONTH_LATEST","comment":null,"display_name":"mql_month_latest"},"MQL_MONTH_LATEST_PT":{"type":"DATE","index":29,"name":"MQL_MONTH_LATEST_PT","comment":null,"display_name":"mql_month_latest_pt"},"LEGACY_MQL_DATE_LASTEST_PT":{"type":"DATE","index":30,"name":"LEGACY_MQL_DATE_LASTEST_PT","comment":null,"display_name":"legacy_mql_date_lastest_pt"},"LEGACY_MQL_MONTH_LATEST":{"type":"DATE","index":31,"name":"LEGACY_MQL_MONTH_LATEST","comment":null,"display_name":"legacy_mql_month_latest"},"LEGACY_MQL_MONTH_LATEST_PT":{"type":"DATE","index":32,"name":"LEGACY_MQL_MONTH_LATEST_PT","comment":null,"display_name":"legacy_mql_month_latest_pt"},"CREATED_DATE":{"type":"DATE","index":33,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"CREATED_DATE_PT":{"type":"DATE","index":34,"name":"CREATED_DATE_PT","comment":null,"display_name":"created_date_pt"},"CREATED_MONTH":{"type":"DATE","index":35,"name":"CREATED_MONTH","comment":null,"display_name":"created_month"},"CREATED_MONTH_PT":{"type":"DATE","index":36,"name":"CREATED_MONTH_PT","comment":null,"display_name":"created_month_pt"},"LEAD_CREATED_DATE":{"type":"DATE","index":37,"name":"LEAD_CREATED_DATE","comment":null,"display_name":"lead_created_date"},"LEAD_CREATED_DATE_PT":{"type":"DATE","index":38,"name":"LEAD_CREATED_DATE_PT","comment":null,"display_name":"lead_created_date_pt"},"LEAD_CREATED_MONTH":{"type":"DATE","index":39,"name":"LEAD_CREATED_MONTH","comment":null,"display_name":"lead_created_month"},"LEAD_CREATED_MONTH_PT":{"type":"DATE","index":40,"name":"LEAD_CREATED_MONTH_PT","comment":null,"display_name":"lead_created_month_pt"},"CONTACT_CREATED_DATE":{"type":"DATE","index":41,"name":"CONTACT_CREATED_DATE","comment":null,"display_name":"contact_created_date"},"CONTACT_CREATED_DATE_PT":{"type":"DATE","index":42,"name":"CONTACT_CREATED_DATE_PT","comment":null,"display_name":"contact_created_date_pt"},"CONTACT_CREATED_MONTH":{"type":"DATE","index":43,"name":"CONTACT_CREATED_MONTH","comment":null,"display_name":"contact_created_month"},"CONTACT_CREATED_MONTH_PT":{"type":"DATE","index":44,"name":"CONTACT_CREATED_MONTH_PT","comment":null,"display_name":"contact_created_month_pt"},"TRUE_INQUIRY_DATE":{"type":"DATE","index":45,"name":"TRUE_INQUIRY_DATE","comment":null,"display_name":"true_inquiry_date"},"INQUIRY_DATE":{"type":"DATE","index":46,"name":"INQUIRY_DATE","comment":null,"display_name":"inquiry_date"},"INQUIRY_DATE_PT":{"type":"DATE","index":47,"name":"INQUIRY_DATE_PT","comment":null,"display_name":"inquiry_date_pt"},"INQUIRY_MONTH":{"type":"DATE","index":48,"name":"INQUIRY_MONTH","comment":null,"display_name":"inquiry_month"},"INQUIRY_MONTH_PT":{"type":"DATE","index":49,"name":"INQUIRY_MONTH_PT","comment":null,"display_name":"inquiry_month_pt"},"INQUIRY_INFERRED_DATE":{"type":"DATE","index":50,"name":"INQUIRY_INFERRED_DATE","comment":null,"display_name":"inquiry_inferred_date"},"INQUIRY_INFERRED_DATETIME":{"type":"DATE","index":51,"name":"INQUIRY_INFERRED_DATETIME","comment":null,"display_name":"inquiry_inferred_datetime"},"INQUIRY_INFERRED_DATE_PT":{"type":"DATE","index":52,"name":"INQUIRY_INFERRED_DATE_PT","comment":null,"display_name":"inquiry_inferred_date_pt"},"INQUIRY_INFERRED_MONTH":{"type":"DATE","index":53,"name":"INQUIRY_INFERRED_MONTH","comment":null,"display_name":"inquiry_inferred_month"},"INQUIRY_INFERRED_MONTH_PT":{"type":"DATE","index":54,"name":"INQUIRY_INFERRED_MONTH_PT","comment":null,"display_name":"inquiry_inferred_month_pt"},"ACCEPTED_DATE":{"type":"DATE","index":55,"name":"ACCEPTED_DATE","comment":null,"display_name":"accepted_date"},"ACCEPTED_DATETIME":{"type":"TIMESTAMP_TZ","index":56,"name":"ACCEPTED_DATETIME","comment":null,"display_name":"accepted_datetime"},"ACCEPTED_DATETIME_PT":{"type":"TIMESTAMP_TZ","index":57,"name":"ACCEPTED_DATETIME_PT","comment":null,"display_name":"accepted_datetime_pt"},"ACCEPTED_DATE_PT":{"type":"DATE","index":58,"name":"ACCEPTED_DATE_PT","comment":null,"display_name":"accepted_date_pt"},"ACCEPTED_MONTH":{"type":"DATE","index":59,"name":"ACCEPTED_MONTH","comment":null,"display_name":"accepted_month"},"ACCEPTED_MONTH_PT":{"type":"DATE","index":60,"name":"ACCEPTED_MONTH_PT","comment":null,"display_name":"accepted_month_pt"},"MQL_SFDC_DATE":{"type":"DATE","index":61,"name":"MQL_SFDC_DATE","comment":null,"display_name":"mql_sfdc_date"},"MQL_SFDC_DATETIME":{"type":"TIMESTAMP_TZ","index":62,"name":"MQL_SFDC_DATETIME","comment":null,"display_name":"mql_sfdc_datetime"},"MQL_SFDC_DATE_PT":{"type":"DATE","index":63,"name":"MQL_SFDC_DATE_PT","comment":null,"display_name":"mql_sfdc_date_pt"},"MQL_SFDC_MONTH":{"type":"DATE","index":64,"name":"MQL_SFDC_MONTH","comment":null,"display_name":"mql_sfdc_month"},"MQL_SFDC_MONTH_PT":{"type":"DATE","index":65,"name":"MQL_SFDC_MONTH_PT","comment":null,"display_name":"mql_sfdc_month_pt"},"MQL_INFERRED_DATE":{"type":"DATE","index":66,"name":"MQL_INFERRED_DATE","comment":null,"display_name":"mql_inferred_date"},"MQL_INFERRED_DATETIME":{"type":"TIMESTAMP_TZ","index":67,"name":"MQL_INFERRED_DATETIME","comment":null,"display_name":"mql_inferred_datetime"},"MQL_INFERRED_DATE_PT":{"type":"DATE","index":68,"name":"MQL_INFERRED_DATE_PT","comment":null,"display_name":"mql_inferred_date_pt"},"MQL_INFERRED_MONTH":{"type":"DATE","index":69,"name":"MQL_INFERRED_MONTH","comment":null,"display_name":"mql_inferred_month"},"MQL_INFERRED_MONTH_PT":{"type":"DATE","index":70,"name":"MQL_INFERRED_MONTH_PT","comment":null,"display_name":"mql_inferred_month_pt"},"QUALIFYING_DATE":{"type":"DATE","index":71,"name":"QUALIFYING_DATE","comment":null,"display_name":"qualifying_date"},"QUALIFYING_DATE_PT":{"type":"DATE","index":72,"name":"QUALIFYING_DATE_PT","comment":null,"display_name":"qualifying_date_pt"},"QUALIFYING_MONTH":{"type":"DATE","index":73,"name":"QUALIFYING_MONTH","comment":null,"display_name":"qualifying_month"},"QUALIFYING_MONTH_PT":{"type":"DATE","index":74,"name":"QUALIFYING_MONTH_PT","comment":null,"display_name":"qualifying_month_pt"},"QUALIFIED_DATE":{"type":"DATE","index":75,"name":"QUALIFIED_DATE","comment":null,"display_name":"qualified_date"},"QUALIFIED_DATE_PT":{"type":"DATE","index":76,"name":"QUALIFIED_DATE_PT","comment":null,"display_name":"qualified_date_pt"},"QUALIFIED_MONTH":{"type":"DATE","index":77,"name":"QUALIFIED_MONTH","comment":null,"display_name":"qualified_month"},"QUALIFIED_MONTH_PT":{"type":"DATE","index":78,"name":"QUALIFIED_MONTH_PT","comment":null,"display_name":"qualified_month_pt"},"CONVERTED_DATE":{"type":"DATE","index":79,"name":"CONVERTED_DATE","comment":null,"display_name":"converted_date"},"CONVERTED_DATE_PT":{"type":"DATE","index":80,"name":"CONVERTED_DATE_PT","comment":null,"display_name":"converted_date_pt"},"CONVERTED_MONTH":{"type":"DATE","index":81,"name":"CONVERTED_MONTH","comment":null,"display_name":"converted_month"},"CONVERTED_MONTH_PT":{"type":"DATE","index":82,"name":"CONVERTED_MONTH_PT","comment":null,"display_name":"converted_month_pt"},"WORKED_DATE":{"type":"DATE","index":83,"name":"WORKED_DATE","comment":null,"display_name":"worked_date"},"WORKED_DATE_PT":{"type":"DATE","index":84,"name":"WORKED_DATE_PT","comment":null,"display_name":"worked_date_pt"},"WORKED_MONTH":{"type":"DATE","index":85,"name":"WORKED_MONTH","comment":null,"display_name":"worked_month"},"WORKED_MONTH_PT":{"type":"DATE","index":86,"name":"WORKED_MONTH_PT","comment":null,"display_name":"worked_month_pt"},"EMAIL_DOMAIN":{"type":"TEXT","index":87,"name":"EMAIL_DOMAIN","comment":null,"display_name":"email_domain"},"EMAIL_DOMAIN_TYPE":{"type":"TEXT","index":88,"name":"EMAIL_DOMAIN_TYPE","comment":null,"display_name":"email_domain_type"},"IS_VALUABLE_SIGNUP":{"type":"BOOLEAN","index":89,"name":"IS_VALUABLE_SIGNUP","comment":null,"display_name":"is_valuable_signup"},"EMAIL_HASH":{"type":"TEXT","index":90,"name":"EMAIL_HASH","comment":null,"display_name":"email_hash"},"STATUS":{"type":"TEXT","index":91,"name":"STATUS","comment":null,"display_name":"status"},"LEAD_SOURCE":{"type":"TEXT","index":92,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"WAS_CONVERTED_LEAD":{"type":"NUMBER","index":93,"name":"WAS_CONVERTED_LEAD","comment":null,"display_name":"was_converted_lead"},"SOURCE_BUCKETS":{"type":"TEXT","index":94,"name":"SOURCE_BUCKETS","comment":null,"display_name":"source_buckets"},"CRM_PARTNER_ID":{"type":"TEXT","index":95,"name":"CRM_PARTNER_ID","comment":null,"display_name":"crm_partner_id"},"PROSPECT_SHARE_STATUS":{"type":"TEXT","index":96,"name":"PROSPECT_SHARE_STATUS","comment":null,"display_name":"prospect_share_status"},"PARTNER_PROSPECT_STATUS":{"type":"TEXT","index":97,"name":"PARTNER_PROSPECT_STATUS","comment":null,"display_name":"partner_prospect_status"},"PARTNER_PROSPECT_OWNER_NAME":{"type":"TEXT","index":98,"name":"PARTNER_PROSPECT_OWNER_NAME","comment":null,"display_name":"partner_prospect_owner_name"},"PARTNER_PROSPECT_ID":{"type":"TEXT","index":99,"name":"PARTNER_PROSPECT_ID","comment":null,"display_name":"partner_prospect_id"},"GA_CLIENT_ID":{"type":"TEXT","index":100,"name":"GA_CLIENT_ID","comment":null,"display_name":"ga_client_id"},"SEQUENCE_STEP_TYPE":{"type":"TEXT","index":101,"name":"SEQUENCE_STEP_TYPE","comment":null,"display_name":"sequence_step_type"},"STATE":{"type":"TEXT","index":102,"name":"STATE","comment":null,"display_name":"state"},"COUNTRY":{"type":"TEXT","index":103,"name":"COUNTRY","comment":null,"display_name":"country"},"NAME_OF_ACTIVE_SEQUENCE":{"type":"TEXT","index":104,"name":"NAME_OF_ACTIVE_SEQUENCE","comment":null,"display_name":"name_of_active_sequence"},"SEQUENCE_TASK_DUE_DATE":{"type":"DATE","index":105,"name":"SEQUENCE_TASK_DUE_DATE","comment":null,"display_name":"sequence_task_due_date"},"SEQUENCE_STATUS":{"type":"TEXT","index":106,"name":"SEQUENCE_STATUS","comment":null,"display_name":"sequence_status"},"LAST_ACTIVITY_DATE":{"type":"DATE","index":107,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"IS_ACTIVELY_BEING_SEQUENCED":{"type":"BOOLEAN","index":108,"name":"IS_ACTIVELY_BEING_SEQUENCED","comment":null,"display_name":"is_actively_being_sequenced"},"BIZIBLE_MARKETING_CHANNEL_PATH_NAME":{"type":"TEXT","index":109,"name":"BIZIBLE_MARKETING_CHANNEL_PATH_NAME","comment":null,"display_name":"bizible_marketing_channel_path_name"},"SALES_SEGMENT_NAME":{"type":"TEXT","index":110,"name":"SALES_SEGMENT_NAME","comment":null,"display_name":"sales_segment_name"},"SALES_SEGMENT_GROUPED":{"type":"TEXT","index":111,"name":"SALES_SEGMENT_GROUPED","comment":null,"display_name":"sales_segment_grouped"},"SDR_SALES_SEGMENT":{"type":"TEXT","index":112,"name":"sdr_sales_segment","comment":null,"description":"Sales segment of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_sales_segment"},"SDR_REGION":{"type":"TEXT","index":113,"name":"sdr_region","comment":null,"description":"Region of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_region"},"PERSON_SCORE":{"type":"FLOAT","index":114,"name":"PERSON_SCORE","comment":null,"display_name":"person_score"},"BEHAVIOR_SCORE":{"type":"FLOAT","index":115,"name":"BEHAVIOR_SCORE","comment":null,"display_name":"behavior_score"},"MARKETO_LAST_INTERESTING_MOMENT":{"type":"TEXT","index":116,"name":"MARKETO_LAST_INTERESTING_MOMENT","comment":null,"display_name":"marketo_last_interesting_moment"},"MARKETO_LAST_INTERESTING_MOMENT_DATE":{"type":"TIMESTAMP_TZ","index":117,"name":"MARKETO_LAST_INTERESTING_MOMENT_DATE","comment":null,"display_name":"marketo_last_interesting_moment_date"},"OUTREACH_STEP_NUMBER":{"type":"FLOAT","index":118,"name":"OUTREACH_STEP_NUMBER","comment":null,"display_name":"outreach_step_number"},"MATCHED_ACCOUNT_OWNER_ROLE":{"type":"TEXT","index":119,"name":"MATCHED_ACCOUNT_OWNER_ROLE","comment":null,"display_name":"matched_account_owner_role"},"MATCHED_ACCOUNT_ACCOUNT_OWNER_NAME":{"type":"TEXT","index":120,"name":"MATCHED_ACCOUNT_ACCOUNT_OWNER_NAME","comment":null,"display_name":"matched_account_account_owner_name"},"MATCHED_ACCOUNT_SDR_ASSIGNED":{"type":"TEXT","index":121,"name":"MATCHED_ACCOUNT_SDR_ASSIGNED","comment":null,"display_name":"matched_account_sdr_assigned"},"MATCHED_ACCOUNT_TYPE":{"type":"TEXT","index":122,"name":"MATCHED_ACCOUNT_TYPE","comment":null,"display_name":"matched_account_type"},"MATCHED_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":123,"name":"MATCHED_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"matched_account_gtm_strategy"},"MATCHED_ACCOUNT_BDR_PROSPECTING_STATUS":{"type":"TEXT","index":124,"name":"MATCHED_ACCOUNT_BDR_PROSPECTING_STATUS","comment":null,"display_name":"matched_account_bdr_prospecting_status"},"IS_FIRST_ORDER_INITIAL_MQL":{"type":"BOOLEAN","index":125,"name":"IS_FIRST_ORDER_INITIAL_MQL","comment":null,"display_name":"is_first_order_initial_mql"},"IS_FIRST_ORDER_MQL":{"type":"BOOLEAN","index":126,"name":"IS_FIRST_ORDER_MQL","comment":null,"display_name":"is_first_order_mql"},"IS_FIRST_ORDER_PERSON":{"type":"BOOLEAN","index":127,"name":"IS_FIRST_ORDER_PERSON","comment":null,"display_name":"is_first_order_person"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT":{"type":"TEXT","index":128,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT","comment":null,"display_name":"account_demographics_sales_segment"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":129,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_GROUPED","comment":null,"display_name":"account_demographics_sales_segment_grouped"},"ACCOUNT_DEMOGRAPHICS_GEO":{"type":"TEXT","index":130,"name":"ACCOUNT_DEMOGRAPHICS_GEO","comment":null,"display_name":"account_demographics_geo"},"ACCOUNT_DEMOGRAPHICS_REGION":{"type":"TEXT","index":131,"name":"ACCOUNT_DEMOGRAPHICS_REGION","comment":null,"display_name":"account_demographics_region"},"ACCOUNT_DEMOGRAPHICS_AREA":{"type":"TEXT","index":132,"name":"ACCOUNT_DEMOGRAPHICS_AREA","comment":null,"display_name":"account_demographics_area"},"ACCOUNT_DEMOGRAPHICS_SEGMENT_REGION_GROUPED":{"type":"TEXT","index":133,"name":"ACCOUNT_DEMOGRAPHICS_SEGMENT_REGION_GROUPED","comment":null,"display_name":"account_demographics_segment_region_grouped"},"ACCOUNT_DEMOGRAPHICS_TERRITORY":{"type":"TEXT","index":134,"name":"ACCOUNT_DEMOGRAPHICS_TERRITORY","comment":null,"display_name":"account_demographics_territory"},"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT":{"type":"FLOAT","index":135,"name":"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT","comment":null,"display_name":"account_demographics_employee_count"},"ACCOUNT_DEMOGRAPHICS_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":136,"name":"ACCOUNT_DEMOGRAPHICS_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"account_demographics_max_family_employee"},"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY":{"type":"TEXT","index":137,"name":"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY","comment":null,"display_name":"account_demographics_upa_country"},"ACCOUNT_DEMOGRAPHICS_UPA_STATE":{"type":"TEXT","index":138,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STATE","comment":null,"display_name":"account_demographics_upa_state"},"ACCOUNT_DEMOGRAPHICS_UPA_CITY":{"type":"TEXT","index":139,"name":"ACCOUNT_DEMOGRAPHICS_UPA_CITY","comment":null,"display_name":"account_demographics_upa_city"},"ACCOUNT_DEMOGRAPHICS_UPA_STREET":{"type":"TEXT","index":140,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STREET","comment":null,"display_name":"account_demographics_upa_street"},"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE":{"type":"TEXT","index":141,"name":"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE","comment":null,"display_name":"account_demographics_upa_postal_code"},"COGNISM_EMPLOYEE_COUNT":{"type":"FLOAT","index":142,"name":"COGNISM_EMPLOYEE_COUNT","comment":null,"display_name":"cognism_employee_count"},"LEANDATA_MATCHED_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":143,"name":"LEANDATA_MATCHED_ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"leandata_matched_account_employee_count"},"LEANDATA_MATCHED_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":144,"name":"LEANDATA_MATCHED_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"leandata_matched_account_sales_segment"},"EMPLOYEE_BUCKET":{"type":"TEXT","index":145,"name":"EMPLOYEE_BUCKET","comment":null,"display_name":"employee_bucket"},"ZOOMINFO_PHONE_NUMBER":{"type":"TEXT","index":146,"name":"ZOOMINFO_PHONE_NUMBER","comment":null,"display_name":"zoominfo_phone_number"},"ZOOMINFO_MOBILE_PHONE_NUMBER":{"type":"TEXT","index":147,"name":"ZOOMINFO_MOBILE_PHONE_NUMBER","comment":null,"display_name":"zoominfo_mobile_phone_number"},"ZOOMINFO_DO_NOT_CALL_DIRECT_PHONE":{"type":"TEXT","index":148,"name":"ZOOMINFO_DO_NOT_CALL_DIRECT_PHONE","comment":null,"display_name":"zoominfo_do_not_call_direct_phone"},"ZOOMINFO_DO_NOT_CALL_MOBILE_PHONE":{"type":"TEXT","index":149,"name":"ZOOMINFO_DO_NOT_CALL_MOBILE_PHONE","comment":null,"display_name":"zoominfo_do_not_call_mobile_phone"},"ZOOMINFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":150,"name":"ZOOMINFO_COMPANY_EMPLOYEE_COUNT","comment":null,"display_name":"zoominfo_company_employee_count"},"LAST_TRANSFER_DATE_TIME":{"type":"TIMESTAMP_TZ","index":151,"name":"LAST_TRANSFER_DATE_TIME","comment":null,"display_name":"last_transfer_date_time"},"TIME_FROM_LAST_TRANSFER_TO_SEQUENCE":{"type":"FLOAT","index":152,"name":"TIME_FROM_LAST_TRANSFER_TO_SEQUENCE","comment":null,"display_name":"time_from_last_transfer_to_sequence"},"TIME_FROM_MQL_TO_LAST_TRANSFER":{"type":"FLOAT","index":153,"name":"TIME_FROM_MQL_TO_LAST_TRANSFER","comment":null,"display_name":"time_from_mql_to_last_transfer"},"ZOOMINFO_CONTACT_ID":{"type":"TEXT","index":154,"name":"ZOOMINFO_CONTACT_ID","comment":null,"display_name":"zoominfo_contact_id"},"IS_MQL":{"type":"NUMBER","index":155,"name":"IS_MQL","comment":null,"display_name":"is_mql"},"IS_INQUIRY":{"type":"NUMBER","index":156,"name":"IS_INQUIRY","comment":null,"display_name":"is_inquiry"},"IS_LEAD_SOURCE_TRIAL":{"type":"BOOLEAN","index":157,"name":"IS_LEAD_SOURCE_TRIAL","comment":null,"display_name":"is_lead_source_trial"},"PERSON_FIRST_COUNTRY":{"type":"TEXT","index":158,"name":"PERSON_FIRST_COUNTRY","comment":null,"display_name":"person_first_country"},"CREATED_BY":{"type":"TEXT","index":159,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":160,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":161,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":162,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":163,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":164,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"bdr_prospecting_status":{"name":"bdr_prospecting_status","description":"Indicates whether the account is actively being prospected by a BDR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bdr_prospecting_status"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:08UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":628655616,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_crm_person","raw_sql":"$20","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.dim_bizible_marketing_channel_path","model.gitlab_snowflake.dim_bizible_marketing_channel_path","model.gitlab_snowflake.dim_sales_segment","model.gitlab_snowflake.dim_sales_segment","model.gitlab_snowflake.fct_crm_person","model.gitlab_snowflake.fct_crm_person","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_marketing","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_marketing","fqn":["gitlab_snowflake","common_mart_marketing","mart_crm_person"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_marketing/mart_crm_person.sql","original_file_path":"models/common_mart_marketing/mart_crm_person.sql","name":"mart_crm_person","alias":"mart_crm_person","checksum":{"name":"sha256","checksum":"1e578a0babaaa54864d865aaae87e2dd2b290c1e8621b8937d22cb6aedb38dee"},"tags":["mnpi_exception"],"refs":[["dim_crm_person"],["dim_crm_person"],["dim_bizible_marketing_channel_path"],["dim_bizible_marketing_channel_path"],["dim_sales_segment"],["dim_sales_segment"],["fct_crm_person"],["fct_crm_person"],["dim_date"],["dim_date"],["dim_crm_user"],["dim_crm_user"]],"sources":[],"metrics":[],"description":"Model with person and MQL business logic.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_marketing/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_marketing/mart_crm_person.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033737.3760557,"compiled_sql":"$21","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_marketing.mart_crm_person","label":"mart_crm_person"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_MARKETING","name":"MART_CRM_TOUCHPOINT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_TOUCHPOINT_ID":{"type":"TEXT","index":1,"name":"dim_crm_touchpoint_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_touchpoint_id"},"TOUCHPOINT_PERSON_CAMPAIGN_DATE_ID":{"type":"TEXT","index":2,"name":"touchpoint_person_campaign_date_id","comment":null,"description":"A concatenation of fields from the mart that can be used to join attribution and person touchpoints together.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"touchpoint_person_campaign_date_id"},"BIZIBLE_TOUCHPOINT_DATE":{"type":"DATE","index":3,"name":"BIZIBLE_TOUCHPOINT_DATE","comment":null,"display_name":"bizible_touchpoint_date"},"BIZIBLE_TOUCHPOINT_DATE_TIME":{"type":"TIMESTAMP_TZ","index":4,"name":"bizible_touchpoint_date_time","comment":null,"description":"The date/time of the bizible touchpoint interaction.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_touchpoint_date_time"},"BIZIBLE_TOUCHPOINT_MONTH":{"type":"TIMESTAMP_TZ","index":5,"name":"BIZIBLE_TOUCHPOINT_MONTH","comment":null,"display_name":"bizible_touchpoint_month"},"BIZIBLE_TOUCHPOINT_POSITION":{"type":"TEXT","index":6,"name":"BIZIBLE_TOUCHPOINT_POSITION","comment":null,"display_name":"bizible_touchpoint_position"},"BIZIBLE_TOUCHPOINT_SOURCE":{"type":"TEXT","index":7,"name":"BIZIBLE_TOUCHPOINT_SOURCE","comment":null,"display_name":"bizible_touchpoint_source"},"BIZIBLE_TOUCHPOINT_SOURCE_TYPE":{"type":"TEXT","index":8,"name":"BIZIBLE_TOUCHPOINT_SOURCE_TYPE","comment":null,"display_name":"bizible_touchpoint_source_type"},"BIZIBLE_TOUCHPOINT_TYPE":{"type":"TEXT","index":9,"name":"BIZIBLE_TOUCHPOINT_TYPE","comment":null,"display_name":"bizible_touchpoint_type"},"BIZIBLE_AD_CAMPAIGN_NAME":{"type":"TEXT","index":10,"name":"BIZIBLE_AD_CAMPAIGN_NAME","comment":null,"display_name":"bizible_ad_campaign_name"},"BIZIBLE_AD_CONTENT":{"type":"TEXT","index":11,"name":"BIZIBLE_AD_CONTENT","comment":null,"display_name":"bizible_ad_content"},"BIZIBLE_AD_GROUP_NAME":{"type":"TEXT","index":12,"name":"BIZIBLE_AD_GROUP_NAME","comment":null,"display_name":"bizible_ad_group_name"},"BIZIBLE_FORM_URL":{"type":"TEXT","index":13,"name":"BIZIBLE_FORM_URL","comment":null,"display_name":"bizible_form_url"},"BIZIBLE_FORM_URL_RAW":{"type":"TEXT","index":14,"name":"BIZIBLE_FORM_URL_RAW","comment":null,"display_name":"bizible_form_url_raw"},"BIZIBLE_LANDING_PAGE":{"type":"TEXT","index":15,"name":"BIZIBLE_LANDING_PAGE","comment":null,"display_name":"bizible_landing_page"},"BIZIBLE_LANDING_PAGE_RAW":{"type":"TEXT","index":16,"name":"BIZIBLE_LANDING_PAGE_RAW","comment":null,"display_name":"bizible_landing_page_raw"},"BIZIBLE_MARKETING_CHANNEL":{"type":"TEXT","index":17,"name":"BIZIBLE_MARKETING_CHANNEL","comment":null,"display_name":"bizible_marketing_channel"},"BIZIBLE_MARKETING_CHANNEL_PATH":{"type":"TEXT","index":18,"name":"BIZIBLE_MARKETING_CHANNEL_PATH","comment":null,"display_name":"bizible_marketing_channel_path"},"BIZIBLE_MEDIUM":{"type":"TEXT","index":19,"name":"BIZIBLE_MEDIUM","comment":null,"display_name":"bizible_medium"},"BIZIBLE_REFERRER_PAGE":{"type":"TEXT","index":20,"name":"BIZIBLE_REFERRER_PAGE","comment":null,"display_name":"bizible_referrer_page"},"BIZIBLE_REFERRER_PAGE_RAW":{"type":"TEXT","index":21,"name":"BIZIBLE_REFERRER_PAGE_RAW","comment":null,"display_name":"bizible_referrer_page_raw"},"BIZIBLE_FORM_PAGE_UTM_CONTENT":{"type":"TEXT","index":22,"name":"bizible_form_page_utm_content","comment":null,"description":"The `utm_content` parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_content"},"BIZIBLE_FORM_PAGE_UTM_BUDGET":{"type":"TEXT","index":23,"name":"bizible_form_page_utm_budget","comment":null,"description":"The `utm_budget` parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_budget"},"BIZIBLE_FORM_PAGE_UTM_ALLPTNR":{"type":"TEXT","index":24,"name":"bizible_form_page_utm_allptnr","comment":null,"description":"The `utm_allptnr` (alliance/partner) parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_allptnr"},"BIZIBLE_FORM_PAGE_UTM_PARTNERID":{"type":"TEXT","index":25,"name":"bizible_form_page_utm_partnerid","comment":null,"description":"The `utm_partnerid` parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_partnerid"},"BIZIBLE_LANDING_PAGE_UTM_CONTENT":{"type":"TEXT","index":26,"name":"bizible_landing_page_utm_content","comment":null,"description":"The `utm_content` parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_content"},"BIZIBLE_LANDING_PAGE_UTM_BUDGET":{"type":"TEXT","index":27,"name":"bizible_landing_page_utm_budget","comment":null,"description":"The `utm_budget` parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_budget"},"BIZIBLE_LANDING_PAGE_UTM_ALLPTNR":{"type":"TEXT","index":28,"name":"bizible_landing_page_utm_allptnr","comment":null,"description":"The `utm_allptnr` (alliance/partner) parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_allptnr"},"BIZIBLE_LANDING_PAGE_UTM_PARTNERID":{"type":"TEXT","index":29,"name":"bizible_landing_page_utm_partnerid","comment":null,"description":"The `utm_partnerid` parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_partnerid"},"BIZIBLE_SALESFORCE_CAMPAIGN":{"type":"TEXT","index":30,"name":"BIZIBLE_SALESFORCE_CAMPAIGN","comment":null,"display_name":"bizible_salesforce_campaign"},"BIZIBLE_INTEGRATED_CAMPAIGN_GROUPING":{"type":"TEXT","index":31,"name":"BIZIBLE_INTEGRATED_CAMPAIGN_GROUPING","comment":null,"display_name":"bizible_integrated_campaign_grouping"},"TOUCHPOINT_SEGMENT":{"type":"TEXT","index":32,"name":"TOUCHPOINT_SEGMENT","comment":null,"display_name":"touchpoint_segment"},"GTM_MOTION":{"type":"TEXT","index":33,"name":"GTM_MOTION","comment":null,"display_name":"gtm_motion"},"INTEGRATED_CAMPAIGN_GROUPING":{"type":"TEXT","index":34,"name":"INTEGRATED_CAMPAIGN_GROUPING","comment":null,"display_name":"integrated_campaign_grouping"},"PIPE_NAME":{"type":"TEXT","index":35,"name":"PIPE_NAME","comment":null,"display_name":"pipe_name"},"IS_DG_INFLUENCED":{"type":"NUMBER","index":36,"name":"is_dg_influenced","comment":null,"description":"Flag indicating a touchpoint is influenced by Demand Gen based on its segment being Demand Gen.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_dg_influenced"},"IS_DG_SOURCED":{"type":"NUMBER","index":37,"name":"is_dg_sourced","comment":null,"description":"Flag indicating a touchpoint is sourced from Demand Gen based on its segment being Demand Gen as well as its position being first touch.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_dg_sourced"},"BIZIBLE_COUNT_FIRST_TOUCH":{"type":"FLOAT","index":38,"name":"BIZIBLE_COUNT_FIRST_TOUCH","comment":null,"display_name":"bizible_count_first_touch"},"BIZIBLE_COUNT_LEAD_CREATION_TOUCH":{"type":"FLOAT","index":39,"name":"BIZIBLE_COUNT_LEAD_CREATION_TOUCH","comment":null,"display_name":"bizible_count_lead_creation_touch"},"BIZIBLE_COUNT_U_SHAPED":{"type":"FLOAT","index":40,"name":"BIZIBLE_COUNT_U_SHAPED","comment":null,"display_name":"bizible_count_u_shaped"},"BIZIBLE_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":41,"name":"BIZIBLE_CREATED_DATE","comment":null,"display_name":"bizible_created_date"},"DIM_CRM_PERSON_ID":{"type":"TEXT","index":42,"name":"DIM_CRM_PERSON_ID","comment":null,"display_name":"dim_crm_person_id"},"SFDC_RECORD_ID":{"type":"TEXT","index":43,"name":"SFDC_RECORD_ID","comment":null,"display_name":"sfdc_record_id"},"SFDC_RECORD_TYPE":{"type":"TEXT","index":44,"name":"SFDC_RECORD_TYPE","comment":null,"display_name":"sfdc_record_type"},"MARKETO_LEAD_ID":{"type":"FLOAT","index":45,"name":"MARKETO_LEAD_ID","comment":null,"display_name":"marketo_lead_id"},"EMAIL_HASH":{"type":"TEXT","index":46,"name":"EMAIL_HASH","comment":null,"display_name":"email_hash"},"EMAIL_DOMAIN":{"type":"TEXT","index":47,"name":"EMAIL_DOMAIN","comment":null,"display_name":"email_domain"},"OWNER_ID":{"type":"TEXT","index":48,"name":"OWNER_ID","comment":null,"display_name":"owner_id"},"PERSON_SCORE":{"type":"FLOAT","index":49,"name":"PERSON_SCORE","comment":null,"display_name":"person_score"},"CRM_PERSON_TITLE":{"type":"TEXT","index":50,"name":"CRM_PERSON_TITLE","comment":null,"display_name":"crm_person_title"},"CRM_PERSON_COUNTRY":{"type":"TEXT","index":51,"name":"CRM_PERSON_COUNTRY","comment":null,"display_name":"crm_person_country"},"CRM_PERSON_STATE":{"type":"TEXT","index":52,"name":"CRM_PERSON_STATE","comment":null,"display_name":"crm_person_state"},"CRM_PERSON_STATUS":{"type":"TEXT","index":53,"name":"CRM_PERSON_STATUS","comment":null,"display_name":"crm_person_status"},"LEAD_SOURCE":{"type":"TEXT","index":54,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"LEAD_SOURCE_TYPE":{"type":"TEXT","index":55,"name":"LEAD_SOURCE_TYPE","comment":null,"display_name":"lead_source_type"},"SOURCE_BUCKETS":{"type":"TEXT","index":56,"name":"SOURCE_BUCKETS","comment":null,"display_name":"source_buckets"},"NET_NEW_SOURCE_CATEGORIES":{"type":"TEXT","index":57,"name":"NET_NEW_SOURCE_CATEGORIES","comment":null,"display_name":"net_new_source_categories"},"CRM_PARTNER_ID":{"type":"TEXT","index":58,"name":"CRM_PARTNER_ID","comment":null,"display_name":"crm_partner_id"},"CRM_PERSON_CREATED_DATE":{"type":"DATE","index":59,"name":"CRM_PERSON_CREATED_DATE","comment":null,"display_name":"crm_person_created_date"},"INQUIRY_DATE":{"type":"DATE","index":60,"name":"INQUIRY_DATE","comment":null,"display_name":"inquiry_date"},"MQL_DATE_FIRST":{"type":"DATE","index":61,"name":"MQL_DATE_FIRST","comment":null,"display_name":"mql_date_first"},"MQL_DATE_LATEST":{"type":"DATE","index":62,"name":"MQL_DATE_LATEST","comment":null,"display_name":"mql_date_latest"},"LEGACY_MQL_DATE_FIRST":{"type":"DATE","index":63,"name":"LEGACY_MQL_DATE_FIRST","comment":null,"display_name":"legacy_mql_date_first"},"LEGACY_MQL_DATE_LATEST":{"type":"DATE","index":64,"name":"LEGACY_MQL_DATE_LATEST","comment":null,"display_name":"legacy_mql_date_latest"},"ACCEPTED_DATE":{"type":"DATE","index":65,"name":"ACCEPTED_DATE","comment":null,"display_name":"accepted_date"},"QUALIFYING_DATE":{"type":"DATE","index":66,"name":"QUALIFYING_DATE","comment":null,"display_name":"qualifying_date"},"QUALIFIED_DATE":{"type":"DATE","index":67,"name":"QUALIFIED_DATE","comment":null,"display_name":"qualified_date"},"CONVERTED_DATE":{"type":"DATE","index":68,"name":"CONVERTED_DATE","comment":null,"display_name":"converted_date"},"IS_MQL":{"type":"NUMBER","index":69,"name":"IS_MQL","comment":null,"display_name":"is_mql"},"IS_INQUIRY":{"type":"NUMBER","index":70,"name":"IS_INQUIRY","comment":null,"display_name":"is_inquiry"},"MQL_COUNT":{"type":"NUMBER","index":71,"name":"MQL_COUNT","comment":null,"display_name":"mql_count"},"LAST_UTM_CONTENT":{"type":"TEXT","index":72,"name":"LAST_UTM_CONTENT","comment":null,"display_name":"last_utm_content"},"LAST_UTM_CAMPAIGN":{"type":"TEXT","index":73,"name":"LAST_UTM_CAMPAIGN","comment":null,"display_name":"last_utm_campaign"},"TRUE_INQUIRY_DATE":{"type":"DATE","index":74,"name":"TRUE_INQUIRY_DATE","comment":null,"display_name":"true_inquiry_date"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT":{"type":"TEXT","index":75,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT","comment":null,"display_name":"account_demographics_sales_segment"},"ACCOUNT_DEMOGRAPHICS_GEO":{"type":"TEXT","index":76,"name":"ACCOUNT_DEMOGRAPHICS_GEO","comment":null,"display_name":"account_demographics_geo"},"ACCOUNT_DEMOGRAPHICS_REGION":{"type":"TEXT","index":77,"name":"ACCOUNT_DEMOGRAPHICS_REGION","comment":null,"display_name":"account_demographics_region"},"ACCOUNT_DEMOGRAPHICS_AREA":{"type":"TEXT","index":78,"name":"ACCOUNT_DEMOGRAPHICS_AREA","comment":null,"display_name":"account_demographics_area"},"DIM_CAMPAIGN_ID":{"type":"TEXT","index":79,"name":"DIM_CAMPAIGN_ID","comment":null,"display_name":"dim_campaign_id"},"CAMPAIGN_NAME":{"type":"TEXT","index":80,"name":"CAMPAIGN_NAME","comment":null,"display_name":"campaign_name"},"CAMPAGIN_IS_ACTIVE":{"type":"BOOLEAN","index":81,"name":"CAMPAGIN_IS_ACTIVE","comment":null,"display_name":"campagin_is_active"},"CAMPAIGN_STATUS":{"type":"TEXT","index":82,"name":"CAMPAIGN_STATUS","comment":null,"display_name":"campaign_status"},"TYPE":{"type":"TEXT","index":83,"name":"TYPE","comment":null,"display_name":"type"},"DESCRIPTION":{"type":"TEXT","index":84,"name":"DESCRIPTION","comment":null,"display_name":"description"},"BUDGET_HOLDER":{"type":"TEXT","index":85,"name":"BUDGET_HOLDER","comment":null,"display_name":"budget_holder"},"BIZIBLE_TOUCHPOINT_ENABLED_SETTING":{"type":"TEXT","index":86,"name":"BIZIBLE_TOUCHPOINT_ENABLED_SETTING","comment":null,"display_name":"bizible_touchpoint_enabled_setting"},"STRATEGIC_MARKETING_CONTRIBUTION":{"type":"TEXT","index":87,"name":"STRATEGIC_MARKETING_CONTRIBUTION","comment":null,"display_name":"strategic_marketing_contribution"},"LARGE_BUCKET":{"type":"TEXT","index":88,"name":"LARGE_BUCKET","comment":null,"display_name":"large_bucket"},"REPORTING_TYPE":{"type":"TEXT","index":89,"name":"REPORTING_TYPE","comment":null,"display_name":"reporting_type"},"ALLOCADIA_ID":{"type":"TEXT","index":90,"name":"ALLOCADIA_ID","comment":null,"display_name":"allocadia_id"},"IS_A_CHANNEL_PARTNER_INVOLVED":{"type":"TEXT","index":91,"name":"IS_A_CHANNEL_PARTNER_INVOLVED","comment":null,"display_name":"is_a_channel_partner_involved"},"IS_AN_ALLIANCE_PARTNER_INVOLVED":{"type":"TEXT","index":92,"name":"IS_AN_ALLIANCE_PARTNER_INVOLVED","comment":null,"display_name":"is_an_alliance_partner_involved"},"IS_THIS_AN_IN_PERSON_EVENT":{"type":"TEXT","index":93,"name":"IS_THIS_AN_IN_PERSON_EVENT","comment":null,"display_name":"is_this_an_in_person_event"},"WILL_THERE_BE_MDF_FUNDING":{"type":"TEXT","index":94,"name":"WILL_THERE_BE_MDF_FUNDING","comment":null,"display_name":"will_there_be_mdf_funding"},"ALLIANCE_PARTNER_NAME":{"type":"TEXT","index":95,"name":"ALLIANCE_PARTNER_NAME","comment":null,"display_name":"alliance_partner_name"},"CHANNEL_PARTNER_NAME":{"type":"TEXT","index":96,"name":"CHANNEL_PARTNER_NAME","comment":null,"display_name":"channel_partner_name"},"SALES_PLAY":{"type":"TEXT","index":97,"name":"SALES_PLAY","comment":null,"display_name":"sales_play"},"TOTAL_PLANNED_MQLS":{"type":"FLOAT","index":98,"name":"TOTAL_PLANNED_MQLS","comment":null,"display_name":"total_planned_mqls"},"DIM_PARENT_CAMPAIGN_ID":{"type":"TEXT","index":99,"name":"DIM_PARENT_CAMPAIGN_ID","comment":null,"display_name":"dim_parent_campaign_id"},"CAMPAIGN_OWNER_ID":{"type":"TEXT","index":100,"name":"CAMPAIGN_OWNER_ID","comment":null,"display_name":"campaign_owner_id"},"CAMPAIGN_CREATED_BY_ID":{"type":"TEXT","index":101,"name":"CAMPAIGN_CREATED_BY_ID","comment":null,"display_name":"campaign_created_by_id"},"CAMAPAIGN_START_DATE":{"type":"TIMESTAMP_TZ","index":102,"name":"CAMAPAIGN_START_DATE","comment":null,"display_name":"camapaign_start_date"},"CAMPAIGN_END_DATE":{"type":"TIMESTAMP_TZ","index":103,"name":"CAMPAIGN_END_DATE","comment":null,"display_name":"campaign_end_date"},"CAMPAIGN_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":104,"name":"CAMPAIGN_CREATED_DATE","comment":null,"display_name":"campaign_created_date"},"CAMPAIGN_LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":105,"name":"CAMPAIGN_LAST_MODIFIED_DATE","comment":null,"display_name":"campaign_last_modified_date"},"CAMPAIGN_LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":106,"name":"CAMPAIGN_LAST_ACTIVITY_DATE","comment":null,"display_name":"campaign_last_activity_date"},"CAMPAIGN_REGION":{"type":"TEXT","index":107,"name":"CAMPAIGN_REGION","comment":null,"display_name":"campaign_region"},"CAMPAIGN_SUB_REGION":{"type":"TEXT","index":108,"name":"CAMPAIGN_SUB_REGION","comment":null,"display_name":"campaign_sub_region"},"BUDGETED_COST":{"type":"FLOAT","index":109,"name":"BUDGETED_COST","comment":null,"display_name":"budgeted_cost"},"EXPECTED_RESPONSE":{"type":"FLOAT","index":110,"name":"EXPECTED_RESPONSE","comment":null,"display_name":"expected_response"},"EXPECTED_REVENUE":{"type":"FLOAT","index":111,"name":"EXPECTED_REVENUE","comment":null,"display_name":"expected_revenue"},"ACTUAL_COST":{"type":"FLOAT","index":112,"name":"ACTUAL_COST","comment":null,"display_name":"actual_cost"},"AMOUNT_ALL_OPPORTUNITIES":{"type":"FLOAT","index":113,"name":"AMOUNT_ALL_OPPORTUNITIES","comment":null,"display_name":"amount_all_opportunities"},"AMOUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":114,"name":"AMOUNT_WON_OPPORTUNITIES","comment":null,"display_name":"amount_won_opportunities"},"COUNT_CONTACTS":{"type":"NUMBER","index":115,"name":"COUNT_CONTACTS","comment":null,"display_name":"count_contacts"},"COUNT_CONVERTED_LEADS":{"type":"NUMBER","index":116,"name":"COUNT_CONVERTED_LEADS","comment":null,"display_name":"count_converted_leads"},"COUNT_LEADS":{"type":"NUMBER","index":117,"name":"COUNT_LEADS","comment":null,"display_name":"count_leads"},"COUNT_OPPORTUNITIES":{"type":"NUMBER","index":118,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_RESPONSES":{"type":"NUMBER","index":119,"name":"COUNT_RESPONSES","comment":null,"display_name":"count_responses"},"COUNT_WON_OPPORTUNITIES":{"type":"NUMBER","index":120,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_SENT":{"type":"FLOAT","index":121,"name":"COUNT_SENT","comment":null,"display_name":"count_sent"},"REP_NAME":{"type":"TEXT","index":122,"name":"REP_NAME","comment":null,"display_name":"rep_name"},"REP_TITLE":{"type":"TEXT","index":123,"name":"REP_TITLE","comment":null,"display_name":"rep_title"},"TEAM":{"type":"TEXT","index":124,"name":"TEAM","comment":null,"display_name":"team"},"REP_IS_ACTIVE":{"type":"BOOLEAN","index":125,"name":"REP_IS_ACTIVE","comment":null,"display_name":"rep_is_active"},"USER_ROLE_NAME":{"type":"TEXT","index":126,"name":"USER_ROLE_NAME","comment":null,"display_name":"user_role_name"},"TOUCHPOINT_CRM_USER_SEGMENT_NAME_LIVE":{"type":"TEXT","index":127,"name":"TOUCHPOINT_CRM_USER_SEGMENT_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_segment_name_live"},"TOUCHPOINT_CRM_USER_GEO_NAME_LIVE":{"type":"TEXT","index":128,"name":"TOUCHPOINT_CRM_USER_GEO_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_geo_name_live"},"TOUCHPOINT_CRM_USER_REGION_NAME_LIVE":{"type":"TEXT","index":129,"name":"TOUCHPOINT_CRM_USER_REGION_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_region_name_live"},"TOUCHPOINT_CRM_USER_AREA_NAME_LIVE":{"type":"TEXT","index":130,"name":"TOUCHPOINT_CRM_USER_AREA_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_area_name_live"},"SDR_SALES_SEGMENT":{"type":"TEXT","index":131,"name":"sdr_sales_segment","comment":null,"description":"Sales segment of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_sales_segment"},"SDR_REGION":{"type":"TEXT","index":132,"name":"sdr_region","comment":null,"description":"Region of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_region"},"CAMPAIGN_REP_NAME":{"type":"TEXT","index":133,"name":"CAMPAIGN_REP_NAME","comment":null,"display_name":"campaign_rep_name"},"CAMPAIGN_REP_TITLE":{"type":"TEXT","index":134,"name":"CAMPAIGN_REP_TITLE","comment":null,"display_name":"campaign_rep_title"},"CAMPAIGN_REP_TEAM":{"type":"TEXT","index":135,"name":"CAMPAIGN_REP_TEAM","comment":null,"display_name":"campaign_rep_team"},"CAMPAIGN_REP_IS_ACTIVE":{"type":"BOOLEAN","index":136,"name":"CAMPAIGN_REP_IS_ACTIVE","comment":null,"display_name":"campaign_rep_is_active"},"CAMPAIGN_REP_ROLE_NAME":{"type":"TEXT","index":137,"name":"CAMPAIGN_REP_ROLE_NAME","comment":null,"display_name":"campaign_rep_role_name"},"CAMPAIGN_CRM_USER_SEGMENT_NAME_LIVE":{"type":"TEXT","index":138,"name":"CAMPAIGN_CRM_USER_SEGMENT_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_segment_name_live"},"CAMPAIGN_CRM_USER_GEO_NAME_LIVE":{"type":"TEXT","index":139,"name":"CAMPAIGN_CRM_USER_GEO_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_geo_name_live"},"CAMPAIGN_CRM_USER_REGION_NAME_LIVE":{"type":"TEXT","index":140,"name":"CAMPAIGN_CRM_USER_REGION_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_region_name_live"},"CAMPAIGN_CRM_USER_AREA_NAME_LIVE":{"type":"TEXT","index":141,"name":"CAMPAIGN_CRM_USER_AREA_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_area_name_live"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":142,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":143,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":144,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":145,"name":"CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"crm_account_industry"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":146,"name":"CRM_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"crm_account_gtm_strategy"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":147,"name":"CRM_ACCOUNT_FOCUS_ACCOUNT","comment":null,"display_name":"crm_account_focus_account"},"HEALTH_NUMBER":{"type":"FLOAT","index":148,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":149,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":150,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":151,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":152,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":153,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":154,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":155,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":156,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":157,"name":"CRM_ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"crm_account_owner_user_segment"},"RECORD_TYPE_ID":{"type":"TEXT","index":158,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":159,"name":"GITLAB_COM_USER","comment":null,"display_name":"gitlab_com_user"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":160,"name":"CRM_ACCOUNT_TYPE","comment":null,"display_name":"crm_account_type"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":161,"name":"TECHNICAL_ACCOUNT_MANAGER","comment":null,"display_name":"technical_account_manager"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":162,"name":"MERGED_TO_ACCOUNT_ID","comment":null,"display_name":"merged_to_account_id"},"IS_RESELLER":{"type":"BOOLEAN","index":163,"name":"IS_RESELLER","comment":null,"display_name":"is_reseller"},"IS_FMM_INFLUENCED":{"type":"NUMBER","index":164,"name":"IS_FMM_INFLUENCED","comment":null,"display_name":"is_fmm_influenced"},"IS_FMM_SOURCED":{"type":"NUMBER","index":165,"name":"IS_FMM_SOURCED","comment":null,"display_name":"is_fmm_sourced"},"COUNT_INQUIRY":{"type":"NUMBER","index":166,"name":"count_inquiry","comment":null,"description":"Count of touchpoints associated with the creation of a lead based on their position.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_inquiry"},"COUNT_TRUE_INQUIRY":{"type":"NUMBER","index":167,"name":"count_true_inquiry","comment":null,"description":"Count of touchpoints that occured on or before the `true_inquiry_date`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_true_inquiry"},"COUNT_MQL":{"type":"NUMBER","index":168,"name":"count_mql","comment":null,"description":"Count of touchpoints that occured on or before the`mql_date`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_mql"},"COUNT_NET_NEW_MQL":{"type":"FLOAT","index":169,"name":"count_net_new_mql","comment":null,"description":"Count of touchpoints that occured on or before the `mql_date` that are also Lead Created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_net_new_mql"},"COUNT_ACCEPTED":{"type":"NUMBER","index":170,"name":"COUNT_ACCEPTED","comment":null,"display_name":"count_accepted"},"COUNT_NET_NEW_ACCEPTED":{"type":"FLOAT","index":171,"name":"count_net_new_accepted","comment":null,"description":"Count of touchpoints that occured on or before the `accepted_date` that are also Lead Created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_net_new_accepted"},"MQL_CRM_PERSON_ID":{"type":"TEXT","index":172,"name":"MQL_CRM_PERSON_ID","comment":null,"display_name":"mql_crm_person_id"},"PRE_MQL_WEIGHT":{"type":"NUMBER","index":173,"name":"PRE_MQL_WEIGHT","comment":null,"display_name":"pre_mql_weight"},"CREATED_BY":{"type":"TEXT","index":174,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":175,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":176,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":177,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":178,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":179,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:10UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":379279872,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_crm_touchpoint","raw_sql":"$22","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_crm_touchpoint","model.gitlab_snowflake.dim_crm_touchpoint","model.gitlab_snowflake.fct_crm_touchpoint","model.gitlab_snowflake.fct_crm_touchpoint","model.gitlab_snowflake.dim_campaign","model.gitlab_snowflake.dim_campaign","model.gitlab_snowflake.fct_campaign","model.gitlab_snowflake.fct_campaign","model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.fct_crm_person","model.gitlab_snowflake.fct_crm_person","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_marketing","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_marketing","fqn":["gitlab_snowflake","common_mart_marketing","mart_crm_touchpoint"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_marketing/mart_crm_touchpoint.sql","original_file_path":"models/common_mart_marketing/mart_crm_touchpoint.sql","name":"mart_crm_touchpoint","alias":"mart_crm_touchpoint","checksum":{"name":"sha256","checksum":"9ba6436f61f06e44fd04bdf426bdf6420222169416cf7016dbc6d5b353c20329"},"tags":["mnpi_exception"],"refs":[["dim_crm_touchpoint"],["dim_crm_touchpoint"],["fct_crm_touchpoint"],["fct_crm_touchpoint"],["dim_campaign"],["dim_campaign"],["fct_campaign"],["fct_campaign"],["dim_crm_person"],["dim_crm_person"],["fct_crm_person"],["fct_crm_person"],["dim_crm_account"],["dim_crm_account"],["dim_crm_user"],["dim_crm_user"]],"sources":[],"metrics":[],"description":"Model containing Bizible touchpoints (non-attribution) along with contact, lead, account, and campaign details.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_marketing/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_marketing/mart_crm_touchpoint.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033737.370627,"compiled_sql":"$23","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_marketing.mart_crm_touchpoint","label":"mart_crm_touchpoint"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_FINANCE","name":"MART_AVAILABLE_TO_RENEW","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"PRIMARY_KEY":{"type":"TEXT","index":1,"name":"primary_key","comment":null,"description":"Composite key for the model combining the unique identifier of the charge as well as the month the charge is effective in the term.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"primary_key"},"FISCAL_YEAR":{"type":"NUMBER","index":2,"name":"fiscal_year","comment":null,"description":"Fiscal year when the subscription will be available to renew.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"fiscal_year"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":3,"name":"fiscal_quarter_name_fy","comment":null,"description":"Fiscal quarter when the subscription will be available to renew.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name_fy"},"CLOSE_MONTH":{"type":"DATE","index":4,"name":"close_month","comment":null,"description":"Month when the opportunity associated with the subscription closed based on its `close_date`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"close_month"},"DIM_CHARGE_ID":{"type":"TEXT","index":5,"name":"dim_charge_id","comment":null,"description":"Unique identifier of a rate plan charge associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_charge_id"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":6,"name":"dim_crm_opportunity_id","comment":null,"description":"Unique identifier of the crm opportunity associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":7,"name":"dim_crm_account_id","comment":null,"description":"Unique identifier of the crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":8,"name":"dim_billing_account_id","comment":null,"description":"Unique identifier of the billing account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":9,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a subscription.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":10,"name":"dim_product_detail_id","comment":null,"description":"Unique identifier of a product rate plan charge associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_detail_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":11,"name":"subscription_name","comment":null,"description":"Name applied to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_name"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":12,"name":"subscription_start_month","comment":null,"description":"Month when the subscription is set to begin.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":13,"name":"subscription_end_month","comment":null,"description":"Month when the subscription is set to end.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_month"},"TERM_START_MONTH":{"type":"DATE","index":14,"name":"term_start_month","comment":null,"description":"Month when a subscription term begins.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"term_start_month"},"RENEWAL_MONTH":{"type":"DATE","index":15,"name":"renewal_month","comment":null,"description":"Month when a subscription term ends.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"renewal_month"},"BOOKINGS_TERM_END_MONTH":{"type":"DATE","index":16,"name":"bookings_term_end_month","comment":null,"description":"Similar to the term end month but calculates intermediate term end months for multi year subscriptions with terms greater than 12 months. These end months do not exist in the Zuora billing system. This allows us to get a view of all subscriptions renewing on a yearly basis.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bookings_term_end_month"},"MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH":{"type":"DATE","index":17,"name":"MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH","comment":null,"display_name":"multi_year_booking_subscription_end_month"},"LAST_PAID_MONTH_IN_TERM":{"type":"DATE","index":18,"name":"last_paid_month_in_term","comment":null,"description":"Last month charge is applied for a charge's term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_paid_month_in_term"},"CURRENT_TERM":{"type":"NUMBER","index":19,"name":"current_term","comment":null,"description":"Duration of the subscription's current term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_term"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME":{"type":"TEXT","index":20,"name":"zuora_renewal_subscription_name","comment":null,"description":"Name of a renewal subscription associated with the current subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name"},"RENEWAL_SUBSCRIPTION_END_MONTH":{"type":"DATE","index":21,"name":"renewal_subscription_end_month","comment":null,"description":"End month of the renewal subscription associated with the current subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_subscription_end_month"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":22,"name":"parent_crm_account_name","comment":null,"description":"Name of the ultimate parent crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_name"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":23,"name":"crm_account_name","comment":null,"description":"Name of the crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":24,"name":"parent_crm_account_sales_segment","comment":null,"description":"Segment of the ultimate parent crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment"},"DIM_CRM_USER_ID":{"type":"TEXT","index":25,"name":"dim_crm_user_id","comment":null,"description":"Unique identifier of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_user_id"},"USER_NAME":{"type":"TEXT","index":26,"name":"user_name","comment":null,"description":"Name of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_name"},"USER_ROLE_ID":{"type":"TEXT","index":27,"name":"user_role_id","comment":null,"description":"Unique identifier of the role of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_role_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":28,"name":"crm_user_sales_segment","comment":null,"description":"Segment of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_sales_segment"},"CRM_USER_GEO":{"type":"TEXT","index":29,"name":"crm_user_geo","comment":null,"description":"Geo of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_geo"},"CRM_USER_REGION":{"type":"TEXT","index":30,"name":"crm_user_region","comment":null,"description":"Region of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_region"},"CRM_USER_AREA":{"type":"TEXT","index":31,"name":"crm_user_area","comment":null,"description":"Area of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_area"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":32,"name":"product_tier_name","comment":null,"description":"Tier of the product on the charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":33,"name":"product_delivery_type","comment":null,"description":"Delivery type of the product on the charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_delivery_type"},"RENEWAL_TYPE":{"type":"TEXT","index":34,"name":"renewal_type","comment":null,"description":"Type of renewal (multi-year_booking or not)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_type"},"IS_MULTI_YEAR_BOOKING":{"type":"BOOLEAN","index":35,"name":"is_multi_year_booking","comment":null,"description":"Flag indicating if a subscription is multi-year or not.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_multi_year_booking"},"IS_MULTI_YEAR_BOOKING_WITH_MULTI_SUBS":{"type":"BOOLEAN","index":36,"name":"is_multi_year_booking_with_multi_subs","comment":null,"description":"Flag indicating if a subscription is multi-year with multiple associated subscriptions.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_multi_year_booking_with_multi_subs"},"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION":{"type":"BOOLEAN","index":37,"name":"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION","comment":null,"display_name":"is_single_fiscal_year_term_subscription"},"SUBSCRIPTION_TERM":{"type":"NUMBER","index":38,"name":"subscription_term","comment":null,"description":"Current term of the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_term"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":39,"name":"estimated_total_future_billings","comment":null,"description":"Estimate of total amount to be billed in the future for a given charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"estimated_total_future_billings"},"IS_AVAILABLE_TO_RENEW":{"type":"BOOLEAN","index":40,"name":"is_available_to_renew","comment":null,"description":"Flag indicating if the subscription is available to renew in the period.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_available_to_renew"},"OPPORTUNITY_TERM_GROUP":{"type":"TEXT","index":41,"name":"opportunity_term_group","comment":null,"description":"Duration of the opportunity in years based on the opportunity's term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opportunity_term_group"},"ARR":{"type":"FLOAT","index":42,"name":"arr","comment":null,"description":"Annual recurring revenue associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr"},"CREATED_BY":{"type":"TEXT","index":43,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":44,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":45,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":46,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":47,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":48,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"first_day_of_fiscal_quarter":{"name":"first_day_of_fiscal_quarter","description":"Calendar date of first day of fiscal quarter.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_quarter"},"multi-year_booking_subscription_end_month":{"name":"multi-year_booking_subscription_end_month","description":"Month when the final subscription in a multi-year booking is set to end.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"multi-year_booking_subscription_end_month"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:28UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":20987904,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_available_to_renew","raw_sql":"$24","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.get_column_values","macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model","macro.dbt_utils.group_by","macro.dbt_utils.surrogate_key"],"nodes":["model.gitlab_snowflake.prep_renewal_fiscal_years","model.gitlab_snowflake.prep_renewal_fiscal_years","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_amendment"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_finance","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_finance","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","mart_available_to_renew"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_finance/restricted_safe/mart_available_to_renew.sql","original_file_path":"models/common_mart_finance/restricted_safe/mart_available_to_renew.sql","name":"mart_available_to_renew","alias":"mart_available_to_renew","checksum":{"name":"sha256","checksum":"6dd3908c5a38f46b542960aa77253c796b50b8d99fe83b3dbef14b665bc77461"},"tags":["safe"],"refs":[["prep_renewal_fiscal_years"],["prep_renewal_fiscal_years"],["dim_date"],["dim_date"],["dim_crm_account"],["dim_crm_account"],["dim_crm_user"],["dim_crm_user"],["dim_subscription"],["dim_subscription"],["dim_crm_opportunity"],["dim_crm_opportunity"],["fct_crm_opportunity"],["fct_crm_opportunity"],["dim_charge"],["dim_charge"],["fct_charge"],["fct_charge"],["dim_billing_account"],["dim_billing_account"],["dim_product_detail"],["dim_product_detail"],["dim_amendment"],["dim_amendment"]],"sources":[],"metrics":[],"description":"This model generates a list of subscriptions which will be available to renew in a given time period based on existing charges and term dates. It also has logic built in to identify multi-year bookings which is not yet avilable in the source data.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_finance/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/mart_available_to_renew.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false},"created_at":1689033735.1840882,"compiled_sql":"$25","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew","label":"mart_available_to_renew"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_MARKETING","name":"MART_CRM_ATTRIBUTION_TOUCHPOINT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_TOUCHPOINT_ID":{"type":"TEXT","index":1,"name":"dim_crm_touchpoint_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_touchpoint_id"},"TOUCHPOINT_PERSON_CAMPAIGN_DATE_ID":{"type":"TEXT","index":2,"name":"touchpoint_person_campaign_date_id","comment":null,"description":"A concatenation of fields from the mart that can be used to join attribution and person touchpoints together.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"touchpoint_person_campaign_date_id"},"BIZIBLE_TOUCHPOINT_DATE":{"type":"DATE","index":3,"name":"BIZIBLE_TOUCHPOINT_DATE","comment":null,"display_name":"bizible_touchpoint_date"},"BIZIBLE_TOUCHPOINT_DATE_TIME":{"type":"TIMESTAMP_TZ","index":4,"name":"bizible_touchpoint_date_time","comment":null,"description":"The date/time of the bizible touchpoint interaction.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_touchpoint_date_time"},"BIZIBLE_TOUCHPOINT_MONTH":{"type":"TIMESTAMP_TZ","index":5,"name":"BIZIBLE_TOUCHPOINT_MONTH","comment":null,"display_name":"bizible_touchpoint_month"},"BIZIBLE_TOUCHPOINT_POSITION":{"type":"TEXT","index":6,"name":"BIZIBLE_TOUCHPOINT_POSITION","comment":null,"display_name":"bizible_touchpoint_position"},"BIZIBLE_TOUCHPOINT_SOURCE":{"type":"TEXT","index":7,"name":"BIZIBLE_TOUCHPOINT_SOURCE","comment":null,"display_name":"bizible_touchpoint_source"},"BIZIBLE_TOUCHPOINT_SOURCE_TYPE":{"type":"TEXT","index":8,"name":"BIZIBLE_TOUCHPOINT_SOURCE_TYPE","comment":null,"display_name":"bizible_touchpoint_source_type"},"BIZIBLE_TOUCHPOINT_TYPE":{"type":"TEXT","index":9,"name":"BIZIBLE_TOUCHPOINT_TYPE","comment":null,"display_name":"bizible_touchpoint_type"},"BIZIBLE_AD_CAMPAIGN_NAME":{"type":"TEXT","index":10,"name":"BIZIBLE_AD_CAMPAIGN_NAME","comment":null,"display_name":"bizible_ad_campaign_name"},"BIZIBLE_AD_CONTENT":{"type":"TEXT","index":11,"name":"BIZIBLE_AD_CONTENT","comment":null,"display_name":"bizible_ad_content"},"BIZIBLE_AD_GROUP_NAME":{"type":"TEXT","index":12,"name":"BIZIBLE_AD_GROUP_NAME","comment":null,"display_name":"bizible_ad_group_name"},"BIZIBLE_FORM_URL":{"type":"TEXT","index":13,"name":"BIZIBLE_FORM_URL","comment":null,"display_name":"bizible_form_url"},"BIZIBLE_FORM_URL_RAW":{"type":"TEXT","index":14,"name":"BIZIBLE_FORM_URL_RAW","comment":null,"display_name":"bizible_form_url_raw"},"BIZIBLE_LANDING_PAGE":{"type":"TEXT","index":15,"name":"BIZIBLE_LANDING_PAGE","comment":null,"display_name":"bizible_landing_page"},"BIZIBLE_LANDING_PAGE_RAW":{"type":"TEXT","index":16,"name":"BIZIBLE_LANDING_PAGE_RAW","comment":null,"display_name":"bizible_landing_page_raw"},"BIZIBLE_MARKETING_CHANNEL":{"type":"TEXT","index":17,"name":"BIZIBLE_MARKETING_CHANNEL","comment":null,"display_name":"bizible_marketing_channel"},"BIZIBLE_MARKETING_CHANNEL_PATH":{"type":"TEXT","index":18,"name":"BIZIBLE_MARKETING_CHANNEL_PATH","comment":null,"display_name":"bizible_marketing_channel_path"},"BIZIBLE_MEDIUM":{"type":"TEXT","index":19,"name":"BIZIBLE_MEDIUM","comment":null,"display_name":"bizible_medium"},"BIZIBLE_REFERRER_PAGE":{"type":"TEXT","index":20,"name":"BIZIBLE_REFERRER_PAGE","comment":null,"display_name":"bizible_referrer_page"},"BIZIBLE_REFERRER_PAGE_RAW":{"type":"TEXT","index":21,"name":"BIZIBLE_REFERRER_PAGE_RAW","comment":null,"display_name":"bizible_referrer_page_raw"},"BIZIBLE_FORM_PAGE_UTM_CONTENT":{"type":"TEXT","index":22,"name":"bizible_form_page_utm_content","comment":null,"description":"The `utm_content` parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_content"},"BIZIBLE_FORM_PAGE_UTM_BUDGET":{"type":"TEXT","index":23,"name":"bizible_form_page_utm_budget","comment":null,"description":"The `utm_budget` parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_budget"},"BIZIBLE_FORM_PAGE_UTM_ALLPTNR":{"type":"TEXT","index":24,"name":"bizible_form_page_utm_allptnr","comment":null,"description":"The `utm_allptnr` (alliance/partner) parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_allptnr"},"BIZIBLE_FORM_PAGE_UTM_PARTNERID":{"type":"TEXT","index":25,"name":"bizible_form_page_utm_partnerid","comment":null,"description":"The `utm_partnerid` parameter of the `bizible_form_url`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_form_page_utm_partnerid"},"BIZIBLE_LANDING_PAGE_UTM_CONTENT":{"type":"TEXT","index":26,"name":"bizible_landing_page_utm_content","comment":null,"description":"The `utm_content` parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_content"},"BIZIBLE_LANDING_PAGE_UTM_BUDGET":{"type":"TEXT","index":27,"name":"bizible_landing_page_utm_budget","comment":null,"description":"The `utm_budget` parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_budget"},"BIZIBLE_LANDING_PAGE_UTM_ALLPTNR":{"type":"TEXT","index":28,"name":"bizible_landing_page_utm_allptnr","comment":null,"description":"The `utm_allptnr` (alliance/partner) parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_allptnr"},"BIZIBLE_LANDING_PAGE_UTM_PARTNERID":{"type":"TEXT","index":29,"name":"bizible_landing_page_utm_partnerid","comment":null,"description":"The `utm_partnerid` parameter of the `bizible_landing_page`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_landing_page_utm_partnerid"},"BIZIBLE_SALESFORCE_CAMPAIGN":{"type":"TEXT","index":30,"name":"BIZIBLE_SALESFORCE_CAMPAIGN","comment":null,"display_name":"bizible_salesforce_campaign"},"BIZIBLE_INTEGRATED_CAMPAIGN_GROUPING":{"type":"TEXT","index":31,"name":"BIZIBLE_INTEGRATED_CAMPAIGN_GROUPING","comment":null,"display_name":"bizible_integrated_campaign_grouping"},"TOUCHPOINT_SEGMENT":{"type":"TEXT","index":32,"name":"TOUCHPOINT_SEGMENT","comment":null,"display_name":"touchpoint_segment"},"GTM_MOTION":{"type":"TEXT","index":33,"name":"GTM_MOTION","comment":null,"display_name":"gtm_motion"},"INTEGRATED_CAMPAIGN_GROUPING":{"type":"TEXT","index":34,"name":"INTEGRATED_CAMPAIGN_GROUPING","comment":null,"display_name":"integrated_campaign_grouping"},"PIPE_NAME":{"type":"TEXT","index":35,"name":"PIPE_NAME","comment":null,"display_name":"pipe_name"},"IS_DG_INFLUENCED":{"type":"NUMBER","index":36,"name":"is_dg_influenced","comment":null,"description":"Flag indicating a touchpoint is influenced by Demand Gen based on its segment being Demand Gen.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_dg_influenced"},"IS_DG_SOURCED":{"type":"NUMBER","index":37,"name":"is_dg_sourced","comment":null,"description":"Flag indicating a touchpoint is sourced from Demand Gen based on its segment being Demand Gen as well as its position being first touch.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_dg_sourced"},"OPPS_PER_TOUCHPOINT":{"type":"NUMBER","index":38,"name":"opps_per_touchpoint","comment":null,"description":"Count of opportunities associated with a touchpoint.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opps_per_touchpoint"},"BIZIBLE_COUNT_LEAD_CREATION_TOUCH":{"type":"FLOAT","index":39,"name":"bizible_count_lead_creation_touch","comment":null,"description":"Count of lead creation touchpoints.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_count_lead_creation_touch"},"BIZIBLE_COUNT_FIRST_TOUCH":{"type":"FLOAT","index":40,"name":"bizible_count_first_touch","comment":null,"description":"Count of touchpoints that are first touch.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_count_first_touch"},"BIZIBLE_ATTRIBUTION_PERCENT_FULL_PATH":{"type":"FLOAT","index":41,"name":"bizible_attribution_percent_full_path","comment":null,"description":"Weight of touchpoint in [full path attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#full-path) which tracks the entire lifecycle of the record from `First Touch` through the point of becoming a customer - `Customer Close`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_attribution_percent_full_path"},"BIZIBLE_COUNT_CUSTOM_MODEL":{"type":"FLOAT","index":42,"name":"bizible_count_custom_model","comment":null,"description":"Weight of touchpoint in [custom attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#custom-attribution-based-on-bizible-machine-learning-algorithm) which is based on the Bizible machine learning attribution model uses our touchpoint data to calculate how much attribution weighting should be assigned to each stage. This is determined by how important each stage was in driving deals to close.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_count_custom_model"},"BIZIBLE_COUNT_U_SHAPED":{"type":"FLOAT","index":43,"name":"bizible_count_u_shaped","comment":null,"description":"Weight of touchpoint in [u-shaped attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#u-shaped) which racks every single touchpoint up to the point of lead creation. It emphasizes the importance of two touchpoints - 1. the first touch that brought the lead to us (while anonymous) - `First Touch` 2. the touchpoint that converted the lead to a known prospect - `Lead Creation`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_count_u_shaped"},"BIZIBLE_COUNT_W_SHAPED":{"type":"FLOAT","index":44,"name":"bizible_count_w_shaped","comment":null,"description":"Weight of touchpoint in [w-shaped attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#w-shaped) which emphasizes the importance of three touchpoints - 1. the first touch that brought the lead to us (while anonymous) - `First Touch` 2. the touchpoint that converted the lead to a known prospect - `Lead Creation` 3. the touchpoint that converted that prospect to an opportunity - `Opportunity Creation`","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bizible_count_w_shaped"},"BIZIBLE_WEIGHT_FULL_PATH":{"type":"FLOAT","index":45,"name":"BIZIBLE_WEIGHT_FULL_PATH","comment":null,"display_name":"bizible_weight_full_path"},"BIZIBLE_WEIGHT_CUSTOM_MODEL":{"type":"FLOAT","index":46,"name":"BIZIBLE_WEIGHT_CUSTOM_MODEL","comment":null,"display_name":"bizible_weight_custom_model"},"BIZIBLE_WEIGHT_FIRST_TOUCH":{"type":"FLOAT","index":47,"name":"BIZIBLE_WEIGHT_FIRST_TOUCH","comment":null,"display_name":"bizible_weight_first_touch"},"BIZIBLE_WEIGHT_LEAD_CONVERSION":{"type":"FLOAT","index":48,"name":"BIZIBLE_WEIGHT_LEAD_CONVERSION","comment":null,"display_name":"bizible_weight_lead_conversion"},"BIZIBLE_WEIGHT_U_SHAPED":{"type":"FLOAT","index":49,"name":"BIZIBLE_WEIGHT_U_SHAPED","comment":null,"display_name":"bizible_weight_u_shaped"},"BIZIBLE_WEIGHT_W_SHAPED":{"type":"FLOAT","index":50,"name":"BIZIBLE_WEIGHT_W_SHAPED","comment":null,"display_name":"bizible_weight_w_shaped"},"FIRST_NET_ARR":{"type":"FLOAT","index":51,"name":"first_net_arr","comment":null,"description":"Net ARR associated with touchpoint under first touch attribution model.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_net_arr"},"W_NET_ARR":{"type":"FLOAT","index":52,"name":"w_net_arr","comment":null,"description":"Net ARR associated with touchpoint under [w-shaped attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#w-shaped).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"w_net_arr"},"U_NET_ARR":{"type":"FLOAT","index":53,"name":"u_net_arr","comment":null,"description":"Net ARR associated with touchpoint under[u-shaped attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#u-shaped).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"u_net_arr"},"FULL_NET_ARR":{"type":"FLOAT","index":54,"name":"full_net_arr","comment":null,"description":"Net ARR associated with touchpoint under [full path attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#full-path).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"full_net_arr"},"CUSTOM_NET_ARR":{"type":"FLOAT","index":55,"name":"custom_net_arr","comment":null,"description":"Net ARR associated with touchpoint under [Bizible custom attribution model](https://about.gitlab.com/handbook/marketing/marketing-operations/bizible/#custom-attribution-based-on-bizible-machine-learning-algorithm).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"custom_net_arr"},"NET_ARR_PER_CAMPAIGN":{"type":"FLOAT","index":56,"name":"net_arr_per_campaign","comment":null,"description":"Average net ARR associated with a campaign based on the number of campaigns connected to an opportunity that is tied to the touchpoint.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"net_arr_per_campaign"},"BIZIBLE_REVENUE_FULL_PATH":{"type":"FLOAT","index":57,"name":"BIZIBLE_REVENUE_FULL_PATH","comment":null,"display_name":"bizible_revenue_full_path"},"BIZIBLE_REVENUE_CUSTOM_MODEL":{"type":"FLOAT","index":58,"name":"BIZIBLE_REVENUE_CUSTOM_MODEL","comment":null,"display_name":"bizible_revenue_custom_model"},"BIZIBLE_REVENUE_FIRST_TOUCH":{"type":"FLOAT","index":59,"name":"BIZIBLE_REVENUE_FIRST_TOUCH","comment":null,"display_name":"bizible_revenue_first_touch"},"BIZIBLE_REVENUE_LEAD_CONVERSION":{"type":"FLOAT","index":60,"name":"BIZIBLE_REVENUE_LEAD_CONVERSION","comment":null,"display_name":"bizible_revenue_lead_conversion"},"BIZIBLE_REVENUE_U_SHAPED":{"type":"FLOAT","index":61,"name":"BIZIBLE_REVENUE_U_SHAPED","comment":null,"display_name":"bizible_revenue_u_shaped"},"BIZIBLE_REVENUE_W_SHAPED":{"type":"FLOAT","index":62,"name":"BIZIBLE_REVENUE_W_SHAPED","comment":null,"display_name":"bizible_revenue_w_shaped"},"BIZIBLE_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":63,"name":"BIZIBLE_CREATED_DATE","comment":null,"display_name":"bizible_created_date"},"DIM_CRM_PERSON_ID":{"type":"TEXT","index":64,"name":"DIM_CRM_PERSON_ID","comment":null,"display_name":"dim_crm_person_id"},"SFDC_RECORD_ID":{"type":"TEXT","index":65,"name":"SFDC_RECORD_ID","comment":null,"display_name":"sfdc_record_id"},"SFDC_RECORD_TYPE":{"type":"TEXT","index":66,"name":"SFDC_RECORD_TYPE","comment":null,"display_name":"sfdc_record_type"},"MARKETO_LEAD_ID":{"type":"FLOAT","index":67,"name":"MARKETO_LEAD_ID","comment":null,"display_name":"marketo_lead_id"},"EMAIL_HASH":{"type":"TEXT","index":68,"name":"EMAIL_HASH","comment":null,"display_name":"email_hash"},"EMAIL_DOMAIN":{"type":"TEXT","index":69,"name":"EMAIL_DOMAIN","comment":null,"display_name":"email_domain"},"OWNER_ID":{"type":"TEXT","index":70,"name":"OWNER_ID","comment":null,"display_name":"owner_id"},"PERSON_SCORE":{"type":"FLOAT","index":71,"name":"PERSON_SCORE","comment":null,"display_name":"person_score"},"CRM_PERSON_TITLE":{"type":"TEXT","index":72,"name":"CRM_PERSON_TITLE","comment":null,"display_name":"crm_person_title"},"CRM_PERSON_COUNTRY":{"type":"TEXT","index":73,"name":"CRM_PERSON_COUNTRY","comment":null,"display_name":"crm_person_country"},"CRM_PERSON_STATE":{"type":"TEXT","index":74,"name":"CRM_PERSON_STATE","comment":null,"display_name":"crm_person_state"},"CRM_PERSON_STATUS":{"type":"TEXT","index":75,"name":"CRM_PERSON_STATUS","comment":null,"display_name":"crm_person_status"},"LEAD_SOURCE":{"type":"TEXT","index":76,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"LEAD_SOURCE_TYPE":{"type":"TEXT","index":77,"name":"LEAD_SOURCE_TYPE","comment":null,"display_name":"lead_source_type"},"CRM_PERSON_SOURCE_BUCKETS":{"type":"TEXT","index":78,"name":"CRM_PERSON_SOURCE_BUCKETS","comment":null,"display_name":"crm_person_source_buckets"},"NET_NEW_SOURCE_CATEGORIES":{"type":"TEXT","index":79,"name":"NET_NEW_SOURCE_CATEGORIES","comment":null,"display_name":"net_new_source_categories"},"CRM_PARTNER_ID":{"type":"TEXT","index":80,"name":"CRM_PARTNER_ID","comment":null,"display_name":"crm_partner_id"},"CRM_PERSON_CREATED_DATE":{"type":"DATE","index":81,"name":"CRM_PERSON_CREATED_DATE","comment":null,"display_name":"crm_person_created_date"},"INQUIRY_DATE":{"type":"DATE","index":82,"name":"INQUIRY_DATE","comment":null,"display_name":"inquiry_date"},"MQL_DATE_FIRST":{"type":"DATE","index":83,"name":"MQL_DATE_FIRST","comment":null,"display_name":"mql_date_first"},"MQL_DATE_LATEST":{"type":"DATE","index":84,"name":"MQL_DATE_LATEST","comment":null,"display_name":"mql_date_latest"},"LEGACY_MQL_DATE_FIRST":{"type":"DATE","index":85,"name":"LEGACY_MQL_DATE_FIRST","comment":null,"display_name":"legacy_mql_date_first"},"LEGACY_MQL_DATE_LATEST":{"type":"DATE","index":86,"name":"LEGACY_MQL_DATE_LATEST","comment":null,"display_name":"legacy_mql_date_latest"},"ACCEPTED_DATE":{"type":"DATE","index":87,"name":"ACCEPTED_DATE","comment":null,"display_name":"accepted_date"},"QUALIFYING_DATE":{"type":"DATE","index":88,"name":"QUALIFYING_DATE","comment":null,"display_name":"qualifying_date"},"QUALIFIED_DATE":{"type":"DATE","index":89,"name":"QUALIFIED_DATE","comment":null,"display_name":"qualified_date"},"CONVERTED_DATE":{"type":"DATE","index":90,"name":"CONVERTED_DATE","comment":null,"display_name":"converted_date"},"IS_MQL":{"type":"NUMBER","index":91,"name":"IS_MQL","comment":null,"display_name":"is_mql"},"IS_INQUIRY":{"type":"NUMBER","index":92,"name":"IS_INQUIRY","comment":null,"display_name":"is_inquiry"},"MQL_COUNT":{"type":"NUMBER","index":93,"name":"MQL_COUNT","comment":null,"display_name":"mql_count"},"LAST_UTM_CONTENT":{"type":"TEXT","index":94,"name":"LAST_UTM_CONTENT","comment":null,"display_name":"last_utm_content"},"LAST_UTM_CAMPAIGN":{"type":"TEXT","index":95,"name":"LAST_UTM_CAMPAIGN","comment":null,"display_name":"last_utm_campaign"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT":{"type":"TEXT","index":96,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT","comment":null,"display_name":"account_demographics_sales_segment"},"ACCOUNT_DEMOGRAPHICS_GEO":{"type":"TEXT","index":97,"name":"ACCOUNT_DEMOGRAPHICS_GEO","comment":null,"display_name":"account_demographics_geo"},"ACCOUNT_DEMOGRAPHICS_REGION":{"type":"TEXT","index":98,"name":"ACCOUNT_DEMOGRAPHICS_REGION","comment":null,"display_name":"account_demographics_region"},"ACCOUNT_DEMOGRAPHICS_AREA":{"type":"TEXT","index":99,"name":"ACCOUNT_DEMOGRAPHICS_AREA","comment":null,"display_name":"account_demographics_area"},"DIM_CAMPAIGN_ID":{"type":"TEXT","index":100,"name":"DIM_CAMPAIGN_ID","comment":null,"display_name":"dim_campaign_id"},"CAMPAIGN_NAME":{"type":"TEXT","index":101,"name":"CAMPAIGN_NAME","comment":null,"display_name":"campaign_name"},"CAMPAIGN_IS_ACTIVE":{"type":"BOOLEAN","index":102,"name":"CAMPAIGN_IS_ACTIVE","comment":null,"display_name":"campaign_is_active"},"CAMPAGIN_STATUS":{"type":"TEXT","index":103,"name":"CAMPAGIN_STATUS","comment":null,"display_name":"campagin_status"},"TYPE":{"type":"TEXT","index":104,"name":"TYPE","comment":null,"display_name":"type"},"DESCRIPTION":{"type":"TEXT","index":105,"name":"DESCRIPTION","comment":null,"display_name":"description"},"BUDGET_HOLDER":{"type":"TEXT","index":106,"name":"BUDGET_HOLDER","comment":null,"display_name":"budget_holder"},"BIZIBLE_TOUCHPOINT_ENABLED_SETTING":{"type":"TEXT","index":107,"name":"BIZIBLE_TOUCHPOINT_ENABLED_SETTING","comment":null,"display_name":"bizible_touchpoint_enabled_setting"},"STRATEGIC_MARKETING_CONTRIBUTION":{"type":"TEXT","index":108,"name":"STRATEGIC_MARKETING_CONTRIBUTION","comment":null,"display_name":"strategic_marketing_contribution"},"LARGE_BUCKET":{"type":"TEXT","index":109,"name":"LARGE_BUCKET","comment":null,"display_name":"large_bucket"},"REPORTING_TYPE":{"type":"TEXT","index":110,"name":"REPORTING_TYPE","comment":null,"display_name":"reporting_type"},"ALLOCADIA_ID":{"type":"TEXT","index":111,"name":"ALLOCADIA_ID","comment":null,"display_name":"allocadia_id"},"IS_A_CHANNEL_PARTNER_INVOLVED":{"type":"TEXT","index":112,"name":"IS_A_CHANNEL_PARTNER_INVOLVED","comment":null,"display_name":"is_a_channel_partner_involved"},"IS_AN_ALLIANCE_PARTNER_INVOLVED":{"type":"TEXT","index":113,"name":"IS_AN_ALLIANCE_PARTNER_INVOLVED","comment":null,"display_name":"is_an_alliance_partner_involved"},"IS_THIS_AN_IN_PERSON_EVENT":{"type":"TEXT","index":114,"name":"IS_THIS_AN_IN_PERSON_EVENT","comment":null,"display_name":"is_this_an_in_person_event"},"WILL_THERE_BE_MDF_FUNDING":{"type":"TEXT","index":115,"name":"WILL_THERE_BE_MDF_FUNDING","comment":null,"display_name":"will_there_be_mdf_funding"},"ALLIANCE_PARTNER_NAME":{"type":"TEXT","index":116,"name":"ALLIANCE_PARTNER_NAME","comment":null,"display_name":"alliance_partner_name"},"CHANNEL_PARTNER_NAME":{"type":"TEXT","index":117,"name":"CHANNEL_PARTNER_NAME","comment":null,"display_name":"channel_partner_name"},"SALES_PLAY":{"type":"TEXT","index":118,"name":"SALES_PLAY","comment":null,"display_name":"sales_play"},"TOTAL_PLANNED_MQLS":{"type":"FLOAT","index":119,"name":"TOTAL_PLANNED_MQLS","comment":null,"display_name":"total_planned_mqls"},"DIM_PARENT_CAMPAIGN_ID":{"type":"TEXT","index":120,"name":"DIM_PARENT_CAMPAIGN_ID","comment":null,"display_name":"dim_parent_campaign_id"},"CAMPAIGN_OWNER_ID":{"type":"TEXT","index":121,"name":"CAMPAIGN_OWNER_ID","comment":null,"display_name":"campaign_owner_id"},"CAMPAIGN_CREATED_BY_ID":{"type":"TEXT","index":122,"name":"CAMPAIGN_CREATED_BY_ID","comment":null,"display_name":"campaign_created_by_id"},"CAMPAIGN_START_DATE":{"type":"TIMESTAMP_TZ","index":123,"name":"CAMPAIGN_START_DATE","comment":null,"display_name":"campaign_start_date"},"CAMPAIGN_END_DATE":{"type":"TIMESTAMP_TZ","index":124,"name":"CAMPAIGN_END_DATE","comment":null,"display_name":"campaign_end_date"},"CAMPAIGN_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":125,"name":"CAMPAIGN_CREATED_DATE","comment":null,"display_name":"campaign_created_date"},"CAMPAIGN_LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":126,"name":"CAMPAIGN_LAST_MODIFIED_DATE","comment":null,"display_name":"campaign_last_modified_date"},"CAMPAIGN_LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":127,"name":"CAMPAIGN_LAST_ACTIVITY_DATE","comment":null,"display_name":"campaign_last_activity_date"},"CAMPAIGN_REGION":{"type":"TEXT","index":128,"name":"CAMPAIGN_REGION","comment":null,"display_name":"campaign_region"},"CAMPAIGN_SUB_REGION":{"type":"TEXT","index":129,"name":"CAMPAIGN_SUB_REGION","comment":null,"display_name":"campaign_sub_region"},"BUDGETED_COST":{"type":"FLOAT","index":130,"name":"BUDGETED_COST","comment":null,"display_name":"budgeted_cost"},"EXPECTED_RESPONSE":{"type":"FLOAT","index":131,"name":"EXPECTED_RESPONSE","comment":null,"display_name":"expected_response"},"EXPECTED_REVENUE":{"type":"FLOAT","index":132,"name":"EXPECTED_REVENUE","comment":null,"display_name":"expected_revenue"},"ACTUAL_COST":{"type":"FLOAT","index":133,"name":"ACTUAL_COST","comment":null,"display_name":"actual_cost"},"AMOUNT_ALL_OPPORTUNITIES":{"type":"FLOAT","index":134,"name":"AMOUNT_ALL_OPPORTUNITIES","comment":null,"display_name":"amount_all_opportunities"},"AMOUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":135,"name":"AMOUNT_WON_OPPORTUNITIES","comment":null,"display_name":"amount_won_opportunities"},"COUNT_CONTACTS":{"type":"NUMBER","index":136,"name":"COUNT_CONTACTS","comment":null,"display_name":"count_contacts"},"COUNT_CONVERTED_LEADS":{"type":"NUMBER","index":137,"name":"COUNT_CONVERTED_LEADS","comment":null,"display_name":"count_converted_leads"},"COUNT_LEADS":{"type":"NUMBER","index":138,"name":"COUNT_LEADS","comment":null,"display_name":"count_leads"},"COUNT_OPPORTUNITIES":{"type":"NUMBER","index":139,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_RESPONSES":{"type":"NUMBER","index":140,"name":"COUNT_RESPONSES","comment":null,"display_name":"count_responses"},"COUNT_WON_OPPORTUNITIES":{"type":"NUMBER","index":141,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_SENT":{"type":"FLOAT","index":142,"name":"COUNT_SENT","comment":null,"display_name":"count_sent"},"CAMPAIGN_REP_NAME":{"type":"TEXT","index":143,"name":"CAMPAIGN_REP_NAME","comment":null,"display_name":"campaign_rep_name"},"CAMPAIGN_REP_TITLE":{"type":"TEXT","index":144,"name":"CAMPAIGN_REP_TITLE","comment":null,"display_name":"campaign_rep_title"},"CAMPAIGN_REP_TEAM":{"type":"TEXT","index":145,"name":"CAMPAIGN_REP_TEAM","comment":null,"display_name":"campaign_rep_team"},"CAMPAIGN_REP_IS_ACTIVE":{"type":"BOOLEAN","index":146,"name":"CAMPAIGN_REP_IS_ACTIVE","comment":null,"display_name":"campaign_rep_is_active"},"CAMPAIGN_REP_ROLE_NAME":{"type":"TEXT","index":147,"name":"CAMPAIGN_REP_ROLE_NAME","comment":null,"display_name":"campaign_rep_role_name"},"CAMPAIGN_CRM_USER_SEGMENT_NAME_LIVE":{"type":"TEXT","index":148,"name":"CAMPAIGN_CRM_USER_SEGMENT_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_segment_name_live"},"CAMPAIGN_CRM_USER_GEO_NAME_LIVE":{"type":"TEXT","index":149,"name":"CAMPAIGN_CRM_USER_GEO_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_geo_name_live"},"CAMPAIGN_CRM_USER_REGION_NAME_LIVE":{"type":"TEXT","index":150,"name":"CAMPAIGN_CRM_USER_REGION_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_region_name_live"},"CAMPAIGN_CRM_USER_AREA_NAME_LIVE":{"type":"TEXT","index":151,"name":"CAMPAIGN_CRM_USER_AREA_NAME_LIVE","comment":null,"display_name":"campaign_crm_user_area_name_live"},"REP_NAME":{"type":"TEXT","index":152,"name":"REP_NAME","comment":null,"display_name":"rep_name"},"REP_TITLE":{"type":"TEXT","index":153,"name":"REP_TITLE","comment":null,"display_name":"rep_title"},"TEAM":{"type":"TEXT","index":154,"name":"TEAM","comment":null,"display_name":"team"},"REP_IS_ACTIVE":{"type":"BOOLEAN","index":155,"name":"REP_IS_ACTIVE","comment":null,"display_name":"rep_is_active"},"USER_ROLE_NAME":{"type":"TEXT","index":156,"name":"USER_ROLE_NAME","comment":null,"display_name":"user_role_name"},"TOUCHPOINT_CRM_USER_SEGMENT_NAME_LIVE":{"type":"TEXT","index":157,"name":"TOUCHPOINT_CRM_USER_SEGMENT_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_segment_name_live"},"TOUCHPOINT_CRM_USER_GEO_NAME_LIVE":{"type":"TEXT","index":158,"name":"TOUCHPOINT_CRM_USER_GEO_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_geo_name_live"},"TOUCHPOINT_CRM_USER_REGION_NAME_LIVE":{"type":"TEXT","index":159,"name":"TOUCHPOINT_CRM_USER_REGION_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_region_name_live"},"TOUCHPOINT_CRM_USER_AREA_NAME_LIVE":{"type":"TEXT","index":160,"name":"TOUCHPOINT_CRM_USER_AREA_NAME_LIVE","comment":null,"display_name":"touchpoint_crm_user_area_name_live"},"SDR_SALES_SEGMENT":{"type":"TEXT","index":161,"name":"sdr_sales_segment","comment":null,"description":"Sales segment of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_sales_segment"},"SDR_REGION":{"type":"TEXT","index":162,"name":"sdr_region","comment":null,"description":"Region of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_region"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":163,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":164,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":165,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":166,"name":"CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"crm_account_industry"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":167,"name":"CRM_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"crm_account_gtm_strategy"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":168,"name":"CRM_ACCOUNT_FOCUS_ACCOUNT","comment":null,"display_name":"crm_account_focus_account"},"HEALTH_NUMBER":{"type":"FLOAT","index":169,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":170,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":171,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":172,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":173,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":174,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":175,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":176,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":177,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":178,"name":"CRM_ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"crm_account_owner_user_segment"},"RECORD_TYPE_ID":{"type":"TEXT","index":179,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":180,"name":"GITLAB_COM_USER","comment":null,"display_name":"gitlab_com_user"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":181,"name":"CRM_ACCOUNT_TYPE","comment":null,"display_name":"crm_account_type"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":182,"name":"TECHNICAL_ACCOUNT_MANAGER","comment":null,"display_name":"technical_account_manager"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":183,"name":"MERGED_TO_ACCOUNT_ID","comment":null,"display_name":"merged_to_account_id"},"IS_RESELLER":{"type":"BOOLEAN","index":184,"name":"IS_RESELLER","comment":null,"display_name":"is_reseller"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":185,"name":"DIM_CRM_OPPORTUNITY_ID","comment":null,"display_name":"dim_crm_opportunity_id"},"SALES_ACCEPTED_DATE":{"type":"DATE","index":186,"name":"SALES_ACCEPTED_DATE","comment":null,"display_name":"sales_accepted_date"},"OPPORTUNITY_CLOSE_DATE":{"type":"DATE","index":187,"name":"OPPORTUNITY_CLOSE_DATE","comment":null,"display_name":"opportunity_close_date"},"OPPORTUNITY_CREATED_DATE":{"type":"DATE","index":188,"name":"OPPORTUNITY_CREATED_DATE","comment":null,"display_name":"opportunity_created_date"},"IS_WON":{"type":"BOOLEAN","index":189,"name":"IS_WON","comment":null,"display_name":"is_won"},"IS_NET_ARR_PIPELINE_CREATED":{"type":"BOOLEAN","index":190,"name":"IS_NET_ARR_PIPELINE_CREATED","comment":null,"display_name":"is_net_arr_pipeline_created"},"IS_NET_ARR_CLOSED_DEAL":{"type":"BOOLEAN","index":191,"name":"IS_NET_ARR_CLOSED_DEAL","comment":null,"display_name":"is_net_arr_closed_deal"},"IS_CLOSED":{"type":"BOOLEAN","index":192,"name":"IS_CLOSED","comment":null,"display_name":"is_closed"},"DAYS_IN_SAO":{"type":"FLOAT","index":193,"name":"DAYS_IN_SAO","comment":null,"display_name":"days_in_sao"},"IACV":{"type":"FLOAT","index":194,"name":"IACV","comment":null,"display_name":"iacv"},"NET_ARR":{"type":"FLOAT","index":195,"name":"NET_ARR","comment":null,"display_name":"net_arr"},"AMOUNT":{"type":"FLOAT","index":196,"name":"AMOUNT","comment":null,"display_name":"amount"},"IS_EDU_OSS":{"type":"FLOAT","index":197,"name":"IS_EDU_OSS","comment":null,"display_name":"is_edu_oss"},"STAGE_NAME":{"type":"TEXT","index":198,"name":"STAGE_NAME","comment":null,"display_name":"stage_name"},"REASON_FOR_LOSS":{"type":"TEXT","index":199,"name":"REASON_FOR_LOSS","comment":null,"display_name":"reason_for_loss"},"IS_SAO":{"type":"BOOLEAN","index":200,"name":"IS_SAO","comment":null,"display_name":"is_sao"},"DEAL_PATH_NAME":{"type":"TEXT","index":201,"name":"DEAL_PATH_NAME","comment":null,"display_name":"deal_path_name"},"ORDER_TYPE":{"type":"TEXT","index":202,"name":"ORDER_TYPE","comment":null,"display_name":"order_type"},"SALES_QUALIFIED_SOURCE_NAME":{"type":"TEXT","index":203,"name":"SALES_QUALIFIED_SOURCE_NAME","comment":null,"display_name":"sales_qualified_source_name"},"SALES_TYPE":{"type":"TEXT","index":204,"name":"SALES_TYPE","comment":null,"display_name":"sales_type"},"CLOSED_BUCKETS":{"type":"TEXT","index":205,"name":"CLOSED_BUCKETS","comment":null,"display_name":"closed_buckets"},"OPPORTUNITY_SOURCE_BUCKETS":{"type":"TEXT","index":206,"name":"OPPORTUNITY_SOURCE_BUCKETS","comment":null,"display_name":"opportunity_source_buckets"},"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":207,"name":"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_sales_development_representative"},"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":208,"name":"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_business_development_representative"},"SDR_OR_BDR":{"type":"TEXT","index":209,"name":"SDR_OR_BDR","comment":null,"display_name":"sdr_or_bdr"},"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":210,"name":"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_development_representative"},"IS_WEB_PORTAL_PURCHASE":{"type":"BOOLEAN","index":211,"name":"IS_WEB_PORTAL_PURCHASE","comment":null,"display_name":"is_web_portal_purchase"},"CRM_ATTRIBUTION_TOUCHPOINTS_PER_OPP":{"type":"NUMBER","index":212,"name":"CRM_ATTRIBUTION_TOUCHPOINTS_PER_OPP","comment":null,"display_name":"crm_attribution_touchpoints_per_opp"},"WEIGHTED_LINEAR_IACV":{"type":"FLOAT","index":213,"name":"WEIGHTED_LINEAR_IACV","comment":null,"display_name":"weighted_linear_iacv"},"COUNT_CAMPAIGNS_PER_OPP":{"type":"NUMBER","index":214,"name":"COUNT_CAMPAIGNS_PER_OPP","comment":null,"display_name":"count_campaigns_per_opp"},"IACV_PER_CAMPAIGN":{"type":"FLOAT","index":215,"name":"IACV_PER_CAMPAIGN","comment":null,"display_name":"iacv_per_campaign"},"IS_FMM_INFLUENCED":{"type":"NUMBER","index":216,"name":"IS_FMM_INFLUENCED","comment":null,"display_name":"is_fmm_influenced"},"IS_FMM_SOURCED":{"type":"NUMBER","index":217,"name":"IS_FMM_SOURCED","comment":null,"display_name":"is_fmm_sourced"},"TOUCHPOINTS_PER_OPPORTUNITY":{"type":"NUMBER","index":218,"name":"TOUCHPOINTS_PER_OPPORTUNITY","comment":null,"display_name":"touchpoints_per_opportunity"},"L_WEIGHT":{"type":"NUMBER","index":219,"name":"L_WEIGHT","comment":null,"display_name":"l_weight"},"LINEAR_NET_ARR":{"type":"FLOAT","index":220,"name":"LINEAR_NET_ARR","comment":null,"display_name":"linear_net_arr"},"CREATED_BY":{"type":"TEXT","index":221,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":222,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":223,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":224,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":225,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":226,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:11UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":126348288,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_crm_attribution_touchpoint","raw_sql":"$26","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_crm_touchpoint","model.gitlab_snowflake.dim_crm_touchpoint","model.gitlab_snowflake.fct_crm_attribution_touchpoint","model.gitlab_snowflake.fct_crm_attribution_touchpoint","model.gitlab_snowflake.dim_campaign","model.gitlab_snowflake.dim_campaign","model.gitlab_snowflake.fct_campaign","model.gitlab_snowflake.fct_campaign","model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.dim_crm_person","model.gitlab_snowflake.fct_crm_person","model.gitlab_snowflake.fct_crm_person","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_marketing","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_marketing","fqn":["gitlab_snowflake","common_mart_marketing","mart_crm_attribution_touchpoint"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_marketing/mart_crm_attribution_touchpoint.sql","original_file_path":"models/common_mart_marketing/mart_crm_attribution_touchpoint.sql","name":"mart_crm_attribution_touchpoint","alias":"mart_crm_attribution_touchpoint","checksum":{"name":"sha256","checksum":"771c9512bd50ce941bf3c141c0a827894d43e18dfc7b01700ccd43dcd74205f9"},"tags":["mnpi_exception"],"refs":[["dim_crm_touchpoint"],["dim_crm_touchpoint"],["fct_crm_attribution_touchpoint"],["fct_crm_attribution_touchpoint"],["dim_campaign"],["dim_campaign"],["fct_campaign"],["fct_campaign"],["dim_crm_person"],["dim_crm_person"],["fct_crm_person"],["fct_crm_person"],["dim_crm_account"],["dim_crm_account"],["dim_crm_user"],["dim_crm_user"],["fct_crm_opportunity"],["fct_crm_opportunity"],["dim_crm_opportunity"],["dim_crm_opportunity"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"Model containing Bizible attribution touchpoints along with contact, lead, account, campaign, and opportunity details.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_marketing/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_marketing/mart_crm_attribution_touchpoint.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033737.358635,"compiled_sql":"$27","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_marketing.mart_crm_attribution_touchpoint","label":"mart_crm_attribution_touchpoint"}],"test":[{"raw_sql":"{{ test_unique(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"unique","kwargs":{"column_name":"dim_crm_user_id","model":"{{ get_where_subquery(ref('dim_crm_user')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_unique","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","unique_dim_crm_user_dim_crm_user_id"],"unique_id":"test.gitlab_snowflake.unique_dim_crm_user_dim_crm_user_id.a980b4f49a","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"unique_dim_crm_user_dim_crm_user_id.sql","original_file_path":"models/common/schema.yml","name":"unique_dim_crm_user_dim_crm_user_id","alias":"unique_dim_crm_user_dim_crm_user_id","checksum":{"name":"none","checksum":""},"tags":["common","tdf"],"refs":[["dim_crm_user"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/unique_dim_crm_user_dim_crm_user_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033752.9947226,"compiled_sql":"\n    \n    \n\nselect\n    dim_crm_user_id as unique_field,\n    count(*) as n_records\n\nfrom \"PROD\".common.dim_crm_user\nwhere dim_crm_user_id is not null\ngroup by dim_crm_user_id\nhaving count(*) > 1\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_crm_user_id","file_key_name":"models.dim_crm_user","label":"unique_dim_crm_user_dim_crm_user_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_crm_user_id","model":"{{ get_where_subquery(ref('dim_crm_user')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","not_null_dim_crm_user_dim_crm_user_id"],"unique_id":"test.gitlab_snowflake.not_null_dim_crm_user_dim_crm_user_id.aad6c55753","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_dim_crm_user_dim_crm_user_id.sql","original_file_path":"models/common/schema.yml","name":"not_null_dim_crm_user_dim_crm_user_id","alias":"not_null_dim_crm_user_dim_crm_user_id","checksum":{"name":"none","checksum":""},"tags":["common","tdf"],"refs":[["dim_crm_user"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/not_null_dim_crm_user_dim_crm_user_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033752.9986274,"compiled_sql":"\n    \n    \n\n\n\nselect dim_crm_user_id\nfrom \"PROD\".common.dim_crm_user\nwhere dim_crm_user_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_crm_user_id","file_key_name":"models.dim_crm_user","label":"not_null_dim_crm_user_dim_crm_user_id"},{"raw_sql":"{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_dim_crm_opportun_8fdf8e13b17886293a48c18a73cb001e\") }}","test_metadata":{"name":"relationships","kwargs":{"to":"ref('dim_crm_user')","field":"dim_crm_user_id","column_name":"dim_crm_user_id","model":"{{ get_where_subquery(ref('dim_crm_opportunity')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_relationships","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_opportunity"]},"config":{"enabled":true,"alias":"relationships_dim_crm_opportun_8fdf8e13b17886293a48c18a73cb001e","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common","relationships_dim_crm_opportunity_dim_crm_user_id__dim_crm_user_id__ref_dim_crm_user_"],"unique_id":"test.gitlab_snowflake.relationships_dim_crm_opportunity_dim_crm_user_id__dim_crm_user_id__ref_dim_crm_user_.e37a33c9e0","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"relationships_dim_crm_opportun_8fdf8e13b17886293a48c18a73cb001e.sql","original_file_path":"models/common/schema.yml","name":"relationships_dim_crm_opportunity_dim_crm_user_id__dim_crm_user_id__ref_dim_crm_user_","alias":"relationships_dim_crm_opportun_8fdf8e13b17886293a48c18a73cb001e","checksum":{"name":"none","checksum":""},"tags":["common","opportunity","sales_funnel","tdf"],"refs":[["dim_crm_user"],["dim_crm_opportunity"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common/schema.yml/relationships_dim_crm_opportun_8fdf8e13b17886293a48c18a73cb001e.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"relationships_dim_crm_opportun_8fdf8e13b17886293a48c18a73cb001e"},"created_at":1689033754.9727843,"compiled_sql":"\n    \n    \n\nwith child as (\n    select dim_crm_user_id as from_field\n    from \"PROD\".restricted_safe_common.dim_crm_opportunity\n    where dim_crm_user_id is not null\n),\n\nparent as (\n    select dim_crm_user_id as to_field\n    from \"PROD\".common.dim_crm_user\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_crm_user_id","file_key_name":"models.dim_crm_opportunity","label":"relationships_dim_crm_opportunity_dim_crm_user_id__dim_crm_user_id__ref_dim_crm_user_"}]},"node":{"resource_type":"model","name":"dim_crm_user","unique_id":"model.gitlab_snowflake.dim_crm_user"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L11",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_CRM_USER","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_USER_ID":{"type":"TEXT","index":1,"name":"dim_crm_user_id","comment":null,"description":"Unique identifier of a Salesforce user","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_crm_user_id"},"EMPLOYEE_NUMBER":{"type":"TEXT","index":2,"name":"EMPLOYEE_NUMBER","comment":null,"display_name":"employee_number"},"USER_NAME":{"type":"TEXT","index":3,"name":"USER_NAME","comment":null,"display_name":"user_name"},"TITLE":{"type":"TEXT","index":4,"name":"TITLE","comment":null,"display_name":"title"},"DEPARTMENT":{"type":"TEXT","index":5,"name":"DEPARTMENT","comment":null,"display_name":"department"},"TEAM":{"type":"TEXT","index":6,"name":"TEAM","comment":null,"display_name":"team"},"MANAGER_ID":{"type":"TEXT","index":7,"name":"MANAGER_ID","comment":null,"display_name":"manager_id"},"MANAGER_NAME":{"type":"TEXT","index":8,"name":"MANAGER_NAME","comment":null,"display_name":"manager_name"},"USER_EMAIL":{"type":"TEXT","index":9,"name":"USER_EMAIL","comment":null,"display_name":"user_email"},"IS_ACTIVE":{"type":"BOOLEAN","index":10,"name":"IS_ACTIVE","comment":null,"display_name":"is_active"},"START_DATE":{"type":"TIMESTAMP_TZ","index":11,"name":"START_DATE","comment":null,"display_name":"start_date"},"RAMPING_QUOTA":{"type":"FLOAT","index":12,"name":"RAMPING_QUOTA","comment":null,"display_name":"ramping_quota"},"USER_TIMEZONE":{"type":"TEXT","index":13,"name":"USER_TIMEZONE","comment":null,"display_name":"user_timezone"},"USER_ROLE_ID":{"type":"TEXT","index":14,"name":"USER_ROLE_ID","comment":null,"display_name":"user_role_id"},"USER_ROLE_NAME":{"type":"TEXT","index":15,"name":"USER_ROLE_NAME","comment":null,"display_name":"user_role_name"},"DIM_CRM_USER_SALES_SEGMENT_ID":{"type":"TEXT","index":16,"name":"DIM_CRM_USER_SALES_SEGMENT_ID","comment":null,"display_name":"dim_crm_user_sales_segment_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":17,"name":"CRM_USER_SALES_SEGMENT","comment":null,"display_name":"crm_user_sales_segment"},"CRM_USER_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":18,"name":"CRM_USER_SALES_SEGMENT_GROUPED","comment":null,"display_name":"crm_user_sales_segment_grouped"},"DIM_CRM_USER_GEO_ID":{"type":"TEXT","index":19,"name":"DIM_CRM_USER_GEO_ID","comment":null,"display_name":"dim_crm_user_geo_id"},"CRM_USER_GEO":{"type":"TEXT","index":20,"name":"CRM_USER_GEO","comment":null,"display_name":"crm_user_geo"},"DIM_CRM_USER_REGION_ID":{"type":"TEXT","index":21,"name":"DIM_CRM_USER_REGION_ID","comment":null,"display_name":"dim_crm_user_region_id"},"CRM_USER_REGION":{"type":"TEXT","index":22,"name":"CRM_USER_REGION","comment":null,"display_name":"crm_user_region"},"DIM_CRM_USER_AREA_ID":{"type":"TEXT","index":23,"name":"DIM_CRM_USER_AREA_ID","comment":null,"display_name":"dim_crm_user_area_id"},"CRM_USER_AREA":{"type":"TEXT","index":24,"name":"CRM_USER_AREA","comment":null,"display_name":"crm_user_area"},"DIM_CRM_USER_BUSINESS_UNIT_ID":{"type":"TEXT","index":25,"name":"DIM_CRM_USER_BUSINESS_UNIT_ID","comment":null,"display_name":"dim_crm_user_business_unit_id"},"CRM_USER_BUSINESS_UNIT":{"type":"TEXT","index":26,"name":"CRM_USER_BUSINESS_UNIT","comment":null,"display_name":"crm_user_business_unit"},"DIM_CRM_USER_ROLE_TYPE_ID":{"type":"TEXT","index":27,"name":"DIM_CRM_USER_ROLE_TYPE_ID","comment":null,"display_name":"dim_crm_user_role_type_id"},"CRM_USER_ROLE_TYPE":{"type":"TEXT","index":28,"name":"CRM_USER_ROLE_TYPE","comment":null,"display_name":"crm_user_role_type"},"IS_HYBRID_USER":{"type":"NUMBER","index":29,"name":"IS_HYBRID_USER","comment":null,"display_name":"is_hybrid_user"},"DIM_CRM_USER_HIERARCHY_SK":{"type":"TEXT","index":30,"name":"DIM_CRM_USER_HIERARCHY_SK","comment":null,"display_name":"dim_crm_user_hierarchy_sk"},"CRM_USER_SALES_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":31,"name":"CRM_USER_SALES_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"crm_user_sales_segment_geo_region_area"},"CRM_USER_SALES_SEGMENT_REGION_GROUPED":{"type":"TEXT","index":32,"name":"CRM_USER_SALES_SEGMENT_REGION_GROUPED","comment":null,"display_name":"crm_user_sales_segment_region_grouped"},"SDR_SALES_SEGMENT":{"type":"TEXT","index":33,"name":"SDR_SALES_SEGMENT","comment":null,"display_name":"sdr_sales_segment"},"SDR_REGION":{"type":"TEXT","index":34,"name":"SDR_REGION","comment":null,"display_name":"sdr_region"},"CREATED_DATE":{"type":"TIMESTAMP_TZ","index":35,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"CRM_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":36,"name":"CRM_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"crm_user_sub_business_unit"},"CRM_USER_DIVISION":{"type":"TEXT","index":37,"name":"CRM_USER_DIVISION","comment":null,"display_name":"crm_user_division"},"ASM":{"type":"TEXT","index":38,"name":"ASM","comment":null,"display_name":"asm"},"CREATED_BY":{"type":"TEXT","index":39,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":40,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":41,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":42,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":43,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":44,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:59UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":307712,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_crm_user","raw_sql":"{{ config(\n    tags=[\"six_hourly\"]\n) }}\n\n{{ sfdc_user_fields('live') }}\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@mcooperDD\",\n    updated_by=\"@michellecooper\",\n    created_date=\"2021-01-12\",\n    updated_date=\"2022-03-02\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.sfdc_user_fields","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.sfdc_users_source","model.gitlab_snowflake.sfdc_users_source","model.gitlab_snowflake.sfdc_user_snapshots_source","model.gitlab_snowflake.sfdc_user_snapshots_source","model.gitlab_snowflake.sheetload_mapping_sdr_sfdc_bamboohr_source","model.gitlab_snowflake.sheetload_mapping_sdr_sfdc_bamboohr_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["six_hourly"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_crm_user"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_crm_user.sql","original_file_path":"models/common_prep/prep_crm_user.sql","name":"prep_crm_user","alias":"prep_crm_user","checksum":{"name":"sha256","checksum":"f012d6324fa9686bd84f3b72d62d7a49cb4b0762dfbd8d0a5d729a7aa39427b7"},"tags":["six_hourly"],"refs":[["sfdc_user_roles_source"],["sfdc_user_roles_source"],["dim_date"],["dim_date"],["sfdc_users_source"],["sfdc_users_source"],["sfdc_user_snapshots_source"],["sfdc_user_snapshots_source"],["sheetload_mapping_sdr_sfdc_bamboohr_source"],["sheetload_mapping_sdr_sfdc_bamboohr_source"]],"sources":[],"metrics":[],"description":"Creates a base view with generated keys for the user and live crm sales hierarchy shared dimensions and references in facts.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_crm_user.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["six_hourly"]},"created_at":1689033756.4307878,"compiled_sql":"$28","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_crm_user","label":"prep_crm_user"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.dbt_audit","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/dbt_audit.sql","original_file_path":"macros/utils/dbt_audit.sql","name":"dbt_audit","macro_sql":"$29","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt.run_query"]},"description":"Used to append audit columns to a model.\n\nThis model assumes that the final statement in your model is a `SELECT *` from a CTE. The final SQL will still be a `SELECT *` just with 6 additional columns added to it. Further SQL DML can be added after the macro call, such as ORDER BY and GROUP BY.\n\nThere are two internally calculated date values based on when the table is created and, for an incremental model, when data was inserted.\n\n```sql\nWITH my_cte AS (...)\n\n{{ dbt_audit(\n    cte_ref=\"my_cte\", \n    created_by=\"@gitlab_user1\", \n    updated_by=\"@gitlab_user2\", \n    created_date=\"2019-02-12\", \n    updated_date=\"2020-08-20\"\n) }}\n\nORDER BY updated_at\n```","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"cte_ref","type":"string","description":"The CTE immediately preceding the macro call"},{"name":"created_by","type":"string","description":"The GitLab handle of the original model creator"},{"name":"updated_by","type":"string","description":"The GitLab handle of the model editor"},{"name":"created_date","type":"date","description":"Manually input ISO date of when model was original created"},{"name":"updated_date","type":"date","description":"Manually input ISO date of when model was updated"}],"created_at":1689033766.0350642},{"unique_id":"macro.gitlab_snowflake.ref","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/override/ref.sql","original_file_path":"macros/utils/override/ref.sql","name":"ref","macro_sql":"{% macro ref(model_name) %}\n\n  {% set relation = builtins.ref(model_name) %}\n\n  {% if is_table_sampled(model_name) %}\n    {% set new_relation = get_sample_relation(relation) %}\n  {% else %}\n    {% set new_relation = relation %}\n  {% endif %}\n  \n  {% do return(new_relation) %}\n\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.is_table_sampled","macro.gitlab_snowflake.get_sample_relation"]},"description":"This macro will return a the normal relation unless one of the following conditions are met:\n- The table is configured to be sampled, will return relation with the sample_suffix variable appended to the table name","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/override/override.yml","arguments":[],"created_at":1689033766.060527},{"unique_id":"macro.dbt_utils.star","package_name":"dbt_utils","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt/dbt_packages/dbt_utils","path":"macros/sql/star.sql","original_file_path":"macros/sql/star.sql","name":"star","macro_sql":"{% macro star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix)) }}\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt_utils.default__star"]},"description":"","meta":{},"docs":{"show":true},"patch_path":null,"arguments":[],"created_at":1689033675.9787252}]},"node":{"resource_type":"model","name":"dim_crm_user","unique_id":"model.gitlab_snowflake.dim_crm_user"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L2a",null,{"versions":{"Source":"-- depends_on: {{ ref('prep_crm_user') }}\n{{ config(\n    tags=[\"six_hourly\"]\n) }}\n\nWITH final AS (\n\n    SELECT \n      {{ dbt_utils.star(\n           from=ref('prep_crm_user'), \n           except=['CREATED_BY','UPDATED_BY','MODEL_CREATED_DATE','MODEL_UPDATED_DATE','DBT_UPDATED_AT','DBT_CREATED_AT']\n           ) \n      }}\n    FROM {{ ref('prep_crm_user') }}\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@mcooperDD\",\n    updated_by=\"@chrissharp\",\n    created_date=\"2020-11-20\",\n    updated_date=\"2023-05-04\"\n) }}","Compiled":"$2b"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
