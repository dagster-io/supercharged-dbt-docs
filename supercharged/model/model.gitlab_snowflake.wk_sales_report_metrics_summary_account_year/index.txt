1:HL["/supercharged-dbt-docs/supercharged/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css",{"as":"style"}]
0:["3_N3LAWgtmWGg2et9V1N1",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/supercharged-dbt-docs/supercharged/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_5f725a","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ColumnDetails","async":false}
12:I{"id":9941,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ReferenceListClient","async":false}
29:I{"id":4431,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:Tf40e,{{ config(alias='report_metrics_summary_account_year') }}

-- TODO: 20221208 TAM fields need to refactored as they are not called TAM anymore

WITH date_details AS (

    SELECT *
    --FROM  prod.workspace_sales.date_details
    FROM {{ ref('wk_sales_date_details') }}

 ), sfdc_opportunity_xf AS (

    SELECT *
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_xf
    FROM {{ref('wk_sales_sfdc_opportunity_xf')}}
    WHERE is_deleted = 0
      AND is_edu_oss = 0
      AND is_jihu_account = 0

 ), sfdc_opportunity_snapshot_xf AS (

    SELECT h.*
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf AS h
    FROM {{ref('wk_sales_sfdc_opportunity_snapshot_history_xf')}} h
    INNER JOIN date_details snapshot_date
      ON snapshot_date.date_actual = h.snapshot_date
    WHERE h.is_deleted = 0
      AND h.is_edu_oss = 0
      AND h.is_jihu_account = 0
      -- same day of FY across years
      AND snapshot_date.day_of_fiscal_year_normalised = (SELECT DISTINCT day_of_fiscal_year_normalised
                                                          FROM date_details
                                                          WHERE date_actual = DATEADD(day, -2, CURRENT_DATE))
 ), mart_available_to_renew AS (

    SELECT renew.*,
        renew_date.first_day_of_fiscal_quarter  AS renew_fiscal_quarter_date,
        renew_date.fiscal_quarter_name_fy       AS renew_fiscal_quarter_name,
        renew_date.fiscal_quarter               AS renew_fiscal_quarter_number
    FROM {{ref('mart_available_to_renew')}} renew
    --FROM prod.restricted_safe_common_mart_finance.mart_available_to_renew
    LEFT JOIN date_details renew_date
        ON renew_date.date_actual = renew.renewal_month
    
 ), dim_subscription AS (

    SELECT
      dim_subscription_id,
      CASE
          WHEN dim_billing_account_id_invoice_owner_account != dim_billing_account_id
              THEN 1
          ELSE 0
      END AS is_channel_arr_flag
    --FROM prod.common.dim_subscription
    FROM {{ ref('dim_subscription') }}

 ), mart_arr AS (

    SELECT *
    --FROM prod.restricted_safe_common_mart_sales.mart_arr
    FROM {{ref('mart_arr')}}   

  ), raw_account AS (
  
    SELECT *
    FROM {{ source('salesforce', 'account') }}
    --FROM raw.salesforce_stitch.account 

  -- missing fields in mart crm account so adding dim_crm_account cte here on top of the mart below
  ), dim_crm_account AS (

    SELECT *
    --FROM prod.restricted_safe_common.dim_crm_account
    FROM {{ref('dim_crm_account')}}

    -- missing fields in dim_crm_account so adding raw account here
  -- has_tam__c
  -- PUBLIC_SECTOR_ACCOUNT__C,
  -- PUBSEC_TYPE__C,
  -- POTENTIAL_ARR_LAM__C
  -- BILLINGSTATE
  -- customer_score__c
  ), mart_crm_account AS (

    SELECT acc.*,
        raw.has_tam__c                              AS has_tam_flag,
        raw.public_sector_account__c                AS public_sector_account_flag,
        raw.pubsec_type__c                          AS pubsec_type,
        raw.lam_tier__c                             AS potential_lam_arr,
        raw.billingstatecode                        AS account_billing_state,
        raw.customer_score__c                       AS customer_score,
        raw.account_demographics_territory__c       AS account_demographics_territory,
        raw.account_demographics_upa_state__c       AS account_demographics_upa_state_code,
        raw.account_demographics_upa_state_name__c  AS account_demographics_upa_state_name
    --FROM prod.restricted_safe_common_mart_sales.mart_crm_account acc
    FROM {{ref('mart_crm_account')}} acc
    LEFT JOIN raw_account raw
      ON raw.id = acc.dim_crm_account_id
    
  ), sfdc_accounts_xf AS (

    SELECT *
    --FROM prod.restricted_safe_legacy.sfdc_accounts_xf
    FROM {{ref('sfdc_accounts_xf')}}

  ), sfdc_users_xf AS (

    SELECT *,
       CASE
            WHEN lower(title) like '%strategic account%'
                OR lower(title) like '%account executive%'
                OR lower(title) like '%country manager%'
                OR lower(title) like '%public sector channel manager%'
                THEN 'Rep'
            WHEN lower(title) like '%area sales manager%'
                THEN 'ASM'
            ELSE 'Other'
      END                                       AS title_category
    --FROM prod.workspace_sales.sfdc_users_xf
    FROM {{ref('wk_sales_sfdc_users_xf')}}

  ), report_dates AS (

    SELECT DISTINCT fiscal_year         AS report_fiscal_year,
                    first_day_of_month  AS report_month_date
    FROM prod.workspace_sales.date_details
    CROSS JOIN (SELECT current_date AS today_date)
    WHERE fiscal_year > 2021
        AND month_actual = MONTH(today_date)
        AND date_actual < today_date

  ), account_year_key AS (

    SELECT DISTINCT
      a.dim_crm_account_id AS account_id,
      d.report_fiscal_year,
      d.report_month_date
  FROM dim_crm_account AS a
  CROSS JOIN report_dates AS d

  ), nfy_atr_base AS (

    SELECT 
        dim_crm_account_id      AS account_id,
        report_dates.report_fiscal_year,
        SUM(arr)                AS nfy_atr,
         SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 1
            THEN arr
          ELSE 0
        END)                    AS nfy_q1_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 2
            THEN arr
          ELSE 0
        END)                    AS nfy_q2_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 3
            THEN arr
          ELSE 0
        END)                    AS nfy_q3_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 4
            THEN arr
          ELSE 0
        END)                    AS nfy_q4_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    AND atr.fiscal_year = report_dates.report_fiscal_year + 1
    GROUP BY 1,2
    
), last_12m_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
    
        SUM(arr)                AS last_12m_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.renewal_month < report_dates.report_month_date
    AND atr.renewal_month >= DATEADD(month,-12,report_dates.report_month_date)
    GROUP BY 1,2
    
), fy_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
        SUM(arr)                AS fy_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.fiscal_year = report_dates.report_fiscal_year
    GROUP BY 1,2


-- Rolling 1 year Net ARR
), net_arr_last_12m AS (
  -- net_arr_ttm

    SELECT
      o.account_id,
      d.report_fiscal_year          AS report_fiscal_year,
      SUM(o.net_arr)                AS last_12m_booked_net_arr,   -- ttm_net_arr
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.net_arr
            ELSE 0
          END)          AS last_12m_booked_non_web_net_arr,  -- ttm_non_web_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_web_direct_sourced_net_arr,  --ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_sourced_net_arr,  -- ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_sdr_sourced_net_arr,  -- ttm_sdr_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_ae_sourced_net_arr,  -- ttm_ae_sourced_net_arr
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
               THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_churn_contraction_net_arr,  -- ttm_churn_contraction_net_arr

       -- FO year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_fo_net_arr,  -- ttm_fo_net_arr

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_new_connected_net_arr, -- ttm_new_connected_net_arr

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_growth_net_arr,   --ttm_growth_net_arr

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_direct_net_arr,   --ttm_direct_net_arr

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_net_arr,   --ttm_channel_net_arr

        SUM (CASE
            WHEN o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_deal_count,  --ttm_deal_count

         SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_count,  -- ttm_trx_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 5000)
                        OR o.net_arr > 5000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_5k_count,   -- ttm_trx_over_5k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 10000)
                        OR o.net_arr > 10000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_10k_count,  -- ttm_trx_over_10k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 50000)
                        OR o.net_arr > 50000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_50k_count,  -- ttm_trx_over_50k_count

          SUM (CASE
            WHEN o.is_renewal = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_renewal_deal_count,   -- ttm_renewal_deal_count

        SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
                AND o.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Contract Reset','Contract Reset/Ramp Deal')
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_churn_contraction_deal_count,  -- ttm_churn_contraction_deal_count

          -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_direct_deal_count,  -- ttm_direct_deal_count

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_channel_deal_count  -- ttm_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    CROSS JOIN report_dates AS d
    WHERE o.close_date BETWEEN DATEADD(month, -12,DATE_TRUNC('month',d.report_month_date)) and DATE_TRUNC('month',d.report_month_date)
        AND o.booked_net_arr <> 0
    GROUP BY 1, 2
    
  -- total booked net arr in fy
  ), fy_net_arr AS (

    SELECT
      o.account_id,
      o.close_fiscal_year   AS report_fiscal_year,
      SUM(o.booked_net_arr) AS fy_booked_net_arr,
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.booked_net_arr
            ELSE 0
          END)          AS fy_booked_non_web_booked_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_sdr_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_ae_sourced_net_arr,
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_churn_contraction_net_arr,

        -- First Order year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_fo_net_arr,

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_new_connected_net_arr,

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_growth_net_arr,

        SUM(o.calculated_deal_count)   AS fy_booked_deal_count,

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_direct_net_arr,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_net_arr,

         -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_direct_deal_count,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    WHERE o.booked_net_arr <> 0
    GROUP BY 1,2

  -- Total open pipeline at the same point in previous fiscal years (total open pipe)
  ), op_forward_one_year AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year        AS report_fiscal_year,
      -- net arr pipeline
      SUM(h.net_arr)                AS total_open_pipe,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_open_pipeline,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_open_pipeline,
      
      -- deal count pipeline
      SUM(h.calculated_deal_count)   AS total_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_count_open_deals
      
    FROM sfdc_opportunity_snapshot_xf AS h
    WHERE h.close_date > h.snapshot_date
      AND h.forecast_category_name NOT IN  ('Omitted','Closed')
      AND h.order_type_stamped != '7. PS / Other'
      AND h.net_arr != 0
      AND h.is_eligible_open_pipeline_flag = 1
      GROUP BY 1,2

  -- Last 12 months pipe gen at same point of time in the year
  ), pg_last_12_months AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_last_12m_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_ae_sourced_net_arr,

      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_deal_count,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_channel_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_ae_sourced_deal_count

    FROM sfdc_opportunity_snapshot_xf AS h

    -- pipeline created within the last 12 months
    WHERE
        h.pipeline_created_date > dateadd(month,-12,h.snapshot_date)
      AND h.pipeline_created_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
    GROUP BY 1,2

  -- Pipe generation at the same point in time in the fiscal year
  ), pg_ytd AS (

    SELECT
      h.account_id,
      h.net_arr_created_fiscal_year  AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_ytd_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_ae_sourced_net_arr
    FROM sfdc_opportunity_snapshot_xf AS h
      -- pipeline created within the fiscal year
    WHERE h.snapshot_fiscal_year = h.net_arr_created_fiscal_year
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
      AND h.net_arr > 0
      GROUP BY 1,2

  -- ARR at the same point in time in Fiscal Year
  ), arr_at_same_month AS (

    SELECT
      mrr.dim_crm_account_id AS account_id,
      mrr_date.fiscal_year   AS report_fiscal_year,
  --    ultimate_parent_account_id,
      SUM(mrr.mrr)      AS mrr,
      SUM(mrr.arr)      AS arr,
      SUM(CASE
              WHEN sub.is_channel_arr_flag = 1
                  THEN mrr.arr
              ELSE 0
          END)          AS reseller_arr,
      SUM(CASE
              WHEN  sub.is_channel_arr_flag = 0
                  THEN mrr.arr
              ELSE 0
          END)          AS direct_arr,


      SUM(CASE
              WHEN  (mrr.product_tier_name LIKE '%Starter%'
                      OR mrr.product_tier_name LIKE '%Bronze%')
                  THEN mrr.arr
              ELSE 0
          END)          AS product_starter_arr,


      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Premium%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_premium_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Ultimate%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_ultimate_arr,

      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Self-Managed%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_self_managed_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%SaaS%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_saas_arr

    FROM mart_arr AS mrr
    INNER JOIN date_details AS mrr_date
      ON mrr.arr_month = mrr_date.date_actual
    INNER JOIN dim_subscription AS sub
      ON sub.dim_subscription_id = mrr.dim_subscription_id
    WHERE mrr_date.month_actual =  (SELECT DISTINCT month_actual
                                      FROM date_details
                                      WHERE date_actual = DATE_TRUNC('month', DATEADD(month, -1, CURRENT_DATE)))
    GROUP BY 1,2

), sao_last_12_month AS (
   
  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS last_12m_sao_deal_count,
        SUM(h.net_arr)                  AS last_12m_sao_net_arr,
        SUM(h.booked_net_arr)           AS last_12m_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
        h.sales_accepted_date > dateadd(month,-12,h.snapshot_date)
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), sao_fy AS (      

  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS fy_sao_deal_count,
        SUM(h.net_arr)                  AS fy_sao_net_arr,
        SUM(h.booked_net_arr)           AS fy_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
       h.snapshot_fiscal_year = h.sales_accepted_fiscal_year
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), consolidated_accounts AS (

  SELECT
    ak.report_fiscal_year,
    a.account_id                      AS account_id,
    a.account_name                    AS account_name,
    a.ultimate_parent_account_id      AS upa_id,
    a.ultimate_parent_account_name    AS upa_name,
    a.is_key_account,
    a.abm_tier,
    a.ultimate_parent_account_id,
    u.name                              AS account_owner_name,
    a.owner_id                          AS account_owner_id,
    trim(u.employee_number)             AS account_owner_employee_number,
    upa_owner.name                      AS upa_owner_name,
    upa_owner.user_id                   AS upa_owner_id,
    upa_owner.title_category            AS upa_owner_title_category,
    trim(upa_owner.employee_number)     AS upa_owner_employee_number,
    a.billing_country                   AS account_country,
    a.billing_postal_code               AS account_zip_code,
    mart_crm_account.account_billing_state AS account_state,

    
    -- Account demographics fields
    upa_account.parent_crm_account_sales_segment                    AS parent_crm_account_sales_segment,
    upa_account.parent_crm_account_geo                              AS parent_crm_account_geo,
    upa_account.parent_crm_account_region                           AS parent_crm_account_region,
    upa_account.parent_crm_account_area                             AS parent_crm_account_area,
    upa_account.crm_account_billing_country                         AS crm_account_billing_country,  
    upa_account.parent_crm_account_upa_state                        AS parent_crm_account_upa_state,
    upa_account.parent_crm_account_upa_city                         AS parent_crm_account_upa_city,
    upa_account.parent_crm_account_upa_postal_code                  AS parent_crm_account_upa_postal_code,
    upa_account.parent_crm_account_territory                        AS parent_crm_account_territory,

    
    -- substitute this by key segment
    u.user_geo                                    AS account_user_geo,
    u.user_region                                 AS account_user_region,
    u.user_segment                                AS account_user_segment,
    u.user_area                                   AS account_user_area,
    u.role_name                                   AS account_owner_role,
    u.title_category                              AS account_owner_title_category,
    a.industry                                    AS account_industry,
    upa_owner.user_geo                            AS upa_user_geo,
    upa_owner.user_region                         AS upa_user_region,
    upa_owner.user_segment                        AS upa_user_segment,
    upa_owner.user_area                           AS upa_user_area,
    upa_owner.role_name                           AS upa_user_role,
    upa.industry                                  AS upa_industry,
    
    -- NF: These fields are only useful to calculate LAM Dev Count which is already calculated
    coalesce(mart_crm_account.potential_users, 0)                               AS potential_users,
    coalesce(mart_crm_account.number_of_licenses_this_account, 0)               AS licenses,
    coalesce(mart_crm_account.decision_maker_count_linkedin, 0)                 AS linkedin_developer,
    coalesce(mart_crm_account.crm_account_zoom_info_number_of_developers, 0)    AS zi_developers,
    coalesce(mart_crm_account.zoom_info_company_revenue, 0)                     AS zi_revenue,


    -- LAM Dev count calculated at the UPA level
    upa_account.parent_crm_account_lam_dev_count                       AS upa_lam_dev_count,
    mart_crm_account.public_sector_account_flag,
    mart_crm_account.pubsec_type,
    mart_crm_account.potential_lam_arr,
    coalesce(mart_crm_account.crm_account_employee_count, 0)   AS employees,
    
    COALESCE(mart_crm_account.carr_account_family, 0)                       AS account_family_arr,
    LEAST(50000,GREATEST(coalesce(mart_crm_account.number_of_licenses_this_account,0),COALESCE(mart_crm_account.potential_users, mart_crm_account.decision_maker_count_linkedin, mart_crm_account.crm_account_zoom_info_number_of_developers, 0)))           AS calculated_developer_count,

    -- Account score used to balance patches in maps
    mart_crm_account.customer_score,


    -- TODO: 20221208 They are not called TAMs anymore, this part needs to be refactored
    a.technical_account_manager_date,
    a.technical_account_manager                                             AS technical_account_manager_name,
    CASE
      WHEN mart_crm_account.has_tam_flag
          THEN 1
      ELSE 0
    END                                           AS has_technical_account_manager_flag,

    a.health_score_color                          AS account_health_score_color,
    a.health_number                               AS account_health_number,

    -- atr for current fy
    COALESCE(fy_atr_base.fy_atr,0)           AS fy_atr,
    -- next fiscal year atr base reported at fy
    COALESCE(nfy_atr_base.nfy_atr,0)         AS nfy_atr,
    COALESCE(nfy_atr_base.nfy_q1_atr,0)      AS nfy_q1_atr,
    COALESCE(nfy_atr_base.nfy_q2_atr,0)      AS nfy_q2_atr,
    COALESCE(nfy_atr_base.nfy_q3_atr,0)      AS nfy_q3_atr,
    COALESCE(nfy_atr_base.nfy_q4_atr,0)      AS nfy_q4_atr,
    -- last 12 months ATR
    COALESCE(last_12m_atr_base.last_12m_atr,0)    AS last_12m_atr,

    -- arr by fy
    COALESCE(arr.arr,0)                           AS arr,

    COALESCE(arr.reseller_arr,0)                  AS arr_channel,
    COALESCE(arr.direct_arr,0)                    AS arr_direct,

    COALESCE(arr.product_starter_arr,0)           AS product_starter_arr,
    COALESCE(arr.product_premium_arr,0)           AS product_premium_arr,
    COALESCE(arr.product_ultimate_arr,0)          AS product_ultimate_arr,


    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) > COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_ultimate_customer_flag,

    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) < COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_premium_customer_flag,

    COALESCE(arr.delivery_self_managed_arr,0)     AS delivery_self_managed_arr,
    COALESCE(arr.delivery_saas_arr,0)             AS delivery_saas_arr,

    -- accounts counts
    CASE
      WHEN COALESCE(arr.arr,0) = 0
      THEN 1
      ELSE 0
    END                                           AS is_prospect_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
      THEN 1
      ELSE 0
    END                                           AS is_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 5000
      THEN 1
      ELSE 0
    END                                           AS is_over_5k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 10000
      THEN 1
      ELSE 0
    END                                           AS is_over_10k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 50000
      THEN 1
      ELSE 0
    END                                           AS is_over_50k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 100000
      THEN 1
      ELSE 0
    END                                           AS is_over_100k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 500000
      THEN 1
      ELSE 0
    END                                           AS is_over_500k_customer_flag,

    -- rolling last 12 months booked net arr
    COALESCE(net_arr_last_12m.last_12m_booked_net_arr,0)                       AS last_12m_booked_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_non_web_net_arr,0)               AS last_12m_booked_non_web_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_web_direct_sourced_net_arr,0)    AS last_12m_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)       AS last_12m_booked_channel_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_sdr_sourced_net_arr,0)           AS last_12m_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_ae_sourced_net_arr,0)            AS last_12m_booked_ae_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_net_arr,0)     AS last_12m_booked_churn_contraction_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_fo_net_arr,0)                    AS last_12m_booked_fo_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_new_connected_net_arr,0)         AS last_12m_booked_new_connected_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_growth_net_arr,0)                AS last_12m_booked_growth_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_deal_count,0)                    AS last_12m_booked_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_net_arr,0)                AS last_12m_booked_direct_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)               AS last_12m_booked_channel_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)  - COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)   AS last_12m_booked_channel_co_sell_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_deal_count,0)             AS last_12m_booked_direct_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_deal_count,0)            AS last_12m_booked_channel_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_deal_count,0)  AS last_12m_booked_churn_contraction_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_renewal_deal_count,0)            AS last_12m_booked_renewal_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_count,0)                     AS last_12m_booked_trx_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_5k_count,0)             AS last_12m_booked_trx_over_5k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_10k_count,0)            AS last_12m_booked_trx_over_10k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_50k_count,0)            AS last_12m_booked_trx_over_50k_count,

    -- fy booked net arr
    COALESCE(net_arr_fiscal.fy_booked_net_arr,0)                     AS fy_booked_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_web_direct_sourced_net_arr,0)  AS fy_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_sourced_net_arr,0)     AS fy_booked_channel_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_sdr_sourced_net_arr,0)         AS fy_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_ae_sourced_net_arr,0)          AS fy_booked_ae_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_churn_contraction_net_arr,0)   AS fy_booked_churn_contraction_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_fo_net_arr,0)                  AS fy_booked_fo_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_new_connected_net_arr,0)       AS fy_booked_new_connected_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_growth_net_arr,0)              AS fy_booked_growth_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_deal_count,0)                  AS fy_booked_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_direct_net_arr,0)              AS fy_booked_direct_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_net_arr,0)             AS fy_booked_channel_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_direct_deal_count,0)           AS fy_booked_direct_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_channel_deal_count,0)          AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    COALESCE(op.total_open_pipe,0)                  AS total_open_pipe,
    COALESCE(op.total_count_open_deals,0)           AS total_count_open_deals_pipe,
    COALESCE(op.nfy_open_pipeline,0)                AS nfy_open_pipeline,
    COALESCE(op.fy_open_pipeline,0)                 AS fy_open_pipeline,
    COALESCE(op.nfy_count_open_deals,0)             AS nfy_count_open_deals,
    COALESCE(op.fy_count_open_deals,0)              AS fy_count_open_deals,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS customer_has_open_pipe_flag,

    CASE
      WHEN COALESCE(arr.arr,0) = 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS prospect_has_open_pipe_flag,

    -- pipe generation
    COALESCE(pg.pg_ytd_net_arr,0)                             AS pg_ytd_net_arr,
    COALESCE(pg.pg_ytd_web_direct_sourced_net_arr,0)          AS pg_ytd_web_direct_sourced_net_arr,
    COALESCE(pg.pg_ytd_channel_sourced_net_arr,0)             AS pg_ytd_channel_sourced_net_arr,
    COALESCE(pg.pg_ytd_sdr_sourced_net_arr,0)                 AS pg_ytd_sdr_sourced_net_arr,
    COALESCE(pg.pg_ytd_ae_sourced_net_arr,0)                  AS pg_ytd_ae_sourced_net_arr,

    COALESCE(pg_ly.pg_last_12m_net_arr,0)                     AS pg_last_12m_net_arr,
    COALESCE(pg_ly.pg_last_12m_web_direct_sourced_net_arr,0)  AS pg_last_12m_web_direct_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_channel_sourced_net_arr,0)     AS pg_last_12m_channel_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_sdr_sourced_net_arr,0)         AS pg_last_12m_sdr_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_ae_sourced_net_arr,0)          AS pg_last_12m_ae_sourced_net_arr,

    COALESCE(pg_last_12m_web_direct_sourced_deal_count,0)     AS pg_last_12m_web_direct_sourced_deal_count,
    COALESCE(pg_last_12m_channel_sourced_deal_count,0)        AS pg_last_12m_channel_sourced_deal_count,
    COALESCE(pg_last_12m_sdr_sourced_deal_count,0)            AS pg_last_12m_sdr_sourced_deal_count,
    COALESCE(pg_last_12m_ae_sourced_deal_count,0)             AS pg_last_12m_ae_sourced_deal_count,
    
    -- SAO metrics
    COALESCE(sao_last_12_month.last_12m_sao_deal_count,0)       AS last_12m_sao_deal_count,
    COALESCE(sao_last_12_month.last_12m_sao_net_arr,0)          AS last_12m_sao_net_arr,
    COALESCE(sao_last_12_month.last_12m_sao_booked_net_arr,0)   AS last_12m_sao_booked_net_arr, 
    COALESCE(sao_fy.fy_sao_deal_count,0)                        AS fy_sao_deal_count,
    COALESCE(sao_fy.fy_sao_net_arr,0)                           AS fy_sao_net_arr,
    COALESCE(sao_fy.fy_sao_booked_net_arr,0)                    AS fy_sao_booked_net_arr,
    
     -- LAM Dev Count Category
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN '0. <100'    
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN '1. [100-250)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN '2. [250-500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN '3. [500-1500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN '4. [1500-2500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN '5. [2500-3500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN '6. [3500-5000)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN '7. >5000'
    END AS lam_dev_count_bin_name,
    
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN 0
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN 100
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN 250
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN 500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN 1500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN 2500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN 3500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN 5000
    END AS lam_dev_count_bin_rank,      
    
    -- Public Sector
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 'Public'
        ELSE 'Private'
    END                     AS sector_type,
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 1
        ELSE 0
    END                     AS is_public_sector_flag

  FROM account_year_key AS ak
  INNER JOIN sfdc_accounts_xf AS a
    ON ak.account_id = a.account_id
  LEFT JOIN mart_crm_account AS upa_account
    ON a.ultimate_parent_account_id = upa_account.dim_crm_account_id
  LEFT JOIN sfdc_accounts_xf AS upa
    ON a.ultimate_parent_account_id = upa.account_id
  LEFT JOIN dim_crm_account AS dim_account
    ON ak.account_id = dim_account.dim_crm_account_id
  LEFT JOIN mart_crm_account
    ON ak.account_id = mart_crm_account.dim_crm_account_id
  LEFT JOIN sfdc_users_xf AS u
    ON a.owner_id = u.user_id
  LEFT JOIN sfdc_users_xf AS upa_owner
    ON upa.owner_id = upa_owner.user_id
  LEFT JOIN fy_atr_base
    ON fy_atr_base.account_id = ak.account_id
    AND fy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN last_12m_atr_base AS last_12m_atr_base
    ON last_12m_atr_base.account_id = ak.account_id
    AND last_12m_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN nfy_atr_base
    ON nfy_atr_base.account_id = ak.account_id
    AND nfy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN net_arr_last_12m
    ON net_arr_last_12m.account_id = ak.account_id
    AND net_arr_last_12m.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN op_forward_one_year AS op
    ON op.account_id = ak.account_id
    AND op.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_ytd AS pg
    ON pg.account_id = ak.account_id
    AND pg.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_last_12_months AS pg_ly
    ON pg_ly.account_id = ak.account_id
    AND pg_ly.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN arr_at_same_month AS arr
    ON arr.account_id = ak.account_id
    AND arr.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN fy_net_arr AS net_arr_fiscal
    ON net_arr_fiscal.account_id = ak.account_id
    AND net_arr_fiscal.report_fiscal_year = ak.report_fiscal_year
  -- SAOs
  LEFT JOIN sao_last_12_month 
    ON sao_last_12_month.account_id = ak.account_id
    AND sao_last_12_month.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN sao_fy
    ON sao_fy.account_id = ak.account_id
    AND sao_fy.report_fiscal_year = ak.report_fiscal_year

    -----------------------
-- Adjust for hierarchies split between different geos
), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    parent_crm_account_upa_state              AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM consolidated_accounts
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM consolidated_accounts child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM consolidated_accounts final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final
------------------------

), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_state 
        ELSE acc.parent_crm_account_upa_state
    END                                     AS upa_ad_state,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,
    
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,

    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    
    -- Customer score used in maps for account visualization
    MAX(acc.customer_score) AS customer_score,
    
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM consolidated_accounts acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)
, final AS (

  SELECT
      
    acc.*, 
    
    CASE 
      WHEN upa.arr > 0 AND upa.arr < 5000
        THEN '1. 0-5k ARR'
      WHEN upa.arr >= 5000 AND upa.arr < 10000
        THEN '2. 0-10k ARR'
      WHEN upa.arr >= 10000 AND upa.arr < 50000
        THEN '3. 10k-50k ARR'
      WHEN upa.arr >= 50000 AND upa.arr < 100000
        THEN '4. 50K-100k ARR'
      WHEN upa.arr >= 100000 AND upa.arr < 500000
        THEN '5. 100k-500k ARR'
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '6. 500k-1M ARR'     
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '7. >=1M ARR' 
      ELSE 'n/a'
    END    AS account_family_arr_bin_name,
    
    COALESCE(upa.potential_users,0)                 AS upa_potential_users,
    COALESCE(upa.licenses,0)                        AS upa_licenses,
    COALESCE(upa.linkedin_developer,0)              AS upa_linkedin_developer,
    COALESCE(upa.zi_developers,0)                   AS upa_zi_developers,
    COALESCE(upa.zi_revenue,0)                      AS upa_zi_revenue,
    COALESCE(upa.employees,0)                       AS upa_employees,
    COALESCE(upa.count_of_customers,0)              AS upa_count_of_customers,

    CASE
        WHEN upa.upa_id = acc.account_id
            THEN 1
        ELSE 0
    END                                     AS is_upa_flag,

    upa.is_customer_flag                    AS hierarchy_is_customer_flag,
    
    COALESCE(virtual.virtual_upa_id,acc.upa_id)                             AS virtual_upa_id,
    COALESCE(virtual.virtual_upa_name,acc.upa_name)                         AS virtual_upa_name,
    COALESCE(virtual.virtual_upa_segment,acc.parent_crm_account_sales_segment)                AS virtual_upa_ad_segment,
    COALESCE(virtual.virtual_upa_geo,acc.upa_user_geo)                      AS virtual_upa_geo,
    COALESCE(virtual.virtual_upa_region,acc.upa_user_region)                AS virtual_upa_region,
    COALESCE(virtual.virtual_upa_area,acc.upa_user_area)                    AS virtual_upa_area,
    COALESCE(virtual.virtual_upa_country,acc.crm_account_billing_country)   AS virtual_upa_ad_country,
    COALESCE(virtual.virtual_upa_state,acc.parent_crm_account_upa_state)    AS virtual_upa_ad_state,
    COALESCE(virtual.virtual_upa_zip_code,acc.parent_crm_account_upa_postal_code) AS virtual_upa_ad_zip_code,
    COALESCE(virtual.virtual_upa_industry,acc.upa_industry)                 AS virtual_upa_industry,
    COALESCE(virtual.virtual_upa_owner_name,acc.upa_owner_name)             AS virtual_upa_owner_name,
    COALESCE(virtual.virtual_upa_owner_title_category,acc.upa_owner_title_category)   AS virtual_upa_owner_title_category,
    COALESCE(virtual.virtual_upa_owner_id,acc.upa_owner_id)                 AS virtual_upa_owner_id, 
    CASE 
        WHEN virtual.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                                                     AS virtual_upa_type

  FROM consolidated_accounts acc
    LEFT JOIN consolidated_upa upa
        ON upa.upa_id = acc.upa_id
        AND upa.report_fiscal_year = acc.report_fiscal_year
    LEFT JOIN final_virtual_upa virtual
        ON virtual.account_id = acc.account_id
        AND virtual.report_fiscal_year = acc.report_fiscal_year

)

SELECT *
FROM final11:Tf47c,

-- TODO: 20221208 TAM fields need to refactored as they are not called TAM anymore

WITH date_details AS (

    SELECT *
    --FROM  prod.workspace_sales.date_details
    FROM "PROD".workspace_sales.date_details

 ), sfdc_opportunity_xf AS (

    SELECT *
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_xf
    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_xf
    WHERE is_deleted = 0
      AND is_edu_oss = 0
      AND is_jihu_account = 0

 ), sfdc_opportunity_snapshot_xf AS (

    SELECT h.*
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf AS h
    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf h
    INNER JOIN date_details snapshot_date
      ON snapshot_date.date_actual = h.snapshot_date
    WHERE h.is_deleted = 0
      AND h.is_edu_oss = 0
      AND h.is_jihu_account = 0
      -- same day of FY across years
      AND snapshot_date.day_of_fiscal_year_normalised = (SELECT DISTINCT day_of_fiscal_year_normalised
                                                          FROM date_details
                                                          WHERE date_actual = DATEADD(day, -2, CURRENT_DATE))
 ), mart_available_to_renew AS (

    SELECT renew.*,
        renew_date.first_day_of_fiscal_quarter  AS renew_fiscal_quarter_date,
        renew_date.fiscal_quarter_name_fy       AS renew_fiscal_quarter_name,
        renew_date.fiscal_quarter               AS renew_fiscal_quarter_number
    FROM "PROD".restricted_safe_common_mart_finance.mart_available_to_renew renew
    --FROM prod.restricted_safe_common_mart_finance.mart_available_to_renew
    LEFT JOIN date_details renew_date
        ON renew_date.date_actual = renew.renewal_month
    
 ), dim_subscription AS (

    SELECT
      dim_subscription_id,
      CASE
          WHEN dim_billing_account_id_invoice_owner_account != dim_billing_account_id
              THEN 1
          ELSE 0
      END AS is_channel_arr_flag
    --FROM prod.common.dim_subscription
    FROM "PROD".common.dim_subscription

 ), mart_arr AS (

    SELECT *
    --FROM prod.restricted_safe_common_mart_sales.mart_arr
    FROM "PROD".restricted_safe_common_mart_sales.mart_arr   

  ), raw_account AS (
  
    SELECT *
    FROM "RAW".salesforce_stitch.account
    --FROM raw.salesforce_stitch.account 

  -- missing fields in mart crm account so adding dim_crm_account cte here on top of the mart below
  ), dim_crm_account AS (

    SELECT *
    --FROM prod.restricted_safe_common.dim_crm_account
    FROM "PROD".restricted_safe_common.dim_crm_account

    -- missing fields in dim_crm_account so adding raw account here
  -- has_tam__c
  -- PUBLIC_SECTOR_ACCOUNT__C,
  -- PUBSEC_TYPE__C,
  -- POTENTIAL_ARR_LAM__C
  -- BILLINGSTATE
  -- customer_score__c
  ), mart_crm_account AS (

    SELECT acc.*,
        raw.has_tam__c                              AS has_tam_flag,
        raw.public_sector_account__c                AS public_sector_account_flag,
        raw.pubsec_type__c                          AS pubsec_type,
        raw.lam_tier__c                             AS potential_lam_arr,
        raw.billingstatecode                        AS account_billing_state,
        raw.customer_score__c                       AS customer_score,
        raw.account_demographics_territory__c       AS account_demographics_territory,
        raw.account_demographics_upa_state__c       AS account_demographics_upa_state_code,
        raw.account_demographics_upa_state_name__c  AS account_demographics_upa_state_name
    --FROM prod.restricted_safe_common_mart_sales.mart_crm_account acc
    FROM "PROD".restricted_safe_common_mart_sales.mart_crm_account acc
    LEFT JOIN raw_account raw
      ON raw.id = acc.dim_crm_account_id
    
  ), sfdc_accounts_xf AS (

    SELECT *
    --FROM prod.restricted_safe_legacy.sfdc_accounts_xf
    FROM "PROD".restricted_safe_legacy.sfdc_accounts_xf

  ), sfdc_users_xf AS (

    SELECT *,
       CASE
            WHEN lower(title) like '%strategic account%'
                OR lower(title) like '%account executive%'
                OR lower(title) like '%country manager%'
                OR lower(title) like '%public sector channel manager%'
                THEN 'Rep'
            WHEN lower(title) like '%area sales manager%'
                THEN 'ASM'
            ELSE 'Other'
      END                                       AS title_category
    --FROM prod.workspace_sales.sfdc_users_xf
    FROM "PROD".workspace_sales.sfdc_users_xf

  ), report_dates AS (

    SELECT DISTINCT fiscal_year         AS report_fiscal_year,
                    first_day_of_month  AS report_month_date
    FROM prod.workspace_sales.date_details
    CROSS JOIN (SELECT current_date AS today_date)
    WHERE fiscal_year > 2021
        AND month_actual = MONTH(today_date)
        AND date_actual < today_date

  ), account_year_key AS (

    SELECT DISTINCT
      a.dim_crm_account_id AS account_id,
      d.report_fiscal_year,
      d.report_month_date
  FROM dim_crm_account AS a
  CROSS JOIN report_dates AS d

  ), nfy_atr_base AS (

    SELECT 
        dim_crm_account_id      AS account_id,
        report_dates.report_fiscal_year,
        SUM(arr)                AS nfy_atr,
         SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 1
            THEN arr
          ELSE 0
        END)                    AS nfy_q1_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 2
            THEN arr
          ELSE 0
        END)                    AS nfy_q2_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 3
            THEN arr
          ELSE 0
        END)                    AS nfy_q3_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 4
            THEN arr
          ELSE 0
        END)                    AS nfy_q4_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    AND atr.fiscal_year = report_dates.report_fiscal_year + 1
    GROUP BY 1,2
    
), last_12m_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
    
        SUM(arr)                AS last_12m_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.renewal_month < report_dates.report_month_date
    AND atr.renewal_month >= DATEADD(month,-12,report_dates.report_month_date)
    GROUP BY 1,2
    
), fy_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
        SUM(arr)                AS fy_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.fiscal_year = report_dates.report_fiscal_year
    GROUP BY 1,2


-- Rolling 1 year Net ARR
), net_arr_last_12m AS (
  -- net_arr_ttm

    SELECT
      o.account_id,
      d.report_fiscal_year          AS report_fiscal_year,
      SUM(o.net_arr)                AS last_12m_booked_net_arr,   -- ttm_net_arr
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.net_arr
            ELSE 0
          END)          AS last_12m_booked_non_web_net_arr,  -- ttm_non_web_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_web_direct_sourced_net_arr,  --ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_sourced_net_arr,  -- ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_sdr_sourced_net_arr,  -- ttm_sdr_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_ae_sourced_net_arr,  -- ttm_ae_sourced_net_arr
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
               THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_churn_contraction_net_arr,  -- ttm_churn_contraction_net_arr

       -- FO year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_fo_net_arr,  -- ttm_fo_net_arr

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_new_connected_net_arr, -- ttm_new_connected_net_arr

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_growth_net_arr,   --ttm_growth_net_arr

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_direct_net_arr,   --ttm_direct_net_arr

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_net_arr,   --ttm_channel_net_arr

        SUM (CASE
            WHEN o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_deal_count,  --ttm_deal_count

         SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_count,  -- ttm_trx_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 5000)
                        OR o.net_arr > 5000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_5k_count,   -- ttm_trx_over_5k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 10000)
                        OR o.net_arr > 10000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_10k_count,  -- ttm_trx_over_10k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 50000)
                        OR o.net_arr > 50000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_50k_count,  -- ttm_trx_over_50k_count

          SUM (CASE
            WHEN o.is_renewal = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_renewal_deal_count,   -- ttm_renewal_deal_count

        SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
                AND o.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Contract Reset','Contract Reset/Ramp Deal')
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_churn_contraction_deal_count,  -- ttm_churn_contraction_deal_count

          -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_direct_deal_count,  -- ttm_direct_deal_count

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_channel_deal_count  -- ttm_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    CROSS JOIN report_dates AS d
    WHERE o.close_date BETWEEN DATEADD(month, -12,DATE_TRUNC('month',d.report_month_date)) and DATE_TRUNC('month',d.report_month_date)
        AND o.booked_net_arr <> 0
    GROUP BY 1, 2
    
  -- total booked net arr in fy
  ), fy_net_arr AS (

    SELECT
      o.account_id,
      o.close_fiscal_year   AS report_fiscal_year,
      SUM(o.booked_net_arr) AS fy_booked_net_arr,
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.booked_net_arr
            ELSE 0
          END)          AS fy_booked_non_web_booked_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_sdr_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_ae_sourced_net_arr,
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_churn_contraction_net_arr,

        -- First Order year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_fo_net_arr,

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_new_connected_net_arr,

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_growth_net_arr,

        SUM(o.calculated_deal_count)   AS fy_booked_deal_count,

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_direct_net_arr,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_net_arr,

         -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_direct_deal_count,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    WHERE o.booked_net_arr <> 0
    GROUP BY 1,2

  -- Total open pipeline at the same point in previous fiscal years (total open pipe)
  ), op_forward_one_year AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year        AS report_fiscal_year,
      -- net arr pipeline
      SUM(h.net_arr)                AS total_open_pipe,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_open_pipeline,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_open_pipeline,
      
      -- deal count pipeline
      SUM(h.calculated_deal_count)   AS total_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_count_open_deals
      
    FROM sfdc_opportunity_snapshot_xf AS h
    WHERE h.close_date > h.snapshot_date
      AND h.forecast_category_name NOT IN  ('Omitted','Closed')
      AND h.order_type_stamped != '7. PS / Other'
      AND h.net_arr != 0
      AND h.is_eligible_open_pipeline_flag = 1
      GROUP BY 1,2

  -- Last 12 months pipe gen at same point of time in the year
  ), pg_last_12_months AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_last_12m_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_ae_sourced_net_arr,

      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_deal_count,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_channel_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_ae_sourced_deal_count

    FROM sfdc_opportunity_snapshot_xf AS h

    -- pipeline created within the last 12 months
    WHERE
        h.pipeline_created_date > dateadd(month,-12,h.snapshot_date)
      AND h.pipeline_created_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
    GROUP BY 1,2

  -- Pipe generation at the same point in time in the fiscal year
  ), pg_ytd AS (

    SELECT
      h.account_id,
      h.net_arr_created_fiscal_year  AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_ytd_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_ae_sourced_net_arr
    FROM sfdc_opportunity_snapshot_xf AS h
      -- pipeline created within the fiscal year
    WHERE h.snapshot_fiscal_year = h.net_arr_created_fiscal_year
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
      AND h.net_arr > 0
      GROUP BY 1,2

  -- ARR at the same point in time in Fiscal Year
  ), arr_at_same_month AS (

    SELECT
      mrr.dim_crm_account_id AS account_id,
      mrr_date.fiscal_year   AS report_fiscal_year,
  --    ultimate_parent_account_id,
      SUM(mrr.mrr)      AS mrr,
      SUM(mrr.arr)      AS arr,
      SUM(CASE
              WHEN sub.is_channel_arr_flag = 1
                  THEN mrr.arr
              ELSE 0
          END)          AS reseller_arr,
      SUM(CASE
              WHEN  sub.is_channel_arr_flag = 0
                  THEN mrr.arr
              ELSE 0
          END)          AS direct_arr,


      SUM(CASE
              WHEN  (mrr.product_tier_name LIKE '%Starter%'
                      OR mrr.product_tier_name LIKE '%Bronze%')
                  THEN mrr.arr
              ELSE 0
          END)          AS product_starter_arr,


      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Premium%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_premium_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Ultimate%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_ultimate_arr,

      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Self-Managed%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_self_managed_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%SaaS%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_saas_arr

    FROM mart_arr AS mrr
    INNER JOIN date_details AS mrr_date
      ON mrr.arr_month = mrr_date.date_actual
    INNER JOIN dim_subscription AS sub
      ON sub.dim_subscription_id = mrr.dim_subscription_id
    WHERE mrr_date.month_actual =  (SELECT DISTINCT month_actual
                                      FROM date_details
                                      WHERE date_actual = DATE_TRUNC('month', DATEADD(month, -1, CURRENT_DATE)))
    GROUP BY 1,2

), sao_last_12_month AS (
   
  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS last_12m_sao_deal_count,
        SUM(h.net_arr)                  AS last_12m_sao_net_arr,
        SUM(h.booked_net_arr)           AS last_12m_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
        h.sales_accepted_date > dateadd(month,-12,h.snapshot_date)
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), sao_fy AS (      

  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS fy_sao_deal_count,
        SUM(h.net_arr)                  AS fy_sao_net_arr,
        SUM(h.booked_net_arr)           AS fy_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
       h.snapshot_fiscal_year = h.sales_accepted_fiscal_year
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), consolidated_accounts AS (

  SELECT
    ak.report_fiscal_year,
    a.account_id                      AS account_id,
    a.account_name                    AS account_name,
    a.ultimate_parent_account_id      AS upa_id,
    a.ultimate_parent_account_name    AS upa_name,
    a.is_key_account,
    a.abm_tier,
    a.ultimate_parent_account_id,
    u.name                              AS account_owner_name,
    a.owner_id                          AS account_owner_id,
    trim(u.employee_number)             AS account_owner_employee_number,
    upa_owner.name                      AS upa_owner_name,
    upa_owner.user_id                   AS upa_owner_id,
    upa_owner.title_category            AS upa_owner_title_category,
    trim(upa_owner.employee_number)     AS upa_owner_employee_number,
    a.billing_country                   AS account_country,
    a.billing_postal_code               AS account_zip_code,
    mart_crm_account.account_billing_state AS account_state,

    
    -- Account demographics fields
    upa_account.parent_crm_account_sales_segment                    AS parent_crm_account_sales_segment,
    upa_account.parent_crm_account_geo                              AS parent_crm_account_geo,
    upa_account.parent_crm_account_region                           AS parent_crm_account_region,
    upa_account.parent_crm_account_area                             AS parent_crm_account_area,
    upa_account.crm_account_billing_country                         AS crm_account_billing_country,  
    upa_account.parent_crm_account_upa_state                        AS parent_crm_account_upa_state,
    upa_account.parent_crm_account_upa_city                         AS parent_crm_account_upa_city,
    upa_account.parent_crm_account_upa_postal_code                  AS parent_crm_account_upa_postal_code,
    upa_account.parent_crm_account_territory                        AS parent_crm_account_territory,

    
    -- substitute this by key segment
    u.user_geo                                    AS account_user_geo,
    u.user_region                                 AS account_user_region,
    u.user_segment                                AS account_user_segment,
    u.user_area                                   AS account_user_area,
    u.role_name                                   AS account_owner_role,
    u.title_category                              AS account_owner_title_category,
    a.industry                                    AS account_industry,
    upa_owner.user_geo                            AS upa_user_geo,
    upa_owner.user_region                         AS upa_user_region,
    upa_owner.user_segment                        AS upa_user_segment,
    upa_owner.user_area                           AS upa_user_area,
    upa_owner.role_name                           AS upa_user_role,
    upa.industry                                  AS upa_industry,
    
    -- NF: These fields are only useful to calculate LAM Dev Count which is already calculated
    coalesce(mart_crm_account.potential_users, 0)                               AS potential_users,
    coalesce(mart_crm_account.number_of_licenses_this_account, 0)               AS licenses,
    coalesce(mart_crm_account.decision_maker_count_linkedin, 0)                 AS linkedin_developer,
    coalesce(mart_crm_account.crm_account_zoom_info_number_of_developers, 0)    AS zi_developers,
    coalesce(mart_crm_account.zoom_info_company_revenue, 0)                     AS zi_revenue,


    -- LAM Dev count calculated at the UPA level
    upa_account.parent_crm_account_lam_dev_count                       AS upa_lam_dev_count,
    mart_crm_account.public_sector_account_flag,
    mart_crm_account.pubsec_type,
    mart_crm_account.potential_lam_arr,
    coalesce(mart_crm_account.crm_account_employee_count, 0)   AS employees,
    
    COALESCE(mart_crm_account.carr_account_family, 0)                       AS account_family_arr,
    LEAST(50000,GREATEST(coalesce(mart_crm_account.number_of_licenses_this_account,0),COALESCE(mart_crm_account.potential_users, mart_crm_account.decision_maker_count_linkedin, mart_crm_account.crm_account_zoom_info_number_of_developers, 0)))           AS calculated_developer_count,

    -- Account score used to balance patches in maps
    mart_crm_account.customer_score,


    -- TODO: 20221208 They are not called TAMs anymore, this part needs to be refactored
    a.technical_account_manager_date,
    a.technical_account_manager                                             AS technical_account_manager_name,
    CASE
      WHEN mart_crm_account.has_tam_flag
          THEN 1
      ELSE 0
    END                                           AS has_technical_account_manager_flag,

    a.health_score_color                          AS account_health_score_color,
    a.health_number                               AS account_health_number,

    -- atr for current fy
    COALESCE(fy_atr_base.fy_atr,0)           AS fy_atr,
    -- next fiscal year atr base reported at fy
    COALESCE(nfy_atr_base.nfy_atr,0)         AS nfy_atr,
    COALESCE(nfy_atr_base.nfy_q1_atr,0)      AS nfy_q1_atr,
    COALESCE(nfy_atr_base.nfy_q2_atr,0)      AS nfy_q2_atr,
    COALESCE(nfy_atr_base.nfy_q3_atr,0)      AS nfy_q3_atr,
    COALESCE(nfy_atr_base.nfy_q4_atr,0)      AS nfy_q4_atr,
    -- last 12 months ATR
    COALESCE(last_12m_atr_base.last_12m_atr,0)    AS last_12m_atr,

    -- arr by fy
    COALESCE(arr.arr,0)                           AS arr,

    COALESCE(arr.reseller_arr,0)                  AS arr_channel,
    COALESCE(arr.direct_arr,0)                    AS arr_direct,

    COALESCE(arr.product_starter_arr,0)           AS product_starter_arr,
    COALESCE(arr.product_premium_arr,0)           AS product_premium_arr,
    COALESCE(arr.product_ultimate_arr,0)          AS product_ultimate_arr,


    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) > COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_ultimate_customer_flag,

    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) < COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_premium_customer_flag,

    COALESCE(arr.delivery_self_managed_arr,0)     AS delivery_self_managed_arr,
    COALESCE(arr.delivery_saas_arr,0)             AS delivery_saas_arr,

    -- accounts counts
    CASE
      WHEN COALESCE(arr.arr,0) = 0
      THEN 1
      ELSE 0
    END                                           AS is_prospect_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
      THEN 1
      ELSE 0
    END                                           AS is_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 5000
      THEN 1
      ELSE 0
    END                                           AS is_over_5k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 10000
      THEN 1
      ELSE 0
    END                                           AS is_over_10k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 50000
      THEN 1
      ELSE 0
    END                                           AS is_over_50k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 100000
      THEN 1
      ELSE 0
    END                                           AS is_over_100k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 500000
      THEN 1
      ELSE 0
    END                                           AS is_over_500k_customer_flag,

    -- rolling last 12 months booked net arr
    COALESCE(net_arr_last_12m.last_12m_booked_net_arr,0)                       AS last_12m_booked_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_non_web_net_arr,0)               AS last_12m_booked_non_web_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_web_direct_sourced_net_arr,0)    AS last_12m_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)       AS last_12m_booked_channel_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_sdr_sourced_net_arr,0)           AS last_12m_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_ae_sourced_net_arr,0)            AS last_12m_booked_ae_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_net_arr,0)     AS last_12m_booked_churn_contraction_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_fo_net_arr,0)                    AS last_12m_booked_fo_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_new_connected_net_arr,0)         AS last_12m_booked_new_connected_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_growth_net_arr,0)                AS last_12m_booked_growth_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_deal_count,0)                    AS last_12m_booked_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_net_arr,0)                AS last_12m_booked_direct_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)               AS last_12m_booked_channel_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)  - COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)   AS last_12m_booked_channel_co_sell_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_deal_count,0)             AS last_12m_booked_direct_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_deal_count,0)            AS last_12m_booked_channel_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_deal_count,0)  AS last_12m_booked_churn_contraction_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_renewal_deal_count,0)            AS last_12m_booked_renewal_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_count,0)                     AS last_12m_booked_trx_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_5k_count,0)             AS last_12m_booked_trx_over_5k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_10k_count,0)            AS last_12m_booked_trx_over_10k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_50k_count,0)            AS last_12m_booked_trx_over_50k_count,

    -- fy booked net arr
    COALESCE(net_arr_fiscal.fy_booked_net_arr,0)                     AS fy_booked_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_web_direct_sourced_net_arr,0)  AS fy_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_sourced_net_arr,0)     AS fy_booked_channel_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_sdr_sourced_net_arr,0)         AS fy_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_ae_sourced_net_arr,0)          AS fy_booked_ae_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_churn_contraction_net_arr,0)   AS fy_booked_churn_contraction_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_fo_net_arr,0)                  AS fy_booked_fo_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_new_connected_net_arr,0)       AS fy_booked_new_connected_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_growth_net_arr,0)              AS fy_booked_growth_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_deal_count,0)                  AS fy_booked_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_direct_net_arr,0)              AS fy_booked_direct_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_net_arr,0)             AS fy_booked_channel_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_direct_deal_count,0)           AS fy_booked_direct_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_channel_deal_count,0)          AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    COALESCE(op.total_open_pipe,0)                  AS total_open_pipe,
    COALESCE(op.total_count_open_deals,0)           AS total_count_open_deals_pipe,
    COALESCE(op.nfy_open_pipeline,0)                AS nfy_open_pipeline,
    COALESCE(op.fy_open_pipeline,0)                 AS fy_open_pipeline,
    COALESCE(op.nfy_count_open_deals,0)             AS nfy_count_open_deals,
    COALESCE(op.fy_count_open_deals,0)              AS fy_count_open_deals,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS customer_has_open_pipe_flag,

    CASE
      WHEN COALESCE(arr.arr,0) = 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS prospect_has_open_pipe_flag,

    -- pipe generation
    COALESCE(pg.pg_ytd_net_arr,0)                             AS pg_ytd_net_arr,
    COALESCE(pg.pg_ytd_web_direct_sourced_net_arr,0)          AS pg_ytd_web_direct_sourced_net_arr,
    COALESCE(pg.pg_ytd_channel_sourced_net_arr,0)             AS pg_ytd_channel_sourced_net_arr,
    COALESCE(pg.pg_ytd_sdr_sourced_net_arr,0)                 AS pg_ytd_sdr_sourced_net_arr,
    COALESCE(pg.pg_ytd_ae_sourced_net_arr,0)                  AS pg_ytd_ae_sourced_net_arr,

    COALESCE(pg_ly.pg_last_12m_net_arr,0)                     AS pg_last_12m_net_arr,
    COALESCE(pg_ly.pg_last_12m_web_direct_sourced_net_arr,0)  AS pg_last_12m_web_direct_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_channel_sourced_net_arr,0)     AS pg_last_12m_channel_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_sdr_sourced_net_arr,0)         AS pg_last_12m_sdr_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_ae_sourced_net_arr,0)          AS pg_last_12m_ae_sourced_net_arr,

    COALESCE(pg_last_12m_web_direct_sourced_deal_count,0)     AS pg_last_12m_web_direct_sourced_deal_count,
    COALESCE(pg_last_12m_channel_sourced_deal_count,0)        AS pg_last_12m_channel_sourced_deal_count,
    COALESCE(pg_last_12m_sdr_sourced_deal_count,0)            AS pg_last_12m_sdr_sourced_deal_count,
    COALESCE(pg_last_12m_ae_sourced_deal_count,0)             AS pg_last_12m_ae_sourced_deal_count,
    
    -- SAO metrics
    COALESCE(sao_last_12_month.last_12m_sao_deal_count,0)       AS last_12m_sao_deal_count,
    COALESCE(sao_last_12_month.last_12m_sao_net_arr,0)          AS last_12m_sao_net_arr,
    COALESCE(sao_last_12_month.last_12m_sao_booked_net_arr,0)   AS last_12m_sao_booked_net_arr, 
    COALESCE(sao_fy.fy_sao_deal_count,0)                        AS fy_sao_deal_count,
    COALESCE(sao_fy.fy_sao_net_arr,0)                           AS fy_sao_net_arr,
    COALESCE(sao_fy.fy_sao_booked_net_arr,0)                    AS fy_sao_booked_net_arr,
    
     -- LAM Dev Count Category
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN '0. <100'    
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN '1. [100-250)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN '2. [250-500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN '3. [500-1500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN '4. [1500-2500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN '5. [2500-3500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN '6. [3500-5000)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN '7. >5000'
    END AS lam_dev_count_bin_name,
    
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN 0
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN 100
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN 250
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN 500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN 1500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN 2500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN 3500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN 5000
    END AS lam_dev_count_bin_rank,      
    
    -- Public Sector
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 'Public'
        ELSE 'Private'
    END                     AS sector_type,
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 1
        ELSE 0
    END                     AS is_public_sector_flag

  FROM account_year_key AS ak
  INNER JOIN sfdc_accounts_xf AS a
    ON ak.account_id = a.account_id
  LEFT JOIN mart_crm_account AS upa_account
    ON a.ultimate_parent_account_id = upa_account.dim_crm_account_id
  LEFT JOIN sfdc_accounts_xf AS upa
    ON a.ultimate_parent_account_id = upa.account_id
  LEFT JOIN dim_crm_account AS dim_account
    ON ak.account_id = dim_account.dim_crm_account_id
  LEFT JOIN mart_crm_account
    ON ak.account_id = mart_crm_account.dim_crm_account_id
  LEFT JOIN sfdc_users_xf AS u
    ON a.owner_id = u.user_id
  LEFT JOIN sfdc_users_xf AS upa_owner
    ON upa.owner_id = upa_owner.user_id
  LEFT JOIN fy_atr_base
    ON fy_atr_base.account_id = ak.account_id
    AND fy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN last_12m_atr_base AS last_12m_atr_base
    ON last_12m_atr_base.account_id = ak.account_id
    AND last_12m_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN nfy_atr_base
    ON nfy_atr_base.account_id = ak.account_id
    AND nfy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN net_arr_last_12m
    ON net_arr_last_12m.account_id = ak.account_id
    AND net_arr_last_12m.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN op_forward_one_year AS op
    ON op.account_id = ak.account_id
    AND op.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_ytd AS pg
    ON pg.account_id = ak.account_id
    AND pg.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_last_12_months AS pg_ly
    ON pg_ly.account_id = ak.account_id
    AND pg_ly.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN arr_at_same_month AS arr
    ON arr.account_id = ak.account_id
    AND arr.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN fy_net_arr AS net_arr_fiscal
    ON net_arr_fiscal.account_id = ak.account_id
    AND net_arr_fiscal.report_fiscal_year = ak.report_fiscal_year
  -- SAOs
  LEFT JOIN sao_last_12_month 
    ON sao_last_12_month.account_id = ak.account_id
    AND sao_last_12_month.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN sao_fy
    ON sao_fy.account_id = ak.account_id
    AND sao_fy.report_fiscal_year = ak.report_fiscal_year

    -----------------------
-- Adjust for hierarchies split between different geos
), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    parent_crm_account_upa_state              AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM consolidated_accounts
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM consolidated_accounts child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM consolidated_accounts final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final
------------------------

), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_state 
        ELSE acc.parent_crm_account_upa_state
    END                                     AS upa_ad_state,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,
    
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,

    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    
    -- Customer score used in maps for account visualization
    MAX(acc.customer_score) AS customer_score,
    
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM consolidated_accounts acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)
, final AS (

  SELECT
      
    acc.*, 
    
    CASE 
      WHEN upa.arr > 0 AND upa.arr < 5000
        THEN '1. 0-5k ARR'
      WHEN upa.arr >= 5000 AND upa.arr < 10000
        THEN '2. 0-10k ARR'
      WHEN upa.arr >= 10000 AND upa.arr < 50000
        THEN '3. 10k-50k ARR'
      WHEN upa.arr >= 50000 AND upa.arr < 100000
        THEN '4. 50K-100k ARR'
      WHEN upa.arr >= 100000 AND upa.arr < 500000
        THEN '5. 100k-500k ARR'
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '6. 500k-1M ARR'     
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '7. >=1M ARR' 
      ELSE 'n/a'
    END    AS account_family_arr_bin_name,
    
    COALESCE(upa.potential_users,0)                 AS upa_potential_users,
    COALESCE(upa.licenses,0)                        AS upa_licenses,
    COALESCE(upa.linkedin_developer,0)              AS upa_linkedin_developer,
    COALESCE(upa.zi_developers,0)                   AS upa_zi_developers,
    COALESCE(upa.zi_revenue,0)                      AS upa_zi_revenue,
    COALESCE(upa.employees,0)                       AS upa_employees,
    COALESCE(upa.count_of_customers,0)              AS upa_count_of_customers,

    CASE
        WHEN upa.upa_id = acc.account_id
            THEN 1
        ELSE 0
    END                                     AS is_upa_flag,

    upa.is_customer_flag                    AS hierarchy_is_customer_flag,
    
    COALESCE(virtual.virtual_upa_id,acc.upa_id)                             AS virtual_upa_id,
    COALESCE(virtual.virtual_upa_name,acc.upa_name)                         AS virtual_upa_name,
    COALESCE(virtual.virtual_upa_segment,acc.parent_crm_account_sales_segment)                AS virtual_upa_ad_segment,
    COALESCE(virtual.virtual_upa_geo,acc.upa_user_geo)                      AS virtual_upa_geo,
    COALESCE(virtual.virtual_upa_region,acc.upa_user_region)                AS virtual_upa_region,
    COALESCE(virtual.virtual_upa_area,acc.upa_user_area)                    AS virtual_upa_area,
    COALESCE(virtual.virtual_upa_country,acc.crm_account_billing_country)   AS virtual_upa_ad_country,
    COALESCE(virtual.virtual_upa_state,acc.parent_crm_account_upa_state)    AS virtual_upa_ad_state,
    COALESCE(virtual.virtual_upa_zip_code,acc.parent_crm_account_upa_postal_code) AS virtual_upa_ad_zip_code,
    COALESCE(virtual.virtual_upa_industry,acc.upa_industry)                 AS virtual_upa_industry,
    COALESCE(virtual.virtual_upa_owner_name,acc.upa_owner_name)             AS virtual_upa_owner_name,
    COALESCE(virtual.virtual_upa_owner_title_category,acc.upa_owner_title_category)   AS virtual_upa_owner_title_category,
    COALESCE(virtual.virtual_upa_owner_id,acc.upa_owner_id)                 AS virtual_upa_owner_id, 
    CASE 
        WHEN virtual.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                                                     AS virtual_upa_type

  FROM consolidated_accounts acc
    LEFT JOIN consolidated_upa upa
        ON upa.upa_id = acc.upa_id
        AND upa.report_fiscal_year = acc.report_fiscal_year
    LEFT JOIN final_virtual_upa virtual
        ON virtual.account_id = acc.account_id
        AND virtual.report_fiscal_year = acc.report_fiscal_year

)

SELECT *
FROM final13:T42de,{{ config(alias='report_metrics_summary_upa_year') }}

WITH report_metrics_summary_account_year AS (

    SELECT *
    --FROM  prod.workspace_sales.report_metrics_summary_account_year
    FROM {{ ref('wk_sales_report_metrics_summary_account_year') }}

), raw_account AS (
  
    SELECT *
    FROM {{ source('salesforce', 'account') }}
    --FROM raw.salesforce_stitch.account 

), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    account_state                             AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM report_metrics_summary_account_year
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM report_metrics_summary_account_year child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
-- after creating the virtual UPA hierarchy, some accounts might 
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM report_metrics_summary_account_year final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final

------------------------
    
), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,   
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,
    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,
    SUM(acc.nfy_q1_atr)     AS nfy_q1_atr,
    SUM(acc.nfy_q2_atr)     AS nfy_q2_atr,
    SUM(acc.nfy_q3_atr)     AS nfy_q3_atr,
    SUM(acc.nfy_q4_atr)     AS nfy_q4_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.nfy_open_pipeline)            AS nfy_open_pipeline,
    SUM(acc.fy_open_pipeline)             AS fy_open_pipeline,
    SUM(acc.nfy_count_open_deals)         AS nfy_count_open_deals,
    SUM(acc.fy_count_open_deals)          AS fy_count_open_deals,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM report_metrics_summary_account_year acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20

), final AS (

    SELECT  
            upa.*,
            raw.account_demographics_territory__c       AS upa_ad_territory,
            raw.account_demographics_upa_state__c       AS upa_ad_state_code,
            raw.account_demographics_upa_state_name__c  AS upa_ad_state_name

    FROM consolidated_upa upa
        LEFT JOIN raw_account raw
        ON upa.upa_id = raw.id

)

SELECT *
FROM final14:T42b4,

WITH report_metrics_summary_account_year AS (

    SELECT *
    --FROM  prod.workspace_sales.report_metrics_summary_account_year
    FROM "PROD".restricted_safe_workspace_sales.report_metrics_summary_account_year

), raw_account AS (
  
    SELECT *
    FROM "RAW".salesforce_stitch.account
    --FROM raw.salesforce_stitch.account 

), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    account_state                             AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM report_metrics_summary_account_year
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM report_metrics_summary_account_year child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
-- after creating the virtual UPA hierarchy, some accounts might 
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM report_metrics_summary_account_year final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final

------------------------
    
), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,   
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,
    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,
    SUM(acc.nfy_q1_atr)     AS nfy_q1_atr,
    SUM(acc.nfy_q2_atr)     AS nfy_q2_atr,
    SUM(acc.nfy_q3_atr)     AS nfy_q3_atr,
    SUM(acc.nfy_q4_atr)     AS nfy_q4_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.nfy_open_pipeline)            AS nfy_open_pipeline,
    SUM(acc.fy_open_pipeline)             AS fy_open_pipeline,
    SUM(acc.nfy_count_open_deals)         AS nfy_count_open_deals,
    SUM(acc.fy_count_open_deals)          AS fy_count_open_deals,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM report_metrics_summary_account_year acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20

), final AS (

    SELECT  
            upa.*,
            raw.account_demographics_territory__c       AS upa_ad_territory,
            raw.account_demographics_upa_state__c       AS upa_ad_state_code,
            raw.account_demographics_upa_state_name__c  AS upa_ad_state_name

    FROM consolidated_upa upa
        LEFT JOIN raw_account raw
        ON upa.upa_id = raw.id

)

SELECT *
FROM final15:T111c,{{ config({
    "tags": ["mnpi_exception"],
    "alias": "dim_subscription"
}) }}

WITH prep_amendment AS (

  SELECT *
  FROM {{ ref('prep_amendment') }}

), subscription AS (

    SELECT *
    FROM {{ ref('prep_subscription') }}

), subscription_opportunity_mapping AS (

    SELECT *
    FROM {{ ref('map_subscription_opportunity') }}

), subscription_lineage AS (

    SELECT DISTINCT
      subscription_name_slugify,
      subscription_lineage,
      oldest_subscription_in_cohort,
      subscription_cohort_month,
      subscription_cohort_quarter,
      subscription_cohort_year
    FROM {{ ref('map_subscription_lineage') }}

), final AS (

  SELECT
    --Surrogate Key
    subscription.dim_subscription_id,

    --Natural Key
    subscription.subscription_name,
    subscription.subscription_version,

    --Common Dimension Keys
    subscription.dim_crm_account_id,
    subscription.dim_billing_account_id,
    subscription.dim_billing_account_id_invoice_owner_account,
    subscription.dim_billing_account_id_creator_account,
    CASE
       WHEN subscription.subscription_created_date < '2019-02-01'
         THEN NULL
       ELSE subscription_opportunity_mapping.dim_crm_opportunity_id
    END                                                                             AS dim_crm_opportunity_id,
    subscription.dim_crm_opportunity_id_current_open_renewal,
    subscription.dim_crm_opportunity_id_closed_lost_renewal,
    {{ get_keyed_nulls('prep_amendment.dim_amendment_id') }}                        AS dim_amendment_id_subscription,

    --Subscription Information
    subscription.created_by_id,
    subscription.updated_by_id,
    subscription.dim_subscription_id_original,
    subscription.dim_subscription_id_previous,
    subscription.subscription_name_slugify,
    subscription.subscription_status,
    subscription.namespace_id,
    subscription.namespace_name,
    subscription.zuora_renewal_subscription_name,
    subscription.zuora_renewal_subscription_name_slugify,
    subscription.current_term,
    subscription.renewal_term,
    subscription.renewal_term_period_type,
    subscription.eoa_starter_bronze_offer_accepted,
    subscription.subscription_sales_type,
    subscription.auto_renew_native_hist,
    subscription.auto_renew_customerdot_hist,
    subscription.turn_on_cloud_licensing,
    subscription.turn_on_operational_metrics,
    subscription.contract_operational_metrics,
    subscription.contract_auto_renewal,
    subscription.turn_on_auto_renewal,
    subscription.contract_seat_reconciliation,
    subscription.turn_on_seat_reconciliation,
    subscription_opportunity_mapping.is_questionable_opportunity_mapping,
    subscription.invoice_owner_account,
    subscription.creator_account,
    subscription.was_purchased_through_reseller,
    subscription.multi_year_deal_subscription_linkage,

    --Date Information
    subscription.subscription_start_date,
    subscription.subscription_end_date,
    subscription.subscription_start_month,
    subscription.subscription_end_month,
    subscription.subscription_end_fiscal_year,
    subscription.subscription_created_date,
    subscription.subscription_updated_date,
    subscription.term_start_date,
    subscription.term_end_date,
    subscription.term_start_month,
    subscription.term_end_month,
    subscription.term_start_fiscal_year,
    subscription.term_end_fiscal_year,
    subscription.is_single_fiscal_year_term_subscription,
    subscription.second_active_renewal_month,
    subscription.cancelled_date,

    --Lineage and Cohort Information
    subscription_lineage.subscription_lineage,
    subscription_lineage.oldest_subscription_in_cohort,
    subscription_lineage.subscription_cohort_month,
    subscription_lineage.subscription_cohort_quarter,
    subscription_lineage.subscription_cohort_year

  FROM subscription
  LEFT JOIN subscription_lineage
    ON subscription_lineage.subscription_name_slugify = subscription.subscription_name_slugify
  LEFT JOIN prep_amendment
    ON subscription.dim_amendment_id_subscription = prep_amendment.dim_amendment_id
  LEFT JOIN subscription_opportunity_mapping
    ON subscription.dim_subscription_id = subscription_opportunity_mapping.dim_subscription_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@snalamaru",
    updated_by="@michellecooper",
    created_date="2020-12-16",
    updated_date="2023-04-12"
) }}16:T11db,

WITH prep_amendment AS (

  SELECT *
  FROM "PROD".common_prep.prep_amendment

), subscription AS (

    SELECT *
    FROM "PROD".common_prep.prep_subscription

), subscription_opportunity_mapping AS (

    SELECT *
    FROM "PROD".common_mapping.map_subscription_opportunity

), subscription_lineage AS (

    SELECT DISTINCT
      subscription_name_slugify,
      subscription_lineage,
      oldest_subscription_in_cohort,
      subscription_cohort_month,
      subscription_cohort_quarter,
      subscription_cohort_year
    FROM "PROD".common_mapping.map_subscription_lineage

), final AS (

  SELECT
    --Surrogate Key
    subscription.dim_subscription_id,

    --Natural Key
    subscription.subscription_name,
    subscription.subscription_version,

    --Common Dimension Keys
    subscription.dim_crm_account_id,
    subscription.dim_billing_account_id,
    subscription.dim_billing_account_id_invoice_owner_account,
    subscription.dim_billing_account_id_creator_account,
    CASE
       WHEN subscription.subscription_created_date < '2019-02-01'
         THEN NULL
       ELSE subscription_opportunity_mapping.dim_crm_opportunity_id
    END                                                                             AS dim_crm_opportunity_id,
    subscription.dim_crm_opportunity_id_current_open_renewal,
    subscription.dim_crm_opportunity_id_closed_lost_renewal,
    

  COALESCE(prep_amendment.dim_amendment_id, MD5(-1)) 

                        AS dim_amendment_id_subscription,

    --Subscription Information
    subscription.created_by_id,
    subscription.updated_by_id,
    subscription.dim_subscription_id_original,
    subscription.dim_subscription_id_previous,
    subscription.subscription_name_slugify,
    subscription.subscription_status,
    subscription.namespace_id,
    subscription.namespace_name,
    subscription.zuora_renewal_subscription_name,
    subscription.zuora_renewal_subscription_name_slugify,
    subscription.current_term,
    subscription.renewal_term,
    subscription.renewal_term_period_type,
    subscription.eoa_starter_bronze_offer_accepted,
    subscription.subscription_sales_type,
    subscription.auto_renew_native_hist,
    subscription.auto_renew_customerdot_hist,
    subscription.turn_on_cloud_licensing,
    subscription.turn_on_operational_metrics,
    subscription.contract_operational_metrics,
    subscription.contract_auto_renewal,
    subscription.turn_on_auto_renewal,
    subscription.contract_seat_reconciliation,
    subscription.turn_on_seat_reconciliation,
    subscription_opportunity_mapping.is_questionable_opportunity_mapping,
    subscription.invoice_owner_account,
    subscription.creator_account,
    subscription.was_purchased_through_reseller,
    subscription.multi_year_deal_subscription_linkage,

    --Date Information
    subscription.subscription_start_date,
    subscription.subscription_end_date,
    subscription.subscription_start_month,
    subscription.subscription_end_month,
    subscription.subscription_end_fiscal_year,
    subscription.subscription_created_date,
    subscription.subscription_updated_date,
    subscription.term_start_date,
    subscription.term_end_date,
    subscription.term_start_month,
    subscription.term_end_month,
    subscription.term_start_fiscal_year,
    subscription.term_end_fiscal_year,
    subscription.is_single_fiscal_year_term_subscription,
    subscription.second_active_renewal_month,
    subscription.cancelled_date,

    --Lineage and Cohort Information
    subscription_lineage.subscription_lineage,
    subscription_lineage.oldest_subscription_in_cohort,
    subscription_lineage.subscription_cohort_month,
    subscription_lineage.subscription_cohort_quarter,
    subscription_lineage.subscription_cohort_year

  FROM subscription
  LEFT JOIN subscription_lineage
    ON subscription_lineage.subscription_name_slugify = subscription.subscription_name_slugify
  LEFT JOIN prep_amendment
    ON subscription.dim_amendment_id_subscription = prep_amendment.dim_amendment_id
  LEFT JOIN subscription_opportunity_mapping
    ON subscription.dim_subscription_id = subscription_opportunity_mapping.dim_subscription_id

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2020-12-16'::DATE        AS model_created_date,
      '2023-04-12'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final17:T9742,{{ config(alias='sfdc_opportunity_snapshot_history_xf') }}
-- TODO
-- Add CS churn fields into model from wk_sales_opportunity object

WITH date_details AS (

    SELECT *
    FROM {{ ref('wk_sales_date_details') }}
    -- FROM prod.workspace_sales.date_details

), sfdc_accounts_xf AS (

    SELECT *
    -- FROM PROD.restricted_safe_workspace_sales.sfdc_accounts_xf
    FROM {{ref('wk_sales_sfdc_accounts_xf')}}

), sfdc_opportunity_xf AS (

    SELECT 
      opportunity_id,
      owner_id,
      account_id,
      order_type_stamped,
      deal_category,
      opportunity_category,
      deal_group,
      opportunity_owner_manager,
      is_edu_oss,

      -------------------
      -------------------
      --  NF 2022-01-28 TO BE DEPRECATED once pipeline velocity reports in Sisense are updated
      sales_team_rd_asm_level,
      sales_team_cro_level,
      sales_team_vp_level,
      sales_team_avp_rd_level,
      sales_team_asm_level,
      -------------------
      -------------------

      -- this fields use the opportunity owner version for current FY and account fields for previous years
      report_opportunity_user_segment,
      report_opportunity_raw_user_segment,
      report_opportunity_user_geo,
      report_opportunity_user_region,
      report_opportunity_user_area,
      report_user_segment_geo_region_area,
      report_user_segment_geo_region_area_sqs_ot,

      -- FY24 new fields
      report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot,
      report_opportunity_user_business_unit,
      report_opportunity_user_sub_business_unit,
      report_opportunity_user_division,
      report_opportunity_user_asm,
      
      -- FY23 keys 
      key_sqs,
      key_ot,

      key_segment,
      key_segment_sqs,                 
      key_segment_ot,    

      key_segment_geo,
      key_segment_geo_sqs,
      key_segment_geo_ot,      

      key_segment_geo_region,
      key_segment_geo_region_sqs,
      key_segment_geo_region_ot,   

      key_segment_geo_region_area,
      key_segment_geo_region_area_sqs,
      key_segment_geo_region_area_ot,

      key_segment_geo_area,

      -- FY24 keys
      key_bu,
      key_bu_ot,
      key_bu_sqs,
      key_bu_subbu,
      key_bu_subbu_ot,
      key_bu_subbu_sqs,
      key_bu_subbu_division,
      key_bu_subbu_division_ot,
      key_bu_subbu_division_sqs,
      key_bu_subbu_division_asm,


      parent_crm_account_upa_country,
      parent_crm_account_upa_state,
      parent_crm_account_upa_city,
      parent_crm_account_upa_street,
      parent_crm_account_upa_postal_code,
      parent_crm_account_upa_country_name,
      parent_crm_account_business_unit,

      -------------------------------------
      -- NF: These fields are not exposed yet in opty history, just for check
      -- I am adding this logic

      stage_1_date,
      stage_1_date_month,
      stage_1_fiscal_year,
      stage_1_fiscal_quarter_name,
      stage_1_fiscal_quarter_date,
      --------------------------------------

      is_won,
      is_duplicate_flag,
      raw_net_arr,
      sales_qualified_source

      -- Channel Org. fields
      -- this fields should be changed to this historical version
      --deal_path,
      --dr_partner_deal_type,
      --dr_partner_engagement,
      --partner_account,
      --dr_status,
      --distributor,
      --influence_partner,
      --fulfillment_partner,
      --platform_partner,
      --partner_track,
      --is_public_sector_opp,
      --is_registration_from_portal,
      --calculated_discount,
      --partner_discount,
      --partner_discount_calc,
      --comp_channel_neutral

    FROM {{ref('wk_sales_sfdc_opportunity_xf')}}

), sfdc_users_xf AS (

    SELECT * 
    FROM {{ref('wk_sales_sfdc_users_xf')}}  

), fct_crm_snapshot_daily AS (

    SELECT crm_opportunity_snapshot_id,
        dim_parent_crm_opportunity_id
    FROM  {{ref('fct_crm_opportunity_daily_snapshot')}}  

), sfdc_opportunity_snapshot_history AS (

    SELECT 
      edm_snapshot_opty.crm_opportunity_snapshot_id                 AS opportunity_snapshot_id,
      edm_snapshot_opty.dim_crm_opportunity_id                      AS opportunity_id,
      edm_snapshot_opty.opportunity_name,
      edm_snapshot_opty.owner_id,
      edm_snapshot_opty.opportunity_owner_department,

      edm_snapshot_opty.close_date,
      edm_snapshot_opty.created_date,
      edm_snapshot_opty.sales_qualified_date,
      edm_snapshot_opty.sales_accepted_date,

      edm_snapshot_opty.opportunity_sales_development_representative,
      edm_snapshot_opty.opportunity_business_development_representative,
      edm_snapshot_opty.opportunity_development_representative,

      edm_snapshot_opty.order_type                                  AS snapshot_order_type_stamped,
      edm_snapshot_opty.sales_qualified_source_name                 AS snapshot_sales_qualified_source,
      edm_snapshot_opty.is_edu_oss                                  AS snapshot_is_edu_oss,
      edm_snapshot_opty.opportunity_category                        AS snapshot_opportunity_category,

      -- Accounts might get deleted or merged, I am selecting the latest account id from the opty object
      -- to avoid showing non-valid account ids
      edm_snapshot_opty.dim_crm_account_id                          AS raw_account_id,
      edm_snapshot_opty.raw_net_arr,
      edm_snapshot_opty.net_arr,

      edm_snapshot_opty.deployment_preference,
      edm_snapshot_opty.merged_opportunity_id,
      edm_snapshot_opty.sales_path,
      edm_snapshot_opty.sales_type,
      edm_snapshot_opty.stage_name,
      edm_snapshot_opty.competitors,
      edm_snapshot_opty.forecast_category_name,
      edm_snapshot_opty.invoice_number,
      edm_snapshot_opty.primary_campaign_source_id,
      edm_snapshot_opty.professional_services_value,
      edm_snapshot_opty.total_contract_value,
      edm_snapshot_opty.is_web_portal_purchase,
      edm_snapshot_opty.opportunity_term,
      edm_snapshot_opty.arr_basis,
      edm_snapshot_opty.arr,
      edm_snapshot_opty.amount,
      edm_snapshot_opty.recurring_amount,
      edm_snapshot_opty.true_up_amount,
      edm_snapshot_opty.proserv_amount,
      edm_snapshot_opty.renewal_amount,
      edm_snapshot_opty.other_non_recurring_amount,
      edm_snapshot_opty.subscription_start_date                    AS quote_start_date,
      edm_snapshot_opty.subscription_end_date                      AS quote_end_date,
      
      edm_snapshot_opty.cp_champion,
      edm_snapshot_opty.cp_close_plan,
      edm_snapshot_opty.cp_competition,
      edm_snapshot_opty.cp_decision_criteria,
      edm_snapshot_opty.cp_decision_process,
      edm_snapshot_opty.cp_economic_buyer,
      edm_snapshot_opty.cp_identify_pain,
      edm_snapshot_opty.cp_metrics,
      edm_snapshot_opty.cp_risks,
      edm_snapshot_opty.cp_use_cases,
      edm_snapshot_opty.cp_value_driver,
      edm_snapshot_opty.cp_why_do_anything_at_all,
      edm_snapshot_opty.cp_why_gitlab,
      edm_snapshot_opty.cp_why_now,
      edm_snapshot_opty.cp_score,

      edm_snapshot_opty.dbt_updated_at                            AS _last_dbt_run,
      edm_snapshot_opty.is_deleted,

      -- Channel Org. fields
      -- this fields should be changed to this historical version
      edm_snapshot_opty.deal_path_name                            AS deal_path,
      edm_snapshot_opty.dr_partner_deal_type,
      edm_snapshot_opty.dr_partner_engagement,
      edm_snapshot_opty.partner_account,
      edm_snapshot_opty.dr_status,
      edm_snapshot_opty.distributor,
      edm_snapshot_opty.influence_partner,
      edm_snapshot_opty.fulfillment_partner,
      edm_snapshot_opty.platform_partner,
      edm_snapshot_opty.partner_track,
      edm_snapshot_opty.is_public_sector_opp,
      edm_snapshot_opty.is_registration_from_portal,
      edm_snapshot_opty.calculated_discount,
      edm_snapshot_opty.partner_discount,
      edm_snapshot_opty.partner_discount_calc,
      edm_snapshot_opty.comp_channel_neutral,
      edm_snapshot_opty.fpa_master_bookings_flag,
      
      -- stage dates
      -- dates in stage fields
      edm_snapshot_opty.stage_0_pending_acceptance_date,
      edm_snapshot_opty.stage_1_discovery_date,
      edm_snapshot_opty.stage_2_scoping_date,
      edm_snapshot_opty.stage_3_technical_evaluation_date,
      edm_snapshot_opty.stage_4_proposal_date,
      edm_snapshot_opty.stage_5_negotiating_date,
      edm_snapshot_opty.stage_6_awaiting_signature_date_date AS stage_6_awaiting_signature_date,
      edm_snapshot_opty.stage_6_closed_won_date,
      edm_snapshot_opty.stage_6_closed_lost_date,
      
      edm_snapshot_opty.deal_path_engagement,

      ------------------------------------------------------------------------------------------------------
      ------------------------------------------------------------------------------------------------------
      -- Base helpers for reporting
      edm_snapshot_opty.stage_name_3plus,
      edm_snapshot_opty.stage_name_4plus,
      edm_snapshot_opty.is_stage_1_plus,
      edm_snapshot_opty.is_stage_3_plus,
      edm_snapshot_opty.is_stage_4_plus,

      CASE edm_snapshot_opty.is_won
        WHEN TRUE THEN 1
        ELSE 0
      END                                                        AS is_won,

      edm_snapshot_opty.is_lost,
      edm_snapshot_opty.is_open,

      CASE edm_snapshot_opty.is_closed 
        WHEN TRUE THEN 1 
        ELSE 0 
      END                                                        AS is_closed,
      
      edm_snapshot_opty.is_renewal,
      edm_snapshot_opty.is_credit                                AS is_credit_flag,
      
      edm_snapshot_opty.is_refund,

      -- existing is_refund logic in XF
      -- CASE
      --   WHEN sfdc_opportunity_snapshot_history.opportunity_category IN ('Decommission')
      --     THEN 1
      --   ELSE 0
      -- END                                                          AS is_refund,
      
      edm_snapshot_opty.is_contract_reset                        AS is_contract_reset_flag,

      -- NF: 20210827 Fields for competitor analysis
      edm_snapshot_opty.competitors_other_flag,
      edm_snapshot_opty.competitors_gitlab_core_flag,
      edm_snapshot_opty.competitors_none_flag,
      edm_snapshot_opty.competitors_github_enterprise_flag,
      edm_snapshot_opty.competitors_bitbucket_server_flag,
      edm_snapshot_opty.competitors_unknown_flag,
      edm_snapshot_opty.competitors_github_flag,
      edm_snapshot_opty.competitors_gitlab_flag,
      edm_snapshot_opty.competitors_jenkins_flag,
      edm_snapshot_opty.competitors_azure_devops_flag,
      edm_snapshot_opty.competitors_svn_flag,
      edm_snapshot_opty.competitors_bitbucket_flag,
      edm_snapshot_opty.competitors_atlassian_flag,
      edm_snapshot_opty.competitors_perforce_flag,
      edm_snapshot_opty.competitors_visual_studio_flag,
      edm_snapshot_opty.competitors_azure_flag,
      edm_snapshot_opty.competitors_amazon_code_commit_flag,
      edm_snapshot_opty.competitors_circleci_flag,
      edm_snapshot_opty.competitors_bamboo_flag,
      edm_snapshot_opty.competitors_aws_flag,

      edm_snapshot_opty.stage_category,
      edm_snapshot_opty.calculated_deal_count                   AS calculated_deal_count,

      -- calculated age field
      -- if open, use the diff between created date and snapshot date
      -- if closed, a) the close date is later than snapshot date, use snapshot date
      -- if closed, b) the close is in the past, use close date
      edm_snapshot_opty.calculated_age_in_days,

      --date helpers
      edm_snapshot_opty.snapshot_date,
      edm_snapshot_opty.snapshot_month                          AS snapshot_date_month,
      edm_snapshot_opty.snapshot_fiscal_year,
      edm_snapshot_opty.snapshot_fiscal_quarter_name,
      edm_snapshot_opty.snapshot_fiscal_quarter_date,
      edm_snapshot_opty.snapshot_day_of_fiscal_quarter_normalised,
      edm_snapshot_opty.snapshot_day_of_fiscal_year_normalised,

      edm_snapshot_opty.close_month                             AS close_date_month,
      edm_snapshot_opty.close_fiscal_year,
      edm_snapshot_opty.close_fiscal_quarter_name,
      edm_snapshot_opty.close_fiscal_quarter_date,

      -- This refers to the closing quarter perspective instead of the snapshot quarter
      90 - DATEDIFF(day, edm_snapshot_opty.snapshot_date, close_date_detail.last_day_of_fiscal_quarter)           AS close_day_of_fiscal_quarter_normalised,

      edm_snapshot_opty.created_month                           AS created_date_month,
      edm_snapshot_opty.created_fiscal_year,
      edm_snapshot_opty.created_fiscal_quarter_name,
      edm_snapshot_opty.created_fiscal_quarter_date,

      edm_snapshot_opty.net_arr_created_date,
      edm_snapshot_opty.net_arr_created_month                   AS net_arr_created_date_month,
      edm_snapshot_opty.net_arr_created_fiscal_year,
      edm_snapshot_opty.net_arr_created_fiscal_quarter_name,
      edm_snapshot_opty.net_arr_created_fiscal_quarter_date,

      edm_snapshot_opty.pipeline_created_date,
      edm_snapshot_opty.pipeline_created_month                  AS pipeline_created_date_month,
      edm_snapshot_opty.pipeline_created_fiscal_year,
      edm_snapshot_opty.pipeline_created_fiscal_quarter_name,
      edm_snapshot_opty.pipeline_created_fiscal_quarter_date,

      edm_snapshot_opty.sales_accepted_month,
      edm_snapshot_opty.sales_accepted_fiscal_year,
      edm_snapshot_opty.sales_accepted_fiscal_quarter_name,
      edm_snapshot_opty.sales_accepted_fiscal_quarter_date,

      edm_snapshot_opty.last_activity_date,
      edm_snapshot_opty.last_activity_fiscal_year,
      edm_snapshot_opty.last_activity_fiscal_quarter_name,
      edm_snapshot_opty.last_activity_fiscal_quarter_date,
      edm_snapshot_opty.last_activity_month                      AS last_activity_date_month,

      edm_snapshot_opty.sales_last_activity_date,
      edm_snapshot_opty.sales_last_activity_fiscal_year,
      edm_snapshot_opty.sales_last_activity_fiscal_quarter_name,
      edm_snapshot_opty.sales_last_activity_fiscal_quarter_date,
      edm_snapshot_opty.sales_last_activity_month                AS sales_last_activity_date_month,

      edm_snapshot_opty.lead_source,
      edm_snapshot_opty.net_new_source_categories,           
      edm_snapshot_opty.record_type_id,
      

      -- JK 2022-10-25 they are being calculated in a CTE later for now
      -- edm_snapshot_opty.churned_contraction_deal_count,
      -- edm_snapshot_opty.open_1plus_net_arr,
      -- edm_snapshot_opty.open_3plus_net_arr,
      -- edm_snapshot_opty.open_4plus_net_arr,
      -- edm_snapshot_opty.churned_contraction_net_arr,
      -- edm_snapshot_opty.booked_net_arr,
      -- edm_snapshot_opty.is_booked_net_arr                       AS is_booked_net_arr_flag,
      -- edm_snapshot_opty.is_eligible_asp_analysis                AS is_eligible_asp_analysis_flag,
      -- edm_snapshot_opty.is_eligible_age_analysis                AS is_eligible_age_analysis_flag,
      -- edm_snapshot_opty.is_eligible_churn_contraction           AS is_eligible_churn_contraction_flag,
      -- edm_snapshot_opty.is_excluded_from_pipeline_created       AS is_excluded_flag,

      -- CASE edm_snapshot_opty.is_sao 
      --   WHEN TRUE THEN 1 
      --   ELSE 0 
      -- END                                                        AS is_eligible_sao_flag,

      -- edm_snapshot_opty.created_in_snapshot_quarter_net_arr,
      -- edm_snapshot_opty.created_and_won_same_quarter_net_arr,

      -- edm_snapshot_opty.open_1plus_deal_count,
      -- edm_snapshot_opty.open_3plus_deal_count,
      -- edm_snapshot_opty.open_4plus_deal_count,
      -- edm_snapshot_opty.booked_deal_count,
      -- edm_snapshot_opty.deal_size,
      -- edm_snapshot_opty.calculated_deal_size,
      -- edm_snapshot_opty.is_eligible_open_pipeline               AS is_eligible_open_pipeline_flag,
      -- edm_snapshot_opty.created_in_snapshot_quarter_deal_count,

      edm_snapshot_opty.dim_crm_account_id                       AS account_id,
      edm_snapshot_opty.account_owner_team_stamped,
      edm_snapshot_opty.account_owner_team_stamped_cro_level,
      edm_snapshot_opty.crm_account_name                         AS account_name,
      
      edm_snapshot_opty.dim_parent_crm_account_id                AS ultimate_parent_account_id,
      edm_snapshot_opty.parent_crm_account_name                  AS ultimate_parent_account_name,
      edm_snapshot_opty.is_jihu_account,
      edm_snapshot_opty.account_owner_user_segment,
      edm_snapshot_opty.account_owner_user_geo,
      edm_snapshot_opty.account_owner_user_region,
      edm_snapshot_opty.account_owner_user_area,
      edm_snapshot_opty.parent_crm_account_sales_segment,
      edm_snapshot_opty.parent_crm_account_geo,
      edm_snapshot_opty.parent_crm_account_region,
      edm_snapshot_opty.parent_crm_account_area,
      edm_snapshot_opty.parent_crm_account_territory,
      fact_snapshot_opty.dim_parent_crm_opportunity_id AS parent_opportunity,
      edm_snapshot_opty.intended_product_tier,
      edm_snapshot_opty.product_category
      

    FROM {{ref('mart_crm_opportunity_daily_snapshot')}} AS edm_snapshot_opty
    INNER JOIN date_details AS close_date_detail
      ON edm_snapshot_opty.close_date::DATE = close_date_detail.date_actual
    LEFT JOIN fct_crm_snapshot_daily fact_snapshot_opty
        ON fact_snapshot_opty.crm_opportunity_snapshot_id = edm_snapshot_opty.crm_opportunity_snapshot_id

), sfdc_opportunity_snapshot_history_xf AS (

    SELECT DISTINCT
      opp_snapshot.*,
      
      -- fields from sfdc_opportunity_xf 
      sfdc_opportunity_xf.order_type_stamped,     
      sfdc_opportunity_xf.is_duplicate_flag                               AS current_is_duplicate_flag,
      
      sfdc_opportunity_xf.sales_team_rd_asm_level,
      sfdc_opportunity_xf.sales_team_cro_level,
      sfdc_opportunity_xf.sales_team_vp_level,
      sfdc_opportunity_xf.sales_team_avp_rd_level,
      sfdc_opportunity_xf.sales_team_asm_level,

      sfdc_opportunity_xf.report_opportunity_user_segment,
      sfdc_opportunity_xf.report_opportunity_user_geo,
      sfdc_opportunity_xf.report_opportunity_user_region,
      sfdc_opportunity_xf.report_opportunity_user_area,
      sfdc_opportunity_xf.report_user_segment_geo_region_area,

      -- unadjusted version of the field
      sfdc_opportunity_xf.report_opportunity_raw_user_segment,
      sfdc_opportunity_xf.report_user_segment_geo_region_area_sqs_ot,

      -- FY24 base key
      sfdc_opportunity_xf.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot,

      sfdc_opportunity_xf.key_sqs,
      sfdc_opportunity_xf.key_ot,
      sfdc_opportunity_xf.key_segment,
      sfdc_opportunity_xf.key_segment_sqs,
      sfdc_opportunity_xf.key_segment_ot,
      sfdc_opportunity_xf.key_segment_geo,
      sfdc_opportunity_xf.key_segment_geo_sqs,
      sfdc_opportunity_xf.key_segment_geo_ot,
      sfdc_opportunity_xf.key_segment_geo_region,
      sfdc_opportunity_xf.key_segment_geo_region_sqs,
      sfdc_opportunity_xf.key_segment_geo_region_ot,
      sfdc_opportunity_xf.key_segment_geo_region_area,
      sfdc_opportunity_xf.key_segment_geo_region_area_sqs,
      sfdc_opportunity_xf.key_segment_geo_region_area_ot,
      sfdc_opportunity_xf.key_segment_geo_area,
      sfdc_opportunity_xf.sales_qualified_source,
      sfdc_opportunity_xf.deal_category,
      sfdc_opportunity_xf.opportunity_category,
      sfdc_opportunity_xf.deal_group,
      sfdc_opportunity_xf.opportunity_owner_manager,
      sfdc_opportunity_xf.is_edu_oss,

      -- FY24 keys
      sfdc_opportunity_xf.report_opportunity_user_business_unit,
      sfdc_opportunity_xf.report_opportunity_user_sub_business_unit,
      sfdc_opportunity_xf.report_opportunity_user_division,
      sfdc_opportunity_xf.report_opportunity_user_asm,
      
      sfdc_opportunity_xf.key_bu,
      sfdc_opportunity_xf.key_bu_subbu,
      sfdc_opportunity_xf.key_bu_subbu_ot,
      sfdc_opportunity_xf.key_bu_subbu_sqs,
      sfdc_opportunity_xf.key_bu_subbu_division,
      sfdc_opportunity_xf.key_bu_subbu_division_ot,
      sfdc_opportunity_xf.key_bu_subbu_division_sqs,
      sfdc_opportunity_xf.key_bu_subbu_division_asm,

      sfdc_opportunity_xf.parent_crm_account_upa_country,
      sfdc_opportunity_xf.parent_crm_account_upa_state,
      sfdc_opportunity_xf.parent_crm_account_upa_city,
      sfdc_opportunity_xf.parent_crm_account_upa_street,
      sfdc_opportunity_xf.parent_crm_account_upa_postal_code,
      sfdc_opportunity_xf.parent_crm_account_upa_country_name,
      sfdc_opportunity_xf.parent_crm_account_business_unit,

      -- fields calculated with both live and snapshot fields
      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_date 
        ELSE NULL
      END                                               AS stage_1_date,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_date_month 
        ELSE NULL
      END                                               AS stage_1_date_month,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_fiscal_year 
        ELSE NULL
      END                                               AS stage_1_fiscal_year,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_fiscal_quarter_name 
        ELSE NULL
      END                                               AS stage_1_fiscal_quarter_name,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_fiscal_quarter_date 
        ELSE NULL
      END                                               AS stage_1_fiscal_quarter_date,
      
      ------------------------------------------------------------------------------------------------------
      ------------------------------------------------------------------------------------------------------

      opportunity_owner.name                                     AS opportunity_owner,

      opportunity_owner.is_rep_flag

      
    FROM sfdc_opportunity_snapshot_history AS opp_snapshot
    INNER JOIN sfdc_opportunity_xf    
      ON sfdc_opportunity_xf.opportunity_id = opp_snapshot.opportunity_id
    LEFT JOIN sfdc_accounts_xf
      ON sfdc_opportunity_xf.account_id = sfdc_accounts_xf.account_id 
    LEFT JOIN sfdc_users_xf AS account_owner
      ON account_owner.user_id = sfdc_accounts_xf.owner_id
    LEFT JOIN sfdc_users_xf AS opportunity_owner
      ON opportunity_owner.user_id = opp_snapshot.owner_id
    
    WHERE opp_snapshot.raw_account_id NOT IN ('0014M00001kGcORQA0')                           -- remove test account
      AND (sfdc_accounts_xf.ultimate_parent_account_id NOT IN ('0016100001YUkWVAA1')
            OR sfdc_accounts_xf.account_id IS NULL)                                        -- remove test account
      AND opp_snapshot.is_deleted = 0
      -- NF 20210906 remove JiHu opties from the models
      AND sfdc_accounts_xf.is_jihu_account = 0

)
-- in Q2 FY21 a few deals where created in the wrong stage, and as they were purely aspirational, 
-- they needed to be removed from stage 1, eventually by the end of the quarter they were removed
-- The goal of this list is to use in the Created Pipeline flag, to exclude those deals that at 
-- day 90 had stages of less than 1, that should smooth the chart
, vision_opps  AS (
  
    SELECT 
      opp_snapshot.opportunity_id,
      opp_snapshot.stage_name,
      opp_snapshot.snapshot_fiscal_quarter_date
    FROM sfdc_opportunity_snapshot_history_xf opp_snapshot
    WHERE opp_snapshot.snapshot_fiscal_quarter_name = 'FY21-Q2'
      And opp_snapshot.pipeline_created_fiscal_quarter_date = opp_snapshot.snapshot_fiscal_quarter_date
      AND opp_snapshot.snapshot_day_of_fiscal_quarter_normalised = 90
      AND opp_snapshot.stage_name in ('00-Pre Opportunity', '0-Pending Acceptance', '0-Qualifying')
    GROUP BY 1, 2, 3


), add_compound_metrics AS (

    SELECT 
      opp_snapshot.*,
      CASE
        WHEN opp_snapshot.order_type_stamped IN ('1. New - First Order' ,'2. New - Connected', '3. Growth')
          AND opp_snapshot.is_edu_oss = 0
          AND opp_snapshot.pipeline_created_fiscal_quarter_date IS NOT NULL
          AND opp_snapshot.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Credit','Contract Reset')
          AND opp_snapshot.stage_name NOT IN ('00-Pre Opportunity','10-Duplicate', '9-Unqualified','0-Pending Acceptance')
          AND (opp_snapshot.net_arr > 0
            OR opp_snapshot.opportunity_category = 'Credit')
          -- exclude vision opps from FY21-Q2
          AND (opp_snapshot.pipeline_created_fiscal_quarter_name != 'FY21-Q2'
                OR vision_opps.opportunity_id IS NULL)
          -- 20220128 Updated to remove webdirect SQS deals
          AND opp_snapshot.sales_qualified_source  != 'Web Direct Generated'
              THEN 1
         ELSE 0
      END                                                      AS is_eligible_created_pipeline_flag,

      -- 20201021 NF: This should be replaced by a table that keeps track of excluded deals for forecasting purposes
      CASE 
        WHEN opp_snapshot.ultimate_parent_account_id IN ('001610000111bA3AAI','0016100001F4xlaAAB','0016100001CXGCsAAP','00161000015O9YnAAK','0016100001b9JscAAE') 
          AND opp_snapshot.close_date < '2020-08-01' 
            THEN 1
        -- NF 2021 - Pubsec extreme deals
        WHEN opp_snapshot.opportunity_id IN ('0064M00000WtZKUQA3','0064M00000Xb975QAB')
          AND opp_snapshot.snapshot_date < '2021-05-01' 
          THEN 1
        -- exclude vision opps from FY21-Q2
        WHEN opp_snapshot.pipeline_created_fiscal_quarter_name = 'FY21-Q2'
            AND vision_opps.opportunity_id IS NOT NULL
          THEN 1
        -- NF 20220415 PubSec duplicated deals on Pipe Gen -- Lockheed Martin GV - 40000 Ultimate Renewal
        WHEN opp_snapshot.opportunity_id IN ('0064M00000ZGpfQQAT','0064M00000ZGpfVQAT','0064M00000ZGpfGQAT')
          THEN 1
        ELSE 0
      END                                                         AS is_excluded_flag,

      CASE 
        WHEN lower(opp_snapshot.deal_group) LIKE ANY ('%growth%', '%new%')
          AND opp_snapshot.is_edu_oss = 0
          AND opp_snapshot.is_stage_1_plus = 1
          AND opp_snapshot.forecast_category_name != 'Omitted'
          AND opp_snapshot.is_open = 1
         THEN 1
         ELSE 0
      END                                                   AS is_eligible_open_pipeline_flag

    FROM sfdc_opportunity_snapshot_history_xf opp_snapshot
    LEFT JOIN vision_opps
      ON vision_opps.opportunity_id = opp_snapshot.opportunity_id
      AND vision_opps.snapshot_fiscal_quarter_date = opp_snapshot.snapshot_fiscal_quarter_date


/*
  JK 2022-12-15: The following fields in the below CTE are calculated within the model instead of taking the fields 
  directly from EDM mart. There have been some discrepancies potentially due to the usage of unadjusted nARR in the mart. 
*/

), temp_calculations AS (

    SELECT
      *,

      CASE
        WHEN (
            is_won = 1 
            OR (is_renewal = 1 AND is_lost = 1)
            )
          THEN net_arr
        ELSE 0 
      END                                                   AS booked_net_arr,

      CASE
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          AND (is_won = 1 
              OR (is_renewal = 1 AND is_lost = 1))
          AND order_type_stamped IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
          -- Not JiHu
            THEN 1
        ELSE 0
      END                                                   AS is_booked_net_arr_flag,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          THEN net_arr
        ELSE 0                                                                                              
      END                                                   AS open_1plus_net_arr,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_3_plus = 1   
            THEN net_arr
        ELSE 0
      END                                                   AS open_3plus_net_arr,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1  
          AND is_stage_4_plus = 1
            THEN net_arr
        ELSE 0
      END                                                   AS open_4plus_net_arr,

      CASE
        WHEN ((is_renewal = 1
            AND is_lost = 1)
            OR is_won = 1 )
            AND order_type_stamped IN ('5. Churn - Partial' ,'6. Churn - Final', '4. Contraction')
        THEN net_arr
        ELSE 0
      END                                                   AS churned_contraction_net_arr,

      CASE
        WHEN pipeline_created_fiscal_quarter_name = snapshot_fiscal_quarter_name
          AND is_eligible_created_pipeline_flag = 1
            THEN net_arr
        ELSE 0 
      END                                                 AS created_in_snapshot_quarter_net_arr,

      CASE 
        WHEN pipeline_created_fiscal_quarter_name = close_fiscal_quarter_name
           AND is_won = 1
           AND is_eligible_created_pipeline_flag = 1
            THEN net_arr
        ELSE 0
      END                                                 AS created_and_won_same_quarter_net_arr,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_1_plus = 1
            THEN calculated_deal_count  
        ELSE 0                                                                                              
      END                                               AS open_1plus_deal_count,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_3_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_3plus_deal_count,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_4_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_4plus_deal_count,

      CASE 
        WHEN is_won = 1
          THEN calculated_deal_count
        ELSE 0
      END                                               AS booked_deal_count,

      CASE
        WHEN ((is_renewal = 1
            AND is_lost = 1)
            OR is_won = 1 )
            AND order_type_stamped IN ('5. Churn - Partial' ,'6. Churn - Final', '4. Contraction')
        THEN calculated_deal_count
        ELSE 0
      END                                                   AS churned_contraction_deal_count,

      CASE
        WHEN pipeline_created_fiscal_quarter_name = snapshot_fiscal_quarter_name
          AND is_eligible_created_pipeline_flag = 1
            THEN calculated_deal_count
        ELSE 0 
      END                                                 AS created_in_snapshot_quarter_deal_count,

      -- ASP Analysis eligibility issue: https://gitlab.com/gitlab-com/sales-team/field-operations/sales-operations/-/issues/2606
      CASE 
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          -- For ASP we care mainly about add on, new business, excluding contraction / churn
          AND order_type_stamped IN ('1. New - First Order','2. New - Connected','3. Growth')
          -- Exclude Decomissioned as they are not aligned to the real owner
          -- Contract Reset, Decomission
          AND opportunity_category IN ('Standard','Ramp Deal','Internal Correction')
          -- Exclude Deals with nARR < 0
          AND net_arr > 0
          -- Not JiHu
            THEN 1
          ELSE 0
      END                                                   AS is_eligible_asp_analysis_flag,

       -- Age eligibility issue: https://gitlab.com/gitlab-com/sales-team/field-operations/sales-operations/-/issues/2606
      CASE 
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          -- Renewals are not having the same motion as rest of deals
          AND is_renewal = 0
          -- For stage age we exclude only ps/other
          AND order_type_stamped IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
          -- Only include deal types with meaningful journeys through the stages
          AND opportunity_category IN ('Standard','Ramp Deal','Decommissioned')
          -- Web Purchase have a different dynamic and should not be included
          AND is_web_portal_purchase = 0
          -- Not JiHu
            THEN 1
          ELSE 0
      END                                                   AS is_eligible_age_analysis_flag,

      CASE
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          AND order_type_stamped IN ('4. Contraction','6. Churn - Final','5. Churn - Partial')
          -- Not JiHu
            THEN 1
          ELSE 0
      END                                                   AS is_eligible_churn_contraction_flag,

      -- SAO alignment issue: https://gitlab.com/gitlab-com/sales-team/field-operations/sales-operations/-/issues/2656
      -- 2022-08-23 JK: using the central is_sao logic
      CASE
        WHEN sales_accepted_date IS NOT NULL
          AND is_edu_oss = 0
          AND stage_name NOT IN ('10-Duplicate')
            THEN 1
        ELSE 0
      END                                                   AS is_eligible_sao_flag,

      CASE 
        WHEN net_arr > 0 AND net_arr < 5000 
          THEN '1 - Small (<5k)'
        WHEN net_arr >=5000 AND net_arr < 25000 
          THEN '2 - Medium (5k - 25k)'
        WHEN net_arr >=25000 AND net_arr < 100000 
          THEN '3 - Big (25k - 100k)'
        WHEN net_arr >= 100000 
          THEN '4 - Jumbo (>100k)'
        ELSE 'Other' 
      END                                                          AS deal_size,

      -- extended version of the deal size
      CASE 
        WHEN net_arr > 0 AND net_arr < 1000 
          THEN '1. (0k -1k)'
        WHEN net_arr >=1000 AND net_arr < 10000 
          THEN '2. (1k - 10k)'
        WHEN net_arr >=10000 AND net_arr < 50000 
          THEN '3. (10k - 50k)'
        WHEN net_arr >=50000 AND net_arr < 100000 
          THEN '4. (50k - 100k)'
        WHEN net_arr >= 100000 AND net_arr < 250000 
          THEN '5. (100k - 250k)'
        WHEN net_arr >= 250000 AND net_arr < 500000 
          THEN '6. (250k - 500k)'
        WHEN net_arr >= 500000 AND net_arr < 1000000 
          THEN '7. (500k-1000k)'
        WHEN net_arr >= 1000000 
          THEN '8. (>1000k)'
        ELSE 'Other' 
      END                                                           AS calculated_deal_size,

    -- For some analysis it is important to order stages by rank
    CASE
            WHEN stage_name = '0-Pending Acceptance'
                THEN 0
            WHEN stage_name = '1-Discovery'
                THEN 1
             WHEN stage_name = '2-Scoping'
                THEN 2
            WHEN stage_name = '3-Technical Evaluation'
                THEN 3
            WHEN stage_name = '4-Proposal'
                THEN 4
            WHEN stage_name = '5-Negotiating'
                THEN 5
            WHEN stage_name = '6-Awaiting Signature'
                THEN 6
            WHEN stage_name = '7-Closing'
                THEN 7
            WHEN stage_name = 'Closed Won'
                THEN 8
            WHEN stage_name = '8-Closed Lost'
                THEN 9
            WHEN stage_name = '9-Unqualified'
                THEN 10
            WHEN stage_name = '10-Duplicate'
                THEN 11
            ELSE NULL
    END                     AS stage_name_rank,
    
    CASE
        WHEN stage_name IN ('0-Pending Acceptance')
            THEN '0. Acceptance' 
         WHEN stage_name IN ('1-Discovery','2-Scoping')
            THEN '1. Early'
         WHEN stage_name IN ('3-Technical Evaluation','4-Proposal')
            THEN '2. Middle'
         WHEN stage_name IN ('5-Negotiating','6-Awaiting Signature')
            THEN '3. Late'
        ELSE '4. Closed'
    END                     AS pipeline_category,

    -- NF: cycle time will consider if the opty is renewal and eligible to be considered 
    -- using the is_eligible_cycle_time_analysis
    CASE 
        WHEN is_edu_oss = 0
            AND is_deleted = 0
            -- For stage age we exclude only ps/other
            AND order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            -- Only include deal types with meaningful journeys through the stages
            AND opportunity_category IN ('Standard')
            -- Web Purchase have a different dynamic and should not be included
            AND is_web_portal_purchase = 0
                THEN 1
        ELSE 0
    END                                                           AS is_eligible_cycle_time_analysis_flag,

    -- NF: We consider net_arr_created date for renewals as they haver a very distinct motion than 
    --      add on and First Orders
    --     Logic is different for open deals so we can evaluate their current cycle time.
    CASE
        WHEN is_renewal = 1 AND is_closed = 1
            THEN DATEDIFF(day, net_arr_created_date, close_date)
        WHEN is_renewal = 0 AND is_closed = 1
            THEN DATEDIFF(day, created_date, close_date)
         WHEN is_renewal = 1 AND is_open = 1
            THEN DATEDIFF(day, net_arr_created_date, snapshot_date)
        WHEN is_renewal = 0 AND is_open = 1
            THEN DATEDIFF(day, created_date, snapshot_date)
    END                                                           AS cycle_time_in_days,

    -- Calculated fields
    CASE
        WHEN LOWER(product_category) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(product_category) LIKE '%ultimate%'
            THEN 'Ultimate'
        WHEN LOWER(intented_product_tier) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(intented_product_tier) LIKE '%ultimate%'
            THEN 'Ultimate'
        ELSE 'Other'
    END AS  product_category_tier,

    CASE
        WHEN lower(product_category) LIKE '%saas%'
                THEN 'SaaS'
        WHEN lower(product_category) LIKE '%self-managed%'
                THEN 'Self-Managed'
        ELSE 'Other'
    END AS  product_category_deployment


    FROM add_compound_metrics
)

SELECT *
FROM temp_calculations18:T9763,
-- TODO
-- Add CS churn fields into model from wk_sales_opportunity object

WITH date_details AS (

    SELECT *
    FROM "PROD".workspace_sales.date_details
    -- FROM prod.workspace_sales.date_details

), sfdc_accounts_xf AS (

    SELECT *
    -- FROM PROD.restricted_safe_workspace_sales.sfdc_accounts_xf
    FROM "PROD".restricted_safe_workspace_sales.sfdc_accounts_xf

), sfdc_opportunity_xf AS (

    SELECT 
      opportunity_id,
      owner_id,
      account_id,
      order_type_stamped,
      deal_category,
      opportunity_category,
      deal_group,
      opportunity_owner_manager,
      is_edu_oss,

      -------------------
      -------------------
      --  NF 2022-01-28 TO BE DEPRECATED once pipeline velocity reports in Sisense are updated
      sales_team_rd_asm_level,
      sales_team_cro_level,
      sales_team_vp_level,
      sales_team_avp_rd_level,
      sales_team_asm_level,
      -------------------
      -------------------

      -- this fields use the opportunity owner version for current FY and account fields for previous years
      report_opportunity_user_segment,
      report_opportunity_raw_user_segment,
      report_opportunity_user_geo,
      report_opportunity_user_region,
      report_opportunity_user_area,
      report_user_segment_geo_region_area,
      report_user_segment_geo_region_area_sqs_ot,

      -- FY24 new fields
      report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot,
      report_opportunity_user_business_unit,
      report_opportunity_user_sub_business_unit,
      report_opportunity_user_division,
      report_opportunity_user_asm,
      
      -- FY23 keys 
      key_sqs,
      key_ot,

      key_segment,
      key_segment_sqs,                 
      key_segment_ot,    

      key_segment_geo,
      key_segment_geo_sqs,
      key_segment_geo_ot,      

      key_segment_geo_region,
      key_segment_geo_region_sqs,
      key_segment_geo_region_ot,   

      key_segment_geo_region_area,
      key_segment_geo_region_area_sqs,
      key_segment_geo_region_area_ot,

      key_segment_geo_area,

      -- FY24 keys
      key_bu,
      key_bu_ot,
      key_bu_sqs,
      key_bu_subbu,
      key_bu_subbu_ot,
      key_bu_subbu_sqs,
      key_bu_subbu_division,
      key_bu_subbu_division_ot,
      key_bu_subbu_division_sqs,
      key_bu_subbu_division_asm,


      parent_crm_account_upa_country,
      parent_crm_account_upa_state,
      parent_crm_account_upa_city,
      parent_crm_account_upa_street,
      parent_crm_account_upa_postal_code,
      parent_crm_account_upa_country_name,
      parent_crm_account_business_unit,

      -------------------------------------
      -- NF: These fields are not exposed yet in opty history, just for check
      -- I am adding this logic

      stage_1_date,
      stage_1_date_month,
      stage_1_fiscal_year,
      stage_1_fiscal_quarter_name,
      stage_1_fiscal_quarter_date,
      --------------------------------------

      is_won,
      is_duplicate_flag,
      raw_net_arr,
      sales_qualified_source

      -- Channel Org. fields
      -- this fields should be changed to this historical version
      --deal_path,
      --dr_partner_deal_type,
      --dr_partner_engagement,
      --partner_account,
      --dr_status,
      --distributor,
      --influence_partner,
      --fulfillment_partner,
      --platform_partner,
      --partner_track,
      --is_public_sector_opp,
      --is_registration_from_portal,
      --calculated_discount,
      --partner_discount,
      --partner_discount_calc,
      --comp_channel_neutral

    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_xf

), sfdc_users_xf AS (

    SELECT * 
    FROM "PROD".workspace_sales.sfdc_users_xf  

), fct_crm_snapshot_daily AS (

    SELECT crm_opportunity_snapshot_id,
        dim_parent_crm_opportunity_id
    FROM  "PROD".restricted_safe_common.fct_crm_opportunity_daily_snapshot  

), sfdc_opportunity_snapshot_history AS (

    SELECT 
      edm_snapshot_opty.crm_opportunity_snapshot_id                 AS opportunity_snapshot_id,
      edm_snapshot_opty.dim_crm_opportunity_id                      AS opportunity_id,
      edm_snapshot_opty.opportunity_name,
      edm_snapshot_opty.owner_id,
      edm_snapshot_opty.opportunity_owner_department,

      edm_snapshot_opty.close_date,
      edm_snapshot_opty.created_date,
      edm_snapshot_opty.sales_qualified_date,
      edm_snapshot_opty.sales_accepted_date,

      edm_snapshot_opty.opportunity_sales_development_representative,
      edm_snapshot_opty.opportunity_business_development_representative,
      edm_snapshot_opty.opportunity_development_representative,

      edm_snapshot_opty.order_type                                  AS snapshot_order_type_stamped,
      edm_snapshot_opty.sales_qualified_source_name                 AS snapshot_sales_qualified_source,
      edm_snapshot_opty.is_edu_oss                                  AS snapshot_is_edu_oss,
      edm_snapshot_opty.opportunity_category                        AS snapshot_opportunity_category,

      -- Accounts might get deleted or merged, I am selecting the latest account id from the opty object
      -- to avoid showing non-valid account ids
      edm_snapshot_opty.dim_crm_account_id                          AS raw_account_id,
      edm_snapshot_opty.raw_net_arr,
      edm_snapshot_opty.net_arr,

      edm_snapshot_opty.deployment_preference,
      edm_snapshot_opty.merged_opportunity_id,
      edm_snapshot_opty.sales_path,
      edm_snapshot_opty.sales_type,
      edm_snapshot_opty.stage_name,
      edm_snapshot_opty.competitors,
      edm_snapshot_opty.forecast_category_name,
      edm_snapshot_opty.invoice_number,
      edm_snapshot_opty.primary_campaign_source_id,
      edm_snapshot_opty.professional_services_value,
      edm_snapshot_opty.total_contract_value,
      edm_snapshot_opty.is_web_portal_purchase,
      edm_snapshot_opty.opportunity_term,
      edm_snapshot_opty.arr_basis,
      edm_snapshot_opty.arr,
      edm_snapshot_opty.amount,
      edm_snapshot_opty.recurring_amount,
      edm_snapshot_opty.true_up_amount,
      edm_snapshot_opty.proserv_amount,
      edm_snapshot_opty.renewal_amount,
      edm_snapshot_opty.other_non_recurring_amount,
      edm_snapshot_opty.subscription_start_date                    AS quote_start_date,
      edm_snapshot_opty.subscription_end_date                      AS quote_end_date,
      
      edm_snapshot_opty.cp_champion,
      edm_snapshot_opty.cp_close_plan,
      edm_snapshot_opty.cp_competition,
      edm_snapshot_opty.cp_decision_criteria,
      edm_snapshot_opty.cp_decision_process,
      edm_snapshot_opty.cp_economic_buyer,
      edm_snapshot_opty.cp_identify_pain,
      edm_snapshot_opty.cp_metrics,
      edm_snapshot_opty.cp_risks,
      edm_snapshot_opty.cp_use_cases,
      edm_snapshot_opty.cp_value_driver,
      edm_snapshot_opty.cp_why_do_anything_at_all,
      edm_snapshot_opty.cp_why_gitlab,
      edm_snapshot_opty.cp_why_now,
      edm_snapshot_opty.cp_score,

      edm_snapshot_opty.dbt_updated_at                            AS _last_dbt_run,
      edm_snapshot_opty.is_deleted,

      -- Channel Org. fields
      -- this fields should be changed to this historical version
      edm_snapshot_opty.deal_path_name                            AS deal_path,
      edm_snapshot_opty.dr_partner_deal_type,
      edm_snapshot_opty.dr_partner_engagement,
      edm_snapshot_opty.partner_account,
      edm_snapshot_opty.dr_status,
      edm_snapshot_opty.distributor,
      edm_snapshot_opty.influence_partner,
      edm_snapshot_opty.fulfillment_partner,
      edm_snapshot_opty.platform_partner,
      edm_snapshot_opty.partner_track,
      edm_snapshot_opty.is_public_sector_opp,
      edm_snapshot_opty.is_registration_from_portal,
      edm_snapshot_opty.calculated_discount,
      edm_snapshot_opty.partner_discount,
      edm_snapshot_opty.partner_discount_calc,
      edm_snapshot_opty.comp_channel_neutral,
      edm_snapshot_opty.fpa_master_bookings_flag,
      
      -- stage dates
      -- dates in stage fields
      edm_snapshot_opty.stage_0_pending_acceptance_date,
      edm_snapshot_opty.stage_1_discovery_date,
      edm_snapshot_opty.stage_2_scoping_date,
      edm_snapshot_opty.stage_3_technical_evaluation_date,
      edm_snapshot_opty.stage_4_proposal_date,
      edm_snapshot_opty.stage_5_negotiating_date,
      edm_snapshot_opty.stage_6_awaiting_signature_date_date AS stage_6_awaiting_signature_date,
      edm_snapshot_opty.stage_6_closed_won_date,
      edm_snapshot_opty.stage_6_closed_lost_date,
      
      edm_snapshot_opty.deal_path_engagement,

      ------------------------------------------------------------------------------------------------------
      ------------------------------------------------------------------------------------------------------
      -- Base helpers for reporting
      edm_snapshot_opty.stage_name_3plus,
      edm_snapshot_opty.stage_name_4plus,
      edm_snapshot_opty.is_stage_1_plus,
      edm_snapshot_opty.is_stage_3_plus,
      edm_snapshot_opty.is_stage_4_plus,

      CASE edm_snapshot_opty.is_won
        WHEN TRUE THEN 1
        ELSE 0
      END                                                        AS is_won,

      edm_snapshot_opty.is_lost,
      edm_snapshot_opty.is_open,

      CASE edm_snapshot_opty.is_closed 
        WHEN TRUE THEN 1 
        ELSE 0 
      END                                                        AS is_closed,
      
      edm_snapshot_opty.is_renewal,
      edm_snapshot_opty.is_credit                                AS is_credit_flag,
      
      edm_snapshot_opty.is_refund,

      -- existing is_refund logic in XF
      -- CASE
      --   WHEN sfdc_opportunity_snapshot_history.opportunity_category IN ('Decommission')
      --     THEN 1
      --   ELSE 0
      -- END                                                          AS is_refund,
      
      edm_snapshot_opty.is_contract_reset                        AS is_contract_reset_flag,

      -- NF: 20210827 Fields for competitor analysis
      edm_snapshot_opty.competitors_other_flag,
      edm_snapshot_opty.competitors_gitlab_core_flag,
      edm_snapshot_opty.competitors_none_flag,
      edm_snapshot_opty.competitors_github_enterprise_flag,
      edm_snapshot_opty.competitors_bitbucket_server_flag,
      edm_snapshot_opty.competitors_unknown_flag,
      edm_snapshot_opty.competitors_github_flag,
      edm_snapshot_opty.competitors_gitlab_flag,
      edm_snapshot_opty.competitors_jenkins_flag,
      edm_snapshot_opty.competitors_azure_devops_flag,
      edm_snapshot_opty.competitors_svn_flag,
      edm_snapshot_opty.competitors_bitbucket_flag,
      edm_snapshot_opty.competitors_atlassian_flag,
      edm_snapshot_opty.competitors_perforce_flag,
      edm_snapshot_opty.competitors_visual_studio_flag,
      edm_snapshot_opty.competitors_azure_flag,
      edm_snapshot_opty.competitors_amazon_code_commit_flag,
      edm_snapshot_opty.competitors_circleci_flag,
      edm_snapshot_opty.competitors_bamboo_flag,
      edm_snapshot_opty.competitors_aws_flag,

      edm_snapshot_opty.stage_category,
      edm_snapshot_opty.calculated_deal_count                   AS calculated_deal_count,

      -- calculated age field
      -- if open, use the diff between created date and snapshot date
      -- if closed, a) the close date is later than snapshot date, use snapshot date
      -- if closed, b) the close is in the past, use close date
      edm_snapshot_opty.calculated_age_in_days,

      --date helpers
      edm_snapshot_opty.snapshot_date,
      edm_snapshot_opty.snapshot_month                          AS snapshot_date_month,
      edm_snapshot_opty.snapshot_fiscal_year,
      edm_snapshot_opty.snapshot_fiscal_quarter_name,
      edm_snapshot_opty.snapshot_fiscal_quarter_date,
      edm_snapshot_opty.snapshot_day_of_fiscal_quarter_normalised,
      edm_snapshot_opty.snapshot_day_of_fiscal_year_normalised,

      edm_snapshot_opty.close_month                             AS close_date_month,
      edm_snapshot_opty.close_fiscal_year,
      edm_snapshot_opty.close_fiscal_quarter_name,
      edm_snapshot_opty.close_fiscal_quarter_date,

      -- This refers to the closing quarter perspective instead of the snapshot quarter
      90 - DATEDIFF(day, edm_snapshot_opty.snapshot_date, close_date_detail.last_day_of_fiscal_quarter)           AS close_day_of_fiscal_quarter_normalised,

      edm_snapshot_opty.created_month                           AS created_date_month,
      edm_snapshot_opty.created_fiscal_year,
      edm_snapshot_opty.created_fiscal_quarter_name,
      edm_snapshot_opty.created_fiscal_quarter_date,

      edm_snapshot_opty.net_arr_created_date,
      edm_snapshot_opty.net_arr_created_month                   AS net_arr_created_date_month,
      edm_snapshot_opty.net_arr_created_fiscal_year,
      edm_snapshot_opty.net_arr_created_fiscal_quarter_name,
      edm_snapshot_opty.net_arr_created_fiscal_quarter_date,

      edm_snapshot_opty.pipeline_created_date,
      edm_snapshot_opty.pipeline_created_month                  AS pipeline_created_date_month,
      edm_snapshot_opty.pipeline_created_fiscal_year,
      edm_snapshot_opty.pipeline_created_fiscal_quarter_name,
      edm_snapshot_opty.pipeline_created_fiscal_quarter_date,

      edm_snapshot_opty.sales_accepted_month,
      edm_snapshot_opty.sales_accepted_fiscal_year,
      edm_snapshot_opty.sales_accepted_fiscal_quarter_name,
      edm_snapshot_opty.sales_accepted_fiscal_quarter_date,

      edm_snapshot_opty.last_activity_date,
      edm_snapshot_opty.last_activity_fiscal_year,
      edm_snapshot_opty.last_activity_fiscal_quarter_name,
      edm_snapshot_opty.last_activity_fiscal_quarter_date,
      edm_snapshot_opty.last_activity_month                      AS last_activity_date_month,

      edm_snapshot_opty.sales_last_activity_date,
      edm_snapshot_opty.sales_last_activity_fiscal_year,
      edm_snapshot_opty.sales_last_activity_fiscal_quarter_name,
      edm_snapshot_opty.sales_last_activity_fiscal_quarter_date,
      edm_snapshot_opty.sales_last_activity_month                AS sales_last_activity_date_month,

      edm_snapshot_opty.lead_source,
      edm_snapshot_opty.net_new_source_categories,           
      edm_snapshot_opty.record_type_id,
      

      -- JK 2022-10-25 they are being calculated in a CTE later for now
      -- edm_snapshot_opty.churned_contraction_deal_count,
      -- edm_snapshot_opty.open_1plus_net_arr,
      -- edm_snapshot_opty.open_3plus_net_arr,
      -- edm_snapshot_opty.open_4plus_net_arr,
      -- edm_snapshot_opty.churned_contraction_net_arr,
      -- edm_snapshot_opty.booked_net_arr,
      -- edm_snapshot_opty.is_booked_net_arr                       AS is_booked_net_arr_flag,
      -- edm_snapshot_opty.is_eligible_asp_analysis                AS is_eligible_asp_analysis_flag,
      -- edm_snapshot_opty.is_eligible_age_analysis                AS is_eligible_age_analysis_flag,
      -- edm_snapshot_opty.is_eligible_churn_contraction           AS is_eligible_churn_contraction_flag,
      -- edm_snapshot_opty.is_excluded_from_pipeline_created       AS is_excluded_flag,

      -- CASE edm_snapshot_opty.is_sao 
      --   WHEN TRUE THEN 1 
      --   ELSE 0 
      -- END                                                        AS is_eligible_sao_flag,

      -- edm_snapshot_opty.created_in_snapshot_quarter_net_arr,
      -- edm_snapshot_opty.created_and_won_same_quarter_net_arr,

      -- edm_snapshot_opty.open_1plus_deal_count,
      -- edm_snapshot_opty.open_3plus_deal_count,
      -- edm_snapshot_opty.open_4plus_deal_count,
      -- edm_snapshot_opty.booked_deal_count,
      -- edm_snapshot_opty.deal_size,
      -- edm_snapshot_opty.calculated_deal_size,
      -- edm_snapshot_opty.is_eligible_open_pipeline               AS is_eligible_open_pipeline_flag,
      -- edm_snapshot_opty.created_in_snapshot_quarter_deal_count,

      edm_snapshot_opty.dim_crm_account_id                       AS account_id,
      edm_snapshot_opty.account_owner_team_stamped,
      edm_snapshot_opty.account_owner_team_stamped_cro_level,
      edm_snapshot_opty.crm_account_name                         AS account_name,
      
      edm_snapshot_opty.dim_parent_crm_account_id                AS ultimate_parent_account_id,
      edm_snapshot_opty.parent_crm_account_name                  AS ultimate_parent_account_name,
      edm_snapshot_opty.is_jihu_account,
      edm_snapshot_opty.account_owner_user_segment,
      edm_snapshot_opty.account_owner_user_geo,
      edm_snapshot_opty.account_owner_user_region,
      edm_snapshot_opty.account_owner_user_area,
      edm_snapshot_opty.parent_crm_account_sales_segment,
      edm_snapshot_opty.parent_crm_account_geo,
      edm_snapshot_opty.parent_crm_account_region,
      edm_snapshot_opty.parent_crm_account_area,
      edm_snapshot_opty.parent_crm_account_territory,
      fact_snapshot_opty.dim_parent_crm_opportunity_id AS parent_opportunity,
      edm_snapshot_opty.intended_product_tier,
      edm_snapshot_opty.product_category
      

    FROM "PROD".restricted_safe_common_mart_sales.mart_crm_opportunity_daily_snapshot AS edm_snapshot_opty
    INNER JOIN date_details AS close_date_detail
      ON edm_snapshot_opty.close_date::DATE = close_date_detail.date_actual
    LEFT JOIN fct_crm_snapshot_daily fact_snapshot_opty
        ON fact_snapshot_opty.crm_opportunity_snapshot_id = edm_snapshot_opty.crm_opportunity_snapshot_id

), sfdc_opportunity_snapshot_history_xf AS (

    SELECT DISTINCT
      opp_snapshot.*,
      
      -- fields from sfdc_opportunity_xf 
      sfdc_opportunity_xf.order_type_stamped,     
      sfdc_opportunity_xf.is_duplicate_flag                               AS current_is_duplicate_flag,
      
      sfdc_opportunity_xf.sales_team_rd_asm_level,
      sfdc_opportunity_xf.sales_team_cro_level,
      sfdc_opportunity_xf.sales_team_vp_level,
      sfdc_opportunity_xf.sales_team_avp_rd_level,
      sfdc_opportunity_xf.sales_team_asm_level,

      sfdc_opportunity_xf.report_opportunity_user_segment,
      sfdc_opportunity_xf.report_opportunity_user_geo,
      sfdc_opportunity_xf.report_opportunity_user_region,
      sfdc_opportunity_xf.report_opportunity_user_area,
      sfdc_opportunity_xf.report_user_segment_geo_region_area,

      -- unadjusted version of the field
      sfdc_opportunity_xf.report_opportunity_raw_user_segment,
      sfdc_opportunity_xf.report_user_segment_geo_region_area_sqs_ot,

      -- FY24 base key
      sfdc_opportunity_xf.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot,

      sfdc_opportunity_xf.key_sqs,
      sfdc_opportunity_xf.key_ot,
      sfdc_opportunity_xf.key_segment,
      sfdc_opportunity_xf.key_segment_sqs,
      sfdc_opportunity_xf.key_segment_ot,
      sfdc_opportunity_xf.key_segment_geo,
      sfdc_opportunity_xf.key_segment_geo_sqs,
      sfdc_opportunity_xf.key_segment_geo_ot,
      sfdc_opportunity_xf.key_segment_geo_region,
      sfdc_opportunity_xf.key_segment_geo_region_sqs,
      sfdc_opportunity_xf.key_segment_geo_region_ot,
      sfdc_opportunity_xf.key_segment_geo_region_area,
      sfdc_opportunity_xf.key_segment_geo_region_area_sqs,
      sfdc_opportunity_xf.key_segment_geo_region_area_ot,
      sfdc_opportunity_xf.key_segment_geo_area,
      sfdc_opportunity_xf.sales_qualified_source,
      sfdc_opportunity_xf.deal_category,
      sfdc_opportunity_xf.opportunity_category,
      sfdc_opportunity_xf.deal_group,
      sfdc_opportunity_xf.opportunity_owner_manager,
      sfdc_opportunity_xf.is_edu_oss,

      -- FY24 keys
      sfdc_opportunity_xf.report_opportunity_user_business_unit,
      sfdc_opportunity_xf.report_opportunity_user_sub_business_unit,
      sfdc_opportunity_xf.report_opportunity_user_division,
      sfdc_opportunity_xf.report_opportunity_user_asm,
      
      sfdc_opportunity_xf.key_bu,
      sfdc_opportunity_xf.key_bu_subbu,
      sfdc_opportunity_xf.key_bu_subbu_ot,
      sfdc_opportunity_xf.key_bu_subbu_sqs,
      sfdc_opportunity_xf.key_bu_subbu_division,
      sfdc_opportunity_xf.key_bu_subbu_division_ot,
      sfdc_opportunity_xf.key_bu_subbu_division_sqs,
      sfdc_opportunity_xf.key_bu_subbu_division_asm,

      sfdc_opportunity_xf.parent_crm_account_upa_country,
      sfdc_opportunity_xf.parent_crm_account_upa_state,
      sfdc_opportunity_xf.parent_crm_account_upa_city,
      sfdc_opportunity_xf.parent_crm_account_upa_street,
      sfdc_opportunity_xf.parent_crm_account_upa_postal_code,
      sfdc_opportunity_xf.parent_crm_account_upa_country_name,
      sfdc_opportunity_xf.parent_crm_account_business_unit,

      -- fields calculated with both live and snapshot fields
      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_date 
        ELSE NULL
      END                                               AS stage_1_date,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_date_month 
        ELSE NULL
      END                                               AS stage_1_date_month,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_fiscal_year 
        ELSE NULL
      END                                               AS stage_1_fiscal_year,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_fiscal_quarter_name 
        ELSE NULL
      END                                               AS stage_1_fiscal_quarter_name,

      CASE 
        WHEN sfdc_opportunity_xf.stage_1_date <= opp_snapshot.snapshot_date
          THEN sfdc_opportunity_xf.stage_1_fiscal_quarter_date 
        ELSE NULL
      END                                               AS stage_1_fiscal_quarter_date,
      
      ------------------------------------------------------------------------------------------------------
      ------------------------------------------------------------------------------------------------------

      opportunity_owner.name                                     AS opportunity_owner,

      opportunity_owner.is_rep_flag

      
    FROM sfdc_opportunity_snapshot_history AS opp_snapshot
    INNER JOIN sfdc_opportunity_xf    
      ON sfdc_opportunity_xf.opportunity_id = opp_snapshot.opportunity_id
    LEFT JOIN sfdc_accounts_xf
      ON sfdc_opportunity_xf.account_id = sfdc_accounts_xf.account_id 
    LEFT JOIN sfdc_users_xf AS account_owner
      ON account_owner.user_id = sfdc_accounts_xf.owner_id
    LEFT JOIN sfdc_users_xf AS opportunity_owner
      ON opportunity_owner.user_id = opp_snapshot.owner_id
    
    WHERE opp_snapshot.raw_account_id NOT IN ('0014M00001kGcORQA0')                           -- remove test account
      AND (sfdc_accounts_xf.ultimate_parent_account_id NOT IN ('0016100001YUkWVAA1')
            OR sfdc_accounts_xf.account_id IS NULL)                                        -- remove test account
      AND opp_snapshot.is_deleted = 0
      -- NF 20210906 remove JiHu opties from the models
      AND sfdc_accounts_xf.is_jihu_account = 0

)
-- in Q2 FY21 a few deals where created in the wrong stage, and as they were purely aspirational, 
-- they needed to be removed from stage 1, eventually by the end of the quarter they were removed
-- The goal of this list is to use in the Created Pipeline flag, to exclude those deals that at 
-- day 90 had stages of less than 1, that should smooth the chart
, vision_opps  AS (
  
    SELECT 
      opp_snapshot.opportunity_id,
      opp_snapshot.stage_name,
      opp_snapshot.snapshot_fiscal_quarter_date
    FROM sfdc_opportunity_snapshot_history_xf opp_snapshot
    WHERE opp_snapshot.snapshot_fiscal_quarter_name = 'FY21-Q2'
      And opp_snapshot.pipeline_created_fiscal_quarter_date = opp_snapshot.snapshot_fiscal_quarter_date
      AND opp_snapshot.snapshot_day_of_fiscal_quarter_normalised = 90
      AND opp_snapshot.stage_name in ('00-Pre Opportunity', '0-Pending Acceptance', '0-Qualifying')
    GROUP BY 1, 2, 3


), add_compound_metrics AS (

    SELECT 
      opp_snapshot.*,
      CASE
        WHEN opp_snapshot.order_type_stamped IN ('1. New - First Order' ,'2. New - Connected', '3. Growth')
          AND opp_snapshot.is_edu_oss = 0
          AND opp_snapshot.pipeline_created_fiscal_quarter_date IS NOT NULL
          AND opp_snapshot.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Credit','Contract Reset')
          AND opp_snapshot.stage_name NOT IN ('00-Pre Opportunity','10-Duplicate', '9-Unqualified','0-Pending Acceptance')
          AND (opp_snapshot.net_arr > 0
            OR opp_snapshot.opportunity_category = 'Credit')
          -- exclude vision opps from FY21-Q2
          AND (opp_snapshot.pipeline_created_fiscal_quarter_name != 'FY21-Q2'
                OR vision_opps.opportunity_id IS NULL)
          -- 20220128 Updated to remove webdirect SQS deals
          AND opp_snapshot.sales_qualified_source  != 'Web Direct Generated'
              THEN 1
         ELSE 0
      END                                                      AS is_eligible_created_pipeline_flag,

      -- 20201021 NF: This should be replaced by a table that keeps track of excluded deals for forecasting purposes
      CASE 
        WHEN opp_snapshot.ultimate_parent_account_id IN ('001610000111bA3AAI','0016100001F4xlaAAB','0016100001CXGCsAAP','00161000015O9YnAAK','0016100001b9JscAAE') 
          AND opp_snapshot.close_date < '2020-08-01' 
            THEN 1
        -- NF 2021 - Pubsec extreme deals
        WHEN opp_snapshot.opportunity_id IN ('0064M00000WtZKUQA3','0064M00000Xb975QAB')
          AND opp_snapshot.snapshot_date < '2021-05-01' 
          THEN 1
        -- exclude vision opps from FY21-Q2
        WHEN opp_snapshot.pipeline_created_fiscal_quarter_name = 'FY21-Q2'
            AND vision_opps.opportunity_id IS NOT NULL
          THEN 1
        -- NF 20220415 PubSec duplicated deals on Pipe Gen -- Lockheed Martin GV - 40000 Ultimate Renewal
        WHEN opp_snapshot.opportunity_id IN ('0064M00000ZGpfQQAT','0064M00000ZGpfVQAT','0064M00000ZGpfGQAT')
          THEN 1
        ELSE 0
      END                                                         AS is_excluded_flag,

      CASE 
        WHEN lower(opp_snapshot.deal_group) LIKE ANY ('%growth%', '%new%')
          AND opp_snapshot.is_edu_oss = 0
          AND opp_snapshot.is_stage_1_plus = 1
          AND opp_snapshot.forecast_category_name != 'Omitted'
          AND opp_snapshot.is_open = 1
         THEN 1
         ELSE 0
      END                                                   AS is_eligible_open_pipeline_flag

    FROM sfdc_opportunity_snapshot_history_xf opp_snapshot
    LEFT JOIN vision_opps
      ON vision_opps.opportunity_id = opp_snapshot.opportunity_id
      AND vision_opps.snapshot_fiscal_quarter_date = opp_snapshot.snapshot_fiscal_quarter_date


/*
  JK 2022-12-15: The following fields in the below CTE are calculated within the model instead of taking the fields 
  directly from EDM mart. There have been some discrepancies potentially due to the usage of unadjusted nARR in the mart. 
*/

), temp_calculations AS (

    SELECT
      *,

      CASE
        WHEN (
            is_won = 1 
            OR (is_renewal = 1 AND is_lost = 1)
            )
          THEN net_arr
        ELSE 0 
      END                                                   AS booked_net_arr,

      CASE
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          AND (is_won = 1 
              OR (is_renewal = 1 AND is_lost = 1))
          AND order_type_stamped IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
          -- Not JiHu
            THEN 1
        ELSE 0
      END                                                   AS is_booked_net_arr_flag,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          THEN net_arr
        ELSE 0                                                                                              
      END                                                   AS open_1plus_net_arr,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_3_plus = 1   
            THEN net_arr
        ELSE 0
      END                                                   AS open_3plus_net_arr,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1  
          AND is_stage_4_plus = 1
            THEN net_arr
        ELSE 0
      END                                                   AS open_4plus_net_arr,

      CASE
        WHEN ((is_renewal = 1
            AND is_lost = 1)
            OR is_won = 1 )
            AND order_type_stamped IN ('5. Churn - Partial' ,'6. Churn - Final', '4. Contraction')
        THEN net_arr
        ELSE 0
      END                                                   AS churned_contraction_net_arr,

      CASE
        WHEN pipeline_created_fiscal_quarter_name = snapshot_fiscal_quarter_name
          AND is_eligible_created_pipeline_flag = 1
            THEN net_arr
        ELSE 0 
      END                                                 AS created_in_snapshot_quarter_net_arr,

      CASE 
        WHEN pipeline_created_fiscal_quarter_name = close_fiscal_quarter_name
           AND is_won = 1
           AND is_eligible_created_pipeline_flag = 1
            THEN net_arr
        ELSE 0
      END                                                 AS created_and_won_same_quarter_net_arr,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_1_plus = 1
            THEN calculated_deal_count  
        ELSE 0                                                                                              
      END                                               AS open_1plus_deal_count,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_3_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_3plus_deal_count,

      CASE 
        WHEN is_eligible_open_pipeline_flag = 1
          AND is_stage_4_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_4plus_deal_count,

      CASE 
        WHEN is_won = 1
          THEN calculated_deal_count
        ELSE 0
      END                                               AS booked_deal_count,

      CASE
        WHEN ((is_renewal = 1
            AND is_lost = 1)
            OR is_won = 1 )
            AND order_type_stamped IN ('5. Churn - Partial' ,'6. Churn - Final', '4. Contraction')
        THEN calculated_deal_count
        ELSE 0
      END                                                   AS churned_contraction_deal_count,

      CASE
        WHEN pipeline_created_fiscal_quarter_name = snapshot_fiscal_quarter_name
          AND is_eligible_created_pipeline_flag = 1
            THEN calculated_deal_count
        ELSE 0 
      END                                                 AS created_in_snapshot_quarter_deal_count,

      -- ASP Analysis eligibility issue: https://gitlab.com/gitlab-com/sales-team/field-operations/sales-operations/-/issues/2606
      CASE 
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          -- For ASP we care mainly about add on, new business, excluding contraction / churn
          AND order_type_stamped IN ('1. New - First Order','2. New - Connected','3. Growth')
          -- Exclude Decomissioned as they are not aligned to the real owner
          -- Contract Reset, Decomission
          AND opportunity_category IN ('Standard','Ramp Deal','Internal Correction')
          -- Exclude Deals with nARR < 0
          AND net_arr > 0
          -- Not JiHu
            THEN 1
          ELSE 0
      END                                                   AS is_eligible_asp_analysis_flag,

       -- Age eligibility issue: https://gitlab.com/gitlab-com/sales-team/field-operations/sales-operations/-/issues/2606
      CASE 
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          -- Renewals are not having the same motion as rest of deals
          AND is_renewal = 0
          -- For stage age we exclude only ps/other
          AND order_type_stamped IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
          -- Only include deal types with meaningful journeys through the stages
          AND opportunity_category IN ('Standard','Ramp Deal','Decommissioned')
          -- Web Purchase have a different dynamic and should not be included
          AND is_web_portal_purchase = 0
          -- Not JiHu
            THEN 1
          ELSE 0
      END                                                   AS is_eligible_age_analysis_flag,

      CASE
        WHEN is_edu_oss = 0
          AND is_deleted = 0
          AND order_type_stamped IN ('4. Contraction','6. Churn - Final','5. Churn - Partial')
          -- Not JiHu
            THEN 1
          ELSE 0
      END                                                   AS is_eligible_churn_contraction_flag,

      -- SAO alignment issue: https://gitlab.com/gitlab-com/sales-team/field-operations/sales-operations/-/issues/2656
      -- 2022-08-23 JK: using the central is_sao logic
      CASE
        WHEN sales_accepted_date IS NOT NULL
          AND is_edu_oss = 0
          AND stage_name NOT IN ('10-Duplicate')
            THEN 1
        ELSE 0
      END                                                   AS is_eligible_sao_flag,

      CASE 
        WHEN net_arr > 0 AND net_arr < 5000 
          THEN '1 - Small (<5k)'
        WHEN net_arr >=5000 AND net_arr < 25000 
          THEN '2 - Medium (5k - 25k)'
        WHEN net_arr >=25000 AND net_arr < 100000 
          THEN '3 - Big (25k - 100k)'
        WHEN net_arr >= 100000 
          THEN '4 - Jumbo (>100k)'
        ELSE 'Other' 
      END                                                          AS deal_size,

      -- extended version of the deal size
      CASE 
        WHEN net_arr > 0 AND net_arr < 1000 
          THEN '1. (0k -1k)'
        WHEN net_arr >=1000 AND net_arr < 10000 
          THEN '2. (1k - 10k)'
        WHEN net_arr >=10000 AND net_arr < 50000 
          THEN '3. (10k - 50k)'
        WHEN net_arr >=50000 AND net_arr < 100000 
          THEN '4. (50k - 100k)'
        WHEN net_arr >= 100000 AND net_arr < 250000 
          THEN '5. (100k - 250k)'
        WHEN net_arr >= 250000 AND net_arr < 500000 
          THEN '6. (250k - 500k)'
        WHEN net_arr >= 500000 AND net_arr < 1000000 
          THEN '7. (500k-1000k)'
        WHEN net_arr >= 1000000 
          THEN '8. (>1000k)'
        ELSE 'Other' 
      END                                                           AS calculated_deal_size,

    -- For some analysis it is important to order stages by rank
    CASE
            WHEN stage_name = '0-Pending Acceptance'
                THEN 0
            WHEN stage_name = '1-Discovery'
                THEN 1
             WHEN stage_name = '2-Scoping'
                THEN 2
            WHEN stage_name = '3-Technical Evaluation'
                THEN 3
            WHEN stage_name = '4-Proposal'
                THEN 4
            WHEN stage_name = '5-Negotiating'
                THEN 5
            WHEN stage_name = '6-Awaiting Signature'
                THEN 6
            WHEN stage_name = '7-Closing'
                THEN 7
            WHEN stage_name = 'Closed Won'
                THEN 8
            WHEN stage_name = '8-Closed Lost'
                THEN 9
            WHEN stage_name = '9-Unqualified'
                THEN 10
            WHEN stage_name = '10-Duplicate'
                THEN 11
            ELSE NULL
    END                     AS stage_name_rank,
    
    CASE
        WHEN stage_name IN ('0-Pending Acceptance')
            THEN '0. Acceptance' 
         WHEN stage_name IN ('1-Discovery','2-Scoping')
            THEN '1. Early'
         WHEN stage_name IN ('3-Technical Evaluation','4-Proposal')
            THEN '2. Middle'
         WHEN stage_name IN ('5-Negotiating','6-Awaiting Signature')
            THEN '3. Late'
        ELSE '4. Closed'
    END                     AS pipeline_category,

    -- NF: cycle time will consider if the opty is renewal and eligible to be considered 
    -- using the is_eligible_cycle_time_analysis
    CASE 
        WHEN is_edu_oss = 0
            AND is_deleted = 0
            -- For stage age we exclude only ps/other
            AND order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            -- Only include deal types with meaningful journeys through the stages
            AND opportunity_category IN ('Standard')
            -- Web Purchase have a different dynamic and should not be included
            AND is_web_portal_purchase = 0
                THEN 1
        ELSE 0
    END                                                           AS is_eligible_cycle_time_analysis_flag,

    -- NF: We consider net_arr_created date for renewals as they haver a very distinct motion than 
    --      add on and First Orders
    --     Logic is different for open deals so we can evaluate their current cycle time.
    CASE
        WHEN is_renewal = 1 AND is_closed = 1
            THEN DATEDIFF(day, net_arr_created_date, close_date)
        WHEN is_renewal = 0 AND is_closed = 1
            THEN DATEDIFF(day, created_date, close_date)
         WHEN is_renewal = 1 AND is_open = 1
            THEN DATEDIFF(day, net_arr_created_date, snapshot_date)
        WHEN is_renewal = 0 AND is_open = 1
            THEN DATEDIFF(day, created_date, snapshot_date)
    END                                                           AS cycle_time_in_days,

    -- Calculated fields
    CASE
        WHEN LOWER(product_category) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(product_category) LIKE '%ultimate%'
            THEN 'Ultimate'
        WHEN LOWER(intented_product_tier) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(intented_product_tier) LIKE '%ultimate%'
            THEN 'Ultimate'
        ELSE 'Other'
    END AS  product_category_tier,

    CASE
        WHEN lower(product_category) LIKE '%saas%'
                THEN 'SaaS'
        WHEN lower(product_category) LIKE '%self-managed%'
                THEN 'Self-Managed'
        ELSE 'Other'
    END AS  product_category_deployment


    FROM add_compound_metrics
)

SELECT *
FROM temp_calculations19:T26b2,{{ config(alias='sfdc_users_xf') }}

WITH source_user AS (

    SELECT 
        sfdc_users.id                   AS user_id,
        sfdc_users.user_segment__c      AS user_segment,
        sfdc_users.user_role_type__c    AS user_role_type,
        sfdc_user_roles_source.name     AS user_role_name,
        COALESCE(CAST(REPLACE(
                REPLACE(sfdc_users.hybrid__c,'Yes','1')
                ,'No','0') 
            AS INTEGER),0)              AS is_hybrid_flag
    FROM {{ source('salesforce', 'user') }} sfdc_users
    LEFT JOIN {{ ref('sfdc_user_roles_source') }} sfdc_user_roles_source
      ON sfdc_users.userroleid = sfdc_user_roles_source.id

),  base AS (
    SELECT
      edm_user.dim_crm_user_id           AS user_id,
      edm_user.user_name                 AS name,
      edm_user.department,
      edm_user.title,
      edm_user.team,
      CASE --only expose GitLab.com email addresses of internal employees
        WHEN edm_user.user_email LIKE '%gitlab.com' THEN edm_user.user_email ELSE NULL
      END                       AS user_email,
      edm_user.manager_name,
      edm_user.manager_id,
      
      CASE 
        WHEN LOWER(edm_user.crm_user_geo) IN ('amer','apac','jihu','emea','pubsec')
          THEN IFNULL(edm_user.crm_user_geo, 'Other')   
        ELSE 'Other'
      END                                                   AS user_geo,
      IFNULL(edm_user.crm_user_region, 'Other')             AS user_region,


      CASE 
        WHEN LOWER(source_user.user_segment) = 'lrg' 
          THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'mm' 
          THEN 'Mid-Market' 
        WHEN LOWER(source_user.user_segment) = 'jihu' 
          THEN 'Jihu'         
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'All'        
        ELSE
          IFNULL(source_user.user_segment, 'Other') 
      END                                                   AS final_user_segment,

      LOWER(source_user.user_segment)                       AS raw_user_segment,

        -- JK 2023-02-06 adding adjusted segment
        -- If MM / SMB and Region = META then Segment = Large
        -- If MM/SMB and Region = LATAM then Segment = Large
        -- If MM/SMB and Geo = APAC then Segment = Large
        -- Use that Adjusted Segment Field in our FY23 models
        CASE
        WHEN (LOWER(final_user_segment) = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'meta'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'latam'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_geo) = 'apac'
            THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'Large'     
        ELSE final_user_segment
        END                                            AS adjusted_user_segment,

      IFNULL(edm_user.crm_user_area, 'Other')          AS user_area,
      IFNULL(edm_user.user_role_name, 'Other')         AS role_name,
      IFNULL(edm_user.crm_user_role_type, 'Other')     AS role_type,
      edm_user.start_date,
      edm_user.is_active,
      edm_user.employee_number,

      source_user.is_hybrid_flag

    FROM {{ref('dim_crm_user')}} edm_user
    LEFT JOIN source_user
        ON edm_user.dim_crm_user_id = source_user.user_id

), consolidation AS (
    SELECT
      base.user_id,
      base.name,
      base.department,
      base.title,
      base.team,
      base.user_email,
      base.manager_name,
      base.manager_id,
      base.user_geo,
      base.user_region,
      -- NF: adjusted to account for the updates the data team ran on source
      -- Needed to adjust ALL to Large
      base.final_user_segment AS user_segment,
      base.raw_user_segment,
      base.adjusted_user_segment,
      base.user_area,
      base.role_name,
      base.role_type,
      base.start_date,
      base.is_active,
      base.is_hybrid_flag,
      base.employee_number,
     
      CASE
        WHEN LOWER(title) LIKE '%strategic account%'
           OR LOWER(title) LIKE '%account executive%'
           OR LOWER(title) LIKE '%country manager%'
           OR LOWER(title) LIKE '%public sector channel manager%'
        THEN 1
        ELSE 0
      END                                                                                          AS is_rep_flag

    FROM base

), user_based_reporting_keys AS (
    SELECT
      consolidation.*,

      -- Business Unit (X-Ray 1st hierarchy)
      -- will be replaced with the actual field
      CASE 
        WHEN LOWER(user_segment) IN ('large','pubsec','all') -- "all" segment is PubSec for ROW
            THEN 'ENTG'
        WHEN LOWER(user_region) IN ('latam','meta')
            OR LOWER(user_geo) IN ('apac')
            THEN 'ENTG'         
        WHEN LOWER(user_segment) IN ('mid-market','smb')
            THEN 'COMM'
        WHEN LOWER(user_segment) = 'jihu' THEN 'JiHu'
        ELSE 'Other'
      END AS business_unit,

      -- Sub-Business Unit (X-Ray 2nd hierarchy)
      /*
      JK 2023-02-06: sub-BU is used in lower hierarchy fields calculation (division & asm).
      Therefore when making changes to the field, make sure to understand implications on the whole key hierarchy
      */
      CASE
        WHEN LOWER(business_unit) = 'entg'
          THEN user_geo

        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'smb'
            AND LOWER(user_geo) = 'amer'
            AND LOWER(user_area) = 'lowtouch'
            ) 
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'mid-market'
            AND (LOWER(user_geo) = 'amer' 
                OR LOWER(user_geo) = 'emea')
            AND LOWER(role_type) = 'fo'
            )
          THEN 'MM First Orders'  --mid-market FO(?)
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'emea'
          THEN  'EMEA'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'amer'
          THEN 'AMER'
        ELSE 'Other'
      END AS sub_business_unit,

      -- Division (X-Ray 3rd hierarchy)
      CASE 
        WHEN LOWER(business_unit) = 'entg'
          THEN user_region

        WHEN 
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'mid-market'
          THEN 'Mid-Market'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'mid-market'         
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN 'MM First Orders'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer'
             OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'smb'
          THEN 'SMB'
        ELSE 'Other'
      END AS division,

      -- ASM (X-Ray 4th hierarchy): definition pending
      CASE
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'amer'
          THEN user_area
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND (LOWER(division) = 'dach' 
            OR LOWER(division) = 'neur' 
            OR LOWER(division) = 'seur')
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND LOWER(division) = 'meta'
          THEN user_segment 
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'apac'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) != 'sled'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) = 'sled'
          THEN user_region
        WHEN 
          LOWER(business_unit) = 'comm'
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN user_geo
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) = 'fo'
          THEN 'LowTouch FO'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) != 'fo'
          THEN 'LowTouch Pool'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          THEN user_area
        ELSE 'Other'
      END AS asm
    FROM consolidation

), final AS (

    SELECT *
    FROM user_based_reporting_keys

)

SELECT *,

    LOWER(business_unit)                                                              AS key_bu,
    LOWER(business_unit || '_' || sub_business_unit)                                  AS key_bu_subbu,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division)               AS key_bu_subbu_division,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division || '_' || asm) AS key_bu_subbu_division_asm,
    LOWER(key_bu_subbu_division_asm || '_' || role_type || '_' || TO_VARCHAR(employee_number))  AS key_sal_heatmap

FROM final1a:T268b,

WITH source_user AS (

    SELECT 
        sfdc_users.id                   AS user_id,
        sfdc_users.user_segment__c      AS user_segment,
        sfdc_users.user_role_type__c    AS user_role_type,
        sfdc_user_roles_source.name     AS user_role_name,
        COALESCE(CAST(REPLACE(
                REPLACE(sfdc_users.hybrid__c,'Yes','1')
                ,'No','0') 
            AS INTEGER),0)              AS is_hybrid_flag
    FROM "RAW".salesforce_stitch.user sfdc_users
    LEFT JOIN "PREP".sfdc.sfdc_user_roles_source sfdc_user_roles_source
      ON sfdc_users.userroleid = sfdc_user_roles_source.id

),  base AS (
    SELECT
      edm_user.dim_crm_user_id           AS user_id,
      edm_user.user_name                 AS name,
      edm_user.department,
      edm_user.title,
      edm_user.team,
      CASE --only expose GitLab.com email addresses of internal employees
        WHEN edm_user.user_email LIKE '%gitlab.com' THEN edm_user.user_email ELSE NULL
      END                       AS user_email,
      edm_user.manager_name,
      edm_user.manager_id,
      
      CASE 
        WHEN LOWER(edm_user.crm_user_geo) IN ('amer','apac','jihu','emea','pubsec')
          THEN IFNULL(edm_user.crm_user_geo, 'Other')   
        ELSE 'Other'
      END                                                   AS user_geo,
      IFNULL(edm_user.crm_user_region, 'Other')             AS user_region,


      CASE 
        WHEN LOWER(source_user.user_segment) = 'lrg' 
          THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'mm' 
          THEN 'Mid-Market' 
        WHEN LOWER(source_user.user_segment) = 'jihu' 
          THEN 'Jihu'         
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'All'        
        ELSE
          IFNULL(source_user.user_segment, 'Other') 
      END                                                   AS final_user_segment,

      LOWER(source_user.user_segment)                       AS raw_user_segment,

        -- JK 2023-02-06 adding adjusted segment
        -- If MM / SMB and Region = META then Segment = Large
        -- If MM/SMB and Region = LATAM then Segment = Large
        -- If MM/SMB and Geo = APAC then Segment = Large
        -- Use that Adjusted Segment Field in our FY23 models
        CASE
        WHEN (LOWER(final_user_segment) = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'meta'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_region) = 'latam'
            THEN 'Large'
        WHEN (LOWER(final_user_segment)  = 'mid-market'
                OR LOWER(final_user_segment)  = 'smb')
            AND LOWER(user_geo) = 'apac'
            THEN 'Large'
        WHEN LOWER(source_user.user_segment) = 'all' 
          THEN 'Large'     
        ELSE final_user_segment
        END                                            AS adjusted_user_segment,

      IFNULL(edm_user.crm_user_area, 'Other')          AS user_area,
      IFNULL(edm_user.user_role_name, 'Other')         AS role_name,
      IFNULL(edm_user.crm_user_role_type, 'Other')     AS role_type,
      edm_user.start_date,
      edm_user.is_active,
      edm_user.employee_number,

      source_user.is_hybrid_flag

    FROM "PROD".common.dim_crm_user edm_user
    LEFT JOIN source_user
        ON edm_user.dim_crm_user_id = source_user.user_id

), consolidation AS (
    SELECT
      base.user_id,
      base.name,
      base.department,
      base.title,
      base.team,
      base.user_email,
      base.manager_name,
      base.manager_id,
      base.user_geo,
      base.user_region,
      -- NF: adjusted to account for the updates the data team ran on source
      -- Needed to adjust ALL to Large
      base.final_user_segment AS user_segment,
      base.raw_user_segment,
      base.adjusted_user_segment,
      base.user_area,
      base.role_name,
      base.role_type,
      base.start_date,
      base.is_active,
      base.is_hybrid_flag,
      base.employee_number,
     
      CASE
        WHEN LOWER(title) LIKE '%strategic account%'
           OR LOWER(title) LIKE '%account executive%'
           OR LOWER(title) LIKE '%country manager%'
           OR LOWER(title) LIKE '%public sector channel manager%'
        THEN 1
        ELSE 0
      END                                                                                          AS is_rep_flag

    FROM base

), user_based_reporting_keys AS (
    SELECT
      consolidation.*,

      -- Business Unit (X-Ray 1st hierarchy)
      -- will be replaced with the actual field
      CASE 
        WHEN LOWER(user_segment) IN ('large','pubsec','all') -- "all" segment is PubSec for ROW
            THEN 'ENTG'
        WHEN LOWER(user_region) IN ('latam','meta')
            OR LOWER(user_geo) IN ('apac')
            THEN 'ENTG'         
        WHEN LOWER(user_segment) IN ('mid-market','smb')
            THEN 'COMM'
        WHEN LOWER(user_segment) = 'jihu' THEN 'JiHu'
        ELSE 'Other'
      END AS business_unit,

      -- Sub-Business Unit (X-Ray 2nd hierarchy)
      /*
      JK 2023-02-06: sub-BU is used in lower hierarchy fields calculation (division & asm).
      Therefore when making changes to the field, make sure to understand implications on the whole key hierarchy
      */
      CASE
        WHEN LOWER(business_unit) = 'entg'
          THEN user_geo

        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'smb'
            AND LOWER(user_geo) = 'amer'
            AND LOWER(user_area) = 'lowtouch'
            ) 
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND
            (
            LOWER(user_segment) = 'mid-market'
            AND (LOWER(user_geo) = 'amer' 
                OR LOWER(user_geo) = 'emea')
            AND LOWER(role_type) = 'fo'
            )
          THEN 'MM First Orders'  --mid-market FO(?)
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'emea'
          THEN  'EMEA'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_geo) = 'amer'
          THEN 'AMER'
        ELSE 'Other'
      END AS sub_business_unit,

      -- Division (X-Ray 3rd hierarchy)
      CASE 
        WHEN LOWER(business_unit) = 'entg'
          THEN user_region

        WHEN 
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'mid-market'
          THEN 'Mid-Market'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'mid-market'         
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN 'MM First Orders'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          THEN 'AMER Low-Touch'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer'
             OR LOWER(sub_business_unit) = 'emea')
          AND LOWER(user_segment) = 'smb'
          THEN 'SMB'
        ELSE 'Other'
      END AS division,

      -- ASM (X-Ray 4th hierarchy): definition pending
      CASE
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'amer'
          THEN user_area
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND (LOWER(division) = 'dach' 
            OR LOWER(division) = 'neur' 
            OR LOWER(division) = 'seur')
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'emea'
          AND LOWER(division) = 'meta'
          THEN user_segment 
        WHEN 
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'apac'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) != 'sled'
          THEN user_area
        WHEN
          LOWER(business_unit) = 'entg'
          AND LOWER(sub_business_unit) = 'pubsec'
          AND LOWER(division) = 'sled'
          THEN user_region
        WHEN 
          LOWER(business_unit) = 'comm'
          AND LOWER(sub_business_unit) = 'mm first orders'
          THEN user_geo
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) = 'fo'
          THEN 'LowTouch FO'
        WHEN
          LOWER(business_unit) = 'comm'
          AND LOWER(user_segment) = 'smb'
          AND LOWER(sub_business_unit) = 'amer low-touch'
          AND LOWER(role_type) != 'fo'
          THEN 'LowTouch Pool'
        WHEN
          LOWER(business_unit) = 'comm'
          AND (LOWER(sub_business_unit) = 'amer' 
            OR LOWER(sub_business_unit) = 'emea')
          THEN user_area
        ELSE 'Other'
      END AS asm
    FROM consolidation

), final AS (

    SELECT *
    FROM user_based_reporting_keys

)

SELECT *,

    LOWER(business_unit)                                                              AS key_bu,
    LOWER(business_unit || '_' || sub_business_unit)                                  AS key_bu_subbu,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division)               AS key_bu_subbu_division,
    LOWER(business_unit || '_' || sub_business_unit || '_' || division || '_' || asm) AS key_bu_subbu_division_asm,
    LOWER(key_bu_subbu_division_asm || '_' || role_type || '_' || TO_VARCHAR(employee_number))  AS key_sal_heatmap

FROM final1b:T23c1,{{ simple_cte([
    ('dim_crm_account', 'dim_crm_account'),
    ('fct_crm_account', 'fct_crm_account'),
    ('dim_crm_user', 'dim_crm_user')
    ])

}},

 final AS ( 

    SELECT
       --primary key
      dim_crm_account.dim_crm_account_id,

      --surrogate keys
      fct_crm_account.dim_parent_crm_account_id,
      fct_crm_account.dim_crm_user_id,
      fct_crm_account.merged_to_account_id,
      fct_crm_account.record_type_id,
      fct_crm_account.crm_account_owner_id,
      fct_crm_account.proposed_crm_account_owner_id,
      fct_crm_account.technical_account_manager_id,
      fct_crm_account.master_record_id,
      fct_crm_account.dim_crm_person_primary_contact_id,

      --account people
      dim_crm_account.crm_account_owner,
      dim_crm_account.account_owner,
      dim_crm_account.proposed_crm_account_owner,
      dim_crm_account.technical_account_manager,
      dim_crm_account.owner_role,
      dim_crm_account.user_role_type,

      --crm account owner attributes
      crm_account_owner.crm_user_geo AS crm_account_owner_geo,
      crm_account_owner.crm_user_region AS crm_account_owner_region,
      crm_account_owner.crm_user_area AS crm_account_owner_area,

      ----ultimate parent crm account info
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_business_unit,
      dim_crm_account.parent_crm_account_geo,
      dim_crm_account.parent_crm_account_region,
      dim_crm_account.parent_crm_account_area,
      dim_crm_account.parent_crm_account_territory,
      dim_crm_account.parent_crm_account_role_type,
      dim_crm_account.parent_crm_account_max_family_employee,
      dim_crm_account.parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_upa_state,
      dim_crm_account.parent_crm_account_upa_city,
      dim_crm_account.parent_crm_account_upa_street,
      dim_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_employee_count,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_billing_country_code,
      dim_crm_account.crm_account_type,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_sub_industry,
      dim_crm_account.crm_account_employee_count_band,
      dim_crm_account.partner_vat_tax_id,
      dim_crm_account.account_manager,
      dim_crm_account.business_development_rep,
      dim_crm_account.dedicated_service_engineer,
      dim_crm_account.account_tier,
      dim_crm_account.account_tier_notes,
      dim_crm_account.license_utilization,
      dim_crm_account.support_level,
      dim_crm_account.named_account,
      dim_crm_account.billing_postal_code,
      dim_crm_account.partner_type,
      dim_crm_account.partner_status,
      dim_crm_account.gitlab_customer_success_project,
      dim_crm_account.demandbase_account_list,
      dim_crm_account.demandbase_intent,
      dim_crm_account.demandbase_page_views,
      dim_crm_account.demandbase_score,
      dim_crm_account.demandbase_sessions,
      dim_crm_account.demandbase_trending_offsite_intent,
      dim_crm_account.demandbase_trending_onsite_engagement,
      dim_crm_account.is_locally_managed_account,
      dim_crm_account.is_strategic_account,
      dim_crm_account.partner_track,
      dim_crm_account.partners_partner_type,
      dim_crm_account.gitlab_partner_program,
      dim_crm_account.zoom_info_company_name,
      dim_crm_account.zoom_info_company_revenue,
      dim_crm_account.zoom_info_company_employee_count,
      dim_crm_account.zoom_info_company_industry,
      dim_crm_account.zoom_info_company_city,
      dim_crm_account.zoom_info_company_state_province,
      dim_crm_account.zoom_info_company_country,
      dim_crm_account.zoominfo_account_phone,
      dim_crm_account.account_phone,
      dim_crm_account.abm_tier,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.partner_account_iban_number,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_zi_technologies,
      dim_crm_account.crm_account_zoom_info_website,
      dim_crm_account.crm_account_zoom_info_company_other_domains,
      dim_crm_account.crm_account_zoom_info_dozisf_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_name,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      dim_crm_account.forbes_2000_rank,
      dim_crm_account.sales_development_rep,
      dim_crm_account.admin_manual_source_number_of_employees,
      dim_crm_account.admin_manual_source_account_address,
      dim_crm_account.eoa_sentiment,
      dim_crm_account.gs_health_user_engagement,
      dim_crm_account.gs_health_cd,
      dim_crm_account.gs_health_devsecops,
      dim_crm_account.gs_health_ci,
      dim_crm_account.gs_health_scm,
      dim_crm_account.risk_impact,
      dim_crm_account.risk_reason,
      dim_crm_account.last_timeline_at_risk_update,
      dim_crm_account.last_at_risk_update_comments,
      dim_crm_account.bdr_prospecting_status,

      --degenerative dimensions
      dim_crm_account.is_sdr_target_account,
      dim_crm_account.is_key_account,
      dim_crm_account.is_reseller,
      dim_crm_account.is_jihu_account,
      dim_crm_account.is_first_order_available,
      dim_crm_account.is_excluded_from_zoom_info_enrich,
      dim_crm_account.is_zi_jenkins_present,
      dim_crm_account.is_zi_svn_present,
      dim_crm_account.is_zi_tortoise_svn_present,
      dim_crm_account.is_zi_gcp_present,
      dim_crm_account.is_zi_atlassian_present,
      dim_crm_account.is_zi_github_present,
      dim_crm_account.is_zi_github_enterprise_present,
      dim_crm_account.is_zi_aws_present,
      dim_crm_account.is_zi_kubernetes_present,
      dim_crm_account.is_zi_apache_subversion_present,
      dim_crm_account.is_zi_apache_subversion_svn_present,
      dim_crm_account.is_zi_hashicorp_present,
      dim_crm_account.is_zi_aws_cloud_trail_present,
      dim_crm_account.is_zi_circle_ci_present,
      dim_crm_account.is_zi_bit_bucket_present,

      --dates
      dim_crm_account.crm_account_created_date,
      dim_crm_account.abm_tier_1_date,
      dim_crm_account.abm_tier_2_date,
      dim_crm_account.abm_tier_3_date,
      dim_crm_account.gtm_acceleration_date,
      dim_crm_account.gtm_account_based_date,
      dim_crm_account.gtm_account_centric_date,
      dim_crm_account.partners_signed_contract_date,
      dim_crm_account.technical_account_manager_date,
      dim_crm_account.next_renewal_date,
      dim_crm_account.customer_since_date,
      dim_crm_account.gs_first_value_date,
      dim_crm_account.gs_last_csm_activity_date,

      --measures
      fct_crm_account.count_active_subscription_charges,
      fct_crm_account.count_active_subscriptions,
      fct_crm_account.count_billing_accounts,
      fct_crm_account.count_licensed_users,
      fct_crm_account.count_of_new_business_won_opportunities,
      fct_crm_account.count_open_renewal_opportunities,
      fct_crm_account.count_opportunities,
      fct_crm_account.count_products_purchased,
      fct_crm_account.count_won_opportunities,
      fct_crm_account.count_concurrent_ee_subscriptions,
      fct_crm_account.count_ce_instances,
      fct_crm_account.count_active_ce_users,
      fct_crm_account.count_open_opportunities,
      fct_crm_account.count_using_ce,
      fct_crm_account.parent_crm_account_lam,
      fct_crm_account.parent_crm_account_lam_dev_count,
      fct_crm_account.carr_this_account,
      fct_crm_account.carr_account_family,
      fct_crm_account.potential_users,
      fct_crm_account.number_of_licenses_this_account,
      fct_crm_account.crm_account_zoom_info_number_of_developers,
      fct_crm_account.crm_account_zoom_info_total_funding,
      fct_crm_account.decision_maker_count_linkedin,
      fct_crm_account.number_of_employees,

      --metadata
      fct_crm_account.created_by_id,
      dim_crm_account.created_by_name,
      fct_crm_account.last_modified_by_id,
      dim_crm_account.last_modified_by_name,
      fct_crm_account.last_modified_date_id,
      dim_crm_account.last_modified_date,
      fct_crm_account.last_activity_date_id,
      dim_crm_account.last_activity_date,
      dim_crm_account.is_deleted

      FROM dim_crm_account
      INNER JOIN fct_crm_account
        ON dim_crm_account.dim_crm_account_id = fct_crm_account.dim_crm_account_id
      LEFT JOIN dim_crm_user crm_account_owner
        ON fct_crm_account.crm_account_owner_id = crm_account_owner.dim_crm_user_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@michellecooper",
    updated_by="@lisvinueza",
    created_date="2022-08-10",
    updated_date="2023-05-21"
) }}1c:T2527,

WITH dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), fct_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

),

 final AS ( 

    SELECT
       --primary key
      dim_crm_account.dim_crm_account_id,

      --surrogate keys
      fct_crm_account.dim_parent_crm_account_id,
      fct_crm_account.dim_crm_user_id,
      fct_crm_account.merged_to_account_id,
      fct_crm_account.record_type_id,
      fct_crm_account.crm_account_owner_id,
      fct_crm_account.proposed_crm_account_owner_id,
      fct_crm_account.technical_account_manager_id,
      fct_crm_account.master_record_id,
      fct_crm_account.dim_crm_person_primary_contact_id,

      --account people
      dim_crm_account.crm_account_owner,
      dim_crm_account.account_owner,
      dim_crm_account.proposed_crm_account_owner,
      dim_crm_account.technical_account_manager,
      dim_crm_account.owner_role,
      dim_crm_account.user_role_type,

      --crm account owner attributes
      crm_account_owner.crm_user_geo AS crm_account_owner_geo,
      crm_account_owner.crm_user_region AS crm_account_owner_region,
      crm_account_owner.crm_user_area AS crm_account_owner_area,

      ----ultimate parent crm account info
      dim_crm_account.parent_crm_account_name,
      dim_crm_account.parent_crm_account_industry,
      dim_crm_account.parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_business_unit,
      dim_crm_account.parent_crm_account_geo,
      dim_crm_account.parent_crm_account_region,
      dim_crm_account.parent_crm_account_area,
      dim_crm_account.parent_crm_account_territory,
      dim_crm_account.parent_crm_account_role_type,
      dim_crm_account.parent_crm_account_max_family_employee,
      dim_crm_account.parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_upa_state,
      dim_crm_account.parent_crm_account_upa_city,
      dim_crm_account.parent_crm_account_upa_street,
      dim_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      dim_crm_account.crm_account_name,
      dim_crm_account.crm_account_employee_count,
      dim_crm_account.crm_account_gtm_strategy,
      dim_crm_account.crm_account_focus_account,
      dim_crm_account.crm_account_owner_user_segment,
      dim_crm_account.crm_account_billing_country,
      dim_crm_account.crm_account_billing_country_code,
      dim_crm_account.crm_account_type,
      dim_crm_account.crm_account_industry,
      dim_crm_account.crm_account_sub_industry,
      dim_crm_account.crm_account_employee_count_band,
      dim_crm_account.partner_vat_tax_id,
      dim_crm_account.account_manager,
      dim_crm_account.business_development_rep,
      dim_crm_account.dedicated_service_engineer,
      dim_crm_account.account_tier,
      dim_crm_account.account_tier_notes,
      dim_crm_account.license_utilization,
      dim_crm_account.support_level,
      dim_crm_account.named_account,
      dim_crm_account.billing_postal_code,
      dim_crm_account.partner_type,
      dim_crm_account.partner_status,
      dim_crm_account.gitlab_customer_success_project,
      dim_crm_account.demandbase_account_list,
      dim_crm_account.demandbase_intent,
      dim_crm_account.demandbase_page_views,
      dim_crm_account.demandbase_score,
      dim_crm_account.demandbase_sessions,
      dim_crm_account.demandbase_trending_offsite_intent,
      dim_crm_account.demandbase_trending_onsite_engagement,
      dim_crm_account.is_locally_managed_account,
      dim_crm_account.is_strategic_account,
      dim_crm_account.partner_track,
      dim_crm_account.partners_partner_type,
      dim_crm_account.gitlab_partner_program,
      dim_crm_account.zoom_info_company_name,
      dim_crm_account.zoom_info_company_revenue,
      dim_crm_account.zoom_info_company_employee_count,
      dim_crm_account.zoom_info_company_industry,
      dim_crm_account.zoom_info_company_city,
      dim_crm_account.zoom_info_company_state_province,
      dim_crm_account.zoom_info_company_country,
      dim_crm_account.zoominfo_account_phone,
      dim_crm_account.account_phone,
      dim_crm_account.abm_tier,
      dim_crm_account.health_number,
      dim_crm_account.health_score_color,
      dim_crm_account.partner_account_iban_number,
      dim_crm_account.gitlab_com_user,
      dim_crm_account.crm_account_zi_technologies,
      dim_crm_account.crm_account_zoom_info_website,
      dim_crm_account.crm_account_zoom_info_company_other_domains,
      dim_crm_account.crm_account_zoom_info_dozisf_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_parent_company_name,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      dim_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      dim_crm_account.forbes_2000_rank,
      dim_crm_account.sales_development_rep,
      dim_crm_account.admin_manual_source_number_of_employees,
      dim_crm_account.admin_manual_source_account_address,
      dim_crm_account.eoa_sentiment,
      dim_crm_account.gs_health_user_engagement,
      dim_crm_account.gs_health_cd,
      dim_crm_account.gs_health_devsecops,
      dim_crm_account.gs_health_ci,
      dim_crm_account.gs_health_scm,
      dim_crm_account.risk_impact,
      dim_crm_account.risk_reason,
      dim_crm_account.last_timeline_at_risk_update,
      dim_crm_account.last_at_risk_update_comments,
      dim_crm_account.bdr_prospecting_status,

      --degenerative dimensions
      dim_crm_account.is_sdr_target_account,
      dim_crm_account.is_key_account,
      dim_crm_account.is_reseller,
      dim_crm_account.is_jihu_account,
      dim_crm_account.is_first_order_available,
      dim_crm_account.is_excluded_from_zoom_info_enrich,
      dim_crm_account.is_zi_jenkins_present,
      dim_crm_account.is_zi_svn_present,
      dim_crm_account.is_zi_tortoise_svn_present,
      dim_crm_account.is_zi_gcp_present,
      dim_crm_account.is_zi_atlassian_present,
      dim_crm_account.is_zi_github_present,
      dim_crm_account.is_zi_github_enterprise_present,
      dim_crm_account.is_zi_aws_present,
      dim_crm_account.is_zi_kubernetes_present,
      dim_crm_account.is_zi_apache_subversion_present,
      dim_crm_account.is_zi_apache_subversion_svn_present,
      dim_crm_account.is_zi_hashicorp_present,
      dim_crm_account.is_zi_aws_cloud_trail_present,
      dim_crm_account.is_zi_circle_ci_present,
      dim_crm_account.is_zi_bit_bucket_present,

      --dates
      dim_crm_account.crm_account_created_date,
      dim_crm_account.abm_tier_1_date,
      dim_crm_account.abm_tier_2_date,
      dim_crm_account.abm_tier_3_date,
      dim_crm_account.gtm_acceleration_date,
      dim_crm_account.gtm_account_based_date,
      dim_crm_account.gtm_account_centric_date,
      dim_crm_account.partners_signed_contract_date,
      dim_crm_account.technical_account_manager_date,
      dim_crm_account.next_renewal_date,
      dim_crm_account.customer_since_date,
      dim_crm_account.gs_first_value_date,
      dim_crm_account.gs_last_csm_activity_date,

      --measures
      fct_crm_account.count_active_subscription_charges,
      fct_crm_account.count_active_subscriptions,
      fct_crm_account.count_billing_accounts,
      fct_crm_account.count_licensed_users,
      fct_crm_account.count_of_new_business_won_opportunities,
      fct_crm_account.count_open_renewal_opportunities,
      fct_crm_account.count_opportunities,
      fct_crm_account.count_products_purchased,
      fct_crm_account.count_won_opportunities,
      fct_crm_account.count_concurrent_ee_subscriptions,
      fct_crm_account.count_ce_instances,
      fct_crm_account.count_active_ce_users,
      fct_crm_account.count_open_opportunities,
      fct_crm_account.count_using_ce,
      fct_crm_account.parent_crm_account_lam,
      fct_crm_account.parent_crm_account_lam_dev_count,
      fct_crm_account.carr_this_account,
      fct_crm_account.carr_account_family,
      fct_crm_account.potential_users,
      fct_crm_account.number_of_licenses_this_account,
      fct_crm_account.crm_account_zoom_info_number_of_developers,
      fct_crm_account.crm_account_zoom_info_total_funding,
      fct_crm_account.decision_maker_count_linkedin,
      fct_crm_account.number_of_employees,

      --metadata
      fct_crm_account.created_by_id,
      dim_crm_account.created_by_name,
      fct_crm_account.last_modified_by_id,
      dim_crm_account.last_modified_by_name,
      fct_crm_account.last_modified_date_id,
      dim_crm_account.last_modified_date,
      fct_crm_account.last_activity_date_id,
      dim_crm_account.last_activity_date,
      dim_crm_account.is_deleted

      FROM dim_crm_account
      INNER JOIN fct_crm_account
        ON dim_crm_account.dim_crm_account_id = fct_crm_account.dim_crm_account_id
      LEFT JOIN dim_crm_user crm_account_owner
        ON fct_crm_account.crm_account_owner_id = crm_account_owner.dim_crm_user_id

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2022-08-10'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1d:T1ef1,{{ config({
    "alias": "dim_crm_account",
    "post-hook": "{{ missing_member_column(primary_key = 'dim_crm_account_id', not_null_test_cols = ['is_reseller']) }}"
}) }}

WITH final AS (

    SELECT 
      --primary key
      prep_crm_account.dim_crm_account_id,

      --surrogate keys
      prep_crm_account.dim_parent_crm_account_id,
      prep_crm_account.dim_crm_user_id,
      prep_crm_account.merged_to_account_id,
      prep_crm_account.record_type_id,
      prep_crm_account.master_record_id,
      prep_crm_account.dim_crm_person_primary_contact_id,

      --account people
      prep_crm_account.crm_account_owner,
      prep_crm_account.proposed_crm_account_owner,
      prep_crm_account.account_owner,
      prep_crm_account.technical_account_manager,
      prep_crm_account.owner_role,
      prep_crm_account.user_role_type,

      ----ultimate parent crm account info
      prep_crm_account.parent_crm_account_name,
      prep_crm_account.parent_crm_account_sales_segment,
      prep_crm_account.parent_crm_account_sales_segment_grouped,
      prep_crm_account.parent_crm_account_segment_region_stamped_grouped,
      prep_crm_account.parent_crm_account_industry,
      prep_crm_account.parent_crm_account_business_unit,
      prep_crm_account.parent_crm_account_geo,
      prep_crm_account.parent_crm_account_region,
      prep_crm_account.parent_crm_account_area,
      prep_crm_account.parent_crm_account_territory,
      prep_crm_account.parent_crm_account_role_type,
      prep_crm_account.parent_crm_account_max_family_employee,
      prep_crm_account.parent_crm_account_upa_country,
      prep_crm_account.parent_crm_account_upa_state,
      prep_crm_account.parent_crm_account_upa_city,
      prep_crm_account.parent_crm_account_upa_street,
      prep_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      prep_crm_account.crm_account_name,
      prep_crm_account.crm_account_employee_count,
      prep_crm_account.crm_account_gtm_strategy,
      prep_crm_account.crm_account_focus_account,
      prep_crm_account.crm_account_owner_user_segment,
      prep_crm_account.crm_account_billing_country,
      prep_crm_account.crm_account_billing_country_code,
      prep_crm_account.crm_account_type,
      prep_crm_account.crm_account_industry,
      prep_crm_account.crm_account_sub_industry,
      prep_crm_account.crm_account_employee_count_band,
      prep_crm_account.partner_vat_tax_id,
      prep_crm_account.account_manager,
      prep_crm_account.business_development_rep,
      prep_crm_account.dedicated_service_engineer,
      prep_crm_account.account_tier,
      prep_crm_account.account_tier_notes,
      prep_crm_account.license_utilization,
      prep_crm_account.support_level,
      prep_crm_account.named_account,
      prep_crm_account.billing_postal_code,
      prep_crm_account.partner_type,
      prep_crm_account.partner_status,
      prep_crm_account.gitlab_customer_success_project,
      prep_crm_account.demandbase_account_list,
      prep_crm_account.demandbase_intent,
      prep_crm_account.demandbase_page_views,
      prep_crm_account.demandbase_score,
      prep_crm_account.demandbase_sessions,
      prep_crm_account.demandbase_trending_offsite_intent,
      prep_crm_account.demandbase_trending_onsite_engagement,
      prep_crm_account.is_locally_managed_account,
      prep_crm_account.is_strategic_account,
      prep_crm_account.partner_track,
      prep_crm_account.partners_partner_type,
      prep_crm_account.gitlab_partner_program,
      prep_crm_account.zoom_info_company_name,
      prep_crm_account.zoom_info_company_revenue,
      prep_crm_account.zoom_info_company_employee_count,
      prep_crm_account.zoom_info_company_industry,
      prep_crm_account.zoom_info_company_city,
      prep_crm_account.zoom_info_company_state_province,
      prep_crm_account.zoom_info_company_country,
      prep_crm_account.account_phone,
      prep_crm_account.zoominfo_account_phone,
      prep_crm_account.abm_tier,
      prep_crm_account.health_number,
      prep_crm_account.health_score_color,
      prep_crm_account.partner_account_iban_number,
      prep_crm_account.gitlab_com_user,
      prep_crm_account.crm_account_zi_technologies,
      prep_crm_account.crm_account_zoom_info_website,
      prep_crm_account.crm_account_zoom_info_company_other_domains,
      prep_crm_account.crm_account_zoom_info_dozisf_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_name,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      prep_crm_account.forbes_2000_rank,
      prep_crm_account.sales_development_rep,
      prep_crm_account.admin_manual_source_number_of_employees,
      prep_crm_account.admin_manual_source_account_address,
      prep_crm_account.eoa_sentiment,
      prep_crm_account.gs_health_user_engagement,
      prep_crm_account.gs_health_cd,
      prep_crm_account.gs_health_devsecops,
      prep_crm_account.gs_health_ci,
      prep_crm_account.gs_health_scm,
      prep_crm_account.risk_impact,
      prep_crm_account.risk_reason,
      prep_crm_account.last_timeline_at_risk_update,
      prep_crm_account.last_at_risk_update_comments,
      prep_crm_account.bdr_prospecting_status,

      --measures (maintain for now to not break reporting)
      prep_crm_account.parent_crm_account_lam,
      prep_crm_account.parent_crm_account_lam_dev_count,
      prep_crm_account.carr_account_family,
      prep_crm_account.carr_this_account,

      --degenerative dimensions
      prep_crm_account.is_sdr_target_account,
      prep_crm_account.is_key_account,
      prep_crm_account.is_reseller,
      prep_crm_account.is_jihu_account,
      prep_crm_account.is_first_order_available,
      prep_crm_account.is_zi_jenkins_present,
      prep_crm_account.is_zi_svn_present,
      prep_crm_account.is_zi_tortoise_svn_present,
      prep_crm_account.is_zi_gcp_present,
      prep_crm_account.is_zi_atlassian_present,
      prep_crm_account.is_zi_github_present,
      prep_crm_account.is_zi_github_enterprise_present,
      prep_crm_account.is_zi_aws_present,
      prep_crm_account.is_zi_kubernetes_present,
      prep_crm_account.is_zi_apache_subversion_present,
      prep_crm_account.is_zi_apache_subversion_svn_present,
      prep_crm_account.is_zi_hashicorp_present,
      prep_crm_account.is_zi_aws_cloud_trail_present,
      prep_crm_account.is_zi_circle_ci_present,
      prep_crm_account.is_zi_bit_bucket_present,
      prep_crm_account.is_excluded_from_zoom_info_enrich,

      --dates
      prep_crm_account.crm_account_created_date,
      prep_crm_account.abm_tier_1_date,
      prep_crm_account.abm_tier_2_date,
      prep_crm_account.abm_tier_3_date,
      prep_crm_account.gtm_acceleration_date,
      prep_crm_account.gtm_account_based_date,
      prep_crm_account.gtm_account_centric_date,
      prep_crm_account.partners_signed_contract_date,
      prep_crm_account.technical_account_manager_date,
      prep_crm_account.customer_since_date,
      prep_crm_account.next_renewal_date,
      prep_crm_account.gs_first_value_date,
      prep_crm_account.gs_last_csm_activity_date,

      --metadata
      prep_crm_account.created_by_name,
      prep_crm_account.last_modified_by_name,
      prep_crm_account.last_modified_date,
      prep_crm_account.last_activity_date,
      prep_crm_account.is_deleted,
      prep_crm_account.pte_score,
      prep_crm_account.pte_decile,
      prep_crm_account.pte_score_group,
      prep_crm_account.ptc_score,
      prep_crm_account.ptc_decile,
      prep_crm_account.ptc_score_group
    FROM {{ ref('prep_crm_account') }}

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@msendal",
    updated_by="@lisvinueza",
    created_date="2020-06-01",
    updated_date="2023-05-21"
) }}1e:T1f4e,

WITH final AS (

    SELECT 
      --primary key
      prep_crm_account.dim_crm_account_id,

      --surrogate keys
      prep_crm_account.dim_parent_crm_account_id,
      prep_crm_account.dim_crm_user_id,
      prep_crm_account.merged_to_account_id,
      prep_crm_account.record_type_id,
      prep_crm_account.master_record_id,
      prep_crm_account.dim_crm_person_primary_contact_id,

      --account people
      prep_crm_account.crm_account_owner,
      prep_crm_account.proposed_crm_account_owner,
      prep_crm_account.account_owner,
      prep_crm_account.technical_account_manager,
      prep_crm_account.owner_role,
      prep_crm_account.user_role_type,

      ----ultimate parent crm account info
      prep_crm_account.parent_crm_account_name,
      prep_crm_account.parent_crm_account_sales_segment,
      prep_crm_account.parent_crm_account_sales_segment_grouped,
      prep_crm_account.parent_crm_account_segment_region_stamped_grouped,
      prep_crm_account.parent_crm_account_industry,
      prep_crm_account.parent_crm_account_business_unit,
      prep_crm_account.parent_crm_account_geo,
      prep_crm_account.parent_crm_account_region,
      prep_crm_account.parent_crm_account_area,
      prep_crm_account.parent_crm_account_territory,
      prep_crm_account.parent_crm_account_role_type,
      prep_crm_account.parent_crm_account_max_family_employee,
      prep_crm_account.parent_crm_account_upa_country,
      prep_crm_account.parent_crm_account_upa_state,
      prep_crm_account.parent_crm_account_upa_city,
      prep_crm_account.parent_crm_account_upa_street,
      prep_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      prep_crm_account.crm_account_name,
      prep_crm_account.crm_account_employee_count,
      prep_crm_account.crm_account_gtm_strategy,
      prep_crm_account.crm_account_focus_account,
      prep_crm_account.crm_account_owner_user_segment,
      prep_crm_account.crm_account_billing_country,
      prep_crm_account.crm_account_billing_country_code,
      prep_crm_account.crm_account_type,
      prep_crm_account.crm_account_industry,
      prep_crm_account.crm_account_sub_industry,
      prep_crm_account.crm_account_employee_count_band,
      prep_crm_account.partner_vat_tax_id,
      prep_crm_account.account_manager,
      prep_crm_account.business_development_rep,
      prep_crm_account.dedicated_service_engineer,
      prep_crm_account.account_tier,
      prep_crm_account.account_tier_notes,
      prep_crm_account.license_utilization,
      prep_crm_account.support_level,
      prep_crm_account.named_account,
      prep_crm_account.billing_postal_code,
      prep_crm_account.partner_type,
      prep_crm_account.partner_status,
      prep_crm_account.gitlab_customer_success_project,
      prep_crm_account.demandbase_account_list,
      prep_crm_account.demandbase_intent,
      prep_crm_account.demandbase_page_views,
      prep_crm_account.demandbase_score,
      prep_crm_account.demandbase_sessions,
      prep_crm_account.demandbase_trending_offsite_intent,
      prep_crm_account.demandbase_trending_onsite_engagement,
      prep_crm_account.is_locally_managed_account,
      prep_crm_account.is_strategic_account,
      prep_crm_account.partner_track,
      prep_crm_account.partners_partner_type,
      prep_crm_account.gitlab_partner_program,
      prep_crm_account.zoom_info_company_name,
      prep_crm_account.zoom_info_company_revenue,
      prep_crm_account.zoom_info_company_employee_count,
      prep_crm_account.zoom_info_company_industry,
      prep_crm_account.zoom_info_company_city,
      prep_crm_account.zoom_info_company_state_province,
      prep_crm_account.zoom_info_company_country,
      prep_crm_account.account_phone,
      prep_crm_account.zoominfo_account_phone,
      prep_crm_account.abm_tier,
      prep_crm_account.health_number,
      prep_crm_account.health_score_color,
      prep_crm_account.partner_account_iban_number,
      prep_crm_account.gitlab_com_user,
      prep_crm_account.crm_account_zi_technologies,
      prep_crm_account.crm_account_zoom_info_website,
      prep_crm_account.crm_account_zoom_info_company_other_domains,
      prep_crm_account.crm_account_zoom_info_dozisf_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_name,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      prep_crm_account.forbes_2000_rank,
      prep_crm_account.sales_development_rep,
      prep_crm_account.admin_manual_source_number_of_employees,
      prep_crm_account.admin_manual_source_account_address,
      prep_crm_account.eoa_sentiment,
      prep_crm_account.gs_health_user_engagement,
      prep_crm_account.gs_health_cd,
      prep_crm_account.gs_health_devsecops,
      prep_crm_account.gs_health_ci,
      prep_crm_account.gs_health_scm,
      prep_crm_account.risk_impact,
      prep_crm_account.risk_reason,
      prep_crm_account.last_timeline_at_risk_update,
      prep_crm_account.last_at_risk_update_comments,
      prep_crm_account.bdr_prospecting_status,

      --measures (maintain for now to not break reporting)
      prep_crm_account.parent_crm_account_lam,
      prep_crm_account.parent_crm_account_lam_dev_count,
      prep_crm_account.carr_account_family,
      prep_crm_account.carr_this_account,

      --degenerative dimensions
      prep_crm_account.is_sdr_target_account,
      prep_crm_account.is_key_account,
      prep_crm_account.is_reseller,
      prep_crm_account.is_jihu_account,
      prep_crm_account.is_first_order_available,
      prep_crm_account.is_zi_jenkins_present,
      prep_crm_account.is_zi_svn_present,
      prep_crm_account.is_zi_tortoise_svn_present,
      prep_crm_account.is_zi_gcp_present,
      prep_crm_account.is_zi_atlassian_present,
      prep_crm_account.is_zi_github_present,
      prep_crm_account.is_zi_github_enterprise_present,
      prep_crm_account.is_zi_aws_present,
      prep_crm_account.is_zi_kubernetes_present,
      prep_crm_account.is_zi_apache_subversion_present,
      prep_crm_account.is_zi_apache_subversion_svn_present,
      prep_crm_account.is_zi_hashicorp_present,
      prep_crm_account.is_zi_aws_cloud_trail_present,
      prep_crm_account.is_zi_circle_ci_present,
      prep_crm_account.is_zi_bit_bucket_present,
      prep_crm_account.is_excluded_from_zoom_info_enrich,

      --dates
      prep_crm_account.crm_account_created_date,
      prep_crm_account.abm_tier_1_date,
      prep_crm_account.abm_tier_2_date,
      prep_crm_account.abm_tier_3_date,
      prep_crm_account.gtm_acceleration_date,
      prep_crm_account.gtm_account_based_date,
      prep_crm_account.gtm_account_centric_date,
      prep_crm_account.partners_signed_contract_date,
      prep_crm_account.technical_account_manager_date,
      prep_crm_account.customer_since_date,
      prep_crm_account.next_renewal_date,
      prep_crm_account.gs_first_value_date,
      prep_crm_account.gs_last_csm_activity_date,

      --metadata
      prep_crm_account.created_by_name,
      prep_crm_account.last_modified_by_name,
      prep_crm_account.last_modified_date,
      prep_crm_account.last_activity_date,
      prep_crm_account.is_deleted,
      prep_crm_account.pte_score,
      prep_crm_account.pte_decile,
      prep_crm_account.pte_score_group,
      prep_crm_account.ptc_score,
      prep_crm_account.ptc_decile,
      prep_crm_account.ptc_score_group
    FROM "PROD".restricted_safe_common_prep.prep_crm_account

)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2020-06-01'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1f:T7cfb,{{ config(alias='sfdc_opportunity_xf') }}

WITH edm_opty AS (

    SELECT  *

    --FROM prod.restricted_safe_common_mart_sales.mart_crm_opportunity
    FROM {{ref('wk_sales_mart_crm_opportunity')}} 

), sfdc_users_xf AS (

    SELECT *
    FROM {{ref('wk_sales_sfdc_users_xf')}}
    --FROM prod.workspace_sales.sfdc_users_xf

), sfdc_accounts_xf AS (

    SELECT *
    FROM {{ref('wk_sales_sfdc_accounts_xf')}}
    -- FROM PROD.restricted_safe_workspace_sales.sfdc_accounts_xf

), date_details AS (

    SELECT *
    FROM {{ ref('wk_sales_date_details') }}
    --FROM prod.workspace_sales.date_details

), agg_demo_keys_fy23 AS (
-- keys used for aggregated historical analysis

    SELECT *
    FROM {{ ref('wk_sales_report_agg_demo_sqs_ot_keys') }}
    --FROM restricted_safe_workspace_sales.report_agg_demo_sqs_ot_keys

), agg_demo_keys_base AS (

    SELECT *
    FROM {{ ref('wk_sales_report_agg_keys_base') }}
    --FROM restricted_safe_workspace_sales.report_agg_demo_sqs_ot_keys

), today AS (

  SELECT DISTINCT
    fiscal_year               AS current_fiscal_year,
    first_day_of_fiscal_year  AS current_fiscal_year_date
  FROM date_details
  WHERE date_actual = CURRENT_DATE

), sfdc_opportunity_xf AS (

   SELECT

    -- NF: 20230223 FY24 GTM fields, precalculated in the user object
    edm_opty.account_owner_user_segment,
    edm_opty.account_owner_raw_user_segment,
    edm_opty.account_owner_user_geo,
    edm_opty.account_owner_user_region,
    edm_opty.account_owner_user_area,

    -- NF: 20230223 FY24 GTM fields, precalculated in the user object
    edm_opty.account_owner_user_business_unit,
    edm_opty.account_owner_user_sub_business_unit,
    edm_opty.account_owner_user_division,
    edm_opty.account_owner_user_asm,
    edm_opty.account_owner_user_role_type,

    -- NF: 20230223 FY24 GTM fields, precalculated in the user object
    edm_opty.opportunity_owner_user_business_unit,
    edm_opty.opportunity_owner_user_sub_business_unit,
    edm_opty.opportunity_owner_user_division,
    edm_opty.opportunity_owner_user_asm,
    edm_opty.opportunity_owner_user_role_type,

    edm_opty.opportunity_owner_user_segment,
    edm_opty.opportunity_owner_raw_user_segment,
    edm_opty.opportunity_owner_user_geo,
    edm_opty.opportunity_owner_user_region,
    edm_opty.opportunity_owner_user_area,

    -- NF: adjusted to FY24 GTM structure
    edm_opty.report_opportunity_user_segment,

    -- NF: unadjusted version of segment used to create the FY24 GTM key
    edm_opty.report_opportunity_raw_user_segment,

    edm_opty.report_opportunity_user_geo,
    edm_opty.report_opportunity_user_region,
    edm_opty.report_opportunity_user_area,

    -- NF 20230214
    -- FY24 GTM calculated fields. These fields will be sourced from EDM eventually
    edm_opty.report_opportunity_user_business_unit,
    edm_opty.report_opportunity_user_sub_business_unit,
    edm_opty.report_opportunity_user_division,
    edm_opty.report_opportunity_user_asm,
    edm_opty.report_opportunity_user_role_type,

    edm_opty.partner_category,
    edm_opty.alliance_partner,

    ------------------------------------------------------------------------
    -- creating report_user_segment_geo_region_area_sqs_ot with adjusted segment
    edm_opty.report_user_segment_geo_region_area_sqs_ot,
    edm_opty.report_user_segment_geo_region_area,
    ------------------------------------------------------------------------
    -- FY24 keys
    edm_opty.report_bu_user_segment_geo_region_area_sqs_ot,
    edm_opty.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot,
    edm_opty.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap,

    ----------------------------------------------------------
    ----------------------------------------------------------

    edm_opty.dbt_updated_at                         AS _last_dbt_run,
    edm_opty.dim_crm_account_id                     AS account_id,
    edm_opty.dim_crm_opportunity_id                 AS opportunity_id,
    edm_opty.opportunity_name                       AS opportunity_name,

    edm_opty.close_date                             AS close_date,
    edm_opty.created_date                           AS created_date,
    edm_opty.sales_accepted_date,
    edm_opty.sales_qualified_date,
    edm_opty.subscription_start_date                AS quote_start_date,
    edm_opty.subscription_end_date                  AS quote_end_date,

    edm_opty.days_in_stage,
    edm_opty.deployment_preference,
    edm_opty.merged_crm_opportunity_id,
    ----------------------------------------------------------
    ----------------------------------------------------------
    edm_opty.owner_id,
    -- edm_opty.opportunity_owner,
    opportunity_owner.name                          AS opportunity_owner,
    edm_opty.opportunity_owner_department,
    edm_opty.opportunity_owner_manager,
    edm_opty.opportunity_owner_role,
    edm_opty.opportunity_owner_title,
    ----------------------------------------------------------
    ----------------------------------------------------------
    edm_opty.opportunity_term,
    edm_opty.primary_campaign_source_id            AS primary_campaign_source_id,
    edm_opty.sales_path                            AS sales_path,
    edm_opty.sales_type                            AS sales_type,
    edm_opty.stage_name                            AS stage_name,
    edm_opty.order_type                            AS order_type_stamped,
    edm_opty.order_type_live                       AS order_type_live,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- Amount fields
    COALESCE(edm_opty.net_arr,0)                   AS raw_net_arr,
    edm_opty.net_arr,
    edm_opty.amount,
    edm_opty.renewal_amount,
    edm_opty.recurring_amount,
    edm_opty.true_up_amount,
    edm_opty.proserv_amount,
    edm_opty.other_non_recurring_amount,
    edm_opty.arr_basis,
    edm_opty.arr,

    edm_opty.competitors,
    edm_opty.fpa_master_bookings_flag,
    edm_opty.forecast_category_name,
    edm_opty.invoice_number,
    edm_opty.professional_services_value,
    edm_opty.is_ps_opp,
    edm_opty.reason_for_loss,
    edm_opty.reason_for_loss_details,
    edm_opty.downgrade_reason,
    edm_opty.lead_source,

    edm_opty.is_downgrade,
    edm_opty.is_edu_oss,
    edm_opty.solutions_to_be_replaced,
    edm_opty.total_contract_value,
    edm_opty.is_web_portal_purchase,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- Support Team Members
    edm_opty.opportunity_business_development_representative,
    edm_opty.opportunity_sales_development_representative,
    edm_opty.opportunity_development_representative,
    -- Missing ISR & TAM

    ----------------------------------------------------------
    ----------------------------------------------------------
    edm_opty.opportunity_health,
    edm_opty.is_risky,
    edm_opty.risk_type,
    edm_opty.risk_reasons,
    edm_opty.tam_notes,
    edm_opty.days_in_1_discovery,
    edm_opty.days_in_2_scoping,
    edm_opty.days_in_3_technical_evaluation,
    edm_opty.days_in_4_proposal,
    edm_opty.days_in_5_negotiating,
    edm_opty.stage_0_pending_acceptance_date,
    edm_opty.stage_1_discovery_date,
    edm_opty.stage_2_scoping_date,
    edm_opty.stage_3_technical_evaluation_date,
    edm_opty.stage_4_proposal_date,
    edm_opty.stage_5_negotiating_date,
    edm_opty.stage_6_awaiting_signature_date_date         AS stage_6_awaiting_signature_date,
    edm_opty.stage_6_closed_won_date,
    edm_opty.stage_6_closed_lost_date,
    edm_opty.cp_champion,
    edm_opty.cp_close_plan,
    edm_opty.cp_competition,
    edm_opty.cp_decision_criteria,
    edm_opty.cp_decision_process,
    edm_opty.cp_economic_buyer,
    edm_opty.cp_identify_pain,
    edm_opty.cp_metrics,
    edm_opty.cp_risks,
    edm_opty.cp_use_cases,
    edm_opty.cp_value_driver,
    edm_opty.cp_why_do_anything_at_all,
    edm_opty.cp_why_gitlab,
    edm_opty.cp_why_now,
    edm_opty.cp_score,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- fields form opportunity source
    edm_opty.opportunity_category,
    edm_opty.product_category,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- Channel Org. fields
    edm_opty.deal_path_name                             AS deal_path,
    edm_opty.dr_partner_deal_type,
    edm_opty.dr_partner_engagement_name                 AS dr_partner_engagement, 
    edm_opty.partner_account,
    edm_opty.partner_account_name,
    edm_opty.dr_status,
    edm_opty.distributor,
    edm_opty.influence_partner,
    edm_opty.partner_track,
    edm_opty.partner_gitlab_program,
    edm_opty.is_public_sector_opp,
    edm_opty.is_registration_from_portal,
    edm_opty.calculated_discount,
    edm_opty.partner_discount,
    edm_opty.partner_discount_calc,
    edm_opty.comp_channel_neutral,
    edm_opty.fulfillment_partner                       AS resale_partner_id,
    resale_account.account_name                        AS resale_partner_name,
    edm_opty.platform_partner,

    ----------------------------------------------------------
    ----------------------------------------------------------

    -- account driven fields
    edm_opty.crm_account_name                          AS account_name,
    edm_opty.dim_parent_crm_account_id                 AS ultimate_parent_account_id,
    edm_opty.is_jihu_account,

    account_owner.name                                 AS account_owner_name,
    account_owner.user_id                              AS account_owner_id,                                               

    edm_opty.parent_crm_account_sales_segment,
    edm_opty.parent_crm_account_geo,
    edm_opty.parent_crm_account_region,
    edm_opty.parent_crm_account_area,
    edm_opty.parent_crm_account_territory,

    edm_opty.sales_qualified_source_name               AS sales_qualified_source,
    edm_opty.stage_category,
    edm_opty.calculated_partner_track,
    edm_opty.deal_path_engagement,
    edm_opty.is_refund,
    edm_opty.is_credit                                 AS is_credit_flag,
    edm_opty.is_contract_reset                         AS is_contract_reset_flag,
    edm_opty.is_net_arr_pipeline_created,
    CAST(edm_opty.is_won AS INTEGER)                   AS is_won,
    edm_opty.is_lost,
    edm_opty.is_open,
    edm_opty.is_duplicate                              AS is_duplicate_flag,    
    CASE edm_opty.is_closed 
      WHEN TRUE THEN 1 
      ELSE 0 
    END                                                AS is_closed,
    edm_opty.is_closed                                 AS stage_is_closed,
    edm_opty.is_active                                 AS stage_is_active,
    edm_opty.is_renewal,


    -- date fields helpers -- revisit
    edm_opty.close_fiscal_quarter_name,
    edm_opty.close_fiscal_quarter_date,
    edm_opty.close_fiscal_year,
    edm_opty.close_month                                                 AS close_date_month,

    edm_opty.created_fiscal_quarter_name,
    edm_opty.created_fiscal_quarter_date,
    edm_opty.created_fiscal_year,
    edm_opty.created_month                                               AS created_date_month,

    edm_opty.subscription_start_fiscal_quarter_name                      AS quote_start_date_fiscal_quarter_name,
    edm_opty.subscription_start_fiscal_quarter_date                      AS quote_start_date_fiscal_quarter_date,
    edm_opty.subscription_start_fiscal_year                              AS quote_start_date_fiscal_year,
    edm_opty.subscription_start_month                                    AS quote_start_date_month,

    edm_opty.sales_accepted_fiscal_quarter_name,
    edm_opty.sales_accepted_fiscal_quarter_date,
    edm_opty.sales_accepted_fiscal_year,
    edm_opty.sales_accepted_month                                        AS sales_accepted_date_month,

    edm_opty.sales_qualified_fiscal_quarter_name,
    edm_opty.sales_qualified_fiscal_quarter_date,
    edm_opty.sales_qualified_fiscal_year,
    edm_opty.sales_qualified_month                                       AS sales_qualified_date_month,

    edm_opty.net_arr_created_date,
    edm_opty.net_arr_created_fiscal_quarter_name,
    edm_opty.net_arr_created_fiscal_quarter_date,
    edm_opty.net_arr_created_fiscal_year,
    edm_opty.net_arr_created_month                                       AS net_arr_created_date_month,

    edm_opty.pipeline_created_date,
    edm_opty.pipeline_created_fiscal_quarter_name,
    edm_opty.pipeline_created_fiscal_quarter_date,
    edm_opty.pipeline_created_fiscal_year,
    edm_opty.net_arr_created_month                                       AS pipeline_created_date_month,

    edm_opty.stage_1_discovery_date                                      AS stage_1_date,
    edm_opty.stage_1_discovery_month                                     AS stage_1_date_month,
    edm_opty.stage_1_discovery_fiscal_year                               AS stage_1_fiscal_year,
    edm_opty.stage_1_discovery_fiscal_quarter_name                       AS stage_1_fiscal_quarter_name,
    edm_opty.stage_1_discovery_fiscal_quarter_date                       AS stage_1_fiscal_quarter_date,

    edm_opty.stage_3_technical_evaluation_date                           AS stage_3_date,
    edm_opty.stage_3_technical_evaluation_month                          AS stage_3_date_month,
    edm_opty.stage_3_technical_evaluation_fiscal_year                    AS stage_3_fiscal_year,
    edm_opty.stage_3_technical_evaluation_fiscal_quarter_name            AS stage_3_fiscal_quarter_name,
    edm_opty.stage_3_technical_evaluation_fiscal_quarter_date            AS stage_3_fiscal_quarter_date,

    -- Last Activity Date <- This date can be in the future, it represents the date of the last activity taken or scheduled 
    edm_opty.last_activity_date,
    edm_opty.last_activity_fiscal_year,
    edm_opty.last_activity_fiscal_quarter_name,
    edm_opty.last_activity_fiscal_quarter_date,
    edm_opty.last_activity_month                                         AS last_activity_date_month,

    -- Sales Activity Date <- Last time an activity was taken against the opportunity
    edm_opty.sales_last_activity_date,
    edm_opty.sales_last_activity_fiscal_year,
    edm_opty.sales_last_activity_fiscal_quarter_name,
    edm_opty.sales_last_activity_fiscal_quarter_date,
    edm_opty.sales_last_activity_month                                   AS sales_last_activity_date_month,

    edm_opty.competitors_other_flag,
    edm_opty.competitors_gitlab_core_flag,
    edm_opty.competitors_none_flag,
    edm_opty.competitors_github_enterprise_flag,
    edm_opty.competitors_bitbucket_server_flag,
    edm_opty.competitors_unknown_flag,
    edm_opty.competitors_github_flag,
    edm_opty.competitors_gitlab_flag,
    edm_opty.competitors_jenkins_flag,
    edm_opty.competitors_azure_devops_flag,
    edm_opty.competitors_svn_flag,
    edm_opty.competitors_bitbucket_flag,
    edm_opty.competitors_atlassian_flag,
    edm_opty.competitors_perforce_flag,
    edm_opty.competitors_visual_studio_flag,
    edm_opty.competitors_azure_flag,
    edm_opty.competitors_amazon_code_commit_flag,
    edm_opty.competitors_circleci_flag,
    edm_opty.competitors_bamboo_flag,
    edm_opty.competitors_aws_flag,
    edm_opty.is_comp_new_logo_override,
    edm_opty.is_stage_1_plus,
    edm_opty.is_stage_3_plus,
    edm_opty.is_stage_4_plus,
    edm_opty.stage_name_3plus,
    edm_opty.stage_name_4plus,
    edm_opty.deal_category,
    edm_opty.deal_group,
    edm_opty.calculated_deal_count                                   AS calculated_deal_count,
    edm_opty.lam_dev_count,

    ----------------------------------------------------------------
    -- NF 2022-01-28 This is probably TO BE DEPRECATED too, need to align with Channel ops
    -- PIO Flag for PIO reporting dashboard
    CASE
    WHEN edm_opty.dr_partner_engagement = 'PIO'
        THEN 1
    ELSE 0
    END                                                             AS partner_engaged_opportunity_flag,

    -- check if renewal was closed on time or not
    CASE
    WHEN LOWER(edm_opty.sales_type) like '%renewal%'
        AND start_date.first_day_of_fiscal_quarter   >= edm_opty.close_fiscal_quarter_date
        THEN 'On-Time'
    WHEN LOWER(edm_opty.sales_type) like '%renewal%'
        AND start_date.first_day_of_fiscal_quarter   < edm_opty.close_fiscal_quarter_date
        THEN 'Late'
    END                                                            AS renewal_timing_status,

    ----------------------------------------------------------------
    ----------------------------------------------------------------
    -- calculated fields for pipeline velocity report

    -- 20201021 NF: This should be replaced by a table that keeps track of excluded deals for forecasting purposes
    edm_opty.is_excluded_from_pipeline_created                     AS is_excluded_flag,
    -----------------------------------------------

    ---- measures
    edm_opty.open_1plus_deal_count,
    edm_opty.open_3plus_deal_count,
    edm_opty.open_4plus_deal_count,
    edm_opty.booked_deal_count,
    edm_opty.churned_contraction_deal_count,
    edm_opty.booked_churned_contraction_deal_count,
    edm_opty.open_1plus_net_arr,
    edm_opty.open_3plus_net_arr,
    edm_opty.open_4plus_net_arr,
    edm_opty.booked_net_arr,
    edm_opty.booked_churned_contraction_net_arr,
    edm_opty.churned_contraction_net_arr,
   
    edm_opty.deal_size,
    edm_opty.calculated_deal_size,

    ---------------------------------------------
    ---------------------------------------------

    -- NF: calculated age only considers created date to close date or actual date if open
    edm_opty.calculated_age_in_days,

    -- NF: cycle time will consider if the opty is renewal and eligible to be considered 
    -- using the is_eligible_cycle_time_analysis
    CASE 
        WHEN edm_opty.is_edu_oss = 0
            AND edm_opty.is_deleted = 0
            -- For stage age we exclude only ps/other
            AND edm_opty.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            -- Only include deal types with meaningful journeys through the stages
            AND edm_opty.opportunity_category IN ('Standard')
            -- Web Purchase have a different dynamic and should not be included
            AND edm_opty.is_web_portal_purchase = 0
                THEN 1
        ELSE 0
    END                                                           AS is_eligible_cycle_time_analysis_flag,

    -- NF: We consider net_arr_created date for renewals as they haver a very distinct motion than 
    --      add on and First Orders
    --     Logic is different for open deals so we can evaluate their current cycle time.
    CASE
        WHEN edm_opty.is_renewal = 1 AND is_closed = 1
            THEN DATEDIFF(day, edm_opty.net_arr_created_date, edm_opty.close_date)
        WHEN edm_opty.is_renewal = 0 AND is_closed = 1
            THEN DATEDIFF(day, edm_opty.created_date, edm_opty.close_date)
         WHEN edm_opty.is_renewal = 1 AND is_open = 1
            THEN DATEDIFF(day, edm_opty.net_arr_created_date, CURRENT_DATE)
        WHEN edm_opty.is_renewal = 0 AND is_open = 1
            THEN DATEDIFF(day, edm_opty.created_date, CURRENT_DATE)
    END                                                           AS cycle_time_in_days,

    -- For some analysis it is important to order stages by rank
    CASE
            WHEN edm_opty.stage_name = '0-Pending Acceptance'
                THEN 0
            WHEN edm_opty.stage_name = '1-Discovery'
                THEN 1
             WHEN edm_opty.stage_name = '2-Scoping'
                THEN 2
            WHEN edm_opty.stage_name = '3-Technical Evaluation'
                THEN 3
            WHEN edm_opty.stage_name = '4-Proposal'
                THEN 4
            WHEN edm_opty.stage_name = '5-Negotiating'
                THEN 5
            WHEN edm_opty.stage_name = '6-Awaiting Signature'
                THEN 6
            WHEN edm_opty.stage_name = '7-Closing'
                THEN 7
            WHEN edm_opty.stage_name = 'Closed Won'
                THEN 8
            WHEN edm_opty.stage_name = '8-Closed Lost'
                THEN 9
            WHEN edm_opty.stage_name = '9-Unqualified'
                THEN 10
            WHEN edm_opty.stage_name = '10-Duplicate'
                THEN 11
            ELSE NULL
    END                     AS stage_name_rank,

    CASE
        WHEN edm_opty.stage_name IN ('0-Pending Acceptance')
            THEN '0. Acceptance' 
         WHEN edm_opty.stage_name IN ('1-Discovery','2-Scoping')
            THEN '1. Early'
         WHEN edm_opty.stage_name IN ('3-Technical Evaluation','4-Proposal')
            THEN '2. Middle'
         WHEN edm_opty.stage_name IN ('5-Negotiating','6-Awaiting Signature')
            THEN '3. Late'
        ELSE '4. Closed'
    END                     AS pipeline_category,
   
    ---------------------------------------------
    ---------------------------------------------

    edm_opty.is_eligible_open_pipeline              AS is_eligible_open_pipeline_flag,
    edm_opty.is_eligible_asp_analysis               AS is_eligible_asp_analysis_flag,
    edm_opty.is_eligible_age_analysis               AS is_eligible_age_analysis_flag,
    edm_opty.is_booked_net_arr                      AS is_booked_net_arr_flag,
    edm_opty.is_eligible_churn_contraction          AS is_eligible_churn_contraction_flag,
    edm_opty.created_and_won_same_quarter_net_arr,
    edm_opty.churn_contraction_net_arr_bucket,
    edm_opty.reason_for_loss_calc,    
    CASE edm_opty.is_sao 
      WHEN TRUE THEN 1 
      ELSE 0 
    END                                             AS is_eligible_sao_flag,
    edm_opty.is_deleted,
    opportunity_owner.is_rep_flag,
    edm_opty.pushed_count,
    edm_opty.intented_product_tier,

    -- to simplify reporting, we adjust parent opportunity to default to the opportunity id when null
    CASE
        WHEN edm_opty.parent_opportunity IS NULL
            THEN edm_opty.dim_crm_opportunity_id
        ELSE edm_opty.parent_opportunity
    END  AS parent_opportunity,

    -- Calculated fields
    CASE
        WHEN LOWER(edm_opty.product_category) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(edm_opty.product_category) LIKE '%ultimate%'
            THEN 'Ultimate'
        WHEN LOWER(edm_opty.intented_product_tier) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(edm_opty.intented_product_tier) LIKE '%ultimate%'
            THEN 'Ultimate'
        ELSE 'Other'
    END AS  product_category_tier,

    CASE
        WHEN lower(edm_opty.product_category) LIKE '%saas%'
                THEN 'SaaS'
        WHEN lower(edm_opty.product_category) LIKE '%self-managed%'
                THEN 'Self-Managed'
        ELSE 'Other'
    END AS  product_category_deployment,

    -- demographics fields
    edm_opty.parent_crm_account_upa_country,
    edm_opty.parent_crm_account_upa_state,
    edm_opty.parent_crm_account_upa_city,
    edm_opty.parent_crm_account_upa_street,
    edm_opty.parent_crm_account_upa_postal_code,
    account.parent_crm_account_upa_country_name,
    edm_opty.parent_crm_account_business_unit
    
    FROM edm_opty
    -- Date helpers
    INNER JOIN sfdc_accounts_xf AS account
      ON account.account_id = edm_opty.dim_crm_account_id
    INNER JOIN sfdc_users_xf AS account_owner
      ON account_owner.user_id = account.owner_id
    INNER JOIN date_details AS created_date_detail
      ON created_date_detail.date_actual = edm_opty.created_date::DATE
    INNER JOIN sfdc_users_xf AS opportunity_owner
      ON opportunity_owner.user_id = edm_opty.owner_id
    LEFT JOIN date_details AS start_date
      ON edm_opty.subscription_start_date::DATE = start_date.date_actual
    LEFT JOIN sfdc_accounts_xf AS resale_account
      ON resale_account.account_id = edm_opty.fulfillment_partner
    -- NF 20210906 remove JiHu opties from the models
    WHERE edm_opty.is_jihu_account = 0
        AND account.ultimate_parent_account_id NOT IN ('0016100001YUkWVAA1')            -- remove test account
        AND edm_opty.dim_crm_account_id NOT IN ('0014M00001kGcORQA0')                -- remove test account
        AND edm_opty.is_deleted = 0


), churn_metrics AS (

    SELECT
        o.opportunity_id,
        NVL(o.reason_for_loss, o.downgrade_reason) AS reason_for_loss_staged,
        o.reason_for_loss_details,

        CASE
          WHEN o.order_type_stamped IN ('4. Contraction','5. Churn - Partial')
            THEN 'Contraction'
          ELSE 'Churn'
        END                                    AS churn_contraction_type_calc

    FROM sfdc_opportunity_xf o
    WHERE o.order_type_stamped IN ('4. Contraction','5. Churn - Partial','6. Churn - Final')
        AND (o.is_won = 1
            OR (is_renewal = 1 AND is_lost = 1))

), service_opportunities AS (

    SELECT
        CASE
            WHEN parent_opportunity IS NULL
                THEN opportunity_id
            ELSE parent_opportunity
            END  AS opportunity_id,
        COUNT(opportunity_id)               AS count_service_opportunities,
        SUM(professional_services_value)    AS total_professional_services_value,
        SUM(CASE
                WHEN is_won = 1
                    THEN professional_services_value
                ELSE 0
            END)                            AS total_book_professional_services_value,
       SUM(CASE
                WHEN is_lost = 1
                    THEN professional_services_value
                ELSE 0
            END)                            AS total_lost_professional_services_value,
       SUM(CASE
                WHEN is_open = 1
                    THEN professional_services_value
                ELSE 0
            END)                            AS total_open_professional_services_value
    FROM sfdc_opportunity_xf
    WHERE professional_services_value <> 0
    GROUP BY 1

), oppty_final AS (

    SELECT
        sfdc_opportunity_xf.*,

        -- Customer Success related fields
        -- DRI Michael Armtz
        churn_metrics.reason_for_loss_staged,
        -- churn_metrics.reason_for_loss_calc, -- part of edm opp mart
        churn_metrics.churn_contraction_type_calc,

        --services total amount
        COALESCE(service_opportunities.total_professional_services_value,0) AS total_professional_services_value,
      
        COALESCE(service_opportunities.total_book_professional_services_value,0) AS total_book_professional_services_value,
        COALESCE(service_opportunities.total_lost_professional_services_value,0) AS total_lost_professional_services_value,
        COALESCE(service_opportunities.total_open_professional_services_value,0) AS total_open_professional_services_value

    FROM sfdc_opportunity_xf
    CROSS JOIN today
    LEFT JOIN churn_metrics
      ON churn_metrics.opportunity_id = sfdc_opportunity_xf.opportunity_id
    LEFT JOIN service_opportunities 
      ON service_opportunities.opportunity_id = sfdc_opportunity_xf.opportunity_id

), add_calculated_net_arr_to_opty_final AS (

    SELECT
      oppty_final.*,


      -- JK 2023-02-06: FY23 keys for temp dashboard solution until tools are ready for FY24 keys 
      -- NF 2022-02-17 These keys are used in the pipeline metrics models and on the X-Ray dashboard to link gSheets with
      -- different aggregation levels
      LOWER(agg_demo_keys_fy23.key_sqs)                             AS key_sqs,
      LOWER(agg_demo_keys_fy23.key_ot)                              AS key_ot,
      LOWER(agg_demo_keys_fy23.key_segment)                         AS key_segment,
      LOWER(agg_demo_keys_fy23.key_segment_sqs)                     AS key_segment_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_ot)                      AS key_segment_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo)                     AS key_segment_geo,
      LOWER(agg_demo_keys_fy23.key_segment_geo_sqs)                 AS key_segment_geo_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_geo_ot)                  AS key_segment_geo_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region)              AS key_segment_geo_region,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_sqs)          AS key_segment_geo_region_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_ot)           AS key_segment_geo_region_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_area)         AS key_segment_geo_region_area,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_area_sqs)     AS key_segment_geo_region_area_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_area_ot)      AS key_segment_geo_region_area_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo_area)                AS key_segment_geo_area,
      LOWER(agg_demo_keys_fy23.sales_team_cro_level)                AS sales_team_cro_level,
      LOWER(agg_demo_keys_fy23.sales_team_rd_asm_level)             AS sales_team_rd_asm_level,
      LOWER(agg_demo_keys_fy23.sales_team_vp_level)                 AS sales_team_vp_level,
      LOWER(agg_demo_keys_fy23.sales_team_avp_rd_level)             AS sales_team_avp_rd_level,
      LOWER(agg_demo_keys_fy23.sales_team_asm_level)                AS sales_team_asm_level,

      -- JK 2023-02-06: FY24 keys
      LOWER(agg_demo_keys_base.key_bu)                      AS key_bu,
      LOWER(key_bu_ot)                                      AS key_bu_ot,
      LOWER(key_bu_sqs)                                     AS key_bu_sqs,
      LOWER(agg_demo_keys_base.key_bu_subbu)                AS key_bu_subbu,
      LOWER(agg_demo_keys_base.key_bu_subbu_ot)             AS key_bu_subbu_ot,
      LOWER(agg_demo_keys_base.key_bu_subbu_sqs)            AS key_bu_subbu_sqs,
      LOWER(agg_demo_keys_base.key_bu_subbu_division)       AS key_bu_subbu_division,
      LOWER(agg_demo_keys_base.key_bu_subbu_division_ot)    AS key_bu_subbu_division_ot,
      LOWER(agg_demo_keys_base.key_bu_subbu_division_sqs)   AS key_bu_subbu_division_sqs,
      LOWER(agg_demo_keys_base.key_bu_subbu_division_asm)   AS key_bu_subbu_division_asm,

      -- Created pipeline eligibility definition
      -- https://gitlab.com/gitlab-com/sales-team/field-operations/systems/-/issues/2389
      CASE
        WHEN oppty_final.order_type_stamped IN ('1. New - First Order' ,'2. New - Connected', '3. Growth')
          AND oppty_final.is_edu_oss = 0
          AND oppty_final.pipeline_created_fiscal_quarter_date IS NOT NULL
          AND oppty_final.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Credit','Contract Reset')
          -- 20211222 Adjusted to remove the ommitted filter
          AND oppty_final.stage_name NOT IN ('00-Pre Opportunity','10-Duplicate', '9-Unqualified','0-Pending Acceptance')
          AND (net_arr > 0
            OR oppty_final.opportunity_category = 'Credit')
          -- 20220128 Updated to remove webdirect SQS deals
          AND oppty_final.sales_qualified_source  != 'Web Direct Generated'
          AND oppty_final.is_jihu_account = 0
         THEN 1
         ELSE 0
      END                                                          AS is_eligible_created_pipeline_flag


    FROM oppty_final
    -- Add keys for aggregated analysis
    LEFT JOIN agg_demo_keys_fy23
      ON oppty_final.report_user_segment_geo_region_area_sqs_ot = agg_demo_keys_fy23.report_user_segment_geo_region_area_sqs_ot
    LEFT JOIN agg_demo_keys_base
      ON oppty_final.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap = agg_demo_keys_base.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap


)
SELECT *
FROM add_calculated_net_arr_to_opty_final20:T7d1e,

WITH edm_opty AS (

    SELECT  *

    --FROM prod.restricted_safe_common_mart_sales.mart_crm_opportunity
    FROM "PROD".restricted_safe_workspace_sales.mart_crm_opportunity 

), sfdc_users_xf AS (

    SELECT *
    FROM "PROD".workspace_sales.sfdc_users_xf
    --FROM prod.workspace_sales.sfdc_users_xf

), sfdc_accounts_xf AS (

    SELECT *
    FROM "PROD".restricted_safe_workspace_sales.sfdc_accounts_xf
    -- FROM PROD.restricted_safe_workspace_sales.sfdc_accounts_xf

), date_details AS (

    SELECT *
    FROM "PROD".workspace_sales.date_details
    --FROM prod.workspace_sales.date_details

), agg_demo_keys_fy23 AS (
-- keys used for aggregated historical analysis

    SELECT *
    FROM "PROD".restricted_safe_workspace_sales.report_agg_demo_sqs_ot_keys
    --FROM restricted_safe_workspace_sales.report_agg_demo_sqs_ot_keys

), agg_demo_keys_base AS (

    SELECT *
    FROM "PROD".restricted_safe_workspace_sales.report_agg_keys_base
    --FROM restricted_safe_workspace_sales.report_agg_demo_sqs_ot_keys

), today AS (

  SELECT DISTINCT
    fiscal_year               AS current_fiscal_year,
    first_day_of_fiscal_year  AS current_fiscal_year_date
  FROM date_details
  WHERE date_actual = CURRENT_DATE

), sfdc_opportunity_xf AS (

   SELECT

    -- NF: 20230223 FY24 GTM fields, precalculated in the user object
    edm_opty.account_owner_user_segment,
    edm_opty.account_owner_raw_user_segment,
    edm_opty.account_owner_user_geo,
    edm_opty.account_owner_user_region,
    edm_opty.account_owner_user_area,

    -- NF: 20230223 FY24 GTM fields, precalculated in the user object
    edm_opty.account_owner_user_business_unit,
    edm_opty.account_owner_user_sub_business_unit,
    edm_opty.account_owner_user_division,
    edm_opty.account_owner_user_asm,
    edm_opty.account_owner_user_role_type,

    -- NF: 20230223 FY24 GTM fields, precalculated in the user object
    edm_opty.opportunity_owner_user_business_unit,
    edm_opty.opportunity_owner_user_sub_business_unit,
    edm_opty.opportunity_owner_user_division,
    edm_opty.opportunity_owner_user_asm,
    edm_opty.opportunity_owner_user_role_type,

    edm_opty.opportunity_owner_user_segment,
    edm_opty.opportunity_owner_raw_user_segment,
    edm_opty.opportunity_owner_user_geo,
    edm_opty.opportunity_owner_user_region,
    edm_opty.opportunity_owner_user_area,

    -- NF: adjusted to FY24 GTM structure
    edm_opty.report_opportunity_user_segment,

    -- NF: unadjusted version of segment used to create the FY24 GTM key
    edm_opty.report_opportunity_raw_user_segment,

    edm_opty.report_opportunity_user_geo,
    edm_opty.report_opportunity_user_region,
    edm_opty.report_opportunity_user_area,

    -- NF 20230214
    -- FY24 GTM calculated fields. These fields will be sourced from EDM eventually
    edm_opty.report_opportunity_user_business_unit,
    edm_opty.report_opportunity_user_sub_business_unit,
    edm_opty.report_opportunity_user_division,
    edm_opty.report_opportunity_user_asm,
    edm_opty.report_opportunity_user_role_type,

    edm_opty.partner_category,
    edm_opty.alliance_partner,

    ------------------------------------------------------------------------
    -- creating report_user_segment_geo_region_area_sqs_ot with adjusted segment
    edm_opty.report_user_segment_geo_region_area_sqs_ot,
    edm_opty.report_user_segment_geo_region_area,
    ------------------------------------------------------------------------
    -- FY24 keys
    edm_opty.report_bu_user_segment_geo_region_area_sqs_ot,
    edm_opty.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot,
    edm_opty.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap,

    ----------------------------------------------------------
    ----------------------------------------------------------

    edm_opty.dbt_updated_at                         AS _last_dbt_run,
    edm_opty.dim_crm_account_id                     AS account_id,
    edm_opty.dim_crm_opportunity_id                 AS opportunity_id,
    edm_opty.opportunity_name                       AS opportunity_name,

    edm_opty.close_date                             AS close_date,
    edm_opty.created_date                           AS created_date,
    edm_opty.sales_accepted_date,
    edm_opty.sales_qualified_date,
    edm_opty.subscription_start_date                AS quote_start_date,
    edm_opty.subscription_end_date                  AS quote_end_date,

    edm_opty.days_in_stage,
    edm_opty.deployment_preference,
    edm_opty.merged_crm_opportunity_id,
    ----------------------------------------------------------
    ----------------------------------------------------------
    edm_opty.owner_id,
    -- edm_opty.opportunity_owner,
    opportunity_owner.name                          AS opportunity_owner,
    edm_opty.opportunity_owner_department,
    edm_opty.opportunity_owner_manager,
    edm_opty.opportunity_owner_role,
    edm_opty.opportunity_owner_title,
    ----------------------------------------------------------
    ----------------------------------------------------------
    edm_opty.opportunity_term,
    edm_opty.primary_campaign_source_id            AS primary_campaign_source_id,
    edm_opty.sales_path                            AS sales_path,
    edm_opty.sales_type                            AS sales_type,
    edm_opty.stage_name                            AS stage_name,
    edm_opty.order_type                            AS order_type_stamped,
    edm_opty.order_type_live                       AS order_type_live,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- Amount fields
    COALESCE(edm_opty.net_arr,0)                   AS raw_net_arr,
    edm_opty.net_arr,
    edm_opty.amount,
    edm_opty.renewal_amount,
    edm_opty.recurring_amount,
    edm_opty.true_up_amount,
    edm_opty.proserv_amount,
    edm_opty.other_non_recurring_amount,
    edm_opty.arr_basis,
    edm_opty.arr,

    edm_opty.competitors,
    edm_opty.fpa_master_bookings_flag,
    edm_opty.forecast_category_name,
    edm_opty.invoice_number,
    edm_opty.professional_services_value,
    edm_opty.is_ps_opp,
    edm_opty.reason_for_loss,
    edm_opty.reason_for_loss_details,
    edm_opty.downgrade_reason,
    edm_opty.lead_source,

    edm_opty.is_downgrade,
    edm_opty.is_edu_oss,
    edm_opty.solutions_to_be_replaced,
    edm_opty.total_contract_value,
    edm_opty.is_web_portal_purchase,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- Support Team Members
    edm_opty.opportunity_business_development_representative,
    edm_opty.opportunity_sales_development_representative,
    edm_opty.opportunity_development_representative,
    -- Missing ISR & TAM

    ----------------------------------------------------------
    ----------------------------------------------------------
    edm_opty.opportunity_health,
    edm_opty.is_risky,
    edm_opty.risk_type,
    edm_opty.risk_reasons,
    edm_opty.tam_notes,
    edm_opty.days_in_1_discovery,
    edm_opty.days_in_2_scoping,
    edm_opty.days_in_3_technical_evaluation,
    edm_opty.days_in_4_proposal,
    edm_opty.days_in_5_negotiating,
    edm_opty.stage_0_pending_acceptance_date,
    edm_opty.stage_1_discovery_date,
    edm_opty.stage_2_scoping_date,
    edm_opty.stage_3_technical_evaluation_date,
    edm_opty.stage_4_proposal_date,
    edm_opty.stage_5_negotiating_date,
    edm_opty.stage_6_awaiting_signature_date_date         AS stage_6_awaiting_signature_date,
    edm_opty.stage_6_closed_won_date,
    edm_opty.stage_6_closed_lost_date,
    edm_opty.cp_champion,
    edm_opty.cp_close_plan,
    edm_opty.cp_competition,
    edm_opty.cp_decision_criteria,
    edm_opty.cp_decision_process,
    edm_opty.cp_economic_buyer,
    edm_opty.cp_identify_pain,
    edm_opty.cp_metrics,
    edm_opty.cp_risks,
    edm_opty.cp_use_cases,
    edm_opty.cp_value_driver,
    edm_opty.cp_why_do_anything_at_all,
    edm_opty.cp_why_gitlab,
    edm_opty.cp_why_now,
    edm_opty.cp_score,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- fields form opportunity source
    edm_opty.opportunity_category,
    edm_opty.product_category,

    ----------------------------------------------------------
    ----------------------------------------------------------
    -- Channel Org. fields
    edm_opty.deal_path_name                             AS deal_path,
    edm_opty.dr_partner_deal_type,
    edm_opty.dr_partner_engagement_name                 AS dr_partner_engagement, 
    edm_opty.partner_account,
    edm_opty.partner_account_name,
    edm_opty.dr_status,
    edm_opty.distributor,
    edm_opty.influence_partner,
    edm_opty.partner_track,
    edm_opty.partner_gitlab_program,
    edm_opty.is_public_sector_opp,
    edm_opty.is_registration_from_portal,
    edm_opty.calculated_discount,
    edm_opty.partner_discount,
    edm_opty.partner_discount_calc,
    edm_opty.comp_channel_neutral,
    edm_opty.fulfillment_partner                       AS resale_partner_id,
    resale_account.account_name                        AS resale_partner_name,
    edm_opty.platform_partner,

    ----------------------------------------------------------
    ----------------------------------------------------------

    -- account driven fields
    edm_opty.crm_account_name                          AS account_name,
    edm_opty.dim_parent_crm_account_id                 AS ultimate_parent_account_id,
    edm_opty.is_jihu_account,

    account_owner.name                                 AS account_owner_name,
    account_owner.user_id                              AS account_owner_id,                                               

    edm_opty.parent_crm_account_sales_segment,
    edm_opty.parent_crm_account_geo,
    edm_opty.parent_crm_account_region,
    edm_opty.parent_crm_account_area,
    edm_opty.parent_crm_account_territory,

    edm_opty.sales_qualified_source_name               AS sales_qualified_source,
    edm_opty.stage_category,
    edm_opty.calculated_partner_track,
    edm_opty.deal_path_engagement,
    edm_opty.is_refund,
    edm_opty.is_credit                                 AS is_credit_flag,
    edm_opty.is_contract_reset                         AS is_contract_reset_flag,
    edm_opty.is_net_arr_pipeline_created,
    CAST(edm_opty.is_won AS INTEGER)                   AS is_won,
    edm_opty.is_lost,
    edm_opty.is_open,
    edm_opty.is_duplicate                              AS is_duplicate_flag,    
    CASE edm_opty.is_closed 
      WHEN TRUE THEN 1 
      ELSE 0 
    END                                                AS is_closed,
    edm_opty.is_closed                                 AS stage_is_closed,
    edm_opty.is_active                                 AS stage_is_active,
    edm_opty.is_renewal,


    -- date fields helpers -- revisit
    edm_opty.close_fiscal_quarter_name,
    edm_opty.close_fiscal_quarter_date,
    edm_opty.close_fiscal_year,
    edm_opty.close_month                                                 AS close_date_month,

    edm_opty.created_fiscal_quarter_name,
    edm_opty.created_fiscal_quarter_date,
    edm_opty.created_fiscal_year,
    edm_opty.created_month                                               AS created_date_month,

    edm_opty.subscription_start_fiscal_quarter_name                      AS quote_start_date_fiscal_quarter_name,
    edm_opty.subscription_start_fiscal_quarter_date                      AS quote_start_date_fiscal_quarter_date,
    edm_opty.subscription_start_fiscal_year                              AS quote_start_date_fiscal_year,
    edm_opty.subscription_start_month                                    AS quote_start_date_month,

    edm_opty.sales_accepted_fiscal_quarter_name,
    edm_opty.sales_accepted_fiscal_quarter_date,
    edm_opty.sales_accepted_fiscal_year,
    edm_opty.sales_accepted_month                                        AS sales_accepted_date_month,

    edm_opty.sales_qualified_fiscal_quarter_name,
    edm_opty.sales_qualified_fiscal_quarter_date,
    edm_opty.sales_qualified_fiscal_year,
    edm_opty.sales_qualified_month                                       AS sales_qualified_date_month,

    edm_opty.net_arr_created_date,
    edm_opty.net_arr_created_fiscal_quarter_name,
    edm_opty.net_arr_created_fiscal_quarter_date,
    edm_opty.net_arr_created_fiscal_year,
    edm_opty.net_arr_created_month                                       AS net_arr_created_date_month,

    edm_opty.pipeline_created_date,
    edm_opty.pipeline_created_fiscal_quarter_name,
    edm_opty.pipeline_created_fiscal_quarter_date,
    edm_opty.pipeline_created_fiscal_year,
    edm_opty.net_arr_created_month                                       AS pipeline_created_date_month,

    edm_opty.stage_1_discovery_date                                      AS stage_1_date,
    edm_opty.stage_1_discovery_month                                     AS stage_1_date_month,
    edm_opty.stage_1_discovery_fiscal_year                               AS stage_1_fiscal_year,
    edm_opty.stage_1_discovery_fiscal_quarter_name                       AS stage_1_fiscal_quarter_name,
    edm_opty.stage_1_discovery_fiscal_quarter_date                       AS stage_1_fiscal_quarter_date,

    edm_opty.stage_3_technical_evaluation_date                           AS stage_3_date,
    edm_opty.stage_3_technical_evaluation_month                          AS stage_3_date_month,
    edm_opty.stage_3_technical_evaluation_fiscal_year                    AS stage_3_fiscal_year,
    edm_opty.stage_3_technical_evaluation_fiscal_quarter_name            AS stage_3_fiscal_quarter_name,
    edm_opty.stage_3_technical_evaluation_fiscal_quarter_date            AS stage_3_fiscal_quarter_date,

    -- Last Activity Date <- This date can be in the future, it represents the date of the last activity taken or scheduled 
    edm_opty.last_activity_date,
    edm_opty.last_activity_fiscal_year,
    edm_opty.last_activity_fiscal_quarter_name,
    edm_opty.last_activity_fiscal_quarter_date,
    edm_opty.last_activity_month                                         AS last_activity_date_month,

    -- Sales Activity Date <- Last time an activity was taken against the opportunity
    edm_opty.sales_last_activity_date,
    edm_opty.sales_last_activity_fiscal_year,
    edm_opty.sales_last_activity_fiscal_quarter_name,
    edm_opty.sales_last_activity_fiscal_quarter_date,
    edm_opty.sales_last_activity_month                                   AS sales_last_activity_date_month,

    edm_opty.competitors_other_flag,
    edm_opty.competitors_gitlab_core_flag,
    edm_opty.competitors_none_flag,
    edm_opty.competitors_github_enterprise_flag,
    edm_opty.competitors_bitbucket_server_flag,
    edm_opty.competitors_unknown_flag,
    edm_opty.competitors_github_flag,
    edm_opty.competitors_gitlab_flag,
    edm_opty.competitors_jenkins_flag,
    edm_opty.competitors_azure_devops_flag,
    edm_opty.competitors_svn_flag,
    edm_opty.competitors_bitbucket_flag,
    edm_opty.competitors_atlassian_flag,
    edm_opty.competitors_perforce_flag,
    edm_opty.competitors_visual_studio_flag,
    edm_opty.competitors_azure_flag,
    edm_opty.competitors_amazon_code_commit_flag,
    edm_opty.competitors_circleci_flag,
    edm_opty.competitors_bamboo_flag,
    edm_opty.competitors_aws_flag,
    edm_opty.is_comp_new_logo_override,
    edm_opty.is_stage_1_plus,
    edm_opty.is_stage_3_plus,
    edm_opty.is_stage_4_plus,
    edm_opty.stage_name_3plus,
    edm_opty.stage_name_4plus,
    edm_opty.deal_category,
    edm_opty.deal_group,
    edm_opty.calculated_deal_count                                   AS calculated_deal_count,
    edm_opty.lam_dev_count,

    ----------------------------------------------------------------
    -- NF 2022-01-28 This is probably TO BE DEPRECATED too, need to align with Channel ops
    -- PIO Flag for PIO reporting dashboard
    CASE
    WHEN edm_opty.dr_partner_engagement = 'PIO'
        THEN 1
    ELSE 0
    END                                                             AS partner_engaged_opportunity_flag,

    -- check if renewal was closed on time or not
    CASE
    WHEN LOWER(edm_opty.sales_type) like '%renewal%'
        AND start_date.first_day_of_fiscal_quarter   >= edm_opty.close_fiscal_quarter_date
        THEN 'On-Time'
    WHEN LOWER(edm_opty.sales_type) like '%renewal%'
        AND start_date.first_day_of_fiscal_quarter   < edm_opty.close_fiscal_quarter_date
        THEN 'Late'
    END                                                            AS renewal_timing_status,

    ----------------------------------------------------------------
    ----------------------------------------------------------------
    -- calculated fields for pipeline velocity report

    -- 20201021 NF: This should be replaced by a table that keeps track of excluded deals for forecasting purposes
    edm_opty.is_excluded_from_pipeline_created                     AS is_excluded_flag,
    -----------------------------------------------

    ---- measures
    edm_opty.open_1plus_deal_count,
    edm_opty.open_3plus_deal_count,
    edm_opty.open_4plus_deal_count,
    edm_opty.booked_deal_count,
    edm_opty.churned_contraction_deal_count,
    edm_opty.booked_churned_contraction_deal_count,
    edm_opty.open_1plus_net_arr,
    edm_opty.open_3plus_net_arr,
    edm_opty.open_4plus_net_arr,
    edm_opty.booked_net_arr,
    edm_opty.booked_churned_contraction_net_arr,
    edm_opty.churned_contraction_net_arr,
   
    edm_opty.deal_size,
    edm_opty.calculated_deal_size,

    ---------------------------------------------
    ---------------------------------------------

    -- NF: calculated age only considers created date to close date or actual date if open
    edm_opty.calculated_age_in_days,

    -- NF: cycle time will consider if the opty is renewal and eligible to be considered 
    -- using the is_eligible_cycle_time_analysis
    CASE 
        WHEN edm_opty.is_edu_oss = 0
            AND edm_opty.is_deleted = 0
            -- For stage age we exclude only ps/other
            AND edm_opty.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            -- Only include deal types with meaningful journeys through the stages
            AND edm_opty.opportunity_category IN ('Standard')
            -- Web Purchase have a different dynamic and should not be included
            AND edm_opty.is_web_portal_purchase = 0
                THEN 1
        ELSE 0
    END                                                           AS is_eligible_cycle_time_analysis_flag,

    -- NF: We consider net_arr_created date for renewals as they haver a very distinct motion than 
    --      add on and First Orders
    --     Logic is different for open deals so we can evaluate their current cycle time.
    CASE
        WHEN edm_opty.is_renewal = 1 AND is_closed = 1
            THEN DATEDIFF(day, edm_opty.net_arr_created_date, edm_opty.close_date)
        WHEN edm_opty.is_renewal = 0 AND is_closed = 1
            THEN DATEDIFF(day, edm_opty.created_date, edm_opty.close_date)
         WHEN edm_opty.is_renewal = 1 AND is_open = 1
            THEN DATEDIFF(day, edm_opty.net_arr_created_date, CURRENT_DATE)
        WHEN edm_opty.is_renewal = 0 AND is_open = 1
            THEN DATEDIFF(day, edm_opty.created_date, CURRENT_DATE)
    END                                                           AS cycle_time_in_days,

    -- For some analysis it is important to order stages by rank
    CASE
            WHEN edm_opty.stage_name = '0-Pending Acceptance'
                THEN 0
            WHEN edm_opty.stage_name = '1-Discovery'
                THEN 1
             WHEN edm_opty.stage_name = '2-Scoping'
                THEN 2
            WHEN edm_opty.stage_name = '3-Technical Evaluation'
                THEN 3
            WHEN edm_opty.stage_name = '4-Proposal'
                THEN 4
            WHEN edm_opty.stage_name = '5-Negotiating'
                THEN 5
            WHEN edm_opty.stage_name = '6-Awaiting Signature'
                THEN 6
            WHEN edm_opty.stage_name = '7-Closing'
                THEN 7
            WHEN edm_opty.stage_name = 'Closed Won'
                THEN 8
            WHEN edm_opty.stage_name = '8-Closed Lost'
                THEN 9
            WHEN edm_opty.stage_name = '9-Unqualified'
                THEN 10
            WHEN edm_opty.stage_name = '10-Duplicate'
                THEN 11
            ELSE NULL
    END                     AS stage_name_rank,

    CASE
        WHEN edm_opty.stage_name IN ('0-Pending Acceptance')
            THEN '0. Acceptance' 
         WHEN edm_opty.stage_name IN ('1-Discovery','2-Scoping')
            THEN '1. Early'
         WHEN edm_opty.stage_name IN ('3-Technical Evaluation','4-Proposal')
            THEN '2. Middle'
         WHEN edm_opty.stage_name IN ('5-Negotiating','6-Awaiting Signature')
            THEN '3. Late'
        ELSE '4. Closed'
    END                     AS pipeline_category,
   
    ---------------------------------------------
    ---------------------------------------------

    edm_opty.is_eligible_open_pipeline              AS is_eligible_open_pipeline_flag,
    edm_opty.is_eligible_asp_analysis               AS is_eligible_asp_analysis_flag,
    edm_opty.is_eligible_age_analysis               AS is_eligible_age_analysis_flag,
    edm_opty.is_booked_net_arr                      AS is_booked_net_arr_flag,
    edm_opty.is_eligible_churn_contraction          AS is_eligible_churn_contraction_flag,
    edm_opty.created_and_won_same_quarter_net_arr,
    edm_opty.churn_contraction_net_arr_bucket,
    edm_opty.reason_for_loss_calc,    
    CASE edm_opty.is_sao 
      WHEN TRUE THEN 1 
      ELSE 0 
    END                                             AS is_eligible_sao_flag,
    edm_opty.is_deleted,
    opportunity_owner.is_rep_flag,
    edm_opty.pushed_count,
    edm_opty.intented_product_tier,

    -- to simplify reporting, we adjust parent opportunity to default to the opportunity id when null
    CASE
        WHEN edm_opty.parent_opportunity IS NULL
            THEN edm_opty.dim_crm_opportunity_id
        ELSE edm_opty.parent_opportunity
    END  AS parent_opportunity,

    -- Calculated fields
    CASE
        WHEN LOWER(edm_opty.product_category) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(edm_opty.product_category) LIKE '%ultimate%'
            THEN 'Ultimate'
        WHEN LOWER(edm_opty.intented_product_tier) LIKE '%premium%'
            THEN 'Premium'
        WHEN LOWER(edm_opty.intented_product_tier) LIKE '%ultimate%'
            THEN 'Ultimate'
        ELSE 'Other'
    END AS  product_category_tier,

    CASE
        WHEN lower(edm_opty.product_category) LIKE '%saas%'
                THEN 'SaaS'
        WHEN lower(edm_opty.product_category) LIKE '%self-managed%'
                THEN 'Self-Managed'
        ELSE 'Other'
    END AS  product_category_deployment,

    -- demographics fields
    edm_opty.parent_crm_account_upa_country,
    edm_opty.parent_crm_account_upa_state,
    edm_opty.parent_crm_account_upa_city,
    edm_opty.parent_crm_account_upa_street,
    edm_opty.parent_crm_account_upa_postal_code,
    account.parent_crm_account_upa_country_name,
    edm_opty.parent_crm_account_business_unit
    
    FROM edm_opty
    -- Date helpers
    INNER JOIN sfdc_accounts_xf AS account
      ON account.account_id = edm_opty.dim_crm_account_id
    INNER JOIN sfdc_users_xf AS account_owner
      ON account_owner.user_id = account.owner_id
    INNER JOIN date_details AS created_date_detail
      ON created_date_detail.date_actual = edm_opty.created_date::DATE
    INNER JOIN sfdc_users_xf AS opportunity_owner
      ON opportunity_owner.user_id = edm_opty.owner_id
    LEFT JOIN date_details AS start_date
      ON edm_opty.subscription_start_date::DATE = start_date.date_actual
    LEFT JOIN sfdc_accounts_xf AS resale_account
      ON resale_account.account_id = edm_opty.fulfillment_partner
    -- NF 20210906 remove JiHu opties from the models
    WHERE edm_opty.is_jihu_account = 0
        AND account.ultimate_parent_account_id NOT IN ('0016100001YUkWVAA1')            -- remove test account
        AND edm_opty.dim_crm_account_id NOT IN ('0014M00001kGcORQA0')                -- remove test account
        AND edm_opty.is_deleted = 0


), churn_metrics AS (

    SELECT
        o.opportunity_id,
        NVL(o.reason_for_loss, o.downgrade_reason) AS reason_for_loss_staged,
        o.reason_for_loss_details,

        CASE
          WHEN o.order_type_stamped IN ('4. Contraction','5. Churn - Partial')
            THEN 'Contraction'
          ELSE 'Churn'
        END                                    AS churn_contraction_type_calc

    FROM sfdc_opportunity_xf o
    WHERE o.order_type_stamped IN ('4. Contraction','5. Churn - Partial','6. Churn - Final')
        AND (o.is_won = 1
            OR (is_renewal = 1 AND is_lost = 1))

), service_opportunities AS (

    SELECT
        CASE
            WHEN parent_opportunity IS NULL
                THEN opportunity_id
            ELSE parent_opportunity
            END  AS opportunity_id,
        COUNT(opportunity_id)               AS count_service_opportunities,
        SUM(professional_services_value)    AS total_professional_services_value,
        SUM(CASE
                WHEN is_won = 1
                    THEN professional_services_value
                ELSE 0
            END)                            AS total_book_professional_services_value,
       SUM(CASE
                WHEN is_lost = 1
                    THEN professional_services_value
                ELSE 0
            END)                            AS total_lost_professional_services_value,
       SUM(CASE
                WHEN is_open = 1
                    THEN professional_services_value
                ELSE 0
            END)                            AS total_open_professional_services_value
    FROM sfdc_opportunity_xf
    WHERE professional_services_value <> 0
    GROUP BY 1

), oppty_final AS (

    SELECT
        sfdc_opportunity_xf.*,

        -- Customer Success related fields
        -- DRI Michael Armtz
        churn_metrics.reason_for_loss_staged,
        -- churn_metrics.reason_for_loss_calc, -- part of edm opp mart
        churn_metrics.churn_contraction_type_calc,

        --services total amount
        COALESCE(service_opportunities.total_professional_services_value,0) AS total_professional_services_value,
      
        COALESCE(service_opportunities.total_book_professional_services_value,0) AS total_book_professional_services_value,
        COALESCE(service_opportunities.total_lost_professional_services_value,0) AS total_lost_professional_services_value,
        COALESCE(service_opportunities.total_open_professional_services_value,0) AS total_open_professional_services_value

    FROM sfdc_opportunity_xf
    CROSS JOIN today
    LEFT JOIN churn_metrics
      ON churn_metrics.opportunity_id = sfdc_opportunity_xf.opportunity_id
    LEFT JOIN service_opportunities 
      ON service_opportunities.opportunity_id = sfdc_opportunity_xf.opportunity_id

), add_calculated_net_arr_to_opty_final AS (

    SELECT
      oppty_final.*,


      -- JK 2023-02-06: FY23 keys for temp dashboard solution until tools are ready for FY24 keys 
      -- NF 2022-02-17 These keys are used in the pipeline metrics models and on the X-Ray dashboard to link gSheets with
      -- different aggregation levels
      LOWER(agg_demo_keys_fy23.key_sqs)                             AS key_sqs,
      LOWER(agg_demo_keys_fy23.key_ot)                              AS key_ot,
      LOWER(agg_demo_keys_fy23.key_segment)                         AS key_segment,
      LOWER(agg_demo_keys_fy23.key_segment_sqs)                     AS key_segment_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_ot)                      AS key_segment_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo)                     AS key_segment_geo,
      LOWER(agg_demo_keys_fy23.key_segment_geo_sqs)                 AS key_segment_geo_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_geo_ot)                  AS key_segment_geo_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region)              AS key_segment_geo_region,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_sqs)          AS key_segment_geo_region_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_ot)           AS key_segment_geo_region_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_area)         AS key_segment_geo_region_area,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_area_sqs)     AS key_segment_geo_region_area_sqs,
      LOWER(agg_demo_keys_fy23.key_segment_geo_region_area_ot)      AS key_segment_geo_region_area_ot,
      LOWER(agg_demo_keys_fy23.key_segment_geo_area)                AS key_segment_geo_area,
      LOWER(agg_demo_keys_fy23.sales_team_cro_level)                AS sales_team_cro_level,
      LOWER(agg_demo_keys_fy23.sales_team_rd_asm_level)             AS sales_team_rd_asm_level,
      LOWER(agg_demo_keys_fy23.sales_team_vp_level)                 AS sales_team_vp_level,
      LOWER(agg_demo_keys_fy23.sales_team_avp_rd_level)             AS sales_team_avp_rd_level,
      LOWER(agg_demo_keys_fy23.sales_team_asm_level)                AS sales_team_asm_level,

      -- JK 2023-02-06: FY24 keys
      LOWER(agg_demo_keys_base.key_bu)                      AS key_bu,
      LOWER(key_bu_ot)                                      AS key_bu_ot,
      LOWER(key_bu_sqs)                                     AS key_bu_sqs,
      LOWER(agg_demo_keys_base.key_bu_subbu)                AS key_bu_subbu,
      LOWER(agg_demo_keys_base.key_bu_subbu_ot)             AS key_bu_subbu_ot,
      LOWER(agg_demo_keys_base.key_bu_subbu_sqs)            AS key_bu_subbu_sqs,
      LOWER(agg_demo_keys_base.key_bu_subbu_division)       AS key_bu_subbu_division,
      LOWER(agg_demo_keys_base.key_bu_subbu_division_ot)    AS key_bu_subbu_division_ot,
      LOWER(agg_demo_keys_base.key_bu_subbu_division_sqs)   AS key_bu_subbu_division_sqs,
      LOWER(agg_demo_keys_base.key_bu_subbu_division_asm)   AS key_bu_subbu_division_asm,

      -- Created pipeline eligibility definition
      -- https://gitlab.com/gitlab-com/sales-team/field-operations/systems/-/issues/2389
      CASE
        WHEN oppty_final.order_type_stamped IN ('1. New - First Order' ,'2. New - Connected', '3. Growth')
          AND oppty_final.is_edu_oss = 0
          AND oppty_final.pipeline_created_fiscal_quarter_date IS NOT NULL
          AND oppty_final.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Credit','Contract Reset')
          -- 20211222 Adjusted to remove the ommitted filter
          AND oppty_final.stage_name NOT IN ('00-Pre Opportunity','10-Duplicate', '9-Unqualified','0-Pending Acceptance')
          AND (net_arr > 0
            OR oppty_final.opportunity_category = 'Credit')
          -- 20220128 Updated to remove webdirect SQS deals
          AND oppty_final.sales_qualified_source  != 'Web Direct Generated'
          AND oppty_final.is_jihu_account = 0
         THEN 1
         ELSE 0
      END                                                          AS is_eligible_created_pipeline_flag


    FROM oppty_final
    -- Add keys for aggregated analysis
    LEFT JOIN agg_demo_keys_fy23
      ON oppty_final.report_user_segment_geo_region_area_sqs_ot = agg_demo_keys_fy23.report_user_segment_geo_region_area_sqs_ot
    LEFT JOIN agg_demo_keys_base
      ON oppty_final.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap = agg_demo_keys_base.report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap


)
SELECT *
FROM add_calculated_net_arr_to_opty_final21:T30c3,/* This table needs to be permanent to allow zero cloning at specific timestamps */
{{ config({
        "materialized": "table",
        "transient": false,
        "alias": "mart_arr"
    })
}}

WITH dim_billing_account AS (

  SELECT *
  FROM {{ ref('dim_billing_account') }}

), dim_crm_account AS (

  SELECT *
  FROM {{ ref('dim_crm_account') }}

), dim_date AS (

  SELECT *
  FROM {{ ref('dim_date') }}

), dim_product_detail AS (

  SELECT *
  FROM {{ ref('dim_product_detail') }}

), dim_subscription AS (

  SELECT *
  FROM {{ ref('dim_subscription') }}

), fct_mrr AS (

  SELECT
    dim_date_id,
    dim_subscription_id,
    dim_product_detail_id,
    dim_billing_account_id,
    dim_crm_account_id,
    SUM(mrr)                                                                      AS mrr,
    SUM(arr)                                                                      AS arr,
    SUM(quantity)                                                                 AS quantity,
    ARRAY_AGG(DISTINCT unit_of_measure) WITHIN GROUP (ORDER BY unit_of_measure)   AS unit_of_measure
  FROM {{ ref('fct_mrr') }}
  WHERE subscription_status IN ('Active', 'Cancelled')
  {{ dbt_utils.group_by(n=5) }}

), joined AS (

    SELECT
      --primary_key
      {{ dbt_utils.surrogate_key(['fct_mrr.dim_date_id', 'dim_subscription.subscription_name', 'fct_mrr.dim_product_detail_id']) }}
                                                                                      AS primary_key,

      --date info
      dim_date.date_actual                                                            AS arr_month,
      IFF(is_first_day_of_last_month_of_fiscal_quarter, fiscal_quarter_name_fy, NULL) AS fiscal_quarter_name_fy,
      IFF(is_first_day_of_last_month_of_fiscal_year, fiscal_year, NULL)               AS fiscal_year,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,
      dim_billing_account.auto_pay                                                    AS auto_pay,
      dim_billing_account.default_payment_method_type                                 AS default_payment_method_type,

      -- crm account info
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.crm_account_employee_count_band                                 AS crm_account_employee_count_band,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,
      dim_crm_account.parent_crm_account_lam                                          AS parent_crm_account_lam,
      dim_crm_account.parent_crm_account_lam_dev_count                                AS parent_crm_account_lam_dev_count,
      dim_crm_account.parent_crm_account_business_unit                                AS parent_crm_account_business_unit,
      dim_crm_account.parent_crm_account_geo                                          AS parent_crm_account_geo,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_role_type                                    AS parent_crm_account_role_type,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_max_family_employee                          AS parent_crm_account_max_family_employee,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_upa_state                                    AS parent_crm_account_upa_state,
      dim_crm_account.parent_crm_account_upa_city                                     AS parent_crm_account_upa_city,
      dim_crm_account.parent_crm_account_upa_street                                   AS parent_crm_account_upa_street,
      dim_crm_account.parent_crm_account_upa_postal_code                              AS parent_crm_account_upa_postal_code,
      dim_crm_account.crm_account_employee_count                                      AS crm_account_employee_count,

      --subscription info
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.dim_subscription_id_original                                   AS dim_subscription_id_original,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name                                              AS subscription_name,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_date.date_actual) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_date.first_day_of_fiscal_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_date.date_actual) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_date.first_day_of_fiscal_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_date.date_actual) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_date.first_day_of_fiscal_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.invoice_owner_account,
      dim_subscription.creator_account,
      dim_subscription.was_purchased_through_reseller,

      --product info
      dim_product_detail.dim_product_detail_id                                        AS dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.product_ranking                                              AS product_ranking,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,
      dim_product_detail.is_licensed_user                                             AS is_licensed_user,
      dim_product_detail.is_arpu                                                      AS is_arpu,

      -- MRR values
      --  not needed as all charges in fct_mrr are recurring
      --  fct_mrr.charge_type,
      fct_mrr.unit_of_measure                                                         AS unit_of_measure,
      fct_mrr.mrr                                                                     AS mrr,
      fct_mrr.arr                                                                     AS arr,
      fct_mrr.quantity                                                                AS quantity
    FROM fct_mrr
    INNER JOIN dim_subscription
      ON dim_subscription.dim_subscription_id = fct_mrr.dim_subscription_id
    INNER JOIN dim_product_detail
      ON dim_product_detail.dim_product_detail_id = fct_mrr.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON dim_billing_account.dim_billing_account_id = fct_mrr.dim_billing_account_id
    INNER JOIN dim_date
      ON dim_date.date_id = fct_mrr.dim_date_id
    LEFT JOIN dim_crm_account
      ON dim_billing_account.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), cohort_diffs AS (

  SELECT
    joined.*,
    datediff(month, billing_account_cohort_month, arr_month)     AS months_since_billing_account_cohort_start,
    datediff(quarter, billing_account_cohort_quarter, arr_month) AS quarters_since_billing_account_cohort_start,
    datediff(month, crm_account_cohort_month, arr_month)         AS months_since_crm_account_cohort_start,
    datediff(quarter, crm_account_cohort_quarter, arr_month)     AS quarters_since_crm_account_cohort_start,
    datediff(month, parent_account_cohort_month, arr_month)      AS months_since_parent_account_cohort_start,
    datediff(quarter, parent_account_cohort_quarter, arr_month)  AS quarters_since_parent_account_cohort_start,
    datediff(month, subscription_cohort_month, arr_month)        AS months_since_subscription_cohort_start,
    datediff(quarter, subscription_cohort_quarter, arr_month)    AS quarters_since_subscription_cohort_start
  FROM joined

), parent_arr AS (

    SELECT
      arr_month,
      dim_parent_crm_account_id,
      SUM(arr)                                   AS arr
    FROM joined
    {{ dbt_utils.group_by(n=2) }}

), parent_arr_band_calc AS (

    SELECT
      arr_month,
      dim_parent_crm_account_id,
      CASE
        WHEN arr > 5000 THEN 'ARR > $5K'
        WHEN arr <= 5000 THEN 'ARR <= $5K'
      END                                        AS arr_band_calc
    FROM parent_arr

), final_table AS (

    SELECT
      cohort_diffs.*,
      arr_band_calc
    FROM cohort_diffs
    LEFT JOIN parent_arr_band_calc
      ON cohort_diffs.arr_month = parent_arr_band_calc.arr_month
      AND cohort_diffs.dim_parent_crm_account_id = parent_arr_band_calc.dim_parent_crm_account_id

)

{{ dbt_audit(
    cte_ref="final_table",
    created_by="@msendal",
    updated_by="@lisvinueza",
    created_date="2020-09-04",
    updated_date="2023-05-21"
) }}22:T4e2,Data mart to explore ARR. This model is built using the same logic as the Zuora UI out of the box MRR Trend Report. The report looks at the charges associated with subscriptions, along with their effective dates and subscription statuses, and calculates ARR.

The below query will pull ARR by month. You can add additional dimensions to the query to build out your analysis.

SELECT
  arr_month,
  SUM(arr)  AS arr
FROM "PROD"."LEGACY"."MART_ARR"
WHERE arr_month < DATE_TRUNC('month',CURRENT_DATE)
GROUP BY 1
ORDER BY 1 DESC

Charges_month_by_month CTE:

This CTE amortizes the ARR by month over the effective term of the rate plan charges. There are 4 subscription statuses in Zuora: active, cancelled, draft and expired. The Zuora UI reporting modules use a filter of WHERE subscription_status NOT IN ('Draft','Expired') which is also applied in this query. Please see the column definitions for additional details.

Here is an image documenting the ERD for this table:

<div style="width: 640px; height: 480px; margin: 10px; position: relative;"><iframe allowfullscreen frameborder="0" style="width:640px; height:480px" src="https://app.lucidchart.com/documents/embeddedchart/998dbbae-f04e-4310-9d85-0c360a40a018" id="T0XuoGn786sQ"></iframe></div>23:T31c6,/* This table needs to be permanent to allow zero cloning at specific timestamps */


WITH dim_billing_account AS (

  SELECT *
  FROM "PROD".common.dim_billing_account

), dim_crm_account AS (

  SELECT *
  FROM "PROD".restricted_safe_common.dim_crm_account

), dim_date AS (

  SELECT *
  FROM "PROD".common.dim_date

), dim_product_detail AS (

  SELECT *
  FROM "PROD".common.dim_product_detail

), dim_subscription AS (

  SELECT *
  FROM "PROD".common.dim_subscription

), fct_mrr AS (

  SELECT
    dim_date_id,
    dim_subscription_id,
    dim_product_detail_id,
    dim_billing_account_id,
    dim_crm_account_id,
    SUM(mrr)                                                                      AS mrr,
    SUM(arr)                                                                      AS arr,
    SUM(quantity)                                                                 AS quantity,
    ARRAY_AGG(DISTINCT unit_of_measure) WITHIN GROUP (ORDER BY unit_of_measure)   AS unit_of_measure
  FROM "PROD".restricted_safe_common.fct_mrr
  WHERE subscription_status IN ('Active', 'Cancelled')
  group by 1,2,3,4,5

), joined AS (

    SELECT
      --primary_key
      md5(cast(coalesce(cast(fct_mrr.dim_date_id as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription.subscription_name as 
    varchar
), '') || '-' || coalesce(cast(fct_mrr.dim_product_detail_id as 
    varchar
), '') as 
    varchar
))
                                                                                      AS primary_key,

      --date info
      dim_date.date_actual                                                            AS arr_month,
      IFF(is_first_day_of_last_month_of_fiscal_quarter, fiscal_quarter_name_fy, NULL) AS fiscal_quarter_name_fy,
      IFF(is_first_day_of_last_month_of_fiscal_year, fiscal_year, NULL)               AS fiscal_year,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,
      dim_billing_account.auto_pay                                                    AS auto_pay,
      dim_billing_account.default_payment_method_type                                 AS default_payment_method_type,

      -- crm account info
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.crm_account_employee_count_band                                 AS crm_account_employee_count_band,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,
      dim_crm_account.parent_crm_account_lam                                          AS parent_crm_account_lam,
      dim_crm_account.parent_crm_account_lam_dev_count                                AS parent_crm_account_lam_dev_count,
      dim_crm_account.parent_crm_account_business_unit                                AS parent_crm_account_business_unit,
      dim_crm_account.parent_crm_account_geo                                          AS parent_crm_account_geo,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_role_type                                    AS parent_crm_account_role_type,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_max_family_employee                          AS parent_crm_account_max_family_employee,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_upa_state                                    AS parent_crm_account_upa_state,
      dim_crm_account.parent_crm_account_upa_city                                     AS parent_crm_account_upa_city,
      dim_crm_account.parent_crm_account_upa_street                                   AS parent_crm_account_upa_street,
      dim_crm_account.parent_crm_account_upa_postal_code                              AS parent_crm_account_upa_postal_code,
      dim_crm_account.crm_account_employee_count                                      AS crm_account_employee_count,

      --subscription info
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.dim_subscription_id_original                                   AS dim_subscription_id_original,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name                                              AS subscription_name,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_date.date_actual) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_date.first_day_of_fiscal_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_date.date_actual) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_date.first_day_of_fiscal_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_date.date_actual) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_date.first_day_of_fiscal_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.invoice_owner_account,
      dim_subscription.creator_account,
      dim_subscription.was_purchased_through_reseller,

      --product info
      dim_product_detail.dim_product_detail_id                                        AS dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.product_ranking                                              AS product_ranking,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,
      dim_product_detail.is_licensed_user                                             AS is_licensed_user,
      dim_product_detail.is_arpu                                                      AS is_arpu,

      -- MRR values
      --  not needed as all charges in fct_mrr are recurring
      --  fct_mrr.charge_type,
      fct_mrr.unit_of_measure                                                         AS unit_of_measure,
      fct_mrr.mrr                                                                     AS mrr,
      fct_mrr.arr                                                                     AS arr,
      fct_mrr.quantity                                                                AS quantity
    FROM fct_mrr
    INNER JOIN dim_subscription
      ON dim_subscription.dim_subscription_id = fct_mrr.dim_subscription_id
    INNER JOIN dim_product_detail
      ON dim_product_detail.dim_product_detail_id = fct_mrr.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON dim_billing_account.dim_billing_account_id = fct_mrr.dim_billing_account_id
    INNER JOIN dim_date
      ON dim_date.date_id = fct_mrr.dim_date_id
    LEFT JOIN dim_crm_account
      ON dim_billing_account.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), cohort_diffs AS (

  SELECT
    joined.*,
    datediff(month, billing_account_cohort_month, arr_month)     AS months_since_billing_account_cohort_start,
    datediff(quarter, billing_account_cohort_quarter, arr_month) AS quarters_since_billing_account_cohort_start,
    datediff(month, crm_account_cohort_month, arr_month)         AS months_since_crm_account_cohort_start,
    datediff(quarter, crm_account_cohort_quarter, arr_month)     AS quarters_since_crm_account_cohort_start,
    datediff(month, parent_account_cohort_month, arr_month)      AS months_since_parent_account_cohort_start,
    datediff(quarter, parent_account_cohort_quarter, arr_month)  AS quarters_since_parent_account_cohort_start,
    datediff(month, subscription_cohort_month, arr_month)        AS months_since_subscription_cohort_start,
    datediff(quarter, subscription_cohort_quarter, arr_month)    AS quarters_since_subscription_cohort_start
  FROM joined

), parent_arr AS (

    SELECT
      arr_month,
      dim_parent_crm_account_id,
      SUM(arr)                                   AS arr
    FROM joined
    group by 1,2

), parent_arr_band_calc AS (

    SELECT
      arr_month,
      dim_parent_crm_account_id,
      CASE
        WHEN arr > 5000 THEN 'ARR > $5K'
        WHEN arr <= 5000 THEN 'ARR <= $5K'
      END                                        AS arr_band_calc
    FROM parent_arr

), final_table AS (

    SELECT
      cohort_diffs.*,
      arr_band_calc
    FROM cohort_diffs
    LEFT JOIN parent_arr_band_calc
      ON cohort_diffs.arr_month = parent_arr_band_calc.arr_month
      AND cohort_diffs.dim_parent_crm_account_id = parent_arr_band_calc.dim_parent_crm_account_id

)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2020-09-04'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final_table24:T1664,WITH sfdc_account AS (

    SELECT 
      {{ dbt_utils.star(from=ref('sfdc_account'), except=["ACCOUNT_OWNER_USER_SEGMENT"])}}
    FROM {{ ref('sfdc_account') }}

), sfdc_users AS (

    SELECT *
    FROM {{ ref('sfdc_users') }}

), sfdc_record_type AS (

    SELECT *
    FROM {{ ref('sfdc_record_type') }}     

), sfdc_account_deal_size_segmentation AS (

    SELECT *
    FROM {{ ref('sfdc_account_deal_size_segmentation') }}

), joined AS (


    SELECT
      sfdc_account.*,
      tam_user.name                                                                   AS technical_account_manager,
      sfdc_account.ultimate_parent_sales_segment                                      AS ultimate_parent_account_segment,
      sfdc_record_type.record_type_name,
      sfdc_record_type.business_process_id,
      sfdc_record_type.record_type_label,
      sfdc_record_type.record_type_description,
      sfdc_record_type.record_type_modifying_object_type,
      sfdc_account_deal_size_segmentation.deal_size,
      CASE 
        WHEN sfdc_account.ultimate_parent_sales_segment IN ('Large', 'Strategic')
          OR sfdc_account.division_sales_segment IN ('Large', 'Strategic') 
          THEN TRUE
        ELSE FALSE 
      END                                                                               AS is_large_and_up,


      -- NF 20210829 Zoom info technology flags
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies,'ARE_USED: Jenkins') 
          THEN 1 
        ELSE 0
      END                                 AS zi_jenkins_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: SVN') 
          THEN 1 
        ELSE 0
      END                                 AS zi_svn_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Tortoise SVN') 
          THEN 1 
        ELSE 0
      END                                 AS zi_tortoise_svn_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Google Cloud Platform') 
          THEN 1 
        ELSE 0
      END                                 AS zi_gcp_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Atlassian') 
          THEN 1 
        ELSE 0
      END                                 AS zi_atlassian_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: GitHub') 
          THEN 1 
        ELSE 0
      END                                 AS zi_github_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: GitHub Enterprise') 
          THEN 1 
        ELSE 0
      END                                 AS zi_github_enterprise_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: AWS') 
          THEN 1 
        ELSE 0
      END                                 AS zi_aws_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Kubernetes') 
          THEN 1 
        ELSE 0
      END                                 AS zi_kubernetes_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Apache Subversion') 
          THEN 1 
        ELSE 0
      END                                 AS zi_apache_subversion_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Apache Subversion (SVN)') 
          THEN 1 
        ELSE 0
      END                                 AS zi_apache_subversion_svn_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Hashicorp') 
          THEN 1 
        ELSE 0
      END                                 AS zi_hashicorp_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Amazon AWS CloudTrail') 
          THEN 1 
        ELSE 0
      END                                 AS zi_aws_cloud_trail_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: CircleCI') 
          THEN 1 
        ELSE 0
      END                                 AS zi_circle_ci_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: BitBucket') 
          THEN 1 
        ELSE 0
      END                                 AS zi_bit_bucket_presence_flag,

    -- NF 2022-01-28 Added extra account owner demographics fields
    --account_owner.user_segment            AS account_owner_user_segment, -- coming directly from source table
    -- JK: 2022-11-16 changing the source back to the user object to align with EDM 
    account_owner.user_segment            AS account_owner_user_segment,
    account_owner.user_geo                AS account_owner_user_geo, 
    account_owner.user_region             AS account_owner_user_region,
    account_owner.user_area               AS account_owner_user_area,

    sfdc_account.account_sales_segment    AS parent_crm_account_sales_segment,
    sfdc_account.account_geo              AS parent_crm_account_geo,
    sfdc_account.account_region           AS parent_crm_account_region,
    sfdc_account.account_area             AS parent_crm_account_area,
    sfdc_account.account_territory        AS parent_crm_account_territory

    FROM sfdc_account
    LEFT JOIN sfdc_users tam_user
      ON sfdc_account.technical_account_manager_id = tam_user.user_id
    LEFT JOIN sfdc_users account_owner
      ON sfdc_account.owner_id = account_owner.user_id
    LEFT JOIN sfdc_record_type
      ON sfdc_account.record_type_id = sfdc_record_type.record_type_id
    LEFT JOIN sfdc_account_deal_size_segmentation
      ON sfdc_account.account_id = sfdc_account_deal_size_segmentation.account_id

)

SELECT *
FROM joined25:T4de,This table contains information about individual accounts (organizations and persons), their sales segmentation, and parentage. 

Fields prefixed with TSP_ are related to [Territory Success Planning](https://about.gitlab.com/handbook/sales/field-operations/sales-operations/go-to-market/#territory-success-planning-tsp) and intended as staging fields updated from a variety of data sources, and at given intervals copied over to the "Actual" set of fields for general use. The relationship between "Actual" and TSP fields can be found [here](https://about.gitlab.com/handbook/sales/field-operations/sales-systems/gtm-technical-documentation/). Note that these fields are defined in Salesforce and brought into the data warehouse as-is.

Fields prefixed with CP_ are related to [Command Plan](https://about.gitlab.com/handbook/sales/#opportunity-management-guidelines).

`sales_segment` is the canonized field for an account's [Sales Segment](https://gitlab.my.salesforce.com/00N6100000IOi8o). Note that this is based on the ultimate parent of the account per [Segmentation](https://about.gitlab.com/handbook/business-ops/resources/#segmentation). `account_segment` is used to determine the segmentation of the account according to the same logic.26:T260c,WITH sfdc_account AS (

    SELECT 
      "ACCOUNT_ID",
  "ACCOUNT_NAME",
  "ACCOUNT_ID_18",
  "MASTER_RECORD_ID",
  "OWNER_ID",
  "PARENT_ID",
  "PRIMARY_CONTACT_ID",
  "RECORD_TYPE_ID",
  "ULTIMATE_PARENT_ID",
  "PARTNER_VAT_TAX_ID",
  "GITLAB_COM_USER",
  "ACCOUNT_MANAGER",
  "ACCOUNT_OWNER",
  "ACCOUNT_OWNER_TEAM",
  "PROPOSED_ACCOUNT_OWNER",
  "BUSINESS_DEVELOPMENT_REP",
  "DEDICATED_SERVICE_ENGINEER",
  "SALES_DEVELOPMENT_REP",
  "TECHNICAL_ACCOUNT_MANAGER_ID",
  "ULTIMATE_PARENT_ACCOUNT_ID",
  "ULTIMATE_PARENT_ACCOUNT_NAME",
  "ACCOUNT_TYPE",
  "DF_INDUSTRY",
  "INDUSTRY",
  "SUB_INDUSTRY",
  "PARENT_ACCOUNT_INDUSTRY_HIERARCHY",
  "ACCOUNT_TIER",
  "ACCOUNT_TIER_NOTES",
  "CUSTOMER_SINCE_DATE",
  "CARR_THIS_ACCOUNT",
  "CARR_ACCOUNT_FAMILY",
  "NEXT_RENEWAL_DATE",
  "LICENSE_UTILIZATION",
  "SUPPORT_LEVEL",
  "NAMED_ACCOUNT",
  "BILLING_COUNTRY",
  "BILLING_COUNTRY_CODE",
  "BILLING_POSTAL_CODE",
  "IS_SDR_TARGET_ACCOUNT",
  "LAM",
  "LAM_DEV_COUNT",
  "IS_JIHU_ACCOUNT",
  "PARTNERS_SIGNED_CONTRACT_DATE",
  "PARTNER_ACCOUNT_IBAN_NUMBER",
  "PARTNER_TYPE",
  "PARTNER_STATUS",
  "BDR_PROSPECTING_STATUS",
  "IS_FIRST_ORDER_AVAILABLE",
  "ZI_TECHNOLOGIES",
  "TECHNICAL_ACCOUNT_MANAGER_DATE",
  "GITLAB_CUSTOMER_SUCCESS_PROJECT",
  "FORBES_2000_RANK",
  "POTENTIAL_USERS",
  "NUMBER_OF_LICENSES_THIS_ACCOUNT",
  "DECISION_MAKER_COUNT_LINKEDIN",
  "NUMBER_OF_EMPLOYEES",
  "ACCOUNT_PHONE",
  "ZOOMINFO_ACCOUNT_PHONE",
  "ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES",
  "ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS",
  "ACCOUNT_SALES_SEGMENT",
  "ACCOUNT_GEO",
  "ACCOUNT_REGION",
  "ACCOUNT_AREA",
  "ACCOUNT_TERRITORY",
  "ACCOUNT_BUSINESS_UNIT",
  "ACCOUNT_ROLE_TYPE",
  "ACCOUNT_EMPLOYEE_COUNT",
  "ACCOUNT_MAX_FAMILY_EMPLOYEE",
  "ACCOUNT_UPA_COUNTRY",
  "ACCOUNT_UPA_STATE",
  "ACCOUNT_UPA_CITY",
  "ACCOUNT_UPA_STREET",
  "ACCOUNT_UPA_POSTAL_CODE",
  "HEALTH_NUMBER",
  "HEALTH_SCORE_COLOR",
  "COUNT_ACTIVE_SUBSCRIPTION_CHARGES",
  "COUNT_ACTIVE_SUBSCRIPTIONS",
  "COUNT_BILLING_ACCOUNTS",
  "COUNT_LICENSED_USERS",
  "COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES",
  "COUNT_OPEN_RENEWAL_OPPORTUNITIES",
  "COUNT_OPPORTUNITIES",
  "COUNT_PRODUCTS_PURCHASED",
  "COUNT_WON_OPPORTUNITIES",
  "COUNT_CONCURRENT_EE_SUBSCRIPTIONS",
  "COUNT_CE_INSTANCES",
  "COUNT_ACTIVE_CE_USERS",
  "COUNT_OPEN_OPPORTUNITIES",
  "COUNT_USING_CE",
  "ABM_TIER",
  "GTM_STRATEGY",
  "GTM_ACCELERATION_DATE",
  "GTM_ACCOUNT_BASED_DATE",
  "GTM_ACCOUNT_CENTRIC_DATE",
  "ABM_TIER_1_DATE",
  "ABM_TIER_2_DATE",
  "ABM_TIER_3_DATE",
  "DEMANDBASE_ACCOUNT_LIST",
  "DEMANDBASE_INTENT",
  "DEMANDBASE_PAGE_VIEWS",
  "DEMANDBASE_SCORE",
  "DEMANDBASE_SESSIONS",
  "DEMANDBASE_TRENDING_OFFSITE_INTENT",
  "DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT",
  "ULTIMATE_PARENT_SALES_SEGMENT",
  "DIVISION_SALES_SEGMENT",
  "SALES_SEGMENT",
  "ACCOUNT_SEGMENT",
  "IS_LOCALLY_MANAGED_ACCOUNT",
  "IS_STRATEGIC_ACCOUNT",
  "NEXT_FY_ACCOUNT_OWNER_TEMP",
  "NEXT_FY_PLANNING_NOTES_TEMP",
  "PARTNER_TRACK",
  "PARTNERS_PARTNER_TYPE",
  "GITLAB_PARTNER_PROGRAM",
  "IS_FOCUS_PARTNER",
  "ZOOM_INFO_COMPANY_NAME",
  "ZOOM_INFO_COMPANY_REVENUE",
  "ZOOM_INFO_COMPANY_EMPLOYEE_COUNT",
  "ZOOM_INFO_COMPANY_INDUSTRY",
  "ZOOM_INFO_COMPANY_CITY",
  "ZOOM_INFO_COMPANY_STATE_PROVINCE",
  "ZOOM_INFO_COMPANY_COUNTRY",
  "IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH",
  "ZOOM_INFO_WEBSITE",
  "ZOOM_INFO_COMPANY_OTHER_DOMAINS",
  "ZOOM_INFO_DOZISF_ZI_ID",
  "ZOOM_INFO_PARENT_COMPANY_ZI_ID",
  "ZOOM_INFO_PARENT_COMPANY_NAME",
  "ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID",
  "ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME",
  "ZOOM_INFO_NUMBER_OF_DEVELOPERS",
  "ZOOM_INFO_TOTAL_FUNDING",
  "IS_KEY_ACCOUNT",
  "GS_FIRST_VALUE_DATE",
  "GS_LAST_CSM_ACTIVITY_DATE",
  "EOA_SENTIMENT",
  "GS_HEALTH_USER_ENGAGEMENT",
  "GS_HEALTH_CD",
  "GS_HEALTH_DEVSECOPS",
  "GS_HEALTH_CI",
  "GS_HEALTH_SCM",
  "RISK_IMPACT",
  "RISK_REASON",
  "LAST_TIMELINE_AT_RISK_UPDATE",
  "LAST_AT_RISK_UPDATE_COMMENTS",
  "CREATED_BY_ID",
  "CREATED_DATE",
  "IS_DELETED",
  "LAST_MODIFIED_BY_ID",
  "LAST_MODIFIED_DATE",
  "LAST_ACTIVITY_DATE",
  "_LAST_DBT_RUN",
  "SYSTEMMODSTAMP"
    FROM "PROD".restricted_safe_legacy.sfdc_account

), sfdc_users AS (

    SELECT *
    FROM "PROD".legacy.sfdc_users

), sfdc_record_type AS (

    SELECT *
    FROM "PROD".legacy.sfdc_record_type     

), sfdc_account_deal_size_segmentation AS (

    SELECT *
    FROM "PROD".restricted_safe_legacy.sfdc_account_deal_size_segmentation

), joined AS (


    SELECT
      sfdc_account.*,
      tam_user.name                                                                   AS technical_account_manager,
      sfdc_account.ultimate_parent_sales_segment                                      AS ultimate_parent_account_segment,
      sfdc_record_type.record_type_name,
      sfdc_record_type.business_process_id,
      sfdc_record_type.record_type_label,
      sfdc_record_type.record_type_description,
      sfdc_record_type.record_type_modifying_object_type,
      sfdc_account_deal_size_segmentation.deal_size,
      CASE 
        WHEN sfdc_account.ultimate_parent_sales_segment IN ('Large', 'Strategic')
          OR sfdc_account.division_sales_segment IN ('Large', 'Strategic') 
          THEN TRUE
        ELSE FALSE 
      END                                                                               AS is_large_and_up,


      -- NF 20210829 Zoom info technology flags
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies,'ARE_USED: Jenkins') 
          THEN 1 
        ELSE 0
      END                                 AS zi_jenkins_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: SVN') 
          THEN 1 
        ELSE 0
      END                                 AS zi_svn_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Tortoise SVN') 
          THEN 1 
        ELSE 0
      END                                 AS zi_tortoise_svn_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Google Cloud Platform') 
          THEN 1 
        ELSE 0
      END                                 AS zi_gcp_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Atlassian') 
          THEN 1 
        ELSE 0
      END                                 AS zi_atlassian_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: GitHub') 
          THEN 1 
        ELSE 0
      END                                 AS zi_github_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: GitHub Enterprise') 
          THEN 1 
        ELSE 0
      END                                 AS zi_github_enterprise_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: AWS') 
          THEN 1 
        ELSE 0
      END                                 AS zi_aws_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Kubernetes') 
          THEN 1 
        ELSE 0
      END                                 AS zi_kubernetes_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Apache Subversion') 
          THEN 1 
        ELSE 0
      END                                 AS zi_apache_subversion_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Apache Subversion (SVN)') 
          THEN 1 
        ELSE 0
      END                                 AS zi_apache_subversion_svn_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Hashicorp') 
          THEN 1 
        ELSE 0
      END                                 AS zi_hashicorp_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Amazon AWS CloudTrail') 
          THEN 1 
        ELSE 0
      END                                 AS zi_aws_cloud_trail_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: CircleCI') 
          THEN 1 
        ELSE 0
      END                                 AS zi_circle_ci_presence_flag,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: BitBucket') 
          THEN 1 
        ELSE 0
      END                                 AS zi_bit_bucket_presence_flag,

    -- NF 2022-01-28 Added extra account owner demographics fields
    --account_owner.user_segment            AS account_owner_user_segment, -- coming directly from source table
    -- JK: 2022-11-16 changing the source back to the user object to align with EDM 
    account_owner.user_segment            AS account_owner_user_segment,
    account_owner.user_geo                AS account_owner_user_geo, 
    account_owner.user_region             AS account_owner_user_region,
    account_owner.user_area               AS account_owner_user_area,

    sfdc_account.account_sales_segment    AS parent_crm_account_sales_segment,
    sfdc_account.account_geo              AS parent_crm_account_geo,
    sfdc_account.account_region           AS parent_crm_account_region,
    sfdc_account.account_area             AS parent_crm_account_area,
    sfdc_account.account_territory        AS parent_crm_account_territory

    FROM sfdc_account
    LEFT JOIN sfdc_users tam_user
      ON sfdc_account.technical_account_manager_id = tam_user.user_id
    LEFT JOIN sfdc_users account_owner
      ON sfdc_account.owner_id = account_owner.user_id
    LEFT JOIN sfdc_record_type
      ON sfdc_account.record_type_id = sfdc_record_type.record_type_id
    LEFT JOIN sfdc_account_deal_size_segmentation
      ON sfdc_account.account_id = sfdc_account_deal_size_segmentation.account_id

)

SELECT *
FROM joined27:Tba06,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{% set renewal_fiscal_years = dbt_utils.get_column_values(
        table=ref('prep_renewal_fiscal_years'),
        where="fiscal_year >= 2019",
        column='fiscal_year',
        order_by='fiscal_year' )%}

{{ simple_cte([
    ('dim_date','dim_date'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_subscription', 'dim_subscription'),
    ('dim_crm_opportunity', 'dim_crm_opportunity'),
    ('fct_crm_opportunity', 'fct_crm_opportunity'),
    ('dim_charge', 'dim_charge'),
    ('fct_charge', 'fct_charge'),
    ('dim_billing_account', 'dim_billing_account'),
    ('dim_product_detail', 'dim_product_detail'),
    ('dim_amendment', 'dim_amendment')
]) }}

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

{% for renewal_fiscal_year in renewal_fiscal_years -%}
), renewal_subscriptions_{{renewal_fiscal_year}} AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_{{renewal_fiscal_year}} AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON mart_charge.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '{{renewal_fiscal_year}}'
        )

), agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term <= 12
    {{ dbt_utils.group_by(n=23) }}

), agg_charge_term_greater_than_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term > 12
    {{ dbt_utils.group_by(n=23) }}

), twenty_four_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

), thirty_six_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), forty_eight_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), sixty_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), combined_{{renewal_fiscal_year}} AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM sixty_mth_term_{{renewal_fiscal_year}}

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_{{renewal_fiscal_year}} AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_{{renewal_fiscal_year}}.term_end_month, base_{{renewal_fiscal_year}}.dim_charge_id)      AS concat_primary_key,
      {{ dbt_utils.surrogate_key(['concat_primary_key' ]) }}                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_{{renewal_fiscal_year}}.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_{{renewal_fiscal_year}}.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_{{renewal_fiscal_year}}.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_{{renewal_fiscal_year}}.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_{{renewal_fiscal_year}}.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_{{renewal_fiscal_year}}.subscription_name                                                                                        AS subscription_name,
      base_{{renewal_fiscal_year}}.subscription_start_month                                                                                 AS subscription_start_month,
      base_{{renewal_fiscal_year}}.subscription_end_month                                                                                   AS subscription_end_month,
      base_{{renewal_fiscal_year}}.term_start_month                                                                                         AS term_start_month,
      base_{{renewal_fiscal_year}}.term_end_month                                                                                           AS renewal_month,
      combined_{{renewal_fiscal_year}}.term_end_month                                                                                       AS bookings_term_end_month,
      base_{{renewal_fiscal_year}}.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_{{renewal_fiscal_year}}.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS current_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_{{renewal_fiscal_year}}.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_{{renewal_fiscal_year}}.crm_account_name                                                                                         AS crm_account_name,
      base_{{renewal_fiscal_year}}.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_{{renewal_fiscal_year}}.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_{{renewal_fiscal_year}}.user_name                                                                                                AS user_name,
      base_{{renewal_fiscal_year}}.user_role_id                                                                                             AS user_role_id,
      base_{{renewal_fiscal_year}}.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_{{renewal_fiscal_year}}.crm_user_geo                                                                                             AS crm_user_geo,
      base_{{renewal_fiscal_year}}.crm_user_region                                                                                          AS crm_user_region,
      base_{{renewal_fiscal_year}}.crm_user_area                                                                                            AS crm_user_area,
      base_{{renewal_fiscal_year}}.product_tier_name                                                                                        AS product_tier_name,
      base_{{renewal_fiscal_year}}.product_delivery_type                                                                                    AS product_delivery_type,
      combined_{{renewal_fiscal_year}}.renewal_type                                                                                         AS renewal_type,
      base_{{renewal_fiscal_year}}.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_{{renewal_fiscal_year}}.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS subscription_term,
      base_{{renewal_fiscal_year}}.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
          AND CONCAT('{{renewal_fiscal_year}}','-01-01')
            AND base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_{{renewal_fiscal_year}}.arr                                                                                                      AS arr
    FROM combined_{{renewal_fiscal_year}}
    LEFT JOIN dim_date
      ON combined_{{renewal_fiscal_year}}.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_{{renewal_fiscal_year}}
      ON combined_{{renewal_fiscal_year}}.dim_charge_id = base_{{renewal_fiscal_year}}.dim_charge_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON base_{{renewal_fiscal_year}}.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_{{renewal_fiscal_year}}.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
      AND CONCAT('{{renewal_fiscal_year}}','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

{% endfor -%}
), unioned as (

{% for renewal_fiscal_year in renewal_fiscal_years-%}

    SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_{{renewal_fiscal_year}}
    {%- if not loop.last %} UNION ALL {%- endif %}

{% endfor -%}

)

{{ dbt_audit(
    cte_ref="unioned",
    created_by="@michellecooper",
    updated_by="@nmcavinue",
    created_date="2021-12-06",
    updated_date="2023-05-30"
) }}28:T4f7ad,





WITH dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_opportunity

), fct_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_opportunity

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_charge

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_amendment AS (

    SELECT * 
    FROM "PROD".common.dim_amendment

)

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

), renewal_subscriptions_2019 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2019 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2019.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2019
      ON mart_charge.subscription_name = renewal_subscriptions_2019.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2019'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2019'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2019'
        )

), agg_charge_term_less_than_equal_12_2019 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2019
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2019 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2019
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2019 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2019 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2019

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2019

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2019

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2019

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2019

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2019

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2019 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2019.term_end_month, base_2019.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2019.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2019.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2019.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2019.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2019.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2019.subscription_name                                                                                        AS subscription_name,
      base_2019.subscription_start_month                                                                                 AS subscription_start_month,
      base_2019.subscription_end_month                                                                                   AS subscription_end_month,
      base_2019.term_start_month                                                                                         AS term_start_month,
      base_2019.term_end_month                                                                                           AS renewal_month,
      combined_2019.term_end_month                                                                                       AS bookings_term_end_month,
      base_2019.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2019.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2019.current_term                                                                                             AS current_term,
      renewal_subscriptions_2019.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2019.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2019.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2019.crm_account_name                                                                                         AS crm_account_name,
      base_2019.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2019.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2019.user_name                                                                                                AS user_name,
      base_2019.user_role_id                                                                                             AS user_role_id,
      base_2019.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2019.crm_user_geo                                                                                             AS crm_user_geo,
      base_2019.crm_user_region                                                                                          AS crm_user_region,
      base_2019.crm_user_area                                                                                            AS crm_user_area,
      base_2019.product_tier_name                                                                                        AS product_tier_name,
      base_2019.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2019.renewal_type                                                                                         AS renewal_type,
      base_2019.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2019.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2019.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2019.current_term                                                                                             AS subscription_term,
      base_2019.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
          AND CONCAT('2019','-01-01')
            AND base_2019.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2019.arr                                                                                                      AS arr
    FROM combined_2019
    LEFT JOIN dim_date
      ON combined_2019.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2019
      ON combined_2019.dim_charge_id = base_2019.dim_charge_id
    LEFT JOIN renewal_subscriptions_2019
      ON base_2019.subscription_name = renewal_subscriptions_2019.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2019.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
      AND CONCAT('2019','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2020 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2020 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2020.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2020
      ON mart_charge.subscription_name = renewal_subscriptions_2020.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2020'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2020'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2020'
        )

), agg_charge_term_less_than_equal_12_2020 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2020
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2020 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2020
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2020 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2020 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2020

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2020

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2020

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2020

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2020

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2020

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2020 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2020.term_end_month, base_2020.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2020.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2020.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2020.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2020.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2020.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2020.subscription_name                                                                                        AS subscription_name,
      base_2020.subscription_start_month                                                                                 AS subscription_start_month,
      base_2020.subscription_end_month                                                                                   AS subscription_end_month,
      base_2020.term_start_month                                                                                         AS term_start_month,
      base_2020.term_end_month                                                                                           AS renewal_month,
      combined_2020.term_end_month                                                                                       AS bookings_term_end_month,
      base_2020.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2020.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2020.current_term                                                                                             AS current_term,
      renewal_subscriptions_2020.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2020.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2020.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2020.crm_account_name                                                                                         AS crm_account_name,
      base_2020.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2020.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2020.user_name                                                                                                AS user_name,
      base_2020.user_role_id                                                                                             AS user_role_id,
      base_2020.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2020.crm_user_geo                                                                                             AS crm_user_geo,
      base_2020.crm_user_region                                                                                          AS crm_user_region,
      base_2020.crm_user_area                                                                                            AS crm_user_area,
      base_2020.product_tier_name                                                                                        AS product_tier_name,
      base_2020.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2020.renewal_type                                                                                         AS renewal_type,
      base_2020.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2020.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2020.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2020.current_term                                                                                             AS subscription_term,
      base_2020.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
          AND CONCAT('2020','-01-01')
            AND base_2020.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2020.arr                                                                                                      AS arr
    FROM combined_2020
    LEFT JOIN dim_date
      ON combined_2020.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2020
      ON combined_2020.dim_charge_id = base_2020.dim_charge_id
    LEFT JOIN renewal_subscriptions_2020
      ON base_2020.subscription_name = renewal_subscriptions_2020.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2020.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
      AND CONCAT('2020','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2021 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2021 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2021.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2021
      ON mart_charge.subscription_name = renewal_subscriptions_2021.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2021'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2021'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2021'
        )

), agg_charge_term_less_than_equal_12_2021 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2021
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2021 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2021
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2021 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2021 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2021

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2021

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2021

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2021

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2021

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2021

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2021 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2021.term_end_month, base_2021.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2021.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2021.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2021.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2021.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2021.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2021.subscription_name                                                                                        AS subscription_name,
      base_2021.subscription_start_month                                                                                 AS subscription_start_month,
      base_2021.subscription_end_month                                                                                   AS subscription_end_month,
      base_2021.term_start_month                                                                                         AS term_start_month,
      base_2021.term_end_month                                                                                           AS renewal_month,
      combined_2021.term_end_month                                                                                       AS bookings_term_end_month,
      base_2021.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2021.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2021.current_term                                                                                             AS current_term,
      renewal_subscriptions_2021.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2021.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2021.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2021.crm_account_name                                                                                         AS crm_account_name,
      base_2021.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2021.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2021.user_name                                                                                                AS user_name,
      base_2021.user_role_id                                                                                             AS user_role_id,
      base_2021.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2021.crm_user_geo                                                                                             AS crm_user_geo,
      base_2021.crm_user_region                                                                                          AS crm_user_region,
      base_2021.crm_user_area                                                                                            AS crm_user_area,
      base_2021.product_tier_name                                                                                        AS product_tier_name,
      base_2021.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2021.renewal_type                                                                                         AS renewal_type,
      base_2021.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2021.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2021.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2021.current_term                                                                                             AS subscription_term,
      base_2021.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
          AND CONCAT('2021','-01-01')
            AND base_2021.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2021.arr                                                                                                      AS arr
    FROM combined_2021
    LEFT JOIN dim_date
      ON combined_2021.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2021
      ON combined_2021.dim_charge_id = base_2021.dim_charge_id
    LEFT JOIN renewal_subscriptions_2021
      ON base_2021.subscription_name = renewal_subscriptions_2021.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2021.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
      AND CONCAT('2021','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2022 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2022 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2022.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2022
      ON mart_charge.subscription_name = renewal_subscriptions_2022.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2022'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2022'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2022'
        )

), agg_charge_term_less_than_equal_12_2022 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2022
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2022 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2022
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2022 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2022 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2022

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2022

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2022

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2022

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2022

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2022

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2022 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2022.term_end_month, base_2022.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2022.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2022.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2022.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2022.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2022.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2022.subscription_name                                                                                        AS subscription_name,
      base_2022.subscription_start_month                                                                                 AS subscription_start_month,
      base_2022.subscription_end_month                                                                                   AS subscription_end_month,
      base_2022.term_start_month                                                                                         AS term_start_month,
      base_2022.term_end_month                                                                                           AS renewal_month,
      combined_2022.term_end_month                                                                                       AS bookings_term_end_month,
      base_2022.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2022.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2022.current_term                                                                                             AS current_term,
      renewal_subscriptions_2022.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2022.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2022.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2022.crm_account_name                                                                                         AS crm_account_name,
      base_2022.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2022.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2022.user_name                                                                                                AS user_name,
      base_2022.user_role_id                                                                                             AS user_role_id,
      base_2022.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2022.crm_user_geo                                                                                             AS crm_user_geo,
      base_2022.crm_user_region                                                                                          AS crm_user_region,
      base_2022.crm_user_area                                                                                            AS crm_user_area,
      base_2022.product_tier_name                                                                                        AS product_tier_name,
      base_2022.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2022.renewal_type                                                                                         AS renewal_type,
      base_2022.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2022.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2022.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2022.current_term                                                                                             AS subscription_term,
      base_2022.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
          AND CONCAT('2022','-01-01')
            AND base_2022.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2022.arr                                                                                                      AS arr
    FROM combined_2022
    LEFT JOIN dim_date
      ON combined_2022.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2022
      ON combined_2022.dim_charge_id = base_2022.dim_charge_id
    LEFT JOIN renewal_subscriptions_2022
      ON base_2022.subscription_name = renewal_subscriptions_2022.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2022.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
      AND CONCAT('2022','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2023 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2023 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2023.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2023
      ON mart_charge.subscription_name = renewal_subscriptions_2023.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2023'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2023'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2023'
        )

), agg_charge_term_less_than_equal_12_2023 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2023
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2023 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2023
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2023 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2023 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2023

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2023

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2023

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2023

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2023

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2023

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2023 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2023.term_end_month, base_2023.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2023.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2023.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2023.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2023.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2023.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2023.subscription_name                                                                                        AS subscription_name,
      base_2023.subscription_start_month                                                                                 AS subscription_start_month,
      base_2023.subscription_end_month                                                                                   AS subscription_end_month,
      base_2023.term_start_month                                                                                         AS term_start_month,
      base_2023.term_end_month                                                                                           AS renewal_month,
      combined_2023.term_end_month                                                                                       AS bookings_term_end_month,
      base_2023.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2023.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2023.current_term                                                                                             AS current_term,
      renewal_subscriptions_2023.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2023.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2023.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2023.crm_account_name                                                                                         AS crm_account_name,
      base_2023.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2023.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2023.user_name                                                                                                AS user_name,
      base_2023.user_role_id                                                                                             AS user_role_id,
      base_2023.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2023.crm_user_geo                                                                                             AS crm_user_geo,
      base_2023.crm_user_region                                                                                          AS crm_user_region,
      base_2023.crm_user_area                                                                                            AS crm_user_area,
      base_2023.product_tier_name                                                                                        AS product_tier_name,
      base_2023.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2023.renewal_type                                                                                         AS renewal_type,
      base_2023.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2023.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2023.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2023.current_term                                                                                             AS subscription_term,
      base_2023.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
          AND CONCAT('2023','-01-01')
            AND base_2023.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2023.arr                                                                                                      AS arr
    FROM combined_2023
    LEFT JOIN dim_date
      ON combined_2023.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2023
      ON combined_2023.dim_charge_id = base_2023.dim_charge_id
    LEFT JOIN renewal_subscriptions_2023
      ON base_2023.subscription_name = renewal_subscriptions_2023.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2023.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
      AND CONCAT('2023','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2024 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2024 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2024.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2024
      ON mart_charge.subscription_name = renewal_subscriptions_2024.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2024'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2024'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2024'
        )

), agg_charge_term_less_than_equal_12_2024 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2024
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2024 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2024
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2024 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2024 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2024

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2024

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2024

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2024

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2024

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2024

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2024 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2024.term_end_month, base_2024.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2024.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2024.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2024.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2024.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2024.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2024.subscription_name                                                                                        AS subscription_name,
      base_2024.subscription_start_month                                                                                 AS subscription_start_month,
      base_2024.subscription_end_month                                                                                   AS subscription_end_month,
      base_2024.term_start_month                                                                                         AS term_start_month,
      base_2024.term_end_month                                                                                           AS renewal_month,
      combined_2024.term_end_month                                                                                       AS bookings_term_end_month,
      base_2024.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2024.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2024.current_term                                                                                             AS current_term,
      renewal_subscriptions_2024.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2024.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2024.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2024.crm_account_name                                                                                         AS crm_account_name,
      base_2024.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2024.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2024.user_name                                                                                                AS user_name,
      base_2024.user_role_id                                                                                             AS user_role_id,
      base_2024.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2024.crm_user_geo                                                                                             AS crm_user_geo,
      base_2024.crm_user_region                                                                                          AS crm_user_region,
      base_2024.crm_user_area                                                                                            AS crm_user_area,
      base_2024.product_tier_name                                                                                        AS product_tier_name,
      base_2024.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2024.renewal_type                                                                                         AS renewal_type,
      base_2024.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2024.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2024.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2024.current_term                                                                                             AS subscription_term,
      base_2024.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
          AND CONCAT('2024','-01-01')
            AND base_2024.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2024.arr                                                                                                      AS arr
    FROM combined_2024
    LEFT JOIN dim_date
      ON combined_2024.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2024
      ON combined_2024.dim_charge_id = base_2024.dim_charge_id
    LEFT JOIN renewal_subscriptions_2024
      ON base_2024.subscription_name = renewal_subscriptions_2024.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2024.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
      AND CONCAT('2024','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2025 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2025 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2025.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2025
      ON mart_charge.subscription_name = renewal_subscriptions_2025.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2025'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2025'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2025'
        )

), agg_charge_term_less_than_equal_12_2025 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2025
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2025 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2025
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2025 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2025 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2025

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2025

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2025

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2025

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2025

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2025

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2025 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2025.term_end_month, base_2025.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2025.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2025.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2025.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2025.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2025.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2025.subscription_name                                                                                        AS subscription_name,
      base_2025.subscription_start_month                                                                                 AS subscription_start_month,
      base_2025.subscription_end_month                                                                                   AS subscription_end_month,
      base_2025.term_start_month                                                                                         AS term_start_month,
      base_2025.term_end_month                                                                                           AS renewal_month,
      combined_2025.term_end_month                                                                                       AS bookings_term_end_month,
      base_2025.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2025.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2025.current_term                                                                                             AS current_term,
      renewal_subscriptions_2025.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2025.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2025.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2025.crm_account_name                                                                                         AS crm_account_name,
      base_2025.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2025.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2025.user_name                                                                                                AS user_name,
      base_2025.user_role_id                                                                                             AS user_role_id,
      base_2025.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2025.crm_user_geo                                                                                             AS crm_user_geo,
      base_2025.crm_user_region                                                                                          AS crm_user_region,
      base_2025.crm_user_area                                                                                            AS crm_user_area,
      base_2025.product_tier_name                                                                                        AS product_tier_name,
      base_2025.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2025.renewal_type                                                                                         AS renewal_type,
      base_2025.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2025.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2025.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2025.current_term                                                                                             AS subscription_term,
      base_2025.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
          AND CONCAT('2025','-01-01')
            AND base_2025.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2025.arr                                                                                                      AS arr
    FROM combined_2025
    LEFT JOIN dim_date
      ON combined_2025.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2025
      ON combined_2025.dim_charge_id = base_2025.dim_charge_id
    LEFT JOIN renewal_subscriptions_2025
      ON base_2025.subscription_name = renewal_subscriptions_2025.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2025.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
      AND CONCAT('2025','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2026 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2026 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2026.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2026
      ON mart_charge.subscription_name = renewal_subscriptions_2026.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2026'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2026'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2026'
        )

), agg_charge_term_less_than_equal_12_2026 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2026
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2026 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2026
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2026 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2026 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2026

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2026

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2026

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2026

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2026

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2026

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2026 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2026.term_end_month, base_2026.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2026.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2026.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2026.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2026.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2026.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2026.subscription_name                                                                                        AS subscription_name,
      base_2026.subscription_start_month                                                                                 AS subscription_start_month,
      base_2026.subscription_end_month                                                                                   AS subscription_end_month,
      base_2026.term_start_month                                                                                         AS term_start_month,
      base_2026.term_end_month                                                                                           AS renewal_month,
      combined_2026.term_end_month                                                                                       AS bookings_term_end_month,
      base_2026.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2026.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2026.current_term                                                                                             AS current_term,
      renewal_subscriptions_2026.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2026.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2026.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2026.crm_account_name                                                                                         AS crm_account_name,
      base_2026.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2026.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2026.user_name                                                                                                AS user_name,
      base_2026.user_role_id                                                                                             AS user_role_id,
      base_2026.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2026.crm_user_geo                                                                                             AS crm_user_geo,
      base_2026.crm_user_region                                                                                          AS crm_user_region,
      base_2026.crm_user_area                                                                                            AS crm_user_area,
      base_2026.product_tier_name                                                                                        AS product_tier_name,
      base_2026.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2026.renewal_type                                                                                         AS renewal_type,
      base_2026.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2026.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2026.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2026.current_term                                                                                             AS subscription_term,
      base_2026.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
          AND CONCAT('2026','-01-01')
            AND base_2026.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2026.arr                                                                                                      AS arr
    FROM combined_2026
    LEFT JOIN dim_date
      ON combined_2026.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2026
      ON combined_2026.dim_charge_id = base_2026.dim_charge_id
    LEFT JOIN renewal_subscriptions_2026
      ON base_2026.subscription_name = renewal_subscriptions_2026.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2026.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
      AND CONCAT('2026','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2027 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2027 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2027.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2027
      ON mart_charge.subscription_name = renewal_subscriptions_2027.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2027'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2027'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2027'
        )

), agg_charge_term_less_than_equal_12_2027 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2027
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2027 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2027
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2027 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2027 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2027

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2027

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2027

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2027

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2027

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2027

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2027 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2027.term_end_month, base_2027.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2027.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2027.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2027.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2027.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2027.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2027.subscription_name                                                                                        AS subscription_name,
      base_2027.subscription_start_month                                                                                 AS subscription_start_month,
      base_2027.subscription_end_month                                                                                   AS subscription_end_month,
      base_2027.term_start_month                                                                                         AS term_start_month,
      base_2027.term_end_month                                                                                           AS renewal_month,
      combined_2027.term_end_month                                                                                       AS bookings_term_end_month,
      base_2027.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2027.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2027.current_term                                                                                             AS current_term,
      renewal_subscriptions_2027.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2027.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2027.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2027.crm_account_name                                                                                         AS crm_account_name,
      base_2027.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2027.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2027.user_name                                                                                                AS user_name,
      base_2027.user_role_id                                                                                             AS user_role_id,
      base_2027.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2027.crm_user_geo                                                                                             AS crm_user_geo,
      base_2027.crm_user_region                                                                                          AS crm_user_region,
      base_2027.crm_user_area                                                                                            AS crm_user_area,
      base_2027.product_tier_name                                                                                        AS product_tier_name,
      base_2027.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2027.renewal_type                                                                                         AS renewal_type,
      base_2027.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2027.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2027.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2027.current_term                                                                                             AS subscription_term,
      base_2027.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
          AND CONCAT('2027','-01-01')
            AND base_2027.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2027.arr                                                                                                      AS arr
    FROM combined_2027
    LEFT JOIN dim_date
      ON combined_2027.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2027
      ON combined_2027.dim_charge_id = base_2027.dim_charge_id
    LEFT JOIN renewal_subscriptions_2027
      ON base_2027.subscription_name = renewal_subscriptions_2027.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2027.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
      AND CONCAT('2027','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2028 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2028 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2028.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2028
      ON mart_charge.subscription_name = renewal_subscriptions_2028.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2028'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2028'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2028'
        )

), agg_charge_term_less_than_equal_12_2028 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2028
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2028 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2028
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2028 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2028 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2028

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2028

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2028

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2028

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2028

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2028

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2028 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2028.term_end_month, base_2028.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2028.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2028.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2028.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2028.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2028.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2028.subscription_name                                                                                        AS subscription_name,
      base_2028.subscription_start_month                                                                                 AS subscription_start_month,
      base_2028.subscription_end_month                                                                                   AS subscription_end_month,
      base_2028.term_start_month                                                                                         AS term_start_month,
      base_2028.term_end_month                                                                                           AS renewal_month,
      combined_2028.term_end_month                                                                                       AS bookings_term_end_month,
      base_2028.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2028.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2028.current_term                                                                                             AS current_term,
      renewal_subscriptions_2028.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2028.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2028.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2028.crm_account_name                                                                                         AS crm_account_name,
      base_2028.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2028.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2028.user_name                                                                                                AS user_name,
      base_2028.user_role_id                                                                                             AS user_role_id,
      base_2028.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2028.crm_user_geo                                                                                             AS crm_user_geo,
      base_2028.crm_user_region                                                                                          AS crm_user_region,
      base_2028.crm_user_area                                                                                            AS crm_user_area,
      base_2028.product_tier_name                                                                                        AS product_tier_name,
      base_2028.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2028.renewal_type                                                                                         AS renewal_type,
      base_2028.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2028.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2028.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2028.current_term                                                                                             AS subscription_term,
      base_2028.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
          AND CONCAT('2028','-01-01')
            AND base_2028.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2028.arr                                                                                                      AS arr
    FROM combined_2028
    LEFT JOIN dim_date
      ON combined_2028.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2028
      ON combined_2028.dim_charge_id = base_2028.dim_charge_id
    LEFT JOIN renewal_subscriptions_2028
      ON base_2028.subscription_name = renewal_subscriptions_2028.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2028.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
      AND CONCAT('2028','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2029 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2029 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2029.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2029
      ON mart_charge.subscription_name = renewal_subscriptions_2029.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2029'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2029'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2029'
        )

), agg_charge_term_less_than_equal_12_2029 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2029
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2029 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2029
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2029 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2029 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2029

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2029

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2029

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2029

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2029

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2029

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2029 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2029.term_end_month, base_2029.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2029.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2029.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2029.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2029.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2029.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2029.subscription_name                                                                                        AS subscription_name,
      base_2029.subscription_start_month                                                                                 AS subscription_start_month,
      base_2029.subscription_end_month                                                                                   AS subscription_end_month,
      base_2029.term_start_month                                                                                         AS term_start_month,
      base_2029.term_end_month                                                                                           AS renewal_month,
      combined_2029.term_end_month                                                                                       AS bookings_term_end_month,
      base_2029.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2029.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2029.current_term                                                                                             AS current_term,
      renewal_subscriptions_2029.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2029.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2029.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2029.crm_account_name                                                                                         AS crm_account_name,
      base_2029.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2029.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2029.user_name                                                                                                AS user_name,
      base_2029.user_role_id                                                                                             AS user_role_id,
      base_2029.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2029.crm_user_geo                                                                                             AS crm_user_geo,
      base_2029.crm_user_region                                                                                          AS crm_user_region,
      base_2029.crm_user_area                                                                                            AS crm_user_area,
      base_2029.product_tier_name                                                                                        AS product_tier_name,
      base_2029.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2029.renewal_type                                                                                         AS renewal_type,
      base_2029.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2029.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2029.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2029.current_term                                                                                             AS subscription_term,
      base_2029.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
          AND CONCAT('2029','-01-01')
            AND base_2029.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2029.arr                                                                                                      AS arr
    FROM combined_2029
    LEFT JOIN dim_date
      ON combined_2029.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2029
      ON combined_2029.dim_charge_id = base_2029.dim_charge_id
    LEFT JOIN renewal_subscriptions_2029
      ON base_2029.subscription_name = renewal_subscriptions_2029.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2029.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
      AND CONCAT('2029','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), unioned as (

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2019 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2020 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2021 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2022 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2023 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2024 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2025 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2026 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2027 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2028 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2029

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2021-12-06'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM unioned2a:Tf40e,{{ config(alias='report_metrics_summary_account_year') }}

-- TODO: 20221208 TAM fields need to refactored as they are not called TAM anymore

WITH date_details AS (

    SELECT *
    --FROM  prod.workspace_sales.date_details
    FROM {{ ref('wk_sales_date_details') }}

 ), sfdc_opportunity_xf AS (

    SELECT *
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_xf
    FROM {{ref('wk_sales_sfdc_opportunity_xf')}}
    WHERE is_deleted = 0
      AND is_edu_oss = 0
      AND is_jihu_account = 0

 ), sfdc_opportunity_snapshot_xf AS (

    SELECT h.*
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf AS h
    FROM {{ref('wk_sales_sfdc_opportunity_snapshot_history_xf')}} h
    INNER JOIN date_details snapshot_date
      ON snapshot_date.date_actual = h.snapshot_date
    WHERE h.is_deleted = 0
      AND h.is_edu_oss = 0
      AND h.is_jihu_account = 0
      -- same day of FY across years
      AND snapshot_date.day_of_fiscal_year_normalised = (SELECT DISTINCT day_of_fiscal_year_normalised
                                                          FROM date_details
                                                          WHERE date_actual = DATEADD(day, -2, CURRENT_DATE))
 ), mart_available_to_renew AS (

    SELECT renew.*,
        renew_date.first_day_of_fiscal_quarter  AS renew_fiscal_quarter_date,
        renew_date.fiscal_quarter_name_fy       AS renew_fiscal_quarter_name,
        renew_date.fiscal_quarter               AS renew_fiscal_quarter_number
    FROM {{ref('mart_available_to_renew')}} renew
    --FROM prod.restricted_safe_common_mart_finance.mart_available_to_renew
    LEFT JOIN date_details renew_date
        ON renew_date.date_actual = renew.renewal_month
    
 ), dim_subscription AS (

    SELECT
      dim_subscription_id,
      CASE
          WHEN dim_billing_account_id_invoice_owner_account != dim_billing_account_id
              THEN 1
          ELSE 0
      END AS is_channel_arr_flag
    --FROM prod.common.dim_subscription
    FROM {{ ref('dim_subscription') }}

 ), mart_arr AS (

    SELECT *
    --FROM prod.restricted_safe_common_mart_sales.mart_arr
    FROM {{ref('mart_arr')}}   

  ), raw_account AS (
  
    SELECT *
    FROM {{ source('salesforce', 'account') }}
    --FROM raw.salesforce_stitch.account 

  -- missing fields in mart crm account so adding dim_crm_account cte here on top of the mart below
  ), dim_crm_account AS (

    SELECT *
    --FROM prod.restricted_safe_common.dim_crm_account
    FROM {{ref('dim_crm_account')}}

    -- missing fields in dim_crm_account so adding raw account here
  -- has_tam__c
  -- PUBLIC_SECTOR_ACCOUNT__C,
  -- PUBSEC_TYPE__C,
  -- POTENTIAL_ARR_LAM__C
  -- BILLINGSTATE
  -- customer_score__c
  ), mart_crm_account AS (

    SELECT acc.*,
        raw.has_tam__c                              AS has_tam_flag,
        raw.public_sector_account__c                AS public_sector_account_flag,
        raw.pubsec_type__c                          AS pubsec_type,
        raw.lam_tier__c                             AS potential_lam_arr,
        raw.billingstatecode                        AS account_billing_state,
        raw.customer_score__c                       AS customer_score,
        raw.account_demographics_territory__c       AS account_demographics_territory,
        raw.account_demographics_upa_state__c       AS account_demographics_upa_state_code,
        raw.account_demographics_upa_state_name__c  AS account_demographics_upa_state_name
    --FROM prod.restricted_safe_common_mart_sales.mart_crm_account acc
    FROM {{ref('mart_crm_account')}} acc
    LEFT JOIN raw_account raw
      ON raw.id = acc.dim_crm_account_id
    
  ), sfdc_accounts_xf AS (

    SELECT *
    --FROM prod.restricted_safe_legacy.sfdc_accounts_xf
    FROM {{ref('sfdc_accounts_xf')}}

  ), sfdc_users_xf AS (

    SELECT *,
       CASE
            WHEN lower(title) like '%strategic account%'
                OR lower(title) like '%account executive%'
                OR lower(title) like '%country manager%'
                OR lower(title) like '%public sector channel manager%'
                THEN 'Rep'
            WHEN lower(title) like '%area sales manager%'
                THEN 'ASM'
            ELSE 'Other'
      END                                       AS title_category
    --FROM prod.workspace_sales.sfdc_users_xf
    FROM {{ref('wk_sales_sfdc_users_xf')}}

  ), report_dates AS (

    SELECT DISTINCT fiscal_year         AS report_fiscal_year,
                    first_day_of_month  AS report_month_date
    FROM prod.workspace_sales.date_details
    CROSS JOIN (SELECT current_date AS today_date)
    WHERE fiscal_year > 2021
        AND month_actual = MONTH(today_date)
        AND date_actual < today_date

  ), account_year_key AS (

    SELECT DISTINCT
      a.dim_crm_account_id AS account_id,
      d.report_fiscal_year,
      d.report_month_date
  FROM dim_crm_account AS a
  CROSS JOIN report_dates AS d

  ), nfy_atr_base AS (

    SELECT 
        dim_crm_account_id      AS account_id,
        report_dates.report_fiscal_year,
        SUM(arr)                AS nfy_atr,
         SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 1
            THEN arr
          ELSE 0
        END)                    AS nfy_q1_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 2
            THEN arr
          ELSE 0
        END)                    AS nfy_q2_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 3
            THEN arr
          ELSE 0
        END)                    AS nfy_q3_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 4
            THEN arr
          ELSE 0
        END)                    AS nfy_q4_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    AND atr.fiscal_year = report_dates.report_fiscal_year + 1
    GROUP BY 1,2
    
), last_12m_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
    
        SUM(arr)                AS last_12m_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.renewal_month < report_dates.report_month_date
    AND atr.renewal_month >= DATEADD(month,-12,report_dates.report_month_date)
    GROUP BY 1,2
    
), fy_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
        SUM(arr)                AS fy_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.fiscal_year = report_dates.report_fiscal_year
    GROUP BY 1,2


-- Rolling 1 year Net ARR
), net_arr_last_12m AS (
  -- net_arr_ttm

    SELECT
      o.account_id,
      d.report_fiscal_year          AS report_fiscal_year,
      SUM(o.net_arr)                AS last_12m_booked_net_arr,   -- ttm_net_arr
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.net_arr
            ELSE 0
          END)          AS last_12m_booked_non_web_net_arr,  -- ttm_non_web_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_web_direct_sourced_net_arr,  --ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_sourced_net_arr,  -- ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_sdr_sourced_net_arr,  -- ttm_sdr_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_ae_sourced_net_arr,  -- ttm_ae_sourced_net_arr
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
               THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_churn_contraction_net_arr,  -- ttm_churn_contraction_net_arr

       -- FO year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_fo_net_arr,  -- ttm_fo_net_arr

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_new_connected_net_arr, -- ttm_new_connected_net_arr

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_growth_net_arr,   --ttm_growth_net_arr

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_direct_net_arr,   --ttm_direct_net_arr

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_net_arr,   --ttm_channel_net_arr

        SUM (CASE
            WHEN o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_deal_count,  --ttm_deal_count

         SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_count,  -- ttm_trx_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 5000)
                        OR o.net_arr > 5000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_5k_count,   -- ttm_trx_over_5k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 10000)
                        OR o.net_arr > 10000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_10k_count,  -- ttm_trx_over_10k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 50000)
                        OR o.net_arr > 50000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_50k_count,  -- ttm_trx_over_50k_count

          SUM (CASE
            WHEN o.is_renewal = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_renewal_deal_count,   -- ttm_renewal_deal_count

        SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
                AND o.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Contract Reset','Contract Reset/Ramp Deal')
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_churn_contraction_deal_count,  -- ttm_churn_contraction_deal_count

          -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_direct_deal_count,  -- ttm_direct_deal_count

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_channel_deal_count  -- ttm_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    CROSS JOIN report_dates AS d
    WHERE o.close_date BETWEEN DATEADD(month, -12,DATE_TRUNC('month',d.report_month_date)) and DATE_TRUNC('month',d.report_month_date)
        AND o.booked_net_arr <> 0
    GROUP BY 1, 2
    
  -- total booked net arr in fy
  ), fy_net_arr AS (

    SELECT
      o.account_id,
      o.close_fiscal_year   AS report_fiscal_year,
      SUM(o.booked_net_arr) AS fy_booked_net_arr,
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.booked_net_arr
            ELSE 0
          END)          AS fy_booked_non_web_booked_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_sdr_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_ae_sourced_net_arr,
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_churn_contraction_net_arr,

        -- First Order year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_fo_net_arr,

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_new_connected_net_arr,

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_growth_net_arr,

        SUM(o.calculated_deal_count)   AS fy_booked_deal_count,

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_direct_net_arr,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_net_arr,

         -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_direct_deal_count,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    WHERE o.booked_net_arr <> 0
    GROUP BY 1,2

  -- Total open pipeline at the same point in previous fiscal years (total open pipe)
  ), op_forward_one_year AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year        AS report_fiscal_year,
      -- net arr pipeline
      SUM(h.net_arr)                AS total_open_pipe,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_open_pipeline,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_open_pipeline,
      
      -- deal count pipeline
      SUM(h.calculated_deal_count)   AS total_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_count_open_deals
      
    FROM sfdc_opportunity_snapshot_xf AS h
    WHERE h.close_date > h.snapshot_date
      AND h.forecast_category_name NOT IN  ('Omitted','Closed')
      AND h.order_type_stamped != '7. PS / Other'
      AND h.net_arr != 0
      AND h.is_eligible_open_pipeline_flag = 1
      GROUP BY 1,2

  -- Last 12 months pipe gen at same point of time in the year
  ), pg_last_12_months AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_last_12m_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_ae_sourced_net_arr,

      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_deal_count,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_channel_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_ae_sourced_deal_count

    FROM sfdc_opportunity_snapshot_xf AS h

    -- pipeline created within the last 12 months
    WHERE
        h.pipeline_created_date > dateadd(month,-12,h.snapshot_date)
      AND h.pipeline_created_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
    GROUP BY 1,2

  -- Pipe generation at the same point in time in the fiscal year
  ), pg_ytd AS (

    SELECT
      h.account_id,
      h.net_arr_created_fiscal_year  AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_ytd_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_ae_sourced_net_arr
    FROM sfdc_opportunity_snapshot_xf AS h
      -- pipeline created within the fiscal year
    WHERE h.snapshot_fiscal_year = h.net_arr_created_fiscal_year
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
      AND h.net_arr > 0
      GROUP BY 1,2

  -- ARR at the same point in time in Fiscal Year
  ), arr_at_same_month AS (

    SELECT
      mrr.dim_crm_account_id AS account_id,
      mrr_date.fiscal_year   AS report_fiscal_year,
  --    ultimate_parent_account_id,
      SUM(mrr.mrr)      AS mrr,
      SUM(mrr.arr)      AS arr,
      SUM(CASE
              WHEN sub.is_channel_arr_flag = 1
                  THEN mrr.arr
              ELSE 0
          END)          AS reseller_arr,
      SUM(CASE
              WHEN  sub.is_channel_arr_flag = 0
                  THEN mrr.arr
              ELSE 0
          END)          AS direct_arr,


      SUM(CASE
              WHEN  (mrr.product_tier_name LIKE '%Starter%'
                      OR mrr.product_tier_name LIKE '%Bronze%')
                  THEN mrr.arr
              ELSE 0
          END)          AS product_starter_arr,


      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Premium%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_premium_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Ultimate%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_ultimate_arr,

      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Self-Managed%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_self_managed_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%SaaS%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_saas_arr

    FROM mart_arr AS mrr
    INNER JOIN date_details AS mrr_date
      ON mrr.arr_month = mrr_date.date_actual
    INNER JOIN dim_subscription AS sub
      ON sub.dim_subscription_id = mrr.dim_subscription_id
    WHERE mrr_date.month_actual =  (SELECT DISTINCT month_actual
                                      FROM date_details
                                      WHERE date_actual = DATE_TRUNC('month', DATEADD(month, -1, CURRENT_DATE)))
    GROUP BY 1,2

), sao_last_12_month AS (
   
  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS last_12m_sao_deal_count,
        SUM(h.net_arr)                  AS last_12m_sao_net_arr,
        SUM(h.booked_net_arr)           AS last_12m_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
        h.sales_accepted_date > dateadd(month,-12,h.snapshot_date)
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), sao_fy AS (      

  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS fy_sao_deal_count,
        SUM(h.net_arr)                  AS fy_sao_net_arr,
        SUM(h.booked_net_arr)           AS fy_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
       h.snapshot_fiscal_year = h.sales_accepted_fiscal_year
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), consolidated_accounts AS (

  SELECT
    ak.report_fiscal_year,
    a.account_id                      AS account_id,
    a.account_name                    AS account_name,
    a.ultimate_parent_account_id      AS upa_id,
    a.ultimate_parent_account_name    AS upa_name,
    a.is_key_account,
    a.abm_tier,
    a.ultimate_parent_account_id,
    u.name                              AS account_owner_name,
    a.owner_id                          AS account_owner_id,
    trim(u.employee_number)             AS account_owner_employee_number,
    upa_owner.name                      AS upa_owner_name,
    upa_owner.user_id                   AS upa_owner_id,
    upa_owner.title_category            AS upa_owner_title_category,
    trim(upa_owner.employee_number)     AS upa_owner_employee_number,
    a.billing_country                   AS account_country,
    a.billing_postal_code               AS account_zip_code,
    mart_crm_account.account_billing_state AS account_state,

    
    -- Account demographics fields
    upa_account.parent_crm_account_sales_segment                    AS parent_crm_account_sales_segment,
    upa_account.parent_crm_account_geo                              AS parent_crm_account_geo,
    upa_account.parent_crm_account_region                           AS parent_crm_account_region,
    upa_account.parent_crm_account_area                             AS parent_crm_account_area,
    upa_account.crm_account_billing_country                         AS crm_account_billing_country,  
    upa_account.parent_crm_account_upa_state                        AS parent_crm_account_upa_state,
    upa_account.parent_crm_account_upa_city                         AS parent_crm_account_upa_city,
    upa_account.parent_crm_account_upa_postal_code                  AS parent_crm_account_upa_postal_code,
    upa_account.parent_crm_account_territory                        AS parent_crm_account_territory,

    
    -- substitute this by key segment
    u.user_geo                                    AS account_user_geo,
    u.user_region                                 AS account_user_region,
    u.user_segment                                AS account_user_segment,
    u.user_area                                   AS account_user_area,
    u.role_name                                   AS account_owner_role,
    u.title_category                              AS account_owner_title_category,
    a.industry                                    AS account_industry,
    upa_owner.user_geo                            AS upa_user_geo,
    upa_owner.user_region                         AS upa_user_region,
    upa_owner.user_segment                        AS upa_user_segment,
    upa_owner.user_area                           AS upa_user_area,
    upa_owner.role_name                           AS upa_user_role,
    upa.industry                                  AS upa_industry,
    
    -- NF: These fields are only useful to calculate LAM Dev Count which is already calculated
    coalesce(mart_crm_account.potential_users, 0)                               AS potential_users,
    coalesce(mart_crm_account.number_of_licenses_this_account, 0)               AS licenses,
    coalesce(mart_crm_account.decision_maker_count_linkedin, 0)                 AS linkedin_developer,
    coalesce(mart_crm_account.crm_account_zoom_info_number_of_developers, 0)    AS zi_developers,
    coalesce(mart_crm_account.zoom_info_company_revenue, 0)                     AS zi_revenue,


    -- LAM Dev count calculated at the UPA level
    upa_account.parent_crm_account_lam_dev_count                       AS upa_lam_dev_count,
    mart_crm_account.public_sector_account_flag,
    mart_crm_account.pubsec_type,
    mart_crm_account.potential_lam_arr,
    coalesce(mart_crm_account.crm_account_employee_count, 0)   AS employees,
    
    COALESCE(mart_crm_account.carr_account_family, 0)                       AS account_family_arr,
    LEAST(50000,GREATEST(coalesce(mart_crm_account.number_of_licenses_this_account,0),COALESCE(mart_crm_account.potential_users, mart_crm_account.decision_maker_count_linkedin, mart_crm_account.crm_account_zoom_info_number_of_developers, 0)))           AS calculated_developer_count,

    -- Account score used to balance patches in maps
    mart_crm_account.customer_score,


    -- TODO: 20221208 They are not called TAMs anymore, this part needs to be refactored
    a.technical_account_manager_date,
    a.technical_account_manager                                             AS technical_account_manager_name,
    CASE
      WHEN mart_crm_account.has_tam_flag
          THEN 1
      ELSE 0
    END                                           AS has_technical_account_manager_flag,

    a.health_score_color                          AS account_health_score_color,
    a.health_number                               AS account_health_number,

    -- atr for current fy
    COALESCE(fy_atr_base.fy_atr,0)           AS fy_atr,
    -- next fiscal year atr base reported at fy
    COALESCE(nfy_atr_base.nfy_atr,0)         AS nfy_atr,
    COALESCE(nfy_atr_base.nfy_q1_atr,0)      AS nfy_q1_atr,
    COALESCE(nfy_atr_base.nfy_q2_atr,0)      AS nfy_q2_atr,
    COALESCE(nfy_atr_base.nfy_q3_atr,0)      AS nfy_q3_atr,
    COALESCE(nfy_atr_base.nfy_q4_atr,0)      AS nfy_q4_atr,
    -- last 12 months ATR
    COALESCE(last_12m_atr_base.last_12m_atr,0)    AS last_12m_atr,

    -- arr by fy
    COALESCE(arr.arr,0)                           AS arr,

    COALESCE(arr.reseller_arr,0)                  AS arr_channel,
    COALESCE(arr.direct_arr,0)                    AS arr_direct,

    COALESCE(arr.product_starter_arr,0)           AS product_starter_arr,
    COALESCE(arr.product_premium_arr,0)           AS product_premium_arr,
    COALESCE(arr.product_ultimate_arr,0)          AS product_ultimate_arr,


    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) > COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_ultimate_customer_flag,

    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) < COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_premium_customer_flag,

    COALESCE(arr.delivery_self_managed_arr,0)     AS delivery_self_managed_arr,
    COALESCE(arr.delivery_saas_arr,0)             AS delivery_saas_arr,

    -- accounts counts
    CASE
      WHEN COALESCE(arr.arr,0) = 0
      THEN 1
      ELSE 0
    END                                           AS is_prospect_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
      THEN 1
      ELSE 0
    END                                           AS is_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 5000
      THEN 1
      ELSE 0
    END                                           AS is_over_5k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 10000
      THEN 1
      ELSE 0
    END                                           AS is_over_10k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 50000
      THEN 1
      ELSE 0
    END                                           AS is_over_50k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 100000
      THEN 1
      ELSE 0
    END                                           AS is_over_100k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 500000
      THEN 1
      ELSE 0
    END                                           AS is_over_500k_customer_flag,

    -- rolling last 12 months booked net arr
    COALESCE(net_arr_last_12m.last_12m_booked_net_arr,0)                       AS last_12m_booked_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_non_web_net_arr,0)               AS last_12m_booked_non_web_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_web_direct_sourced_net_arr,0)    AS last_12m_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)       AS last_12m_booked_channel_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_sdr_sourced_net_arr,0)           AS last_12m_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_ae_sourced_net_arr,0)            AS last_12m_booked_ae_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_net_arr,0)     AS last_12m_booked_churn_contraction_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_fo_net_arr,0)                    AS last_12m_booked_fo_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_new_connected_net_arr,0)         AS last_12m_booked_new_connected_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_growth_net_arr,0)                AS last_12m_booked_growth_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_deal_count,0)                    AS last_12m_booked_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_net_arr,0)                AS last_12m_booked_direct_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)               AS last_12m_booked_channel_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)  - COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)   AS last_12m_booked_channel_co_sell_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_deal_count,0)             AS last_12m_booked_direct_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_deal_count,0)            AS last_12m_booked_channel_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_deal_count,0)  AS last_12m_booked_churn_contraction_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_renewal_deal_count,0)            AS last_12m_booked_renewal_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_count,0)                     AS last_12m_booked_trx_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_5k_count,0)             AS last_12m_booked_trx_over_5k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_10k_count,0)            AS last_12m_booked_trx_over_10k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_50k_count,0)            AS last_12m_booked_trx_over_50k_count,

    -- fy booked net arr
    COALESCE(net_arr_fiscal.fy_booked_net_arr,0)                     AS fy_booked_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_web_direct_sourced_net_arr,0)  AS fy_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_sourced_net_arr,0)     AS fy_booked_channel_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_sdr_sourced_net_arr,0)         AS fy_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_ae_sourced_net_arr,0)          AS fy_booked_ae_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_churn_contraction_net_arr,0)   AS fy_booked_churn_contraction_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_fo_net_arr,0)                  AS fy_booked_fo_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_new_connected_net_arr,0)       AS fy_booked_new_connected_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_growth_net_arr,0)              AS fy_booked_growth_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_deal_count,0)                  AS fy_booked_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_direct_net_arr,0)              AS fy_booked_direct_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_net_arr,0)             AS fy_booked_channel_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_direct_deal_count,0)           AS fy_booked_direct_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_channel_deal_count,0)          AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    COALESCE(op.total_open_pipe,0)                  AS total_open_pipe,
    COALESCE(op.total_count_open_deals,0)           AS total_count_open_deals_pipe,
    COALESCE(op.nfy_open_pipeline,0)                AS nfy_open_pipeline,
    COALESCE(op.fy_open_pipeline,0)                 AS fy_open_pipeline,
    COALESCE(op.nfy_count_open_deals,0)             AS nfy_count_open_deals,
    COALESCE(op.fy_count_open_deals,0)              AS fy_count_open_deals,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS customer_has_open_pipe_flag,

    CASE
      WHEN COALESCE(arr.arr,0) = 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS prospect_has_open_pipe_flag,

    -- pipe generation
    COALESCE(pg.pg_ytd_net_arr,0)                             AS pg_ytd_net_arr,
    COALESCE(pg.pg_ytd_web_direct_sourced_net_arr,0)          AS pg_ytd_web_direct_sourced_net_arr,
    COALESCE(pg.pg_ytd_channel_sourced_net_arr,0)             AS pg_ytd_channel_sourced_net_arr,
    COALESCE(pg.pg_ytd_sdr_sourced_net_arr,0)                 AS pg_ytd_sdr_sourced_net_arr,
    COALESCE(pg.pg_ytd_ae_sourced_net_arr,0)                  AS pg_ytd_ae_sourced_net_arr,

    COALESCE(pg_ly.pg_last_12m_net_arr,0)                     AS pg_last_12m_net_arr,
    COALESCE(pg_ly.pg_last_12m_web_direct_sourced_net_arr,0)  AS pg_last_12m_web_direct_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_channel_sourced_net_arr,0)     AS pg_last_12m_channel_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_sdr_sourced_net_arr,0)         AS pg_last_12m_sdr_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_ae_sourced_net_arr,0)          AS pg_last_12m_ae_sourced_net_arr,

    COALESCE(pg_last_12m_web_direct_sourced_deal_count,0)     AS pg_last_12m_web_direct_sourced_deal_count,
    COALESCE(pg_last_12m_channel_sourced_deal_count,0)        AS pg_last_12m_channel_sourced_deal_count,
    COALESCE(pg_last_12m_sdr_sourced_deal_count,0)            AS pg_last_12m_sdr_sourced_deal_count,
    COALESCE(pg_last_12m_ae_sourced_deal_count,0)             AS pg_last_12m_ae_sourced_deal_count,
    
    -- SAO metrics
    COALESCE(sao_last_12_month.last_12m_sao_deal_count,0)       AS last_12m_sao_deal_count,
    COALESCE(sao_last_12_month.last_12m_sao_net_arr,0)          AS last_12m_sao_net_arr,
    COALESCE(sao_last_12_month.last_12m_sao_booked_net_arr,0)   AS last_12m_sao_booked_net_arr, 
    COALESCE(sao_fy.fy_sao_deal_count,0)                        AS fy_sao_deal_count,
    COALESCE(sao_fy.fy_sao_net_arr,0)                           AS fy_sao_net_arr,
    COALESCE(sao_fy.fy_sao_booked_net_arr,0)                    AS fy_sao_booked_net_arr,
    
     -- LAM Dev Count Category
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN '0. <100'    
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN '1. [100-250)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN '2. [250-500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN '3. [500-1500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN '4. [1500-2500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN '5. [2500-3500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN '6. [3500-5000)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN '7. >5000'
    END AS lam_dev_count_bin_name,
    
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN 0
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN 100
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN 250
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN 500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN 1500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN 2500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN 3500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN 5000
    END AS lam_dev_count_bin_rank,      
    
    -- Public Sector
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 'Public'
        ELSE 'Private'
    END                     AS sector_type,
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 1
        ELSE 0
    END                     AS is_public_sector_flag

  FROM account_year_key AS ak
  INNER JOIN sfdc_accounts_xf AS a
    ON ak.account_id = a.account_id
  LEFT JOIN mart_crm_account AS upa_account
    ON a.ultimate_parent_account_id = upa_account.dim_crm_account_id
  LEFT JOIN sfdc_accounts_xf AS upa
    ON a.ultimate_parent_account_id = upa.account_id
  LEFT JOIN dim_crm_account AS dim_account
    ON ak.account_id = dim_account.dim_crm_account_id
  LEFT JOIN mart_crm_account
    ON ak.account_id = mart_crm_account.dim_crm_account_id
  LEFT JOIN sfdc_users_xf AS u
    ON a.owner_id = u.user_id
  LEFT JOIN sfdc_users_xf AS upa_owner
    ON upa.owner_id = upa_owner.user_id
  LEFT JOIN fy_atr_base
    ON fy_atr_base.account_id = ak.account_id
    AND fy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN last_12m_atr_base AS last_12m_atr_base
    ON last_12m_atr_base.account_id = ak.account_id
    AND last_12m_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN nfy_atr_base
    ON nfy_atr_base.account_id = ak.account_id
    AND nfy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN net_arr_last_12m
    ON net_arr_last_12m.account_id = ak.account_id
    AND net_arr_last_12m.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN op_forward_one_year AS op
    ON op.account_id = ak.account_id
    AND op.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_ytd AS pg
    ON pg.account_id = ak.account_id
    AND pg.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_last_12_months AS pg_ly
    ON pg_ly.account_id = ak.account_id
    AND pg_ly.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN arr_at_same_month AS arr
    ON arr.account_id = ak.account_id
    AND arr.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN fy_net_arr AS net_arr_fiscal
    ON net_arr_fiscal.account_id = ak.account_id
    AND net_arr_fiscal.report_fiscal_year = ak.report_fiscal_year
  -- SAOs
  LEFT JOIN sao_last_12_month 
    ON sao_last_12_month.account_id = ak.account_id
    AND sao_last_12_month.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN sao_fy
    ON sao_fy.account_id = ak.account_id
    AND sao_fy.report_fiscal_year = ak.report_fiscal_year

    -----------------------
-- Adjust for hierarchies split between different geos
), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    parent_crm_account_upa_state              AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM consolidated_accounts
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM consolidated_accounts child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM consolidated_accounts final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final
------------------------

), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_state 
        ELSE acc.parent_crm_account_upa_state
    END                                     AS upa_ad_state,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,
    
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,

    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    
    -- Customer score used in maps for account visualization
    MAX(acc.customer_score) AS customer_score,
    
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM consolidated_accounts acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)
, final AS (

  SELECT
      
    acc.*, 
    
    CASE 
      WHEN upa.arr > 0 AND upa.arr < 5000
        THEN '1. 0-5k ARR'
      WHEN upa.arr >= 5000 AND upa.arr < 10000
        THEN '2. 0-10k ARR'
      WHEN upa.arr >= 10000 AND upa.arr < 50000
        THEN '3. 10k-50k ARR'
      WHEN upa.arr >= 50000 AND upa.arr < 100000
        THEN '4. 50K-100k ARR'
      WHEN upa.arr >= 100000 AND upa.arr < 500000
        THEN '5. 100k-500k ARR'
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '6. 500k-1M ARR'     
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '7. >=1M ARR' 
      ELSE 'n/a'
    END    AS account_family_arr_bin_name,
    
    COALESCE(upa.potential_users,0)                 AS upa_potential_users,
    COALESCE(upa.licenses,0)                        AS upa_licenses,
    COALESCE(upa.linkedin_developer,0)              AS upa_linkedin_developer,
    COALESCE(upa.zi_developers,0)                   AS upa_zi_developers,
    COALESCE(upa.zi_revenue,0)                      AS upa_zi_revenue,
    COALESCE(upa.employees,0)                       AS upa_employees,
    COALESCE(upa.count_of_customers,0)              AS upa_count_of_customers,

    CASE
        WHEN upa.upa_id = acc.account_id
            THEN 1
        ELSE 0
    END                                     AS is_upa_flag,

    upa.is_customer_flag                    AS hierarchy_is_customer_flag,
    
    COALESCE(virtual.virtual_upa_id,acc.upa_id)                             AS virtual_upa_id,
    COALESCE(virtual.virtual_upa_name,acc.upa_name)                         AS virtual_upa_name,
    COALESCE(virtual.virtual_upa_segment,acc.parent_crm_account_sales_segment)                AS virtual_upa_ad_segment,
    COALESCE(virtual.virtual_upa_geo,acc.upa_user_geo)                      AS virtual_upa_geo,
    COALESCE(virtual.virtual_upa_region,acc.upa_user_region)                AS virtual_upa_region,
    COALESCE(virtual.virtual_upa_area,acc.upa_user_area)                    AS virtual_upa_area,
    COALESCE(virtual.virtual_upa_country,acc.crm_account_billing_country)   AS virtual_upa_ad_country,
    COALESCE(virtual.virtual_upa_state,acc.parent_crm_account_upa_state)    AS virtual_upa_ad_state,
    COALESCE(virtual.virtual_upa_zip_code,acc.parent_crm_account_upa_postal_code) AS virtual_upa_ad_zip_code,
    COALESCE(virtual.virtual_upa_industry,acc.upa_industry)                 AS virtual_upa_industry,
    COALESCE(virtual.virtual_upa_owner_name,acc.upa_owner_name)             AS virtual_upa_owner_name,
    COALESCE(virtual.virtual_upa_owner_title_category,acc.upa_owner_title_category)   AS virtual_upa_owner_title_category,
    COALESCE(virtual.virtual_upa_owner_id,acc.upa_owner_id)                 AS virtual_upa_owner_id, 
    CASE 
        WHEN virtual.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                                                     AS virtual_upa_type

  FROM consolidated_accounts acc
    LEFT JOIN consolidated_upa upa
        ON upa.upa_id = acc.upa_id
        AND upa.report_fiscal_year = acc.report_fiscal_year
    LEFT JOIN final_virtual_upa virtual
        ON virtual.account_id = acc.account_id
        AND virtual.report_fiscal_year = acc.report_fiscal_year

)

SELECT *
FROM final2b:Tf47c,

-- TODO: 20221208 TAM fields need to refactored as they are not called TAM anymore

WITH date_details AS (

    SELECT *
    --FROM  prod.workspace_sales.date_details
    FROM "PROD".workspace_sales.date_details

 ), sfdc_opportunity_xf AS (

    SELECT *
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_xf
    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_xf
    WHERE is_deleted = 0
      AND is_edu_oss = 0
      AND is_jihu_account = 0

 ), sfdc_opportunity_snapshot_xf AS (

    SELECT h.*
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf AS h
    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf h
    INNER JOIN date_details snapshot_date
      ON snapshot_date.date_actual = h.snapshot_date
    WHERE h.is_deleted = 0
      AND h.is_edu_oss = 0
      AND h.is_jihu_account = 0
      -- same day of FY across years
      AND snapshot_date.day_of_fiscal_year_normalised = (SELECT DISTINCT day_of_fiscal_year_normalised
                                                          FROM date_details
                                                          WHERE date_actual = DATEADD(day, -2, CURRENT_DATE))
 ), mart_available_to_renew AS (

    SELECT renew.*,
        renew_date.first_day_of_fiscal_quarter  AS renew_fiscal_quarter_date,
        renew_date.fiscal_quarter_name_fy       AS renew_fiscal_quarter_name,
        renew_date.fiscal_quarter               AS renew_fiscal_quarter_number
    FROM "PROD".restricted_safe_common_mart_finance.mart_available_to_renew renew
    --FROM prod.restricted_safe_common_mart_finance.mart_available_to_renew
    LEFT JOIN date_details renew_date
        ON renew_date.date_actual = renew.renewal_month
    
 ), dim_subscription AS (

    SELECT
      dim_subscription_id,
      CASE
          WHEN dim_billing_account_id_invoice_owner_account != dim_billing_account_id
              THEN 1
          ELSE 0
      END AS is_channel_arr_flag
    --FROM prod.common.dim_subscription
    FROM "PROD".common.dim_subscription

 ), mart_arr AS (

    SELECT *
    --FROM prod.restricted_safe_common_mart_sales.mart_arr
    FROM "PROD".restricted_safe_common_mart_sales.mart_arr   

  ), raw_account AS (
  
    SELECT *
    FROM "RAW".salesforce_stitch.account
    --FROM raw.salesforce_stitch.account 

  -- missing fields in mart crm account so adding dim_crm_account cte here on top of the mart below
  ), dim_crm_account AS (

    SELECT *
    --FROM prod.restricted_safe_common.dim_crm_account
    FROM "PROD".restricted_safe_common.dim_crm_account

    -- missing fields in dim_crm_account so adding raw account here
  -- has_tam__c
  -- PUBLIC_SECTOR_ACCOUNT__C,
  -- PUBSEC_TYPE__C,
  -- POTENTIAL_ARR_LAM__C
  -- BILLINGSTATE
  -- customer_score__c
  ), mart_crm_account AS (

    SELECT acc.*,
        raw.has_tam__c                              AS has_tam_flag,
        raw.public_sector_account__c                AS public_sector_account_flag,
        raw.pubsec_type__c                          AS pubsec_type,
        raw.lam_tier__c                             AS potential_lam_arr,
        raw.billingstatecode                        AS account_billing_state,
        raw.customer_score__c                       AS customer_score,
        raw.account_demographics_territory__c       AS account_demographics_territory,
        raw.account_demographics_upa_state__c       AS account_demographics_upa_state_code,
        raw.account_demographics_upa_state_name__c  AS account_demographics_upa_state_name
    --FROM prod.restricted_safe_common_mart_sales.mart_crm_account acc
    FROM "PROD".restricted_safe_common_mart_sales.mart_crm_account acc
    LEFT JOIN raw_account raw
      ON raw.id = acc.dim_crm_account_id
    
  ), sfdc_accounts_xf AS (

    SELECT *
    --FROM prod.restricted_safe_legacy.sfdc_accounts_xf
    FROM "PROD".restricted_safe_legacy.sfdc_accounts_xf

  ), sfdc_users_xf AS (

    SELECT *,
       CASE
            WHEN lower(title) like '%strategic account%'
                OR lower(title) like '%account executive%'
                OR lower(title) like '%country manager%'
                OR lower(title) like '%public sector channel manager%'
                THEN 'Rep'
            WHEN lower(title) like '%area sales manager%'
                THEN 'ASM'
            ELSE 'Other'
      END                                       AS title_category
    --FROM prod.workspace_sales.sfdc_users_xf
    FROM "PROD".workspace_sales.sfdc_users_xf

  ), report_dates AS (

    SELECT DISTINCT fiscal_year         AS report_fiscal_year,
                    first_day_of_month  AS report_month_date
    FROM prod.workspace_sales.date_details
    CROSS JOIN (SELECT current_date AS today_date)
    WHERE fiscal_year > 2021
        AND month_actual = MONTH(today_date)
        AND date_actual < today_date

  ), account_year_key AS (

    SELECT DISTINCT
      a.dim_crm_account_id AS account_id,
      d.report_fiscal_year,
      d.report_month_date
  FROM dim_crm_account AS a
  CROSS JOIN report_dates AS d

  ), nfy_atr_base AS (

    SELECT 
        dim_crm_account_id      AS account_id,
        report_dates.report_fiscal_year,
        SUM(arr)                AS nfy_atr,
         SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 1
            THEN arr
          ELSE 0
        END)                    AS nfy_q1_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 2
            THEN arr
          ELSE 0
        END)                    AS nfy_q2_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 3
            THEN arr
          ELSE 0
        END)                    AS nfy_q3_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 4
            THEN arr
          ELSE 0
        END)                    AS nfy_q4_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    AND atr.fiscal_year = report_dates.report_fiscal_year + 1
    GROUP BY 1,2
    
), last_12m_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
    
        SUM(arr)                AS last_12m_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.renewal_month < report_dates.report_month_date
    AND atr.renewal_month >= DATEADD(month,-12,report_dates.report_month_date)
    GROUP BY 1,2
    
), fy_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
        SUM(arr)                AS fy_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.fiscal_year = report_dates.report_fiscal_year
    GROUP BY 1,2


-- Rolling 1 year Net ARR
), net_arr_last_12m AS (
  -- net_arr_ttm

    SELECT
      o.account_id,
      d.report_fiscal_year          AS report_fiscal_year,
      SUM(o.net_arr)                AS last_12m_booked_net_arr,   -- ttm_net_arr
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.net_arr
            ELSE 0
          END)          AS last_12m_booked_non_web_net_arr,  -- ttm_non_web_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_web_direct_sourced_net_arr,  --ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_sourced_net_arr,  -- ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_sdr_sourced_net_arr,  -- ttm_sdr_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_ae_sourced_net_arr,  -- ttm_ae_sourced_net_arr
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
               THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_churn_contraction_net_arr,  -- ttm_churn_contraction_net_arr

       -- FO year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_fo_net_arr,  -- ttm_fo_net_arr

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_new_connected_net_arr, -- ttm_new_connected_net_arr

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_growth_net_arr,   --ttm_growth_net_arr

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_direct_net_arr,   --ttm_direct_net_arr

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_net_arr,   --ttm_channel_net_arr

        SUM (CASE
            WHEN o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_deal_count,  --ttm_deal_count

         SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_count,  -- ttm_trx_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 5000)
                        OR o.net_arr > 5000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_5k_count,   -- ttm_trx_over_5k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 10000)
                        OR o.net_arr > 10000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_10k_count,  -- ttm_trx_over_10k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 50000)
                        OR o.net_arr > 50000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_50k_count,  -- ttm_trx_over_50k_count

          SUM (CASE
            WHEN o.is_renewal = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_renewal_deal_count,   -- ttm_renewal_deal_count

        SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
                AND o.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Contract Reset','Contract Reset/Ramp Deal')
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_churn_contraction_deal_count,  -- ttm_churn_contraction_deal_count

          -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_direct_deal_count,  -- ttm_direct_deal_count

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_channel_deal_count  -- ttm_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    CROSS JOIN report_dates AS d
    WHERE o.close_date BETWEEN DATEADD(month, -12,DATE_TRUNC('month',d.report_month_date)) and DATE_TRUNC('month',d.report_month_date)
        AND o.booked_net_arr <> 0
    GROUP BY 1, 2
    
  -- total booked net arr in fy
  ), fy_net_arr AS (

    SELECT
      o.account_id,
      o.close_fiscal_year   AS report_fiscal_year,
      SUM(o.booked_net_arr) AS fy_booked_net_arr,
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.booked_net_arr
            ELSE 0
          END)          AS fy_booked_non_web_booked_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_sdr_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_ae_sourced_net_arr,
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_churn_contraction_net_arr,

        -- First Order year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_fo_net_arr,

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_new_connected_net_arr,

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_growth_net_arr,

        SUM(o.calculated_deal_count)   AS fy_booked_deal_count,

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_direct_net_arr,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_net_arr,

         -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_direct_deal_count,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    WHERE o.booked_net_arr <> 0
    GROUP BY 1,2

  -- Total open pipeline at the same point in previous fiscal years (total open pipe)
  ), op_forward_one_year AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year        AS report_fiscal_year,
      -- net arr pipeline
      SUM(h.net_arr)                AS total_open_pipe,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_open_pipeline,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_open_pipeline,
      
      -- deal count pipeline
      SUM(h.calculated_deal_count)   AS total_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_count_open_deals
      
    FROM sfdc_opportunity_snapshot_xf AS h
    WHERE h.close_date > h.snapshot_date
      AND h.forecast_category_name NOT IN  ('Omitted','Closed')
      AND h.order_type_stamped != '7. PS / Other'
      AND h.net_arr != 0
      AND h.is_eligible_open_pipeline_flag = 1
      GROUP BY 1,2

  -- Last 12 months pipe gen at same point of time in the year
  ), pg_last_12_months AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_last_12m_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_ae_sourced_net_arr,

      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_deal_count,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_channel_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_ae_sourced_deal_count

    FROM sfdc_opportunity_snapshot_xf AS h

    -- pipeline created within the last 12 months
    WHERE
        h.pipeline_created_date > dateadd(month,-12,h.snapshot_date)
      AND h.pipeline_created_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
    GROUP BY 1,2

  -- Pipe generation at the same point in time in the fiscal year
  ), pg_ytd AS (

    SELECT
      h.account_id,
      h.net_arr_created_fiscal_year  AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_ytd_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_ae_sourced_net_arr
    FROM sfdc_opportunity_snapshot_xf AS h
      -- pipeline created within the fiscal year
    WHERE h.snapshot_fiscal_year = h.net_arr_created_fiscal_year
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
      AND h.net_arr > 0
      GROUP BY 1,2

  -- ARR at the same point in time in Fiscal Year
  ), arr_at_same_month AS (

    SELECT
      mrr.dim_crm_account_id AS account_id,
      mrr_date.fiscal_year   AS report_fiscal_year,
  --    ultimate_parent_account_id,
      SUM(mrr.mrr)      AS mrr,
      SUM(mrr.arr)      AS arr,
      SUM(CASE
              WHEN sub.is_channel_arr_flag = 1
                  THEN mrr.arr
              ELSE 0
          END)          AS reseller_arr,
      SUM(CASE
              WHEN  sub.is_channel_arr_flag = 0
                  THEN mrr.arr
              ELSE 0
          END)          AS direct_arr,


      SUM(CASE
              WHEN  (mrr.product_tier_name LIKE '%Starter%'
                      OR mrr.product_tier_name LIKE '%Bronze%')
                  THEN mrr.arr
              ELSE 0
          END)          AS product_starter_arr,


      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Premium%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_premium_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Ultimate%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_ultimate_arr,

      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Self-Managed%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_self_managed_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%SaaS%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_saas_arr

    FROM mart_arr AS mrr
    INNER JOIN date_details AS mrr_date
      ON mrr.arr_month = mrr_date.date_actual
    INNER JOIN dim_subscription AS sub
      ON sub.dim_subscription_id = mrr.dim_subscription_id
    WHERE mrr_date.month_actual =  (SELECT DISTINCT month_actual
                                      FROM date_details
                                      WHERE date_actual = DATE_TRUNC('month', DATEADD(month, -1, CURRENT_DATE)))
    GROUP BY 1,2

), sao_last_12_month AS (
   
  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS last_12m_sao_deal_count,
        SUM(h.net_arr)                  AS last_12m_sao_net_arr,
        SUM(h.booked_net_arr)           AS last_12m_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
        h.sales_accepted_date > dateadd(month,-12,h.snapshot_date)
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), sao_fy AS (      

  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS fy_sao_deal_count,
        SUM(h.net_arr)                  AS fy_sao_net_arr,
        SUM(h.booked_net_arr)           AS fy_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
       h.snapshot_fiscal_year = h.sales_accepted_fiscal_year
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), consolidated_accounts AS (

  SELECT
    ak.report_fiscal_year,
    a.account_id                      AS account_id,
    a.account_name                    AS account_name,
    a.ultimate_parent_account_id      AS upa_id,
    a.ultimate_parent_account_name    AS upa_name,
    a.is_key_account,
    a.abm_tier,
    a.ultimate_parent_account_id,
    u.name                              AS account_owner_name,
    a.owner_id                          AS account_owner_id,
    trim(u.employee_number)             AS account_owner_employee_number,
    upa_owner.name                      AS upa_owner_name,
    upa_owner.user_id                   AS upa_owner_id,
    upa_owner.title_category            AS upa_owner_title_category,
    trim(upa_owner.employee_number)     AS upa_owner_employee_number,
    a.billing_country                   AS account_country,
    a.billing_postal_code               AS account_zip_code,
    mart_crm_account.account_billing_state AS account_state,

    
    -- Account demographics fields
    upa_account.parent_crm_account_sales_segment                    AS parent_crm_account_sales_segment,
    upa_account.parent_crm_account_geo                              AS parent_crm_account_geo,
    upa_account.parent_crm_account_region                           AS parent_crm_account_region,
    upa_account.parent_crm_account_area                             AS parent_crm_account_area,
    upa_account.crm_account_billing_country                         AS crm_account_billing_country,  
    upa_account.parent_crm_account_upa_state                        AS parent_crm_account_upa_state,
    upa_account.parent_crm_account_upa_city                         AS parent_crm_account_upa_city,
    upa_account.parent_crm_account_upa_postal_code                  AS parent_crm_account_upa_postal_code,
    upa_account.parent_crm_account_territory                        AS parent_crm_account_territory,

    
    -- substitute this by key segment
    u.user_geo                                    AS account_user_geo,
    u.user_region                                 AS account_user_region,
    u.user_segment                                AS account_user_segment,
    u.user_area                                   AS account_user_area,
    u.role_name                                   AS account_owner_role,
    u.title_category                              AS account_owner_title_category,
    a.industry                                    AS account_industry,
    upa_owner.user_geo                            AS upa_user_geo,
    upa_owner.user_region                         AS upa_user_region,
    upa_owner.user_segment                        AS upa_user_segment,
    upa_owner.user_area                           AS upa_user_area,
    upa_owner.role_name                           AS upa_user_role,
    upa.industry                                  AS upa_industry,
    
    -- NF: These fields are only useful to calculate LAM Dev Count which is already calculated
    coalesce(mart_crm_account.potential_users, 0)                               AS potential_users,
    coalesce(mart_crm_account.number_of_licenses_this_account, 0)               AS licenses,
    coalesce(mart_crm_account.decision_maker_count_linkedin, 0)                 AS linkedin_developer,
    coalesce(mart_crm_account.crm_account_zoom_info_number_of_developers, 0)    AS zi_developers,
    coalesce(mart_crm_account.zoom_info_company_revenue, 0)                     AS zi_revenue,


    -- LAM Dev count calculated at the UPA level
    upa_account.parent_crm_account_lam_dev_count                       AS upa_lam_dev_count,
    mart_crm_account.public_sector_account_flag,
    mart_crm_account.pubsec_type,
    mart_crm_account.potential_lam_arr,
    coalesce(mart_crm_account.crm_account_employee_count, 0)   AS employees,
    
    COALESCE(mart_crm_account.carr_account_family, 0)                       AS account_family_arr,
    LEAST(50000,GREATEST(coalesce(mart_crm_account.number_of_licenses_this_account,0),COALESCE(mart_crm_account.potential_users, mart_crm_account.decision_maker_count_linkedin, mart_crm_account.crm_account_zoom_info_number_of_developers, 0)))           AS calculated_developer_count,

    -- Account score used to balance patches in maps
    mart_crm_account.customer_score,


    -- TODO: 20221208 They are not called TAMs anymore, this part needs to be refactored
    a.technical_account_manager_date,
    a.technical_account_manager                                             AS technical_account_manager_name,
    CASE
      WHEN mart_crm_account.has_tam_flag
          THEN 1
      ELSE 0
    END                                           AS has_technical_account_manager_flag,

    a.health_score_color                          AS account_health_score_color,
    a.health_number                               AS account_health_number,

    -- atr for current fy
    COALESCE(fy_atr_base.fy_atr,0)           AS fy_atr,
    -- next fiscal year atr base reported at fy
    COALESCE(nfy_atr_base.nfy_atr,0)         AS nfy_atr,
    COALESCE(nfy_atr_base.nfy_q1_atr,0)      AS nfy_q1_atr,
    COALESCE(nfy_atr_base.nfy_q2_atr,0)      AS nfy_q2_atr,
    COALESCE(nfy_atr_base.nfy_q3_atr,0)      AS nfy_q3_atr,
    COALESCE(nfy_atr_base.nfy_q4_atr,0)      AS nfy_q4_atr,
    -- last 12 months ATR
    COALESCE(last_12m_atr_base.last_12m_atr,0)    AS last_12m_atr,

    -- arr by fy
    COALESCE(arr.arr,0)                           AS arr,

    COALESCE(arr.reseller_arr,0)                  AS arr_channel,
    COALESCE(arr.direct_arr,0)                    AS arr_direct,

    COALESCE(arr.product_starter_arr,0)           AS product_starter_arr,
    COALESCE(arr.product_premium_arr,0)           AS product_premium_arr,
    COALESCE(arr.product_ultimate_arr,0)          AS product_ultimate_arr,


    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) > COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_ultimate_customer_flag,

    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) < COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_premium_customer_flag,

    COALESCE(arr.delivery_self_managed_arr,0)     AS delivery_self_managed_arr,
    COALESCE(arr.delivery_saas_arr,0)             AS delivery_saas_arr,

    -- accounts counts
    CASE
      WHEN COALESCE(arr.arr,0) = 0
      THEN 1
      ELSE 0
    END                                           AS is_prospect_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
      THEN 1
      ELSE 0
    END                                           AS is_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 5000
      THEN 1
      ELSE 0
    END                                           AS is_over_5k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 10000
      THEN 1
      ELSE 0
    END                                           AS is_over_10k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 50000
      THEN 1
      ELSE 0
    END                                           AS is_over_50k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 100000
      THEN 1
      ELSE 0
    END                                           AS is_over_100k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 500000
      THEN 1
      ELSE 0
    END                                           AS is_over_500k_customer_flag,

    -- rolling last 12 months booked net arr
    COALESCE(net_arr_last_12m.last_12m_booked_net_arr,0)                       AS last_12m_booked_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_non_web_net_arr,0)               AS last_12m_booked_non_web_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_web_direct_sourced_net_arr,0)    AS last_12m_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)       AS last_12m_booked_channel_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_sdr_sourced_net_arr,0)           AS last_12m_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_ae_sourced_net_arr,0)            AS last_12m_booked_ae_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_net_arr,0)     AS last_12m_booked_churn_contraction_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_fo_net_arr,0)                    AS last_12m_booked_fo_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_new_connected_net_arr,0)         AS last_12m_booked_new_connected_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_growth_net_arr,0)                AS last_12m_booked_growth_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_deal_count,0)                    AS last_12m_booked_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_net_arr,0)                AS last_12m_booked_direct_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)               AS last_12m_booked_channel_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)  - COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)   AS last_12m_booked_channel_co_sell_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_deal_count,0)             AS last_12m_booked_direct_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_deal_count,0)            AS last_12m_booked_channel_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_deal_count,0)  AS last_12m_booked_churn_contraction_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_renewal_deal_count,0)            AS last_12m_booked_renewal_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_count,0)                     AS last_12m_booked_trx_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_5k_count,0)             AS last_12m_booked_trx_over_5k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_10k_count,0)            AS last_12m_booked_trx_over_10k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_50k_count,0)            AS last_12m_booked_trx_over_50k_count,

    -- fy booked net arr
    COALESCE(net_arr_fiscal.fy_booked_net_arr,0)                     AS fy_booked_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_web_direct_sourced_net_arr,0)  AS fy_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_sourced_net_arr,0)     AS fy_booked_channel_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_sdr_sourced_net_arr,0)         AS fy_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_ae_sourced_net_arr,0)          AS fy_booked_ae_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_churn_contraction_net_arr,0)   AS fy_booked_churn_contraction_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_fo_net_arr,0)                  AS fy_booked_fo_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_new_connected_net_arr,0)       AS fy_booked_new_connected_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_growth_net_arr,0)              AS fy_booked_growth_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_deal_count,0)                  AS fy_booked_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_direct_net_arr,0)              AS fy_booked_direct_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_net_arr,0)             AS fy_booked_channel_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_direct_deal_count,0)           AS fy_booked_direct_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_channel_deal_count,0)          AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    COALESCE(op.total_open_pipe,0)                  AS total_open_pipe,
    COALESCE(op.total_count_open_deals,0)           AS total_count_open_deals_pipe,
    COALESCE(op.nfy_open_pipeline,0)                AS nfy_open_pipeline,
    COALESCE(op.fy_open_pipeline,0)                 AS fy_open_pipeline,
    COALESCE(op.nfy_count_open_deals,0)             AS nfy_count_open_deals,
    COALESCE(op.fy_count_open_deals,0)              AS fy_count_open_deals,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS customer_has_open_pipe_flag,

    CASE
      WHEN COALESCE(arr.arr,0) = 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS prospect_has_open_pipe_flag,

    -- pipe generation
    COALESCE(pg.pg_ytd_net_arr,0)                             AS pg_ytd_net_arr,
    COALESCE(pg.pg_ytd_web_direct_sourced_net_arr,0)          AS pg_ytd_web_direct_sourced_net_arr,
    COALESCE(pg.pg_ytd_channel_sourced_net_arr,0)             AS pg_ytd_channel_sourced_net_arr,
    COALESCE(pg.pg_ytd_sdr_sourced_net_arr,0)                 AS pg_ytd_sdr_sourced_net_arr,
    COALESCE(pg.pg_ytd_ae_sourced_net_arr,0)                  AS pg_ytd_ae_sourced_net_arr,

    COALESCE(pg_ly.pg_last_12m_net_arr,0)                     AS pg_last_12m_net_arr,
    COALESCE(pg_ly.pg_last_12m_web_direct_sourced_net_arr,0)  AS pg_last_12m_web_direct_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_channel_sourced_net_arr,0)     AS pg_last_12m_channel_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_sdr_sourced_net_arr,0)         AS pg_last_12m_sdr_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_ae_sourced_net_arr,0)          AS pg_last_12m_ae_sourced_net_arr,

    COALESCE(pg_last_12m_web_direct_sourced_deal_count,0)     AS pg_last_12m_web_direct_sourced_deal_count,
    COALESCE(pg_last_12m_channel_sourced_deal_count,0)        AS pg_last_12m_channel_sourced_deal_count,
    COALESCE(pg_last_12m_sdr_sourced_deal_count,0)            AS pg_last_12m_sdr_sourced_deal_count,
    COALESCE(pg_last_12m_ae_sourced_deal_count,0)             AS pg_last_12m_ae_sourced_deal_count,
    
    -- SAO metrics
    COALESCE(sao_last_12_month.last_12m_sao_deal_count,0)       AS last_12m_sao_deal_count,
    COALESCE(sao_last_12_month.last_12m_sao_net_arr,0)          AS last_12m_sao_net_arr,
    COALESCE(sao_last_12_month.last_12m_sao_booked_net_arr,0)   AS last_12m_sao_booked_net_arr, 
    COALESCE(sao_fy.fy_sao_deal_count,0)                        AS fy_sao_deal_count,
    COALESCE(sao_fy.fy_sao_net_arr,0)                           AS fy_sao_net_arr,
    COALESCE(sao_fy.fy_sao_booked_net_arr,0)                    AS fy_sao_booked_net_arr,
    
     -- LAM Dev Count Category
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN '0. <100'    
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN '1. [100-250)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN '2. [250-500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN '3. [500-1500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN '4. [1500-2500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN '5. [2500-3500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN '6. [3500-5000)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN '7. >5000'
    END AS lam_dev_count_bin_name,
    
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN 0
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN 100
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN 250
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN 500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN 1500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN 2500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN 3500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN 5000
    END AS lam_dev_count_bin_rank,      
    
    -- Public Sector
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 'Public'
        ELSE 'Private'
    END                     AS sector_type,
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 1
        ELSE 0
    END                     AS is_public_sector_flag

  FROM account_year_key AS ak
  INNER JOIN sfdc_accounts_xf AS a
    ON ak.account_id = a.account_id
  LEFT JOIN mart_crm_account AS upa_account
    ON a.ultimate_parent_account_id = upa_account.dim_crm_account_id
  LEFT JOIN sfdc_accounts_xf AS upa
    ON a.ultimate_parent_account_id = upa.account_id
  LEFT JOIN dim_crm_account AS dim_account
    ON ak.account_id = dim_account.dim_crm_account_id
  LEFT JOIN mart_crm_account
    ON ak.account_id = mart_crm_account.dim_crm_account_id
  LEFT JOIN sfdc_users_xf AS u
    ON a.owner_id = u.user_id
  LEFT JOIN sfdc_users_xf AS upa_owner
    ON upa.owner_id = upa_owner.user_id
  LEFT JOIN fy_atr_base
    ON fy_atr_base.account_id = ak.account_id
    AND fy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN last_12m_atr_base AS last_12m_atr_base
    ON last_12m_atr_base.account_id = ak.account_id
    AND last_12m_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN nfy_atr_base
    ON nfy_atr_base.account_id = ak.account_id
    AND nfy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN net_arr_last_12m
    ON net_arr_last_12m.account_id = ak.account_id
    AND net_arr_last_12m.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN op_forward_one_year AS op
    ON op.account_id = ak.account_id
    AND op.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_ytd AS pg
    ON pg.account_id = ak.account_id
    AND pg.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_last_12_months AS pg_ly
    ON pg_ly.account_id = ak.account_id
    AND pg_ly.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN arr_at_same_month AS arr
    ON arr.account_id = ak.account_id
    AND arr.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN fy_net_arr AS net_arr_fiscal
    ON net_arr_fiscal.account_id = ak.account_id
    AND net_arr_fiscal.report_fiscal_year = ak.report_fiscal_year
  -- SAOs
  LEFT JOIN sao_last_12_month 
    ON sao_last_12_month.account_id = ak.account_id
    AND sao_last_12_month.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN sao_fy
    ON sao_fy.account_id = ak.account_id
    AND sao_fy.report_fiscal_year = ak.report_fiscal_year

    -----------------------
-- Adjust for hierarchies split between different geos
), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    parent_crm_account_upa_state              AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM consolidated_accounts
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM consolidated_accounts child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM consolidated_accounts final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final
------------------------

), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_state 
        ELSE acc.parent_crm_account_upa_state
    END                                     AS upa_ad_state,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,
    
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,

    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    
    -- Customer score used in maps for account visualization
    MAX(acc.customer_score) AS customer_score,
    
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM consolidated_accounts acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)
, final AS (

  SELECT
      
    acc.*, 
    
    CASE 
      WHEN upa.arr > 0 AND upa.arr < 5000
        THEN '1. 0-5k ARR'
      WHEN upa.arr >= 5000 AND upa.arr < 10000
        THEN '2. 0-10k ARR'
      WHEN upa.arr >= 10000 AND upa.arr < 50000
        THEN '3. 10k-50k ARR'
      WHEN upa.arr >= 50000 AND upa.arr < 100000
        THEN '4. 50K-100k ARR'
      WHEN upa.arr >= 100000 AND upa.arr < 500000
        THEN '5. 100k-500k ARR'
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '6. 500k-1M ARR'     
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '7. >=1M ARR' 
      ELSE 'n/a'
    END    AS account_family_arr_bin_name,
    
    COALESCE(upa.potential_users,0)                 AS upa_potential_users,
    COALESCE(upa.licenses,0)                        AS upa_licenses,
    COALESCE(upa.linkedin_developer,0)              AS upa_linkedin_developer,
    COALESCE(upa.zi_developers,0)                   AS upa_zi_developers,
    COALESCE(upa.zi_revenue,0)                      AS upa_zi_revenue,
    COALESCE(upa.employees,0)                       AS upa_employees,
    COALESCE(upa.count_of_customers,0)              AS upa_count_of_customers,

    CASE
        WHEN upa.upa_id = acc.account_id
            THEN 1
        ELSE 0
    END                                     AS is_upa_flag,

    upa.is_customer_flag                    AS hierarchy_is_customer_flag,
    
    COALESCE(virtual.virtual_upa_id,acc.upa_id)                             AS virtual_upa_id,
    COALESCE(virtual.virtual_upa_name,acc.upa_name)                         AS virtual_upa_name,
    COALESCE(virtual.virtual_upa_segment,acc.parent_crm_account_sales_segment)                AS virtual_upa_ad_segment,
    COALESCE(virtual.virtual_upa_geo,acc.upa_user_geo)                      AS virtual_upa_geo,
    COALESCE(virtual.virtual_upa_region,acc.upa_user_region)                AS virtual_upa_region,
    COALESCE(virtual.virtual_upa_area,acc.upa_user_area)                    AS virtual_upa_area,
    COALESCE(virtual.virtual_upa_country,acc.crm_account_billing_country)   AS virtual_upa_ad_country,
    COALESCE(virtual.virtual_upa_state,acc.parent_crm_account_upa_state)    AS virtual_upa_ad_state,
    COALESCE(virtual.virtual_upa_zip_code,acc.parent_crm_account_upa_postal_code) AS virtual_upa_ad_zip_code,
    COALESCE(virtual.virtual_upa_industry,acc.upa_industry)                 AS virtual_upa_industry,
    COALESCE(virtual.virtual_upa_owner_name,acc.upa_owner_name)             AS virtual_upa_owner_name,
    COALESCE(virtual.virtual_upa_owner_title_category,acc.upa_owner_title_category)   AS virtual_upa_owner_title_category,
    COALESCE(virtual.virtual_upa_owner_id,acc.upa_owner_id)                 AS virtual_upa_owner_id, 
    CASE 
        WHEN virtual.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                                                     AS virtual_upa_type

  FROM consolidated_accounts acc
    LEFT JOIN consolidated_upa upa
        ON upa.upa_id = acc.upa_id
        AND upa.report_fiscal_year = acc.report_fiscal_year
    LEFT JOIN final_virtual_upa virtual
        ON virtual.account_id = acc.account_id
        AND virtual.report_fiscal_year = acc.report_fiscal_year

)

SELECT *
FROM finalc:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"wk_sales_report_metrics_summary_account_year"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","workspace",{"children":[["$","code",null,{"children":["$","a",null,{"children":"workspace"}]}],"Â "]}],["$","span","safe",{"children":[["$","code",null,{"children":["$","a",null,{"children":"safe"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PROD.restricted_safe_workspace_sales.report_metrics_summary_account_year"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"143 MB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-05 19:19UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"children":["This ","model"," is not currently documented"]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_SALES","name":"REPORT_METRICS_SUMMARY_ACCOUNT_YEAR","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORT_FISCAL_YEAR":{"type":"NUMBER","index":1,"name":"REPORT_FISCAL_YEAR","comment":null,"display_name":"report_fiscal_year"},"ACCOUNT_ID":{"type":"TEXT","index":2,"name":"ACCOUNT_ID","comment":null,"display_name":"account_id"},"ACCOUNT_NAME":{"type":"TEXT","index":3,"name":"ACCOUNT_NAME","comment":null,"display_name":"account_name"},"UPA_ID":{"type":"TEXT","index":4,"name":"UPA_ID","comment":null,"display_name":"upa_id"},"UPA_NAME":{"type":"TEXT","index":5,"name":"UPA_NAME","comment":null,"display_name":"upa_name"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":6,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"ABM_TIER":{"type":"TEXT","index":7,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":8,"name":"ULTIMATE_PARENT_ACCOUNT_ID","comment":null,"display_name":"ultimate_parent_account_id"},"ACCOUNT_OWNER_NAME":{"type":"TEXT","index":9,"name":"ACCOUNT_OWNER_NAME","comment":null,"display_name":"account_owner_name"},"ACCOUNT_OWNER_ID":{"type":"TEXT","index":10,"name":"ACCOUNT_OWNER_ID","comment":null,"display_name":"account_owner_id"},"ACCOUNT_OWNER_EMPLOYEE_NUMBER":{"type":"TEXT","index":11,"name":"ACCOUNT_OWNER_EMPLOYEE_NUMBER","comment":null,"display_name":"account_owner_employee_number"},"UPA_OWNER_NAME":{"type":"TEXT","index":12,"name":"UPA_OWNER_NAME","comment":null,"display_name":"upa_owner_name"},"UPA_OWNER_ID":{"type":"TEXT","index":13,"name":"UPA_OWNER_ID","comment":null,"display_name":"upa_owner_id"},"UPA_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":14,"name":"UPA_OWNER_TITLE_CATEGORY","comment":null,"display_name":"upa_owner_title_category"},"UPA_OWNER_EMPLOYEE_NUMBER":{"type":"TEXT","index":15,"name":"UPA_OWNER_EMPLOYEE_NUMBER","comment":null,"display_name":"upa_owner_employee_number"},"ACCOUNT_COUNTRY":{"type":"TEXT","index":16,"name":"ACCOUNT_COUNTRY","comment":null,"display_name":"account_country"},"ACCOUNT_ZIP_CODE":{"type":"TEXT","index":17,"name":"ACCOUNT_ZIP_CODE","comment":null,"display_name":"account_zip_code"},"ACCOUNT_STATE":{"type":"TEXT","index":18,"name":"ACCOUNT_STATE","comment":null,"display_name":"account_state"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":19,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":20,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":21,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":22,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":23,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":24,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":25,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":26,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":27,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"ACCOUNT_USER_GEO":{"type":"TEXT","index":28,"name":"ACCOUNT_USER_GEO","comment":null,"display_name":"account_user_geo"},"ACCOUNT_USER_REGION":{"type":"TEXT","index":29,"name":"ACCOUNT_USER_REGION","comment":null,"display_name":"account_user_region"},"ACCOUNT_USER_SEGMENT":{"type":"TEXT","index":30,"name":"ACCOUNT_USER_SEGMENT","comment":null,"display_name":"account_user_segment"},"ACCOUNT_USER_AREA":{"type":"TEXT","index":31,"name":"ACCOUNT_USER_AREA","comment":null,"display_name":"account_user_area"},"ACCOUNT_OWNER_ROLE":{"type":"TEXT","index":32,"name":"ACCOUNT_OWNER_ROLE","comment":null,"display_name":"account_owner_role"},"ACCOUNT_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":33,"name":"ACCOUNT_OWNER_TITLE_CATEGORY","comment":null,"display_name":"account_owner_title_category"},"ACCOUNT_INDUSTRY":{"type":"TEXT","index":34,"name":"ACCOUNT_INDUSTRY","comment":null,"display_name":"account_industry"},"UPA_USER_GEO":{"type":"TEXT","index":35,"name":"UPA_USER_GEO","comment":null,"display_name":"upa_user_geo"},"UPA_USER_REGION":{"type":"TEXT","index":36,"name":"UPA_USER_REGION","comment":null,"display_name":"upa_user_region"},"UPA_USER_SEGMENT":{"type":"TEXT","index":37,"name":"UPA_USER_SEGMENT","comment":null,"display_name":"upa_user_segment"},"UPA_USER_AREA":{"type":"TEXT","index":38,"name":"UPA_USER_AREA","comment":null,"display_name":"upa_user_area"},"UPA_USER_ROLE":{"type":"TEXT","index":39,"name":"UPA_USER_ROLE","comment":null,"display_name":"upa_user_role"},"UPA_INDUSTRY":{"type":"TEXT","index":40,"name":"UPA_INDUSTRY","comment":null,"display_name":"upa_industry"},"POTENTIAL_USERS":{"type":"FLOAT","index":41,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"LICENSES":{"type":"FLOAT","index":42,"name":"LICENSES","comment":null,"display_name":"licenses"},"LINKEDIN_DEVELOPER":{"type":"FLOAT","index":43,"name":"LINKEDIN_DEVELOPER","comment":null,"display_name":"linkedin_developer"},"ZI_DEVELOPERS":{"type":"FLOAT","index":44,"name":"ZI_DEVELOPERS","comment":null,"display_name":"zi_developers"},"ZI_REVENUE":{"type":"FLOAT","index":45,"name":"ZI_REVENUE","comment":null,"display_name":"zi_revenue"},"UPA_LAM_DEV_COUNT":{"type":"FLOAT","index":46,"name":"UPA_LAM_DEV_COUNT","comment":null,"display_name":"upa_lam_dev_count"},"PUBLIC_SECTOR_ACCOUNT_FLAG":{"type":"BOOLEAN","index":47,"name":"PUBLIC_SECTOR_ACCOUNT_FLAG","comment":null,"display_name":"public_sector_account_flag"},"PUBSEC_TYPE":{"type":"TEXT","index":48,"name":"PUBSEC_TYPE","comment":null,"display_name":"pubsec_type"},"POTENTIAL_LAM_ARR":{"type":"FLOAT","index":49,"name":"POTENTIAL_LAM_ARR","comment":null,"display_name":"potential_lam_arr"},"EMPLOYEES":{"type":"FLOAT","index":50,"name":"EMPLOYEES","comment":null,"display_name":"employees"},"ACCOUNT_FAMILY_ARR":{"type":"FLOAT","index":51,"name":"ACCOUNT_FAMILY_ARR","comment":null,"display_name":"account_family_arr"},"CALCULATED_DEVELOPER_COUNT":{"type":"FLOAT","index":52,"name":"CALCULATED_DEVELOPER_COUNT","comment":null,"display_name":"calculated_developer_count"},"CUSTOMER_SCORE":{"type":"FLOAT","index":53,"name":"CUSTOMER_SCORE","comment":null,"display_name":"customer_score"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":54,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"TECHNICAL_ACCOUNT_MANAGER_NAME":{"type":"TEXT","index":55,"name":"TECHNICAL_ACCOUNT_MANAGER_NAME","comment":null,"display_name":"technical_account_manager_name"},"HAS_TECHNICAL_ACCOUNT_MANAGER_FLAG":{"type":"NUMBER","index":56,"name":"HAS_TECHNICAL_ACCOUNT_MANAGER_FLAG","comment":null,"display_name":"has_technical_account_manager_flag"},"ACCOUNT_HEALTH_SCORE_COLOR":{"type":"TEXT","index":57,"name":"ACCOUNT_HEALTH_SCORE_COLOR","comment":null,"display_name":"account_health_score_color"},"ACCOUNT_HEALTH_NUMBER":{"type":"FLOAT","index":58,"name":"ACCOUNT_HEALTH_NUMBER","comment":null,"display_name":"account_health_number"},"FY_ATR":{"type":"FLOAT","index":59,"name":"FY_ATR","comment":null,"display_name":"fy_atr"},"NFY_ATR":{"type":"FLOAT","index":60,"name":"NFY_ATR","comment":null,"display_name":"nfy_atr"},"NFY_Q1_ATR":{"type":"FLOAT","index":61,"name":"NFY_Q1_ATR","comment":null,"display_name":"nfy_q1_atr"},"NFY_Q2_ATR":{"type":"FLOAT","index":62,"name":"NFY_Q2_ATR","comment":null,"display_name":"nfy_q2_atr"},"NFY_Q3_ATR":{"type":"FLOAT","index":63,"name":"NFY_Q3_ATR","comment":null,"display_name":"nfy_q3_atr"},"NFY_Q4_ATR":{"type":"FLOAT","index":64,"name":"NFY_Q4_ATR","comment":null,"display_name":"nfy_q4_atr"},"LAST_12M_ATR":{"type":"FLOAT","index":65,"name":"LAST_12M_ATR","comment":null,"display_name":"last_12m_atr"},"ARR":{"type":"FLOAT","index":66,"name":"ARR","comment":null,"display_name":"arr"},"ARR_CHANNEL":{"type":"FLOAT","index":67,"name":"ARR_CHANNEL","comment":null,"display_name":"arr_channel"},"ARR_DIRECT":{"type":"FLOAT","index":68,"name":"ARR_DIRECT","comment":null,"display_name":"arr_direct"},"PRODUCT_STARTER_ARR":{"type":"FLOAT","index":69,"name":"PRODUCT_STARTER_ARR","comment":null,"display_name":"product_starter_arr"},"PRODUCT_PREMIUM_ARR":{"type":"FLOAT","index":70,"name":"PRODUCT_PREMIUM_ARR","comment":null,"display_name":"product_premium_arr"},"PRODUCT_ULTIMATE_ARR":{"type":"FLOAT","index":71,"name":"PRODUCT_ULTIMATE_ARR","comment":null,"display_name":"product_ultimate_arr"},"IS_ULTIMATE_CUSTOMER_FLAG":{"type":"NUMBER","index":72,"name":"IS_ULTIMATE_CUSTOMER_FLAG","comment":null,"display_name":"is_ultimate_customer_flag"},"IS_PREMIUM_CUSTOMER_FLAG":{"type":"NUMBER","index":73,"name":"IS_PREMIUM_CUSTOMER_FLAG","comment":null,"display_name":"is_premium_customer_flag"},"DELIVERY_SELF_MANAGED_ARR":{"type":"FLOAT","index":74,"name":"DELIVERY_SELF_MANAGED_ARR","comment":null,"display_name":"delivery_self_managed_arr"},"DELIVERY_SAAS_ARR":{"type":"FLOAT","index":75,"name":"DELIVERY_SAAS_ARR","comment":null,"display_name":"delivery_saas_arr"},"IS_PROSPECT_FLAG":{"type":"NUMBER","index":76,"name":"IS_PROSPECT_FLAG","comment":null,"display_name":"is_prospect_flag"},"IS_CUSTOMER_FLAG":{"type":"NUMBER","index":77,"name":"IS_CUSTOMER_FLAG","comment":null,"display_name":"is_customer_flag"},"IS_OVER_5K_CUSTOMER_FLAG":{"type":"NUMBER","index":78,"name":"IS_OVER_5K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_5k_customer_flag"},"IS_OVER_10K_CUSTOMER_FLAG":{"type":"NUMBER","index":79,"name":"IS_OVER_10K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_10k_customer_flag"},"IS_OVER_50K_CUSTOMER_FLAG":{"type":"NUMBER","index":80,"name":"IS_OVER_50K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_50k_customer_flag"},"IS_OVER_100K_CUSTOMER_FLAG":{"type":"NUMBER","index":81,"name":"IS_OVER_100K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_100k_customer_flag"},"IS_OVER_500K_CUSTOMER_FLAG":{"type":"NUMBER","index":82,"name":"IS_OVER_500K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_500k_customer_flag"},"LAST_12M_BOOKED_NET_ARR":{"type":"FLOAT","index":83,"name":"LAST_12M_BOOKED_NET_ARR","comment":null,"display_name":"last_12m_booked_net_arr"},"LAST_12M_BOOKED_NON_WEB_NET_ARR":{"type":"FLOAT","index":84,"name":"LAST_12M_BOOKED_NON_WEB_NET_ARR","comment":null,"display_name":"last_12m_booked_non_web_net_arr"},"LAST_12M_BOOKED_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":85,"name":"LAST_12M_BOOKED_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_web_direct_sourced_net_arr"},"LAST_12M_BOOKED_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":86,"name":"LAST_12M_BOOKED_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_sourced_net_arr"},"LAST_12M_BOOKED_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":87,"name":"LAST_12M_BOOKED_SDR_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_sdr_sourced_net_arr"},"LAST_12M_BOOKED_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":88,"name":"LAST_12M_BOOKED_AE_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_ae_sourced_net_arr"},"LAST_12M_BOOKED_CHURN_CONTRACTION_NET_ARR":{"type":"FLOAT","index":89,"name":"LAST_12M_BOOKED_CHURN_CONTRACTION_NET_ARR","comment":null,"display_name":"last_12m_booked_churn_contraction_net_arr"},"LAST_12M_BOOKED_FO_NET_ARR":{"type":"FLOAT","index":90,"name":"LAST_12M_BOOKED_FO_NET_ARR","comment":null,"display_name":"last_12m_booked_fo_net_arr"},"LAST_12M_BOOKED_NEW_CONNECTED_NET_ARR":{"type":"FLOAT","index":91,"name":"LAST_12M_BOOKED_NEW_CONNECTED_NET_ARR","comment":null,"display_name":"last_12m_booked_new_connected_net_arr"},"LAST_12M_BOOKED_GROWTH_NET_ARR":{"type":"FLOAT","index":92,"name":"LAST_12M_BOOKED_GROWTH_NET_ARR","comment":null,"display_name":"last_12m_booked_growth_net_arr"},"LAST_12M_BOOKED_DEAL_COUNT":{"type":"NUMBER","index":93,"name":"LAST_12M_BOOKED_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_deal_count"},"LAST_12M_BOOKED_DIRECT_NET_ARR":{"type":"FLOAT","index":94,"name":"LAST_12M_BOOKED_DIRECT_NET_ARR","comment":null,"display_name":"last_12m_booked_direct_net_arr"},"LAST_12M_BOOKED_CHANNEL_NET_ARR":{"type":"FLOAT","index":95,"name":"LAST_12M_BOOKED_CHANNEL_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_net_arr"},"LAST_12M_BOOKED_CHANNEL_CO_SELL_NET_ARR":{"type":"FLOAT","index":96,"name":"LAST_12M_BOOKED_CHANNEL_CO_SELL_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_co_sell_net_arr"},"LAST_12M_BOOKED_DIRECT_DEAL_COUNT":{"type":"NUMBER","index":97,"name":"LAST_12M_BOOKED_DIRECT_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_direct_deal_count"},"LAST_12M_BOOKED_CHANNEL_DEAL_COUNT":{"type":"NUMBER","index":98,"name":"LAST_12M_BOOKED_CHANNEL_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_channel_deal_count"},"LAST_12M_BOOKED_CHURN_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":99,"name":"LAST_12M_BOOKED_CHURN_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_churn_contraction_deal_count"},"LAST_12M_BOOKED_RENEWAL_DEAL_COUNT":{"type":"NUMBER","index":100,"name":"LAST_12M_BOOKED_RENEWAL_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_renewal_deal_count"},"LAST_12M_BOOKED_TRX_COUNT":{"type":"NUMBER","index":101,"name":"LAST_12M_BOOKED_TRX_COUNT","comment":null,"display_name":"last_12m_booked_trx_count"},"LAST_12M_BOOKED_TRX_OVER_5K_COUNT":{"type":"NUMBER","index":102,"name":"LAST_12M_BOOKED_TRX_OVER_5K_COUNT","comment":null,"display_name":"last_12m_booked_trx_over_5k_count"},"LAST_12M_BOOKED_TRX_OVER_10K_COUNT":{"type":"NUMBER","index":103,"name":"LAST_12M_BOOKED_TRX_OVER_10K_COUNT","comment":null,"display_name":"last_12m_booked_trx_over_10k_count"},"LAST_12M_BOOKED_TRX_OVER_50K_COUNT":{"type":"NUMBER","index":104,"name":"LAST_12M_BOOKED_TRX_OVER_50K_COUNT","comment":null,"display_name":"last_12m_booked_trx_over_50k_count"},"FY_BOOKED_NET_ARR":{"type":"FLOAT","index":105,"name":"FY_BOOKED_NET_ARR","comment":null,"display_name":"fy_booked_net_arr"},"FY_BOOKED_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":106,"name":"FY_BOOKED_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_web_direct_sourced_net_arr"},"FY_BOOKED_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":107,"name":"FY_BOOKED_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_channel_sourced_net_arr"},"FY_BOOKED_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":108,"name":"FY_BOOKED_SDR_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_sdr_sourced_net_arr"},"FY_BOOKED_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":109,"name":"FY_BOOKED_AE_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_ae_sourced_net_arr"},"FY_BOOKED_CHURN_CONTRACTION_NET_ARR":{"type":"FLOAT","index":110,"name":"FY_BOOKED_CHURN_CONTRACTION_NET_ARR","comment":null,"display_name":"fy_booked_churn_contraction_net_arr"},"FY_BOOKED_FO_NET_ARR":{"type":"FLOAT","index":111,"name":"FY_BOOKED_FO_NET_ARR","comment":null,"display_name":"fy_booked_fo_net_arr"},"FY_BOOKED_NEW_CONNECTED_NET_ARR":{"type":"FLOAT","index":112,"name":"FY_BOOKED_NEW_CONNECTED_NET_ARR","comment":null,"display_name":"fy_booked_new_connected_net_arr"},"FY_BOOKED_GROWTH_NET_ARR":{"type":"FLOAT","index":113,"name":"FY_BOOKED_GROWTH_NET_ARR","comment":null,"display_name":"fy_booked_growth_net_arr"},"FY_BOOKED_DEAL_COUNT":{"type":"NUMBER","index":114,"name":"FY_BOOKED_DEAL_COUNT","comment":null,"display_name":"fy_booked_deal_count"},"FY_BOOKED_DIRECT_NET_ARR":{"type":"FLOAT","index":115,"name":"FY_BOOKED_DIRECT_NET_ARR","comment":null,"display_name":"fy_booked_direct_net_arr"},"FY_BOOKED_CHANNEL_NET_ARR":{"type":"FLOAT","index":116,"name":"FY_BOOKED_CHANNEL_NET_ARR","comment":null,"display_name":"fy_booked_channel_net_arr"},"FY_BOOKED_DIRECT_DEAL_COUNT":{"type":"NUMBER","index":117,"name":"FY_BOOKED_DIRECT_DEAL_COUNT","comment":null,"display_name":"fy_booked_direct_deal_count"},"FY_BOOKED_CHANNEL_DEAL_COUNT":{"type":"NUMBER","index":118,"name":"FY_BOOKED_CHANNEL_DEAL_COUNT","comment":null,"display_name":"fy_booked_channel_deal_count"},"TOTAL_OPEN_PIPE":{"type":"FLOAT","index":119,"name":"TOTAL_OPEN_PIPE","comment":null,"display_name":"total_open_pipe"},"TOTAL_COUNT_OPEN_DEALS_PIPE":{"type":"NUMBER","index":120,"name":"TOTAL_COUNT_OPEN_DEALS_PIPE","comment":null,"display_name":"total_count_open_deals_pipe"},"NFY_OPEN_PIPELINE":{"type":"FLOAT","index":121,"name":"NFY_OPEN_PIPELINE","comment":null,"display_name":"nfy_open_pipeline"},"FY_OPEN_PIPELINE":{"type":"FLOAT","index":122,"name":"FY_OPEN_PIPELINE","comment":null,"display_name":"fy_open_pipeline"},"NFY_COUNT_OPEN_DEALS":{"type":"FLOAT","index":123,"name":"NFY_COUNT_OPEN_DEALS","comment":null,"display_name":"nfy_count_open_deals"},"FY_COUNT_OPEN_DEALS":{"type":"FLOAT","index":124,"name":"FY_COUNT_OPEN_DEALS","comment":null,"display_name":"fy_count_open_deals"},"CUSTOMER_HAS_OPEN_PIPE_FLAG":{"type":"NUMBER","index":125,"name":"CUSTOMER_HAS_OPEN_PIPE_FLAG","comment":null,"display_name":"customer_has_open_pipe_flag"},"PROSPECT_HAS_OPEN_PIPE_FLAG":{"type":"NUMBER","index":126,"name":"PROSPECT_HAS_OPEN_PIPE_FLAG","comment":null,"display_name":"prospect_has_open_pipe_flag"},"PG_YTD_NET_ARR":{"type":"FLOAT","index":127,"name":"PG_YTD_NET_ARR","comment":null,"display_name":"pg_ytd_net_arr"},"PG_YTD_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":128,"name":"PG_YTD_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_web_direct_sourced_net_arr"},"PG_YTD_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":129,"name":"PG_YTD_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_channel_sourced_net_arr"},"PG_YTD_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":130,"name":"PG_YTD_SDR_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_sdr_sourced_net_arr"},"PG_YTD_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":131,"name":"PG_YTD_AE_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_ae_sourced_net_arr"},"PG_LAST_12M_NET_ARR":{"type":"FLOAT","index":132,"name":"PG_LAST_12M_NET_ARR","comment":null,"display_name":"pg_last_12m_net_arr"},"PG_LAST_12M_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":133,"name":"PG_LAST_12M_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_web_direct_sourced_net_arr"},"PG_LAST_12M_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":134,"name":"PG_LAST_12M_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_channel_sourced_net_arr"},"PG_LAST_12M_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":135,"name":"PG_LAST_12M_SDR_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_sdr_sourced_net_arr"},"PG_LAST_12M_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":136,"name":"PG_LAST_12M_AE_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_ae_sourced_net_arr"},"PG_LAST_12M_WEB_DIRECT_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":137,"name":"PG_LAST_12M_WEB_DIRECT_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_web_direct_sourced_deal_count"},"PG_LAST_12M_CHANNEL_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":138,"name":"PG_LAST_12M_CHANNEL_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_channel_sourced_deal_count"},"PG_LAST_12M_SDR_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":139,"name":"PG_LAST_12M_SDR_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_sdr_sourced_deal_count"},"PG_LAST_12M_AE_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":140,"name":"PG_LAST_12M_AE_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_ae_sourced_deal_count"},"LAST_12M_SAO_DEAL_COUNT":{"type":"NUMBER","index":141,"name":"LAST_12M_SAO_DEAL_COUNT","comment":null,"display_name":"last_12m_sao_deal_count"},"LAST_12M_SAO_NET_ARR":{"type":"FLOAT","index":142,"name":"LAST_12M_SAO_NET_ARR","comment":null,"display_name":"last_12m_sao_net_arr"},"LAST_12M_SAO_BOOKED_NET_ARR":{"type":"FLOAT","index":143,"name":"LAST_12M_SAO_BOOKED_NET_ARR","comment":null,"display_name":"last_12m_sao_booked_net_arr"},"FY_SAO_DEAL_COUNT":{"type":"NUMBER","index":144,"name":"FY_SAO_DEAL_COUNT","comment":null,"display_name":"fy_sao_deal_count"},"FY_SAO_NET_ARR":{"type":"FLOAT","index":145,"name":"FY_SAO_NET_ARR","comment":null,"display_name":"fy_sao_net_arr"},"FY_SAO_BOOKED_NET_ARR":{"type":"FLOAT","index":146,"name":"FY_SAO_BOOKED_NET_ARR","comment":null,"display_name":"fy_sao_booked_net_arr"},"LAM_DEV_COUNT_BIN_NAME":{"type":"TEXT","index":147,"name":"LAM_DEV_COUNT_BIN_NAME","comment":null,"display_name":"lam_dev_count_bin_name"},"LAM_DEV_COUNT_BIN_RANK":{"type":"NUMBER","index":148,"name":"LAM_DEV_COUNT_BIN_RANK","comment":null,"display_name":"lam_dev_count_bin_rank"},"SECTOR_TYPE":{"type":"TEXT","index":149,"name":"SECTOR_TYPE","comment":null,"display_name":"sector_type"},"IS_PUBLIC_SECTOR_FLAG":{"type":"NUMBER","index":150,"name":"IS_PUBLIC_SECTOR_FLAG","comment":null,"display_name":"is_public_sector_flag"},"ACCOUNT_FAMILY_ARR_BIN_NAME":{"type":"TEXT","index":151,"name":"ACCOUNT_FAMILY_ARR_BIN_NAME","comment":null,"display_name":"account_family_arr_bin_name"},"UPA_POTENTIAL_USERS":{"type":"FLOAT","index":152,"name":"UPA_POTENTIAL_USERS","comment":null,"display_name":"upa_potential_users"},"UPA_LICENSES":{"type":"FLOAT","index":153,"name":"UPA_LICENSES","comment":null,"display_name":"upa_licenses"},"UPA_LINKEDIN_DEVELOPER":{"type":"FLOAT","index":154,"name":"UPA_LINKEDIN_DEVELOPER","comment":null,"display_name":"upa_linkedin_developer"},"UPA_ZI_DEVELOPERS":{"type":"FLOAT","index":155,"name":"UPA_ZI_DEVELOPERS","comment":null,"display_name":"upa_zi_developers"},"UPA_ZI_REVENUE":{"type":"FLOAT","index":156,"name":"UPA_ZI_REVENUE","comment":null,"display_name":"upa_zi_revenue"},"UPA_EMPLOYEES":{"type":"FLOAT","index":157,"name":"UPA_EMPLOYEES","comment":null,"display_name":"upa_employees"},"UPA_COUNT_OF_CUSTOMERS":{"type":"NUMBER","index":158,"name":"UPA_COUNT_OF_CUSTOMERS","comment":null,"display_name":"upa_count_of_customers"},"IS_UPA_FLAG":{"type":"NUMBER","index":159,"name":"IS_UPA_FLAG","comment":null,"display_name":"is_upa_flag"},"HIERARCHY_IS_CUSTOMER_FLAG":{"type":"NUMBER","index":160,"name":"HIERARCHY_IS_CUSTOMER_FLAG","comment":null,"display_name":"hierarchy_is_customer_flag"},"VIRTUAL_UPA_ID":{"type":"TEXT","index":161,"name":"VIRTUAL_UPA_ID","comment":null,"display_name":"virtual_upa_id"},"VIRTUAL_UPA_NAME":{"type":"TEXT","index":162,"name":"VIRTUAL_UPA_NAME","comment":null,"display_name":"virtual_upa_name"},"VIRTUAL_UPA_AD_SEGMENT":{"type":"TEXT","index":163,"name":"VIRTUAL_UPA_AD_SEGMENT","comment":null,"display_name":"virtual_upa_ad_segment"},"VIRTUAL_UPA_GEO":{"type":"TEXT","index":164,"name":"VIRTUAL_UPA_GEO","comment":null,"display_name":"virtual_upa_geo"},"VIRTUAL_UPA_REGION":{"type":"TEXT","index":165,"name":"VIRTUAL_UPA_REGION","comment":null,"display_name":"virtual_upa_region"},"VIRTUAL_UPA_AREA":{"type":"TEXT","index":166,"name":"VIRTUAL_UPA_AREA","comment":null,"display_name":"virtual_upa_area"},"VIRTUAL_UPA_AD_COUNTRY":{"type":"TEXT","index":167,"name":"VIRTUAL_UPA_AD_COUNTRY","comment":null,"display_name":"virtual_upa_ad_country"},"VIRTUAL_UPA_AD_STATE":{"type":"TEXT","index":168,"name":"VIRTUAL_UPA_AD_STATE","comment":null,"display_name":"virtual_upa_ad_state"},"VIRTUAL_UPA_AD_ZIP_CODE":{"type":"TEXT","index":169,"name":"VIRTUAL_UPA_AD_ZIP_CODE","comment":null,"display_name":"virtual_upa_ad_zip_code"},"VIRTUAL_UPA_INDUSTRY":{"type":"TEXT","index":170,"name":"VIRTUAL_UPA_INDUSTRY","comment":null,"display_name":"virtual_upa_industry"},"VIRTUAL_UPA_OWNER_NAME":{"type":"TEXT","index":171,"name":"VIRTUAL_UPA_OWNER_NAME","comment":null,"display_name":"virtual_upa_owner_name"},"VIRTUAL_UPA_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":172,"name":"VIRTUAL_UPA_OWNER_TITLE_CATEGORY","comment":null,"display_name":"virtual_upa_owner_title_category"},"VIRTUAL_UPA_OWNER_ID":{"type":"TEXT","index":173,"name":"VIRTUAL_UPA_OWNER_ID","comment":null,"display_name":"virtual_upa_owner_id"},"VIRTUAL_UPA_TYPE":{"type":"TEXT","index":174,"name":"VIRTUAL_UPA_TYPE","comment":null,"display_name":"virtual_upa_type"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-05 19:19UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":150163456,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year","raw_sql":"$10","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["source.gitlab_snowflake.salesforce.account","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_snapshot_history_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_snapshot_history_xf","model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.mart_arr","model.gitlab_snowflake.mart_arr","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.mart_crm_account","model.gitlab_snowflake.mart_crm_account","model.gitlab_snowflake.sfdc_accounts_xf","model.gitlab_snowflake.sfdc_accounts_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf"]},"config":{"enabled":true,"alias":"report_metrics_summary_account_year","schema":"restricted_safe_workspace_sales","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","restricted_safe","wk_sales_report_metrics_summary_account_year"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_account_year.sql","original_file_path":"models/workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_account_year.sql","name":"wk_sales_report_metrics_summary_account_year","alias":"report_metrics_summary_account_year","checksum":{"name":"sha256","checksum":"6812345d70a8e300218d27de43e9fa9c567384a17a6f3141cfdf156c749035c0"},"tags":["workspace","safe"],"refs":[["wk_sales_date_details"],["wk_sales_date_details"],["wk_sales_sfdc_opportunity_xf"],["wk_sales_sfdc_opportunity_xf"],["wk_sales_sfdc_opportunity_snapshot_history_xf"],["wk_sales_sfdc_opportunity_snapshot_history_xf"],["mart_available_to_renew"],["mart_available_to_renew"],["dim_subscription"],["dim_subscription"],["mart_arr"],["mart_arr"],["dim_crm_account"],["dim_crm_account"],["mart_crm_account"],["mart_crm_account"],["sfdc_accounts_xf"],["sfdc_accounts_xf"],["wk_sales_sfdc_users_xf"],["wk_sales_sfdc_users_xf"]],"sources":[["salesforce","account"]],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_account_year.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"report_metrics_summary_account_year"},"created_at":1689033679.6211755,"compiled_sql":"$11","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_sales.report_metrics_summary_account_year","label":"wk_sales_report_metrics_summary_account_year"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_SALES","name":"REPORT_METRICS_SUMMARY_UPA_YEAR","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORT_FISCAL_YEAR":{"type":"NUMBER","index":1,"name":"REPORT_FISCAL_YEAR","comment":null,"display_name":"report_fiscal_year"},"UPA_TYPE":{"type":"TEXT","index":2,"name":"UPA_TYPE","comment":null,"display_name":"upa_type"},"UPA_ID":{"type":"TEXT","index":3,"name":"UPA_ID","comment":null,"display_name":"upa_id"},"UPA_NAME":{"type":"TEXT","index":4,"name":"UPA_NAME","comment":null,"display_name":"upa_name"},"UPA_OWNER_NAME":{"type":"TEXT","index":5,"name":"UPA_OWNER_NAME","comment":null,"display_name":"upa_owner_name"},"UPA_OWNER_ID":{"type":"TEXT","index":6,"name":"UPA_OWNER_ID","comment":null,"display_name":"upa_owner_id"},"UPA_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":7,"name":"UPA_OWNER_TITLE_CATEGORY","comment":null,"display_name":"upa_owner_title_category"},"UPA_INDUSTRY":{"type":"TEXT","index":8,"name":"UPA_INDUSTRY","comment":null,"display_name":"upa_industry"},"UPA_AD_SEGMENT":{"type":"TEXT","index":9,"name":"UPA_AD_SEGMENT","comment":null,"display_name":"upa_ad_segment"},"UPA_AD_GEO":{"type":"TEXT","index":10,"name":"UPA_AD_GEO","comment":null,"display_name":"upa_ad_geo"},"UPA_AD_REGION":{"type":"TEXT","index":11,"name":"UPA_AD_REGION","comment":null,"display_name":"upa_ad_region"},"UPA_AD_AREA":{"type":"TEXT","index":12,"name":"UPA_AD_AREA","comment":null,"display_name":"upa_ad_area"},"UPA_AD_COUNTRY":{"type":"TEXT","index":13,"name":"UPA_AD_COUNTRY","comment":null,"display_name":"upa_ad_country"},"UPA_AD_ZIP_CODE":{"type":"TEXT","index":14,"name":"UPA_AD_ZIP_CODE","comment":null,"display_name":"upa_ad_zip_code"},"UPA_USER_SEGMENT":{"type":"TEXT","index":15,"name":"UPA_USER_SEGMENT","comment":null,"display_name":"upa_user_segment"},"UPA_USER_GEO":{"type":"TEXT","index":16,"name":"UPA_USER_GEO","comment":null,"display_name":"upa_user_geo"},"UPA_USER_REGION":{"type":"TEXT","index":17,"name":"UPA_USER_REGION","comment":null,"display_name":"upa_user_region"},"UPA_USER_AREA":{"type":"TEXT","index":18,"name":"UPA_USER_AREA","comment":null,"display_name":"upa_user_area"},"LAM_DEV_COUNT_BIN_RANK":{"type":"NUMBER","index":19,"name":"LAM_DEV_COUNT_BIN_RANK","comment":null,"display_name":"lam_dev_count_bin_rank"},"LAM_DEV_COUNT_BIN_NAME":{"type":"TEXT","index":20,"name":"LAM_DEV_COUNT_BIN_NAME","comment":null,"display_name":"lam_dev_count_bin_name"},"SECTOR_TYPE":{"type":"TEXT","index":21,"name":"SECTOR_TYPE","comment":null,"display_name":"sector_type"},"IS_PUBLIC_SECTOR_FLAG":{"type":"NUMBER","index":22,"name":"IS_PUBLIC_SECTOR_FLAG","comment":null,"display_name":"is_public_sector_flag"},"POTENTIAL_USERS":{"type":"FLOAT","index":23,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"LICENSES":{"type":"FLOAT","index":24,"name":"LICENSES","comment":null,"display_name":"licenses"},"LINKEDIN_DEVELOPER":{"type":"FLOAT","index":25,"name":"LINKEDIN_DEVELOPER","comment":null,"display_name":"linkedin_developer"},"ZI_DEVELOPERS":{"type":"FLOAT","index":26,"name":"ZI_DEVELOPERS","comment":null,"display_name":"zi_developers"},"ZI_REVENUE":{"type":"FLOAT","index":27,"name":"ZI_REVENUE","comment":null,"display_name":"zi_revenue"},"EMPLOYEES":{"type":"FLOAT","index":28,"name":"EMPLOYEES","comment":null,"display_name":"employees"},"UPA_LAM_DEV_COUNT":{"type":"FLOAT","index":29,"name":"UPA_LAM_DEV_COUNT","comment":null,"display_name":"upa_lam_dev_count"},"COUNT_TECHNICAL_ACCOUNT_MANAGERS":{"type":"NUMBER","index":30,"name":"COUNT_TECHNICAL_ACCOUNT_MANAGERS","comment":null,"display_name":"count_technical_account_managers"},"FY_ATR":{"type":"FLOAT","index":31,"name":"FY_ATR","comment":null,"display_name":"fy_atr"},"NFY_ATR":{"type":"FLOAT","index":32,"name":"NFY_ATR","comment":null,"display_name":"nfy_atr"},"NFY_Q1_ATR":{"type":"FLOAT","index":33,"name":"NFY_Q1_ATR","comment":null,"display_name":"nfy_q1_atr"},"NFY_Q2_ATR":{"type":"FLOAT","index":34,"name":"NFY_Q2_ATR","comment":null,"display_name":"nfy_q2_atr"},"NFY_Q3_ATR":{"type":"FLOAT","index":35,"name":"NFY_Q3_ATR","comment":null,"display_name":"nfy_q3_atr"},"NFY_Q4_ATR":{"type":"FLOAT","index":36,"name":"NFY_Q4_ATR","comment":null,"display_name":"nfy_q4_atr"},"ARR":{"type":"FLOAT","index":37,"name":"ARR","comment":null,"display_name":"arr"},"IS_PROSPECT_FLAG":{"type":"NUMBER","index":38,"name":"IS_PROSPECT_FLAG","comment":null,"display_name":"is_prospect_flag"},"IS_CUSTOMER_FLAG":{"type":"NUMBER","index":39,"name":"IS_CUSTOMER_FLAG","comment":null,"display_name":"is_customer_flag"},"IS_OVER_5K_CUSTOMER_FLAG":{"type":"NUMBER","index":40,"name":"IS_OVER_5K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_5k_customer_flag"},"IS_OVER_10K_CUSTOMER_FLAG":{"type":"NUMBER","index":41,"name":"IS_OVER_10K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_10k_customer_flag"},"IS_OVER_50K_CUSTOMER_FLAG":{"type":"NUMBER","index":42,"name":"IS_OVER_50K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_50k_customer_flag"},"IS_OVER_500K_CUSTOMER_FLAG":{"type":"NUMBER","index":43,"name":"IS_OVER_500K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_500k_customer_flag"},"COUNT_OVER_5K_CUSTOMERS":{"type":"NUMBER","index":44,"name":"COUNT_OVER_5K_CUSTOMERS","comment":null,"display_name":"count_over_5k_customers"},"COUNT_OVER_10K_CUSTOMERS":{"type":"NUMBER","index":45,"name":"COUNT_OVER_10K_CUSTOMERS","comment":null,"display_name":"count_over_10k_customers"},"COUNT_OVER_50K_CUSTOMERS":{"type":"NUMBER","index":46,"name":"COUNT_OVER_50K_CUSTOMERS","comment":null,"display_name":"count_over_50k_customers"},"COUNT_OVER_500K_CUSTOMERS":{"type":"NUMBER","index":47,"name":"COUNT_OVER_500K_CUSTOMERS","comment":null,"display_name":"count_over_500k_customers"},"COUNT_OF_PROSPECTS":{"type":"NUMBER","index":48,"name":"COUNT_OF_PROSPECTS","comment":null,"display_name":"count_of_prospects"},"COUNT_OF_CUSTOMERS":{"type":"NUMBER","index":49,"name":"COUNT_OF_CUSTOMERS","comment":null,"display_name":"count_of_customers"},"ARR_CHANNEL":{"type":"FLOAT","index":50,"name":"ARR_CHANNEL","comment":null,"display_name":"arr_channel"},"ARR_DIRECT":{"type":"FLOAT","index":51,"name":"ARR_DIRECT","comment":null,"display_name":"arr_direct"},"PRODUCT_STARTER_ARR":{"type":"FLOAT","index":52,"name":"PRODUCT_STARTER_ARR","comment":null,"display_name":"product_starter_arr"},"PRODUCT_PREMIUM_ARR":{"type":"FLOAT","index":53,"name":"PRODUCT_PREMIUM_ARR","comment":null,"display_name":"product_premium_arr"},"PRODUCT_ULTIMATE_ARR":{"type":"FLOAT","index":54,"name":"PRODUCT_ULTIMATE_ARR","comment":null,"display_name":"product_ultimate_arr"},"DELIVERY_SELF_MANAGED_ARR":{"type":"FLOAT","index":55,"name":"DELIVERY_SELF_MANAGED_ARR","comment":null,"display_name":"delivery_self_managed_arr"},"DELIVERY_SAAS_ARR":{"type":"FLOAT","index":56,"name":"DELIVERY_SAAS_ARR","comment":null,"display_name":"delivery_saas_arr"},"LAST_12M_BOOKED_NET_ARR":{"type":"FLOAT","index":57,"name":"LAST_12M_BOOKED_NET_ARR","comment":null,"display_name":"last_12m_booked_net_arr"},"LAST_12M_BOOKED_NON_WEB_NET_ARR":{"type":"FLOAT","index":58,"name":"LAST_12M_BOOKED_NON_WEB_NET_ARR","comment":null,"display_name":"last_12m_booked_non_web_net_arr"},"LAST_12M_BOOKED_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":59,"name":"LAST_12M_BOOKED_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_web_direct_sourced_net_arr"},"LAST_12M_BOOKED_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":60,"name":"LAST_12M_BOOKED_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_sourced_net_arr"},"LAST_12M_BOOKED_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":61,"name":"LAST_12M_BOOKED_SDR_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_sdr_sourced_net_arr"},"LAST_12M_BOOKED_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":62,"name":"LAST_12M_BOOKED_AE_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_ae_sourced_net_arr"},"LAST_12M_BOOKED_CHURN_CONTRACTION_NET_ARR":{"type":"FLOAT","index":63,"name":"LAST_12M_BOOKED_CHURN_CONTRACTION_NET_ARR","comment":null,"display_name":"last_12m_booked_churn_contraction_net_arr"},"LAST_12M_BOOKED_FO_NET_ARR":{"type":"FLOAT","index":64,"name":"LAST_12M_BOOKED_FO_NET_ARR","comment":null,"display_name":"last_12m_booked_fo_net_arr"},"LAST_12M_BOOKED_NEW_CONNECTED_NET_ARR":{"type":"FLOAT","index":65,"name":"LAST_12M_BOOKED_NEW_CONNECTED_NET_ARR","comment":null,"display_name":"last_12m_booked_new_connected_net_arr"},"LAST_12M_BOOKED_GROWTH_NET_ARR":{"type":"FLOAT","index":66,"name":"LAST_12M_BOOKED_GROWTH_NET_ARR","comment":null,"display_name":"last_12m_booked_growth_net_arr"},"LAST_12M_BOOKED_DEAL_COUNT":{"type":"NUMBER","index":67,"name":"LAST_12M_BOOKED_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_deal_count"},"LAST_12M_BOOKED_DIRECT_NET_ARR":{"type":"FLOAT","index":68,"name":"LAST_12M_BOOKED_DIRECT_NET_ARR","comment":null,"display_name":"last_12m_booked_direct_net_arr"},"LAST_12M_BOOKED_CHANNEL_NET_ARR":{"type":"FLOAT","index":69,"name":"LAST_12M_BOOKED_CHANNEL_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_net_arr"},"LAST_12M_ATR":{"type":"FLOAT","index":70,"name":"LAST_12M_ATR","comment":null,"display_name":"last_12m_atr"},"FY_BOOKED_NET_ARR":{"type":"FLOAT","index":71,"name":"FY_BOOKED_NET_ARR","comment":null,"display_name":"fy_booked_net_arr"},"FY_BOOKED_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":72,"name":"FY_BOOKED_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_web_direct_sourced_net_arr"},"FY_BOOKED_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":73,"name":"FY_BOOKED_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_channel_sourced_net_arr"},"FY_BOOKED_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":74,"name":"FY_BOOKED_SDR_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_sdr_sourced_net_arr"},"FY_BOOKED_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":75,"name":"FY_BOOKED_AE_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_ae_sourced_net_arr"},"FY_BOOKED_CHURN_CONTRACTION_NET_ARR":{"type":"FLOAT","index":76,"name":"FY_BOOKED_CHURN_CONTRACTION_NET_ARR","comment":null,"display_name":"fy_booked_churn_contraction_net_arr"},"FY_BOOKED_FO_NET_ARR":{"type":"FLOAT","index":77,"name":"FY_BOOKED_FO_NET_ARR","comment":null,"display_name":"fy_booked_fo_net_arr"},"FY_BOOKED_NEW_CONNECTED_NET_ARR":{"type":"FLOAT","index":78,"name":"FY_BOOKED_NEW_CONNECTED_NET_ARR","comment":null,"display_name":"fy_booked_new_connected_net_arr"},"FY_BOOKED_GROWTH_NET_ARR":{"type":"FLOAT","index":79,"name":"FY_BOOKED_GROWTH_NET_ARR","comment":null,"display_name":"fy_booked_growth_net_arr"},"FY_BOOKED_DEAL_COUNT":{"type":"NUMBER","index":80,"name":"FY_BOOKED_DEAL_COUNT","comment":null,"display_name":"fy_booked_deal_count"},"FY_BOOKED_DIRECT_NET_ARR":{"type":"FLOAT","index":81,"name":"FY_BOOKED_DIRECT_NET_ARR","comment":null,"display_name":"fy_booked_direct_net_arr"},"FY_BOOKED_CHANNEL_NET_ARR":{"type":"FLOAT","index":82,"name":"FY_BOOKED_CHANNEL_NET_ARR","comment":null,"display_name":"fy_booked_channel_net_arr"},"FY_BOOKED_DIRECT_DEAL_COUNT":{"type":"NUMBER","index":83,"name":"FY_BOOKED_DIRECT_DEAL_COUNT","comment":null,"display_name":"fy_booked_direct_deal_count"},"FY_BOOKED_CHANNEL_DEAL_COUNT":{"type":"NUMBER","index":84,"name":"FY_BOOKED_CHANNEL_DEAL_COUNT","comment":null,"display_name":"fy_booked_channel_deal_count"},"TOTAL_OPEN_PIPE":{"type":"FLOAT","index":85,"name":"TOTAL_OPEN_PIPE","comment":null,"display_name":"total_open_pipe"},"TOTAL_COUNT_OPEN_DEALS_PIPE":{"type":"NUMBER","index":86,"name":"TOTAL_COUNT_OPEN_DEALS_PIPE","comment":null,"display_name":"total_count_open_deals_pipe"},"NFY_OPEN_PIPELINE":{"type":"FLOAT","index":87,"name":"NFY_OPEN_PIPELINE","comment":null,"display_name":"nfy_open_pipeline"},"FY_OPEN_PIPELINE":{"type":"FLOAT","index":88,"name":"FY_OPEN_PIPELINE","comment":null,"display_name":"fy_open_pipeline"},"NFY_COUNT_OPEN_DEALS":{"type":"FLOAT","index":89,"name":"NFY_COUNT_OPEN_DEALS","comment":null,"display_name":"nfy_count_open_deals"},"FY_COUNT_OPEN_DEALS":{"type":"FLOAT","index":90,"name":"FY_COUNT_OPEN_DEALS","comment":null,"display_name":"fy_count_open_deals"},"CUSTOMER_HAS_OPEN_PIPE_FLAG":{"type":"NUMBER","index":91,"name":"CUSTOMER_HAS_OPEN_PIPE_FLAG","comment":null,"display_name":"customer_has_open_pipe_flag"},"PROSPECT_HAS_OPEN_PIPE_FLAG":{"type":"NUMBER","index":92,"name":"PROSPECT_HAS_OPEN_PIPE_FLAG","comment":null,"display_name":"prospect_has_open_pipe_flag"},"PG_YTD_NET_ARR":{"type":"FLOAT","index":93,"name":"PG_YTD_NET_ARR","comment":null,"display_name":"pg_ytd_net_arr"},"PG_YTD_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":94,"name":"PG_YTD_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_web_direct_sourced_net_arr"},"PG_YTD_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":95,"name":"PG_YTD_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_channel_sourced_net_arr"},"PG_YTD_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":96,"name":"PG_YTD_SDR_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_sdr_sourced_net_arr"},"PG_YTD_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":97,"name":"PG_YTD_AE_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_ae_sourced_net_arr"},"PG_LAST_12M_NET_ARR":{"type":"FLOAT","index":98,"name":"PG_LAST_12M_NET_ARR","comment":null,"display_name":"pg_last_12m_net_arr"},"PG_LAST_12M_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":99,"name":"PG_LAST_12M_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_web_direct_sourced_net_arr"},"PG_LAST_12M_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":100,"name":"PG_LAST_12M_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_channel_sourced_net_arr"},"PG_LAST_12M_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":101,"name":"PG_LAST_12M_SDR_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_sdr_sourced_net_arr"},"PG_LAST_12M_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":102,"name":"PG_LAST_12M_AE_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_ae_sourced_net_arr"},"LAST_12M_SAO_DEAL_COUNT":{"type":"NUMBER","index":103,"name":"LAST_12M_SAO_DEAL_COUNT","comment":null,"display_name":"last_12m_sao_deal_count"},"LAST_12M_SAO_NET_ARR":{"type":"FLOAT","index":104,"name":"LAST_12M_SAO_NET_ARR","comment":null,"display_name":"last_12m_sao_net_arr"},"LAST_12M_SAO_BOOKED_NET_ARR":{"type":"FLOAT","index":105,"name":"LAST_12M_SAO_BOOKED_NET_ARR","comment":null,"display_name":"last_12m_sao_booked_net_arr"},"FY_SAO_DEAL_COUNT":{"type":"NUMBER","index":106,"name":"FY_SAO_DEAL_COUNT","comment":null,"display_name":"fy_sao_deal_count"},"FY_SAO_NET_ARR":{"type":"FLOAT","index":107,"name":"FY_SAO_NET_ARR","comment":null,"display_name":"fy_sao_net_arr"},"FY_SAO_BOOKED_NET_ARR":{"type":"FLOAT","index":108,"name":"FY_SAO_BOOKED_NET_ARR","comment":null,"display_name":"fy_sao_booked_net_arr"},"UPA_AD_TERRITORY":{"type":"TEXT","index":109,"name":"UPA_AD_TERRITORY","comment":null,"display_name":"upa_ad_territory"},"UPA_AD_STATE_CODE":{"type":"TEXT","index":110,"name":"UPA_AD_STATE_CODE","comment":null,"display_name":"upa_ad_state_code"},"UPA_AD_STATE_NAME":{"type":"TEXT","index":111,"name":"UPA_AD_STATE_NAME","comment":null,"display_name":"upa_ad_state_name"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-05 19:19UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":64593920,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_report_metrics_summary_upa_year","raw_sql":"$13","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["source.gitlab_snowflake.salesforce.account","model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year","model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year"]},"config":{"enabled":true,"alias":"report_metrics_summary_upa_year","schema":"restricted_safe_workspace_sales","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","restricted_safe","wk_sales_report_metrics_summary_upa_year"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_upa_year.sql","original_file_path":"models/workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_upa_year.sql","name":"wk_sales_report_metrics_summary_upa_year","alias":"report_metrics_summary_upa_year","checksum":{"name":"sha256","checksum":"c4c0db34efd76bb10929c0f2e6575db98ac0e26e26e9f752d57ce38ba3a7d357"},"tags":["workspace","safe"],"refs":[["wk_sales_report_metrics_summary_account_year"],["wk_sales_report_metrics_summary_account_year"]],"sources":[["salesforce","account"]],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_upa_year.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"report_metrics_summary_upa_year"},"created_at":1689033679.688886,"compiled_sql":"$14","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_sales.report_metrics_summary_upa_year","label":"wk_sales_report_metrics_summary_upa_year"}]},"node":{"resource_type":"model","name":"wk_sales_report_metrics_summary_account_year","unique_id":"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_SUBSCRIPTION","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":1,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a version of a subscription","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_subscription_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"subscription_version","comment":null,"description":"The version number of the subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_version"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"dim_crm_account_id","comment":null,"description":"account id from SFDC identifing the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":5,"name":"dim_billing_account_id","comment":null,"description":"The id of the Zuora account the subscription is associated with the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_BILLING_ACCOUNT_ID_INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":6,"name":"DIM_BILLING_ACCOUNT_ID_INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"dim_billing_account_id_invoice_owner_account"},"DIM_BILLING_ACCOUNT_ID_CREATOR_ACCOUNT":{"type":"TEXT","index":7,"name":"DIM_BILLING_ACCOUNT_ID_CREATOR_ACCOUNT","comment":null,"display_name":"dim_billing_account_id_creator_account"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":8,"name":"dim_crm_opportunity_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id"},"DIM_CRM_OPPORTUNITY_ID_CURRENT_OPEN_RENEWAL":{"type":"TEXT","index":9,"name":"dim_crm_opportunity_id_current_open_renewal","comment":null,"description":"The current open renewal opportunity mapped to a subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id_current_open_renewal"},"DIM_CRM_OPPORTUNITY_ID_CLOSED_LOST_RENEWAL":{"type":"TEXT","index":10,"name":"dim_crm_opportunity_id_closed_lost_renewal","comment":null,"description":"The closed lost renewal opportunity, where applicable, mapped mapped to a subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id_closed_lost_renewal"},"DIM_AMENDMENT_ID_SUBSCRIPTION":{"type":"TEXT","index":11,"name":"DIM_AMENDMENT_ID_SUBSCRIPTION","comment":null,"display_name":"dim_amendment_id_subscription"},"CREATED_BY_ID":{"type":"TEXT","index":12,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"UPDATED_BY_ID":{"type":"TEXT","index":13,"name":"UPDATED_BY_ID","comment":null,"display_name":"updated_by_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":14,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"DIM_SUBSCRIPTION_ID_PREVIOUS":{"type":"TEXT","index":15,"name":"dim_subscription_id_previous","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_subscription_id_previous"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":16,"name":"subscription_name_slugify","comment":null,"description":"The unique identifier of the subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_name_slugify"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":17,"name":"subscription_status","comment":null,"description":"The status of the subscription","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"accepted_values","short":"A","label":"Accepted Values: Active, Cancelled, Draft, Expired"}],"display_name":"subscription_status"},"NAMESPACE_ID":{"type":"TEXT","index":18,"name":"namespace_id","comment":null,"description":"The id of the namespace related to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":19,"name":"namespace_name","comment":null,"description":"The namespace related to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME":{"type":"TEXT","index":20,"name":"zuora_renewal_subscription_name","comment":null,"description":"name of the linked subscription that renews the prior subscription in a lineage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME_SLUGIFY":{"type":"ARRAY","index":21,"name":"zuora_renewal_subscription_name_slugify","comment":null,"description":"name of the linked subscription that renews the prior subscription in a lineage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name_slugify"},"CURRENT_TERM":{"type":"NUMBER","index":22,"name":"CURRENT_TERM","comment":null,"display_name":"current_term"},"RENEWAL_TERM":{"type":"NUMBER","index":23,"name":"renewal_term","comment":null,"description":"The length of the period for the subscription renewal term","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_term"},"RENEWAL_TERM_PERIOD_TYPE":{"type":"TEXT","index":24,"name":"renewal_term_period_type","comment":null,"description":"The period type for the subscription renewal term. This field is used with the renewal term field to specify the subscription renewal term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_term_period_type"},"EOA_STARTER_BRONZE_OFFER_ACCEPTED":{"type":"TEXT","index":25,"name":"EOA_STARTER_BRONZE_OFFER_ACCEPTED","comment":null,"display_name":"eoa_starter_bronze_offer_accepted"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":26,"name":"subscription_sales_type","comment":null,"description":"Identifies whether a subscription is Sales-Assisted or Self-Service / Web Direct.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"accepted_values","short":"A","label":"Accepted Values: Sales-Assisted, Self-Service"}],"display_name":"subscription_sales_type"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":27,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":28,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":29,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":30,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":31,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":32,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":33,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":34,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":35,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"IS_QUESTIONABLE_OPPORTUNITY_MAPPING":{"type":"NUMBER","index":36,"name":"IS_QUESTIONABLE_OPPORTUNITY_MAPPING","comment":null,"display_name":"is_questionable_opportunity_mapping"},"INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":37,"name":"INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"invoice_owner_account"},"CREATOR_ACCOUNT":{"type":"TEXT","index":38,"name":"CREATOR_ACCOUNT","comment":null,"display_name":"creator_account"},"WAS_PURCHASED_THROUGH_RESELLER":{"type":"BOOLEAN","index":39,"name":"was_purchased_through_reseller","comment":null,"description":"Boolean field that indicates whether the subscription was purchased through a reseller. If TRUE, the `invoice_owner_account` will contain the name of the reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"was_purchased_through_reseller"},"MULTI_YEAR_DEAL_SUBSCRIPTION_LINKAGE":{"type":"TEXT","index":40,"name":"MULTI_YEAR_DEAL_SUBSCRIPTION_LINKAGE","comment":null,"display_name":"multi_year_deal_subscription_linkage"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":41,"name":"subscription_start_date","comment":null,"description":"The date when the subscription term starts. This date is the same as the start date of the original term, which isn't necessarily the start date of the current or new term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":42,"name":"subscription_end_date","comment":null,"description":"The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the SubscriptionEndDate is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":43,"name":"subscription_start_month","comment":null,"description":"The month when the subscription term starts. This month is the same as the start month of the original term, which isn't necessarily the start month of the current or new term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":44,"name":"subscription_end_month","comment":null,"description":"The month when the subscription term ends. This month is the same as the term end month or the cancelation month, as appropriate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_month"},"SUBSCRIPTION_END_FISCAL_YEAR":{"type":"NUMBER","index":45,"name":"SUBSCRIPTION_END_FISCAL_YEAR","comment":null,"display_name":"subscription_end_fiscal_year"},"SUBSCRIPTION_CREATED_DATE":{"type":"DATE","index":46,"name":"SUBSCRIPTION_CREATED_DATE","comment":null,"display_name":"subscription_created_date"},"SUBSCRIPTION_UPDATED_DATE":{"type":"DATE","index":47,"name":"SUBSCRIPTION_UPDATED_DATE","comment":null,"display_name":"subscription_updated_date"},"TERM_START_DATE":{"type":"DATE","index":48,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":49,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"TERM_START_MONTH":{"type":"DATE","index":50,"name":"TERM_START_MONTH","comment":null,"display_name":"term_start_month"},"TERM_END_MONTH":{"type":"DATE","index":51,"name":"TERM_END_MONTH","comment":null,"display_name":"term_end_month"},"TERM_START_FISCAL_YEAR":{"type":"NUMBER","index":52,"name":"TERM_START_FISCAL_YEAR","comment":null,"display_name":"term_start_fiscal_year"},"TERM_END_FISCAL_YEAR":{"type":"NUMBER","index":53,"name":"TERM_END_FISCAL_YEAR","comment":null,"display_name":"term_end_fiscal_year"},"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION":{"type":"BOOLEAN","index":54,"name":"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION","comment":null,"display_name":"is_single_fiscal_year_term_subscription"},"SECOND_ACTIVE_RENEWAL_MONTH":{"type":"DATE","index":55,"name":"SECOND_ACTIVE_RENEWAL_MONTH","comment":null,"display_name":"second_active_renewal_month"},"CANCELLED_DATE":{"type":"TIMESTAMP_TZ","index":56,"name":"CANCELLED_DATE","comment":null,"display_name":"cancelled_date"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":57,"name":"SUBSCRIPTION_LINEAGE","comment":null,"display_name":"subscription_lineage"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":58,"name":"OLDEST_SUBSCRIPTION_IN_COHORT","comment":null,"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":59,"name":"SUBSCRIPTION_COHORT_MONTH","comment":null,"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":60,"name":"SUBSCRIPTION_COHORT_QUARTER","comment":null,"display_name":"subscription_cohort_quarter"},"SUBSCRIPTION_COHORT_YEAR":{"type":"DATE","index":61,"name":"SUBSCRIPTION_COHORT_YEAR","comment":null,"display_name":"subscription_cohort_year"},"CREATED_BY":{"type":"TEXT","index":62,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":63,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":64,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":65,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":66,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":67,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dim_billing_account_id_invoice_owner":{"name":"dim_billing_account_id_invoice_owner","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id_invoice_owner"},"amendment_id":{"name":"amendment_id","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"amendment_id"},"is_auto_renew":{"name":"is_auto_renew","description":"Boolean field, if true, this subscription automatically renews at the end of the subscription term","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_auto_renew"},"lineage":{"name":"lineage","description":"All the subscriptions subsquent to the primary subscription, separated by commas.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lineage"},"cohort_month":{"name":"cohort_month","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_month"},"cohort_quarter":{"name":"cohort_quarter","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_quarter"},"cohort_year":{"name":"cohort_year","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_year"},"is_myb":{"name":"is_myb","description":"MYB = Multi-Year Booking. This boolean flag identifies if a subscription is booked for more than one year. This can either be by having a term greater than 12 months or having a linked subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_myb"},"is_myb_with_multi_subs":{"name":"is_myb_with_multi_subs","description":"MYB = Multi-Year Booking. This boolean flag identifies if a subscription is booked for more than one year by using multiple linked subscriptions only. A subscription with a term greater than 12 but does not have linked subscriptions has a value of FALSE.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_myb_with_multi_subs"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:26UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":36424192,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_subscription","raw_sql":"$15","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_subscription","model.gitlab_snowflake.prep_subscription","model.gitlab_snowflake.map_subscription_opportunity","model.gitlab_snowflake.map_subscription_opportunity","model.gitlab_snowflake.map_subscription_lineage","model.gitlab_snowflake.map_subscription_lineage"]},"config":{"enabled":true,"alias":"dim_subscription","schema":"common","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_subscription"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_subscription.sql","original_file_path":"models/common/dimensions_shared/dim_subscription.sql","name":"dim_subscription","alias":"dim_subscription","checksum":{"name":"sha256","checksum":"44a135462088f0caceab046c41bf8e7354f2c148c50ecbee98d6658fddfeda60"},"tags":["mnpi_exception"],"refs":[["prep_amendment"],["prep_amendment"],["prep_subscription"],["prep_subscription"],["map_subscription_opportunity"],["map_subscription_opportunity"],["map_subscription_lineage"],["map_subscription_lineage"]],"sources":[],"metrics":[],"description":"Dimension table representing subscription details. The Zuora subscription is created and maintained as part of the broader Quote Creation business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#3-quote-creation).\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Subscriptions).\n\nThe grain of the table is the version of a Zuora subscription.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_subscription.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"],"alias":"dim_subscription"},"created_at":1689033750.8111765,"compiled_sql":"$16","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_subscription","label":"dim_subscription"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_SALES","name":"SFDC_OPPORTUNITY_SNAPSHOT_HISTORY_XF","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"OPPORTUNITY_SNAPSHOT_ID":{"type":"TEXT","index":1,"name":"OPPORTUNITY_SNAPSHOT_ID","comment":null,"display_name":"opportunity_snapshot_id"},"OPPORTUNITY_ID":{"type":"TEXT","index":2,"name":"OPPORTUNITY_ID","comment":null,"display_name":"opportunity_id"},"OPPORTUNITY_NAME":{"type":"TEXT","index":3,"name":"OPPORTUNITY_NAME","comment":null,"display_name":"opportunity_name"},"OWNER_ID":{"type":"TEXT","index":4,"name":"OWNER_ID","comment":null,"display_name":"owner_id"},"OPPORTUNITY_OWNER_DEPARTMENT":{"type":"TEXT","index":5,"name":"OPPORTUNITY_OWNER_DEPARTMENT","comment":null,"display_name":"opportunity_owner_department"},"CLOSE_DATE":{"type":"DATE","index":6,"name":"CLOSE_DATE","comment":null,"display_name":"close_date"},"CREATED_DATE":{"type":"DATE","index":7,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"SALES_QUALIFIED_DATE":{"type":"DATE","index":8,"name":"SALES_QUALIFIED_DATE","comment":null,"display_name":"sales_qualified_date"},"SALES_ACCEPTED_DATE":{"type":"DATE","index":9,"name":"SALES_ACCEPTED_DATE","comment":null,"display_name":"sales_accepted_date"},"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":10,"name":"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_sales_development_representative"},"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":11,"name":"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_business_development_representative"},"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":12,"name":"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_development_representative"},"SNAPSHOT_ORDER_TYPE_STAMPED":{"type":"TEXT","index":13,"name":"SNAPSHOT_ORDER_TYPE_STAMPED","comment":null,"display_name":"snapshot_order_type_stamped"},"SNAPSHOT_SALES_QUALIFIED_SOURCE":{"type":"TEXT","index":14,"name":"SNAPSHOT_SALES_QUALIFIED_SOURCE","comment":null,"display_name":"snapshot_sales_qualified_source"},"SNAPSHOT_IS_EDU_OSS":{"type":"FLOAT","index":15,"name":"SNAPSHOT_IS_EDU_OSS","comment":null,"display_name":"snapshot_is_edu_oss"},"SNAPSHOT_OPPORTUNITY_CATEGORY":{"type":"TEXT","index":16,"name":"SNAPSHOT_OPPORTUNITY_CATEGORY","comment":null,"display_name":"snapshot_opportunity_category"},"RAW_ACCOUNT_ID":{"type":"TEXT","index":17,"name":"RAW_ACCOUNT_ID","comment":null,"display_name":"raw_account_id"},"RAW_NET_ARR":{"type":"FLOAT","index":18,"name":"RAW_NET_ARR","comment":null,"display_name":"raw_net_arr"},"NET_ARR":{"type":"FLOAT","index":19,"name":"NET_ARR","comment":null,"display_name":"net_arr"},"DEPLOYMENT_PREFERENCE":{"type":"TEXT","index":20,"name":"DEPLOYMENT_PREFERENCE","comment":null,"display_name":"deployment_preference"},"MERGED_OPPORTUNITY_ID":{"type":"TEXT","index":21,"name":"MERGED_OPPORTUNITY_ID","comment":null,"display_name":"merged_opportunity_id"},"SALES_PATH":{"type":"TEXT","index":22,"name":"SALES_PATH","comment":null,"display_name":"sales_path"},"SALES_TYPE":{"type":"TEXT","index":23,"name":"SALES_TYPE","comment":null,"display_name":"sales_type"},"STAGE_NAME":{"type":"TEXT","index":24,"name":"STAGE_NAME","comment":null,"display_name":"stage_name"},"COMPETITORS":{"type":"TEXT","index":25,"name":"COMPETITORS","comment":null,"display_name":"competitors"},"FORECAST_CATEGORY_NAME":{"type":"TEXT","index":26,"name":"FORECAST_CATEGORY_NAME","comment":null,"display_name":"forecast_category_name"},"INVOICE_NUMBER":{"type":"TEXT","index":27,"name":"INVOICE_NUMBER","comment":null,"display_name":"invoice_number"},"PRIMARY_CAMPAIGN_SOURCE_ID":{"type":"TEXT","index":28,"name":"PRIMARY_CAMPAIGN_SOURCE_ID","comment":null,"display_name":"primary_campaign_source_id"},"PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":29,"name":"PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"professional_services_value"},"TOTAL_CONTRACT_VALUE":{"type":"FLOAT","index":30,"name":"TOTAL_CONTRACT_VALUE","comment":null,"display_name":"total_contract_value"},"IS_WEB_PORTAL_PURCHASE":{"type":"BOOLEAN","index":31,"name":"IS_WEB_PORTAL_PURCHASE","comment":null,"display_name":"is_web_portal_purchase"},"OPPORTUNITY_TERM":{"type":"FLOAT","index":32,"name":"OPPORTUNITY_TERM","comment":null,"display_name":"opportunity_term"},"ARR_BASIS":{"type":"FLOAT","index":33,"name":"ARR_BASIS","comment":null,"display_name":"arr_basis"},"ARR":{"type":"FLOAT","index":34,"name":"ARR","comment":null,"display_name":"arr"},"AMOUNT":{"type":"FLOAT","index":35,"name":"AMOUNT","comment":null,"display_name":"amount"},"RECURRING_AMOUNT":{"type":"FLOAT","index":36,"name":"RECURRING_AMOUNT","comment":null,"display_name":"recurring_amount"},"TRUE_UP_AMOUNT":{"type":"FLOAT","index":37,"name":"TRUE_UP_AMOUNT","comment":null,"display_name":"true_up_amount"},"PROSERV_AMOUNT":{"type":"FLOAT","index":38,"name":"PROSERV_AMOUNT","comment":null,"display_name":"proserv_amount"},"RENEWAL_AMOUNT":{"type":"FLOAT","index":39,"name":"RENEWAL_AMOUNT","comment":null,"display_name":"renewal_amount"},"OTHER_NON_RECURRING_AMOUNT":{"type":"FLOAT","index":40,"name":"OTHER_NON_RECURRING_AMOUNT","comment":null,"display_name":"other_non_recurring_amount"},"QUOTE_START_DATE":{"type":"DATE","index":41,"name":"QUOTE_START_DATE","comment":null,"display_name":"quote_start_date"},"QUOTE_END_DATE":{"type":"DATE","index":42,"name":"QUOTE_END_DATE","comment":null,"display_name":"quote_end_date"},"CP_CHAMPION":{"type":"TEXT","index":43,"name":"CP_CHAMPION","comment":null,"display_name":"cp_champion"},"CP_CLOSE_PLAN":{"type":"TEXT","index":44,"name":"CP_CLOSE_PLAN","comment":null,"display_name":"cp_close_plan"},"CP_COMPETITION":{"type":"TEXT","index":45,"name":"CP_COMPETITION","comment":null,"display_name":"cp_competition"},"CP_DECISION_CRITERIA":{"type":"TEXT","index":46,"name":"CP_DECISION_CRITERIA","comment":null,"display_name":"cp_decision_criteria"},"CP_DECISION_PROCESS":{"type":"TEXT","index":47,"name":"CP_DECISION_PROCESS","comment":null,"display_name":"cp_decision_process"},"CP_ECONOMIC_BUYER":{"type":"TEXT","index":48,"name":"CP_ECONOMIC_BUYER","comment":null,"display_name":"cp_economic_buyer"},"CP_IDENTIFY_PAIN":{"type":"TEXT","index":49,"name":"CP_IDENTIFY_PAIN","comment":null,"display_name":"cp_identify_pain"},"CP_METRICS":{"type":"TEXT","index":50,"name":"CP_METRICS","comment":null,"display_name":"cp_metrics"},"CP_RISKS":{"type":"TEXT","index":51,"name":"CP_RISKS","comment":null,"display_name":"cp_risks"},"CP_USE_CASES":{"type":"TEXT","index":52,"name":"CP_USE_CASES","comment":null,"display_name":"cp_use_cases"},"CP_VALUE_DRIVER":{"type":"TEXT","index":53,"name":"CP_VALUE_DRIVER","comment":null,"display_name":"cp_value_driver"},"CP_WHY_DO_ANYTHING_AT_ALL":{"type":"TEXT","index":54,"name":"CP_WHY_DO_ANYTHING_AT_ALL","comment":null,"display_name":"cp_why_do_anything_at_all"},"CP_WHY_GITLAB":{"type":"TEXT","index":55,"name":"CP_WHY_GITLAB","comment":null,"display_name":"cp_why_gitlab"},"CP_WHY_NOW":{"type":"TEXT","index":56,"name":"CP_WHY_NOW","comment":null,"display_name":"cp_why_now"},"CP_SCORE":{"type":"FLOAT","index":57,"name":"CP_SCORE","comment":null,"display_name":"cp_score"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_LTZ","index":58,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"IS_DELETED":{"type":"BOOLEAN","index":59,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"DEAL_PATH":{"type":"TEXT","index":60,"name":"DEAL_PATH","comment":null,"display_name":"deal_path"},"DR_PARTNER_DEAL_TYPE":{"type":"TEXT","index":61,"name":"DR_PARTNER_DEAL_TYPE","comment":null,"display_name":"dr_partner_deal_type"},"DR_PARTNER_ENGAGEMENT":{"type":"TEXT","index":62,"name":"DR_PARTNER_ENGAGEMENT","comment":null,"display_name":"dr_partner_engagement"},"PARTNER_ACCOUNT":{"type":"TEXT","index":63,"name":"PARTNER_ACCOUNT","comment":null,"display_name":"partner_account"},"DR_STATUS":{"type":"TEXT","index":64,"name":"DR_STATUS","comment":null,"display_name":"dr_status"},"DISTRIBUTOR":{"type":"TEXT","index":65,"name":"DISTRIBUTOR","comment":null,"display_name":"distributor"},"INFLUENCE_PARTNER":{"type":"TEXT","index":66,"name":"INFLUENCE_PARTNER","comment":null,"display_name":"influence_partner"},"FULFILLMENT_PARTNER":{"type":"TEXT","index":67,"name":"FULFILLMENT_PARTNER","comment":null,"display_name":"fulfillment_partner"},"PLATFORM_PARTNER":{"type":"TEXT","index":68,"name":"PLATFORM_PARTNER","comment":null,"display_name":"platform_partner"},"PARTNER_TRACK":{"type":"TEXT","index":69,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"IS_PUBLIC_SECTOR_OPP":{"type":"BOOLEAN","index":70,"name":"IS_PUBLIC_SECTOR_OPP","comment":null,"display_name":"is_public_sector_opp"},"IS_REGISTRATION_FROM_PORTAL":{"type":"BOOLEAN","index":71,"name":"IS_REGISTRATION_FROM_PORTAL","comment":null,"display_name":"is_registration_from_portal"},"CALCULATED_DISCOUNT":{"type":"FLOAT","index":72,"name":"CALCULATED_DISCOUNT","comment":null,"display_name":"calculated_discount"},"PARTNER_DISCOUNT":{"type":"FLOAT","index":73,"name":"PARTNER_DISCOUNT","comment":null,"display_name":"partner_discount"},"PARTNER_DISCOUNT_CALC":{"type":"FLOAT","index":74,"name":"PARTNER_DISCOUNT_CALC","comment":null,"display_name":"partner_discount_calc"},"COMP_CHANNEL_NEUTRAL":{"type":"FLOAT","index":75,"name":"COMP_CHANNEL_NEUTRAL","comment":null,"display_name":"comp_channel_neutral"},"FPA_MASTER_BOOKINGS_FLAG":{"type":"BOOLEAN","index":76,"name":"FPA_MASTER_BOOKINGS_FLAG","comment":null,"display_name":"fpa_master_bookings_flag"},"STAGE_0_PENDING_ACCEPTANCE_DATE":{"type":"DATE","index":77,"name":"STAGE_0_PENDING_ACCEPTANCE_DATE","comment":null,"display_name":"stage_0_pending_acceptance_date"},"STAGE_1_DISCOVERY_DATE":{"type":"DATE","index":78,"name":"STAGE_1_DISCOVERY_DATE","comment":null,"display_name":"stage_1_discovery_date"},"STAGE_2_SCOPING_DATE":{"type":"DATE","index":79,"name":"STAGE_2_SCOPING_DATE","comment":null,"display_name":"stage_2_scoping_date"},"STAGE_3_TECHNICAL_EVALUATION_DATE":{"type":"DATE","index":80,"name":"STAGE_3_TECHNICAL_EVALUATION_DATE","comment":null,"display_name":"stage_3_technical_evaluation_date"},"STAGE_4_PROPOSAL_DATE":{"type":"DATE","index":81,"name":"STAGE_4_PROPOSAL_DATE","comment":null,"display_name":"stage_4_proposal_date"},"STAGE_5_NEGOTIATING_DATE":{"type":"DATE","index":82,"name":"STAGE_5_NEGOTIATING_DATE","comment":null,"display_name":"stage_5_negotiating_date"},"STAGE_6_AWAITING_SIGNATURE_DATE":{"type":"DATE","index":83,"name":"STAGE_6_AWAITING_SIGNATURE_DATE","comment":null,"display_name":"stage_6_awaiting_signature_date"},"STAGE_6_CLOSED_WON_DATE":{"type":"DATE","index":84,"name":"STAGE_6_CLOSED_WON_DATE","comment":null,"display_name":"stage_6_closed_won_date"},"STAGE_6_CLOSED_LOST_DATE":{"type":"DATE","index":85,"name":"STAGE_6_CLOSED_LOST_DATE","comment":null,"display_name":"stage_6_closed_lost_date"},"DEAL_PATH_ENGAGEMENT":{"type":"TEXT","index":86,"name":"DEAL_PATH_ENGAGEMENT","comment":null,"display_name":"deal_path_engagement"},"STAGE_NAME_3PLUS":{"type":"TEXT","index":87,"name":"STAGE_NAME_3PLUS","comment":null,"display_name":"stage_name_3plus"},"STAGE_NAME_4PLUS":{"type":"TEXT","index":88,"name":"STAGE_NAME_4PLUS","comment":null,"display_name":"stage_name_4plus"},"IS_STAGE_1_PLUS":{"type":"NUMBER","index":89,"name":"IS_STAGE_1_PLUS","comment":null,"display_name":"is_stage_1_plus"},"IS_STAGE_3_PLUS":{"type":"NUMBER","index":90,"name":"IS_STAGE_3_PLUS","comment":null,"display_name":"is_stage_3_plus"},"IS_STAGE_4_PLUS":{"type":"NUMBER","index":91,"name":"IS_STAGE_4_PLUS","comment":null,"display_name":"is_stage_4_plus"},"IS_WON":{"type":"NUMBER","index":92,"name":"IS_WON","comment":null,"display_name":"is_won"},"IS_LOST":{"type":"NUMBER","index":93,"name":"IS_LOST","comment":null,"display_name":"is_lost"},"IS_OPEN":{"type":"NUMBER","index":94,"name":"IS_OPEN","comment":null,"display_name":"is_open"},"IS_CLOSED":{"type":"NUMBER","index":95,"name":"IS_CLOSED","comment":null,"display_name":"is_closed"},"IS_RENEWAL":{"type":"NUMBER","index":96,"name":"IS_RENEWAL","comment":null,"display_name":"is_renewal"},"IS_CREDIT_FLAG":{"type":"NUMBER","index":97,"name":"IS_CREDIT_FLAG","comment":null,"display_name":"is_credit_flag"},"IS_REFUND":{"type":"FLOAT","index":98,"name":"IS_REFUND","comment":null,"display_name":"is_refund"},"IS_CONTRACT_RESET_FLAG":{"type":"NUMBER","index":99,"name":"IS_CONTRACT_RESET_FLAG","comment":null,"display_name":"is_contract_reset_flag"},"COMPETITORS_OTHER_FLAG":{"type":"NUMBER","index":100,"name":"COMPETITORS_OTHER_FLAG","comment":null,"display_name":"competitors_other_flag"},"COMPETITORS_GITLAB_CORE_FLAG":{"type":"NUMBER","index":101,"name":"COMPETITORS_GITLAB_CORE_FLAG","comment":null,"display_name":"competitors_gitlab_core_flag"},"COMPETITORS_NONE_FLAG":{"type":"NUMBER","index":102,"name":"COMPETITORS_NONE_FLAG","comment":null,"display_name":"competitors_none_flag"},"COMPETITORS_GITHUB_ENTERPRISE_FLAG":{"type":"NUMBER","index":103,"name":"COMPETITORS_GITHUB_ENTERPRISE_FLAG","comment":null,"display_name":"competitors_github_enterprise_flag"},"COMPETITORS_BITBUCKET_SERVER_FLAG":{"type":"NUMBER","index":104,"name":"COMPETITORS_BITBUCKET_SERVER_FLAG","comment":null,"display_name":"competitors_bitbucket_server_flag"},"COMPETITORS_UNKNOWN_FLAG":{"type":"NUMBER","index":105,"name":"COMPETITORS_UNKNOWN_FLAG","comment":null,"display_name":"competitors_unknown_flag"},"COMPETITORS_GITHUB_FLAG":{"type":"NUMBER","index":106,"name":"COMPETITORS_GITHUB_FLAG","comment":null,"display_name":"competitors_github_flag"},"COMPETITORS_GITLAB_FLAG":{"type":"NUMBER","index":107,"name":"COMPETITORS_GITLAB_FLAG","comment":null,"display_name":"competitors_gitlab_flag"},"COMPETITORS_JENKINS_FLAG":{"type":"NUMBER","index":108,"name":"COMPETITORS_JENKINS_FLAG","comment":null,"display_name":"competitors_jenkins_flag"},"COMPETITORS_AZURE_DEVOPS_FLAG":{"type":"NUMBER","index":109,"name":"COMPETITORS_AZURE_DEVOPS_FLAG","comment":null,"display_name":"competitors_azure_devops_flag"},"COMPETITORS_SVN_FLAG":{"type":"NUMBER","index":110,"name":"COMPETITORS_SVN_FLAG","comment":null,"display_name":"competitors_svn_flag"},"COMPETITORS_BITBUCKET_FLAG":{"type":"NUMBER","index":111,"name":"COMPETITORS_BITBUCKET_FLAG","comment":null,"display_name":"competitors_bitbucket_flag"},"COMPETITORS_ATLASSIAN_FLAG":{"type":"NUMBER","index":112,"name":"COMPETITORS_ATLASSIAN_FLAG","comment":null,"display_name":"competitors_atlassian_flag"},"COMPETITORS_PERFORCE_FLAG":{"type":"NUMBER","index":113,"name":"COMPETITORS_PERFORCE_FLAG","comment":null,"display_name":"competitors_perforce_flag"},"COMPETITORS_VISUAL_STUDIO_FLAG":{"type":"NUMBER","index":114,"name":"COMPETITORS_VISUAL_STUDIO_FLAG","comment":null,"display_name":"competitors_visual_studio_flag"},"COMPETITORS_AZURE_FLAG":{"type":"NUMBER","index":115,"name":"COMPETITORS_AZURE_FLAG","comment":null,"display_name":"competitors_azure_flag"},"COMPETITORS_AMAZON_CODE_COMMIT_FLAG":{"type":"NUMBER","index":116,"name":"COMPETITORS_AMAZON_CODE_COMMIT_FLAG","comment":null,"display_name":"competitors_amazon_code_commit_flag"},"COMPETITORS_CIRCLECI_FLAG":{"type":"NUMBER","index":117,"name":"COMPETITORS_CIRCLECI_FLAG","comment":null,"display_name":"competitors_circleci_flag"},"COMPETITORS_BAMBOO_FLAG":{"type":"NUMBER","index":118,"name":"COMPETITORS_BAMBOO_FLAG","comment":null,"display_name":"competitors_bamboo_flag"},"COMPETITORS_AWS_FLAG":{"type":"NUMBER","index":119,"name":"COMPETITORS_AWS_FLAG","comment":null,"display_name":"competitors_aws_flag"},"STAGE_CATEGORY":{"type":"TEXT","index":120,"name":"STAGE_CATEGORY","comment":null,"display_name":"stage_category"},"CALCULATED_DEAL_COUNT":{"type":"NUMBER","index":121,"name":"CALCULATED_DEAL_COUNT","comment":null,"display_name":"calculated_deal_count"},"CALCULATED_AGE_IN_DAYS":{"type":"NUMBER","index":122,"name":"CALCULATED_AGE_IN_DAYS","comment":null,"display_name":"calculated_age_in_days"},"SNAPSHOT_DATE":{"type":"DATE","index":123,"name":"SNAPSHOT_DATE","comment":null,"display_name":"snapshot_date"},"SNAPSHOT_DATE_MONTH":{"type":"DATE","index":124,"name":"SNAPSHOT_DATE_MONTH","comment":null,"display_name":"snapshot_date_month"},"SNAPSHOT_FISCAL_YEAR":{"type":"NUMBER","index":125,"name":"SNAPSHOT_FISCAL_YEAR","comment":null,"display_name":"snapshot_fiscal_year"},"SNAPSHOT_FISCAL_QUARTER_NAME":{"type":"TEXT","index":126,"name":"SNAPSHOT_FISCAL_QUARTER_NAME","comment":null,"display_name":"snapshot_fiscal_quarter_name"},"SNAPSHOT_FISCAL_QUARTER_DATE":{"type":"DATE","index":127,"name":"SNAPSHOT_FISCAL_QUARTER_DATE","comment":null,"display_name":"snapshot_fiscal_quarter_date"},"SNAPSHOT_DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":128,"name":"SNAPSHOT_DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"snapshot_day_of_fiscal_quarter_normalised"},"SNAPSHOT_DAY_OF_FISCAL_YEAR_NORMALISED":{"type":"NUMBER","index":129,"name":"SNAPSHOT_DAY_OF_FISCAL_YEAR_NORMALISED","comment":null,"display_name":"snapshot_day_of_fiscal_year_normalised"},"CLOSE_DATE_MONTH":{"type":"DATE","index":130,"name":"CLOSE_DATE_MONTH","comment":null,"display_name":"close_date_month"},"CLOSE_FISCAL_YEAR":{"type":"NUMBER","index":131,"name":"CLOSE_FISCAL_YEAR","comment":null,"display_name":"close_fiscal_year"},"CLOSE_FISCAL_QUARTER_NAME":{"type":"TEXT","index":132,"name":"CLOSE_FISCAL_QUARTER_NAME","comment":null,"display_name":"close_fiscal_quarter_name"},"CLOSE_FISCAL_QUARTER_DATE":{"type":"DATE","index":133,"name":"CLOSE_FISCAL_QUARTER_DATE","comment":null,"display_name":"close_fiscal_quarter_date"},"CLOSE_DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":134,"name":"CLOSE_DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"close_day_of_fiscal_quarter_normalised"},"CREATED_DATE_MONTH":{"type":"DATE","index":135,"name":"CREATED_DATE_MONTH","comment":null,"display_name":"created_date_month"},"CREATED_FISCAL_YEAR":{"type":"NUMBER","index":136,"name":"CREATED_FISCAL_YEAR","comment":null,"display_name":"created_fiscal_year"},"CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":137,"name":"CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"created_fiscal_quarter_name"},"CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":138,"name":"CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"created_fiscal_quarter_date"},"NET_ARR_CREATED_DATE":{"type":"DATE","index":139,"name":"NET_ARR_CREATED_DATE","comment":null,"display_name":"net_arr_created_date"},"NET_ARR_CREATED_DATE_MONTH":{"type":"DATE","index":140,"name":"NET_ARR_CREATED_DATE_MONTH","comment":null,"display_name":"net_arr_created_date_month"},"NET_ARR_CREATED_FISCAL_YEAR":{"type":"NUMBER","index":141,"name":"NET_ARR_CREATED_FISCAL_YEAR","comment":null,"display_name":"net_arr_created_fiscal_year"},"NET_ARR_CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":142,"name":"NET_ARR_CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"net_arr_created_fiscal_quarter_name"},"NET_ARR_CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":143,"name":"NET_ARR_CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"net_arr_created_fiscal_quarter_date"},"PIPELINE_CREATED_DATE":{"type":"DATE","index":144,"name":"PIPELINE_CREATED_DATE","comment":null,"display_name":"pipeline_created_date"},"PIPELINE_CREATED_DATE_MONTH":{"type":"DATE","index":145,"name":"PIPELINE_CREATED_DATE_MONTH","comment":null,"display_name":"pipeline_created_date_month"},"PIPELINE_CREATED_FISCAL_YEAR":{"type":"NUMBER","index":146,"name":"PIPELINE_CREATED_FISCAL_YEAR","comment":null,"display_name":"pipeline_created_fiscal_year"},"PIPELINE_CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":147,"name":"PIPELINE_CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"pipeline_created_fiscal_quarter_name"},"PIPELINE_CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":148,"name":"PIPELINE_CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"pipeline_created_fiscal_quarter_date"},"SALES_ACCEPTED_MONTH":{"type":"DATE","index":149,"name":"SALES_ACCEPTED_MONTH","comment":null,"display_name":"sales_accepted_month"},"SALES_ACCEPTED_FISCAL_YEAR":{"type":"NUMBER","index":150,"name":"SALES_ACCEPTED_FISCAL_YEAR","comment":null,"display_name":"sales_accepted_fiscal_year"},"SALES_ACCEPTED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":151,"name":"SALES_ACCEPTED_FISCAL_QUARTER_NAME","comment":null,"display_name":"sales_accepted_fiscal_quarter_name"},"SALES_ACCEPTED_FISCAL_QUARTER_DATE":{"type":"DATE","index":152,"name":"SALES_ACCEPTED_FISCAL_QUARTER_DATE","comment":null,"display_name":"sales_accepted_fiscal_quarter_date"},"LAST_ACTIVITY_DATE":{"type":"DATE","index":153,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"LAST_ACTIVITY_FISCAL_YEAR":{"type":"NUMBER","index":154,"name":"LAST_ACTIVITY_FISCAL_YEAR","comment":null,"display_name":"last_activity_fiscal_year"},"LAST_ACTIVITY_FISCAL_QUARTER_NAME":{"type":"TEXT","index":155,"name":"LAST_ACTIVITY_FISCAL_QUARTER_NAME","comment":null,"display_name":"last_activity_fiscal_quarter_name"},"LAST_ACTIVITY_FISCAL_QUARTER_DATE":{"type":"DATE","index":156,"name":"LAST_ACTIVITY_FISCAL_QUARTER_DATE","comment":null,"display_name":"last_activity_fiscal_quarter_date"},"LAST_ACTIVITY_DATE_MONTH":{"type":"DATE","index":157,"name":"LAST_ACTIVITY_DATE_MONTH","comment":null,"display_name":"last_activity_date_month"},"SALES_LAST_ACTIVITY_DATE":{"type":"DATE","index":158,"name":"SALES_LAST_ACTIVITY_DATE","comment":null,"display_name":"sales_last_activity_date"},"SALES_LAST_ACTIVITY_FISCAL_YEAR":{"type":"NUMBER","index":159,"name":"SALES_LAST_ACTIVITY_FISCAL_YEAR","comment":null,"display_name":"sales_last_activity_fiscal_year"},"SALES_LAST_ACTIVITY_FISCAL_QUARTER_NAME":{"type":"TEXT","index":160,"name":"SALES_LAST_ACTIVITY_FISCAL_QUARTER_NAME","comment":null,"display_name":"sales_last_activity_fiscal_quarter_name"},"SALES_LAST_ACTIVITY_FISCAL_QUARTER_DATE":{"type":"DATE","index":161,"name":"SALES_LAST_ACTIVITY_FISCAL_QUARTER_DATE","comment":null,"display_name":"sales_last_activity_fiscal_quarter_date"},"SALES_LAST_ACTIVITY_DATE_MONTH":{"type":"DATE","index":162,"name":"SALES_LAST_ACTIVITY_DATE_MONTH","comment":null,"display_name":"sales_last_activity_date_month"},"LEAD_SOURCE":{"type":"TEXT","index":163,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"NET_NEW_SOURCE_CATEGORIES":{"type":"TEXT","index":164,"name":"NET_NEW_SOURCE_CATEGORIES","comment":null,"display_name":"net_new_source_categories"},"RECORD_TYPE_ID":{"type":"TEXT","index":165,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"ACCOUNT_ID":{"type":"TEXT","index":166,"name":"ACCOUNT_ID","comment":null,"display_name":"account_id"},"ACCOUNT_OWNER_TEAM_STAMPED":{"type":"TEXT","index":167,"name":"ACCOUNT_OWNER_TEAM_STAMPED","comment":null,"display_name":"account_owner_team_stamped"},"ACCOUNT_OWNER_TEAM_STAMPED_CRO_LEVEL":{"type":"TEXT","index":168,"name":"ACCOUNT_OWNER_TEAM_STAMPED_CRO_LEVEL","comment":null,"display_name":"account_owner_team_stamped_cro_level"},"ACCOUNT_NAME":{"type":"TEXT","index":169,"name":"ACCOUNT_NAME","comment":null,"display_name":"account_name"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":170,"name":"ULTIMATE_PARENT_ACCOUNT_ID","comment":null,"display_name":"ultimate_parent_account_id"},"ULTIMATE_PARENT_ACCOUNT_NAME":{"type":"TEXT","index":171,"name":"ULTIMATE_PARENT_ACCOUNT_NAME","comment":null,"display_name":"ultimate_parent_account_name"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":172,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":173,"name":"ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"account_owner_user_segment"},"ACCOUNT_OWNER_USER_GEO":{"type":"TEXT","index":174,"name":"ACCOUNT_OWNER_USER_GEO","comment":null,"display_name":"account_owner_user_geo"},"ACCOUNT_OWNER_USER_REGION":{"type":"TEXT","index":175,"name":"ACCOUNT_OWNER_USER_REGION","comment":null,"display_name":"account_owner_user_region"},"ACCOUNT_OWNER_USER_AREA":{"type":"TEXT","index":176,"name":"ACCOUNT_OWNER_USER_AREA","comment":null,"display_name":"account_owner_user_area"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":177,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":178,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":179,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":180,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":181,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"ORDER_TYPE_STAMPED":{"type":"TEXT","index":182,"name":"ORDER_TYPE_STAMPED","comment":null,"display_name":"order_type_stamped"},"CURRENT_IS_DUPLICATE_FLAG":{"type":"NUMBER","index":183,"name":"CURRENT_IS_DUPLICATE_FLAG","comment":null,"display_name":"current_is_duplicate_flag"},"SALES_TEAM_RD_ASM_LEVEL":{"type":"TEXT","index":184,"name":"SALES_TEAM_RD_ASM_LEVEL","comment":null,"display_name":"sales_team_rd_asm_level"},"SALES_TEAM_CRO_LEVEL":{"type":"TEXT","index":185,"name":"SALES_TEAM_CRO_LEVEL","comment":null,"display_name":"sales_team_cro_level"},"SALES_TEAM_VP_LEVEL":{"type":"TEXT","index":186,"name":"SALES_TEAM_VP_LEVEL","comment":null,"display_name":"sales_team_vp_level"},"SALES_TEAM_AVP_RD_LEVEL":{"type":"TEXT","index":187,"name":"SALES_TEAM_AVP_RD_LEVEL","comment":null,"display_name":"sales_team_avp_rd_level"},"SALES_TEAM_ASM_LEVEL":{"type":"TEXT","index":188,"name":"SALES_TEAM_ASM_LEVEL","comment":null,"display_name":"sales_team_asm_level"},"REPORT_OPPORTUNITY_USER_SEGMENT":{"type":"TEXT","index":189,"name":"REPORT_OPPORTUNITY_USER_SEGMENT","comment":null,"display_name":"report_opportunity_user_segment"},"REPORT_OPPORTUNITY_USER_GEO":{"type":"TEXT","index":190,"name":"REPORT_OPPORTUNITY_USER_GEO","comment":null,"display_name":"report_opportunity_user_geo"},"REPORT_OPPORTUNITY_USER_REGION":{"type":"TEXT","index":191,"name":"REPORT_OPPORTUNITY_USER_REGION","comment":null,"display_name":"report_opportunity_user_region"},"REPORT_OPPORTUNITY_USER_AREA":{"type":"TEXT","index":192,"name":"REPORT_OPPORTUNITY_USER_AREA","comment":null,"display_name":"report_opportunity_user_area"},"REPORT_USER_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":193,"name":"REPORT_USER_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"report_user_segment_geo_region_area"},"REPORT_OPPORTUNITY_RAW_USER_SEGMENT":{"type":"TEXT","index":194,"name":"REPORT_OPPORTUNITY_RAW_USER_SEGMENT","comment":null,"display_name":"report_opportunity_raw_user_segment"},"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":195,"name":"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT","comment":null,"display_name":"report_user_segment_geo_region_area_sqs_ot"},"REPORT_BU_SUBBU_DIVISION_ASM_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":196,"name":"REPORT_BU_SUBBU_DIVISION_ASM_USER_SEGMENT_GEO_REGION_AREA_SQS_OT","comment":null,"display_name":"report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot"},"KEY_SQS":{"type":"TEXT","index":197,"name":"KEY_SQS","comment":null,"display_name":"key_sqs"},"KEY_OT":{"type":"TEXT","index":198,"name":"KEY_OT","comment":null,"display_name":"key_ot"},"KEY_SEGMENT":{"type":"TEXT","index":199,"name":"KEY_SEGMENT","comment":null,"display_name":"key_segment"},"KEY_SEGMENT_SQS":{"type":"TEXT","index":200,"name":"KEY_SEGMENT_SQS","comment":null,"display_name":"key_segment_sqs"},"KEY_SEGMENT_OT":{"type":"TEXT","index":201,"name":"KEY_SEGMENT_OT","comment":null,"display_name":"key_segment_ot"},"KEY_SEGMENT_GEO":{"type":"TEXT","index":202,"name":"KEY_SEGMENT_GEO","comment":null,"display_name":"key_segment_geo"},"KEY_SEGMENT_GEO_SQS":{"type":"TEXT","index":203,"name":"KEY_SEGMENT_GEO_SQS","comment":null,"display_name":"key_segment_geo_sqs"},"KEY_SEGMENT_GEO_OT":{"type":"TEXT","index":204,"name":"KEY_SEGMENT_GEO_OT","comment":null,"display_name":"key_segment_geo_ot"},"KEY_SEGMENT_GEO_REGION":{"type":"TEXT","index":205,"name":"KEY_SEGMENT_GEO_REGION","comment":null,"display_name":"key_segment_geo_region"},"KEY_SEGMENT_GEO_REGION_SQS":{"type":"TEXT","index":206,"name":"KEY_SEGMENT_GEO_REGION_SQS","comment":null,"display_name":"key_segment_geo_region_sqs"},"KEY_SEGMENT_GEO_REGION_OT":{"type":"TEXT","index":207,"name":"KEY_SEGMENT_GEO_REGION_OT","comment":null,"display_name":"key_segment_geo_region_ot"},"KEY_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":208,"name":"KEY_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"key_segment_geo_region_area"},"KEY_SEGMENT_GEO_REGION_AREA_SQS":{"type":"TEXT","index":209,"name":"KEY_SEGMENT_GEO_REGION_AREA_SQS","comment":null,"display_name":"key_segment_geo_region_area_sqs"},"KEY_SEGMENT_GEO_REGION_AREA_OT":{"type":"TEXT","index":210,"name":"KEY_SEGMENT_GEO_REGION_AREA_OT","comment":null,"display_name":"key_segment_geo_region_area_ot"},"KEY_SEGMENT_GEO_AREA":{"type":"TEXT","index":211,"name":"KEY_SEGMENT_GEO_AREA","comment":null,"display_name":"key_segment_geo_area"},"SALES_QUALIFIED_SOURCE":{"type":"TEXT","index":212,"name":"SALES_QUALIFIED_SOURCE","comment":null,"display_name":"sales_qualified_source"},"DEAL_CATEGORY":{"type":"TEXT","index":213,"name":"DEAL_CATEGORY","comment":null,"display_name":"deal_category"},"OPPORTUNITY_CATEGORY":{"type":"TEXT","index":214,"name":"OPPORTUNITY_CATEGORY","comment":null,"display_name":"opportunity_category"},"DEAL_GROUP":{"type":"TEXT","index":215,"name":"DEAL_GROUP","comment":null,"display_name":"deal_group"},"OPPORTUNITY_OWNER_MANAGER":{"type":"TEXT","index":216,"name":"OPPORTUNITY_OWNER_MANAGER","comment":null,"display_name":"opportunity_owner_manager"},"IS_EDU_OSS":{"type":"FLOAT","index":217,"name":"IS_EDU_OSS","comment":null,"display_name":"is_edu_oss"},"REPORT_OPPORTUNITY_USER_BUSINESS_UNIT":{"type":"TEXT","index":218,"name":"REPORT_OPPORTUNITY_USER_BUSINESS_UNIT","comment":null,"display_name":"report_opportunity_user_business_unit"},"REPORT_OPPORTUNITY_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":219,"name":"REPORT_OPPORTUNITY_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"report_opportunity_user_sub_business_unit"},"REPORT_OPPORTUNITY_USER_DIVISION":{"type":"TEXT","index":220,"name":"REPORT_OPPORTUNITY_USER_DIVISION","comment":null,"display_name":"report_opportunity_user_division"},"REPORT_OPPORTUNITY_USER_ASM":{"type":"TEXT","index":221,"name":"REPORT_OPPORTUNITY_USER_ASM","comment":null,"display_name":"report_opportunity_user_asm"},"KEY_BU":{"type":"TEXT","index":222,"name":"KEY_BU","comment":null,"display_name":"key_bu"},"KEY_BU_SUBBU":{"type":"TEXT","index":223,"name":"KEY_BU_SUBBU","comment":null,"display_name":"key_bu_subbu"},"KEY_BU_SUBBU_OT":{"type":"TEXT","index":224,"name":"KEY_BU_SUBBU_OT","comment":null,"display_name":"key_bu_subbu_ot"},"KEY_BU_SUBBU_SQS":{"type":"TEXT","index":225,"name":"KEY_BU_SUBBU_SQS","comment":null,"display_name":"key_bu_subbu_sqs"},"KEY_BU_SUBBU_DIVISION":{"type":"TEXT","index":226,"name":"KEY_BU_SUBBU_DIVISION","comment":null,"display_name":"key_bu_subbu_division"},"KEY_BU_SUBBU_DIVISION_OT":{"type":"TEXT","index":227,"name":"KEY_BU_SUBBU_DIVISION_OT","comment":null,"display_name":"key_bu_subbu_division_ot"},"KEY_BU_SUBBU_DIVISION_SQS":{"type":"TEXT","index":228,"name":"KEY_BU_SUBBU_DIVISION_SQS","comment":null,"display_name":"key_bu_subbu_division_sqs"},"KEY_BU_SUBBU_DIVISION_ASM":{"type":"TEXT","index":229,"name":"KEY_BU_SUBBU_DIVISION_ASM","comment":null,"display_name":"key_bu_subbu_division_asm"},"STAGE_1_DATE":{"type":"DATE","index":230,"name":"STAGE_1_DATE","comment":null,"display_name":"stage_1_date"},"STAGE_1_DATE_MONTH":{"type":"DATE","index":231,"name":"STAGE_1_DATE_MONTH","comment":null,"display_name":"stage_1_date_month"},"STAGE_1_FISCAL_YEAR":{"type":"NUMBER","index":232,"name":"STAGE_1_FISCAL_YEAR","comment":null,"display_name":"stage_1_fiscal_year"},"STAGE_1_FISCAL_QUARTER_NAME":{"type":"TEXT","index":233,"name":"STAGE_1_FISCAL_QUARTER_NAME","comment":null,"display_name":"stage_1_fiscal_quarter_name"},"STAGE_1_FISCAL_QUARTER_DATE":{"type":"DATE","index":234,"name":"STAGE_1_FISCAL_QUARTER_DATE","comment":null,"display_name":"stage_1_fiscal_quarter_date"},"OPPORTUNITY_OWNER":{"type":"TEXT","index":235,"name":"OPPORTUNITY_OWNER","comment":null,"display_name":"opportunity_owner"},"IS_REP_FLAG":{"type":"NUMBER","index":236,"name":"IS_REP_FLAG","comment":null,"display_name":"is_rep_flag"},"IS_ELIGIBLE_CREATED_PIPELINE_FLAG":{"type":"NUMBER","index":237,"name":"IS_ELIGIBLE_CREATED_PIPELINE_FLAG","comment":null,"display_name":"is_eligible_created_pipeline_flag"},"IS_EXCLUDED_FLAG":{"type":"NUMBER","index":238,"name":"IS_EXCLUDED_FLAG","comment":null,"display_name":"is_excluded_flag"},"IS_ELIGIBLE_OPEN_PIPELINE_FLAG":{"type":"NUMBER","index":239,"name":"IS_ELIGIBLE_OPEN_PIPELINE_FLAG","comment":null,"display_name":"is_eligible_open_pipeline_flag"},"BOOKED_NET_ARR":{"type":"FLOAT","index":240,"name":"BOOKED_NET_ARR","comment":null,"display_name":"booked_net_arr"},"IS_BOOKED_NET_ARR_FLAG":{"type":"NUMBER","index":241,"name":"IS_BOOKED_NET_ARR_FLAG","comment":null,"display_name":"is_booked_net_arr_flag"},"OPEN_1PLUS_NET_ARR":{"type":"FLOAT","index":242,"name":"OPEN_1PLUS_NET_ARR","comment":null,"display_name":"open_1plus_net_arr"},"OPEN_3PLUS_NET_ARR":{"type":"FLOAT","index":243,"name":"OPEN_3PLUS_NET_ARR","comment":null,"display_name":"open_3plus_net_arr"},"OPEN_4PLUS_NET_ARR":{"type":"FLOAT","index":244,"name":"OPEN_4PLUS_NET_ARR","comment":null,"display_name":"open_4plus_net_arr"},"CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":245,"name":"CHURNED_CONTRACTION_NET_ARR","comment":null,"display_name":"churned_contraction_net_arr"},"CREATED_IN_SNAPSHOT_QUARTER_NET_ARR":{"type":"FLOAT","index":246,"name":"CREATED_IN_SNAPSHOT_QUARTER_NET_ARR","comment":null,"display_name":"created_in_snapshot_quarter_net_arr"},"CREATED_AND_WON_SAME_QUARTER_NET_ARR":{"type":"FLOAT","index":247,"name":"CREATED_AND_WON_SAME_QUARTER_NET_ARR","comment":null,"display_name":"created_and_won_same_quarter_net_arr"},"OPEN_1PLUS_DEAL_COUNT":{"type":"NUMBER","index":248,"name":"OPEN_1PLUS_DEAL_COUNT","comment":null,"display_name":"open_1plus_deal_count"},"OPEN_3PLUS_DEAL_COUNT":{"type":"NUMBER","index":249,"name":"OPEN_3PLUS_DEAL_COUNT","comment":null,"display_name":"open_3plus_deal_count"},"OPEN_4PLUS_DEAL_COUNT":{"type":"NUMBER","index":250,"name":"OPEN_4PLUS_DEAL_COUNT","comment":null,"display_name":"open_4plus_deal_count"},"BOOKED_DEAL_COUNT":{"type":"NUMBER","index":251,"name":"BOOKED_DEAL_COUNT","comment":null,"display_name":"booked_deal_count"},"CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":252,"name":"CHURNED_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"churned_contraction_deal_count"},"CREATED_IN_SNAPSHOT_QUARTER_DEAL_COUNT":{"type":"NUMBER","index":253,"name":"CREATED_IN_SNAPSHOT_QUARTER_DEAL_COUNT","comment":null,"display_name":"created_in_snapshot_quarter_deal_count"},"IS_ELIGIBLE_ASP_ANALYSIS_FLAG":{"type":"NUMBER","index":254,"name":"IS_ELIGIBLE_ASP_ANALYSIS_FLAG","comment":null,"display_name":"is_eligible_asp_analysis_flag"},"IS_ELIGIBLE_AGE_ANALYSIS_FLAG":{"type":"NUMBER","index":255,"name":"IS_ELIGIBLE_AGE_ANALYSIS_FLAG","comment":null,"display_name":"is_eligible_age_analysis_flag"},"IS_ELIGIBLE_CHURN_CONTRACTION_FLAG":{"type":"NUMBER","index":256,"name":"IS_ELIGIBLE_CHURN_CONTRACTION_FLAG","comment":null,"display_name":"is_eligible_churn_contraction_flag"},"IS_ELIGIBLE_SAO_FLAG":{"type":"NUMBER","index":257,"name":"IS_ELIGIBLE_SAO_FLAG","comment":null,"display_name":"is_eligible_sao_flag"},"DEAL_SIZE":{"type":"TEXT","index":258,"name":"DEAL_SIZE","comment":null,"display_name":"deal_size"},"CALCULATED_DEAL_SIZE":{"type":"TEXT","index":259,"name":"CALCULATED_DEAL_SIZE","comment":null,"display_name":"calculated_deal_size"},"STAGE_NAME_RANK":{"type":"NUMBER","index":260,"name":"STAGE_NAME_RANK","comment":null,"display_name":"stage_name_rank"},"PIPELINE_CATEGORY":{"type":"TEXT","index":261,"name":"PIPELINE_CATEGORY","comment":null,"display_name":"pipeline_category"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-05 19:18UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":52966610944,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_sfdc_opportunity_snapshot_history_xf","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_sfdc_accounts_xf","model.gitlab_snowflake.wk_sales_sfdc_accounts_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf","model.gitlab_snowflake.fct_crm_opportunity_daily_snapshot","model.gitlab_snowflake.fct_crm_opportunity_daily_snapshot","model.gitlab_snowflake.mart_crm_opportunity_daily_snapshot","model.gitlab_snowflake.mart_crm_opportunity_daily_snapshot"]},"config":{"enabled":true,"alias":"sfdc_opportunity_snapshot_history_xf","schema":"restricted_safe_workspace_sales","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","restricted_safe","wk_sales_sfdc_opportunity_snapshot_history_xf"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/restricted_safe/wk_sales_sfdc_opportunity_snapshot_history_xf.sql","original_file_path":"models/workspaces/workspace_sales/restricted_safe/wk_sales_sfdc_opportunity_snapshot_history_xf.sql","name":"wk_sales_sfdc_opportunity_snapshot_history_xf","alias":"sfdc_opportunity_snapshot_history_xf","checksum":{"name":"sha256","checksum":"659b27d3b6196cbb28ee72a97526a245d53d6c75cd510a720caf5ed4a3e88d04"},"tags":["workspace","safe"],"refs":[["wk_sales_date_details"],["wk_sales_date_details"],["wk_sales_sfdc_accounts_xf"],["wk_sales_sfdc_accounts_xf"],["wk_sales_sfdc_opportunity_xf"],["wk_sales_sfdc_opportunity_xf"],["wk_sales_sfdc_users_xf"],["wk_sales_sfdc_users_xf"],["fct_crm_opportunity_daily_snapshot"],["fct_crm_opportunity_daily_snapshot"],["mart_crm_opportunity_daily_snapshot"],["mart_crm_opportunity_daily_snapshot"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_sales_sfdc_opportunity_snapshot_history_xf.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"sfdc_opportunity_snapshot_history_xf"},"created_at":1689033678.8856285,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf","label":"wk_sales_sfdc_opportunity_snapshot_history_xf"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_SALES","name":"SFDC_USERS_XF","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"USER_ID":{"type":"TEXT","index":1,"name":"USER_ID","comment":null,"display_name":"user_id"},"NAME":{"type":"TEXT","index":2,"name":"NAME","comment":null,"display_name":"name"},"DEPARTMENT":{"type":"TEXT","index":3,"name":"DEPARTMENT","comment":null,"display_name":"department"},"TITLE":{"type":"TEXT","index":4,"name":"TITLE","comment":null,"display_name":"title"},"TEAM":{"type":"TEXT","index":5,"name":"TEAM","comment":null,"display_name":"team"},"USER_EMAIL":{"type":"TEXT","index":6,"name":"USER_EMAIL","comment":null,"display_name":"user_email"},"MANAGER_NAME":{"type":"TEXT","index":7,"name":"MANAGER_NAME","comment":null,"display_name":"manager_name"},"MANAGER_ID":{"type":"TEXT","index":8,"name":"MANAGER_ID","comment":null,"display_name":"manager_id"},"USER_GEO":{"type":"TEXT","index":9,"name":"USER_GEO","comment":null,"display_name":"user_geo"},"USER_REGION":{"type":"TEXT","index":10,"name":"USER_REGION","comment":null,"display_name":"user_region"},"USER_SEGMENT":{"type":"TEXT","index":11,"name":"USER_SEGMENT","comment":null,"display_name":"user_segment"},"RAW_USER_SEGMENT":{"type":"TEXT","index":12,"name":"RAW_USER_SEGMENT","comment":null,"display_name":"raw_user_segment"},"ADJUSTED_USER_SEGMENT":{"type":"TEXT","index":13,"name":"ADJUSTED_USER_SEGMENT","comment":null,"display_name":"adjusted_user_segment"},"USER_AREA":{"type":"TEXT","index":14,"name":"USER_AREA","comment":null,"display_name":"user_area"},"ROLE_NAME":{"type":"TEXT","index":15,"name":"ROLE_NAME","comment":null,"display_name":"role_name"},"ROLE_TYPE":{"type":"TEXT","index":16,"name":"ROLE_TYPE","comment":null,"display_name":"role_type"},"START_DATE":{"type":"TIMESTAMP_TZ","index":17,"name":"START_DATE","comment":null,"display_name":"start_date"},"IS_ACTIVE":{"type":"BOOLEAN","index":18,"name":"IS_ACTIVE","comment":null,"display_name":"is_active"},"IS_HYBRID_FLAG":{"type":"NUMBER","index":19,"name":"IS_HYBRID_FLAG","comment":null,"display_name":"is_hybrid_flag"},"EMPLOYEE_NUMBER":{"type":"TEXT","index":20,"name":"EMPLOYEE_NUMBER","comment":null,"display_name":"employee_number"},"IS_REP_FLAG":{"type":"NUMBER","index":21,"name":"IS_REP_FLAG","comment":null,"display_name":"is_rep_flag"},"BUSINESS_UNIT":{"type":"TEXT","index":22,"name":"BUSINESS_UNIT","comment":null,"display_name":"business_unit"},"SUB_BUSINESS_UNIT":{"type":"TEXT","index":23,"name":"SUB_BUSINESS_UNIT","comment":null,"display_name":"sub_business_unit"},"DIVISION":{"type":"TEXT","index":24,"name":"DIVISION","comment":null,"display_name":"division"},"ASM":{"type":"TEXT","index":25,"name":"ASM","comment":null,"display_name":"asm"},"KEY_BU":{"type":"TEXT","index":26,"name":"KEY_BU","comment":null,"display_name":"key_bu"},"KEY_BU_SUBBU":{"type":"TEXT","index":27,"name":"KEY_BU_SUBBU","comment":null,"display_name":"key_bu_subbu"},"KEY_BU_SUBBU_DIVISION":{"type":"TEXT","index":28,"name":"KEY_BU_SUBBU_DIVISION","comment":null,"display_name":"key_bu_subbu_division"},"KEY_BU_SUBBU_DIVISION_ASM":{"type":"TEXT","index":29,"name":"KEY_BU_SUBBU_DIVISION_ASM","comment":null,"display_name":"key_bu_subbu_division_asm"},"KEY_SAL_HEATMAP":{"type":"TEXT","index":30,"name":"KEY_SAL_HEATMAP","comment":null,"display_name":"key_sal_heatmap"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:48UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":247808,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_sfdc_users_xf","raw_sql":"$19","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["source.gitlab_snowflake.salesforce.user","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":"sfdc_users_xf","schema":"workspace_sales","database":"PROD","tags":["workspace"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","wk_sales_sfdc_users_xf"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/wk_sales_sfdc_users_xf.sql","original_file_path":"models/workspaces/workspace_sales/wk_sales_sfdc_users_xf.sql","name":"wk_sales_sfdc_users_xf","alias":"sfdc_users_xf","checksum":{"name":"sha256","checksum":"49f1663c3bf4d77c597e3f13a829f5b677addf2658defcbb0a61a0980ede672a"},"tags":["workspace"],"refs":[["sfdc_user_roles_source"],["sfdc_user_roles_source"],["dim_crm_user"],["dim_crm_user"]],"sources":[["salesforce","user"]],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/wk_sales_sfdc_users_xf.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["workspace"],"alias":"sfdc_users_xf"},"created_at":1689033678.2520957,"compiled_sql":"$1a","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_sales.sfdc_users_xf","label":"wk_sales_sfdc_users_xf"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_SALES","name":"MART_CRM_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":3,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"MERGED_TO_ACCOUNT_ID","comment":null,"display_name":"merged_to_account_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":5,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"CRM_ACCOUNT_OWNER_ID":{"type":"TEXT","index":6,"name":"CRM_ACCOUNT_OWNER_ID","comment":null,"display_name":"crm_account_owner_id"},"PROPOSED_CRM_ACCOUNT_OWNER_ID":{"type":"TEXT","index":7,"name":"PROPOSED_CRM_ACCOUNT_OWNER_ID","comment":null,"display_name":"proposed_crm_account_owner_id"},"TECHNICAL_ACCOUNT_MANAGER_ID":{"type":"TEXT","index":8,"name":"TECHNICAL_ACCOUNT_MANAGER_ID","comment":null,"display_name":"technical_account_manager_id"},"MASTER_RECORD_ID":{"type":"TEXT","index":9,"name":"MASTER_RECORD_ID","comment":null,"display_name":"master_record_id"},"DIM_CRM_PERSON_PRIMARY_CONTACT_ID":{"type":"TEXT","index":10,"name":"DIM_CRM_PERSON_PRIMARY_CONTACT_ID","comment":null,"display_name":"dim_crm_person_primary_contact_id"},"CRM_ACCOUNT_OWNER":{"type":"TEXT","index":11,"name":"CRM_ACCOUNT_OWNER","comment":null,"display_name":"crm_account_owner"},"ACCOUNT_OWNER":{"type":"TEXT","index":12,"name":"ACCOUNT_OWNER","comment":null,"display_name":"account_owner"},"PROPOSED_CRM_ACCOUNT_OWNER":{"type":"TEXT","index":13,"name":"PROPOSED_CRM_ACCOUNT_OWNER","comment":null,"display_name":"proposed_crm_account_owner"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":14,"name":"TECHNICAL_ACCOUNT_MANAGER","comment":null,"display_name":"technical_account_manager"},"OWNER_ROLE":{"type":"TEXT","index":15,"name":"OWNER_ROLE","comment":null,"display_name":"owner_role"},"USER_ROLE_TYPE":{"type":"TEXT","index":16,"name":"USER_ROLE_TYPE","comment":null,"display_name":"user_role_type"},"CRM_ACCOUNT_OWNER_GEO":{"type":"TEXT","index":17,"name":"CRM_ACCOUNT_OWNER_GEO","comment":null,"display_name":"crm_account_owner_geo"},"CRM_ACCOUNT_OWNER_REGION":{"type":"TEXT","index":18,"name":"CRM_ACCOUNT_OWNER_REGION","comment":null,"display_name":"crm_account_owner_region"},"CRM_ACCOUNT_OWNER_AREA":{"type":"TEXT","index":19,"name":"CRM_ACCOUNT_OWNER_AREA","comment":null,"display_name":"crm_account_owner_area"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":20,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":21,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":22,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":23,"name":"PARENT_CRM_ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"parent_crm_account_business_unit"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":24,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":25,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":26,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":27,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":28,"name":"PARENT_CRM_ACCOUNT_ROLE_TYPE","comment":null,"display_name":"parent_crm_account_role_type"},"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":29,"name":"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"parent_crm_account_max_family_employee"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":30,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":31,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":32,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":33,"name":"PARENT_CRM_ACCOUNT_UPA_STREET","comment":null,"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":34,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":35,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"CRM_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":36,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"crm_account_employee_count"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":37,"name":"CRM_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"crm_account_gtm_strategy"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":38,"name":"CRM_ACCOUNT_FOCUS_ACCOUNT","comment":null,"display_name":"crm_account_focus_account"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":39,"name":"CRM_ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"crm_account_owner_user_segment"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":40,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_BILLING_COUNTRY_CODE":{"type":"TEXT","index":41,"name":"CRM_ACCOUNT_BILLING_COUNTRY_CODE","comment":null,"display_name":"crm_account_billing_country_code"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":42,"name":"CRM_ACCOUNT_TYPE","comment":null,"display_name":"crm_account_type"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":43,"name":"CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"crm_account_industry"},"CRM_ACCOUNT_SUB_INDUSTRY":{"type":"TEXT","index":44,"name":"CRM_ACCOUNT_SUB_INDUSTRY","comment":null,"display_name":"crm_account_sub_industry"},"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND":{"type":"TEXT","index":45,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND","comment":null,"display_name":"crm_account_employee_count_band"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":46,"name":"PARTNER_VAT_TAX_ID","comment":null,"display_name":"partner_vat_tax_id"},"ACCOUNT_MANAGER":{"type":"TEXT","index":47,"name":"ACCOUNT_MANAGER","comment":null,"display_name":"account_manager"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":48,"name":"BUSINESS_DEVELOPMENT_REP","comment":null,"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":49,"name":"DEDICATED_SERVICE_ENGINEER","comment":null,"display_name":"dedicated_service_engineer"},"ACCOUNT_TIER":{"type":"TEXT","index":50,"name":"ACCOUNT_TIER","comment":null,"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":51,"name":"ACCOUNT_TIER_NOTES","comment":null,"display_name":"account_tier_notes"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":52,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":53,"name":"SUPPORT_LEVEL","comment":null,"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":54,"name":"NAMED_ACCOUNT","comment":null,"display_name":"named_account"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":55,"name":"BILLING_POSTAL_CODE","comment":null,"display_name":"billing_postal_code"},"PARTNER_TYPE":{"type":"TEXT","index":56,"name":"PARTNER_TYPE","comment":null,"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":57,"name":"PARTNER_STATUS","comment":null,"display_name":"partner_status"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":58,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":59,"name":"DEMANDBASE_ACCOUNT_LIST","comment":null,"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":60,"name":"DEMANDBASE_INTENT","comment":null,"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":61,"name":"DEMANDBASE_PAGE_VIEWS","comment":null,"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":62,"name":"DEMANDBASE_SCORE","comment":null,"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":63,"name":"DEMANDBASE_SESSIONS","comment":null,"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":64,"name":"DEMANDBASE_TRENDING_OFFSITE_INTENT","comment":null,"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":65,"name":"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT","comment":null,"display_name":"demandbase_trending_onsite_engagement"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":66,"name":"IS_LOCALLY_MANAGED_ACCOUNT","comment":null,"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":67,"name":"IS_STRATEGIC_ACCOUNT","comment":null,"display_name":"is_strategic_account"},"PARTNER_TRACK":{"type":"TEXT","index":68,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":69,"name":"PARTNERS_PARTNER_TYPE","comment":null,"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":70,"name":"GITLAB_PARTNER_PROGRAM","comment":null,"display_name":"gitlab_partner_program"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":71,"name":"ZOOM_INFO_COMPANY_NAME","comment":null,"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":72,"name":"ZOOM_INFO_COMPANY_REVENUE","comment":null,"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":73,"name":"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT","comment":null,"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":74,"name":"ZOOM_INFO_COMPANY_INDUSTRY","comment":null,"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":75,"name":"ZOOM_INFO_COMPANY_CITY","comment":null,"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":76,"name":"ZOOM_INFO_COMPANY_STATE_PROVINCE","comment":null,"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":77,"name":"ZOOM_INFO_COMPANY_COUNTRY","comment":null,"display_name":"zoom_info_company_country"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":78,"name":"ZOOMINFO_ACCOUNT_PHONE","comment":null,"display_name":"zoominfo_account_phone"},"ACCOUNT_PHONE":{"type":"TEXT","index":79,"name":"ACCOUNT_PHONE","comment":null,"display_name":"account_phone"},"ABM_TIER":{"type":"TEXT","index":80,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"HEALTH_NUMBER":{"type":"FLOAT","index":81,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":82,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":83,"name":"PARTNER_ACCOUNT_IBAN_NUMBER","comment":null,"display_name":"partner_account_iban_number"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":84,"name":"GITLAB_COM_USER","comment":null,"display_name":"gitlab_com_user"},"CRM_ACCOUNT_ZI_TECHNOLOGIES":{"type":"TEXT","index":85,"name":"CRM_ACCOUNT_ZI_TECHNOLOGIES","comment":null,"display_name":"crm_account_zi_technologies"},"CRM_ACCOUNT_ZOOM_INFO_WEBSITE":{"type":"TEXT","index":86,"name":"CRM_ACCOUNT_ZOOM_INFO_WEBSITE","comment":null,"display_name":"crm_account_zoom_info_website"},"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":87,"name":"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS","comment":null,"display_name":"crm_account_zoom_info_company_other_domains"},"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":88,"name":"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_dozisf_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":89,"name":"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":90,"name":"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME","comment":null,"display_name":"crm_account_zoom_info_parent_company_name"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":91,"name":"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_ultimate_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":92,"name":"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME","comment":null,"display_name":"crm_account_zoom_info_ultimate_parent_company_name"},"FORBES_2000_RANK":{"type":"TEXT","index":93,"name":"FORBES_2000_RANK","comment":null,"display_name":"forbes_2000_rank"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":94,"name":"SALES_DEVELOPMENT_REP","comment":null,"display_name":"sales_development_rep"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":95,"name":"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES","comment":null,"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":96,"name":"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS","comment":null,"display_name":"admin_manual_source_account_address"},"EOA_SENTIMENT":{"type":"TEXT","index":97,"name":"eoa_sentiment","comment":null,"description":" Red - customer was unhappy with the announcement and there's potential risk of churn\nYellow - customer exhibited some dissatisfaction with the announcement but likely won't churn\nGreen - customer responded favourably to the announcement and is a strong candidate to uptier ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":98,"name":"gs_health_user_engagement","comment":null,"description":" [Customer health score for engaging in meetings, cadence calls, or EBRs](https://about.gitlab.com/handbook/customer-success/customer-health-scoring/#customer-engagement). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":99,"name":"gs_health_cd","comment":null,"description":" Customer [health score for CD use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#cd-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":100,"name":"gs_health_devsecops","comment":null,"description":" Customer [health score for DevSecOps use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#devsecops-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":101,"name":"gs_health_ci","comment":null,"description":" Customer [health score for CI use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#ci-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":102,"name":"gs_health_scm","comment":null,"description":" [Customer health score for source code management (SCM) use case adoption](https://about.gitlab.com/handbook/marketing/brand-and-product-marketing/product-and-solution-marketing/usecase-gtm/version-control-collaboration/#adoption-guide). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":103,"name":"RISK_IMPACT","comment":null,"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":104,"name":"RISK_REASON","comment":null,"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":105,"name":"LAST_TIMELINE_AT_RISK_UPDATE","comment":null,"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":106,"name":"last_at_risk_update_comments","comment":null,"description":" The most recent Account-level At-Risk Update timeline activity in Gainsight, synced to Salesforce. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_at_risk_update_comments"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":107,"name":"bdr_prospecting_status","comment":null,"description":"Indicates whether the account is actively being prospected by a BDR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bdr_prospecting_status"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":108,"name":"IS_SDR_TARGET_ACCOUNT","comment":null,"display_name":"is_sdr_target_account"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":109,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"IS_RESELLER":{"type":"BOOLEAN","index":110,"name":"IS_RESELLER","comment":null,"display_name":"is_reseller"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":112,"name":"IS_FIRST_ORDER_AVAILABLE","comment":null,"display_name":"is_first_order_available"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":113,"name":"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH","comment":null,"display_name":"is_excluded_from_zoom_info_enrich"},"IS_ZI_JENKINS_PRESENT":{"type":"NUMBER","index":114,"name":"IS_ZI_JENKINS_PRESENT","comment":null,"display_name":"is_zi_jenkins_present"},"IS_ZI_SVN_PRESENT":{"type":"NUMBER","index":115,"name":"IS_ZI_SVN_PRESENT","comment":null,"display_name":"is_zi_svn_present"},"IS_ZI_TORTOISE_SVN_PRESENT":{"type":"NUMBER","index":116,"name":"IS_ZI_TORTOISE_SVN_PRESENT","comment":null,"display_name":"is_zi_tortoise_svn_present"},"IS_ZI_GCP_PRESENT":{"type":"NUMBER","index":117,"name":"IS_ZI_GCP_PRESENT","comment":null,"display_name":"is_zi_gcp_present"},"IS_ZI_ATLASSIAN_PRESENT":{"type":"NUMBER","index":118,"name":"IS_ZI_ATLASSIAN_PRESENT","comment":null,"display_name":"is_zi_atlassian_present"},"IS_ZI_GITHUB_PRESENT":{"type":"NUMBER","index":119,"name":"IS_ZI_GITHUB_PRESENT","comment":null,"display_name":"is_zi_github_present"},"IS_ZI_GITHUB_ENTERPRISE_PRESENT":{"type":"NUMBER","index":120,"name":"IS_ZI_GITHUB_ENTERPRISE_PRESENT","comment":null,"display_name":"is_zi_github_enterprise_present"},"IS_ZI_AWS_PRESENT":{"type":"NUMBER","index":121,"name":"IS_ZI_AWS_PRESENT","comment":null,"display_name":"is_zi_aws_present"},"IS_ZI_KUBERNETES_PRESENT":{"type":"NUMBER","index":122,"name":"IS_ZI_KUBERNETES_PRESENT","comment":null,"display_name":"is_zi_kubernetes_present"},"IS_ZI_APACHE_SUBVERSION_PRESENT":{"type":"NUMBER","index":123,"name":"IS_ZI_APACHE_SUBVERSION_PRESENT","comment":null,"display_name":"is_zi_apache_subversion_present"},"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT":{"type":"NUMBER","index":124,"name":"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT","comment":null,"display_name":"is_zi_apache_subversion_svn_present"},"IS_ZI_HASHICORP_PRESENT":{"type":"NUMBER","index":125,"name":"IS_ZI_HASHICORP_PRESENT","comment":null,"display_name":"is_zi_hashicorp_present"},"IS_ZI_AWS_CLOUD_TRAIL_PRESENT":{"type":"NUMBER","index":126,"name":"IS_ZI_AWS_CLOUD_TRAIL_PRESENT","comment":null,"display_name":"is_zi_aws_cloud_trail_present"},"IS_ZI_CIRCLE_CI_PRESENT":{"type":"NUMBER","index":127,"name":"IS_ZI_CIRCLE_CI_PRESENT","comment":null,"display_name":"is_zi_circle_ci_present"},"IS_ZI_BIT_BUCKET_PRESENT":{"type":"NUMBER","index":128,"name":"IS_ZI_BIT_BUCKET_PRESENT","comment":null,"display_name":"is_zi_bit_bucket_present"},"CRM_ACCOUNT_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":129,"name":"CRM_ACCOUNT_CREATED_DATE","comment":null,"display_name":"crm_account_created_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":130,"name":"ABM_TIER_1_DATE","comment":null,"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":131,"name":"ABM_TIER_2_DATE","comment":null,"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":132,"name":"ABM_TIER_3_DATE","comment":null,"display_name":"abm_tier_3_date"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":133,"name":"GTM_ACCELERATION_DATE","comment":null,"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":134,"name":"GTM_ACCOUNT_BASED_DATE","comment":null,"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":135,"name":"GTM_ACCOUNT_CENTRIC_DATE","comment":null,"display_name":"gtm_account_centric_date"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"DATE","index":136,"name":"PARTNERS_SIGNED_CONTRACT_DATE","comment":null,"display_name":"partners_signed_contract_date"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":137,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":138,"name":"NEXT_RENEWAL_DATE","comment":null,"display_name":"next_renewal_date"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":139,"name":"CUSTOMER_SINCE_DATE","comment":null,"display_name":"customer_since_date"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":140,"name":"gs_first_value_date","comment":null,"description":" Date when the account reached 10% of license utiliztion. The goal is to reach this within 30 days. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":141,"name":"gs_last_csm_activity_date","comment":null,"description":" Last time the CSM had contact with the customer. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_last_csm_activity_date"},"COUNT_ACTIVE_SUBSCRIPTION_CHARGES":{"type":"FLOAT","index":142,"name":"COUNT_ACTIVE_SUBSCRIPTION_CHARGES","comment":null,"display_name":"count_active_subscription_charges"},"COUNT_ACTIVE_SUBSCRIPTIONS":{"type":"FLOAT","index":143,"name":"COUNT_ACTIVE_SUBSCRIPTIONS","comment":null,"display_name":"count_active_subscriptions"},"COUNT_BILLING_ACCOUNTS":{"type":"FLOAT","index":144,"name":"COUNT_BILLING_ACCOUNTS","comment":null,"display_name":"count_billing_accounts"},"COUNT_LICENSED_USERS":{"type":"FLOAT","index":145,"name":"COUNT_LICENSED_USERS","comment":null,"display_name":"count_licensed_users"},"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES":{"type":"FLOAT","index":146,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES","comment":null,"display_name":"count_of_new_business_won_opportunities"},"COUNT_OPEN_RENEWAL_OPPORTUNITIES":{"type":"FLOAT","index":147,"name":"COUNT_OPEN_RENEWAL_OPPORTUNITIES","comment":null,"display_name":"count_open_renewal_opportunities"},"COUNT_OPPORTUNITIES":{"type":"FLOAT","index":148,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_PRODUCTS_PURCHASED":{"type":"FLOAT","index":149,"name":"COUNT_PRODUCTS_PURCHASED","comment":null,"display_name":"count_products_purchased"},"COUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":150,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_CONCURRENT_EE_SUBSCRIPTIONS":{"type":"FLOAT","index":151,"name":"COUNT_CONCURRENT_EE_SUBSCRIPTIONS","comment":null,"display_name":"count_concurrent_ee_subscriptions"},"COUNT_CE_INSTANCES":{"type":"FLOAT","index":152,"name":"COUNT_CE_INSTANCES","comment":null,"display_name":"count_ce_instances"},"COUNT_ACTIVE_CE_USERS":{"type":"FLOAT","index":153,"name":"COUNT_ACTIVE_CE_USERS","comment":null,"display_name":"count_active_ce_users"},"COUNT_OPEN_OPPORTUNITIES":{"type":"FLOAT","index":154,"name":"COUNT_OPEN_OPPORTUNITIES","comment":null,"display_name":"count_open_opportunities"},"COUNT_USING_CE":{"type":"BOOLEAN","index":155,"name":"COUNT_USING_CE","comment":null,"display_name":"count_using_ce"},"PARENT_CRM_ACCOUNT_LAM":{"type":"FLOAT","index":156,"name":"PARENT_CRM_ACCOUNT_LAM","comment":null,"display_name":"parent_crm_account_lam"},"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT":{"type":"FLOAT","index":157,"name":"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT","comment":null,"display_name":"parent_crm_account_lam_dev_count"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":158,"name":"CARR_THIS_ACCOUNT","comment":null,"display_name":"carr_this_account"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":159,"name":"CARR_ACCOUNT_FAMILY","comment":null,"display_name":"carr_account_family"},"POTENTIAL_USERS":{"type":"FLOAT","index":160,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"NUMBER_OF_LICENSES_THIS_ACCOUNT":{"type":"FLOAT","index":161,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT","comment":null,"display_name":"number_of_licenses_this_account"},"CRM_ACCOUNT_ZOOM_INFO_NUMBER_OF_DEVELOPERS":{"type":"FLOAT","index":162,"name":"CRM_ACCOUNT_ZOOM_INFO_NUMBER_OF_DEVELOPERS","comment":null,"display_name":"crm_account_zoom_info_number_of_developers"},"CRM_ACCOUNT_ZOOM_INFO_TOTAL_FUNDING":{"type":"TEXT","index":163,"name":"CRM_ACCOUNT_ZOOM_INFO_TOTAL_FUNDING","comment":null,"display_name":"crm_account_zoom_info_total_funding"},"DECISION_MAKER_COUNT_LINKEDIN":{"type":"FLOAT","index":164,"name":"DECISION_MAKER_COUNT_LINKEDIN","comment":null,"display_name":"decision_maker_count_linkedin"},"NUMBER_OF_EMPLOYEES":{"type":"NUMBER","index":165,"name":"NUMBER_OF_EMPLOYEES","comment":null,"display_name":"number_of_employees"},"CREATED_BY_ID":{"type":"TEXT","index":166,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"CREATED_BY_NAME":{"type":"TEXT","index":167,"name":"CREATED_BY_NAME","comment":null,"display_name":"created_by_name"},"LAST_MODIFIED_BY_ID":{"type":"TEXT","index":168,"name":"LAST_MODIFIED_BY_ID","comment":null,"display_name":"last_modified_by_id"},"LAST_MODIFIED_BY_NAME":{"type":"TEXT","index":169,"name":"LAST_MODIFIED_BY_NAME","comment":null,"display_name":"last_modified_by_name"},"LAST_MODIFIED_DATE_ID":{"type":"NUMBER","index":170,"name":"LAST_MODIFIED_DATE_ID","comment":null,"display_name":"last_modified_date_id"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":171,"name":"LAST_MODIFIED_DATE","comment":null,"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":172,"name":"LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"last_activity_date_id"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":173,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"IS_DELETED":{"type":"BOOLEAN","index":174,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"CREATED_BY":{"type":"TEXT","index":175,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":176,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":177,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":178,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":179,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":180,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:08UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":71392768,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_crm_account","raw_sql":"$1b","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.fct_crm_account","model.gitlab_snowflake.fct_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_sales","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","restricted_safe","mart_crm_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/restricted_safe/mart_crm_account.sql","original_file_path":"models/common_mart_sales/restricted_safe/mart_crm_account.sql","name":"mart_crm_account","alias":"mart_crm_account","checksum":{"name":"sha256","checksum":"7ca0c2cff22749ecd36bdc7151109272252a1a79938c9a2b4f7d0ca1ff49f031"},"tags":["safe"],"refs":[["dim_crm_account"],["dim_crm_account"],["fct_crm_account"],["fct_crm_account"],["dim_crm_user"],["dim_crm_user"]],"sources":[],"metrics":[],"description":"Model containing Salesforce crm accounts details for existing and historical customers.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_sales/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/restricted_safe/mart_crm_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033765.2595706,"compiled_sql":"$1c","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_sales.mart_crm_account","label":"mart_crm_account"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON","name":"DIM_CRM_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"Account ID from SFDC identifing the customer","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"dbt_utils.relationships_where","short":"+","label":"dbt_utils.relationships_where({\"to\":\"ref('dim_crm_account')\",\"field\":\"dim_crm_account_id\",\"from_condition\":\"GREATEST(IFNULL(lead_created_date, '1999-01-01'), IFNULL(contact_created_date, '1999-01-01')) <= DATEADD('day', -2, CURRENT_DATE)::DATE\",\"model\":\"{{ get_where_subquery(ref('fct_crm_person')) }}\"})"},{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"dbt_utils.relationships_where","short":"+","label":"dbt_utils.relationships_where({\"to\":\"ref('dim_crm_account')\",\"field\":\"dim_crm_account_id\",\"from_condition\":\"created_date <= DATEADD('day', -3, CURRENT_DATE)::DATE\",\"model\":\"{{ get_where_subquery(ref('fct_crm_opportunity')) }}\"})"}],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_parent_crm_account_id","comment":null,"description":"Ultimate parent account 18 character Salesforce ID","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_crm_account_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":3,"name":"dim_crm_user_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_user_id"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"merged_to_account_id","comment":null,"description":"For deleted accounts, this is the SFDC account they were merged into","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merged_to_account_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":5,"name":"record_type_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"record_type_id"},"MASTER_RECORD_ID":{"type":"TEXT","index":6,"name":"master_record_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"master_record_id"},"DIM_CRM_PERSON_PRIMARY_CONTACT_ID":{"type":"TEXT","index":7,"name":"dim_crm_person_primary_contact_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_person_primary_contact_id"},"CRM_ACCOUNT_OWNER":{"type":"TEXT","index":8,"name":"crm_account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_owner"},"PROPOSED_CRM_ACCOUNT_OWNER":{"type":"TEXT","index":9,"name":"proposed_crm_account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"proposed_crm_account_owner"},"ACCOUNT_OWNER":{"type":"TEXT","index":10,"name":"account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":11,"name":"technical_account_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager"},"OWNER_ROLE":{"type":"TEXT","index":12,"name":"owner_role","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"owner_role"},"USER_ROLE_TYPE":{"type":"TEXT","index":13,"name":"user_role_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_role_type"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":14,"name":"parent_crm_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":15,"name":"parent_crm_account_sales_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":16,"name":"parent_crm_account_sales_segment_grouped","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment_grouped"},"PARENT_CRM_ACCOUNT_SEGMENT_REGION_STAMPED_GROUPED":{"type":"TEXT","index":17,"name":"parent_crm_account_segment_region_stamped_grouped","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_segment_region_stamped_grouped"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":18,"name":"parent_crm_account_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":19,"name":"parent_crm_account_business_unit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_business_unit"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":20,"name":"parent_crm_account_geo","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":21,"name":"parent_crm_account_region","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":22,"name":"parent_crm_account_area","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":23,"name":"parent_crm_account_territory","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":24,"name":"parent_crm_account_role_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_role_type"},"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":25,"name":"parent_crm_account_max_family_employee","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_max_family_employee"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":26,"name":"parent_crm_account_upa_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":27,"name":"parent_crm_account_upa_state","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":28,"name":"parent_crm_account_upa_city","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":29,"name":"parent_crm_account_upa_street","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":30,"name":"parent_crm_account_upa_postal_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_postal_code"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":31,"name":"crm_account_name","comment":null,"description":"Account name from SFDC","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"CRM_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":32,"name":"crm_account_employee_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_employee_count"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":33,"name":"crm_account_gtm_strategy","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_gtm_strategy"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":34,"name":"crm_account_focus_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_focus_account"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":35,"name":"crm_account_owner_user_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_owner_user_segment"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":36,"name":"crm_account_billing_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_BILLING_COUNTRY_CODE":{"type":"TEXT","index":37,"name":"crm_account_billing_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_billing_country_code"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":38,"name":"crm_account_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_type"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":39,"name":"crm_account_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_industry"},"CRM_ACCOUNT_SUB_INDUSTRY":{"type":"TEXT","index":40,"name":"crm_account_sub_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_sub_industry"},"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND":{"type":"TEXT","index":41,"name":"crm_account_employee_count_band","comment":null,"description":"Employee count band the account belongs to based on the account_max_family_employee. Bands include \"> 2K\", \"> 1.5K\", \"> 1K\".","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_employee_count_band"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":42,"name":"partner_vat_tax_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_vat_tax_id"},"ACCOUNT_MANAGER":{"type":"TEXT","index":43,"name":"account_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_manager"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":44,"name":"business_development_rep","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":45,"name":"dedicated_service_engineer","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dedicated_service_engineer"},"ACCOUNT_TIER":{"type":"TEXT","index":46,"name":"account_tier","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":47,"name":"account_tier_notes","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_tier_notes"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":48,"name":"license_utilization","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":49,"name":"support_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":50,"name":"named_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"named_account"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":51,"name":"billing_postal_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_postal_code"},"PARTNER_TYPE":{"type":"TEXT","index":52,"name":"partner_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":53,"name":"partner_status","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_status"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":54,"name":"gitlab_customer_success_project","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_customer_success_project"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":55,"name":"demandbase_account_list","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":56,"name":"demandbase_intent","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":57,"name":"demandbase_page_views","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":58,"name":"demandbase_score","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":59,"name":"demandbase_sessions","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":60,"name":"demandbase_trending_offsite_intent","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":61,"name":"demandbase_trending_onsite_engagement","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_trending_onsite_engagement"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":62,"name":"is_locally_managed_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":63,"name":"is_strategic_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_strategic_account"},"PARTNER_TRACK":{"type":"TEXT","index":64,"name":"partner_track","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":65,"name":"partners_partner_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":66,"name":"gitlab_partner_program","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_partner_program"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":67,"name":"zoom_info_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":68,"name":"zoom_info_company_revenue","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":69,"name":"zoom_info_company_employee_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":70,"name":"zoom_info_company_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":71,"name":"zoom_info_company_city","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":72,"name":"zoom_info_company_state_province","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":73,"name":"zoom_info_company_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_country"},"ACCOUNT_PHONE":{"type":"TEXT","index":74,"name":"account_phone","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_phone"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":75,"name":"zoominfo_account_phone","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoominfo_account_phone"},"ABM_TIER":{"type":"TEXT","index":76,"name":"abm_tier","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier"},"HEALTH_NUMBER":{"type":"FLOAT","index":77,"name":"health_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":78,"name":"health_score_color","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"health_score_color"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":79,"name":"partner_account_iban_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_account_iban_number"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":80,"name":"gitlab_com_user","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_user"},"CRM_ACCOUNT_ZI_TECHNOLOGIES":{"type":"TEXT","index":81,"name":"crm_account_zi_technologies","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zi_technologies"},"CRM_ACCOUNT_ZOOM_INFO_WEBSITE":{"type":"TEXT","index":82,"name":"crm_account_zoom_info_website","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_website"},"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":83,"name":"crm_account_zoom_info_company_other_domains","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_company_other_domains"},"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":84,"name":"crm_account_zoom_info_dozisf_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_dozisf_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":85,"name":"crm_account_zoom_info_parent_company_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":86,"name":"crm_account_zoom_info_parent_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_parent_company_name"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":87,"name":"crm_account_zoom_info_ultimate_parent_company_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_ultimate_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":88,"name":"crm_account_zoom_info_ultimate_parent_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_ultimate_parent_company_name"},"FORBES_2000_RANK":{"type":"TEXT","index":89,"name":"forbes_2000_rank","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"forbes_2000_rank"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":90,"name":"sales_development_rep","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_development_rep"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":91,"name":"admin_manual_source_number_of_employees","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":92,"name":"admin_manual_source_account_address","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"admin_manual_source_account_address"},"EOA_SENTIMENT":{"type":"TEXT","index":93,"name":"eoa_sentiment","comment":null,"description":" Red - customer was unhappy with the announcement and there's potential risk of churn\nYellow - customer exhibited some dissatisfaction with the announcement but likely won't churn\nGreen - customer responded favourably to the announcement and is a strong candidate to uptier ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":94,"name":"gs_health_user_engagement","comment":null,"description":" [Customer health score for engaging in meetings, cadence calls, or EBRs](https://about.gitlab.com/handbook/customer-success/customer-health-scoring/#customer-engagement). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":95,"name":"gs_health_cd","comment":null,"description":" Customer [health score for CD use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#cd-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":96,"name":"gs_health_devsecops","comment":null,"description":" Customer [health score for DevSecOps use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#devsecops-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":97,"name":"gs_health_ci","comment":null,"description":" Customer [health score for CI use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#ci-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":98,"name":"gs_health_scm","comment":null,"description":" [Customer health score for source code management (SCM) use case adoption](https://about.gitlab.com/handbook/marketing/brand-and-product-marketing/product-and-solution-marketing/usecase-gtm/version-control-collaboration/#adoption-guide). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":99,"name":"risk_impact","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":100,"name":"risk_reason","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":101,"name":"last_timeline_at_risk_update","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":102,"name":"last_at_risk_update_comments","comment":null,"description":" The most recent Account-level At-Risk Update timeline activity in Gainsight, synced to Salesforce. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_at_risk_update_comments"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":103,"name":"BDR_PROSPECTING_STATUS","comment":null,"display_name":"bdr_prospecting_status"},"PARENT_CRM_ACCOUNT_LAM":{"type":"FLOAT","index":104,"name":"parent_crm_account_lam","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_lam"},"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT":{"type":"FLOAT","index":105,"name":"parent_crm_account_lam_dev_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_lam_dev_count"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":106,"name":"carr_account_family","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"carr_account_family"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":107,"name":"carr_this_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"carr_this_account"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":108,"name":"is_sdr_target_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sdr_target_account"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":109,"name":"is_key_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_key_account"},"IS_RESELLER":{"type":"BOOLEAN","index":110,"name":"is_reseller","comment":null,"description":"Identify whether a crm_account is a reseller.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_reseller"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"is_jihu_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_jihu_account"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":112,"name":"is_first_order_available","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_order_available"},"IS_ZI_JENKINS_PRESENT":{"type":"NUMBER","index":113,"name":"is_zi_jenkins_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_jenkins_present"},"IS_ZI_SVN_PRESENT":{"type":"NUMBER","index":114,"name":"is_zi_svn_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_svn_present"},"IS_ZI_TORTOISE_SVN_PRESENT":{"type":"NUMBER","index":115,"name":"is_zi_tortoise_svn_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_tortoise_svn_present"},"IS_ZI_GCP_PRESENT":{"type":"NUMBER","index":116,"name":"is_zi_gcp_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_gcp_present"},"IS_ZI_ATLASSIAN_PRESENT":{"type":"NUMBER","index":117,"name":"is_zi_atlassian_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_atlassian_present"},"IS_ZI_GITHUB_PRESENT":{"type":"NUMBER","index":118,"name":"is_zi_github_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_github_present"},"IS_ZI_GITHUB_ENTERPRISE_PRESENT":{"type":"NUMBER","index":119,"name":"is_zi_github_enterprise_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_github_enterprise_present"},"IS_ZI_AWS_PRESENT":{"type":"NUMBER","index":120,"name":"is_zi_aws_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_aws_present"},"IS_ZI_KUBERNETES_PRESENT":{"type":"NUMBER","index":121,"name":"is_zi_kubernetes_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_kubernetes_present"},"IS_ZI_APACHE_SUBVERSION_PRESENT":{"type":"NUMBER","index":122,"name":"is_zi_apache_subversion_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_apache_subversion_present"},"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT":{"type":"NUMBER","index":123,"name":"is_zi_apache_subversion_svn_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_apache_subversion_svn_present"},"IS_ZI_HASHICORP_PRESENT":{"type":"NUMBER","index":124,"name":"is_zi_hashicorp_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_hashicorp_present"},"IS_ZI_AWS_CLOUD_TRAIL_PRESENT":{"type":"NUMBER","index":125,"name":"is_zi_aws_cloud_trail_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_aws_cloud_trail_present"},"IS_ZI_CIRCLE_CI_PRESENT":{"type":"NUMBER","index":126,"name":"is_zi_circle_ci_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_circle_ci_present"},"IS_ZI_BIT_BUCKET_PRESENT":{"type":"NUMBER","index":127,"name":"is_zi_bit_bucket_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_bit_bucket_present"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":128,"name":"is_excluded_from_zoom_info_enrich","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_excluded_from_zoom_info_enrich"},"CRM_ACCOUNT_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":129,"name":"crm_account_created_date","comment":null,"description":"The date on which the CRM account was created in SFDC","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_created_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":130,"name":"abm_tier_1_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":131,"name":"abm_tier_2_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":132,"name":"abm_tier_3_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_3_date"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":133,"name":"gtm_acceleration_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":134,"name":"gtm_account_based_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":135,"name":"gtm_account_centric_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_account_centric_date"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"DATE","index":136,"name":"partners_signed_contract_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partners_signed_contract_date"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":137,"name":"technical_account_manager_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager_date"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":138,"name":"customer_since_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_since_date"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":139,"name":"next_renewal_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"next_renewal_date"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":140,"name":"gs_first_value_date","comment":null,"description":" Date when the account reached 10% of license utiliztion. The goal is to reach this within 30 days. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":141,"name":"gs_last_csm_activity_date","comment":null,"description":" Last time the CSM had contact with the customer. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_last_csm_activity_date"},"CREATED_BY_NAME":{"type":"TEXT","index":142,"name":"created_by_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by_name"},"LAST_MODIFIED_BY_NAME":{"type":"TEXT","index":143,"name":"last_modified_by_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_modified_by_name"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":144,"name":"last_modified_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":145,"name":"last_activity_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_activity_date"},"IS_DELETED":{"type":"BOOLEAN","index":146,"name":"is_deleted","comment":null,"description":"Flag indicating if account has been deleted","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_deleted"},"PTE_SCORE":{"type":"NUMBER","index":147,"name":"pte_score","comment":null,"description":"Propensity to expand scores from pte_scores_source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pte_score"},"PTE_DECILE":{"type":"NUMBER","index":148,"name":"pte_decile","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pte_decile"},"PTE_SCORE_GROUP":{"type":"NUMBER","index":149,"name":"pte_score_group","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pte_score_group"},"PTC_SCORE":{"type":"NUMBER","index":150,"name":"ptc_score","comment":null,"description":"Propensity to contract and churn scores from ptc_scores_source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptc_score"},"PTC_DECILE":{"type":"NUMBER","index":151,"name":"ptc_decile","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptc_decile"},"PTC_SCORE_GROUP":{"type":"NUMBER","index":152,"name":"ptc_score_group","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptc_score_group"},"CREATED_BY":{"type":"TEXT","index":153,"name":"created_by","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":154,"name":"updated_by","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":155,"name":"model_created_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":156,"name":"model_updated_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":157,"name":"dbt_updated_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":158,"name":"dbt_created_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:07UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":69577728,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_crm_account","raw_sql":"$1d","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model","macro.gitlab_snowflake.missing_member_column"],"nodes":["model.gitlab_snowflake.prep_crm_account","model.gitlab_snowflake.prep_crm_account"]},"config":{"enabled":true,"alias":"dim_crm_account","schema":"restricted_safe_common","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null},{"sql":"{{ missing_member_column(primary_key = 'dim_crm_account_id', not_null_test_cols = ['is_reseller']) }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common","fqn":["gitlab_snowflake","common","dimensions_shared","restricted_safe","dim_crm_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/restricted_safe/dim_crm_account.sql","original_file_path":"models/common/dimensions_shared/restricted_safe/dim_crm_account.sql","name":"dim_crm_account","alias":"dim_crm_account","checksum":{"name":"sha256","checksum":"826460cc404a35e0194800d84ecc908ea8b1d4280f9a6190fe0fab28bb7e3456"},"tags":["safe"],"refs":[["prep_crm_account"],["prep_crm_account"]],"sources":[],"metrics":[],"description":"Dimensional customer table representing all existing and historical customers from SalesForce. There are customer definitions for external reporting and additional customer definitions for internal reporting defined in the [handbook](https://about.gitlab.com/handbook/sales/#customer).\n\nThe Customer Account Management business process can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#1-customer-account-management-and-conversion-of-lead-to-opportunity).\n\nThe grain of the table is the SalesForce Account, also referred to as `DIM_CRM_ACCOUNT_ID`.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/restricted_safe/dim_crm_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common","copy_grants":true,"post-hook":["{{ missing_member_column(primary_key = 'dim_crm_account_id', not_null_test_cols = ['is_reseller']) }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"dim_crm_account"},"created_at":1689033752.0030825,"compiled_sql":"$1e","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common.dim_crm_account","label":"dim_crm_account"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_SALES","name":"SFDC_OPPORTUNITY_XF","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":1,"name":"ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"account_owner_user_segment"},"ACCOUNT_OWNER_RAW_USER_SEGMENT":{"type":"TEXT","index":2,"name":"ACCOUNT_OWNER_RAW_USER_SEGMENT","comment":null,"display_name":"account_owner_raw_user_segment"},"ACCOUNT_OWNER_USER_GEO":{"type":"TEXT","index":3,"name":"ACCOUNT_OWNER_USER_GEO","comment":null,"display_name":"account_owner_user_geo"},"ACCOUNT_OWNER_USER_REGION":{"type":"TEXT","index":4,"name":"ACCOUNT_OWNER_USER_REGION","comment":null,"display_name":"account_owner_user_region"},"ACCOUNT_OWNER_USER_AREA":{"type":"TEXT","index":5,"name":"ACCOUNT_OWNER_USER_AREA","comment":null,"display_name":"account_owner_user_area"},"ACCOUNT_OWNER_USER_BUSINESS_UNIT":{"type":"TEXT","index":6,"name":"ACCOUNT_OWNER_USER_BUSINESS_UNIT","comment":null,"display_name":"account_owner_user_business_unit"},"ACCOUNT_OWNER_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":7,"name":"ACCOUNT_OWNER_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"account_owner_user_sub_business_unit"},"ACCOUNT_OWNER_USER_DIVISION":{"type":"TEXT","index":8,"name":"ACCOUNT_OWNER_USER_DIVISION","comment":null,"display_name":"account_owner_user_division"},"ACCOUNT_OWNER_USER_ASM":{"type":"TEXT","index":9,"name":"ACCOUNT_OWNER_USER_ASM","comment":null,"display_name":"account_owner_user_asm"},"ACCOUNT_OWNER_USER_ROLE_TYPE":{"type":"TEXT","index":10,"name":"ACCOUNT_OWNER_USER_ROLE_TYPE","comment":null,"display_name":"account_owner_user_role_type"},"OPPORTUNITY_OWNER_USER_BUSINESS_UNIT":{"type":"TEXT","index":11,"name":"OPPORTUNITY_OWNER_USER_BUSINESS_UNIT","comment":null,"display_name":"opportunity_owner_user_business_unit"},"OPPORTUNITY_OWNER_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":12,"name":"OPPORTUNITY_OWNER_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"opportunity_owner_user_sub_business_unit"},"OPPORTUNITY_OWNER_USER_DIVISION":{"type":"TEXT","index":13,"name":"OPPORTUNITY_OWNER_USER_DIVISION","comment":null,"display_name":"opportunity_owner_user_division"},"OPPORTUNITY_OWNER_USER_ASM":{"type":"TEXT","index":14,"name":"OPPORTUNITY_OWNER_USER_ASM","comment":null,"display_name":"opportunity_owner_user_asm"},"OPPORTUNITY_OWNER_USER_ROLE_TYPE":{"type":"TEXT","index":15,"name":"OPPORTUNITY_OWNER_USER_ROLE_TYPE","comment":null,"display_name":"opportunity_owner_user_role_type"},"OPPORTUNITY_OWNER_USER_SEGMENT":{"type":"TEXT","index":16,"name":"OPPORTUNITY_OWNER_USER_SEGMENT","comment":null,"display_name":"opportunity_owner_user_segment"},"OPPORTUNITY_OWNER_RAW_USER_SEGMENT":{"type":"TEXT","index":17,"name":"OPPORTUNITY_OWNER_RAW_USER_SEGMENT","comment":null,"display_name":"opportunity_owner_raw_user_segment"},"OPPORTUNITY_OWNER_USER_GEO":{"type":"TEXT","index":18,"name":"OPPORTUNITY_OWNER_USER_GEO","comment":null,"display_name":"opportunity_owner_user_geo"},"OPPORTUNITY_OWNER_USER_REGION":{"type":"TEXT","index":19,"name":"OPPORTUNITY_OWNER_USER_REGION","comment":null,"display_name":"opportunity_owner_user_region"},"OPPORTUNITY_OWNER_USER_AREA":{"type":"TEXT","index":20,"name":"OPPORTUNITY_OWNER_USER_AREA","comment":null,"display_name":"opportunity_owner_user_area"},"REPORT_OPPORTUNITY_USER_SEGMENT":{"type":"TEXT","index":21,"name":"REPORT_OPPORTUNITY_USER_SEGMENT","comment":null,"display_name":"report_opportunity_user_segment"},"REPORT_OPPORTUNITY_RAW_USER_SEGMENT":{"type":"TEXT","index":22,"name":"REPORT_OPPORTUNITY_RAW_USER_SEGMENT","comment":null,"display_name":"report_opportunity_raw_user_segment"},"REPORT_OPPORTUNITY_USER_GEO":{"type":"TEXT","index":23,"name":"REPORT_OPPORTUNITY_USER_GEO","comment":null,"display_name":"report_opportunity_user_geo"},"REPORT_OPPORTUNITY_USER_REGION":{"type":"TEXT","index":24,"name":"REPORT_OPPORTUNITY_USER_REGION","comment":null,"display_name":"report_opportunity_user_region"},"REPORT_OPPORTUNITY_USER_AREA":{"type":"TEXT","index":25,"name":"REPORT_OPPORTUNITY_USER_AREA","comment":null,"display_name":"report_opportunity_user_area"},"REPORT_OPPORTUNITY_USER_BUSINESS_UNIT":{"type":"TEXT","index":26,"name":"REPORT_OPPORTUNITY_USER_BUSINESS_UNIT","comment":null,"display_name":"report_opportunity_user_business_unit"},"REPORT_OPPORTUNITY_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":27,"name":"REPORT_OPPORTUNITY_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"report_opportunity_user_sub_business_unit"},"REPORT_OPPORTUNITY_USER_DIVISION":{"type":"TEXT","index":28,"name":"REPORT_OPPORTUNITY_USER_DIVISION","comment":null,"display_name":"report_opportunity_user_division"},"REPORT_OPPORTUNITY_USER_ASM":{"type":"TEXT","index":29,"name":"REPORT_OPPORTUNITY_USER_ASM","comment":null,"display_name":"report_opportunity_user_asm"},"REPORT_OPPORTUNITY_USER_ROLE_TYPE":{"type":"TEXT","index":30,"name":"REPORT_OPPORTUNITY_USER_ROLE_TYPE","comment":null,"display_name":"report_opportunity_user_role_type"},"PARTNER_CATEGORY":{"type":"TEXT","index":31,"name":"PARTNER_CATEGORY","comment":null,"display_name":"partner_category"},"ALLIANCE_PARTNER":{"type":"TEXT","index":32,"name":"ALLIANCE_PARTNER","comment":null,"display_name":"alliance_partner"},"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":33,"name":"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT","comment":null,"display_name":"report_user_segment_geo_region_area_sqs_ot"},"REPORT_USER_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":34,"name":"REPORT_USER_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"report_user_segment_geo_region_area"},"REPORT_BU_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":35,"name":"REPORT_BU_USER_SEGMENT_GEO_REGION_AREA_SQS_OT","comment":null,"display_name":"report_bu_user_segment_geo_region_area_sqs_ot"},"REPORT_BU_SUBBU_DIVISION_ASM_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":36,"name":"REPORT_BU_SUBBU_DIVISION_ASM_USER_SEGMENT_GEO_REGION_AREA_SQS_OT","comment":null,"display_name":"report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot"},"REPORT_BU_SUBBU_DIVISION_ASM_USER_SEGMENT_GEO_REGION_AREA_SQS_OT_RT_PC_AP":{"type":"TEXT","index":37,"name":"REPORT_BU_SUBBU_DIVISION_ASM_USER_SEGMENT_GEO_REGION_AREA_SQS_OT_RT_PC_AP","comment":null,"display_name":"report_bu_subbu_division_asm_user_segment_geo_region_area_sqs_ot_rt_pc_ap"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_LTZ","index":38,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"ACCOUNT_ID":{"type":"TEXT","index":39,"name":"ACCOUNT_ID","comment":null,"display_name":"account_id"},"OPPORTUNITY_ID":{"type":"TEXT","index":40,"name":"OPPORTUNITY_ID","comment":null,"display_name":"opportunity_id"},"OPPORTUNITY_NAME":{"type":"TEXT","index":41,"name":"OPPORTUNITY_NAME","comment":null,"display_name":"opportunity_name"},"CLOSE_DATE":{"type":"DATE","index":42,"name":"CLOSE_DATE","comment":null,"display_name":"close_date"},"CREATED_DATE":{"type":"DATE","index":43,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"SALES_ACCEPTED_DATE":{"type":"DATE","index":44,"name":"SALES_ACCEPTED_DATE","comment":null,"display_name":"sales_accepted_date"},"SALES_QUALIFIED_DATE":{"type":"DATE","index":45,"name":"SALES_QUALIFIED_DATE","comment":null,"display_name":"sales_qualified_date"},"QUOTE_START_DATE":{"type":"DATE","index":46,"name":"QUOTE_START_DATE","comment":null,"display_name":"quote_start_date"},"QUOTE_END_DATE":{"type":"DATE","index":47,"name":"QUOTE_END_DATE","comment":null,"display_name":"quote_end_date"},"DAYS_IN_STAGE":{"type":"NUMBER","index":48,"name":"DAYS_IN_STAGE","comment":null,"display_name":"days_in_stage"},"DEPLOYMENT_PREFERENCE":{"type":"TEXT","index":49,"name":"DEPLOYMENT_PREFERENCE","comment":null,"display_name":"deployment_preference"},"MERGED_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":50,"name":"MERGED_CRM_OPPORTUNITY_ID","comment":null,"display_name":"merged_crm_opportunity_id"},"OWNER_ID":{"type":"TEXT","index":51,"name":"OWNER_ID","comment":null,"display_name":"owner_id"},"OPPORTUNITY_OWNER":{"type":"TEXT","index":52,"name":"OPPORTUNITY_OWNER","comment":null,"display_name":"opportunity_owner"},"OPPORTUNITY_OWNER_DEPARTMENT":{"type":"TEXT","index":53,"name":"OPPORTUNITY_OWNER_DEPARTMENT","comment":null,"display_name":"opportunity_owner_department"},"OPPORTUNITY_OWNER_MANAGER":{"type":"TEXT","index":54,"name":"OPPORTUNITY_OWNER_MANAGER","comment":null,"display_name":"opportunity_owner_manager"},"OPPORTUNITY_OWNER_ROLE":{"type":"TEXT","index":55,"name":"OPPORTUNITY_OWNER_ROLE","comment":null,"display_name":"opportunity_owner_role"},"OPPORTUNITY_OWNER_TITLE":{"type":"TEXT","index":56,"name":"OPPORTUNITY_OWNER_TITLE","comment":null,"display_name":"opportunity_owner_title"},"OPPORTUNITY_TERM":{"type":"FLOAT","index":57,"name":"OPPORTUNITY_TERM","comment":null,"display_name":"opportunity_term"},"PRIMARY_CAMPAIGN_SOURCE_ID":{"type":"TEXT","index":58,"name":"PRIMARY_CAMPAIGN_SOURCE_ID","comment":null,"display_name":"primary_campaign_source_id"},"SALES_PATH":{"type":"TEXT","index":59,"name":"SALES_PATH","comment":null,"display_name":"sales_path"},"SALES_TYPE":{"type":"TEXT","index":60,"name":"SALES_TYPE","comment":null,"display_name":"sales_type"},"STAGE_NAME":{"type":"TEXT","index":61,"name":"STAGE_NAME","comment":null,"display_name":"stage_name"},"ORDER_TYPE_STAMPED":{"type":"TEXT","index":62,"name":"ORDER_TYPE_STAMPED","comment":null,"display_name":"order_type_stamped"},"ORDER_TYPE_LIVE":{"type":"TEXT","index":63,"name":"ORDER_TYPE_LIVE","comment":null,"display_name":"order_type_live"},"RAW_NET_ARR":{"type":"FLOAT","index":64,"name":"RAW_NET_ARR","comment":null,"display_name":"raw_net_arr"},"NET_ARR":{"type":"FLOAT","index":65,"name":"NET_ARR","comment":null,"display_name":"net_arr"},"AMOUNT":{"type":"FLOAT","index":66,"name":"AMOUNT","comment":null,"display_name":"amount"},"RENEWAL_AMOUNT":{"type":"FLOAT","index":67,"name":"RENEWAL_AMOUNT","comment":null,"display_name":"renewal_amount"},"RECURRING_AMOUNT":{"type":"FLOAT","index":68,"name":"RECURRING_AMOUNT","comment":null,"display_name":"recurring_amount"},"TRUE_UP_AMOUNT":{"type":"FLOAT","index":69,"name":"TRUE_UP_AMOUNT","comment":null,"display_name":"true_up_amount"},"PROSERV_AMOUNT":{"type":"FLOAT","index":70,"name":"PROSERV_AMOUNT","comment":null,"display_name":"proserv_amount"},"OTHER_NON_RECURRING_AMOUNT":{"type":"FLOAT","index":71,"name":"OTHER_NON_RECURRING_AMOUNT","comment":null,"display_name":"other_non_recurring_amount"},"ARR_BASIS":{"type":"FLOAT","index":72,"name":"ARR_BASIS","comment":null,"display_name":"arr_basis"},"ARR":{"type":"FLOAT","index":73,"name":"ARR","comment":null,"display_name":"arr"},"COMPETITORS":{"type":"TEXT","index":74,"name":"COMPETITORS","comment":null,"display_name":"competitors"},"FPA_MASTER_BOOKINGS_FLAG":{"type":"BOOLEAN","index":75,"name":"FPA_MASTER_BOOKINGS_FLAG","comment":null,"display_name":"fpa_master_bookings_flag"},"FORECAST_CATEGORY_NAME":{"type":"TEXT","index":76,"name":"FORECAST_CATEGORY_NAME","comment":null,"display_name":"forecast_category_name"},"INVOICE_NUMBER":{"type":"TEXT","index":77,"name":"INVOICE_NUMBER","comment":null,"display_name":"invoice_number"},"PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":78,"name":"PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"professional_services_value"},"IS_PS_OPP":{"type":"FLOAT","index":79,"name":"IS_PS_OPP","comment":null,"display_name":"is_ps_opp"},"REASON_FOR_LOSS":{"type":"TEXT","index":80,"name":"REASON_FOR_LOSS","comment":null,"display_name":"reason_for_loss"},"REASON_FOR_LOSS_DETAILS":{"type":"TEXT","index":81,"name":"REASON_FOR_LOSS_DETAILS","comment":null,"display_name":"reason_for_loss_details"},"DOWNGRADE_REASON":{"type":"TEXT","index":82,"name":"DOWNGRADE_REASON","comment":null,"display_name":"downgrade_reason"},"LEAD_SOURCE":{"type":"TEXT","index":83,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"IS_DOWNGRADE":{"type":"FLOAT","index":84,"name":"IS_DOWNGRADE","comment":null,"display_name":"is_downgrade"},"IS_EDU_OSS":{"type":"FLOAT","index":85,"name":"IS_EDU_OSS","comment":null,"display_name":"is_edu_oss"},"SOLUTIONS_TO_BE_REPLACED":{"type":"TEXT","index":86,"name":"SOLUTIONS_TO_BE_REPLACED","comment":null,"display_name":"solutions_to_be_replaced"},"TOTAL_CONTRACT_VALUE":{"type":"FLOAT","index":87,"name":"TOTAL_CONTRACT_VALUE","comment":null,"display_name":"total_contract_value"},"IS_WEB_PORTAL_PURCHASE":{"type":"BOOLEAN","index":88,"name":"IS_WEB_PORTAL_PURCHASE","comment":null,"display_name":"is_web_portal_purchase"},"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":89,"name":"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_business_development_representative"},"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":90,"name":"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_sales_development_representative"},"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":91,"name":"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_development_representative"},"OPPORTUNITY_HEALTH":{"type":"TEXT","index":92,"name":"OPPORTUNITY_HEALTH","comment":null,"display_name":"opportunity_health"},"IS_RISKY":{"type":"BOOLEAN","index":93,"name":"IS_RISKY","comment":null,"display_name":"is_risky"},"RISK_TYPE":{"type":"TEXT","index":94,"name":"RISK_TYPE","comment":null,"display_name":"risk_type"},"RISK_REASONS":{"type":"TEXT","index":95,"name":"RISK_REASONS","comment":null,"display_name":"risk_reasons"},"TAM_NOTES":{"type":"TEXT","index":96,"name":"TAM_NOTES","comment":null,"display_name":"tam_notes"},"DAYS_IN_1_DISCOVERY":{"type":"FLOAT","index":97,"name":"DAYS_IN_1_DISCOVERY","comment":null,"display_name":"days_in_1_discovery"},"DAYS_IN_2_SCOPING":{"type":"FLOAT","index":98,"name":"DAYS_IN_2_SCOPING","comment":null,"display_name":"days_in_2_scoping"},"DAYS_IN_3_TECHNICAL_EVALUATION":{"type":"FLOAT","index":99,"name":"DAYS_IN_3_TECHNICAL_EVALUATION","comment":null,"display_name":"days_in_3_technical_evaluation"},"DAYS_IN_4_PROPOSAL":{"type":"FLOAT","index":100,"name":"DAYS_IN_4_PROPOSAL","comment":null,"display_name":"days_in_4_proposal"},"DAYS_IN_5_NEGOTIATING":{"type":"FLOAT","index":101,"name":"DAYS_IN_5_NEGOTIATING","comment":null,"display_name":"days_in_5_negotiating"},"STAGE_0_PENDING_ACCEPTANCE_DATE":{"type":"DATE","index":102,"name":"STAGE_0_PENDING_ACCEPTANCE_DATE","comment":null,"display_name":"stage_0_pending_acceptance_date"},"STAGE_1_DISCOVERY_DATE":{"type":"DATE","index":103,"name":"STAGE_1_DISCOVERY_DATE","comment":null,"display_name":"stage_1_discovery_date"},"STAGE_2_SCOPING_DATE":{"type":"DATE","index":104,"name":"STAGE_2_SCOPING_DATE","comment":null,"display_name":"stage_2_scoping_date"},"STAGE_3_TECHNICAL_EVALUATION_DATE":{"type":"DATE","index":105,"name":"STAGE_3_TECHNICAL_EVALUATION_DATE","comment":null,"display_name":"stage_3_technical_evaluation_date"},"STAGE_4_PROPOSAL_DATE":{"type":"DATE","index":106,"name":"STAGE_4_PROPOSAL_DATE","comment":null,"display_name":"stage_4_proposal_date"},"STAGE_5_NEGOTIATING_DATE":{"type":"DATE","index":107,"name":"STAGE_5_NEGOTIATING_DATE","comment":null,"display_name":"stage_5_negotiating_date"},"STAGE_6_AWAITING_SIGNATURE_DATE":{"type":"DATE","index":108,"name":"STAGE_6_AWAITING_SIGNATURE_DATE","comment":null,"display_name":"stage_6_awaiting_signature_date"},"STAGE_6_CLOSED_WON_DATE":{"type":"DATE","index":109,"name":"STAGE_6_CLOSED_WON_DATE","comment":null,"display_name":"stage_6_closed_won_date"},"STAGE_6_CLOSED_LOST_DATE":{"type":"DATE","index":110,"name":"STAGE_6_CLOSED_LOST_DATE","comment":null,"display_name":"stage_6_closed_lost_date"},"CP_CHAMPION":{"type":"TEXT","index":111,"name":"CP_CHAMPION","comment":null,"display_name":"cp_champion"},"CP_CLOSE_PLAN":{"type":"TEXT","index":112,"name":"CP_CLOSE_PLAN","comment":null,"display_name":"cp_close_plan"},"CP_COMPETITION":{"type":"TEXT","index":113,"name":"CP_COMPETITION","comment":null,"display_name":"cp_competition"},"CP_DECISION_CRITERIA":{"type":"TEXT","index":114,"name":"CP_DECISION_CRITERIA","comment":null,"display_name":"cp_decision_criteria"},"CP_DECISION_PROCESS":{"type":"TEXT","index":115,"name":"CP_DECISION_PROCESS","comment":null,"display_name":"cp_decision_process"},"CP_ECONOMIC_BUYER":{"type":"TEXT","index":116,"name":"CP_ECONOMIC_BUYER","comment":null,"display_name":"cp_economic_buyer"},"CP_IDENTIFY_PAIN":{"type":"TEXT","index":117,"name":"CP_IDENTIFY_PAIN","comment":null,"display_name":"cp_identify_pain"},"CP_METRICS":{"type":"TEXT","index":118,"name":"CP_METRICS","comment":null,"display_name":"cp_metrics"},"CP_RISKS":{"type":"TEXT","index":119,"name":"CP_RISKS","comment":null,"display_name":"cp_risks"},"CP_USE_CASES":{"type":"TEXT","index":120,"name":"CP_USE_CASES","comment":null,"display_name":"cp_use_cases"},"CP_VALUE_DRIVER":{"type":"TEXT","index":121,"name":"CP_VALUE_DRIVER","comment":null,"display_name":"cp_value_driver"},"CP_WHY_DO_ANYTHING_AT_ALL":{"type":"TEXT","index":122,"name":"CP_WHY_DO_ANYTHING_AT_ALL","comment":null,"display_name":"cp_why_do_anything_at_all"},"CP_WHY_GITLAB":{"type":"TEXT","index":123,"name":"CP_WHY_GITLAB","comment":null,"display_name":"cp_why_gitlab"},"CP_WHY_NOW":{"type":"TEXT","index":124,"name":"CP_WHY_NOW","comment":null,"display_name":"cp_why_now"},"CP_SCORE":{"type":"FLOAT","index":125,"name":"CP_SCORE","comment":null,"display_name":"cp_score"},"OPPORTUNITY_CATEGORY":{"type":"TEXT","index":126,"name":"OPPORTUNITY_CATEGORY","comment":null,"display_name":"opportunity_category"},"PRODUCT_CATEGORY":{"type":"TEXT","index":127,"name":"PRODUCT_CATEGORY","comment":null,"display_name":"product_category"},"DEAL_PATH":{"type":"TEXT","index":128,"name":"DEAL_PATH","comment":null,"display_name":"deal_path"},"DR_PARTNER_DEAL_TYPE":{"type":"TEXT","index":129,"name":"DR_PARTNER_DEAL_TYPE","comment":null,"display_name":"dr_partner_deal_type"},"DR_PARTNER_ENGAGEMENT":{"type":"TEXT","index":130,"name":"DR_PARTNER_ENGAGEMENT","comment":null,"display_name":"dr_partner_engagement"},"PARTNER_ACCOUNT":{"type":"TEXT","index":131,"name":"PARTNER_ACCOUNT","comment":null,"display_name":"partner_account"},"PARTNER_ACCOUNT_NAME":{"type":"TEXT","index":132,"name":"PARTNER_ACCOUNT_NAME","comment":null,"display_name":"partner_account_name"},"DR_STATUS":{"type":"TEXT","index":133,"name":"DR_STATUS","comment":null,"display_name":"dr_status"},"DISTRIBUTOR":{"type":"TEXT","index":134,"name":"DISTRIBUTOR","comment":null,"display_name":"distributor"},"INFLUENCE_PARTNER":{"type":"TEXT","index":135,"name":"INFLUENCE_PARTNER","comment":null,"display_name":"influence_partner"},"PARTNER_TRACK":{"type":"TEXT","index":136,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"PARTNER_GITLAB_PROGRAM":{"type":"TEXT","index":137,"name":"PARTNER_GITLAB_PROGRAM","comment":null,"display_name":"partner_gitlab_program"},"IS_PUBLIC_SECTOR_OPP":{"type":"BOOLEAN","index":138,"name":"IS_PUBLIC_SECTOR_OPP","comment":null,"display_name":"is_public_sector_opp"},"IS_REGISTRATION_FROM_PORTAL":{"type":"BOOLEAN","index":139,"name":"IS_REGISTRATION_FROM_PORTAL","comment":null,"display_name":"is_registration_from_portal"},"CALCULATED_DISCOUNT":{"type":"FLOAT","index":140,"name":"CALCULATED_DISCOUNT","comment":null,"display_name":"calculated_discount"},"PARTNER_DISCOUNT":{"type":"FLOAT","index":141,"name":"PARTNER_DISCOUNT","comment":null,"display_name":"partner_discount"},"PARTNER_DISCOUNT_CALC":{"type":"FLOAT","index":142,"name":"PARTNER_DISCOUNT_CALC","comment":null,"display_name":"partner_discount_calc"},"COMP_CHANNEL_NEUTRAL":{"type":"FLOAT","index":143,"name":"COMP_CHANNEL_NEUTRAL","comment":null,"display_name":"comp_channel_neutral"},"RESALE_PARTNER_ID":{"type":"TEXT","index":144,"name":"RESALE_PARTNER_ID","comment":null,"display_name":"resale_partner_id"},"RESALE_PARTNER_NAME":{"type":"TEXT","index":145,"name":"RESALE_PARTNER_NAME","comment":null,"display_name":"resale_partner_name"},"PLATFORM_PARTNER":{"type":"TEXT","index":146,"name":"PLATFORM_PARTNER","comment":null,"display_name":"platform_partner"},"ACCOUNT_NAME":{"type":"TEXT","index":147,"name":"ACCOUNT_NAME","comment":null,"display_name":"account_name"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":148,"name":"ULTIMATE_PARENT_ACCOUNT_ID","comment":null,"display_name":"ultimate_parent_account_id"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":149,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"ACCOUNT_OWNER_NAME":{"type":"TEXT","index":150,"name":"ACCOUNT_OWNER_NAME","comment":null,"display_name":"account_owner_name"},"ACCOUNT_OWNER_ID":{"type":"TEXT","index":151,"name":"ACCOUNT_OWNER_ID","comment":null,"display_name":"account_owner_id"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":152,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":153,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":154,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":155,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":156,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"SALES_QUALIFIED_SOURCE":{"type":"TEXT","index":157,"name":"SALES_QUALIFIED_SOURCE","comment":null,"display_name":"sales_qualified_source"},"STAGE_CATEGORY":{"type":"TEXT","index":158,"name":"STAGE_CATEGORY","comment":null,"display_name":"stage_category"},"CALCULATED_PARTNER_TRACK":{"type":"TEXT","index":159,"name":"CALCULATED_PARTNER_TRACK","comment":null,"display_name":"calculated_partner_track"},"DEAL_PATH_ENGAGEMENT":{"type":"TEXT","index":160,"name":"DEAL_PATH_ENGAGEMENT","comment":null,"display_name":"deal_path_engagement"},"IS_REFUND":{"type":"FLOAT","index":161,"name":"IS_REFUND","comment":null,"display_name":"is_refund"},"IS_CREDIT_FLAG":{"type":"NUMBER","index":162,"name":"IS_CREDIT_FLAG","comment":null,"display_name":"is_credit_flag"},"IS_CONTRACT_RESET_FLAG":{"type":"NUMBER","index":163,"name":"IS_CONTRACT_RESET_FLAG","comment":null,"display_name":"is_contract_reset_flag"},"IS_NET_ARR_PIPELINE_CREATED":{"type":"BOOLEAN","index":164,"name":"IS_NET_ARR_PIPELINE_CREATED","comment":null,"display_name":"is_net_arr_pipeline_created"},"IS_WON":{"type":"NUMBER","index":165,"name":"IS_WON","comment":null,"display_name":"is_won"},"IS_LOST":{"type":"NUMBER","index":166,"name":"IS_LOST","comment":null,"display_name":"is_lost"},"IS_OPEN":{"type":"NUMBER","index":167,"name":"IS_OPEN","comment":null,"display_name":"is_open"},"IS_DUPLICATE_FLAG":{"type":"NUMBER","index":168,"name":"IS_DUPLICATE_FLAG","comment":null,"display_name":"is_duplicate_flag"},"IS_CLOSED":{"type":"NUMBER","index":169,"name":"IS_CLOSED","comment":null,"display_name":"is_closed"},"STAGE_IS_CLOSED":{"type":"BOOLEAN","index":170,"name":"STAGE_IS_CLOSED","comment":null,"display_name":"stage_is_closed"},"STAGE_IS_ACTIVE":{"type":"BOOLEAN","index":171,"name":"STAGE_IS_ACTIVE","comment":null,"display_name":"stage_is_active"},"IS_RENEWAL":{"type":"NUMBER","index":172,"name":"IS_RENEWAL","comment":null,"display_name":"is_renewal"},"CLOSE_FISCAL_QUARTER_NAME":{"type":"TEXT","index":173,"name":"CLOSE_FISCAL_QUARTER_NAME","comment":null,"display_name":"close_fiscal_quarter_name"},"CLOSE_FISCAL_QUARTER_DATE":{"type":"DATE","index":174,"name":"CLOSE_FISCAL_QUARTER_DATE","comment":null,"display_name":"close_fiscal_quarter_date"},"CLOSE_FISCAL_YEAR":{"type":"NUMBER","index":175,"name":"CLOSE_FISCAL_YEAR","comment":null,"display_name":"close_fiscal_year"},"CLOSE_DATE_MONTH":{"type":"DATE","index":176,"name":"CLOSE_DATE_MONTH","comment":null,"display_name":"close_date_month"},"CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":177,"name":"CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"created_fiscal_quarter_name"},"CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":178,"name":"CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"created_fiscal_quarter_date"},"CREATED_FISCAL_YEAR":{"type":"NUMBER","index":179,"name":"CREATED_FISCAL_YEAR","comment":null,"display_name":"created_fiscal_year"},"CREATED_DATE_MONTH":{"type":"DATE","index":180,"name":"CREATED_DATE_MONTH","comment":null,"display_name":"created_date_month"},"QUOTE_START_DATE_FISCAL_QUARTER_NAME":{"type":"TEXT","index":181,"name":"QUOTE_START_DATE_FISCAL_QUARTER_NAME","comment":null,"display_name":"quote_start_date_fiscal_quarter_name"},"QUOTE_START_DATE_FISCAL_QUARTER_DATE":{"type":"DATE","index":182,"name":"QUOTE_START_DATE_FISCAL_QUARTER_DATE","comment":null,"display_name":"quote_start_date_fiscal_quarter_date"},"QUOTE_START_DATE_FISCAL_YEAR":{"type":"NUMBER","index":183,"name":"QUOTE_START_DATE_FISCAL_YEAR","comment":null,"display_name":"quote_start_date_fiscal_year"},"QUOTE_START_DATE_MONTH":{"type":"DATE","index":184,"name":"QUOTE_START_DATE_MONTH","comment":null,"display_name":"quote_start_date_month"},"SALES_ACCEPTED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":185,"name":"SALES_ACCEPTED_FISCAL_QUARTER_NAME","comment":null,"display_name":"sales_accepted_fiscal_quarter_name"},"SALES_ACCEPTED_FISCAL_QUARTER_DATE":{"type":"DATE","index":186,"name":"SALES_ACCEPTED_FISCAL_QUARTER_DATE","comment":null,"display_name":"sales_accepted_fiscal_quarter_date"},"SALES_ACCEPTED_FISCAL_YEAR":{"type":"NUMBER","index":187,"name":"SALES_ACCEPTED_FISCAL_YEAR","comment":null,"display_name":"sales_accepted_fiscal_year"},"SALES_ACCEPTED_DATE_MONTH":{"type":"DATE","index":188,"name":"SALES_ACCEPTED_DATE_MONTH","comment":null,"display_name":"sales_accepted_date_month"},"SALES_QUALIFIED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":189,"name":"SALES_QUALIFIED_FISCAL_QUARTER_NAME","comment":null,"display_name":"sales_qualified_fiscal_quarter_name"},"SALES_QUALIFIED_FISCAL_QUARTER_DATE":{"type":"DATE","index":190,"name":"SALES_QUALIFIED_FISCAL_QUARTER_DATE","comment":null,"display_name":"sales_qualified_fiscal_quarter_date"},"SALES_QUALIFIED_FISCAL_YEAR":{"type":"NUMBER","index":191,"name":"SALES_QUALIFIED_FISCAL_YEAR","comment":null,"display_name":"sales_qualified_fiscal_year"},"SALES_QUALIFIED_DATE_MONTH":{"type":"DATE","index":192,"name":"SALES_QUALIFIED_DATE_MONTH","comment":null,"display_name":"sales_qualified_date_month"},"NET_ARR_CREATED_DATE":{"type":"DATE","index":193,"name":"NET_ARR_CREATED_DATE","comment":null,"display_name":"net_arr_created_date"},"NET_ARR_CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":194,"name":"NET_ARR_CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"net_arr_created_fiscal_quarter_name"},"NET_ARR_CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":195,"name":"NET_ARR_CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"net_arr_created_fiscal_quarter_date"},"NET_ARR_CREATED_FISCAL_YEAR":{"type":"NUMBER","index":196,"name":"NET_ARR_CREATED_FISCAL_YEAR","comment":null,"display_name":"net_arr_created_fiscal_year"},"NET_ARR_CREATED_DATE_MONTH":{"type":"DATE","index":197,"name":"NET_ARR_CREATED_DATE_MONTH","comment":null,"display_name":"net_arr_created_date_month"},"PIPELINE_CREATED_DATE":{"type":"DATE","index":198,"name":"PIPELINE_CREATED_DATE","comment":null,"display_name":"pipeline_created_date"},"PIPELINE_CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":199,"name":"PIPELINE_CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"pipeline_created_fiscal_quarter_name"},"PIPELINE_CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":200,"name":"PIPELINE_CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"pipeline_created_fiscal_quarter_date"},"PIPELINE_CREATED_FISCAL_YEAR":{"type":"NUMBER","index":201,"name":"PIPELINE_CREATED_FISCAL_YEAR","comment":null,"display_name":"pipeline_created_fiscal_year"},"PIPELINE_CREATED_DATE_MONTH":{"type":"DATE","index":202,"name":"PIPELINE_CREATED_DATE_MONTH","comment":null,"display_name":"pipeline_created_date_month"},"STAGE_1_DATE":{"type":"DATE","index":203,"name":"STAGE_1_DATE","comment":null,"display_name":"stage_1_date"},"STAGE_1_DATE_MONTH":{"type":"DATE","index":204,"name":"STAGE_1_DATE_MONTH","comment":null,"display_name":"stage_1_date_month"},"STAGE_1_FISCAL_YEAR":{"type":"NUMBER","index":205,"name":"STAGE_1_FISCAL_YEAR","comment":null,"display_name":"stage_1_fiscal_year"},"STAGE_1_FISCAL_QUARTER_NAME":{"type":"TEXT","index":206,"name":"STAGE_1_FISCAL_QUARTER_NAME","comment":null,"display_name":"stage_1_fiscal_quarter_name"},"STAGE_1_FISCAL_QUARTER_DATE":{"type":"DATE","index":207,"name":"STAGE_1_FISCAL_QUARTER_DATE","comment":null,"display_name":"stage_1_fiscal_quarter_date"},"STAGE_3_DATE":{"type":"DATE","index":208,"name":"STAGE_3_DATE","comment":null,"display_name":"stage_3_date"},"STAGE_3_DATE_MONTH":{"type":"DATE","index":209,"name":"STAGE_3_DATE_MONTH","comment":null,"display_name":"stage_3_date_month"},"STAGE_3_FISCAL_YEAR":{"type":"NUMBER","index":210,"name":"STAGE_3_FISCAL_YEAR","comment":null,"display_name":"stage_3_fiscal_year"},"STAGE_3_FISCAL_QUARTER_NAME":{"type":"TEXT","index":211,"name":"STAGE_3_FISCAL_QUARTER_NAME","comment":null,"display_name":"stage_3_fiscal_quarter_name"},"STAGE_3_FISCAL_QUARTER_DATE":{"type":"DATE","index":212,"name":"STAGE_3_FISCAL_QUARTER_DATE","comment":null,"display_name":"stage_3_fiscal_quarter_date"},"LAST_ACTIVITY_DATE":{"type":"DATE","index":213,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"LAST_ACTIVITY_FISCAL_YEAR":{"type":"NUMBER","index":214,"name":"LAST_ACTIVITY_FISCAL_YEAR","comment":null,"display_name":"last_activity_fiscal_year"},"LAST_ACTIVITY_FISCAL_QUARTER_NAME":{"type":"TEXT","index":215,"name":"LAST_ACTIVITY_FISCAL_QUARTER_NAME","comment":null,"display_name":"last_activity_fiscal_quarter_name"},"LAST_ACTIVITY_FISCAL_QUARTER_DATE":{"type":"DATE","index":216,"name":"LAST_ACTIVITY_FISCAL_QUARTER_DATE","comment":null,"display_name":"last_activity_fiscal_quarter_date"},"LAST_ACTIVITY_DATE_MONTH":{"type":"DATE","index":217,"name":"LAST_ACTIVITY_DATE_MONTH","comment":null,"display_name":"last_activity_date_month"},"SALES_LAST_ACTIVITY_DATE":{"type":"DATE","index":218,"name":"SALES_LAST_ACTIVITY_DATE","comment":null,"display_name":"sales_last_activity_date"},"SALES_LAST_ACTIVITY_FISCAL_YEAR":{"type":"NUMBER","index":219,"name":"SALES_LAST_ACTIVITY_FISCAL_YEAR","comment":null,"display_name":"sales_last_activity_fiscal_year"},"SALES_LAST_ACTIVITY_FISCAL_QUARTER_NAME":{"type":"TEXT","index":220,"name":"SALES_LAST_ACTIVITY_FISCAL_QUARTER_NAME","comment":null,"display_name":"sales_last_activity_fiscal_quarter_name"},"SALES_LAST_ACTIVITY_FISCAL_QUARTER_DATE":{"type":"DATE","index":221,"name":"SALES_LAST_ACTIVITY_FISCAL_QUARTER_DATE","comment":null,"display_name":"sales_last_activity_fiscal_quarter_date"},"SALES_LAST_ACTIVITY_DATE_MONTH":{"type":"DATE","index":222,"name":"SALES_LAST_ACTIVITY_DATE_MONTH","comment":null,"display_name":"sales_last_activity_date_month"},"COMPETITORS_OTHER_FLAG":{"type":"NUMBER","index":223,"name":"COMPETITORS_OTHER_FLAG","comment":null,"display_name":"competitors_other_flag"},"COMPETITORS_GITLAB_CORE_FLAG":{"type":"NUMBER","index":224,"name":"COMPETITORS_GITLAB_CORE_FLAG","comment":null,"display_name":"competitors_gitlab_core_flag"},"COMPETITORS_NONE_FLAG":{"type":"NUMBER","index":225,"name":"COMPETITORS_NONE_FLAG","comment":null,"display_name":"competitors_none_flag"},"COMPETITORS_GITHUB_ENTERPRISE_FLAG":{"type":"NUMBER","index":226,"name":"COMPETITORS_GITHUB_ENTERPRISE_FLAG","comment":null,"display_name":"competitors_github_enterprise_flag"},"COMPETITORS_BITBUCKET_SERVER_FLAG":{"type":"NUMBER","index":227,"name":"COMPETITORS_BITBUCKET_SERVER_FLAG","comment":null,"display_name":"competitors_bitbucket_server_flag"},"COMPETITORS_UNKNOWN_FLAG":{"type":"NUMBER","index":228,"name":"COMPETITORS_UNKNOWN_FLAG","comment":null,"display_name":"competitors_unknown_flag"},"COMPETITORS_GITHUB_FLAG":{"type":"NUMBER","index":229,"name":"COMPETITORS_GITHUB_FLAG","comment":null,"display_name":"competitors_github_flag"},"COMPETITORS_GITLAB_FLAG":{"type":"NUMBER","index":230,"name":"COMPETITORS_GITLAB_FLAG","comment":null,"display_name":"competitors_gitlab_flag"},"COMPETITORS_JENKINS_FLAG":{"type":"NUMBER","index":231,"name":"COMPETITORS_JENKINS_FLAG","comment":null,"display_name":"competitors_jenkins_flag"},"COMPETITORS_AZURE_DEVOPS_FLAG":{"type":"NUMBER","index":232,"name":"COMPETITORS_AZURE_DEVOPS_FLAG","comment":null,"display_name":"competitors_azure_devops_flag"},"COMPETITORS_SVN_FLAG":{"type":"NUMBER","index":233,"name":"COMPETITORS_SVN_FLAG","comment":null,"display_name":"competitors_svn_flag"},"COMPETITORS_BITBUCKET_FLAG":{"type":"NUMBER","index":234,"name":"COMPETITORS_BITBUCKET_FLAG","comment":null,"display_name":"competitors_bitbucket_flag"},"COMPETITORS_ATLASSIAN_FLAG":{"type":"NUMBER","index":235,"name":"COMPETITORS_ATLASSIAN_FLAG","comment":null,"display_name":"competitors_atlassian_flag"},"COMPETITORS_PERFORCE_FLAG":{"type":"NUMBER","index":236,"name":"COMPETITORS_PERFORCE_FLAG","comment":null,"display_name":"competitors_perforce_flag"},"COMPETITORS_VISUAL_STUDIO_FLAG":{"type":"NUMBER","index":237,"name":"COMPETITORS_VISUAL_STUDIO_FLAG","comment":null,"display_name":"competitors_visual_studio_flag"},"COMPETITORS_AZURE_FLAG":{"type":"NUMBER","index":238,"name":"COMPETITORS_AZURE_FLAG","comment":null,"display_name":"competitors_azure_flag"},"COMPETITORS_AMAZON_CODE_COMMIT_FLAG":{"type":"NUMBER","index":239,"name":"COMPETITORS_AMAZON_CODE_COMMIT_FLAG","comment":null,"display_name":"competitors_amazon_code_commit_flag"},"COMPETITORS_CIRCLECI_FLAG":{"type":"NUMBER","index":240,"name":"COMPETITORS_CIRCLECI_FLAG","comment":null,"display_name":"competitors_circleci_flag"},"COMPETITORS_BAMBOO_FLAG":{"type":"NUMBER","index":241,"name":"COMPETITORS_BAMBOO_FLAG","comment":null,"display_name":"competitors_bamboo_flag"},"COMPETITORS_AWS_FLAG":{"type":"NUMBER","index":242,"name":"COMPETITORS_AWS_FLAG","comment":null,"display_name":"competitors_aws_flag"},"IS_COMP_NEW_LOGO_OVERRIDE":{"type":"NUMBER","index":243,"name":"IS_COMP_NEW_LOGO_OVERRIDE","comment":null,"display_name":"is_comp_new_logo_override"},"IS_STAGE_1_PLUS":{"type":"NUMBER","index":244,"name":"IS_STAGE_1_PLUS","comment":null,"display_name":"is_stage_1_plus"},"IS_STAGE_3_PLUS":{"type":"NUMBER","index":245,"name":"IS_STAGE_3_PLUS","comment":null,"display_name":"is_stage_3_plus"},"IS_STAGE_4_PLUS":{"type":"NUMBER","index":246,"name":"IS_STAGE_4_PLUS","comment":null,"display_name":"is_stage_4_plus"},"STAGE_NAME_3PLUS":{"type":"TEXT","index":247,"name":"STAGE_NAME_3PLUS","comment":null,"display_name":"stage_name_3plus"},"STAGE_NAME_4PLUS":{"type":"TEXT","index":248,"name":"STAGE_NAME_4PLUS","comment":null,"display_name":"stage_name_4plus"},"DEAL_CATEGORY":{"type":"TEXT","index":249,"name":"DEAL_CATEGORY","comment":null,"display_name":"deal_category"},"DEAL_GROUP":{"type":"TEXT","index":250,"name":"DEAL_GROUP","comment":null,"display_name":"deal_group"},"CALCULATED_DEAL_COUNT":{"type":"NUMBER","index":251,"name":"CALCULATED_DEAL_COUNT","comment":null,"display_name":"calculated_deal_count"},"LAM_DEV_COUNT":{"type":"FLOAT","index":252,"name":"LAM_DEV_COUNT","comment":null,"display_name":"lam_dev_count"},"PARTNER_ENGAGED_OPPORTUNITY_FLAG":{"type":"NUMBER","index":253,"name":"PARTNER_ENGAGED_OPPORTUNITY_FLAG","comment":null,"display_name":"partner_engaged_opportunity_flag"},"RENEWAL_TIMING_STATUS":{"type":"TEXT","index":254,"name":"RENEWAL_TIMING_STATUS","comment":null,"display_name":"renewal_timing_status"},"IS_EXCLUDED_FLAG":{"type":"NUMBER","index":255,"name":"IS_EXCLUDED_FLAG","comment":null,"display_name":"is_excluded_flag"},"OPEN_1PLUS_DEAL_COUNT":{"type":"NUMBER","index":256,"name":"OPEN_1PLUS_DEAL_COUNT","comment":null,"display_name":"open_1plus_deal_count"},"OPEN_3PLUS_DEAL_COUNT":{"type":"NUMBER","index":257,"name":"OPEN_3PLUS_DEAL_COUNT","comment":null,"display_name":"open_3plus_deal_count"},"OPEN_4PLUS_DEAL_COUNT":{"type":"NUMBER","index":258,"name":"OPEN_4PLUS_DEAL_COUNT","comment":null,"display_name":"open_4plus_deal_count"},"BOOKED_DEAL_COUNT":{"type":"NUMBER","index":259,"name":"BOOKED_DEAL_COUNT","comment":null,"display_name":"booked_deal_count"},"CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":260,"name":"CHURNED_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"churned_contraction_deal_count"},"BOOKED_CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":261,"name":"BOOKED_CHURNED_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"booked_churned_contraction_deal_count"},"OPEN_1PLUS_NET_ARR":{"type":"FLOAT","index":262,"name":"OPEN_1PLUS_NET_ARR","comment":null,"display_name":"open_1plus_net_arr"},"OPEN_3PLUS_NET_ARR":{"type":"FLOAT","index":263,"name":"OPEN_3PLUS_NET_ARR","comment":null,"display_name":"open_3plus_net_arr"},"OPEN_4PLUS_NET_ARR":{"type":"FLOAT","index":264,"name":"OPEN_4PLUS_NET_ARR","comment":null,"display_name":"open_4plus_net_arr"},"BOOKED_NET_ARR":{"type":"FLOAT","index":265,"name":"BOOKED_NET_ARR","comment":null,"display_name":"booked_net_arr"},"BOOKED_CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":266,"name":"BOOKED_CHURNED_CONTRACTION_NET_ARR","comment":null,"display_name":"booked_churned_contraction_net_arr"},"CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":267,"name":"CHURNED_CONTRACTION_NET_ARR","comment":null,"display_name":"churned_contraction_net_arr"},"DEAL_SIZE":{"type":"TEXT","index":268,"name":"DEAL_SIZE","comment":null,"display_name":"deal_size"},"CALCULATED_DEAL_SIZE":{"type":"TEXT","index":269,"name":"CALCULATED_DEAL_SIZE","comment":null,"display_name":"calculated_deal_size"},"CALCULATED_AGE_IN_DAYS":{"type":"NUMBER","index":270,"name":"CALCULATED_AGE_IN_DAYS","comment":null,"display_name":"calculated_age_in_days"},"IS_ELIGIBLE_CYCLE_TIME_ANALYSIS_FLAG":{"type":"NUMBER","index":271,"name":"IS_ELIGIBLE_CYCLE_TIME_ANALYSIS_FLAG","comment":null,"display_name":"is_eligible_cycle_time_analysis_flag"},"CYCLE_TIME_IN_DAYS":{"type":"NUMBER","index":272,"name":"CYCLE_TIME_IN_DAYS","comment":null,"display_name":"cycle_time_in_days"},"STAGE_NAME_RANK":{"type":"NUMBER","index":273,"name":"STAGE_NAME_RANK","comment":null,"display_name":"stage_name_rank"},"PIPELINE_CATEGORY":{"type":"TEXT","index":274,"name":"PIPELINE_CATEGORY","comment":null,"display_name":"pipeline_category"},"IS_ELIGIBLE_OPEN_PIPELINE_FLAG":{"type":"NUMBER","index":275,"name":"IS_ELIGIBLE_OPEN_PIPELINE_FLAG","comment":null,"display_name":"is_eligible_open_pipeline_flag"},"IS_ELIGIBLE_ASP_ANALYSIS_FLAG":{"type":"NUMBER","index":276,"name":"IS_ELIGIBLE_ASP_ANALYSIS_FLAG","comment":null,"display_name":"is_eligible_asp_analysis_flag"},"IS_ELIGIBLE_AGE_ANALYSIS_FLAG":{"type":"NUMBER","index":277,"name":"IS_ELIGIBLE_AGE_ANALYSIS_FLAG","comment":null,"display_name":"is_eligible_age_analysis_flag"},"IS_BOOKED_NET_ARR_FLAG":{"type":"NUMBER","index":278,"name":"IS_BOOKED_NET_ARR_FLAG","comment":null,"display_name":"is_booked_net_arr_flag"},"IS_ELIGIBLE_CHURN_CONTRACTION_FLAG":{"type":"NUMBER","index":279,"name":"IS_ELIGIBLE_CHURN_CONTRACTION_FLAG","comment":null,"display_name":"is_eligible_churn_contraction_flag"},"CREATED_AND_WON_SAME_QUARTER_NET_ARR":{"type":"FLOAT","index":280,"name":"CREATED_AND_WON_SAME_QUARTER_NET_ARR","comment":null,"display_name":"created_and_won_same_quarter_net_arr"},"CHURN_CONTRACTION_NET_ARR_BUCKET":{"type":"TEXT","index":281,"name":"CHURN_CONTRACTION_NET_ARR_BUCKET","comment":null,"display_name":"churn_contraction_net_arr_bucket"},"REASON_FOR_LOSS_CALC":{"type":"TEXT","index":282,"name":"REASON_FOR_LOSS_CALC","comment":null,"display_name":"reason_for_loss_calc"},"IS_ELIGIBLE_SAO_FLAG":{"type":"NUMBER","index":283,"name":"IS_ELIGIBLE_SAO_FLAG","comment":null,"display_name":"is_eligible_sao_flag"},"IS_DELETED":{"type":"BOOLEAN","index":284,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"IS_REP_FLAG":{"type":"NUMBER","index":285,"name":"IS_REP_FLAG","comment":null,"display_name":"is_rep_flag"},"PUSHED_COUNT":{"type":"FLOAT","index":286,"name":"PUSHED_COUNT","comment":null,"display_name":"pushed_count"},"INTENTED_PRODUCT_TIER":{"type":"TEXT","index":287,"name":"INTENTED_PRODUCT_TIER","comment":null,"display_name":"intented_product_tier"},"PARENT_OPPORTUNITY":{"type":"TEXT","index":288,"name":"PARENT_OPPORTUNITY","comment":null,"display_name":"parent_opportunity"},"PRODUCT_CATEGORY_TIER":{"type":"TEXT","index":289,"name":"PRODUCT_CATEGORY_TIER","comment":null,"display_name":"product_category_tier"},"PRODUCT_CATEGORY_DEPLOYMENT":{"type":"TEXT","index":290,"name":"PRODUCT_CATEGORY_DEPLOYMENT","comment":null,"display_name":"product_category_deployment"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":291,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":292,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":293,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":294,"name":"PARENT_CRM_ACCOUNT_UPA_STREET","comment":null,"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":295,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY_NAME":{"type":"TEXT","index":296,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY_NAME","comment":null,"display_name":"parent_crm_account_upa_country_name"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":297,"name":"PARENT_CRM_ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"parent_crm_account_business_unit"},"REASON_FOR_LOSS_STAGED":{"type":"TEXT","index":298,"name":"REASON_FOR_LOSS_STAGED","comment":null,"display_name":"reason_for_loss_staged"},"CHURN_CONTRACTION_TYPE_CALC":{"type":"TEXT","index":299,"name":"CHURN_CONTRACTION_TYPE_CALC","comment":null,"display_name":"churn_contraction_type_calc"},"TOTAL_PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":300,"name":"TOTAL_PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"total_professional_services_value"},"TOTAL_BOOK_PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":301,"name":"TOTAL_BOOK_PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"total_book_professional_services_value"},"TOTAL_LOST_PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":302,"name":"TOTAL_LOST_PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"total_lost_professional_services_value"},"TOTAL_OPEN_PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":303,"name":"TOTAL_OPEN_PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"total_open_professional_services_value"},"KEY_SQS":{"type":"TEXT","index":304,"name":"KEY_SQS","comment":null,"display_name":"key_sqs"},"KEY_OT":{"type":"TEXT","index":305,"name":"KEY_OT","comment":null,"display_name":"key_ot"},"KEY_SEGMENT":{"type":"TEXT","index":306,"name":"KEY_SEGMENT","comment":null,"display_name":"key_segment"},"KEY_SEGMENT_SQS":{"type":"TEXT","index":307,"name":"KEY_SEGMENT_SQS","comment":null,"display_name":"key_segment_sqs"},"KEY_SEGMENT_OT":{"type":"TEXT","index":308,"name":"KEY_SEGMENT_OT","comment":null,"display_name":"key_segment_ot"},"KEY_SEGMENT_GEO":{"type":"TEXT","index":309,"name":"KEY_SEGMENT_GEO","comment":null,"display_name":"key_segment_geo"},"KEY_SEGMENT_GEO_SQS":{"type":"TEXT","index":310,"name":"KEY_SEGMENT_GEO_SQS","comment":null,"display_name":"key_segment_geo_sqs"},"KEY_SEGMENT_GEO_OT":{"type":"TEXT","index":311,"name":"KEY_SEGMENT_GEO_OT","comment":null,"display_name":"key_segment_geo_ot"},"KEY_SEGMENT_GEO_REGION":{"type":"TEXT","index":312,"name":"KEY_SEGMENT_GEO_REGION","comment":null,"display_name":"key_segment_geo_region"},"KEY_SEGMENT_GEO_REGION_SQS":{"type":"TEXT","index":313,"name":"KEY_SEGMENT_GEO_REGION_SQS","comment":null,"display_name":"key_segment_geo_region_sqs"},"KEY_SEGMENT_GEO_REGION_OT":{"type":"TEXT","index":314,"name":"KEY_SEGMENT_GEO_REGION_OT","comment":null,"display_name":"key_segment_geo_region_ot"},"KEY_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":315,"name":"KEY_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"key_segment_geo_region_area"},"KEY_SEGMENT_GEO_REGION_AREA_SQS":{"type":"TEXT","index":316,"name":"KEY_SEGMENT_GEO_REGION_AREA_SQS","comment":null,"display_name":"key_segment_geo_region_area_sqs"},"KEY_SEGMENT_GEO_REGION_AREA_OT":{"type":"TEXT","index":317,"name":"KEY_SEGMENT_GEO_REGION_AREA_OT","comment":null,"display_name":"key_segment_geo_region_area_ot"},"KEY_SEGMENT_GEO_AREA":{"type":"TEXT","index":318,"name":"KEY_SEGMENT_GEO_AREA","comment":null,"display_name":"key_segment_geo_area"},"SALES_TEAM_CRO_LEVEL":{"type":"TEXT","index":319,"name":"SALES_TEAM_CRO_LEVEL","comment":null,"display_name":"sales_team_cro_level"},"SALES_TEAM_RD_ASM_LEVEL":{"type":"TEXT","index":320,"name":"SALES_TEAM_RD_ASM_LEVEL","comment":null,"display_name":"sales_team_rd_asm_level"},"SALES_TEAM_VP_LEVEL":{"type":"TEXT","index":321,"name":"SALES_TEAM_VP_LEVEL","comment":null,"display_name":"sales_team_vp_level"},"SALES_TEAM_AVP_RD_LEVEL":{"type":"TEXT","index":322,"name":"SALES_TEAM_AVP_RD_LEVEL","comment":null,"display_name":"sales_team_avp_rd_level"},"SALES_TEAM_ASM_LEVEL":{"type":"TEXT","index":323,"name":"SALES_TEAM_ASM_LEVEL","comment":null,"display_name":"sales_team_asm_level"},"KEY_BU":{"type":"TEXT","index":324,"name":"KEY_BU","comment":null,"display_name":"key_bu"},"KEY_BU_OT":{"type":"TEXT","index":325,"name":"KEY_BU_OT","comment":null,"display_name":"key_bu_ot"},"KEY_BU_SQS":{"type":"TEXT","index":326,"name":"KEY_BU_SQS","comment":null,"display_name":"key_bu_sqs"},"KEY_BU_SUBBU":{"type":"TEXT","index":327,"name":"KEY_BU_SUBBU","comment":null,"display_name":"key_bu_subbu"},"KEY_BU_SUBBU_OT":{"type":"TEXT","index":328,"name":"KEY_BU_SUBBU_OT","comment":null,"display_name":"key_bu_subbu_ot"},"KEY_BU_SUBBU_SQS":{"type":"TEXT","index":329,"name":"KEY_BU_SUBBU_SQS","comment":null,"display_name":"key_bu_subbu_sqs"},"KEY_BU_SUBBU_DIVISION":{"type":"TEXT","index":330,"name":"KEY_BU_SUBBU_DIVISION","comment":null,"display_name":"key_bu_subbu_division"},"KEY_BU_SUBBU_DIVISION_OT":{"type":"TEXT","index":331,"name":"KEY_BU_SUBBU_DIVISION_OT","comment":null,"display_name":"key_bu_subbu_division_ot"},"KEY_BU_SUBBU_DIVISION_SQS":{"type":"TEXT","index":332,"name":"KEY_BU_SUBBU_DIVISION_SQS","comment":null,"display_name":"key_bu_subbu_division_sqs"},"KEY_BU_SUBBU_DIVISION_ASM":{"type":"TEXT","index":333,"name":"KEY_BU_SUBBU_DIVISION_ASM","comment":null,"display_name":"key_bu_subbu_division_asm"},"IS_ELIGIBLE_CREATED_PIPELINE_FLAG":{"type":"NUMBER","index":334,"name":"IS_ELIGIBLE_CREATED_PIPELINE_FLAG","comment":null,"display_name":"is_eligible_created_pipeline_flag"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":94152192,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","raw_sql":"$1f","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.wk_sales_mart_crm_opportunity","model.gitlab_snowflake.wk_sales_mart_crm_opportunity","model.gitlab_snowflake.wk_sales_sfdc_users_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf","model.gitlab_snowflake.wk_sales_sfdc_accounts_xf","model.gitlab_snowflake.wk_sales_sfdc_accounts_xf","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_report_agg_demo_sqs_ot_keys","model.gitlab_snowflake.wk_sales_report_agg_demo_sqs_ot_keys","model.gitlab_snowflake.wk_sales_report_agg_keys_base","model.gitlab_snowflake.wk_sales_report_agg_keys_base"]},"config":{"enabled":true,"alias":"sfdc_opportunity_xf","schema":"restricted_safe_workspace_sales","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","restricted_safe","wk_sales_sfdc_opportunity_xf"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/restricted_safe/wk_sales_sfdc_opportunity_xf.sql","original_file_path":"models/workspaces/workspace_sales/restricted_safe/wk_sales_sfdc_opportunity_xf.sql","name":"wk_sales_sfdc_opportunity_xf","alias":"sfdc_opportunity_xf","checksum":{"name":"sha256","checksum":"42a25dd00418d657d740490af9864ea900a8f705dc4ce82ca348a101c260896d"},"tags":["workspace","safe"],"refs":[["wk_sales_mart_crm_opportunity"],["wk_sales_mart_crm_opportunity"],["wk_sales_sfdc_users_xf"],["wk_sales_sfdc_users_xf"],["wk_sales_sfdc_accounts_xf"],["wk_sales_sfdc_accounts_xf"],["wk_sales_date_details"],["wk_sales_date_details"],["wk_sales_report_agg_demo_sqs_ot_keys"],["wk_sales_report_agg_demo_sqs_ot_keys"],["wk_sales_report_agg_keys_base"],["wk_sales_report_agg_keys_base"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_sales_sfdc_opportunity_xf.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"sfdc_opportunity_xf"},"created_at":1689033679.4079306,"compiled_sql":"$20","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_sales.sfdc_opportunity_xf","label":"wk_sales_sfdc_opportunity_xf"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_SALES","name":"MART_ARR","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"PRIMARY_KEY":{"type":"TEXT","index":1,"name":"primary_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"primary_key"},"ARR_MONTH":{"type":"DATE","index":2,"name":"arr_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"arr_month"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":3,"name":"FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"fiscal_quarter_name_fy"},"FISCAL_YEAR":{"type":"NUMBER","index":4,"name":"FISCAL_YEAR","comment":null,"display_name":"fiscal_year"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":5,"name":"SUBSCRIPTION_START_MONTH","comment":null,"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":6,"name":"SUBSCRIPTION_END_MONTH","comment":null,"display_name":"subscription_end_month"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":7,"name":"dim_billing_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"SOLD_TO_COUNTRY":{"type":"TEXT","index":8,"name":"SOLD_TO_COUNTRY","comment":null,"display_name":"sold_to_country"},"BILLING_ACCOUNT_NAME":{"type":"TEXT","index":9,"name":"billing_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"billing_account_name"},"BILLING_ACCOUNT_NUMBER":{"type":"TEXT","index":10,"name":"billing_account_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"billing_account_number"},"SSP_CHANNEL":{"type":"TEXT","index":11,"name":"SSP_CHANNEL","comment":null,"display_name":"ssp_channel"},"PO_REQUIRED":{"type":"TEXT","index":12,"name":"PO_REQUIRED","comment":null,"display_name":"po_required"},"AUTO_PAY":{"type":"BOOLEAN","index":13,"name":"AUTO_PAY","comment":null,"display_name":"auto_pay"},"DEFAULT_PAYMENT_METHOD_TYPE":{"type":"TEXT","index":14,"name":"DEFAULT_PAYMENT_METHOD_TYPE","comment":null,"display_name":"default_payment_method_type"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":15,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":16,"name":"crm_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":17,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":18,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":19,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":20,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND":{"type":"TEXT","index":21,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND","comment":null,"display_name":"crm_account_employee_count_band"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":22,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"HEALTH_NUMBER":{"type":"FLOAT","index":23,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":24,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"PARENT_CRM_ACCOUNT_LAM":{"type":"FLOAT","index":25,"name":"PARENT_CRM_ACCOUNT_LAM","comment":null,"display_name":"parent_crm_account_lam"},"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT":{"type":"FLOAT","index":26,"name":"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT","comment":null,"display_name":"parent_crm_account_lam_dev_count"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":27,"name":"PARENT_CRM_ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"parent_crm_account_business_unit"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":28,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":29,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":30,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":31,"name":"PARENT_CRM_ACCOUNT_ROLE_TYPE","comment":null,"display_name":"parent_crm_account_role_type"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":32,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":33,"name":"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"parent_crm_account_max_family_employee"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":34,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":35,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":36,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":37,"name":"PARENT_CRM_ACCOUNT_UPA_STREET","comment":null,"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":38,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"CRM_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":39,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"crm_account_employee_count"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":40,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_subscription_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":41,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_subscription_id_original"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":42,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":43,"name":"subscription_sales_type","comment":null,"description":"Identifies whether a subscription is Sales-Assisted or Self-Service / Web Direct.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_sales_type"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":44,"name":"subscription_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"subscription_name"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":45,"name":"subscription_name_slugify","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"subscription_name_slugify"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":46,"name":"oldest_subscription_in_cohort","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":47,"name":"subscription_lineage","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_lineage"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":48,"name":"subscription_cohort_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":49,"name":"subscription_cohort_quarter","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_cohort_quarter"},"BILLING_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":50,"name":"billing_account_cohort_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_account_cohort_month"},"BILLING_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":51,"name":"billing_account_cohort_quarter","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_account_cohort_quarter"},"CRM_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":52,"name":"crm_account_cohort_month","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_cohort_month"},"CRM_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":53,"name":"crm_account_cohort_quarter","comment":null,"description":"The cohort month of the ultimate parent account.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_cohort_quarter"},"PARENT_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":54,"name":"PARENT_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"parent_account_cohort_month"},"PARENT_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":55,"name":"parent_account_cohort_quarter","comment":null,"description":"The cohort quarter of the ultimate parent account.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_account_cohort_quarter"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":56,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":57,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":58,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":59,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":60,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":61,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":62,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":63,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":64,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":65,"name":"INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"invoice_owner_account"},"CREATOR_ACCOUNT":{"type":"TEXT","index":66,"name":"CREATOR_ACCOUNT","comment":null,"display_name":"creator_account"},"WAS_PURCHASED_THROUGH_RESELLER":{"type":"BOOLEAN","index":67,"name":"was_purchased_through_reseller","comment":null,"description":"Boolean field that indicates whether the subscription was purchased through a reseller. If TRUE, the `invoice_owner_account` will contain the name of the reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"was_purchased_through_reseller"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":68,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":69,"name":"product_tier_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":70,"name":"PRODUCT_DELIVERY_TYPE","comment":null,"display_name":"product_delivery_type"},"PRODUCT_RANKING":{"type":"NUMBER","index":71,"name":"PRODUCT_RANKING","comment":null,"display_name":"product_ranking"},"SERVICE_TYPE":{"type":"TEXT","index":72,"name":"SERVICE_TYPE","comment":null,"display_name":"service_type"},"PRODUCT_RATE_PLAN_NAME":{"type":"TEXT","index":73,"name":"PRODUCT_RATE_PLAN_NAME","comment":null,"display_name":"product_rate_plan_name"},"IS_LICENSED_USER":{"type":"BOOLEAN","index":74,"name":"is_licensed_user","comment":null,"description":"Flag to identify licensed users. It works by excluding `Storage` product_tier","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_licensed_user"},"IS_ARPU":{"type":"BOOLEAN","index":75,"name":"is_arpu","comment":null,"description":"Flag to identify what counts towards Annual Revenue Per User (ARPU). It works by excluding `Storage` product_tier and `EDU` product_rate_plan.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_arpu"},"UNIT_OF_MEASURE":{"type":"ARRAY","index":76,"name":"unit_of_measure","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"unit_of_measure"},"MRR":{"type":"FLOAT","index":77,"name":"mrr","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"mrr"},"ARR":{"type":"FLOAT","index":78,"name":"arr","comment":null,"description":"Calculated as 12 * MRR value","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr"},"QUANTITY":{"type":"FLOAT","index":79,"name":"quantity","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quantity"},"MONTHS_SINCE_BILLING_ACCOUNT_COHORT_START":{"type":"NUMBER","index":80,"name":"months_since_billing_account_cohort_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"months_since_billing_account_cohort_start"},"QUARTERS_SINCE_BILLING_ACCOUNT_COHORT_START":{"type":"NUMBER","index":81,"name":"quarters_since_billing_account_cohort_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarters_since_billing_account_cohort_start"},"MONTHS_SINCE_CRM_ACCOUNT_COHORT_START":{"type":"NUMBER","index":82,"name":"months_since_crm_account_cohort_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"months_since_crm_account_cohort_start"},"QUARTERS_SINCE_CRM_ACCOUNT_COHORT_START":{"type":"NUMBER","index":83,"name":"quarters_since_crm_account_cohort_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarters_since_crm_account_cohort_start"},"MONTHS_SINCE_PARENT_ACCOUNT_COHORT_START":{"type":"NUMBER","index":84,"name":"months_since_parent_account_cohort_start","comment":null,"description":"The number of months between the MRR being reported in that row and the parent account cohort month. Must be a positive number.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"months_since_parent_account_cohort_start"},"QUARTERS_SINCE_PARENT_ACCOUNT_COHORT_START":{"type":"NUMBER","index":85,"name":"quarters_since_parent_account_cohort_start","comment":null,"description":"The number of quarters between the MRR being reported in that row and the parent account cohort quarter. Must be a positive number.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarters_since_parent_account_cohort_start"},"MONTHS_SINCE_SUBSCRIPTION_COHORT_START":{"type":"NUMBER","index":86,"name":"months_since_subscription_cohort_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"months_since_subscription_cohort_start"},"QUARTERS_SINCE_SUBSCRIPTION_COHORT_START":{"type":"NUMBER","index":87,"name":"quarters_since_subscription_cohort_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarters_since_subscription_cohort_start"},"ARR_BAND_CALC":{"type":"TEXT","index":88,"name":"ARR_BAND_CALC","comment":null,"display_name":"arr_band_calc"},"CREATED_BY":{"type":"TEXT","index":89,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":90,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":91,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":92,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":93,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":94,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"is_reseller":{"name":"is_reseller","description":"Identify whether a crm_account is a reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_reseller"},"ultimate_parent_account_id":{"name":"ultimate_parent_account_id","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_id"},"ultimate_parent_account_name":{"name":"ultimate_parent_account_name","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_name"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:26UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":220679680,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_arr","raw_sql":"$21","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.fct_mrr","model.gitlab_snowflake.fct_mrr"]},"config":{"enabled":true,"alias":"mart_arr","schema":"restricted_safe_common_mart_sales","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","restricted_safe","mart_arr"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/restricted_safe/mart_arr.sql","original_file_path":"models/common_mart_sales/restricted_safe/mart_arr.sql","name":"mart_arr","alias":"mart_arr","checksum":{"name":"sha256","checksum":"b24e1f80c45f4682b8930c0d897805421298e1c6da3603947e6df1cce8e22d59"},"tags":["safe"],"refs":[["dim_billing_account"],["dim_billing_account"],["dim_crm_account"],["dim_crm_account"],["dim_date"],["dim_date"],["dim_product_detail"],["dim_product_detail"],["dim_subscription"],["dim_subscription"],["fct_mrr"],["fct_mrr"]],"sources":[],"metrics":[],"description":"$22","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_sales/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/restricted_safe/mart_arr.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false,"alias":"mart_arr"},"created_at":1689033765.221361,"compiled_sql":"$23","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_sales.mart_arr","label":"mart_arr"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_SALES","name":"DATE_DETAILS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_ID":{"type":"NUMBER","index":1,"name":"DATE_ID","comment":null,"display_name":"date_id"},"DATE_DAY":{"type":"DATE","index":2,"name":"DATE_DAY","comment":null,"display_name":"date_day"},"DATE_ACTUAL":{"type":"DATE","index":3,"name":"DATE_ACTUAL","comment":null,"display_name":"date_actual"},"DAY_NAME":{"type":"TEXT","index":4,"name":"DAY_NAME","comment":null,"display_name":"day_name"},"MONTH_ACTUAL":{"type":"NUMBER","index":5,"name":"MONTH_ACTUAL","comment":null,"display_name":"month_actual"},"YEAR_ACTUAL":{"type":"NUMBER","index":6,"name":"YEAR_ACTUAL","comment":null,"display_name":"year_actual"},"QUARTER_ACTUAL":{"type":"NUMBER","index":7,"name":"QUARTER_ACTUAL","comment":null,"display_name":"quarter_actual"},"DAY_OF_WEEK":{"type":"NUMBER","index":8,"name":"DAY_OF_WEEK","comment":null,"display_name":"day_of_week"},"FIRST_DAY_OF_WEEK":{"type":"DATE","index":9,"name":"FIRST_DAY_OF_WEEK","comment":null,"display_name":"first_day_of_week"},"WEEK_OF_YEAR":{"type":"NUMBER","index":10,"name":"WEEK_OF_YEAR","comment":null,"display_name":"week_of_year"},"DAY_OF_MONTH":{"type":"NUMBER","index":11,"name":"DAY_OF_MONTH","comment":null,"display_name":"day_of_month"},"DAY_OF_QUARTER":{"type":"NUMBER","index":12,"name":"DAY_OF_QUARTER","comment":null,"display_name":"day_of_quarter"},"DAY_OF_YEAR":{"type":"NUMBER","index":13,"name":"DAY_OF_YEAR","comment":null,"display_name":"day_of_year"},"FISCAL_YEAR":{"type":"NUMBER","index":14,"name":"FISCAL_YEAR","comment":null,"display_name":"fiscal_year"},"FISCAL_QUARTER":{"type":"TEXT","index":15,"name":"FISCAL_QUARTER","comment":null,"display_name":"fiscal_quarter"},"DAY_OF_FISCAL_QUARTER":{"type":"NUMBER","index":16,"name":"DAY_OF_FISCAL_QUARTER","comment":null,"display_name":"day_of_fiscal_quarter"},"DAY_OF_FISCAL_YEAR":{"type":"NUMBER","index":17,"name":"DAY_OF_FISCAL_YEAR","comment":null,"display_name":"day_of_fiscal_year"},"MONTH_NAME":{"type":"TEXT","index":18,"name":"MONTH_NAME","comment":null,"display_name":"month_name"},"FIRST_DAY_OF_MONTH":{"type":"DATE","index":19,"name":"FIRST_DAY_OF_MONTH","comment":null,"display_name":"first_day_of_month"},"LAST_DAY_OF_MONTH":{"type":"DATE","index":20,"name":"LAST_DAY_OF_MONTH","comment":null,"display_name":"last_day_of_month"},"FIRST_DAY_OF_YEAR":{"type":"DATE","index":21,"name":"FIRST_DAY_OF_YEAR","comment":null,"display_name":"first_day_of_year"},"LAST_DAY_OF_YEAR":{"type":"DATE","index":22,"name":"LAST_DAY_OF_YEAR","comment":null,"display_name":"last_day_of_year"},"FIRST_DAY_OF_QUARTER":{"type":"DATE","index":23,"name":"FIRST_DAY_OF_QUARTER","comment":null,"display_name":"first_day_of_quarter"},"LAST_DAY_OF_QUARTER":{"type":"DATE","index":24,"name":"LAST_DAY_OF_QUARTER","comment":null,"display_name":"last_day_of_quarter"},"FIRST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":25,"name":"FIRST_DAY_OF_FISCAL_QUARTER","comment":null,"display_name":"first_day_of_fiscal_quarter"},"LAST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":26,"name":"LAST_DAY_OF_FISCAL_QUARTER","comment":null,"display_name":"last_day_of_fiscal_quarter"},"FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":27,"name":"FIRST_DAY_OF_FISCAL_YEAR","comment":null,"display_name":"first_day_of_fiscal_year"},"LAST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":28,"name":"LAST_DAY_OF_FISCAL_YEAR","comment":null,"display_name":"last_day_of_fiscal_year"},"WEEK_OF_FISCAL_YEAR":{"type":"NUMBER","index":29,"name":"WEEK_OF_FISCAL_YEAR","comment":null,"display_name":"week_of_fiscal_year"},"MONTH_OF_FISCAL_YEAR":{"type":"NUMBER","index":30,"name":"MONTH_OF_FISCAL_YEAR","comment":null,"display_name":"month_of_fiscal_year"},"LAST_DAY_OF_WEEK":{"type":"DATE","index":31,"name":"LAST_DAY_OF_WEEK","comment":null,"display_name":"last_day_of_week"},"QUARTER_NAME":{"type":"TEXT","index":32,"name":"QUARTER_NAME","comment":null,"display_name":"quarter_name"},"FISCAL_QUARTER_NAME":{"type":"TEXT","index":33,"name":"FISCAL_QUARTER_NAME","comment":null,"display_name":"fiscal_quarter_name"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":34,"name":"FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"fiscal_quarter_name_fy"},"FISCAL_QUARTER_NUMBER_ABSOLUTE":{"type":"NUMBER","index":35,"name":"FISCAL_QUARTER_NUMBER_ABSOLUTE","comment":null,"display_name":"fiscal_quarter_number_absolute"},"FISCAL_MONTH_NAME":{"type":"TEXT","index":36,"name":"FISCAL_MONTH_NAME","comment":null,"display_name":"fiscal_month_name"},"FISCAL_MONTH_NAME_FY":{"type":"TEXT","index":37,"name":"FISCAL_MONTH_NAME_FY","comment":null,"display_name":"fiscal_month_name_fy"},"HOLIDAY_DESC":{"type":"TEXT","index":38,"name":"HOLIDAY_DESC","comment":null,"display_name":"holiday_desc"},"IS_HOLIDAY":{"type":"BOOLEAN","index":39,"name":"IS_HOLIDAY","comment":null,"display_name":"is_holiday"},"LAST_MONTH_OF_FISCAL_QUARTER":{"type":"DATE","index":40,"name":"LAST_MONTH_OF_FISCAL_QUARTER","comment":null,"display_name":"last_month_of_fiscal_quarter"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER":{"type":"BOOLEAN","index":41,"name":"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER","comment":null,"display_name":"is_first_day_of_last_month_of_fiscal_quarter"},"LAST_MONTH_OF_FISCAL_YEAR":{"type":"DATE","index":42,"name":"LAST_MONTH_OF_FISCAL_YEAR","comment":null,"display_name":"last_month_of_fiscal_year"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR":{"type":"BOOLEAN","index":43,"name":"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR","comment":null,"display_name":"is_first_day_of_last_month_of_fiscal_year"},"SNAPSHOT_DATE_FPA":{"type":"DATE","index":44,"name":"SNAPSHOT_DATE_FPA","comment":null,"display_name":"snapshot_date_fpa"},"SNAPSHOT_DATE_BILLINGS":{"type":"DATE","index":45,"name":"SNAPSHOT_DATE_BILLINGS","comment":null,"display_name":"snapshot_date_billings"},"DAYS_IN_MONTH_COUNT":{"type":"NUMBER","index":46,"name":"DAYS_IN_MONTH_COUNT","comment":null,"display_name":"days_in_month_count"},"WEEK_OF_MONTH_NORMALISED":{"type":"NUMBER","index":47,"name":"WEEK_OF_MONTH_NORMALISED","comment":null,"display_name":"week_of_month_normalised"},"DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":48,"name":"DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"day_of_fiscal_quarter_normalised"},"WEEK_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":49,"name":"WEEK_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"week_of_fiscal_quarter_normalised"},"DAY_OF_FISCAL_YEAR_NORMALISED":{"type":"NUMBER","index":50,"name":"DAY_OF_FISCAL_YEAR_NORMALISED","comment":null,"display_name":"day_of_fiscal_year_normalised"},"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK":{"type":"NUMBER","index":51,"name":"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK","comment":null,"display_name":"is_first_day_of_fiscal_quarter_week"},"DAYS_UNTIL_LAST_DAY_OF_MONTH":{"type":"NUMBER","index":52,"name":"DAYS_UNTIL_LAST_DAY_OF_MONTH","comment":null,"display_name":"days_until_last_day_of_month"},"CURRENT_DATE_ACTUAL":{"type":"DATE","index":53,"name":"CURRENT_DATE_ACTUAL","comment":null,"display_name":"current_date_actual"},"CURRENT_FISCAL_YEAR":{"type":"NUMBER","index":54,"name":"CURRENT_FISCAL_YEAR","comment":null,"display_name":"current_fiscal_year"},"CURRENT_FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":55,"name":"CURRENT_FIRST_DAY_OF_FISCAL_YEAR","comment":null,"display_name":"current_first_day_of_fiscal_year"},"CURRENT_FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":56,"name":"CURRENT_FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"current_fiscal_quarter_name_fy"},"CURRENT_FIRST_DAY_OF_MONTH":{"type":"DATE","index":57,"name":"CURRENT_FIRST_DAY_OF_MONTH","comment":null,"display_name":"current_first_day_of_month"},"CREATED_BY":{"type":"TEXT","index":58,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":59,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":60,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":61,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":62,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":63,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK_FLAG":{"type":"NUMBER","index":64,"name":"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK_FLAG","comment":null,"display_name":"is_first_day_of_fiscal_quarter_week_flag"},"QUARTER_NUMBER":{"type":"NUMBER","index":65,"name":"QUARTER_NUMBER","comment":null,"display_name":"quarter_number"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:48UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":902144,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_date_details","raw_sql":"{{ config(alias='date_details') }}\n\nWITH date_details AS (\n\n    SELECT\n      *,\n        -- beggining of the week\n      is_first_day_of_fiscal_quarter_week                                   AS is_first_day_of_fiscal_quarter_week_flag,\n      fiscal_quarter_number_absolute                                        AS quarter_number\n\n    FROM {{ ref('dim_date') }} \n    ORDER BY 1 DESC\n\n)\n\nSELECT *\nFROM date_details","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":"date_details","schema":"workspace_sales","database":"PROD","tags":["workspace"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","wk_sales_date_details"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/wk_sales_date_details.sql","original_file_path":"models/workspaces/workspace_sales/wk_sales_date_details.sql","name":"wk_sales_date_details","alias":"date_details","checksum":{"name":"sha256","checksum":"43b671ce88b9b1ec80f6741dde0ebe127d8c39b59912e6dd719038e921d72e71"},"tags":["workspace"],"refs":[["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/wk_sales_date_details.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["workspace"],"alias":"date_details"},"created_at":1689033678.2955446,"compiled_sql":"\n\nWITH date_details AS (\n\n    SELECT\n      *,\n        -- beggining of the week\n      is_first_day_of_fiscal_quarter_week                                   AS is_first_day_of_fiscal_quarter_week_flag,\n      fiscal_quarter_number_absolute                                        AS quarter_number\n\n    FROM \"PROD\".common.dim_date \n    ORDER BY 1 DESC\n\n)\n\nSELECT *\nFROM date_details","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_sales.date_details","label":"wk_sales_date_details"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_LEGACY","name":"SFDC_ACCOUNTS_XF","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"ACCOUNT_ID":{"type":"TEXT","index":1,"name":"account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"account_id"},"ACCOUNT_NAME":{"type":"TEXT","index":2,"name":"account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"account_name"},"ACCOUNT_ID_18":{"type":"TEXT","index":3,"name":"ACCOUNT_ID_18","comment":null,"display_name":"account_id_18"},"MASTER_RECORD_ID":{"type":"TEXT","index":4,"name":"MASTER_RECORD_ID","comment":null,"display_name":"master_record_id"},"OWNER_ID":{"type":"TEXT","index":5,"name":"OWNER_ID","comment":null,"display_name":"owner_id"},"PARENT_ID":{"type":"TEXT","index":6,"name":"PARENT_ID","comment":null,"display_name":"parent_id"},"PRIMARY_CONTACT_ID":{"type":"TEXT","index":7,"name":"PRIMARY_CONTACT_ID","comment":null,"display_name":"primary_contact_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":8,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"ULTIMATE_PARENT_ID":{"type":"TEXT","index":9,"name":"ULTIMATE_PARENT_ID","comment":null,"display_name":"ultimate_parent_id"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":10,"name":"PARTNER_VAT_TAX_ID","comment":null,"display_name":"partner_vat_tax_id"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":11,"name":"GITLAB_COM_USER","comment":null,"display_name":"gitlab_com_user"},"ACCOUNT_MANAGER":{"type":"TEXT","index":12,"name":"ACCOUNT_MANAGER","comment":null,"display_name":"account_manager"},"ACCOUNT_OWNER":{"type":"TEXT","index":13,"name":"ACCOUNT_OWNER","comment":null,"display_name":"account_owner"},"ACCOUNT_OWNER_TEAM":{"type":"TEXT","index":14,"name":"ACCOUNT_OWNER_TEAM","comment":null,"display_name":"account_owner_team"},"PROPOSED_ACCOUNT_OWNER":{"type":"TEXT","index":15,"name":"PROPOSED_ACCOUNT_OWNER","comment":null,"display_name":"proposed_account_owner"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":16,"name":"BUSINESS_DEVELOPMENT_REP","comment":null,"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":17,"name":"DEDICATED_SERVICE_ENGINEER","comment":null,"display_name":"dedicated_service_engineer"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":18,"name":"SALES_DEVELOPMENT_REP","comment":null,"display_name":"sales_development_rep"},"TECHNICAL_ACCOUNT_MANAGER_ID":{"type":"TEXT","index":19,"name":"TECHNICAL_ACCOUNT_MANAGER_ID","comment":null,"display_name":"technical_account_manager_id"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":20,"name":"ULTIMATE_PARENT_ACCOUNT_ID","comment":null,"display_name":"ultimate_parent_account_id"},"ULTIMATE_PARENT_ACCOUNT_NAME":{"type":"TEXT","index":21,"name":"ULTIMATE_PARENT_ACCOUNT_NAME","comment":null,"display_name":"ultimate_parent_account_name"},"ACCOUNT_TYPE":{"type":"TEXT","index":22,"name":"ACCOUNT_TYPE","comment":null,"display_name":"account_type"},"DF_INDUSTRY":{"type":"TEXT","index":23,"name":"DF_INDUSTRY","comment":null,"display_name":"df_industry"},"INDUSTRY":{"type":"TEXT","index":24,"name":"INDUSTRY","comment":null,"display_name":"industry"},"SUB_INDUSTRY":{"type":"TEXT","index":25,"name":"SUB_INDUSTRY","comment":null,"display_name":"sub_industry"},"PARENT_ACCOUNT_INDUSTRY_HIERARCHY":{"type":"TEXT","index":26,"name":"PARENT_ACCOUNT_INDUSTRY_HIERARCHY","comment":null,"display_name":"parent_account_industry_hierarchy"},"ACCOUNT_TIER":{"type":"TEXT","index":27,"name":"ACCOUNT_TIER","comment":null,"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":28,"name":"ACCOUNT_TIER_NOTES","comment":null,"display_name":"account_tier_notes"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":29,"name":"CUSTOMER_SINCE_DATE","comment":null,"display_name":"customer_since_date"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":30,"name":"CARR_THIS_ACCOUNT","comment":null,"display_name":"carr_this_account"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":31,"name":"CARR_ACCOUNT_FAMILY","comment":null,"display_name":"carr_account_family"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":32,"name":"NEXT_RENEWAL_DATE","comment":null,"display_name":"next_renewal_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":33,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":34,"name":"SUPPORT_LEVEL","comment":null,"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":35,"name":"NAMED_ACCOUNT","comment":null,"display_name":"named_account"},"BILLING_COUNTRY":{"type":"TEXT","index":36,"name":"BILLING_COUNTRY","comment":null,"display_name":"billing_country"},"BILLING_COUNTRY_CODE":{"type":"TEXT","index":37,"name":"BILLING_COUNTRY_CODE","comment":null,"display_name":"billing_country_code"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":38,"name":"BILLING_POSTAL_CODE","comment":null,"display_name":"billing_postal_code"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":39,"name":"IS_SDR_TARGET_ACCOUNT","comment":null,"display_name":"is_sdr_target_account"},"LAM":{"type":"FLOAT","index":40,"name":"LAM","comment":null,"display_name":"lam"},"LAM_DEV_COUNT":{"type":"FLOAT","index":41,"name":"LAM_DEV_COUNT","comment":null,"display_name":"lam_dev_count"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":42,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"TIMESTAMP_TZ","index":43,"name":"PARTNERS_SIGNED_CONTRACT_DATE","comment":null,"display_name":"partners_signed_contract_date"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":44,"name":"PARTNER_ACCOUNT_IBAN_NUMBER","comment":null,"display_name":"partner_account_iban_number"},"PARTNER_TYPE":{"type":"TEXT","index":45,"name":"PARTNER_TYPE","comment":null,"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":46,"name":"PARTNER_STATUS","comment":null,"display_name":"partner_status"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":47,"name":"BDR_PROSPECTING_STATUS","comment":null,"display_name":"bdr_prospecting_status"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":48,"name":"IS_FIRST_ORDER_AVAILABLE","comment":null,"display_name":"is_first_order_available"},"ZI_TECHNOLOGIES":{"type":"TEXT","index":49,"name":"ZI_TECHNOLOGIES","comment":null,"display_name":"zi_technologies"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":50,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":51,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"FORBES_2000_RANK":{"type":"TEXT","index":52,"name":"FORBES_2000_RANK","comment":null,"display_name":"forbes_2000_rank"},"POTENTIAL_USERS":{"type":"FLOAT","index":53,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"NUMBER_OF_LICENSES_THIS_ACCOUNT":{"type":"FLOAT","index":54,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT","comment":null,"display_name":"number_of_licenses_this_account"},"DECISION_MAKER_COUNT_LINKEDIN":{"type":"FLOAT","index":55,"name":"DECISION_MAKER_COUNT_LINKEDIN","comment":null,"display_name":"decision_maker_count_linkedin"},"NUMBER_OF_EMPLOYEES":{"type":"NUMBER","index":56,"name":"NUMBER_OF_EMPLOYEES","comment":null,"display_name":"number_of_employees"},"ACCOUNT_PHONE":{"type":"TEXT","index":57,"name":"ACCOUNT_PHONE","comment":null,"display_name":"account_phone"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":58,"name":"ZOOMINFO_ACCOUNT_PHONE","comment":null,"display_name":"zoominfo_account_phone"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":59,"name":"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES","comment":null,"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":60,"name":"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS","comment":null,"display_name":"admin_manual_source_account_address"},"ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":61,"name":"ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"account_sales_segment"},"ACCOUNT_GEO":{"type":"TEXT","index":62,"name":"ACCOUNT_GEO","comment":null,"display_name":"account_geo"},"ACCOUNT_REGION":{"type":"TEXT","index":63,"name":"ACCOUNT_REGION","comment":null,"display_name":"account_region"},"ACCOUNT_AREA":{"type":"TEXT","index":64,"name":"ACCOUNT_AREA","comment":null,"display_name":"account_area"},"ACCOUNT_TERRITORY":{"type":"TEXT","index":65,"name":"ACCOUNT_TERRITORY","comment":null,"display_name":"account_territory"},"ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":66,"name":"ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"account_business_unit"},"ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":67,"name":"ACCOUNT_ROLE_TYPE","comment":null,"display_name":"account_role_type"},"ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":68,"name":"ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"account_employee_count"},"ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":69,"name":"ACCOUNT_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"account_max_family_employee"},"ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":70,"name":"ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"account_upa_country"},"ACCOUNT_UPA_STATE":{"type":"TEXT","index":71,"name":"ACCOUNT_UPA_STATE","comment":null,"display_name":"account_upa_state"},"ACCOUNT_UPA_CITY":{"type":"TEXT","index":72,"name":"ACCOUNT_UPA_CITY","comment":null,"display_name":"account_upa_city"},"ACCOUNT_UPA_STREET":{"type":"TEXT","index":73,"name":"ACCOUNT_UPA_STREET","comment":null,"display_name":"account_upa_street"},"ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":74,"name":"ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"account_upa_postal_code"},"HEALTH_NUMBER":{"type":"FLOAT","index":75,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":76,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"COUNT_ACTIVE_SUBSCRIPTION_CHARGES":{"type":"FLOAT","index":77,"name":"COUNT_ACTIVE_SUBSCRIPTION_CHARGES","comment":null,"display_name":"count_active_subscription_charges"},"COUNT_ACTIVE_SUBSCRIPTIONS":{"type":"FLOAT","index":78,"name":"COUNT_ACTIVE_SUBSCRIPTIONS","comment":null,"display_name":"count_active_subscriptions"},"COUNT_BILLING_ACCOUNTS":{"type":"FLOAT","index":79,"name":"COUNT_BILLING_ACCOUNTS","comment":null,"display_name":"count_billing_accounts"},"COUNT_LICENSED_USERS":{"type":"FLOAT","index":80,"name":"COUNT_LICENSED_USERS","comment":null,"display_name":"count_licensed_users"},"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES":{"type":"FLOAT","index":81,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES","comment":null,"display_name":"count_of_new_business_won_opportunities"},"COUNT_OPEN_RENEWAL_OPPORTUNITIES":{"type":"FLOAT","index":82,"name":"COUNT_OPEN_RENEWAL_OPPORTUNITIES","comment":null,"display_name":"count_open_renewal_opportunities"},"COUNT_OPPORTUNITIES":{"type":"FLOAT","index":83,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_PRODUCTS_PURCHASED":{"type":"FLOAT","index":84,"name":"COUNT_PRODUCTS_PURCHASED","comment":null,"display_name":"count_products_purchased"},"COUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":85,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_CONCURRENT_EE_SUBSCRIPTIONS":{"type":"FLOAT","index":86,"name":"COUNT_CONCURRENT_EE_SUBSCRIPTIONS","comment":null,"display_name":"count_concurrent_ee_subscriptions"},"COUNT_CE_INSTANCES":{"type":"FLOAT","index":87,"name":"COUNT_CE_INSTANCES","comment":null,"display_name":"count_ce_instances"},"COUNT_ACTIVE_CE_USERS":{"type":"FLOAT","index":88,"name":"COUNT_ACTIVE_CE_USERS","comment":null,"display_name":"count_active_ce_users"},"COUNT_OPEN_OPPORTUNITIES":{"type":"FLOAT","index":89,"name":"COUNT_OPEN_OPPORTUNITIES","comment":null,"display_name":"count_open_opportunities"},"COUNT_USING_CE":{"type":"BOOLEAN","index":90,"name":"COUNT_USING_CE","comment":null,"display_name":"count_using_ce"},"ABM_TIER":{"type":"TEXT","index":91,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"GTM_STRATEGY":{"type":"TEXT","index":92,"name":"GTM_STRATEGY","comment":null,"display_name":"gtm_strategy"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":93,"name":"GTM_ACCELERATION_DATE","comment":null,"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":94,"name":"GTM_ACCOUNT_BASED_DATE","comment":null,"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":95,"name":"GTM_ACCOUNT_CENTRIC_DATE","comment":null,"display_name":"gtm_account_centric_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":96,"name":"ABM_TIER_1_DATE","comment":null,"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":97,"name":"ABM_TIER_2_DATE","comment":null,"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":98,"name":"ABM_TIER_3_DATE","comment":null,"display_name":"abm_tier_3_date"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":99,"name":"DEMANDBASE_ACCOUNT_LIST","comment":null,"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":100,"name":"DEMANDBASE_INTENT","comment":null,"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":101,"name":"DEMANDBASE_PAGE_VIEWS","comment":null,"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":102,"name":"DEMANDBASE_SCORE","comment":null,"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":103,"name":"DEMANDBASE_SESSIONS","comment":null,"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":104,"name":"DEMANDBASE_TRENDING_OFFSITE_INTENT","comment":null,"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":105,"name":"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT","comment":null,"display_name":"demandbase_trending_onsite_engagement"},"ULTIMATE_PARENT_SALES_SEGMENT":{"type":"TEXT","index":106,"name":"ultimate_parent_sales_segment","comment":null,"description":"Sales segment of the parent of the account hierarchy.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_sales_segment"},"DIVISION_SALES_SEGMENT":{"type":"TEXT","index":107,"name":"DIVISION_SALES_SEGMENT","comment":null,"display_name":"division_sales_segment"},"SALES_SEGMENT":{"type":"TEXT","index":108,"name":"sales_segment","comment":null,"description":"Deprecated, please use division_sales_segment or tsp_max_hierarchy_sales_segment instead.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_segment"},"ACCOUNT_SEGMENT":{"type":"TEXT","index":109,"name":"account_segment","comment":null,"description":"Deprecated, please use division_sales_segment instead.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_segment"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":110,"name":"IS_LOCALLY_MANAGED_ACCOUNT","comment":null,"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"IS_STRATEGIC_ACCOUNT","comment":null,"display_name":"is_strategic_account"},"NEXT_FY_ACCOUNT_OWNER_TEMP":{"type":"TEXT","index":112,"name":"NEXT_FY_ACCOUNT_OWNER_TEMP","comment":null,"display_name":"next_fy_account_owner_temp"},"NEXT_FY_PLANNING_NOTES_TEMP":{"type":"TEXT","index":113,"name":"NEXT_FY_PLANNING_NOTES_TEMP","comment":null,"display_name":"next_fy_planning_notes_temp"},"PARTNER_TRACK":{"type":"TEXT","index":114,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":115,"name":"PARTNERS_PARTNER_TYPE","comment":null,"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":116,"name":"GITLAB_PARTNER_PROGRAM","comment":null,"display_name":"gitlab_partner_program"},"IS_FOCUS_PARTNER":{"type":"BOOLEAN","index":117,"name":"IS_FOCUS_PARTNER","comment":null,"display_name":"is_focus_partner"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":118,"name":"ZOOM_INFO_COMPANY_NAME","comment":null,"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":119,"name":"ZOOM_INFO_COMPANY_REVENUE","comment":null,"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":120,"name":"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT","comment":null,"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":121,"name":"ZOOM_INFO_COMPANY_INDUSTRY","comment":null,"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":122,"name":"ZOOM_INFO_COMPANY_CITY","comment":null,"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":123,"name":"ZOOM_INFO_COMPANY_STATE_PROVINCE","comment":null,"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":124,"name":"ZOOM_INFO_COMPANY_COUNTRY","comment":null,"display_name":"zoom_info_company_country"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":125,"name":"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH","comment":null,"display_name":"is_excluded_from_zoom_info_enrich"},"ZOOM_INFO_WEBSITE":{"type":"TEXT","index":126,"name":"ZOOM_INFO_WEBSITE","comment":null,"display_name":"zoom_info_website"},"ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":127,"name":"ZOOM_INFO_COMPANY_OTHER_DOMAINS","comment":null,"display_name":"zoom_info_company_other_domains"},"ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":128,"name":"ZOOM_INFO_DOZISF_ZI_ID","comment":null,"display_name":"zoom_info_dozisf_zi_id"},"ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":129,"name":"ZOOM_INFO_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"zoom_info_parent_company_zi_id"},"ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":130,"name":"ZOOM_INFO_PARENT_COMPANY_NAME","comment":null,"display_name":"zoom_info_parent_company_name"},"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":131,"name":"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"zoom_info_ultimate_parent_company_zi_id"},"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":132,"name":"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME","comment":null,"display_name":"zoom_info_ultimate_parent_company_name"},"ZOOM_INFO_NUMBER_OF_DEVELOPERS":{"type":"FLOAT","index":133,"name":"ZOOM_INFO_NUMBER_OF_DEVELOPERS","comment":null,"display_name":"zoom_info_number_of_developers"},"ZOOM_INFO_TOTAL_FUNDING":{"type":"TEXT","index":134,"name":"ZOOM_INFO_TOTAL_FUNDING","comment":null,"display_name":"zoom_info_total_funding"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":135,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":136,"name":"GS_FIRST_VALUE_DATE","comment":null,"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":137,"name":"GS_LAST_CSM_ACTIVITY_DATE","comment":null,"display_name":"gs_last_csm_activity_date"},"EOA_SENTIMENT":{"type":"TEXT","index":138,"name":"EOA_SENTIMENT","comment":null,"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":139,"name":"GS_HEALTH_USER_ENGAGEMENT","comment":null,"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":140,"name":"GS_HEALTH_CD","comment":null,"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":141,"name":"GS_HEALTH_DEVSECOPS","comment":null,"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":142,"name":"GS_HEALTH_CI","comment":null,"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":143,"name":"GS_HEALTH_SCM","comment":null,"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":144,"name":"RISK_IMPACT","comment":null,"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":145,"name":"RISK_REASON","comment":null,"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":146,"name":"LAST_TIMELINE_AT_RISK_UPDATE","comment":null,"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":147,"name":"LAST_AT_RISK_UPDATE_COMMENTS","comment":null,"display_name":"last_at_risk_update_comments"},"CREATED_BY_ID":{"type":"TEXT","index":148,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"CREATED_DATE":{"type":"TIMESTAMP_TZ","index":149,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"IS_DELETED":{"type":"BOOLEAN","index":150,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"LAST_MODIFIED_BY_ID":{"type":"TEXT","index":151,"name":"LAST_MODIFIED_BY_ID","comment":null,"display_name":"last_modified_by_id"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":152,"name":"LAST_MODIFIED_DATE","comment":null,"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":153,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_TZ","index":154,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"SYSTEMMODSTAMP":{"type":"TIMESTAMP_TZ","index":155,"name":"SYSTEMMODSTAMP","comment":null,"display_name":"systemmodstamp"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":156,"name":"TECHNICAL_ACCOUNT_MANAGER","comment":null,"display_name":"technical_account_manager"},"ULTIMATE_PARENT_ACCOUNT_SEGMENT":{"type":"TEXT","index":157,"name":"ultimate_parent_account_segment","comment":null,"description":"Deprecated, please use ultimate_parent_sales_segment instead.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_segment"},"RECORD_TYPE_NAME":{"type":"TEXT","index":158,"name":"RECORD_TYPE_NAME","comment":null,"display_name":"record_type_name"},"BUSINESS_PROCESS_ID":{"type":"TEXT","index":159,"name":"BUSINESS_PROCESS_ID","comment":null,"display_name":"business_process_id"},"RECORD_TYPE_LABEL":{"type":"TEXT","index":160,"name":"RECORD_TYPE_LABEL","comment":null,"display_name":"record_type_label"},"RECORD_TYPE_DESCRIPTION":{"type":"TEXT","index":161,"name":"RECORD_TYPE_DESCRIPTION","comment":null,"display_name":"record_type_description"},"RECORD_TYPE_MODIFYING_OBJECT_TYPE":{"type":"TEXT","index":162,"name":"RECORD_TYPE_MODIFYING_OBJECT_TYPE","comment":null,"display_name":"record_type_modifying_object_type"},"DEAL_SIZE":{"type":"TEXT","index":163,"name":"DEAL_SIZE","comment":null,"display_name":"deal_size"},"IS_LARGE_AND_UP":{"type":"BOOLEAN","index":164,"name":"IS_LARGE_AND_UP","comment":null,"display_name":"is_large_and_up"},"ZI_JENKINS_PRESENCE_FLAG":{"type":"NUMBER","index":165,"name":"ZI_JENKINS_PRESENCE_FLAG","comment":null,"display_name":"zi_jenkins_presence_flag"},"ZI_SVN_PRESENCE_FLAG":{"type":"NUMBER","index":166,"name":"ZI_SVN_PRESENCE_FLAG","comment":null,"display_name":"zi_svn_presence_flag"},"ZI_TORTOISE_SVN_PRESENCE_FLAG":{"type":"NUMBER","index":167,"name":"ZI_TORTOISE_SVN_PRESENCE_FLAG","comment":null,"display_name":"zi_tortoise_svn_presence_flag"},"ZI_GCP_PRESENCE_FLAG":{"type":"NUMBER","index":168,"name":"ZI_GCP_PRESENCE_FLAG","comment":null,"display_name":"zi_gcp_presence_flag"},"ZI_ATLASSIAN_PRESENCE_FLAG":{"type":"NUMBER","index":169,"name":"ZI_ATLASSIAN_PRESENCE_FLAG","comment":null,"display_name":"zi_atlassian_presence_flag"},"ZI_GITHUB_PRESENCE_FLAG":{"type":"NUMBER","index":170,"name":"ZI_GITHUB_PRESENCE_FLAG","comment":null,"display_name":"zi_github_presence_flag"},"ZI_GITHUB_ENTERPRISE_PRESENCE_FLAG":{"type":"NUMBER","index":171,"name":"ZI_GITHUB_ENTERPRISE_PRESENCE_FLAG","comment":null,"display_name":"zi_github_enterprise_presence_flag"},"ZI_AWS_PRESENCE_FLAG":{"type":"NUMBER","index":172,"name":"ZI_AWS_PRESENCE_FLAG","comment":null,"display_name":"zi_aws_presence_flag"},"ZI_KUBERNETES_PRESENCE_FLAG":{"type":"NUMBER","index":173,"name":"ZI_KUBERNETES_PRESENCE_FLAG","comment":null,"display_name":"zi_kubernetes_presence_flag"},"ZI_APACHE_SUBVERSION_PRESENCE_FLAG":{"type":"NUMBER","index":174,"name":"ZI_APACHE_SUBVERSION_PRESENCE_FLAG","comment":null,"display_name":"zi_apache_subversion_presence_flag"},"ZI_APACHE_SUBVERSION_SVN_PRESENCE_FLAG":{"type":"NUMBER","index":175,"name":"ZI_APACHE_SUBVERSION_SVN_PRESENCE_FLAG","comment":null,"display_name":"zi_apache_subversion_svn_presence_flag"},"ZI_HASHICORP_PRESENCE_FLAG":{"type":"NUMBER","index":176,"name":"ZI_HASHICORP_PRESENCE_FLAG","comment":null,"display_name":"zi_hashicorp_presence_flag"},"ZI_AWS_CLOUD_TRAIL_PRESENCE_FLAG":{"type":"NUMBER","index":177,"name":"ZI_AWS_CLOUD_TRAIL_PRESENCE_FLAG","comment":null,"display_name":"zi_aws_cloud_trail_presence_flag"},"ZI_CIRCLE_CI_PRESENCE_FLAG":{"type":"NUMBER","index":178,"name":"ZI_CIRCLE_CI_PRESENCE_FLAG","comment":null,"display_name":"zi_circle_ci_presence_flag"},"ZI_BIT_BUCKET_PRESENCE_FLAG":{"type":"NUMBER","index":179,"name":"ZI_BIT_BUCKET_PRESENCE_FLAG","comment":null,"display_name":"zi_bit_bucket_presence_flag"},"ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":180,"name":"ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"account_owner_user_segment"},"ACCOUNT_OWNER_USER_GEO":{"type":"TEXT","index":181,"name":"ACCOUNT_OWNER_USER_GEO","comment":null,"display_name":"account_owner_user_geo"},"ACCOUNT_OWNER_USER_REGION":{"type":"TEXT","index":182,"name":"ACCOUNT_OWNER_USER_REGION","comment":null,"display_name":"account_owner_user_region"},"ACCOUNT_OWNER_USER_AREA":{"type":"TEXT","index":183,"name":"ACCOUNT_OWNER_USER_AREA","comment":null,"display_name":"account_owner_user_area"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":184,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":185,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":186,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":187,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":188,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"tsp_test_sales_segment":{"name":"tsp_test_sales_segment","description":"Deprecated, please use tsp_max_hierarchy_sales_segment instead.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tsp_test_sales_segment"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:09UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":38594560,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.sfdc_accounts_xf","raw_sql":"$24","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_account","model.gitlab_snowflake.sfdc_account","model.gitlab_snowflake.sfdc_account","model.gitlab_snowflake.sfdc_account","model.gitlab_snowflake.sfdc_users","model.gitlab_snowflake.sfdc_users","model.gitlab_snowflake.sfdc_record_type","model.gitlab_snowflake.sfdc_record_type","model.gitlab_snowflake.sfdc_account_deal_size_segmentation","model.gitlab_snowflake.sfdc_account_deal_size_segmentation"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_legacy","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_legacy","fqn":["gitlab_snowflake","legacy","sfdc","restricted_safe","sfdc_accounts_xf"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/sfdc/restricted_safe/sfdc_accounts_xf.sql","original_file_path":"models/legacy/sfdc/restricted_safe/sfdc_accounts_xf.sql","name":"sfdc_accounts_xf","alias":"sfdc_accounts_xf","checksum":{"name":"sha256","checksum":"8bb72b24bd6949336cbeb9344974d6789a56a69fb4b0037f98406ce6198b9894"},"tags":["safe"],"refs":[["sfdc_account"],["sfdc_account"],["sfdc_account"],["sfdc_account"],["sfdc_users"],["sfdc_users"],["sfdc_record_type"],["sfdc_record_type"],["sfdc_account_deal_size_segmentation"],["sfdc_account_deal_size_segmentation"]],"sources":[],"metrics":[],"description":"$25","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/sfdc/xf/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/sfdc/restricted_safe/sfdc_accounts_xf.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033764.873264,"compiled_sql":"$26","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_legacy.sfdc_accounts_xf","label":"sfdc_accounts_xf"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_FINANCE","name":"MART_AVAILABLE_TO_RENEW","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"PRIMARY_KEY":{"type":"TEXT","index":1,"name":"primary_key","comment":null,"description":"Composite key for the model combining the unique identifier of the charge as well as the month the charge is effective in the term.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"primary_key"},"FISCAL_YEAR":{"type":"NUMBER","index":2,"name":"fiscal_year","comment":null,"description":"Fiscal year when the subscription will be available to renew.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"fiscal_year"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":3,"name":"fiscal_quarter_name_fy","comment":null,"description":"Fiscal quarter when the subscription will be available to renew.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name_fy"},"CLOSE_MONTH":{"type":"DATE","index":4,"name":"close_month","comment":null,"description":"Month when the opportunity associated with the subscription closed based on its `close_date`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"close_month"},"DIM_CHARGE_ID":{"type":"TEXT","index":5,"name":"dim_charge_id","comment":null,"description":"Unique identifier of a rate plan charge associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_charge_id"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":6,"name":"dim_crm_opportunity_id","comment":null,"description":"Unique identifier of the crm opportunity associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":7,"name":"dim_crm_account_id","comment":null,"description":"Unique identifier of the crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":8,"name":"dim_billing_account_id","comment":null,"description":"Unique identifier of the billing account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":9,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a subscription.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":10,"name":"dim_product_detail_id","comment":null,"description":"Unique identifier of a product rate plan charge associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_detail_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":11,"name":"subscription_name","comment":null,"description":"Name applied to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_name"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":12,"name":"subscription_start_month","comment":null,"description":"Month when the subscription is set to begin.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":13,"name":"subscription_end_month","comment":null,"description":"Month when the subscription is set to end.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_month"},"TERM_START_MONTH":{"type":"DATE","index":14,"name":"term_start_month","comment":null,"description":"Month when a subscription term begins.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"term_start_month"},"RENEWAL_MONTH":{"type":"DATE","index":15,"name":"renewal_month","comment":null,"description":"Month when a subscription term ends.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"renewal_month"},"BOOKINGS_TERM_END_MONTH":{"type":"DATE","index":16,"name":"bookings_term_end_month","comment":null,"description":"Similar to the term end month but calculates intermediate term end months for multi year subscriptions with terms greater than 12 months. These end months do not exist in the Zuora billing system. This allows us to get a view of all subscriptions renewing on a yearly basis.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bookings_term_end_month"},"MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH":{"type":"DATE","index":17,"name":"MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH","comment":null,"display_name":"multi_year_booking_subscription_end_month"},"LAST_PAID_MONTH_IN_TERM":{"type":"DATE","index":18,"name":"last_paid_month_in_term","comment":null,"description":"Last month charge is applied for a charge's term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_paid_month_in_term"},"CURRENT_TERM":{"type":"NUMBER","index":19,"name":"current_term","comment":null,"description":"Duration of the subscription's current term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_term"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME":{"type":"TEXT","index":20,"name":"zuora_renewal_subscription_name","comment":null,"description":"Name of a renewal subscription associated with the current subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name"},"RENEWAL_SUBSCRIPTION_END_MONTH":{"type":"DATE","index":21,"name":"renewal_subscription_end_month","comment":null,"description":"End month of the renewal subscription associated with the current subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_subscription_end_month"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":22,"name":"parent_crm_account_name","comment":null,"description":"Name of the ultimate parent crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_name"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":23,"name":"crm_account_name","comment":null,"description":"Name of the crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":24,"name":"parent_crm_account_sales_segment","comment":null,"description":"Segment of the ultimate parent crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment"},"DIM_CRM_USER_ID":{"type":"TEXT","index":25,"name":"dim_crm_user_id","comment":null,"description":"Unique identifier of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_user_id"},"USER_NAME":{"type":"TEXT","index":26,"name":"user_name","comment":null,"description":"Name of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_name"},"USER_ROLE_ID":{"type":"TEXT","index":27,"name":"user_role_id","comment":null,"description":"Unique identifier of the role of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_role_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":28,"name":"crm_user_sales_segment","comment":null,"description":"Segment of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_sales_segment"},"CRM_USER_GEO":{"type":"TEXT","index":29,"name":"crm_user_geo","comment":null,"description":"Geo of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_geo"},"CRM_USER_REGION":{"type":"TEXT","index":30,"name":"crm_user_region","comment":null,"description":"Region of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_region"},"CRM_USER_AREA":{"type":"TEXT","index":31,"name":"crm_user_area","comment":null,"description":"Area of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_area"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":32,"name":"product_tier_name","comment":null,"description":"Tier of the product on the charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":33,"name":"product_delivery_type","comment":null,"description":"Delivery type of the product on the charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_delivery_type"},"RENEWAL_TYPE":{"type":"TEXT","index":34,"name":"renewal_type","comment":null,"description":"Type of renewal (multi-year_booking or not)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_type"},"IS_MULTI_YEAR_BOOKING":{"type":"BOOLEAN","index":35,"name":"is_multi_year_booking","comment":null,"description":"Flag indicating if a subscription is multi-year or not.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_multi_year_booking"},"IS_MULTI_YEAR_BOOKING_WITH_MULTI_SUBS":{"type":"BOOLEAN","index":36,"name":"is_multi_year_booking_with_multi_subs","comment":null,"description":"Flag indicating if a subscription is multi-year with multiple associated subscriptions.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_multi_year_booking_with_multi_subs"},"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION":{"type":"BOOLEAN","index":37,"name":"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION","comment":null,"display_name":"is_single_fiscal_year_term_subscription"},"SUBSCRIPTION_TERM":{"type":"NUMBER","index":38,"name":"subscription_term","comment":null,"description":"Current term of the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_term"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":39,"name":"estimated_total_future_billings","comment":null,"description":"Estimate of total amount to be billed in the future for a given charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"estimated_total_future_billings"},"IS_AVAILABLE_TO_RENEW":{"type":"BOOLEAN","index":40,"name":"is_available_to_renew","comment":null,"description":"Flag indicating if the subscription is available to renew in the period.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_available_to_renew"},"OPPORTUNITY_TERM_GROUP":{"type":"TEXT","index":41,"name":"opportunity_term_group","comment":null,"description":"Duration of the opportunity in years based on the opportunity's term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opportunity_term_group"},"ARR":{"type":"FLOAT","index":42,"name":"arr","comment":null,"description":"Annual recurring revenue associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr"},"CREATED_BY":{"type":"TEXT","index":43,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":44,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":45,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":46,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":47,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":48,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"first_day_of_fiscal_quarter":{"name":"first_day_of_fiscal_quarter","description":"Calendar date of first day of fiscal quarter.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_quarter"},"multi-year_booking_subscription_end_month":{"name":"multi-year_booking_subscription_end_month","description":"Month when the final subscription in a multi-year booking is set to end.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"multi-year_booking_subscription_end_month"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:28UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":20987904,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_available_to_renew","raw_sql":"$27","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.get_column_values","macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model","macro.dbt_utils.group_by","macro.dbt_utils.surrogate_key"],"nodes":["model.gitlab_snowflake.prep_renewal_fiscal_years","model.gitlab_snowflake.prep_renewal_fiscal_years","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_amendment"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_finance","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_finance","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","mart_available_to_renew"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_finance/restricted_safe/mart_available_to_renew.sql","original_file_path":"models/common_mart_finance/restricted_safe/mart_available_to_renew.sql","name":"mart_available_to_renew","alias":"mart_available_to_renew","checksum":{"name":"sha256","checksum":"6dd3908c5a38f46b542960aa77253c796b50b8d99fe83b3dbef14b665bc77461"},"tags":["safe"],"refs":[["prep_renewal_fiscal_years"],["prep_renewal_fiscal_years"],["dim_date"],["dim_date"],["dim_crm_account"],["dim_crm_account"],["dim_crm_user"],["dim_crm_user"],["dim_subscription"],["dim_subscription"],["dim_crm_opportunity"],["dim_crm_opportunity"],["fct_crm_opportunity"],["fct_crm_opportunity"],["dim_charge"],["dim_charge"],["fct_charge"],["fct_charge"],["dim_billing_account"],["dim_billing_account"],["dim_product_detail"],["dim_product_detail"],["dim_amendment"],["dim_amendment"]],"sources":[],"metrics":[],"description":"This model generates a list of subscriptions which will be available to renew in a given time period based on existing charges and term dates. It also has logic built in to identify multi-year bookings which is not yet avilable in the source data.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_finance/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/mart_available_to_renew.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false},"created_at":1689033735.1840882,"compiled_sql":"$28","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew","label":"mart_available_to_renew"}],"source":[{"metadata":{"type":"BASE TABLE","schema":"SALESFORCE_STITCH","name":"ACCOUNT","database":"RAW","comment":null,"owner":"STITCH"},"columns":{"ABERDEEN_CLOUD_PROVIDER__C":{"type":"TEXT","index":1,"name":"ABERDEEN_CLOUD_PROVIDER__C","comment":null,"display_name":"aberdeen_cloud_provider__c"},"ABERDEEN_NUMBER_OF_DEVELOPERS__C":{"type":"FLOAT","index":2,"name":"ABERDEEN_NUMBER_OF_DEVELOPERS__C","comment":null,"display_name":"aberdeen_number_of_developers__c"},"ABERDEEN_TECHNOLOGY_STACK__C":{"type":"TEXT","index":3,"name":"ABERDEEN_TECHNOLOGY_STACK__C","comment":null,"display_name":"aberdeen_technology_stack__c"},"ABERDEEN_ULTIMATE_PARENT_DEVELOPER_COUNT__C":{"type":"TEXT","index":4,"name":"ABERDEEN_ULTIMATE_PARENT_DEVELOPER_COUNT__C","comment":null,"display_name":"aberdeen_ultimate_parent_developer_count__c"},"ABM_TIER_1_DATE__C":{"type":"TIMESTAMP_TZ","index":5,"name":"ABM_TIER_1_DATE__C","comment":null,"display_name":"abm_tier_1_date__c"},"ABM_TIER_2_DATE__C":{"type":"TIMESTAMP_TZ","index":6,"name":"ABM_TIER_2_DATE__C","comment":null,"display_name":"abm_tier_2_date__c"},"ABM_TIER_3_DATE__C":{"type":"TIMESTAMP_TZ","index":7,"name":"ABM_TIER_3_DATE__C","comment":null,"display_name":"abm_tier_3_date__c"},"ABM_TIER__C":{"type":"TEXT","index":8,"name":"ABM_TIER__C","comment":null,"display_name":"abm_tier__c"},"ABSD_CAMPAIGN__C":{"type":"TEXT","index":9,"name":"ABSD_CAMPAIGN__C","comment":null,"display_name":"absd_campaign__c"},"ACCOUNTSOURCE":{"type":"TEXT","index":10,"name":"ACCOUNTSOURCE","comment":null,"display_name":"accountsource"},"ACCOUNT_ADDRESS_MANUAL_SOURCE_ADMIN__C":{"type":"TEXT","index":11,"name":"ACCOUNT_ADDRESS_MANUAL_SOURCE_ADMIN__C","comment":null,"display_name":"account_address_manual_source_admin__c"},"ACCOUNT_AREA_ADMIN_USE_ONLY__C":{"type":"TEXT","index":12,"name":"ACCOUNT_AREA_ADMIN_USE_ONLY__C","comment":null,"display_name":"account_area_admin_use_only__c"},"ACCOUNT_CITY_MANUAL_ADMIN__C":{"type":"TEXT","index":13,"name":"ACCOUNT_CITY_MANUAL_ADMIN__C","comment":null,"display_name":"account_city_manual_admin__c"},"ACCOUNT_COUNTRY_MANUAL_ADMIN__C":{"type":"TEXT","index":14,"name":"ACCOUNT_COUNTRY_MANUAL_ADMIN__C","comment":null,"display_name":"account_country_manual_admin__c"},"ACCOUNT_ID_18__C":{"type":"TEXT","index":15,"name":"ACCOUNT_ID_18__C","comment":null,"display_name":"account_id_18__c"},"ACCOUNT_INITIAL_START_DATE__C":{"type":"TIMESTAMP_TZ","index":16,"name":"ACCOUNT_INITIAL_START_DATE__C","comment":null,"display_name":"account_initial_start_date__c"},"ACCOUNT_LIST__C":{"type":"TEXT","index":17,"name":"ACCOUNT_LIST__C","comment":null,"display_name":"account_list__c"},"ACCOUNT_MANAGER__C":{"type":"TEXT","index":18,"name":"ACCOUNT_MANAGER__C","comment":null,"display_name":"account_manager__c"},"ACCOUNT_NOTES__C":{"type":"TEXT","index":19,"name":"ACCOUNT_NOTES__C","comment":null,"display_name":"account_notes__c"},"ACCOUNT_NUMBER__C":{"type":"TEXT","index":20,"name":"ACCOUNT_NUMBER__C","comment":null,"display_name":"account_number__c"},"ACCOUNT_OWNERSHIP_FLAG_TEMP__C":{"type":"BOOLEAN","index":21,"name":"ACCOUNT_OWNERSHIP_FLAG_TEMP__C","comment":null,"display_name":"account_ownership_flag_temp__c"},"ACCOUNT_OWNER_CALC__C":{"type":"TEXT","index":22,"name":"ACCOUNT_OWNER_CALC__C","comment":null,"display_name":"account_owner_calc__c"},"ACCOUNT_OWNER_EMAIL__C":{"type":"TEXT","index":23,"name":"ACCOUNT_OWNER_EMAIL__C","comment":null,"display_name":"account_owner_email__c"},"ACCOUNT_OWNER_MANAGER_EMAIL__C":{"type":"TEXT","index":24,"name":"ACCOUNT_OWNER_MANAGER_EMAIL__C","comment":null,"display_name":"account_owner_manager_email__c"},"ACCOUNT_OWNER_MANAGER_ID__C":{"type":"TEXT","index":25,"name":"ACCOUNT_OWNER_MANAGER_ID__C","comment":null,"display_name":"account_owner_manager_id__c"},"ACCOUNT_OWNER_PROPOSED__C":{"type":"TEXT","index":26,"name":"ACCOUNT_OWNER_PROPOSED__C","comment":null,"display_name":"account_owner_proposed__c"},"ACCOUNT_OWNER_TEAM__C":{"type":"TEXT","index":27,"name":"ACCOUNT_OWNER_TEAM__C","comment":null,"display_name":"account_owner_team__c"},"ACCOUNT_REASSIGNMENT_STATUS__C":{"type":"TEXT","index":28,"name":"ACCOUNT_REASSIGNMENT_STATUS__C","comment":null,"display_name":"account_reassignment_status__c"},"ACCOUNT_STATE_MANUAL_ADMIN__C":{"type":"TEXT","index":29,"name":"ACCOUNT_STATE_MANUAL_ADMIN__C","comment":null,"display_name":"account_state_manual_admin__c"},"ACCOUNT_STATE_MANUAL_USER__C":{"type":"TEXT","index":30,"name":"ACCOUNT_STATE_MANUAL_USER__C","comment":null,"display_name":"account_state_manual_user__c"},"ACCOUNT_STREET_ADDRESS_MANUAL_ADMIN__C":{"type":"TEXT","index":31,"name":"ACCOUNT_STREET_ADDRESS_MANUAL_ADMIN__C","comment":null,"display_name":"account_street_address_manual_admin__c"},"ACCOUNT_TERRITORY_COUNTRY__C":{"type":"TEXT","index":32,"name":"ACCOUNT_TERRITORY_COUNTRY__C","comment":null,"display_name":"account_territory_country__c"},"ACCOUNT_TERRITORY_STATE__C":{"type":"TEXT","index":33,"name":"ACCOUNT_TERRITORY_STATE__C","comment":null,"display_name":"account_territory_state__c"},"ACCOUNT_TERRITORY_ZIP__C":{"type":"TEXT","index":34,"name":"ACCOUNT_TERRITORY_ZIP__C","comment":null,"display_name":"account_territory_zip__c"},"ACCOUNT_TERRITORY__C":{"type":"TEXT","index":35,"name":"ACCOUNT_TERRITORY__C","comment":null,"display_name":"account_territory__c"},"ACCOUNT_TIER_NOTES_HISTORY__C":{"type":"TEXT","index":36,"name":"ACCOUNT_TIER_NOTES_HISTORY__C","comment":null,"display_name":"account_tier_notes_history__c"},"ACCOUNT_TIER_NOTES__C":{"type":"TEXT","index":37,"name":"ACCOUNT_TIER_NOTES__C","comment":null,"display_name":"account_tier_notes__c"},"ACCOUNT_TIER__C":{"type":"TEXT","index":38,"name":"ACCOUNT_TIER__C","comment":null,"display_name":"account_tier__c"},"ACCOUNT_ZIP_MANUAL_ADMIN__C":{"type":"TEXT","index":39,"name":"ACCOUNT_ZIP_MANUAL_ADMIN__C","comment":null,"display_name":"account_zip_manual_admin__c"},"ACCOUNT__C":{"type":"FLOAT","index":40,"name":"ACCOUNT__C","comment":null,"display_name":"account__c"},"ACTIVE_CE_USERS__C":{"type":"FLOAT","index":41,"name":"ACTIVE_CE_USERS__C","comment":null,"display_name":"active_ce_users__c"},"ACTIVE_USER__C":{"type":"BOOLEAN","index":42,"name":"ACTIVE_USER__C","comment":null,"display_name":"active_user__c"},"ACTIVE__C":{"type":"BOOLEAN","index":43,"name":"ACTIVE__C","comment":null,"display_name":"active__c"},"ADMIN_PHOENIX__C":{"type":"TEXT","index":44,"name":"ADMIN_PHOENIX__C","comment":null,"display_name":"admin_phoenix__c"},"AE_COMMENTS__C":{"type":"TEXT","index":45,"name":"AE_COMMENTS__C","comment":null,"display_name":"ae_comments__c"},"AFFECTLAYER__AFFECTLAYER_NOTES__C":{"type":"TEXT","index":46,"name":"AFFECTLAYER__AFFECTLAYER_NOTES__C","comment":null,"display_name":"affectlayer__affectlayer_notes__c"},"ALLIANCE_RECORD__C":{"type":"BOOLEAN","index":47,"name":"ALLIANCE_RECORD__C","comment":null,"display_name":"alliance_record__c"},"ALYCECOM__INITIAL_GIFT_INVITATION_CREATE_DATE__C":{"type":"TIMESTAMP_TZ","index":48,"name":"ALYCECOM__INITIAL_GIFT_INVITATION_CREATE_DATE__C","comment":null,"display_name":"alycecom__initial_gift_invitation_create_date__c"},"ALYCECOM__INITIAL_GIFT_INVITATION_SENT_DATE__C":{"type":"TIMESTAMP_TZ","index":49,"name":"ALYCECOM__INITIAL_GIFT_INVITATION_SENT_DATE__C","comment":null,"display_name":"alycecom__initial_gift_invitation_sent_date__c"},"ALYCECOM__MOST_RECENT_GIFT_INVITATION_CREATE_DATE__C":{"type":"TIMESTAMP_TZ","index":50,"name":"ALYCECOM__MOST_RECENT_GIFT_INVITATION_CREATE_DATE__C","comment":null,"display_name":"alycecom__most_recent_gift_invitation_create_date__c"},"ALYCECOM__MOST_RECENT_GIFT_INVITATION_SENT_DATE__C":{"type":"TIMESTAMP_TZ","index":51,"name":"ALYCECOM__MOST_RECENT_GIFT_INVITATION_SENT_DATE__C","comment":null,"display_name":"alycecom__most_recent_gift_invitation_sent_date__c"},"ALYCECOM__TOTAL_GIFTS_INVITATIONS_SENT_TO_ACCOUNT__C":{"type":"FLOAT","index":52,"name":"ALYCECOM__TOTAL_GIFTS_INVITATIONS_SENT_TO_ACCOUNT__C","comment":null,"display_name":"alycecom__total_gifts_invitations_sent_to_account__c"},"ANALYST_REFERENCE__C":{"type":"BOOLEAN","index":53,"name":"ANALYST_REFERENCE__C","comment":null,"display_name":"analyst_reference__c"},"ANNUALREVENUE":{"type":"FLOAT","index":54,"name":"ANNUALREVENUE","comment":null,"display_name":"annualrevenue"},"ATAM_ACCOUNT_CARR__C":{"type":"FLOAT","index":55,"name":"ATAM_ACCOUNT_CARR__C","comment":null,"display_name":"atam_account_carr__c"},"ATAM_ACCOUNT_EMPLOYEES__C":{"type":"FLOAT","index":56,"name":"ATAM_ACCOUNT_EMPLOYEES__C","comment":null,"display_name":"atam_account_employees__c"},"ATAM_ADDRESS_CITY__C":{"type":"TEXT","index":57,"name":"ATAM_ADDRESS_CITY__C","comment":null,"display_name":"atam_address_city__c"},"ATAM_ADDRESS_COUNTRY__C":{"type":"TEXT","index":58,"name":"ATAM_ADDRESS_COUNTRY__C","comment":null,"display_name":"atam_address_country__c"},"ATAM_ADDRESS_POSTAL_CODE__C":{"type":"TEXT","index":59,"name":"ATAM_ADDRESS_POSTAL_CODE__C","comment":null,"display_name":"atam_address_postal_code__c"},"ATAM_ADDRESS_STATE__C":{"type":"TEXT","index":60,"name":"ATAM_ADDRESS_STATE__C","comment":null,"display_name":"atam_address_state__c"},"ATAM_ADDRESS_STREET__C":{"type":"TEXT","index":61,"name":"ATAM_ADDRESS_STREET__C","comment":null,"display_name":"atam_address_street__c"},"ATAM_APPROVED_NEXT_OWNER__C":{"type":"TEXT","index":62,"name":"ATAM_APPROVED_NEXT_OWNER__C","comment":null,"display_name":"atam_approved_next_owner__c"},"ATAM_AREA__C":{"type":"TEXT","index":63,"name":"ATAM_AREA__C","comment":null,"display_name":"atam_area__c"},"ATAM_GEO_STORY__C":{"type":"TEXT","index":64,"name":"ATAM_GEO_STORY__C","comment":null,"display_name":"atam_geo_story__c"},"ATAM_MAX_EMPLOYEES_ACCOUNT__C":{"type":"TEXT","index":65,"name":"ATAM_MAX_EMPLOYEES_ACCOUNT__C","comment":null,"display_name":"atam_max_employees_account__c"},"ATAM_NEXT_OWNER_ROLE__C":{"type":"TEXT","index":66,"name":"ATAM_NEXT_OWNER_ROLE__C","comment":null,"display_name":"atam_next_owner_role__c"},"ATAM_NEXT_OWNER_TEAM__C":{"type":"TEXT","index":67,"name":"ATAM_NEXT_OWNER_TEAM__C","comment":null,"display_name":"atam_next_owner_team__c"},"ATAM_OWNER_DIFFERENCE__C":{"type":"BOOLEAN","index":68,"name":"ATAM_OWNER_DIFFERENCE__C","comment":null,"display_name":"atam_owner_difference__c"},"ATAM_OWNER_ROLE_ACRO__C":{"type":"TEXT","index":69,"name":"ATAM_OWNER_ROLE_ACRO__C","comment":null,"display_name":"atam_owner_role_acro__c"},"ATAM_REGION__C":{"type":"TEXT","index":70,"name":"ATAM_REGION__C","comment":null,"display_name":"atam_region__c"},"ATAM_SUB_REGION__C":{"type":"TEXT","index":71,"name":"ATAM_SUB_REGION__C","comment":null,"display_name":"atam_sub_region__c"},"ATAM_TERRITORY__C":{"type":"TEXT","index":72,"name":"ATAM_TERRITORY__C","comment":null,"display_name":"atam_territory__c"},"BILLINGCITY":{"type":"TEXT","index":73,"name":"BILLINGCITY","comment":null,"display_name":"billingcity"},"BILLINGCOUNTRY":{"type":"TEXT","index":74,"name":"BILLINGCOUNTRY","comment":null,"display_name":"billingcountry"},"BILLINGCOUNTRYCODE":{"type":"TEXT","index":75,"name":"BILLINGCOUNTRYCODE","comment":null,"display_name":"billingcountrycode"},"BILLINGD__C":{"type":"TEXT","index":76,"name":"BILLINGD__C","comment":null,"display_name":"billingd__c"},"BILLINGLATITUDE":{"type":"FLOAT","index":77,"name":"BILLINGLATITUDE","comment":null,"display_name":"billinglatitude"},"BILLINGLONGITUDE":{"type":"FLOAT","index":78,"name":"BILLINGLONGITUDE","comment":null,"display_name":"billinglongitude"},"BILLINGPOSTALCODE":{"type":"TEXT","index":79,"name":"BILLINGPOSTALCODE","comment":null,"display_name":"billingpostalcode"},"BILLINGSTATE":{"type":"TEXT","index":80,"name":"BILLINGSTATE","comment":null,"display_name":"billingstate"},"BILLINGSTATECODE":{"type":"TEXT","index":81,"name":"BILLINGSTATECODE","comment":null,"display_name":"billingstatecode"},"BILLINGSTREET":{"type":"TEXT","index":82,"name":"BILLINGSTREET","comment":null,"display_name":"billingstreet"},"BILL_TO_EMAIL__C":{"type":"TEXT","index":83,"name":"BILL_TO_EMAIL__C","comment":null,"display_name":"bill_to_email__c"},"BIZIBLE2__ENGAGEMENT_SCORE__C":{"type":"TEXT","index":84,"name":"BIZIBLE2__ENGAGEMENT_SCORE__C","comment":null,"display_name":"bizible2__engagement_score__c"},"BUSINESS_DEVELOPMENT_REP__C":{"type":"TEXT","index":85,"name":"BUSINESS_DEVELOPMENT_REP__C","comment":null,"display_name":"business_development_rep__c"},"BUYS_FROM_DISTRIBUTION__C":{"type":"BOOLEAN","index":86,"name":"BUYS_FROM_DISTRIBUTION__C","comment":null,"display_name":"buys_from_distribution__c"},"CAB_REFERENCE__C":{"type":"BOOLEAN","index":87,"name":"CAB_REFERENCE__C","comment":null,"display_name":"cab_reference__c"},"CAN_USER_CHANGE_ACCOUNT_OWNER__C":{"type":"TEXT","index":88,"name":"CAN_USER_CHANGE_ACCOUNT_OWNER__C","comment":null,"display_name":"can_user_change_account_owner__c"},"CARR_ALL_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":89,"name":"CARR_ALL_CHILD_ACCOUNTS__C","comment":null,"display_name":"carr_all_child_accounts__c"},"CARR_THIS_ACCOUNT__C":{"type":"FLOAT","index":90,"name":"CARR_THIS_ACCOUNT__C","comment":null,"display_name":"carr_this_account__c"},"CARR_TOTAL__C":{"type":"FLOAT","index":91,"name":"CARR_TOTAL__C","comment":null,"display_name":"carr_total__c"},"CASE_STUDY_REFERENCE__C":{"type":"BOOLEAN","index":92,"name":"CASE_STUDY_REFERENCE__C","comment":null,"display_name":"case_study_reference__c"},"CE_INSTANCES__C":{"type":"FLOAT","index":93,"name":"CE_INSTANCES__C","comment":null,"display_name":"ce_instances__c"},"CMRR_ALL_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":94,"name":"CMRR_ALL_CHILD_ACCOUNTS__C","comment":null,"display_name":"cmrr_all_child_accounts__c"},"CMRR_THIS_ACCOUNT__C":{"type":"FLOAT","index":95,"name":"CMRR_THIS_ACCOUNT__C","comment":null,"display_name":"cmrr_this_account__c"},"CMRR_TOTAL__C":{"type":"FLOAT","index":96,"name":"CMRR_TOTAL__C","comment":null,"display_name":"cmrr_total__c"},"COMPANY_TECHNOLOGIES__C":{"type":"TEXT","index":97,"name":"COMPANY_TECHNOLOGIES__C","comment":null,"display_name":"company_technologies__c"},"CONCURRENT_EE_SUBSCRIPTIONS__C":{"type":"FLOAT","index":98,"name":"CONCURRENT_EE_SUBSCRIPTIONS__C","comment":null,"display_name":"concurrent_ee_subscriptions__c"},"CONTRACTED_CHANNEL_TEAM_USE_ONLY__C":{"type":"BOOLEAN","index":99,"name":"CONTRACTED_CHANNEL_TEAM_USE_ONLY__C","comment":null,"display_name":"contracted_channel_team_use_only__c"},"COUNT_OF_ACTIVE_SUBSCRIPTIONS__C":{"type":"FLOAT","index":100,"name":"COUNT_OF_ACTIVE_SUBSCRIPTIONS__C","comment":null,"display_name":"count_of_active_subscriptions__c"},"COUNT_OF_ACTIVE_SUBSCRIPTION_CHARGES__C":{"type":"FLOAT","index":101,"name":"COUNT_OF_ACTIVE_SUBSCRIPTION_CHARGES__C","comment":null,"display_name":"count_of_active_subscription_charges__c"},"COUNT_OF_BILLING_ACCOUNTS__C":{"type":"FLOAT","index":102,"name":"COUNT_OF_BILLING_ACCOUNTS__C","comment":null,"display_name":"count_of_billing_accounts__c"},"COUNT_OF_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":103,"name":"COUNT_OF_CHILD_ACCOUNTS__C","comment":null,"display_name":"count_of_child_accounts__c"},"COUNT_OF_CONTACTS__C":{"type":"FLOAT","index":104,"name":"COUNT_OF_CONTACTS__C","comment":null,"display_name":"count_of_contacts__c"},"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES_ALL__C":{"type":"FLOAT","index":105,"name":"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES_ALL__C","comment":null,"display_name":"count_of_lost_renewal_opportunities_all__c"},"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES__C":{"type":"FLOAT","index":106,"name":"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES__C","comment":null,"display_name":"count_of_lost_renewal_opportunities__c"},"COUNT_OF_NEW_BUSINESS_WON_OPPS__C":{"type":"FLOAT","index":107,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPS__C","comment":null,"display_name":"count_of_new_business_won_opps__c"},"COUNT_OF_OPEN_NEW_ADDON_OPPS__C":{"type":"FLOAT","index":108,"name":"COUNT_OF_OPEN_NEW_ADDON_OPPS__C","comment":null,"display_name":"count_of_open_new_addon_opps__c"},"COUNT_OF_OPEN_RENEWAL_OPPORTUNITIES__C":{"type":"FLOAT","index":109,"name":"COUNT_OF_OPEN_RENEWAL_OPPORTUNITIES__C","comment":null,"display_name":"count_of_open_renewal_opportunities__c"},"COUNT_OF_OPEN_RENEWAL_OPPS_CM_PM__C":{"type":"FLOAT","index":110,"name":"COUNT_OF_OPEN_RENEWAL_OPPS_CM_PM__C","comment":null,"display_name":"count_of_open_renewal_opps_cm_pm__c"},"COUNT_OF_OPEN_RENEWAL_OPPS_LAST_MONTH__C":{"type":"FLOAT","index":111,"name":"COUNT_OF_OPEN_RENEWAL_OPPS_LAST_MONTH__C","comment":null,"display_name":"count_of_open_renewal_opps_last_month__c"},"COUNT_OF_OPEN_ZD_TICKETS__C":{"type":"FLOAT","index":112,"name":"COUNT_OF_OPEN_ZD_TICKETS__C","comment":null,"display_name":"count_of_open_zd_tickets__c"},"COUNT_OF_OPPORTUNITIES__C":{"type":"FLOAT","index":113,"name":"COUNT_OF_OPPORTUNITIES__C","comment":null,"display_name":"count_of_opportunities__c"},"COUNT_OF_PRODUCTS_PURCHASED__C":{"type":"FLOAT","index":114,"name":"COUNT_OF_PRODUCTS_PURCHASED__C","comment":null,"display_name":"count_of_products_purchased__c"},"COUNT_OF_WON_OPPORTUNITIES__C":{"type":"FLOAT","index":115,"name":"COUNT_OF_WON_OPPORTUNITIES__C","comment":null,"display_name":"count_of_won_opportunities__c"},"COUNT_OF_WON_OPPS_LAST_MONTH__C":{"type":"FLOAT","index":116,"name":"COUNT_OF_WON_OPPS_LAST_MONTH__C","comment":null,"display_name":"count_of_won_opps_last_month__c"},"COUNT_OF_WON_RENEWAL_OPP_LAST_MONTH__C":{"type":"FLOAT","index":117,"name":"COUNT_OF_WON_RENEWAL_OPP_LAST_MONTH__C","comment":null,"display_name":"count_of_won_renewal_opp_last_month__c"},"CREATEDBYID":{"type":"TEXT","index":118,"name":"CREATEDBYID","comment":null,"display_name":"createdbyid"},"CREATEDDATE":{"type":"TIMESTAMP_TZ","index":119,"name":"CREATEDDATE","comment":null,"display_name":"createddate"},"CURRENT_USER_S_ACCOUNT__C":{"type":"BOOLEAN","index":120,"name":"CURRENT_USER_S_ACCOUNT__C","comment":null,"display_name":"current_user_s_account__c"},"CUSTOMER_SINCE__C":{"type":"TIMESTAMP_TZ","index":121,"name":"CUSTOMER_SINCE__C","comment":null,"display_name":"customer_since__c"},"CUSTOMER_SLACK_CHANNEL__C":{"type":"TEXT","index":122,"name":"CUSTOMER_SLACK_CHANNEL__C","comment":null,"display_name":"customer_slack_channel__c"},"DATAFOX_ACCOUNT_WORK__C":{"type":"TEXT","index":123,"name":"DATAFOX_ACCOUNT_WORK__C","comment":null,"display_name":"datafox_account_work__c"},"DATAFOX_ADDRESS__C":{"type":"TEXT","index":124,"name":"DATAFOX_ADDRESS__C","comment":null,"display_name":"datafox_address__c"},"DATAFOX_CITY__C":{"type":"TEXT","index":125,"name":"DATAFOX_CITY__C","comment":null,"display_name":"datafox_city__c"},"DATAFOX_COUNTRY__C":{"type":"TEXT","index":126,"name":"DATAFOX_COUNTRY__C","comment":null,"display_name":"datafox_country__c"},"DATAFOX_STATE__C":{"type":"TEXT","index":127,"name":"DATAFOX_STATE__C","comment":null,"display_name":"datafox_state__c"},"DATAFOX_ZIP__C":{"type":"TEXT","index":128,"name":"DATAFOX_ZIP__C","comment":null,"display_name":"datafox_zip__c"},"DAYS_OUTSTANDING__C":{"type":"FLOAT","index":129,"name":"DAYS_OUTSTANDING__C","comment":null,"display_name":"days_outstanding__c"},"DEAL_DESK_RENEWAL_REVIEW__C":{"type":"TEXT","index":130,"name":"DEAL_DESK_RENEWAL_REVIEW__C","comment":null,"display_name":"deal_desk_renewal_review__c"},"DEDICATED_SERVICE_ENGINEER__C":{"type":"TEXT","index":131,"name":"DEDICATED_SERVICE_ENGINEER__C","comment":null,"display_name":"dedicated_service_engineer__c"},"DEMANDBASE_RANK__C":{"type":"FLOAT","index":132,"name":"DEMANDBASE_RANK__C","comment":null,"display_name":"demandbase_rank__c"},"DESCRIPTION":{"type":"TEXT","index":133,"name":"DESCRIPTION","comment":null,"display_name":"description"},"DFOX_INDUSTRY__C":{"type":"TEXT","index":134,"name":"DFOX_INDUSTRY__C","comment":null,"display_name":"dfox_industry__c"},"DFOX_NAICS_CODE_DESCRIPTION__C":{"type":"TEXT","index":135,"name":"DFOX_NAICS_CODE_DESCRIPTION__C","comment":null,"display_name":"dfox_naics_code_description__c"},"DFOX_NAICS_CODE__C":{"type":"TEXT","index":136,"name":"DFOX_NAICS_CODE__C","comment":null,"display_name":"dfox_naics_code__c"},"DFOX_SUB_INDUSTRY__C":{"type":"TEXT","index":137,"name":"DFOX_SUB_INDUSTRY__C","comment":null,"display_name":"dfox_sub_industry__c"},"DFOX__CRUNCHBASE_URL__C":{"type":"TEXT","index":138,"name":"DFOX__CRUNCHBASE_URL__C","comment":null,"display_name":"dfox__crunchbase_url__c"},"DFOX__DATAFOX_SCORE__C":{"type":"FLOAT","index":139,"name":"DFOX__DATAFOX_SCORE__C","comment":null,"display_name":"dfox__datafox_score__c"},"DFOX__FINANCE_SCORE__C":{"type":"FLOAT","index":140,"name":"DFOX__FINANCE_SCORE__C","comment":null,"display_name":"dfox__finance_score__c"},"DFOX__GROWTH_SCORE__C":{"type":"FLOAT","index":141,"name":"DFOX__GROWTH_SCORE__C","comment":null,"display_name":"dfox__growth_score__c"},"DFOX__HR_SCORE__C":{"type":"FLOAT","index":142,"name":"DFOX__HR_SCORE__C","comment":null,"display_name":"dfox__hr_score__c"},"DFOX__ID__C":{"type":"TEXT","index":143,"name":"DFOX__ID__C","comment":null,"display_name":"dfox__id__c"},"DFOX__INFLUENCE_SCORE__C":{"type":"FLOAT","index":144,"name":"DFOX__INFLUENCE_SCORE__C","comment":null,"display_name":"dfox__influence_score__c"},"DFOX__INVESTORS__C":{"type":"TEXT","index":145,"name":"DFOX__INVESTORS__C","comment":null,"display_name":"dfox__investors__c"},"DFOX__KEYWORDS__C":{"type":"TEXT","index":146,"name":"DFOX__KEYWORDS__C","comment":null,"display_name":"dfox__keywords__c"},"DFOX__LAST_SYNCED_DATE__C":{"type":"TIMESTAMP_TZ","index":147,"name":"DFOX__LAST_SYNCED_DATE__C","comment":null,"display_name":"dfox__last_synced_date__c"},"DFOX__LATEST_FUNDING_AMOUNT__C":{"type":"FLOAT","index":148,"name":"DFOX__LATEST_FUNDING_AMOUNT__C","comment":null,"display_name":"dfox__latest_funding_amount__c"},"DFOX__LATEST_FUNDING_DATE__C":{"type":"TIMESTAMP_TZ","index":149,"name":"DFOX__LATEST_FUNDING_DATE__C","comment":null,"display_name":"dfox__latest_funding_date__c"},"DFOX__LATEST_FUNDING_TYPE__C":{"type":"TEXT","index":150,"name":"DFOX__LATEST_FUNDING_TYPE__C","comment":null,"display_name":"dfox__latest_funding_type__c"},"DFOX__LINKEDIN_URL__C":{"type":"TEXT","index":151,"name":"DFOX__LINKEDIN_URL__C","comment":null,"display_name":"dfox__linkedin_url__c"},"DFOX__LISTS__C":{"type":"TEXT","index":152,"name":"DFOX__LISTS__C","comment":null,"display_name":"dfox__lists__c"},"DFOX__REVENUE_ESTIMATE__C":{"type":"FLOAT","index":153,"name":"DFOX__REVENUE_ESTIMATE__C","comment":null,"display_name":"dfox__revenue_estimate__c"},"DFOX__SOURCED_FROM_DATAFOX__C":{"type":"BOOLEAN","index":154,"name":"DFOX__SOURCED_FROM_DATAFOX__C","comment":null,"display_name":"dfox__sourced_from_datafox__c"},"DFOX__STAGE__C":{"type":"TEXT","index":155,"name":"DFOX__STAGE__C","comment":null,"display_name":"dfox__stage__c"},"DFOX__TECHSTACK__C":{"type":"TEXT","index":156,"name":"DFOX__TECHSTACK__C","comment":null,"display_name":"dfox__techstack__c"},"DFOX__TOTAL_FUNDING__C":{"type":"FLOAT","index":157,"name":"DFOX__TOTAL_FUNDING__C","comment":null,"display_name":"dfox__total_funding__c"},"DFOX__TWITTER_HANDLE__C":{"type":"TEXT","index":158,"name":"DFOX__TWITTER_HANDLE__C","comment":null,"display_name":"dfox__twitter_handle__c"},"DFOX__URL__C":{"type":"TEXT","index":159,"name":"DFOX__URL__C","comment":null,"display_name":"dfox__url__c"},"DFOX__YEAR_FOUNDED__C":{"type":"FLOAT","index":160,"name":"DFOX__YEAR_FOUNDED__C","comment":null,"display_name":"dfox__year_founded__c"},"DISCOVERORG_ADDRESS__C":{"type":"TEXT","index":161,"name":"DISCOVERORG_ADDRESS__C","comment":null,"display_name":"discoverorg_address__c"},"DISCOVERORG_CITY__C":{"type":"TEXT","index":162,"name":"DISCOVERORG_CITY__C","comment":null,"display_name":"discoverorg_city__c"},"DISCOVERORG_ZIP__C":{"type":"TEXT","index":163,"name":"DISCOVERORG_ZIP__C","comment":null,"display_name":"discoverorg_zip__c"},"DOAC_REFERENCE__C":{"type":"BOOLEAN","index":164,"name":"DOAC_REFERENCE__C","comment":null,"display_name":"doac_reference__c"},"DOMAINS__C":{"type":"TEXT","index":165,"name":"DOMAINS__C","comment":null,"display_name":"domains__c"},"DOZISF__ZOOMINFO_FIRST_UPDATED__C":{"type":"TIMESTAMP_TZ","index":166,"name":"DOZISF__ZOOMINFO_FIRST_UPDATED__C","comment":null,"display_name":"dozisf__zoominfo_first_updated__c"},"DOZISF__ZOOMINFO_ID__C":{"type":"TEXT","index":167,"name":"DOZISF__ZOOMINFO_ID__C","comment":null,"display_name":"dozisf__zoominfo_id__c"},"DOZISF__ZOOMINFO_LAST_UPDATED__C":{"type":"TIMESTAMP_TZ","index":168,"name":"DOZISF__ZOOMINFO_LAST_UPDATED__C","comment":null,"display_name":"dozisf__zoominfo_last_updated__c"},"DO_NOT_CONTACT__C":{"type":"BOOLEAN","index":169,"name":"DO_NOT_CONTACT__C","comment":null,"display_name":"do_not_contact__c"},"DSCORGPKG__DELETEDFROMDISCOVERORG__C":{"type":"TEXT","index":170,"name":"DSCORGPKG__DELETEDFROMDISCOVERORG__C","comment":null,"display_name":"dscorgpkg__deletedfromdiscoverorg__c"},"DSCORGPKG__DISCOVERORG_CREATED_ON__C":{"type":"TIMESTAMP_TZ","index":171,"name":"DSCORGPKG__DISCOVERORG_CREATED_ON__C","comment":null,"display_name":"dscorgpkg__discoverorg_created_on__c"},"DSCORGPKG__DISCOVERORG_FIRST_UPDATE__C":{"type":"TIMESTAMP_TZ","index":172,"name":"DSCORGPKG__DISCOVERORG_FIRST_UPDATE__C","comment":null,"display_name":"dscorgpkg__discoverorg_first_update__c"},"DSCORGPKG__DISCOVERORG_FULLCOUNTRYNAME__C":{"type":"TEXT","index":173,"name":"DSCORGPKG__DISCOVERORG_FULLCOUNTRYNAME__C","comment":null,"display_name":"dscorgpkg__discoverorg_fullcountryname__c"},"DSCORGPKG__DISCOVERORG_ID__C":{"type":"TEXT","index":174,"name":"DSCORGPKG__DISCOVERORG_ID__C","comment":null,"display_name":"dscorgpkg__discoverorg_id__c"},"DSCORGPKG__DISCOVERORG_LASTUPDATE__C":{"type":"TIMESTAMP_TZ","index":175,"name":"DSCORGPKG__DISCOVERORG_LASTUPDATE__C","comment":null,"display_name":"dscorgpkg__discoverorg_lastupdate__c"},"DSCORGPKG__DISCOVERORG_STATE_FULL_NAME__C":{"type":"TEXT","index":176,"name":"DSCORGPKG__DISCOVERORG_STATE_FULL_NAME__C","comment":null,"display_name":"dscorgpkg__discoverorg_state_full_name__c"},"DSCORGPKG__DISCOVERORG_TECHNOLOGIES__C":{"type":"TEXT","index":177,"name":"DSCORGPKG__DISCOVERORG_TECHNOLOGIES__C","comment":null,"display_name":"dscorgpkg__discoverorg_technologies__c"},"DSCORGPKG__DO_3YR_EMPLOYEES_GROWTH__C":{"type":"TEXT","index":178,"name":"DSCORGPKG__DO_3YR_EMPLOYEES_GROWTH__C","comment":null,"display_name":"dscorgpkg__do_3yr_employees_growth__c"},"DSCORGPKG__DO_3YR_SALES_GROWTH__C":{"type":"TEXT","index":179,"name":"DSCORGPKG__DO_3YR_SALES_GROWTH__C","comment":null,"display_name":"dscorgpkg__do_3yr_sales_growth__c"},"DSCORGPKG__EXCLUDE_UPDATE__C":{"type":"BOOLEAN","index":180,"name":"DSCORGPKG__EXCLUDE_UPDATE__C","comment":null,"display_name":"dscorgpkg__exclude_update__c"},"DSCORGPKG__EXTERNAL_DISCOVERORG_ID__C":{"type":"TEXT","index":181,"name":"DSCORGPKG__EXTERNAL_DISCOVERORG_ID__C","comment":null,"display_name":"dscorgpkg__external_discoverorg_id__c"},"DSCORGPKG__FISCAL_YEAR_END__C":{"type":"TEXT","index":182,"name":"DSCORGPKG__FISCAL_YEAR_END__C","comment":null,"display_name":"dscorgpkg__fiscal_year_end__c"},"DSCORGPKG__FORTUNE_RANK__C":{"type":"TEXT","index":183,"name":"DSCORGPKG__FORTUNE_RANK__C","comment":null,"display_name":"dscorgpkg__fortune_rank__c"},"DSCORGPKG__ITORGCHART__C":{"type":"TEXT","index":184,"name":"DSCORGPKG__ITORGCHART__C","comment":null,"display_name":"dscorgpkg__itorgchart__c"},"DSCORGPKG__IT_BUDGET__C":{"type":"FLOAT","index":185,"name":"DSCORGPKG__IT_BUDGET__C","comment":null,"display_name":"dscorgpkg__it_budget__c"},"DSCORGPKG__IT_EMPLOYEES__C":{"type":"FLOAT","index":186,"name":"DSCORGPKG__IT_EMPLOYEES__C","comment":null,"display_name":"dscorgpkg__it_employees__c"},"DSCORGPKG__LEAD_SOURCE__C":{"type":"TEXT","index":187,"name":"DSCORGPKG__LEAD_SOURCE__C","comment":null,"display_name":"dscorgpkg__lead_source__c"},"DSCORGPKG__LOCKED_BY_USER__C":{"type":"TEXT","index":188,"name":"DSCORGPKG__LOCKED_BY_USER__C","comment":null,"display_name":"dscorgpkg__locked_by_user__c"},"DSCORGPKG__NAICS_CODES__C":{"type":"TEXT","index":189,"name":"DSCORGPKG__NAICS_CODES__C","comment":null,"display_name":"dscorgpkg__naics_codes__c"},"DSCORGPKG__OWNERSHIP__C":{"type":"TEXT","index":190,"name":"DSCORGPKG__OWNERSHIP__C","comment":null,"display_name":"dscorgpkg__ownership__c"},"DSCORGPKG__SIC_CODES__C":{"type":"TEXT","index":191,"name":"DSCORGPKG__SIC_CODES__C","comment":null,"display_name":"dscorgpkg__sic_codes__c"},"ECUSTOMS__COMPLIANCE_HISTORY__C":{"type":"TEXT","index":192,"name":"ECUSTOMS__COMPLIANCE_HISTORY__C","comment":null,"display_name":"ecustoms__compliance_history__c"},"ECUSTOMS__IM_DATE__C":{"type":"TIMESTAMP_TZ","index":193,"name":"ECUSTOMS__IM_DATE__C","comment":null,"display_name":"ecustoms__im_date__c"},"ECUSTOMS__IM_STATUS__C":{"type":"TEXT","index":194,"name":"ECUSTOMS__IM_STATUS__C","comment":null,"display_name":"ecustoms__im_status__c"},"ECUSTOMS__RPS_DATE__C":{"type":"TIMESTAMP_TZ","index":195,"name":"ECUSTOMS__RPS_DATE__C","comment":null,"display_name":"ecustoms__rps_date__c"},"ECUSTOMS__RPS_RISKCOUNTRY_STATUS__C":{"type":"TEXT","index":196,"name":"ECUSTOMS__RPS_RISKCOUNTRY_STATUS__C","comment":null,"display_name":"ecustoms__rps_riskcountry_status__c"},"ECUSTOMS__RPS_STATUS__C":{"type":"TEXT","index":197,"name":"ECUSTOMS__RPS_STATUS__C","comment":null,"display_name":"ecustoms__rps_status__c"},"ECUSTOMS__SCREENING_TRIGGER__C":{"type":"BOOLEAN","index":198,"name":"ECUSTOMS__SCREENING_TRIGGER__C","comment":null,"display_name":"ecustoms__screening_trigger__c"},"EDIT__C":{"type":"TEXT","index":199,"name":"EDIT__C","comment":null,"display_name":"edit__c"},"ENGAGIO__ENGAGEDPEOPLE__C":{"type":"FLOAT","index":200,"name":"ENGAGIO__ENGAGEDPEOPLE__C","comment":null,"display_name":"engagio__engagedpeople__c"},"ENGAGIO__ENGAGEMENTMINUTESLAST3MONTHS__C":{"type":"FLOAT","index":201,"name":"ENGAGIO__ENGAGEMENTMINUTESLAST3MONTHS__C","comment":null,"display_name":"engagio__engagementminuteslast3months__c"},"ENGAGIO__ENGAGEMENTMINUTESLAST7DAYS__C":{"type":"FLOAT","index":202,"name":"ENGAGIO__ENGAGEMENTMINUTESLAST7DAYS__C","comment":null,"display_name":"engagio__engagementminuteslast7days__c"},"ENGAGIO__FIRSTENGAGEMENTDATE__C":{"type":"TIMESTAMP_TZ","index":203,"name":"ENGAGIO__FIRSTENGAGEMENTDATE__C","comment":null,"display_name":"engagio__firstengagementdate__c"},"ENGAGIO__HIGHINTENTKEYWORDS__C":{"type":"TEXT","index":204,"name":"ENGAGIO__HIGHINTENTKEYWORDS__C","comment":null,"display_name":"engagio__highintentkeywords__c"},"ENGAGIO__NUMBEROFPEOPLE__C":{"type":"FLOAT","index":205,"name":"ENGAGIO__NUMBEROFPEOPLE__C","comment":null,"display_name":"engagio__numberofpeople__c"},"ENGAGIO__STATUS__C":{"type":"TEXT","index":206,"name":"ENGAGIO__STATUS__C","comment":null,"display_name":"engagio__status__c"},"EVENT_SPEAKER_REFERENCE__C":{"type":"BOOLEAN","index":207,"name":"EVENT_SPEAKER_REFERENCE__C","comment":null,"display_name":"event_speaker_reference__c"},"EXECUTIVE_SPONSOR_PROGRAM_STATUS__C":{"type":"TEXT","index":208,"name":"EXECUTIVE_SPONSOR_PROGRAM_STATUS__C","comment":null,"display_name":"executive_sponsor_program_status__c"},"EXECUTIVE_SPONSOR__C":{"type":"TEXT","index":209,"name":"EXECUTIVE_SPONSOR__C","comment":null,"display_name":"executive_sponsor__c"},"FAX":{"type":"TEXT","index":210,"name":"FAX","comment":null,"display_name":"fax"},"FEDERAL_ACCOUNT__C":{"type":"BOOLEAN","index":211,"name":"FEDERAL_ACCOUNT__C","comment":null,"display_name":"federal_account__c"},"FIELD_MARKETING_MANAGER__C":{"type":"TEXT","index":212,"name":"FIELD_MARKETING_MANAGER__C","comment":null,"display_name":"field_marketing_manager__c"},"FIRST_ORDER_AVAILABLE__C":{"type":"BOOLEAN","index":213,"name":"FIRST_ORDER_AVAILABLE__C","comment":null,"display_name":"first_order_available__c"},"FORBES_2000_RANK__C":{"type":"TEXT","index":214,"name":"FORBES_2000_RANK__C","comment":null,"display_name":"forbes_2000_rank__c"},"FORTUNE_RANK_2__C":{"type":"TEXT","index":215,"name":"FORTUNE_RANK_2__C","comment":null,"display_name":"fortune_rank_2__c"},"FORTUNE_RANK_NUMBER__C":{"type":"FLOAT","index":216,"name":"FORTUNE_RANK_NUMBER__C","comment":null,"display_name":"fortune_rank_number__c"},"FUTURE_PLANS_REFERENCE__C":{"type":"TEXT","index":217,"name":"FUTURE_PLANS_REFERENCE__C","comment":null,"display_name":"future_plans_reference__c"},"GITLAB_COM_USER__C":{"type":"BOOLEAN","index":218,"name":"GITLAB_COM_USER__C","comment":null,"display_name":"gitlab_com_user__c"},"GITLAB_CUSTOMER_SUCCESS_PROJECT__C":{"type":"TEXT","index":219,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT__C","comment":null,"display_name":"gitlab_customer_success_project__c"},"GITLAB_PARTNER_PROGRAMS__C":{"type":"TEXT","index":220,"name":"GITLAB_PARTNER_PROGRAMS__C","comment":null,"display_name":"gitlab_partner_programs__c"},"GITLAB_PLAN_TEMP__C":{"type":"TEXT","index":221,"name":"GITLAB_PLAN_TEMP__C","comment":null,"display_name":"gitlab_plan_temp__c"},"GITLAB_PLAN_TEST__C":{"type":"TEXT","index":222,"name":"GITLAB_PLAN_TEST__C","comment":null,"display_name":"gitlab_plan_test__c"},"GITLAB_TEAM__C":{"type":"TEXT","index":223,"name":"GITLAB_TEAM__C","comment":null,"display_name":"gitlab_team__c"},"GS_ARCHITECTURE_DIAGRAM_LINK__C":{"type":"TEXT","index":224,"name":"GS_ARCHITECTURE_DIAGRAM_LINK__C","comment":null,"display_name":"gs_architecture_diagram_link__c"},"GS_CUSTOMER_TYPE__C":{"type":"TEXT","index":225,"name":"GS_CUSTOMER_TYPE__C","comment":null,"display_name":"gs_customer_type__c"},"GS_GEO__C":{"type":"BOOLEAN","index":226,"name":"GS_GEO__C","comment":null,"display_name":"gs_geo__c"},"GS_GOOGLE_DOC_NOTES__C":{"type":"TEXT","index":227,"name":"GS_GOOGLE_DOC_NOTES__C","comment":null,"display_name":"gs_google_doc_notes__c"},"GS_HEALTH_SCORE_COLOR__C":{"type":"TEXT","index":228,"name":"GS_HEALTH_SCORE_COLOR__C","comment":null,"display_name":"gs_health_score_color__c"},"GS_HEALTH_SCORE_LABEL__C":{"type":"TEXT","index":229,"name":"GS_HEALTH_SCORE_LABEL__C","comment":null,"display_name":"gs_health_score_label__c"},"GS_HEALTH_SCORE__C":{"type":"FLOAT","index":230,"name":"GS_HEALTH_SCORE__C","comment":null,"display_name":"gs_health_score__c"},"GS_HIGH_AVAILABILITY__C":{"type":"BOOLEAN","index":231,"name":"GS_HIGH_AVAILABILITY__C","comment":null,"display_name":"gs_high_availability__c"},"GS_HOSTING__C":{"type":"TEXT","index":232,"name":"GS_HOSTING__C","comment":null,"display_name":"gs_hosting__c"},"GS_LIFECYCLE_STAGE__C":{"type":"TEXT","index":233,"name":"GS_LIFECYCLE_STAGE__C","comment":null,"display_name":"gs_lifecycle_stage__c"},"GS_PRODUCT_RISK_MEASURE__C":{"type":"TEXT","index":234,"name":"GS_PRODUCT_RISK_MEASURE__C","comment":null,"display_name":"gs_product_risk_measure__c"},"GS_PROVIDER__C":{"type":"TEXT","index":235,"name":"GS_PROVIDER__C","comment":null,"display_name":"gs_provider__c"},"GS_STAGE_COUNT__C":{"type":"FLOAT","index":236,"name":"GS_STAGE_COUNT__C","comment":null,"display_name":"gs_stage_count__c"},"GS_SUMMARY__C":{"type":"TEXT","index":237,"name":"GS_SUMMARY__C","comment":null,"display_name":"gs_summary__c"},"GS_SUPPORT_ISSUES_MEASURE__C":{"type":"TEXT","index":238,"name":"GS_SUPPORT_ISSUES_MEASURE__C","comment":null,"display_name":"gs_support_issues_measure__c"},"GS_TRIAGE_ISSUE_URL__C":{"type":"TEXT","index":239,"name":"GS_TRIAGE_ISSUE_URL__C","comment":null,"display_name":"gs_triage_issue_url__c"},"GTM_ACCELERATION_DATE__C":{"type":"TIMESTAMP_TZ","index":240,"name":"GTM_ACCELERATION_DATE__C","comment":null,"display_name":"gtm_acceleration_date__c"},"GTM_ACCOUNT_BASED_DATE__C":{"type":"TIMESTAMP_TZ","index":241,"name":"GTM_ACCOUNT_BASED_DATE__C","comment":null,"display_name":"gtm_account_based_date__c"},"GTM_ACCOUNT_CENTRIC_DATE__C":{"type":"TIMESTAMP_TZ","index":242,"name":"GTM_ACCOUNT_CENTRIC_DATE__C","comment":null,"display_name":"gtm_account_centric_date__c"},"GTM_STRATEGY__C":{"type":"TEXT","index":243,"name":"GTM_STRATEGY__C","comment":null,"display_name":"gtm_strategy__c"},"HAS_10K_EMPLOYEES__C":{"type":"BOOLEAN","index":244,"name":"HAS_10K_EMPLOYEES__C","comment":null,"display_name":"has_10k_employees__c"},"HAS_TAM__C":{"type":"BOOLEAN","index":245,"name":"HAS_TAM__C","comment":null,"display_name":"has_tam__c"},"HEALTH__C":{"type":"TEXT","index":246,"name":"HEALTH__C","comment":null,"display_name":"health__c"},"HISTORICAL_MAX_USERS__C":{"type":"FLOAT","index":247,"name":"HISTORICAL_MAX_USERS__C","comment":null,"display_name":"historical_max_users__c"},"HOLDING_COMPANY_NAME__C":{"type":"TEXT","index":248,"name":"HOLDING_COMPANY_NAME__C","comment":null,"display_name":"holding_company_name__c"},"HOLDING_COMPANY_TEMP_LABEL_ADMINS_ONLY__C":{"type":"TEXT","index":249,"name":"HOLDING_COMPANY_TEMP_LABEL_ADMINS_ONLY__C","comment":null,"display_name":"holding_company_temp_label_admins_only__c"},"HOLDING_COMPANY__C":{"type":"BOOLEAN","index":250,"name":"HOLDING_COMPANY__C","comment":null,"display_name":"holding_company__c"},"HOLDOVER_EXPIRATION__C":{"type":"TIMESTAMP_TZ","index":251,"name":"HOLDOVER_EXPIRATION__C","comment":null,"display_name":"holdover_expiration__c"},"ID":{"type":"TEXT","index":252,"name":"ID","comment":null,"display_name":"id"},"INDUSTRY":{"type":"TEXT","index":253,"name":"INDUSTRY","comment":null,"display_name":"industry"},"INITIAL_START_DATE__C":{"type":"TIMESTAMP_TZ","index":254,"name":"INITIAL_START_DATE__C","comment":null,"display_name":"initial_start_date__c"},"INTENT__C":{"type":"TEXT","index":255,"name":"INTENT__C","comment":null,"display_name":"intent__c"},"INVOICE_OWNER__C":{"type":"TEXT","index":256,"name":"INVOICE_OWNER__C","comment":null,"display_name":"invoice_owner__c"},"ISDELETED":{"type":"BOOLEAN","index":257,"name":"ISDELETED","comment":null,"display_name":"isdeleted"},"ISFILELOCKINGCUSTOMER__C":{"type":"FLOAT","index":258,"name":"ISFILELOCKINGCUSTOMER__C","comment":null,"display_name":"isfilelockingcustomer__c"},"ISGITLABEECUSTOMER__C":{"type":"FLOAT","index":259,"name":"ISGITLABEECUSTOMER__C","comment":null,"display_name":"isgitlabeecustomer__c"},"ISGITLABGEOCUSTOMER__C":{"type":"FLOAT","index":260,"name":"ISGITLABGEOCUSTOMER__C","comment":null,"display_name":"isgitlabgeocustomer__c"},"ISIMPLEMENTATIONSUPPORTCUSTOMER__C":{"type":"FLOAT","index":261,"name":"ISIMPLEMENTATIONSUPPORTCUSTOMER__C","comment":null,"display_name":"isimplementationsupportcustomer__c"},"ISPARTNER":{"type":"BOOLEAN","index":262,"name":"ISPARTNER","comment":null,"display_name":"ispartner"},"ISPREMIUMSUPPORTCUSTOMER__C":{"type":"FLOAT","index":263,"name":"ISPREMIUMSUPPORTCUSTOMER__C","comment":null,"display_name":"ispremiumsupportcustomer__c"},"IS_A_CHILD_ACCOUNT__C":{"type":"FLOAT","index":264,"name":"IS_A_CHILD_ACCOUNT__C","comment":null,"display_name":"is_a_child_account__c"},"IS_BRONZE_PLAN_CUSTOMER__C":{"type":"FLOAT","index":265,"name":"IS_BRONZE_PLAN_CUSTOMER__C","comment":null,"display_name":"is_bronze_plan_customer__c"},"IS_GOLD_PLAN_CUSTOMER__C":{"type":"FLOAT","index":266,"name":"IS_GOLD_PLAN_CUSTOMER__C","comment":null,"display_name":"is_gold_plan_customer__c"},"IS_PREMIUM_CUSTOMER__C":{"type":"FLOAT","index":267,"name":"IS_PREMIUM_CUSTOMER__C","comment":null,"display_name":"is_premium_customer__c"},"IS_SILVER_PLAN_CUSTOMER__C":{"type":"FLOAT","index":268,"name":"IS_SILVER_PLAN_CUSTOMER__C","comment":null,"display_name":"is_silver_plan_customer__c"},"IS_STARTER_CUSTOMER__C":{"type":"FLOAT","index":269,"name":"IS_STARTER_CUSTOMER__C","comment":null,"display_name":"is_starter_customer__c"},"IS_ULTIMATE_CUSTOMER__C":{"type":"FLOAT","index":270,"name":"IS_ULTIMATE_CUSTOMER__C","comment":null,"display_name":"is_ultimate_customer__c"},"IS_ULTIMATE_EAP_CUSTOMER__C":{"type":"TEXT","index":271,"name":"IS_ULTIMATE_EAP_CUSTOMER__C","comment":null,"display_name":"is_ultimate_eap_customer__c"},"IT_TEDD__C":{"type":"FLOAT","index":272,"name":"IT_TEDD__C","comment":null,"display_name":"it_tedd__c"},"JB_DEPLOYMENT_TYPE__C":{"type":"TEXT","index":273,"name":"JB_DEPLOYMENT_TYPE__C","comment":null,"display_name":"jb_deployment_type__c"},"JB_MAX_FAMILY_EMPLOYEES__C":{"type":"FLOAT","index":274,"name":"JB_MAX_FAMILY_EMPLOYEES__C","comment":null,"display_name":"jb_max_family_employees__c"},"JB_SALES_SEGMENT_DELTA_STORY__C":{"type":"TEXT","index":275,"name":"JB_SALES_SEGMENT_DELTA_STORY__C","comment":null,"display_name":"jb_sales_segment_delta_story__c"},"JB_SUPPORT_LEVEL__C":{"type":"TEXT","index":276,"name":"JB_SUPPORT_LEVEL__C","comment":null,"display_name":"jb_support_level__c"},"JB_TEST_SALES_SEGMENT__C":{"type":"TEXT","index":277,"name":"JB_TEST_SALES_SEGMENT__C","comment":null,"display_name":"jb_test_sales_segment__c"},"LARGE_ACCOUNT__C":{"type":"BOOLEAN","index":278,"name":"LARGE_ACCOUNT__C","comment":null,"display_name":"large_account__c"},"LASTACTIVITYDATE":{"type":"TIMESTAMP_TZ","index":279,"name":"LASTACTIVITYDATE","comment":null,"display_name":"lastactivitydate"},"LASTMODIFIEDBYID":{"type":"TEXT","index":280,"name":"LASTMODIFIEDBYID","comment":null,"display_name":"lastmodifiedbyid"},"LASTMODIFIEDDATE":{"type":"TIMESTAMP_TZ","index":281,"name":"LASTMODIFIEDDATE","comment":null,"display_name":"lastmodifieddate"},"LASTREFERENCEDDATE":{"type":"TIMESTAMP_TZ","index":282,"name":"LASTREFERENCEDDATE","comment":null,"display_name":"lastreferenceddate"},"LASTVIEWEDDATE":{"type":"TIMESTAMP_TZ","index":283,"name":"LASTVIEWEDDATE","comment":null,"display_name":"lastvieweddate"},"LATEST_BILL_TO_CONTACT__C":{"type":"TEXT","index":284,"name":"LATEST_BILL_TO_CONTACT__C","comment":null,"display_name":"latest_bill_to_contact__c"},"LATEST_COUNT_OF_CHILD_ACCOUNTS_CHANGED__C":{"type":"TIMESTAMP_TZ","index":285,"name":"LATEST_COUNT_OF_CHILD_ACCOUNTS_CHANGED__C","comment":null,"display_name":"latest_count_of_child_accounts_changed__c"},"LATEST_SOLD_TO_CONTACT__C":{"type":"TEXT","index":286,"name":"LATEST_SOLD_TO_CONTACT__C","comment":null,"display_name":"latest_sold_to_contact__c"},"LATEST_TO_CONTACT_QUOTE_STAMP__C":{"type":"TEXT","index":287,"name":"LATEST_TO_CONTACT_QUOTE_STAMP__C","comment":null,"display_name":"latest_to_contact_quote_stamp__c"},"LEANDATA__LD_EMAILDOMAINS__C":{"type":"TEXT","index":288,"name":"LEANDATA__LD_EMAILDOMAINS__C","comment":null,"display_name":"leandata__ld_emaildomains__c"},"LEANDATA__REPORTING_CUSTOMER__C":{"type":"BOOLEAN","index":289,"name":"LEANDATA__REPORTING_CUSTOMER__C","comment":null,"display_name":"leandata__reporting_customer__c"},"LEANDATA__REPORTING_HAS_OPPORTUNITY__C":{"type":"BOOLEAN","index":290,"name":"LEANDATA__REPORTING_HAS_OPPORTUNITY__C","comment":null,"display_name":"leandata__reporting_has_opportunity__c"},"LEANDATA__REPORTING_TARGET_ACCOUNT_NUMBER__C":{"type":"FLOAT","index":291,"name":"LEANDATA__REPORTING_TARGET_ACCOUNT_NUMBER__C","comment":null,"display_name":"leandata__reporting_target_account_number__c"},"LEANDATA__REPORTING_TARGET_ACCOUNT__C":{"type":"BOOLEAN","index":292,"name":"LEANDATA__REPORTING_TARGET_ACCOUNT__C","comment":null,"display_name":"leandata__reporting_target_account__c"},"LEANDATA__ROUTING_ACTION__C":{"type":"TEXT","index":293,"name":"LEANDATA__ROUTING_ACTION__C","comment":null,"display_name":"leandata__routing_action__c"},"LEANDATA__SEARCH__C":{"type":"TEXT","index":294,"name":"LEANDATA__SEARCH__C","comment":null,"display_name":"leandata__search__c"},"LICENSE_USER_COUNT__C":{"type":"FLOAT","index":295,"name":"LICENSE_USER_COUNT__C","comment":null,"display_name":"license_user_count__c"},"LICENSE_UTILIZATION__C":{"type":"FLOAT","index":296,"name":"LICENSE_UTILIZATION__C","comment":null,"display_name":"license_utilization__c"},"LOCALLY_MANAGED__C":{"type":"BOOLEAN","index":297,"name":"LOCALLY_MANAGED__C","comment":null,"display_name":"locally_managed__c"},"LOGO_REFERENCE__C":{"type":"BOOLEAN","index":298,"name":"LOGO_REFERENCE__C","comment":null,"display_name":"logo_reference__c"},"LOGO_WITH_VISION__C":{"type":"BOOLEAN","index":299,"name":"LOGO_WITH_VISION__C","comment":null,"display_name":"logo_with_vision__c"},"MANUAL_SUPPORT_UPGRADE__C":{"type":"BOOLEAN","index":300,"name":"MANUAL_SUPPORT_UPGRADE__C","comment":null,"display_name":"manual_support_upgrade__c"},"MARKETING_COMM_OPT_OUT__C":{"type":"BOOLEAN","index":301,"name":"MARKETING_COMM_OPT_OUT__C","comment":null,"display_name":"marketing_comm_opt_out__c"},"MASTERRECORDID":{"type":"TEXT","index":302,"name":"MASTERRECORDID","comment":null,"display_name":"masterrecordid"},"MAX_FOR_POTENTIAL_EE_USERS__C":{"type":"FLOAT","index":303,"name":"MAX_FOR_POTENTIAL_EE_USERS__C","comment":null,"display_name":"max_for_potential_ee_users__c"},"MAX_NEW_ADD_BUSINESS__C":{"type":"TIMESTAMP_TZ","index":304,"name":"MAX_NEW_ADD_BUSINESS__C","comment":null,"display_name":"max_new_add_business__c"},"MAX_RENEWAL_DATE__C":{"type":"TIMESTAMP_TZ","index":305,"name":"MAX_RENEWAL_DATE__C","comment":null,"display_name":"max_renewal_date__c"},"MKTO_SI__SALES_INSIGHT__C":{"type":"TEXT","index":306,"name":"MKTO_SI__SALES_INSIGHT__C","comment":null,"display_name":"mkto_si__sales_insight__c"},"MOST_RECENT_EXPIRED_SUBSCRIPTION_DATE__C":{"type":"TIMESTAMP_TZ","index":307,"name":"MOST_RECENT_EXPIRED_SUBSCRIPTION_DATE__C","comment":null,"display_name":"most_recent_expired_subscription_date__c"},"MULTIPLE_MULTIYEAR_SUBSCRIPTIONS__C":{"type":"BOOLEAN","index":308,"name":"MULTIPLE_MULTIYEAR_SUBSCRIPTIONS__C","comment":null,"display_name":"multiple_multiyear_subscriptions__c"},"NAME":{"type":"TEXT","index":309,"name":"NAME","comment":null,"display_name":"name"},"NAMED_ACCOUNT__C":{"type":"BOOLEAN","index":310,"name":"NAMED_ACCOUNT__C","comment":null,"display_name":"named_account__c"},"NAMELOCAL":{"type":"TEXT","index":311,"name":"NAMELOCAL","comment":null,"display_name":"namelocal"},"NATURAL_NAME__C":{"type":"TEXT","index":312,"name":"NATURAL_NAME__C","comment":null,"display_name":"natural_name__c"},"NEW_LOGO_TARGET_ACCOUNT_MOST_RECENT__C":{"type":"TIMESTAMP_TZ","index":313,"name":"NEW_LOGO_TARGET_ACCOUNT_MOST_RECENT__C","comment":null,"display_name":"new_logo_target_account_most_recent__c"},"NEW_LOGO_TARGET_ACCOUNT_ORIGINAL__C":{"type":"TIMESTAMP_TZ","index":314,"name":"NEW_LOGO_TARGET_ACCOUNT_ORIGINAL__C","comment":null,"display_name":"new_logo_target_account_original__c"},"NEW_LOGO_TARGET_ACCOUNT__C":{"type":"TEXT","index":315,"name":"NEW_LOGO_TARGET_ACCOUNT__C","comment":null,"display_name":"new_logo_target_account__c"},"NEXT_FY_ACCOUNT_OWNER_TEMP__C":{"type":"TEXT","index":316,"name":"NEXT_FY_ACCOUNT_OWNER_TEMP__C","comment":null,"display_name":"next_fy_account_owner_temp__c"},"NEXT_FY_PLANNING_NOTES_TEMP__C":{"type":"TEXT","index":317,"name":"NEXT_FY_PLANNING_NOTES_TEMP__C","comment":null,"display_name":"next_fy_planning_notes_temp__c"},"NEXT_FY_TSP_TERRITORY_TEMP__C":{"type":"TEXT","index":318,"name":"NEXT_FY_TSP_TERRITORY_TEMP__C","comment":null,"display_name":"next_fy_tsp_territory_temp__c"},"NEXT_FY_USER_AREA_TEMP__C":{"type":"TEXT","index":319,"name":"NEXT_FY_USER_AREA_TEMP__C","comment":null,"display_name":"next_fy_user_area_temp__c"},"NEXT_FY_USER_GEO_TEMP__C":{"type":"TEXT","index":320,"name":"NEXT_FY_USER_GEO_TEMP__C","comment":null,"display_name":"next_fy_user_geo_temp__c"},"NEXT_FY_USER_REGION_TEMP__C":{"type":"TEXT","index":321,"name":"NEXT_FY_USER_REGION_TEMP__C","comment":null,"display_name":"next_fy_user_region_temp__c"},"NEXT_FY_USER_SEGMENT_TEMP__C":{"type":"TEXT","index":322,"name":"NEXT_FY_USER_SEGMENT_TEMP__C","comment":null,"display_name":"next_fy_user_segment_temp__c"},"NEXT_RENEWAL_DATE__C":{"type":"TIMESTAMP_TZ","index":323,"name":"NEXT_RENEWAL_DATE__C","comment":null,"display_name":"next_renewal_date__c"},"NFR_EXPIRATION__C":{"type":"TIMESTAMP_TZ","index":324,"name":"NFR_EXPIRATION__C","comment":null,"display_name":"nfr_expiration__c"},"NO_OF_NFR_LICENSES__C":{"type":"FLOAT","index":325,"name":"NO_OF_NFR_LICENSES__C","comment":null,"display_name":"no_of_nfr_licenses__c"},"NUMBEROFEMPLOYEES":{"type":"NUMBER","index":326,"name":"NUMBEROFEMPLOYEES","comment":null,"display_name":"numberofemployees"},"NUMBER_OF_EMPLOYEES_DATAFOX__C":{"type":"FLOAT","index":327,"name":"NUMBER_OF_EMPLOYEES_DATAFOX__C","comment":null,"display_name":"number_of_employees_datafox__c"},"NUMBER_OF_EMPLOYEES_DISCOVERORG__C":{"type":"FLOAT","index":328,"name":"NUMBER_OF_EMPLOYEES_DISCOVERORG__C","comment":null,"display_name":"number_of_employees_discoverorg__c"},"NUMBER_OF_EMPLOYEES_MANUAL_ADMIN__C":{"type":"FLOAT","index":329,"name":"NUMBER_OF_EMPLOYEES_MANUAL_ADMIN__C","comment":null,"display_name":"number_of_employees_manual_admin__c"},"NUMBER_OF_EMPLOYEES_MANUAL_SOURCE_ADMIN__C":{"type":"TEXT","index":330,"name":"NUMBER_OF_EMPLOYEES_MANUAL_SOURCE_ADMIN__C","comment":null,"display_name":"number_of_employees_manual_source_admin__c"},"NUMBER_OF_LICENSES_ALL_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":331,"name":"NUMBER_OF_LICENSES_ALL_CHILD_ACCOUNTS__C","comment":null,"display_name":"number_of_licenses_all_child_accounts__c"},"NUMBER_OF_LICENSES_THIS_ACCOUNT__C":{"type":"FLOAT","index":332,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT__C","comment":null,"display_name":"number_of_licenses_this_account__c"},"NUMBER_OF_LICENSES_TOTAL__C":{"type":"FLOAT","index":333,"name":"NUMBER_OF_LICENSES_TOTAL__C","comment":null,"display_name":"number_of_licenses_total__c"},"NUMBER_OF_OPEN_OPPORTUNITIES__C":{"type":"FLOAT","index":334,"name":"NUMBER_OF_OPEN_OPPORTUNITIES__C","comment":null,"display_name":"number_of_open_opportunities__c"},"OF_CARR__C":{"type":"FLOAT","index":335,"name":"OF_CARR__C","comment":null,"display_name":"of_carr__c"},"OF_LICENSES__C":{"type":"FLOAT","index":336,"name":"OF_LICENSES__C","comment":null,"display_name":"of_licenses__c"},"OLDEST_OUTSTANDING_INVOICE_DATE__C":{"type":"TIMESTAMP_TZ","index":337,"name":"OLDEST_OUTSTANDING_INVOICE_DATE__C","comment":null,"display_name":"oldest_outstanding_invoice_date__c"},"ONE__C":{"type":"FLOAT","index":338,"name":"ONE__C","comment":null,"display_name":"one__c"},"OPT_OUT_FILE_LOCKING__C":{"type":"BOOLEAN","index":339,"name":"OPT_OUT_FILE_LOCKING__C","comment":null,"display_name":"opt_out_file_locking__c"},"OPT_OUT_GEO__C":{"type":"BOOLEAN","index":340,"name":"OPT_OUT_GEO__C","comment":null,"display_name":"opt_out_geo__c"},"OWNERID":{"type":"TEXT","index":341,"name":"OWNERID","comment":null,"display_name":"ownerid"},"OWNERSHIP":{"type":"TEXT","index":342,"name":"OWNERSHIP","comment":null,"display_name":"ownership"},"OWNER_PROFILE__C":{"type":"TEXT","index":343,"name":"OWNER_PROFILE__C","comment":null,"display_name":"owner_profile__c"},"PAGE_VIEWS__C":{"type":"FLOAT","index":344,"name":"PAGE_VIEWS__C","comment":null,"display_name":"page_views__c"},"PARENTID":{"type":"TEXT","index":345,"name":"PARENTID","comment":null,"display_name":"parentid"},"PARENT_ACCOUNT_NAMED__C":{"type":"BOOLEAN","index":346,"name":"PARENT_ACCOUNT_NAMED__C","comment":null,"display_name":"parent_account_named__c"},"PARENT_ACCOUNT_TYPE__C":{"type":"TEXT","index":347,"name":"PARENT_ACCOUNT_TYPE__C","comment":null,"display_name":"parent_account_type__c"},"PARTNERS_GITLAB_SERVICES_OFFERED__C":{"type":"TEXT","index":348,"name":"PARTNERS_GITLAB_SERVICES_OFFERED__C","comment":null,"display_name":"partners_gitlab_services_offered__c"},"PARTNERS_IS_ACTIVE_IN_PORTAL__C":{"type":"BOOLEAN","index":349,"name":"PARTNERS_IS_ACTIVE_IN_PORTAL__C","comment":null,"display_name":"partners_is_active_in_portal__c"},"PARTNERS_PARTNER_DISCOUNT__C":{"type":"TEXT","index":350,"name":"PARTNERS_PARTNER_DISCOUNT__C","comment":null,"display_name":"partners_partner_discount__c"},"PARTNERS_PARTNER_STATUS__C":{"type":"TEXT","index":351,"name":"PARTNERS_PARTNER_STATUS__C","comment":null,"display_name":"partners_partner_status__c"},"PARTNERS_PARTNER_TYPE__C":{"type":"TEXT","index":352,"name":"PARTNERS_PARTNER_TYPE__C","comment":null,"display_name":"partners_partner_type__c"},"PARTNERS_PUBLIC_SECTOR_PARTNER__C":{"type":"BOOLEAN","index":353,"name":"PARTNERS_PUBLIC_SECTOR_PARTNER__C","comment":null,"display_name":"partners_public_sector_partner__c"},"PARTNERS_SIGNED_CONTRACT_DATE__C":{"type":"TIMESTAMP_TZ","index":354,"name":"PARTNERS_SIGNED_CONTRACT_DATE__C","comment":null,"display_name":"partners_signed_contract_date__c"},"PARTNERS_SIGNED_CONTRACT_URL__C":{"type":"TEXT","index":355,"name":"PARTNERS_SIGNED_CONTRACT_URL__C","comment":null,"display_name":"partners_signed_contract_url__c"},"PARTNERS_TECHNOLOGY_SOLUTIONS__C":{"type":"TEXT","index":356,"name":"PARTNERS_TECHNOLOGY_SOLUTIONS__C","comment":null,"display_name":"partners_technology_solutions__c"},"PARTNER_ACCOUNT_IBAN_NUMBER__C":{"type":"TEXT","index":357,"name":"PARTNER_ACCOUNT_IBAN_NUMBER__C","comment":null,"display_name":"partner_account_iban_number__c"},"PARTNER_BANK_ADDRESS__C":{"type":"TEXT","index":358,"name":"PARTNER_BANK_ADDRESS__C","comment":null,"display_name":"partner_bank_address__c"},"PARTNER_BANK_NAME__C":{"type":"TEXT","index":359,"name":"PARTNER_BANK_NAME__C","comment":null,"display_name":"partner_bank_name__c"},"PARTNER_BENEFICIARY_NAME__C":{"type":"TEXT","index":360,"name":"PARTNER_BENEFICIARY_NAME__C","comment":null,"display_name":"partner_beneficiary_name__c"},"PARTNER_BUSINESS_MODEL_S__C":{"type":"TEXT","index":361,"name":"PARTNER_BUSINESS_MODEL_S__C","comment":null,"display_name":"partner_business_model_s__c"},"PARTNER_FOCUSED_MARKETS__C":{"type":"TEXT","index":362,"name":"PARTNER_FOCUSED_MARKETS__C","comment":null,"display_name":"partner_focused_markets__c"},"PARTNER_NAME_AND_TYPE__C":{"type":"TEXT","index":363,"name":"PARTNER_NAME_AND_TYPE__C","comment":null,"display_name":"partner_name_and_type__c"},"PARTNER_PROGRAM_STATUS__C":{"type":"TEXT","index":364,"name":"PARTNER_PROGRAM_STATUS__C","comment":null,"display_name":"partner_program_status__c"},"PARTNER_ROUTING__C":{"type":"TEXT","index":365,"name":"PARTNER_ROUTING__C","comment":null,"display_name":"partner_routing__c"},"PARTNER_TRACK__C":{"type":"TEXT","index":366,"name":"PARTNER_TRACK__C","comment":null,"display_name":"partner_track__c"},"PARTNER_VAT_TAX_ID__C":{"type":"TEXT","index":367,"name":"PARTNER_VAT_TAX_ID__C","comment":null,"display_name":"partner_vat_tax_id__c"},"PAYMENTTERMNUMERIC__C":{"type":"TEXT","index":368,"name":"PAYMENTTERMNUMERIC__C","comment":null,"display_name":"paymenttermnumeric__c"},"PENETRATION_RATE_BUCKET_LAM__C":{"type":"TEXT","index":369,"name":"PENETRATION_RATE_BUCKET_LAM__C","comment":null,"display_name":"penetration_rate_bucket_lam__c"},"PENETRATION_RATE_LAM__C":{"type":"FLOAT","index":370,"name":"PENETRATION_RATE_LAM__C","comment":null,"display_name":"penetration_rate_lam__c"},"PHONE":{"type":"TEXT","index":371,"name":"PHONE","comment":null,"display_name":"phone"},"PHOTOURL":{"type":"TEXT","index":372,"name":"PHOTOURL","comment":null,"display_name":"photourl"},"POTENTIAL_ARR_LAM__C":{"type":"FLOAT","index":373,"name":"POTENTIAL_ARR_LAM__C","comment":null,"display_name":"potential_arr_lam__c"},"POTENTIAL_CARR_THIS_ACCOUNT__C":{"type":"FLOAT","index":374,"name":"POTENTIAL_CARR_THIS_ACCOUNT__C","comment":null,"display_name":"potential_carr_this_account__c"},"POTENTIAL_EE_SUBSCRIPTION_AMOUNT__C":{"type":"FLOAT","index":375,"name":"POTENTIAL_EE_SUBSCRIPTION_AMOUNT__C","comment":null,"display_name":"potential_ee_subscription_amount__c"},"POTENTIAL_EE_USERS_TOTAL__C":{"type":"FLOAT","index":376,"name":"POTENTIAL_EE_USERS_TOTAL__C","comment":null,"display_name":"potential_ee_users_total__c"},"POTENTIAL_USERS_CHECK_LAM__C":{"type":"FLOAT","index":377,"name":"POTENTIAL_USERS_CHECK_LAM__C","comment":null,"display_name":"potential_users_check_lam__c"},"POTENTIAL_USERS_VERIFY__C":{"type":"FLOAT","index":378,"name":"POTENTIAL_USERS_VERIFY__C","comment":null,"display_name":"potential_users_verify__c"},"POTENTIAL_USERS__C":{"type":"FLOAT","index":379,"name":"POTENTIAL_USERS__C","comment":null,"display_name":"potential_users__c"},"PRESS_QUOTE_REFERENCE__C":{"type":"BOOLEAN","index":380,"name":"PRESS_QUOTE_REFERENCE__C","comment":null,"display_name":"press_quote_reference__c"},"PREVIOUS_ACCOUNT_NAME__C":{"type":"TEXT","index":381,"name":"PREVIOUS_ACCOUNT_NAME__C","comment":null,"display_name":"previous_account_name__c"},"PREVIOUS_ACCOUNT_OWNER_EMAIL__C":{"type":"TEXT","index":382,"name":"PREVIOUS_ACCOUNT_OWNER_EMAIL__C","comment":null,"display_name":"previous_account_owner_email__c"},"PREVIOUS_ACCOUNT_OWNER__C":{"type":"TEXT","index":383,"name":"PREVIOUS_ACCOUNT_OWNER__C","comment":null,"display_name":"previous_account_owner__c"},"PRIMARY_CONTACT_EMAIL__C":{"type":"TEXT","index":384,"name":"PRIMARY_CONTACT_EMAIL__C","comment":null,"display_name":"primary_contact_email__c"},"PRIMARY_CONTACT_FIRST_NAME__C":{"type":"TEXT","index":385,"name":"PRIMARY_CONTACT_FIRST_NAME__C","comment":null,"display_name":"primary_contact_first_name__c"},"PRIMARY_CONTACT_ID__C":{"type":"TEXT","index":386,"name":"PRIMARY_CONTACT_ID__C","comment":null,"display_name":"primary_contact_id__c"},"PRODUCTS_PURCHASED__C":{"type":"TEXT","index":387,"name":"PRODUCTS_PURCHASED__C","comment":null,"display_name":"products_purchased__c"},"PUBLIC_PRIVATE_UNIVERSITY__C":{"type":"TEXT","index":388,"name":"PUBLIC_PRIVATE_UNIVERSITY__C","comment":null,"display_name":"public_private_university__c"},"PUBLIC_SECTOR_PARTNER__C":{"type":"TEXT","index":389,"name":"PUBLIC_SECTOR_PARTNER__C","comment":null,"display_name":"public_sector_partner__c"},"PUB_SEC_OWNER_TEXT__C":{"type":"TEXT","index":390,"name":"PUB_SEC_OWNER_TEXT__C","comment":null,"display_name":"pub_sec_owner_text__c"},"PUB_SEC_OWNER__C":{"type":"TEXT","index":391,"name":"PUB_SEC_OWNER__C","comment":null,"display_name":"pub_sec_owner__c"},"Q3_IACV__C":{"type":"FLOAT","index":392,"name":"Q3_IACV__C","comment":null,"display_name":"q3_iacv__c"},"Q4_IACV__C":{"type":"FLOAT","index":393,"name":"Q4_IACV__C","comment":null,"display_name":"q4_iacv__c"},"QUOTE_REFERENCE__C":{"type":"BOOLEAN","index":394,"name":"QUOTE_REFERENCE__C","comment":null,"display_name":"quote_reference__c"},"RECORDTYPEID":{"type":"TEXT","index":395,"name":"RECORDTYPEID","comment":null,"display_name":"recordtypeid"},"REFERENCEABLE_CUSTOMER_NOTES__C":{"type":"TEXT","index":396,"name":"REFERENCEABLE_CUSTOMER_NOTES__C","comment":null,"display_name":"referenceable_customer_notes__c"},"REFERENCEABLE_CUSTOMER__C":{"type":"TEXT","index":397,"name":"REFERENCEABLE_CUSTOMER__C","comment":null,"display_name":"referenceable_customer__c"},"REFERENCE_TYPE__C":{"type":"TEXT","index":398,"name":"REFERENCE_TYPE__C","comment":null,"display_name":"reference_type__c"},"REGION_SUB_REGION__C":{"type":"TEXT","index":399,"name":"REGION_SUB_REGION__C","comment":null,"display_name":"region_sub_region__c"},"REGION__C":{"type":"TEXT","index":400,"name":"REGION__C","comment":null,"display_name":"region__c"},"RESELLER_DISCOUNT__C":{"type":"TEXT","index":401,"name":"RESELLER_DISCOUNT__C","comment":null,"display_name":"reseller_discount__c"},"RESELLER_PO_STATUS__C":{"type":"TEXT","index":402,"name":"RESELLER_PO_STATUS__C","comment":null,"display_name":"reseller_po_status__c"},"RESELLER_TYPE__C":{"type":"TEXT","index":403,"name":"RESELLER_TYPE__C","comment":null,"display_name":"reseller_type__c"},"REVENUE__C":{"type":"FLOAT","index":404,"name":"REVENUE__C","comment":null,"display_name":"revenue__c"},"SALES_REFERENCE__C":{"type":"BOOLEAN","index":405,"name":"SALES_REFERENCE__C","comment":null,"display_name":"sales_reference__c"},"SALES_SEGMENTATION_NEW__C":{"type":"TEXT","index":406,"name":"SALES_SEGMENTATION_NEW__C","comment":null,"display_name":"sales_segmentation_new__c"},"SA_TABOVER__MERGE_ACTION__C":{"type":"TEXT","index":407,"name":"SA_TABOVER__MERGE_ACTION__C","comment":null,"display_name":"sa_tabover__merge_action__c"},"SA_TEAM__C":{"type":"TEXT","index":408,"name":"SA_TEAM__C","comment":null,"display_name":"sa_team__c"},"SCORE__C":{"type":"TEXT","index":409,"name":"SCORE__C","comment":null,"display_name":"score__c"},"SDR_ACCOUNT_TEAM__C":{"type":"TEXT","index":410,"name":"SDR_ACCOUNT_TEAM__C","comment":null,"display_name":"sdr_account_team__c"},"SDR_ASSIGNED_ROLE__C":{"type":"TEXT","index":411,"name":"SDR_ASSIGNED_ROLE__C","comment":null,"display_name":"sdr_assigned_role__c"},"SDR_ASSIGNED__C":{"type":"TEXT","index":412,"name":"SDR_ASSIGNED__C","comment":null,"display_name":"sdr_assigned__c"},"SDR_TARGET_ACCOUNT__C":{"type":"BOOLEAN","index":413,"name":"SDR_TARGET_ACCOUNT__C","comment":null,"display_name":"sdr_target_account__c"},"SDR__C":{"type":"TEXT","index":414,"name":"SDR__C","comment":null,"display_name":"sdr__c"},"SESSIONS__C":{"type":"FLOAT","index":415,"name":"SESSIONS__C","comment":null,"display_name":"sessions__c"},"SHIPPINGCITY":{"type":"TEXT","index":416,"name":"SHIPPINGCITY","comment":null,"display_name":"shippingcity"},"SHIPPINGCOUNTRY":{"type":"TEXT","index":417,"name":"SHIPPINGCOUNTRY","comment":null,"display_name":"shippingcountry"},"SHIPPINGCOUNTRYCODE":{"type":"TEXT","index":418,"name":"SHIPPINGCOUNTRYCODE","comment":null,"display_name":"shippingcountrycode"},"SHIPPINGCOUNTRYCODE__C":{"type":"TEXT","index":419,"name":"SHIPPINGCOUNTRYCODE__C","comment":null,"display_name":"shippingcountrycode__c"},"SHIPPINGLATITUDE":{"type":"FLOAT","index":420,"name":"SHIPPINGLATITUDE","comment":null,"display_name":"shippinglatitude"},"SHIPPINGLONGITUDE":{"type":"FLOAT","index":421,"name":"SHIPPINGLONGITUDE","comment":null,"display_name":"shippinglongitude"},"SHIPPINGPOSTALCODE":{"type":"TEXT","index":422,"name":"SHIPPINGPOSTALCODE","comment":null,"display_name":"shippingpostalcode"},"SHIPPINGSTATE":{"type":"TEXT","index":423,"name":"SHIPPINGSTATE","comment":null,"display_name":"shippingstate"},"SHIPPINGSTATECODE":{"type":"TEXT","index":424,"name":"SHIPPINGSTATECODE","comment":null,"display_name":"shippingstatecode"},"SHIPPINGSTREET":{"type":"TEXT","index":425,"name":"SHIPPINGSTREET","comment":null,"display_name":"shippingstreet"},"SIC":{"type":"TEXT","index":426,"name":"SIC","comment":null,"display_name":"sic"},"SIG_REFERENCE__C":{"type":"BOOLEAN","index":427,"name":"SIG_REFERENCE__C","comment":null,"display_name":"sig_reference__c"},"SOLUTIONS_ARCHITECT_LOOKUP__C":{"type":"TEXT","index":428,"name":"SOLUTIONS_ARCHITECT_LOOKUP__C","comment":null,"display_name":"solutions_architect_lookup__c"},"SPECIAL_TERMS__C":{"type":"TEXT","index":429,"name":"SPECIAL_TERMS__C","comment":null,"display_name":"special_terms__c"},"STRATEGIC__C":{"type":"BOOLEAN","index":430,"name":"STRATEGIC__C","comment":null,"display_name":"strategic__c"},"ST_CONFIGURE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":431,"name":"ST_CONFIGURE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_configure_appetite_for_replacement__c"},"ST_CONFIGURE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":432,"name":"ST_CONFIGURE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_configure_contract_end_date__c"},"ST_CONFIGURE_TECH__C":{"type":"TEXT","index":433,"name":"ST_CONFIGURE_TECH__C","comment":null,"display_name":"st_configure_tech__c"},"ST_CREATE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":434,"name":"ST_CREATE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_create_appetite_for_replacement__c"},"ST_CREATE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":435,"name":"ST_CREATE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_create_contract_end_date__c"},"ST_CREATE_TECH__C":{"type":"TEXT","index":436,"name":"ST_CREATE_TECH__C","comment":null,"display_name":"st_create_tech__c"},"ST_DEFEND_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":437,"name":"ST_DEFEND_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_defend_appetite_for_replacement__c"},"ST_DEFEND_TECH__C":{"type":"TEXT","index":438,"name":"ST_DEFEND_TECH__C","comment":null,"display_name":"st_defend_tech__c"},"ST_MANAGE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":439,"name":"ST_MANAGE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_manage_appetite_for_replacement__c"},"ST_MANAGE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":440,"name":"ST_MANAGE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_manage_contract_end_date__c"},"ST_MANAGE_TECH__C":{"type":"TEXT","index":441,"name":"ST_MANAGE_TECH__C","comment":null,"display_name":"st_manage_tech__c"},"ST_MONITOR_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":442,"name":"ST_MONITOR_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_monitor_appetite_for_replacement__c"},"ST_MONITOR_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":443,"name":"ST_MONITOR_CONTRACT_END_DATE__C","comment":null,"display_name":"st_monitor_contract_end_date__c"},"ST_MONITOR_TECH__C":{"type":"TEXT","index":444,"name":"ST_MONITOR_TECH__C","comment":null,"display_name":"st_monitor_tech__c"},"ST_PACKAGE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":445,"name":"ST_PACKAGE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_package_appetite_for_replacement__c"},"ST_PACKAGE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":446,"name":"ST_PACKAGE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_package_contract_end_date__c"},"ST_PACKAGE_TECH__C":{"type":"TEXT","index":447,"name":"ST_PACKAGE_TECH__C","comment":null,"display_name":"st_package_tech__c"},"ST_PLAN_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":448,"name":"ST_PLAN_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_plan_appetite_for_replacement__c"},"ST_PLAN_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":449,"name":"ST_PLAN_CONTRACT_END_DATE__C","comment":null,"display_name":"st_plan_contract_end_date__c"},"ST_PLAN_TECH__C":{"type":"TEXT","index":450,"name":"ST_PLAN_TECH__C","comment":null,"display_name":"st_plan_tech__c"},"ST_RELEASE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":451,"name":"ST_RELEASE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_release_appetite_for_replacement__c"},"ST_RELEASE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":452,"name":"ST_RELEASE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_release_contract_end_date__c"},"ST_RELEASE_TECH__C":{"type":"TEXT","index":453,"name":"ST_RELEASE_TECH__C","comment":null,"display_name":"st_release_tech__c"},"ST_SECURE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":454,"name":"ST_SECURE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_secure_appetite_for_replacement__c"},"ST_SECURE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":455,"name":"ST_SECURE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_secure_contract_end_date__c"},"ST_SECURE_TECH__C":{"type":"TEXT","index":456,"name":"ST_SECURE_TECH__C","comment":null,"display_name":"st_secure_tech__c"},"ST_VERIFY_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":457,"name":"ST_VERIFY_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_verify_appetite_for_replacement__c"},"ST_VERIFY_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":458,"name":"ST_VERIFY_CONTRACT_END_DATE__C","comment":null,"display_name":"st_verify_contract_end_date__c"},"ST_VERIFY_TECH__C":{"type":"TEXT","index":459,"name":"ST_VERIFY_TECH__C","comment":null,"display_name":"st_verify_tech__c"},"SUBSCRIPTION_AMOUNT__C":{"type":"FLOAT","index":460,"name":"SUBSCRIPTION_AMOUNT__C","comment":null,"display_name":"subscription_amount__c"},"SUB_INDUSTRY__C":{"type":"TEXT","index":461,"name":"SUB_INDUSTRY__C","comment":null,"display_name":"sub_industry__c"},"SUB_REGION__C":{"type":"TEXT","index":462,"name":"SUB_REGION__C","comment":null,"display_name":"sub_region__c"},"SUM_OF_OPEN_RENEWAL_OPPORTUNITIES__C":{"type":"FLOAT","index":463,"name":"SUM_OF_OPEN_RENEWAL_OPPORTUNITIES__C","comment":null,"display_name":"sum_of_open_renewal_opportunities__c"},"SUM_OPEN_NEW_ADD_ON_IACV_OPPORTUNITIES__C":{"type":"FLOAT","index":464,"name":"SUM_OPEN_NEW_ADD_ON_IACV_OPPORTUNITIES__C","comment":null,"display_name":"sum_open_new_add_on_iacv_opportunities__c"},"SUPPORT_HOLD__C":{"type":"BOOLEAN","index":465,"name":"SUPPORT_HOLD__C","comment":null,"display_name":"support_hold__c"},"SUPPORT_LEVEL_DEPRECATED__C":{"type":"FLOAT","index":466,"name":"SUPPORT_LEVEL_DEPRECATED__C","comment":null,"display_name":"support_level_deprecated__c"},"SUPPORT_LEVEL_NEW__C":{"type":"TEXT","index":467,"name":"SUPPORT_LEVEL_NEW__C","comment":null,"display_name":"support_level_new__c"},"SUPPORT_LEVEL__C":{"type":"TEXT","index":468,"name":"SUPPORT_LEVEL__C","comment":null,"display_name":"support_level__c"},"SYSTEMMODSTAMP":{"type":"TIMESTAMP_TZ","index":469,"name":"SYSTEMMODSTAMP","comment":null,"display_name":"systemmodstamp"},"TAM_PRIORITIZATION__C":{"type":"TEXT","index":470,"name":"TAM_PRIORITIZATION__C","comment":null,"display_name":"tam_prioritization__c"},"TAM_TEAM__C":{"type":"TEXT","index":471,"name":"TAM_TEAM__C","comment":null,"display_name":"tam_team__c"},"TECHNICAL_ACCOUNT_MANAGER_DATE__C":{"type":"TIMESTAMP_TZ","index":472,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE__C","comment":null,"display_name":"technical_account_manager_date__c"},"TECHNICAL_ACCOUNT_MANAGER_LU__C":{"type":"TEXT","index":473,"name":"TECHNICAL_ACCOUNT_MANAGER_LU__C","comment":null,"display_name":"technical_account_manager_lu__c"},"TECHNICAL_ACCOUNT_MANAGER_NAME__C":{"type":"TEXT","index":474,"name":"TECHNICAL_ACCOUNT_MANAGER_NAME__C","comment":null,"display_name":"technical_account_manager_name__c"},"TECHNOLOGY_STACK__C":{"type":"TEXT","index":475,"name":"TECHNOLOGY_STACK__C","comment":null,"display_name":"technology_stack__c"},"TEDD_EMPLOYEES__C":{"type":"FLOAT","index":476,"name":"TEDD_EMPLOYEES__C","comment":null,"display_name":"tedd_employees__c"},"TEMPORARY_NAMED_TERRITORY_FIELD__C":{"type":"TEXT","index":477,"name":"TEMPORARY_NAMED_TERRITORY_FIELD__C","comment":null,"display_name":"temporary_named_territory_field__c"},"TERRITORIES_COVERED__C":{"type":"TEXT","index":478,"name":"TERRITORIES_COVERED__C","comment":null,"display_name":"territories_covered__c"},"TERRITORY__C":{"type":"TEXT","index":479,"name":"TERRITORY__C","comment":null,"display_name":"territory__c"},"TESTIMONIAL_REFERENCE__C":{"type":"BOOLEAN","index":480,"name":"TESTIMONIAL_REFERENCE__C","comment":null,"display_name":"testimonial_reference__c"},"TICKERSYMBOL":{"type":"TEXT","index":481,"name":"TICKERSYMBOL","comment":null,"display_name":"tickersymbol"},"TOP_LIST__C":{"type":"TEXT","index":482,"name":"TOP_LIST__C","comment":null,"display_name":"top_list__c"},"TOP_RENEWAL__C":{"type":"BOOLEAN","index":483,"name":"TOP_RENEWAL__C","comment":null,"display_name":"top_renewal__c"},"TOTAL_INVOICED_OUTSTANDING__C":{"type":"FLOAT","index":484,"name":"TOTAL_INVOICED_OUTSTANDING__C","comment":null,"display_name":"total_invoiced_outstanding__c"},"TOTAL_INVOICED_PAID__C":{"type":"FLOAT","index":485,"name":"TOTAL_INVOICED_PAID__C","comment":null,"display_name":"total_invoiced_paid__c"},"TOTAL_INVOICED__C":{"type":"FLOAT","index":486,"name":"TOTAL_INVOICED__C","comment":null,"display_name":"total_invoiced__c"},"TRANSFER_DATE__C":{"type":"TIMESTAMP_TZ","index":487,"name":"TRANSFER_DATE__C","comment":null,"display_name":"transfer_date__c"},"TRENDING_OFFSITE_INTENT__C":{"type":"BOOLEAN","index":488,"name":"TRENDING_OFFSITE_INTENT__C","comment":null,"display_name":"trending_offsite_intent__c"},"TRENDING_ONSITE_ENGAGEMENT__C":{"type":"BOOLEAN","index":489,"name":"TRENDING_ONSITE_ENGAGEMENT__C","comment":null,"display_name":"trending_onsite_engagement__c"},"TRIGGER_WORKFLOW__C":{"type":"BOOLEAN","index":490,"name":"TRIGGER_WORKFLOW__C","comment":null,"display_name":"trigger_workflow__c"},"TSP_LAST_CHANGE_DATE__C":{"type":"TIMESTAMP_TZ","index":491,"name":"TSP_LAST_CHANGE_DATE__C","comment":null,"display_name":"tsp_last_change_date__c"},"TSP_MANAGER_DIFFERENCE__C":{"type":"BOOLEAN","index":492,"name":"TSP_MANAGER_DIFFERENCE__C","comment":null,"display_name":"tsp_manager_difference__c"},"TSP_OVERRIDE_STATUS__C":{"type":"TEXT","index":493,"name":"TSP_OVERRIDE_STATUS__C","comment":null,"display_name":"tsp_override_status__c"},"TSP_UNIQUE_TERRITORY_NAME__C":{"type":"TEXT","index":494,"name":"TSP_UNIQUE_TERRITORY_NAME__C","comment":null,"display_name":"tsp_unique_territory_name__c"},"TYPE":{"type":"TEXT","index":495,"name":"TYPE","comment":null,"display_name":"type"},"TYPE_AMOUNT_CLOSE_DATE__C":{"type":"TEXT","index":496,"name":"TYPE_AMOUNT_CLOSE_DATE__C","comment":null,"display_name":"type_amount_close_date__c"},"ULTIMATE_PARENT_ACCOUNT_BILLING_COUNTRY__C":{"type":"TEXT","index":497,"name":"ULTIMATE_PARENT_ACCOUNT_BILLING_COUNTRY__C","comment":null,"display_name":"ultimate_parent_account_billing_country__c"},"ULTIMATE_PARENT_ACCOUNT_ID__C":{"type":"TEXT","index":498,"name":"ULTIMATE_PARENT_ACCOUNT_ID__C","comment":null,"display_name":"ultimate_parent_account_id__c"},"ULTIMATE_PARENT_ACCOUNT_TEXT__C":{"type":"TEXT","index":499,"name":"ULTIMATE_PARENT_ACCOUNT_TEXT__C","comment":null,"display_name":"ultimate_parent_account_text__c"},"ULTIMATE_PARENT_ACCOUNT__C":{"type":"TEXT","index":500,"name":"ULTIMATE_PARENT_ACCOUNT__C","comment":null,"display_name":"ultimate_parent_account__c"},"ULTIMATE_PARENT_SALES_SEGMENT_EMPLOYEES__C":{"type":"TEXT","index":501,"name":"ULTIMATE_PARENT_SALES_SEGMENT_EMPLOYEES__C","comment":null,"display_name":"ultimate_parent_sales_segment_employees__c"},"UPA_ACCOUNT_TERRITORY__C":{"type":"TEXT","index":502,"name":"UPA_ACCOUNT_TERRITORY__C","comment":null,"display_name":"upa_account_territory__c"},"UPA_IS_HOLDING_COMPANY__C":{"type":"BOOLEAN","index":503,"name":"UPA_IS_HOLDING_COMPANY__C","comment":null,"display_name":"upa_is_holding_company__c"},"USAGE_STATISTICS_ACTIVE_USER_COUNT__C":{"type":"FLOAT","index":504,"name":"USAGE_STATISTICS_ACTIVE_USER_COUNT__C","comment":null,"display_name":"usage_statistics_active_user_count__c"},"USAGE_STATISTICS_SUM_OF_LICENSE_USER_C__C":{"type":"FLOAT","index":505,"name":"USAGE_STATISTICS_SUM_OF_LICENSE_USER_C__C","comment":null,"display_name":"usage_statistics_sum_of_license_user_c__c"},"USER_IS_ACCOUNT_OWNER__C":{"type":"BOOLEAN","index":506,"name":"USER_IS_ACCOUNT_OWNER__C","comment":null,"display_name":"user_is_account_owner__c"},"USING_CE__C":{"type":"BOOLEAN","index":507,"name":"USING_CE__C","comment":null,"display_name":"using_ce__c"},"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS__C":{"type":"FLOAT","index":508,"name":"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__closed_lost_registrations__c"},"VARTOPIADRS__CLOSED_WON_REGISTRATIONS__C":{"type":"FLOAT","index":509,"name":"VARTOPIADRS__CLOSED_WON_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__closed_won_registrations__c"},"VARTOPIADRS__CREATED_FROM_REGISTRATION__C":{"type":"BOOLEAN","index":510,"name":"VARTOPIADRS__CREATED_FROM_REGISTRATION__C","comment":null,"display_name":"vartopiadrs__created_from_registration__c"},"VARTOPIADRS__DEAL_REG_PROGRAM_NAME__C":{"type":"TEXT","index":511,"name":"VARTOPIADRS__DEAL_REG_PROGRAM_NAME__C","comment":null,"display_name":"vartopiadrs__deal_reg_program_name__c"},"VARTOPIADRS__DENIED_REGISTRATIONS__C":{"type":"FLOAT","index":512,"name":"VARTOPIADRS__DENIED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__denied_registrations__c"},"VARTOPIADRS__EXPIRED_REGISTRATIONS__C":{"type":"FLOAT","index":513,"name":"VARTOPIADRS__EXPIRED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__expired_registrations__c"},"VARTOPIADRS__NUMBER_OF_ACTIVE_REGISTRATIONS__C":{"type":"FLOAT","index":514,"name":"VARTOPIADRS__NUMBER_OF_ACTIVE_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_active_registrations__c"},"VARTOPIADRS__NUMBER_OF_APPROVED_REGISTRATIONS__C":{"type":"FLOAT","index":515,"name":"VARTOPIADRS__NUMBER_OF_APPROVED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_approved_registrations__c"},"VARTOPIADRS__NUMBER_OF_CLOSED_LOST_REGISTRATIONS__C":{"type":"FLOAT","index":516,"name":"VARTOPIADRS__NUMBER_OF_CLOSED_LOST_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_closed_lost_registrations__c"},"VARTOPIADRS__NUMBER_OF_CLOSED_WON_REGISTRATIONS__C":{"type":"FLOAT","index":517,"name":"VARTOPIADRS__NUMBER_OF_CLOSED_WON_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_closed_won_registrations__c"},"VARTOPIADRS__NUMBER_OF_DENIED_REGISTRATIONS__C":{"type":"FLOAT","index":518,"name":"VARTOPIADRS__NUMBER_OF_DENIED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_denied_registrations__c"},"VARTOPIADRS__NUMBER_OF_EXPIRED_REGISTRATIONS__C":{"type":"FLOAT","index":519,"name":"VARTOPIADRS__NUMBER_OF_EXPIRED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_expired_registrations__c"},"VARTOPIADRS__PERCENTAGE_OF_REGISTRATIONS_APPROVED__C":{"type":"FLOAT","index":520,"name":"VARTOPIADRS__PERCENTAGE_OF_REGISTRATIONS_APPROVED__C","comment":null,"display_name":"vartopiadrs__percentage_of_registrations_approved__c"},"VARTOPIADRS__RECENT_REGISTRATION_DATE__C":{"type":"TIMESTAMP_TZ","index":521,"name":"VARTOPIADRS__RECENT_REGISTRATION_DATE__C","comment":null,"display_name":"vartopiadrs__recent_registration_date__c"},"VARTOPIADRS__TOTAL_NUMBER_OF_REGISTRATIONS__C":{"type":"FLOAT","index":522,"name":"VARTOPIADRS__TOTAL_NUMBER_OF_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__total_number_of_registrations__c"},"VARTOPIADRS__VARTOPIAPARTNERTRANSACTIONID__C":{"type":"TEXT","index":523,"name":"VARTOPIADRS__VARTOPIAPARTNERTRANSACTIONID__C","comment":null,"display_name":"vartopiadrs__vartopiapartnertransactionid__c"},"VARTOPIADRS__VARTOPIA_ACCESS__C":{"type":"TEXT","index":524,"name":"VARTOPIADRS__VARTOPIA_ACCESS__C","comment":null,"display_name":"vartopiadrs__vartopia_access__c"},"VAT_ID__C":{"type":"TEXT","index":525,"name":"VAT_ID__C","comment":null,"display_name":"vat_id__c"},"WEBCAST_SPEAKER_REFERENCE__C":{"type":"BOOLEAN","index":526,"name":"WEBCAST_SPEAKER_REFERENCE__C","comment":null,"display_name":"webcast_speaker_reference__c"},"WEBSITE":{"type":"TEXT","index":527,"name":"WEBSITE","comment":null,"display_name":"website"},"WEB_DIRECT_COMPANY_SIZE__C":{"type":"TEXT","index":528,"name":"WEB_DIRECT_COMPANY_SIZE__C","comment":null,"display_name":"web_direct_company_size__c"},"WEB_PORTAL_SIGN_UP_COMPANY_SIZE__C":{"type":"TEXT","index":529,"name":"WEB_PORTAL_SIGN_UP_COMPANY_SIZE__C","comment":null,"display_name":"web_portal_sign_up_company_size__c"},"X_ADMIN_IDENTIFIER__C":{"type":"TEXT","index":530,"name":"X_ADMIN_IDENTIFIER__C","comment":null,"display_name":"x_admin_identifier__c"},"ZENDESK_ORGANIZATION_ID__C":{"type":"TEXT","index":531,"name":"ZENDESK_ORGANIZATION_ID__C","comment":null,"display_name":"zendesk_organization_id__c"},"ZI_ACCOUNT_NAME__C":{"type":"TEXT","index":532,"name":"ZI_ACCOUNT_NAME__C","comment":null,"display_name":"zi_account_name__c"},"ZI_CITY__C":{"type":"TEXT","index":533,"name":"ZI_CITY__C","comment":null,"display_name":"zi_city__c"},"ZI_COMPANY_ISDEFUNCT__C":{"type":"TEXT","index":534,"name":"ZI_COMPANY_ISDEFUNCT__C","comment":null,"display_name":"zi_company_isdefunct__c"},"ZI_COMPANY_LINKEDIN_URL__C":{"type":"TEXT","index":535,"name":"ZI_COMPANY_LINKEDIN_URL__C","comment":null,"display_name":"zi_company_linkedin_url__c"},"ZI_COMPANY_OTHER_DOMAINS__C":{"type":"TEXT","index":536,"name":"ZI_COMPANY_OTHER_DOMAINS__C","comment":null,"display_name":"zi_company_other_domains__c"},"ZI_COUNTRY__C":{"type":"TEXT","index":537,"name":"ZI_COUNTRY__C","comment":null,"display_name":"zi_country__c"},"ZI_DESCRIPTION__C":{"type":"TEXT","index":538,"name":"ZI_DESCRIPTION__C","comment":null,"display_name":"zi_description__c"},"ZI_EMPLOYEES__C":{"type":"FLOAT","index":539,"name":"ZI_EMPLOYEES__C","comment":null,"display_name":"zi_employees__c"},"ZI_FAX__C":{"type":"TEXT","index":540,"name":"ZI_FAX__C","comment":null,"display_name":"zi_fax__c"},"ZI_INDUSTRY__C":{"type":"TEXT","index":541,"name":"ZI_INDUSTRY__C","comment":null,"display_name":"zi_industry__c"},"ZI_NAICS_CODE__C":{"type":"TEXT","index":542,"name":"ZI_NAICS_CODE__C","comment":null,"display_name":"zi_naics_code__c"},"ZI_NUMBER_OF_DEVELOPERS__C":{"type":"FLOAT","index":543,"name":"ZI_NUMBER_OF_DEVELOPERS__C","comment":null,"display_name":"zi_number_of_developers__c"},"ZI_PARENT_COMPANY_NAME__C":{"type":"TEXT","index":544,"name":"ZI_PARENT_COMPANY_NAME__C","comment":null,"display_name":"zi_parent_company_name__c"},"ZI_PARENT_COMPANY_ZOOMINFO_ID__C":{"type":"TEXT","index":545,"name":"ZI_PARENT_COMPANY_ZOOMINFO_ID__C","comment":null,"display_name":"zi_parent_company_zoominfo_id__c"},"ZI_PHONE__C":{"type":"TEXT","index":546,"name":"ZI_PHONE__C","comment":null,"display_name":"zi_phone__c"},"ZI_PRODUCTS_AND_SERVICES__C":{"type":"TEXT","index":547,"name":"ZI_PRODUCTS_AND_SERVICES__C","comment":null,"display_name":"zi_products_and_services__c"},"ZI_REVENUE__C":{"type":"FLOAT","index":548,"name":"ZI_REVENUE__C","comment":null,"display_name":"zi_revenue__c"},"ZI_SIC_CODE__C":{"type":"TEXT","index":549,"name":"ZI_SIC_CODE__C","comment":null,"display_name":"zi_sic_code__c"},"ZI_STATE_PROVINCE__C":{"type":"TEXT","index":550,"name":"ZI_STATE_PROVINCE__C","comment":null,"display_name":"zi_state_province__c"},"ZI_STREET__C":{"type":"TEXT","index":551,"name":"ZI_STREET__C","comment":null,"display_name":"zi_street__c"},"ZI_TECHNOLOGIES__C":{"type":"TEXT","index":552,"name":"ZI_TECHNOLOGIES__C","comment":null,"display_name":"zi_technologies__c"},"ZI_TICKER_SYMBOL__C":{"type":"TEXT","index":553,"name":"ZI_TICKER_SYMBOL__C","comment":null,"display_name":"zi_ticker_symbol__c"},"ZI_TOTAL_FUNDING__C":{"type":"TEXT","index":554,"name":"ZI_TOTAL_FUNDING__C","comment":null,"display_name":"zi_total_funding__c"},"ZI_ULTIMATE_PARENT_COMPANY_NAME__C":{"type":"TEXT","index":555,"name":"ZI_ULTIMATE_PARENT_COMPANY_NAME__C","comment":null,"display_name":"zi_ultimate_parent_company_name__c"},"ZI_ULTIMATE_PARENT_COMPANY_ZOOMINFO_ID__C":{"type":"TEXT","index":556,"name":"ZI_ULTIMATE_PARENT_COMPANY_ZOOMINFO_ID__C","comment":null,"display_name":"zi_ultimate_parent_company_zoominfo_id__c"},"ZI_WEBSITE__C":{"type":"TEXT","index":557,"name":"ZI_WEBSITE__C","comment":null,"display_name":"zi_website__c"},"ZI_ZIP_POSTAL_CODE__C":{"type":"TEXT","index":558,"name":"ZI_ZIP_POSTAL_CODE__C","comment":null,"display_name":"zi_zip_postal_code__c"},"_SDC_BATCHED_AT":{"type":"TIMESTAMP_TZ","index":559,"name":"_SDC_BATCHED_AT","comment":null,"display_name":"_sdc_batched_at"},"_SDC_EXTRACTED_AT":{"type":"TIMESTAMP_TZ","index":560,"name":"_SDC_EXTRACTED_AT","comment":null,"display_name":"_sdc_extracted_at"},"_SDC_RECEIVED_AT":{"type":"TIMESTAMP_TZ","index":561,"name":"_SDC_RECEIVED_AT","comment":null,"display_name":"_sdc_received_at"},"_SDC_SEQUENCE":{"type":"NUMBER","index":562,"name":"_SDC_SEQUENCE","comment":null,"display_name":"_sdc_sequence"},"_SDC_TABLE_VERSION":{"type":"NUMBER","index":563,"name":"_SDC_TABLE_VERSION","comment":null,"display_name":"_sdc_table_version"},"ENGAGIO__QUALIFICATION_SCORE__C":{"type":"FLOAT","index":564,"name":"ENGAGIO__QUALIFICATION_SCORE__C","comment":null,"display_name":"engagio__qualification_score__c"},"ENGAGIO__PIPELINE_PREDICT_SCORE__C":{"type":"FLOAT","index":565,"name":"ENGAGIO__PIPELINE_PREDICT_SCORE__C","comment":null,"display_name":"engagio__pipeline_predict_score__c"},"ENGAGIO__MQADATE__C":{"type":"TIMESTAMP_TZ","index":566,"name":"ENGAGIO__MQADATE__C","comment":null,"display_name":"engagio__mqadate__c"},"ENGAGIO__WEBVISITSLAST3MONTHS__C":{"type":"FLOAT","index":567,"name":"ENGAGIO__WEBVISITSLAST3MONTHS__C","comment":null,"display_name":"engagio__webvisitslast3months__c"},"ENGAGIO__TOPURLS__C":{"type":"TEXT","index":568,"name":"ENGAGIO__TOPURLS__C","comment":null,"display_name":"engagio__topurls__c"},"ENGAGIO__INTENTMINUTESLAST30DAYS__C":{"type":"FLOAT","index":569,"name":"ENGAGIO__INTENTMINUTESLAST30DAYS__C","comment":null,"display_name":"engagio__intentminuteslast30days__c"},"ALLIANCES_DISCOUNT__C":{"type":"FLOAT","index":570,"name":"ALLIANCES_DISCOUNT__C","comment":null,"display_name":"alliances_discount__c"},"LAST_SALE_VIA_PARTNER__C":{"type":"BOOLEAN","index":571,"name":"LAST_SALE_VIA_PARTNER__C","comment":null,"display_name":"last_sale_via_partner__c"},"FY22_ON_BRONZE_STARTER__C":{"type":"BOOLEAN","index":572,"name":"FY22_ON_BRONZE_STARTER__C","comment":null,"display_name":"fy22_on_bronze_starter__c"},"HOLD_OVER_NEXT_APPROVED_OWNER__C":{"type":"TEXT","index":573,"name":"HOLD_OVER_NEXT_APPROVED_OWNER__C","comment":null,"display_name":"hold_over_next_approved_owner__c"},"JIHU_ACCOUNT__C":{"type":"BOOLEAN","index":574,"name":"JIHU_ACCOUNT__C","comment":null,"display_name":"jihu_account__c"},"FY22_NEW_LOGO_TARGET_LIST__C":{"type":"BOOLEAN","index":575,"name":"FY22_NEW_LOGO_TARGET_LIST__C","comment":null,"display_name":"fy22_new_logo_target_list__c"},"EOA_SENTIMENT__C":{"type":"TEXT","index":576,"name":"EOA_SENTIMENT__C","comment":null,"display_name":"eoa_sentiment__c"},"CI_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":577,"name":"CI_CONTRACT_END_DATE__C","comment":null,"display_name":"ci_contract_end_date__c"},"CD_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":578,"name":"CD_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"cd_appetite_for_replacement__c"},"GITOPS_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":579,"name":"GITOPS_CONTRACT_END_DATE__C","comment":null,"display_name":"gitops_contract_end_date__c"},"CD_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":580,"name":"CD_CONTRACT_END_DATE__C","comment":null,"display_name":"cd_contract_end_date__c"},"AGILE_MGMT_APPETITIE_FOR_REPLACMENT__C":{"type":"TEXT","index":581,"name":"AGILE_MGMT_APPETITIE_FOR_REPLACMENT__C","comment":null,"display_name":"agile_mgmt_appetitie_for_replacment__c"},"AGILE_MANAGEMENT_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":582,"name":"AGILE_MANAGEMENT_CONTRACT_END_DATE__C","comment":null,"display_name":"agile_management_contract_end_date__c"},"GITOPS_TECH__C":{"type":"TEXT","index":583,"name":"GITOPS_TECH__C","comment":null,"display_name":"gitops_tech__c"},"GITOPS_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":584,"name":"GITOPS_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"gitops_appetite_for_replacement__c"},"AGILE_MANAGEMENT_TECH__C":{"type":"TEXT","index":585,"name":"AGILE_MANAGEMENT_TECH__C","comment":null,"display_name":"agile_management_tech__c"},"CD_TECH__C":{"type":"TEXT","index":586,"name":"CD_TECH__C","comment":null,"display_name":"cd_tech__c"},"DEVOPS_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":587,"name":"DEVOPS_CONTRACT_END_DATE__C","comment":null,"display_name":"devops_contract_end_date__c"},"DEVOPS_TECH__C":{"type":"TEXT","index":588,"name":"DEVOPS_TECH__C","comment":null,"display_name":"devops_tech__c"},"CI_TECH__C":{"type":"TEXT","index":589,"name":"CI_TECH__C","comment":null,"display_name":"ci_tech__c"},"DEVOPS_PLATFORM_APPETITE_REPLACEMENT__C":{"type":"TEXT","index":590,"name":"DEVOPS_PLATFORM_APPETITE_REPLACEMENT__C","comment":null,"display_name":"devops_platform_appetite_replacement__c"},"CI_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":591,"name":"CI_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"ci_appetite_for_replacement__c"},"CLOUD_NATIVE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":592,"name":"CLOUD_NATIVE_CONTRACT_END_DATE__C","comment":null,"display_name":"cloud_native_contract_end_date__c"},"DEVSECOPS_TECH__C":{"type":"TEXT","index":593,"name":"DEVSECOPS_TECH__C","comment":null,"display_name":"devsecops_tech__c"},"DEVSECOPS_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":594,"name":"DEVSECOPS_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"devsecops_appetite_for_replacement__c"},"CLOUD_NATIVE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":595,"name":"CLOUD_NATIVE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"cloud_native_appetite_for_replacement__c"},"CLOUD_NATIVE_TECH__C":{"type":"TEXT","index":596,"name":"CLOUD_NATIVE_TECH__C","comment":null,"display_name":"cloud_native_tech__c"},"LAST_PHD_REVIEW__C":{"type":"TIMESTAMP_TZ","index":597,"name":"LAST_PHD_REVIEW__C","comment":null,"display_name":"last_phd_review__c"},"LAST_TSP_UPDATE_REASON__C":{"type":"TEXT","index":598,"name":"LAST_TSP_UPDATE_REASON__C","comment":null,"display_name":"last_tsp_update_reason__c"},"COMMUNITY_PROGRAM_OWNER__C":{"type":"TEXT","index":599,"name":"COMMUNITY_PROGRAM_OWNER__C","comment":null,"display_name":"community_program_owner__c"},"TEMP_WEBSTORE_RENEWAL_ISSUE_STATUS__C":{"type":"TEXT","index":600,"name":"TEMP_WEBSTORE_RENEWAL_ISSUE_STATUS__C","comment":null,"display_name":"temp_webstore_renewal_issue_status__c"},"FIRST_ORDER_OPPORTUNITY__C":{"type":"TEXT","index":601,"name":"FIRST_ORDER_OPPORTUNITY__C","comment":null,"display_name":"first_order_opportunity__c"},"SINGLE_TRAINING_COMPLETED__C":{"type":"BOOLEAN","index":602,"name":"SINGLE_TRAINING_COMPLETED__C","comment":null,"display_name":"single_training_completed__c"},"VC_C_TECH__C":{"type":"TEXT","index":603,"name":"VC_C_TECH__C","comment":null,"display_name":"vc_c_tech__c"},"VC_C_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":604,"name":"VC_C_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"vc_c_appetite_for_replacement__c"},"DEVSECOPS_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":605,"name":"DEVSECOPS_CONTRACT_END_DATE__C","comment":null,"display_name":"devsecops_contract_end_date__c"},"VC_C_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":606,"name":"VC_C_CONTRACT_END_DATE__C","comment":null,"display_name":"vc_c_contract_end_date__c"},"INVESTOR_INTRO_TOP_ACCOUNT__C":{"type":"BOOLEAN","index":607,"name":"INVESTOR_INTRO_TOP_ACCOUNT__C","comment":null,"display_name":"investor_intro_top_account__c"},"TSP_DECISION_RATIONALE__C":{"type":"TEXT","index":608,"name":"TSP_DECISION_RATIONALE__C","comment":null,"display_name":"tsp_decision_rationale__c"},"GITOPS_SALES_PLAY__C":{"type":"BOOLEAN","index":609,"name":"GITOPS_SALES_PLAY__C","comment":null,"display_name":"gitops_sales_play__c"},"ACCOUNT_OWNER_USER_SEGMENT__C":{"type":"TEXT","index":610,"name":"ACCOUNT_OWNER_USER_SEGMENT__C","comment":null,"display_name":"account_owner_user_segment__c"},"CUSTOMER_MSA__C":{"type":"TEXT","index":611,"name":"CUSTOMER_MSA__C","comment":null,"display_name":"customer_msa__c"},"FIRST_ORDER_DATE__C":{"type":"TIMESTAMP_TZ","index":612,"name":"FIRST_ORDER_DATE__C","comment":null,"display_name":"first_order_date__c"},"RECORD_TYPE_ID__C":{"type":"TEXT","index":613,"name":"RECORD_TYPE_ID__C","comment":null,"display_name":"record_type_id__c"},"LINKEDIN_SI__COMPANY_PROFILE__C":{"type":"TEXT","index":614,"name":"LINKEDIN_SI__COMPANY_PROFILE__C","comment":null,"display_name":"linkedin_si__company_profile__c"},"DECISION_MAKER_COUNT_LINKEDIN__C":{"type":"FLOAT","index":615,"name":"DECISION_MAKER_COUNT_LINKEDIN__C","comment":null,"display_name":"decision_maker_count_linkedin__c"},"ORDER_TYPE_2_3_OPPS__C":{"type":"FLOAT","index":616,"name":"ORDER_TYPE_2_3_OPPS__C","comment":null,"display_name":"order_type_2_3_opps__c"},"ACCT_QUARTERLY_REVIEW_COMMENTS__C":{"type":"TEXT","index":617,"name":"ACCT_QUARTERLY_REVIEW_COMMENTS__C","comment":null,"display_name":"acct_quarterly_review_comments__c"},"ZI_SUB_INDUSTRY__C":{"type":"TEXT","index":618,"name":"ZI_SUB_INDUSTRY__C","comment":null,"display_name":"zi_sub_industry__c"},"IMPARTNER_SYNC__C":{"type":"BOOLEAN","index":619,"name":"IMPARTNER_SYNC__C","comment":null,"display_name":"impartner_sync__c"},"AGGREGATE_DEVELOPER_COUNT__C":{"type":"FLOAT","index":620,"name":"AGGREGATE_DEVELOPER_COUNT__C","comment":null,"display_name":"aggregate_developer_count__c"},"ZI_FORTUNE_RANKING__C":{"type":"TEXT","index":621,"name":"ZI_FORTUNE_RANKING__C","comment":null,"display_name":"zi_fortune_ranking__c"},"VARTOPIADRS__PARTNER_PROSPECT_ADMIN__C":{"type":"TEXT","index":622,"name":"VARTOPIADRS__PARTNER_PROSPECT_ADMIN__C","comment":null,"display_name":"vartopiadrs__partner_prospect_admin__c"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT__C":{"type":"TEXT","index":623,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT__C","comment":null,"display_name":"account_demographics_sales_segment__c"},"ACCOUNT_DEMOGRAPHICS_HQ_STREET__C":{"type":"TEXT","index":624,"name":"ACCOUNT_DEMOGRAPHICS_HQ_STREET__C","comment":null,"display_name":"account_demographics_hq_street__c"},"ACCOUNT_DEMOGRAPHIC_MAX_FAMILY_EMPLOYEES__C":{"type":"FLOAT","index":625,"name":"ACCOUNT_DEMOGRAPHIC_MAX_FAMILY_EMPLOYEES__C","comment":null,"display_name":"account_demographic_max_family_employees__c"},"ACCOUNT_DEMOGRAPHICS_HQ_STATE__C":{"type":"TEXT","index":626,"name":"ACCOUNT_DEMOGRAPHICS_HQ_STATE__C","comment":null,"display_name":"account_demographics_hq_state__c"},"ACCOUNT_DEMOGRAPHICS_HQ_POSTAL_CODE__C":{"type":"TEXT","index":627,"name":"ACCOUNT_DEMOGRAPHICS_HQ_POSTAL_CODE__C","comment":null,"display_name":"account_demographics_hq_postal_code__c"},"ACCOUNT_DEMOGRAPHICS_HQ_CITY__C":{"type":"TEXT","index":628,"name":"ACCOUNT_DEMOGRAPHICS_HQ_CITY__C","comment":null,"display_name":"account_demographics_hq_city__c"},"ACCOUNT_DEMOGRAPHICS_HQ_COUNTRY__C":{"type":"TEXT","index":629,"name":"ACCOUNT_DEMOGRAPHICS_HQ_COUNTRY__C","comment":null,"display_name":"account_demographics_hq_country__c"},"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT__C":{"type":"FLOAT","index":630,"name":"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT__C","comment":null,"display_name":"account_demographics_employee_count__c"},"ACCOUNT_DEMOGRAPHICS_GEO__C":{"type":"TEXT","index":631,"name":"ACCOUNT_DEMOGRAPHICS_GEO__C","comment":null,"display_name":"account_demographics_geo__c"},"ACCOUNT_DEMOGRAPHICS_REGION__C":{"type":"TEXT","index":632,"name":"ACCOUNT_DEMOGRAPHICS_REGION__C","comment":null,"display_name":"account_demographics_region__c"},"ACCOUNT_DEMOGRAPHICS_AREA__C":{"type":"TEXT","index":633,"name":"ACCOUNT_DEMOGRAPHICS_AREA__C","comment":null,"display_name":"account_demographics_area__c"},"ACCOUNT_DEMOGRAPHICS_TERRITORY__C":{"type":"TEXT","index":634,"name":"ACCOUNT_DEMOGRAPHICS_TERRITORY__C","comment":null,"display_name":"account_demographics_territory__c"},"ACCOUNT_DEMOGRAPHICS_UPA_CITY__C":{"type":"TEXT","index":635,"name":"ACCOUNT_DEMOGRAPHICS_UPA_CITY__C","comment":null,"display_name":"account_demographics_upa_city__c"},"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE__C":{"type":"TEXT","index":636,"name":"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE__C","comment":null,"display_name":"account_demographics_upa_postal_code__c"},"ACCOUNT_DEMOGRAPHICS_UPA_STREET__C":{"type":"TEXT","index":637,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STREET__C","comment":null,"display_name":"account_demographics_upa_street__c"},"ACCOUNT_DEMOGRAPHICS_UPA_STATE__C":{"type":"TEXT","index":638,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STATE__C","comment":null,"display_name":"account_demographics_upa_state__c"},"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY__C":{"type":"TEXT","index":639,"name":"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY__C","comment":null,"display_name":"account_demographics_upa_country__c"},"BILLINGGEOCODEACCURACY":{"type":"TEXT","index":640,"name":"BILLINGGEOCODEACCURACY","comment":null,"display_name":"billinggeocodeaccuracy"},"GS_HEALTH_CD__C":{"type":"TEXT","index":641,"name":"GS_HEALTH_CD__C","comment":null,"display_name":"gs_health_cd__c"},"GS_HEALTH_LICENSE_UTILIZATION__C":{"type":"TEXT","index":642,"name":"GS_HEALTH_LICENSE_UTILIZATION__C","comment":null,"display_name":"gs_health_license_utilization__c"},"GS_HEALTH_OVERALL_PRODUCT_USAGE__C":{"type":"TEXT","index":643,"name":"GS_HEALTH_OVERALL_PRODUCT_USAGE__C","comment":null,"display_name":"gs_health_overall_product_usage__c"},"GS_HEALTH_DEVSECOPS__C":{"type":"TEXT","index":644,"name":"GS_HEALTH_DEVSECOPS__C","comment":null,"display_name":"gs_health_devsecops__c"},"GS_HEALTH_CI__C":{"type":"TEXT","index":645,"name":"GS_HEALTH_CI__C","comment":null,"display_name":"gs_health_ci__c"},"GS_HEALTH_SCM__C":{"type":"TEXT","index":646,"name":"GS_HEALTH_SCM__C","comment":null,"display_name":"gs_health_scm__c"},"PROPOSED_ACCOUNT_OWNER__C":{"type":"TEXT","index":647,"name":"PROPOSED_ACCOUNT_OWNER__C","comment":null,"display_name":"proposed_account_owner__c"},"PROPOSED_ISR__C":{"type":"TEXT","index":648,"name":"PROPOSED_ISR__C","comment":null,"display_name":"proposed_isr__c"},"INDUSTRY_OVERRIDE__C":{"type":"TEXT","index":649,"name":"INDUSTRY_OVERRIDE__C","comment":null,"display_name":"industry_override__c"},"SUB_INDUSTRY_OVERRIDE__C":{"type":"TEXT","index":650,"name":"SUB_INDUSTRY_OVERRIDE__C","comment":null,"display_name":"sub_industry_override__c"},"GS_FIRST_VALUE_DATE__C":{"type":"TIMESTAMP_TZ","index":651,"name":"GS_FIRST_VALUE_DATE__C","comment":null,"display_name":"gs_first_value_date__c"},"LATEST_OPEN_RENEWAL_CLOSE_DATE__C":{"type":"TIMESTAMP_TZ","index":652,"name":"LATEST_OPEN_RENEWAL_CLOSE_DATE__C","comment":null,"display_name":"latest_open_renewal_close_date__c"},"ATR_FY23_PLANNING__C":{"type":"TEXT","index":653,"name":"ATR_FY23_PLANNING__C","comment":null,"display_name":"atr_fy23_planning__c"},"EXCLUDE_FROM_ZOOMINFO_ENRICH__C":{"type":"BOOLEAN","index":654,"name":"EXCLUDE_FROM_ZOOMINFO_ENRICH__C","comment":null,"display_name":"exclude_from_zoominfo_enrich__c"},"CUSTOMER_SCORE__C":{"type":"FLOAT","index":655,"name":"CUSTOMER_SCORE__C","comment":null,"display_name":"customer_score__c"},"FIRST_ORDER_AVAILABLE_OT2_3__C":{"type":"BOOLEAN","index":656,"name":"FIRST_ORDER_AVAILABLE_OT2_3__C","comment":null,"display_name":"first_order_available_ot2_3__c"},"PREVALENT_TIER_HIERARCHY__C":{"type":"TEXT","index":657,"name":"PREVALENT_TIER_HIERARCHY__C","comment":null,"display_name":"prevalent_tier_hierarchy__c"},"FIRST_ORDER_OPPORTUNITY_OT2_3__C":{"type":"TEXT","index":658,"name":"FIRST_ORDER_OPPORTUNITY_OT2_3__C","comment":null,"display_name":"first_order_opportunity_ot2_3__c"},"ESTIMATED_DEVELOPER_COUNT__C":{"type":"FLOAT","index":659,"name":"ESTIMATED_DEVELOPER_COUNT__C","comment":null,"display_name":"estimated_developer_count__c"},"LAM_DEV_COUNT__C":{"type":"FLOAT","index":660,"name":"LAM_DEV_COUNT__C","comment":null,"display_name":"lam_dev_count__c"},"GS_LAST_TAM_ACTIVITY_DATE__C":{"type":"TIMESTAMP_TZ","index":661,"name":"GS_LAST_TAM_ACTIVITY_DATE__C","comment":null,"display_name":"gs_last_tam_activity_date__c"},"PUBLIC_SECTOR_ACCOUNT__C":{"type":"BOOLEAN","index":662,"name":"PUBLIC_SECTOR_ACCOUNT__C","comment":null,"display_name":"public_sector_account__c"},"KEY_ACCOUNT__C":{"type":"BOOLEAN","index":663,"name":"KEY_ACCOUNT__C","comment":null,"display_name":"key_account__c"},"LAM__C":{"type":"FLOAT","index":664,"name":"LAM__C","comment":null,"display_name":"lam__c"},"SALES_TERRITORY__C":{"type":"TEXT","index":665,"name":"SALES_TERRITORY__C","comment":null,"display_name":"sales_territory__c"},"PARENT_LAM_INDUSTRY_ACCT_HEIRARCHY__C":{"type":"TEXT","index":666,"name":"PARENT_LAM_INDUSTRY_ACCT_HEIRARCHY__C","comment":null,"display_name":"parent_lam_industry_acct_heirarchy__c"},"ACCOUNT_DEMOGRAPHICS_LAST_UPDATED_DATE__C":{"type":"TIMESTAMP_TZ","index":667,"name":"ACCOUNT_DEMOGRAPHICS_LAST_UPDATED_DATE__C","comment":null,"display_name":"account_demographics_last_updated_date__c"},"BDR_ACCOUNT_STRATEGY__C":{"type":"TEXT","index":668,"name":"BDR_ACCOUNT_STRATEGY__C","comment":null,"display_name":"bdr_account_strategy__c"},"ACTIVELY_WORKING_START_DATE__C":{"type":"TIMESTAMP_TZ","index":669,"name":"ACTIVELY_WORKING_START_DATE__C","comment":null,"display_name":"actively_working_start_date__c"},"BDR_ACCOUNT_RESEARCH__C":{"type":"TEXT","index":670,"name":"BDR_ACCOUNT_RESEARCH__C","comment":null,"display_name":"bdr_account_research__c"},"BDR_PROSPECTING_STATUS__C":{"type":"TEXT","index":671,"name":"BDR_PROSPECTING_STATUS__C","comment":null,"display_name":"bdr_prospecting_status__c"},"PREMIUM_LICENSE_COUNT__C":{"type":"FLOAT","index":672,"name":"PREMIUM_LICENSE_COUNT__C","comment":null,"display_name":"premium_license_count__c"},"LAM_COUNT_OF_STARTER_SUBSCRIPTIONS__C":{"type":"FLOAT","index":673,"name":"LAM_COUNT_OF_STARTER_SUBSCRIPTIONS__C","comment":null,"display_name":"lam_count_of_starter_subscriptions__c"},"PARENT_LAM_MAX_ZI_NUMBER_OF_DEVELOPERS__C":{"type":"FLOAT","index":674,"name":"PARENT_LAM_MAX_ZI_NUMBER_OF_DEVELOPERS__C","comment":null,"display_name":"parent_lam_max_zi_number_of_developers__c"},"PREVALENT_TIER__C":{"type":"TEXT","index":675,"name":"PREVALENT_TIER__C","comment":null,"display_name":"prevalent_tier__c"},"LAM_COUNT_OF_PREMIUM_SUBS_ACCT_FAMILY__C":{"type":"FLOAT","index":676,"name":"LAM_COUNT_OF_PREMIUM_SUBS_ACCT_FAMILY__C","comment":null,"display_name":"lam_count_of_premium_subs_acct_family__c"},"LAM_STARTER_ANNUALIZED_SEAT_PRICE__C":{"type":"FLOAT","index":677,"name":"LAM_STARTER_ANNUALIZED_SEAT_PRICE__C","comment":null,"display_name":"lam_starter_annualized_seat_price__c"},"BDR_NEXT_STEP_DATE__C":{"type":"TIMESTAMP_TZ","index":678,"name":"BDR_NEXT_STEP_DATE__C","comment":null,"display_name":"bdr_next_step_date__c"},"LAM_COUNT_OF_STARTER_SUBS_ACCT_FAMILY__C":{"type":"FLOAT","index":679,"name":"LAM_COUNT_OF_STARTER_SUBS_ACCT_FAMILY__C","comment":null,"display_name":"lam_count_of_starter_subs_acct_family__c"},"STARTER_LICENSE_COUNT__C":{"type":"FLOAT","index":680,"name":"STARTER_LICENSE_COUNT__C","comment":null,"display_name":"starter_license_count__c"},"LAM_ULTIMATE_ANNUALIZED_SEAT_PRICE__C":{"type":"FLOAT","index":681,"name":"LAM_ULTIMATE_ANNUALIZED_SEAT_PRICE__C","comment":null,"display_name":"lam_ultimate_annualized_seat_price__c"},"LAM_COUNT_OF_ULTIMATE_SUBSCRIPTIONS__C":{"type":"FLOAT","index":682,"name":"LAM_COUNT_OF_ULTIMATE_SUBSCRIPTIONS__C","comment":null,"display_name":"lam_count_of_ultimate_subscriptions__c"},"PARENT_LAM_SUM_OF_NUM_OF_LICENSES__C":{"type":"FLOAT","index":683,"name":"PARENT_LAM_SUM_OF_NUM_OF_LICENSES__C","comment":null,"display_name":"parent_lam_sum_of_num_of_licenses__c"},"LAM_PREVALENT_TIER_AVG_PRICE_ACCT_FAM__C":{"type":"FLOAT","index":684,"name":"LAM_PREVALENT_TIER_AVG_PRICE_ACCT_FAM__C","comment":null,"display_name":"lam_prevalent_tier_avg_price_acct_fam__c"},"LAM_PREMIUM_ANNUALIZED_SEAT_PRICE__C":{"type":"FLOAT","index":685,"name":"LAM_PREMIUM_ANNUALIZED_SEAT_PRICE__C","comment":null,"display_name":"lam_premium_annualized_seat_price__c"},"PARENT_LAM_MAX_DECISION_MAKERS_LINKEDIN__C":{"type":"FLOAT","index":686,"name":"PARENT_LAM_MAX_DECISION_MAKERS_LINKEDIN__C","comment":null,"display_name":"parent_lam_max_decision_makers_linkedin__c"},"PARENT_LAM_MAX_POTENTIAL_USERS__C":{"type":"FLOAT","index":687,"name":"PARENT_LAM_MAX_POTENTIAL_USERS__C","comment":null,"display_name":"parent_lam_max_potential_users__c"},"ULTIMATE_LICENSE_COUNT__C":{"type":"FLOAT","index":688,"name":"ULTIMATE_LICENSE_COUNT__C","comment":null,"display_name":"ultimate_license_count__c"},"LAM_COUNT_OF_ULTIMATE_SUBS_ACCT_FAMILY__C":{"type":"FLOAT","index":689,"name":"LAM_COUNT_OF_ULTIMATE_SUBS_ACCT_FAMILY__C","comment":null,"display_name":"lam_count_of_ultimate_subs_acct_family__c"},"LAM_COUNT_OF_PREMIUM_SUBSCRIPTIONS__C":{"type":"FLOAT","index":690,"name":"LAM_COUNT_OF_PREMIUM_SUBSCRIPTIONS__C","comment":null,"display_name":"lam_count_of_premium_subscriptions__c"},"BDR_NEXT_STEPS__C":{"type":"TEXT","index":691,"name":"BDR_NEXT_STEPS__C","comment":null,"display_name":"bdr_next_steps__c"},"LEANDATA_LAST_UPDATE__C":{"type":"TIMESTAMP_TZ","index":692,"name":"LEANDATA_LAST_UPDATE__C","comment":null,"display_name":"leandata_last_update__c"},"REFERENCE_NOTES__C":{"type":"TEXT","index":693,"name":"REFERENCE_NOTES__C","comment":null,"display_name":"reference_notes__c"},"GS_TOTAL_NUMBER_OF_SUCCESS_PLANS__C":{"type":"FLOAT","index":694,"name":"GS_TOTAL_NUMBER_OF_SUCCESS_PLANS__C","comment":null,"display_name":"gs_total_number_of_success_plans__c"},"GS_TOTAL_NUMBER_OF_ACCOUNT_PLANS__C":{"type":"FLOAT","index":695,"name":"GS_TOTAL_NUMBER_OF_ACCOUNT_PLANS__C","comment":null,"display_name":"gs_total_number_of_account_plans__c"},"GSI_ACCOUNT__C":{"type":"BOOLEAN","index":696,"name":"GSI_ACCOUNT__C","comment":null,"display_name":"gsi_account__c"},"CARR_ACCT_FAMILY__C":{"type":"FLOAT","index":697,"name":"CARR_ACCT_FAMILY__C","comment":null,"display_name":"carr_acct_family__c"},"ACCOUNT_TRANSITION_ELIGIBLE__C":{"type":"BOOLEAN","index":698,"name":"ACCOUNT_TRANSITION_ELIGIBLE__C","comment":null,"display_name":"account_transition_eligible__c"},"SALES_SEGMENT_STAMP__C":{"type":"TEXT","index":699,"name":"SALES_SEGMENT_STAMP__C","comment":null,"display_name":"sales_segment_stamp__c"},"LEANDATA_REFRESH_DATE__C":{"type":"TIMESTAMP_TZ","index":700,"name":"LEANDATA_REFRESH_DATE__C","comment":null,"display_name":"leandata_refresh_date__c"},"RESTRICTED_ACCOUNT__C":{"type":"TEXT","index":701,"name":"RESTRICTED_ACCOUNT__C","comment":null,"display_name":"restricted_account__c"},"PUBSEC_TYPE__C":{"type":"TEXT","index":702,"name":"PUBSEC_TYPE__C","comment":null,"display_name":"pubsec_type__c"},"COUNT_OF_GITLAB_ADMINS__C":{"type":"FLOAT","index":703,"name":"COUNT_OF_GITLAB_ADMINS__C","comment":null,"display_name":"count_of_gitlab_admins__c"},"LAST_UPDATED_DATE_USAGE_DATA__C":{"type":"TIMESTAMP_TZ","index":704,"name":"LAST_UPDATED_DATE_USAGE_DATA__C","comment":null,"display_name":"last_updated_date_usage_data__c"},"ACCOUNT_COUNT__C":{"type":"FLOAT","index":705,"name":"ACCOUNT_COUNT__C","comment":null,"display_name":"account_count__c"},"CI_BUILDS_COUNT_ALL_TIME__C":{"type":"FLOAT","index":706,"name":"CI_BUILDS_COUNT_ALL_TIME__C","comment":null,"display_name":"ci_builds_count_all_time__c"},"ACTIVITY_LEVEL__C":{"type":"TEXT","index":707,"name":"ACTIVITY_LEVEL__C","comment":null,"display_name":"activity_level__c"},"GIT_OPERATION_USERS__C":{"type":"FLOAT","index":708,"name":"GIT_OPERATION_USERS__C","comment":null,"display_name":"git_operation_users__c"},"NUMBER_OF_ACTIVE_NAMESPACE__C":{"type":"FLOAT","index":709,"name":"NUMBER_OF_ACTIVE_NAMESPACE__C","comment":null,"display_name":"number_of_active_namespace__c"},"TOTAL_BILLABLE_USERS__C":{"type":"FLOAT","index":710,"name":"TOTAL_BILLABLE_USERS__C","comment":null,"display_name":"total_billable_users__c"},"HAS_TRIAL_EXPERIENCE__C":{"type":"TEXT","index":711,"name":"HAS_TRIAL_EXPERIENCE__C","comment":null,"display_name":"has_trial_experience__c"},"SECURE_SCANNERS_USERS__C":{"type":"FLOAT","index":712,"name":"SECURE_SCANNERS_USERS__C","comment":null,"display_name":"secure_scanners_users__c"},"CI_PIPELINE_USERS__C":{"type":"FLOAT","index":713,"name":"CI_PIPELINE_USERS__C","comment":null,"display_name":"ci_pipeline_users__c"},"LIST_OF_SHARED_ACCOUNTS__C":{"type":"TEXT","index":714,"name":"LIST_OF_SHARED_ACCOUNTS__C","comment":null,"display_name":"list_of_shared_accounts__c"},"MERGE_REQUESTS_USERS__C":{"type":"FLOAT","index":715,"name":"MERGE_REQUESTS_USERS__C","comment":null,"display_name":"merge_requests_users__c"},"DEPLOYMENTS_USERS__C":{"type":"FLOAT","index":716,"name":"DEPLOYMENTS_USERS__C","comment":null,"display_name":"deployments_users__c"},"LIST_OF_NAMESPACES__C":{"type":"TEXT","index":717,"name":"LIST_OF_NAMESPACES__C","comment":null,"display_name":"list_of_namespaces__c"},"NUMBER_OF_ACTIVE_USERS_IN_COMPANY__C":{"type":"FLOAT","index":718,"name":"NUMBER_OF_ACTIVE_USERS_IN_COMPANY__C","comment":null,"display_name":"number_of_active_users_in_company__c"},"NUMBER_OF_ACTIVE_STAGES_IN_COMPANY__C":{"type":"FLOAT","index":719,"name":"NUMBER_OF_ACTIVE_STAGES_IN_COMPANY__C","comment":null,"display_name":"number_of_active_stages_in_company__c"},"VARTOPIADRS__FIELDS_UPDATED_ON__C":{"type":"TIMESTAMP_TZ","index":720,"name":"VARTOPIADRS__FIELDS_UPDATED_ON__C","comment":null,"display_name":"vartopiadrs__fields_updated_on__c"},"DOZISF__ZOOMINFO_ENRICH_STATUS__C":{"type":"TEXT","index":721,"name":"DOZISF__ZOOMINFO_ENRICH_STATUS__C","comment":null,"display_name":"dozisf__zoominfo_enrich_status__c"},"NUM_ACTIVE_NAMESPACE_EXCEEDING_STORAGE__C":{"type":"FLOAT","index":722,"name":"NUM_ACTIVE_NAMESPACE_EXCEEDING_STORAGE__C","comment":null,"display_name":"num_active_namespace_exceeding_storage__c"},"NUMBER_OF_ACTIVE_PUBLIC_NAMESPACES__C":{"type":"FLOAT","index":723,"name":"NUMBER_OF_ACTIVE_PUBLIC_NAMESPACES__C","comment":null,"display_name":"number_of_active_public_namespaces__c"},"NUMBER_OF_ACTIVE_NAMESPACES_WITH_6_USER__C":{"type":"FLOAT","index":724,"name":"NUMBER_OF_ACTIVE_NAMESPACES_WITH_6_USER__C","comment":null,"display_name":"number_of_active_namespaces_with_6_user__c"},"PARTNER_CERTIFICATION__C":{"type":"TEXT","index":725,"name":"PARTNER_CERTIFICATION__C","comment":null,"display_name":"partner_certification__c"},"LAM_TIER__C":{"type":"FLOAT","index":726,"name":"LAM_TIER__C","comment":null,"display_name":"lam_tier__c"},"PTC_PERCENT__C":{"type":"FLOAT","index":727,"name":"PTC_PERCENT__C","comment":null,"display_name":"ptc_percent__c"},"PTE_SCORE_VALUE__C":{"type":"TEXT","index":728,"name":"PTE_SCORE_VALUE__C","comment":null,"display_name":"pte_score_value__c"},"PTC_SCORE_VALUE__C":{"type":"TEXT","index":729,"name":"PTC_SCORE_VALUE__C","comment":null,"display_name":"ptc_score_value__c"},"PTC_INSIGHTS__C":{"type":"TEXT","index":730,"name":"PTC_INSIGHTS__C","comment":null,"display_name":"ptc_insights__c"},"PTE_SCORE__C":{"type":"TEXT","index":731,"name":"PTE_SCORE__C","comment":null,"display_name":"pte_score__c"},"PTE_INSIGHTS__C":{"type":"TEXT","index":732,"name":"PTE_INSIGHTS__C","comment":null,"display_name":"pte_insights__c"},"PTC_SCORE__C":{"type":"TEXT","index":733,"name":"PTC_SCORE__C","comment":null,"display_name":"ptc_score__c"},"PTE_PERCENT__C":{"type":"FLOAT","index":734,"name":"PTE_PERCENT__C","comment":null,"display_name":"pte_percent__c"},"PERSONAL_DOMAIN__C":{"type":"BOOLEAN","index":735,"name":"PERSONAL_DOMAIN__C","comment":null,"display_name":"personal_domain__c"},"ZI_COMPANY_ATTRIBUTE_HOSPITAL__C":{"type":"TEXT","index":736,"name":"ZI_COMPANY_ATTRIBUTE_HOSPITAL__C","comment":null,"display_name":"zi_company_attribute_hospital__c"},"ZI_COMPANY_TYPE__C":{"type":"TEXT","index":737,"name":"ZI_COMPANY_TYPE__C","comment":null,"display_name":"zi_company_type__c"},"ACCOUNT_FAMILY_HIGHEST_ZSUB_END_DATE__C":{"type":"TIMESTAMP_TZ","index":738,"name":"ACCOUNT_FAMILY_HIGHEST_ZSUB_END_DATE__C","comment":null,"display_name":"account_family_highest_zsub_end_date__c"},"PTE_LIKELY_TO_UPTIER__C":{"type":"BOOLEAN","index":739,"name":"PTE_LIKELY_TO_UPTIER__C","comment":null,"display_name":"pte_likely_to_uptier__c"},"PUBSEC_TYPE_OVERRIDE__C":{"type":"TEXT","index":740,"name":"PUBSEC_TYPE_OVERRIDE__C","comment":null,"display_name":"pubsec_type_override__c"},"END_OF_AVAILABILITY_EOA__C":{"type":"TEXT","index":741,"name":"END_OF_AVAILABILITY_EOA__C","comment":null,"display_name":"end_of_availability_eoa__c"},"SCALE_TAM__C":{"type":"TEXT","index":742,"name":"SCALE_TAM__C","comment":null,"display_name":"scale_tam__c"},"SICDESC":{"type":"TEXT","index":743,"name":"SICDESC","comment":null,"display_name":"sicdesc"},"VARTOPIA_ADDRESS_STATE__C":{"type":"TEXT","index":744,"name":"VARTOPIA_ADDRESS_STATE__C","comment":null,"display_name":"vartopia_address_state__c"},"VARTOPIA_ADDRESS_COUNTRY__C":{"type":"TEXT","index":745,"name":"VARTOPIA_ADDRESS_COUNTRY__C","comment":null,"display_name":"vartopia_address_country__c"},"VARTOPIA_ADDRESS_STREET__C":{"type":"TEXT","index":746,"name":"VARTOPIA_ADDRESS_STREET__C","comment":null,"display_name":"vartopia_address_street__c"},"VARTOPIA_ADDRESS_POST_CODE__C":{"type":"TEXT","index":747,"name":"VARTOPIA_ADDRESS_POST_CODE__C","comment":null,"display_name":"vartopia_address_post_code__c"},"VARTOPIA_ADDRESS_CITY__C":{"type":"TEXT","index":748,"name":"VARTOPIA_ADDRESS_CITY__C","comment":null,"display_name":"vartopia_address_city__c"},"AUTHENTICATION__C":{"type":"TEXT","index":749,"name":"AUTHENTICATION__C","comment":null,"display_name":"authentication__c"},"CSM_CSE_INTRO__C":{"type":"BOOLEAN","index":750,"name":"CSM_CSE_INTRO__C","comment":null,"display_name":"csm_cse_intro__c"},"STAMPED_GEO__C":{"type":"TEXT","index":751,"name":"STAMPED_GEO__C","comment":null,"display_name":"stamped_geo__c"},"STAMPED_TERRITORY__C":{"type":"TEXT","index":752,"name":"STAMPED_TERRITORY__C","comment":null,"display_name":"stamped_territory__c"},"STAMPED_SEGMENT__C":{"type":"TEXT","index":753,"name":"STAMPED_SEGMENT__C","comment":null,"display_name":"stamped_segment__c"},"DEVELOPMENT_LANGUAGES__C":{"type":"TEXT","index":754,"name":"DEVELOPMENT_LANGUAGES__C","comment":null,"display_name":"development_languages__c"},"AIR_GAPPED_REQUIRED__C":{"type":"TEXT","index":755,"name":"AIR_GAPPED_REQUIRED__C","comment":null,"display_name":"air_gapped_required__c"},"SCALE_PROGRAM_OPT_OUT__C":{"type":"TEXT","index":756,"name":"SCALE_PROGRAM_OPT_OUT__C","comment":null,"display_name":"scale_program_opt_out__c"},"ATR_FY23_PLANNING__C__FL":{"type":"FLOAT","index":757,"name":"ATR_FY23_PLANNING__C__FL","comment":null,"display_name":"atr_fy23_planning__c__fl"},"GS_HEALTH_USER_ENGAGEMENT__C":{"type":"TEXT","index":758,"name":"GS_HEALTH_USER_ENGAGEMENT__C","comment":null,"display_name":"gs_health_user_engagement__c"},"DEPRECATE_BDR_ACCOUNT_STRATEGY__C":{"type":"TEXT","index":759,"name":"DEPRECATE_BDR_ACCOUNT_STRATEGY__C","comment":null,"display_name":"deprecate_bdr_account_strategy__c"},"MAJOR_ACCOUNT__C":{"type":"BOOLEAN","index":760,"name":"MAJOR_ACCOUNT__C","comment":null,"display_name":"major_account__c"},"NEXT_FY_NAMED_ACCOUNT__C":{"type":"BOOLEAN","index":761,"name":"NEXT_FY_NAMED_ACCOUNT__C","comment":null,"display_name":"next_fy_named_account__c"},"STAMPED_AREA__C":{"type":"TEXT","index":762,"name":"STAMPED_AREA__C","comment":null,"display_name":"stamped_area__c"},"STAMPED_REGION__C":{"type":"TEXT","index":763,"name":"STAMPED_REGION__C","comment":null,"display_name":"stamped_region__c"},"PROPOSED_ACCOUNT_FIELD_MARKETING_MANAGER__C":{"type":"TEXT","index":764,"name":"PROPOSED_ACCOUNT_FIELD_MARKETING_MANAGER__C","comment":null,"display_name":"proposed_account_field_marketing_manager__c"},"PTC_LIKELY_TO_DOWNTIER__C":{"type":"BOOLEAN","index":765,"name":"PTC_LIKELY_TO_DOWNTIER__C","comment":null,"display_name":"ptc_likely_to_downtier__c"},"ABM_MANAGER__C":{"type":"TEXT","index":766,"name":"ABM_MANAGER__C","comment":null,"display_name":"abm_manager__c"},"PTE_LAST_UPDATED_DATE__C":{"type":"TIMESTAMP_TZ","index":767,"name":"PTE_LAST_UPDATED_DATE__C","comment":null,"display_name":"pte_last_updated_date__c"},"PTC_LAST_UPDATED_DATE__C":{"type":"TIMESTAMP_TZ","index":768,"name":"PTC_LAST_UPDATED_DATE__C","comment":null,"display_name":"ptc_last_updated_date__c"},"STAMPED_BUSINESS_UNIT__C":{"type":"TEXT","index":769,"name":"STAMPED_BUSINESS_UNIT__C","comment":null,"display_name":"stamped_business_unit__c"},"ACCOUNT_DEMOGRAPHICS_ROLE_TYPE__C":{"type":"TEXT","index":770,"name":"ACCOUNT_DEMOGRAPHICS_ROLE_TYPE__C","comment":null,"display_name":"account_demographics_role_type__c"},"ACCOUNT_DEMOGRAPHICS_BUSINESS_UNIT__C":{"type":"TEXT","index":771,"name":"ACCOUNT_DEMOGRAPHICS_BUSINESS_UNIT__C","comment":null,"display_name":"account_demographics_business_unit__c"},"STAMPED_ACCOUNT_DEMO_SEGMENT__C":{"type":"TEXT","index":772,"name":"STAMPED_ACCOUNT_DEMO_SEGMENT__C","comment":null,"display_name":"stamped_account_demo_segment__c"},"ACCOUNT_BDR_ASSIGNED_USER_ROLE__C":{"type":"TEXT","index":773,"name":"ACCOUNT_BDR_ASSIGNED_USER_ROLE__C","comment":null,"display_name":"account_bdr_assigned_user_role__c"},"FOCUS_PARTNER__C":{"type":"BOOLEAN","index":774,"name":"FOCUS_PARTNER__C","comment":null,"display_name":"focus_partner__c"},"STAMPED_CARR__C":{"type":"FLOAT","index":775,"name":"STAMPED_CARR__C","comment":null,"display_name":"stamped_carr__c"},"RISK_IMPACT__C":{"type":"TEXT","index":776,"name":"RISK_IMPACT__C","comment":null,"display_name":"risk_impact__c"},"RISK_REASON__C":{"type":"TEXT","index":777,"name":"RISK_REASON__C","comment":null,"display_name":"risk_reason__c"},"LAST_TIMELINE_AT_RISK_UPDATE__C":{"type":"TIMESTAMP_TZ","index":778,"name":"LAST_TIMELINE_AT_RISK_UPDATE__C","comment":null,"display_name":"last_timeline_at_risk_update__c"},"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS_PERCENTAGE__C":{"type":"FLOAT","index":779,"name":"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__closed_lost_registrations_percentage__c"},"VARTOPIADRS__NUMBER_OF_REGISTRATIONS_APPROVED_STATUS__C":{"type":"FLOAT","index":780,"name":"VARTOPIADRS__NUMBER_OF_REGISTRATIONS_APPROVED_STATUS__C","comment":null,"display_name":"vartopiadrs__number_of_registrations_approved_status__c"},"VARTOPIADRS__APPROVED_REGISTRATION_PERCENTAGE__C":{"type":"FLOAT","index":781,"name":"VARTOPIADRS__APPROVED_REGISTRATION_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__approved_registration_percentage__c"},"VARTOPIADRS__DENIED_REGISTRATIONS_PECENTAGE__C":{"type":"FLOAT","index":782,"name":"VARTOPIADRS__DENIED_REGISTRATIONS_PECENTAGE__C","comment":null,"display_name":"vartopiadrs__denied_registrations_pecentage__c"},"VARTOPIADRS__EXPIRED_REGISTRATIONS_PERCENTAGE__C":{"type":"FLOAT","index":783,"name":"VARTOPIADRS__EXPIRED_REGISTRATIONS_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__expired_registrations_percentage__c"},"VARTOPIADRS__CLOSED_WON_REGISTRATIONS_PERCENTAGE__C":{"type":"FLOAT","index":784,"name":"VARTOPIADRS__CLOSED_WON_REGISTRATIONS_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__closed_won_registrations_percentage__c"},"ACCOUNT_DEMOGRAPHICS_STAMP_DATE__C":{"type":"TIMESTAMP_TZ","index":785,"name":"ACCOUNT_DEMOGRAPHICS_STAMP_DATE__C","comment":null,"display_name":"account_demographics_stamp_date__c"},"SUPPORT_INSTANCE__C":{"type":"TEXT","index":786,"name":"SUPPORT_INSTANCE__C","comment":null,"display_name":"support_instance__c"},"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY_NAME__C":{"type":"TEXT","index":787,"name":"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY_NAME__C","comment":null,"display_name":"account_demographics_upa_country_name__c"},"ACCOUNT_DEMOGRAPHICS_UPA_STATE_NAME__C":{"type":"TEXT","index":788,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STATE_NAME__C","comment":null,"display_name":"account_demographics_upa_state_name__c"},"LAST_AT_RISK_UPDATE_COMMENTS__C":{"type":"TEXT","index":789,"name":"LAST_AT_RISK_UPDATE_COMMENTS__C","comment":null,"display_name":"last_at_risk_update_comments__c"},"RISKRATE_THIRD_PARTY_STATUS__C":{"type":"TEXT","index":790,"name":"RISKRATE_THIRD_PARTY_STATUS__C","comment":null,"display_name":"riskrate_third_party_status__c"},"TRACHIER__GLOBAL_ULTIMATE_GROUPING_ID__C":{"type":"TEXT","index":791,"name":"TRACHIER__GLOBAL_ULTIMATE_GROUPING_ID__C","comment":null,"display_name":"trachier__global_ultimate_grouping_id__c"},"TRACHIER__DISABLE_HIERARCHIES__C":{"type":"BOOLEAN","index":792,"name":"TRACHIER__DISABLE_HIERARCHIES__C","comment":null,"display_name":"trachier__disable_hierarchies__c"},"TRACHIER__RE_RUN_TRACTION_HIERARCHIES__C":{"type":"BOOLEAN","index":793,"name":"TRACHIER__RE_RUN_TRACTION_HIERARCHIES__C","comment":null,"display_name":"trachier__re_run_traction_hierarchies__c"},"TRACHIER__DOMAIN__C":{"type":"TEXT","index":794,"name":"TRACHIER__DOMAIN__C","comment":null,"display_name":"trachier__domain__c"},"TRACHIER__EXCLUDED_FROM_ACCOUNT_HIERARCHIES__C":{"type":"BOOLEAN","index":795,"name":"TRACHIER__EXCLUDED_FROM_ACCOUNT_HIERARCHIES__C","comment":null,"display_name":"trachier__excluded_from_account_hierarchies__c"},"TRACHIER__OWNER__C":{"type":"TEXT","index":796,"name":"TRACHIER__OWNER__C","comment":null,"display_name":"trachier__owner__c"},"TRACHIER__HIERARCHY_ID__C":{"type":"TEXT","index":797,"name":"TRACHIER__HIERARCHY_ID__C","comment":null,"display_name":"trachier__hierarchy_id__c"},"TAM_MANAGER_NOTIFICATION_SENT__C":{"type":"BOOLEAN","index":798,"name":"TAM_MANAGER_NOTIFICATION_SENT__C","comment":null,"display_name":"tam_manager_notification_sent__c"},"TRACHIER__DUNS_GLOBAL_ULTIMATE_PARENT__C":{"type":"TEXT","index":799,"name":"TRACHIER__DUNS_GLOBAL_ULTIMATE_PARENT__C","comment":null,"display_name":"trachier__duns_global_ultimate_parent__c"},"TRACHIER__PARENT_COMPANY__C":{"type":"TEXT","index":800,"name":"TRACHIER__PARENT_COMPANY__C","comment":null,"display_name":"trachier__parent_company__c"},"TRACRTC__REALTIME_CLEAN_PROCESSED__C":{"type":"BOOLEAN","index":801,"name":"TRACRTC__REALTIME_CLEAN_PROCESSED__C","comment":null,"display_name":"tracrtc__realtime_clean_processed__c"},"TRACRTC__TRACTION_COMPLETE_DOMAIN__C":{"type":"TEXT","index":802,"name":"TRACRTC__TRACTION_COMPLETE_DOMAIN__C","comment":null,"display_name":"tracrtc__traction_complete_domain__c"},"TRACRTC__REALTIME_CLEAN_FAILED__C":{"type":"BOOLEAN","index":803,"name":"TRACRTC__REALTIME_CLEAN_FAILED__C","comment":null,"display_name":"tracrtc__realtime_clean_failed__c"},"TRACRTC__RE_RUN_REALTIME_CLEAN__C":{"type":"BOOLEAN","index":804,"name":"TRACRTC__RE_RUN_REALTIME_CLEAN__C","comment":null,"display_name":"tracrtc__re_run_realtime_clean__c"},"TRACRTC__WEBSITE_DOMAIN__C":{"type":"TEXT","index":805,"name":"TRACRTC__WEBSITE_DOMAIN__C","comment":null,"display_name":"tracrtc__website_domain__c"},"TRACRTC__TIME_DELAY_PROCESSED__C":{"type":"BOOLEAN","index":806,"name":"TRACRTC__TIME_DELAY_PROCESSED__C","comment":null,"display_name":"tracrtc__time_delay_processed__c"},"TRACRTC__DISABLE_COMPLETE__C":{"type":"BOOLEAN","index":807,"name":"TRACRTC__DISABLE_COMPLETE__C","comment":null,"display_name":"tracrtc__disable_complete__c"},"TERRITORYASSIGNQUEUED__C":{"type":"TIMESTAMP_TZ","index":808,"name":"TERRITORYASSIGNQUEUED__C","comment":null,"display_name":"territoryassignqueued__c"},"TRACRTC__TRACTION_COMPLETE_MATCH_KEY__C":{"type":"TEXT","index":809,"name":"TRACRTC__TRACTION_COMPLETE_MATCH_KEY__C","comment":null,"display_name":"tracrtc__traction_complete_match_key__c"},"TRACRTC__DATE_OF_LAST_COMPLETION__C":{"type":"TIMESTAMP_TZ","index":810,"name":"TRACRTC__DATE_OF_LAST_COMPLETION__C","comment":null,"display_name":"tracrtc__date_of_last_completion__c"},"TRACRTC__ORIGINAL_COMPLETION_DATE__C":{"type":"TIMESTAMP_TZ","index":811,"name":"TRACRTC__ORIGINAL_COMPLETION_DATE__C","comment":null,"display_name":"tracrtc__original_completion_date__c"},"TRACRTC__REALTIME_CLEAN_ERROR_MESSAGE__C":{"type":"TEXT","index":812,"name":"TRACRTC__REALTIME_CLEAN_ERROR_MESSAGE__C","comment":null,"display_name":"tracrtc__realtime_clean_error_message__c"},"TRACHIER__PRIMARY_MASTER_ACCOUNT__C":{"type":"TEXT","index":813,"name":"TRACHIER__PRIMARY_MASTER_ACCOUNT__C","comment":null,"display_name":"trachier__primary_master_account__c"},"ENGAGEMENT_MANAGER__C":{"type":"TEXT","index":814,"name":"ENGAGEMENT_MANAGER__C","comment":null,"display_name":"engagement_manager__c"},"RISKRATE_INTEGRATION_ERRORS__C":{"type":"TEXT","index":815,"name":"RISKRATE_INTEGRATION_ERRORS__C","comment":null,"display_name":"riskrate_integration_errors__c"},"TIME_TO_FIRST_ADD_ON__C":{"type":"FLOAT","index":816,"name":"TIME_TO_FIRST_ADD_ON__C","comment":null,"display_name":"time_to_first_add_on__c"},"TRACHIER__LAST_BUILD_HIERARCHY_DATE__C":{"type":"TIMESTAMP_TZ","index":817,"name":"TRACHIER__LAST_BUILD_HIERARCHY_DATE__C","comment":null,"display_name":"trachier__last_build_hierarchy_date__c"},"X6SENSE_6QA__C":{"type":"BOOLEAN","index":818,"name":"X6SENSE_6QA__C","comment":null,"display_name":"x6sense_6qa__c"},"RISKRATE_THIRD_PARTY_GUID__C":{"type":"TEXT","index":819,"name":"RISKRATE_THIRD_PARTY_GUID__C","comment":null,"display_name":"riskrate_third_party_guid__c"},"X6SENSE_ACCOUNT_PROFILE_FIT__C":{"type":"TEXT","index":820,"name":"X6SENSE_ACCOUNT_PROFILE_FIT__C","comment":null,"display_name":"x6sense_account_profile_fit__c"},"X6SENSE_ACCOUNT_REACH_SCORE__C":{"type":"TEXT","index":821,"name":"X6SENSE_ACCOUNT_REACH_SCORE__C","comment":null,"display_name":"x6sense_account_reach_score__c"},"X6SENSE_ACCOUNT_PROFILE_SCORE__C":{"type":"FLOAT","index":822,"name":"X6SENSE_ACCOUNT_PROFILE_SCORE__C","comment":null,"display_name":"x6sense_account_profile_score__c"},"X6SENSE_ACCOUNT_BUYING_STAGE__C":{"type":"TEXT","index":823,"name":"X6SENSE_ACCOUNT_BUYING_STAGE__C","comment":null,"display_name":"x6sense_account_buying_stage__c"},"X6SENSE_ACCOUNT_NUMERICAL_REACH_SCORE__C":{"type":"FLOAT","index":824,"name":"X6SENSE_ACCOUNT_NUMERICAL_REACH_SCORE__C","comment":null,"display_name":"x6sense_account_numerical_reach_score__c"},"X6SENSE_ACCOUNT_UPDATE_DATE__C":{"type":"TIMESTAMP_TZ","index":825,"name":"X6SENSE_ACCOUNT_UPDATE_DATE__C","comment":null,"display_name":"x6sense_account_update_date__c"},"X6SENSE_ACCOUNT_6QA_END_DATE__C":{"type":"TIMESTAMP_TZ","index":826,"name":"X6SENSE_ACCOUNT_6QA_END_DATE__C","comment":null,"display_name":"x6sense_account_6qa_end_date__c"},"X6SENSE_ACCOUNT_6QA_AGE_IN_DAYS__C":{"type":"FLOAT","index":827,"name":"X6SENSE_ACCOUNT_6QA_AGE_IN_DAYS__C","comment":null,"display_name":"x6sense_account_6qa_age_in_days__c"},"X6SENSE_ACCOUNT_6QA_START_DATE__C":{"type":"TIMESTAMP_TZ","index":828,"name":"X6SENSE_ACCOUNT_6QA_START_DATE__C","comment":null,"display_name":"x6sense_account_6qa_start_date__c"},"X6SENSE_ACCOUNT_INTENT_SCORE__C":{"type":"FLOAT","index":829,"name":"X6SENSE_ACCOUNT_INTENT_SCORE__C","comment":null,"display_name":"x6sense_account_intent_score__c"},"EXCLUDE_TERRITORY_ASSIGNMENT__C":{"type":"TEXT","index":830,"name":"EXCLUDE_TERRITORY_ASSIGNMENT__C","comment":null,"display_name":"exclude_territory_assignment__c"},"X6SENSE_SEGMENTS__C":{"type":"TEXT","index":831,"name":"X6SENSE_SEGMENTS__C","comment":null,"display_name":"x6sense_segments__c"},"SUPPLEMENTARY_COMPANY_SOURCE__C":{"type":"TEXT","index":832,"name":"SUPPLEMENTARY_COMPANY_SOURCE__C","comment":null,"display_name":"supplementary_company_source__c"},"DATA_ENRICHMENT_SOURCE__C":{"type":"TEXT","index":833,"name":"DATA_ENRICHMENT_SOURCE__C","comment":null,"display_name":"data_enrichment_source__c"},"PRIMARY_CONTACT__C":{"type":"TEXT","index":834,"name":"PRIMARY_CONTACT__C","comment":null,"display_name":"primary_contact__c"},"TSP_LAST_UPDATE_TIMESTAMP__C":{"type":"TIMESTAMP_TZ","index":835,"name":"TSP_LAST_UPDATE_TIMESTAMP__C","comment":null,"display_name":"tsp_last_update_timestamp__c"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 23:25UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":199675392,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"source.gitlab_snowflake.salesforce.account","fqn":["gitlab_snowflake","sources","sfdc","salesforce","account"],"database":"RAW","schema":"salesforce_stitch","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"models/sources/sfdc/sources.yml","original_file_path":"models/sources/sfdc/sources.yml","name":"account","source_name":"salesforce","source_description":"","loader":"Stitch","identifier":"account","resource_type":"source","quoting":{"database":true,"schema":false,"identifier":false,"column":null},"loaded_at_field":"_sdc_batched_at","freshness":{"warn_after":{"count":8,"period":"hour"},"error_after":{"count":24,"period":"hour"},"filter":null},"external":null,"description":"The account source table contains info about the individual accounts (organizations and persons) involved with your business. This could be a customer, a competitor, a partner, and so on. [Link to Documentation](https://www.stitchdata.com/docs/integrations/saas/salesforce/#account)\n\nNote: A number of fields prefixed with JB_ and ATAM_ are pulled in as part of [Territory Success Planning](https://about.gitlab.com/handbook/sales/field-operations/sales-operations/go-to-market/#territory-success-planning-tsp). These are cast as fields prefixed with TSP_ in downstream models to distinguish from equivalent \"Actual\" fields reflecting the current Go-To-Market approach.","meta":{},"source_meta":{},"tags":["sfdc","tdf"],"config":{"enabled":true},"patch_path":null,"unrendered_config":{},"relation_name":"\"RAW\".salesforce_stitch.account","created_at":1689033767.2521532,"label":"salesforce.account"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.ref","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/override/ref.sql","original_file_path":"macros/utils/override/ref.sql","name":"ref","macro_sql":"{% macro ref(model_name) %}\n\n  {% set relation = builtins.ref(model_name) %}\n\n  {% if is_table_sampled(model_name) %}\n    {% set new_relation = get_sample_relation(relation) %}\n  {% else %}\n    {% set new_relation = relation %}\n  {% endif %}\n  \n  {% do return(new_relation) %}\n\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.is_table_sampled","macro.gitlab_snowflake.get_sample_relation"]},"description":"This macro will return a the normal relation unless one of the following conditions are met:\n- The table is configured to be sampled, will return relation with the sample_suffix variable appended to the table name","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/override/override.yml","arguments":[],"created_at":1689033766.060527}]},"node":{"resource_type":"model","name":"wk_sales_report_metrics_summary_account_year","unique_id":"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L29",null,{"versions":{"Source":"$2a","Compiled":"$2b"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
