1:HL["/supercharged-dbt-docs/supercharged/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css",{"as":"style"}]
0:["3_N3LAWgtmWGg2et9V1N1",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.bamboohr_id_employee_number_mapping\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/supercharged-dbt-docs/supercharged/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_5f725a","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.bamboohr_id_employee_number_mapping\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ColumnDetails","async":false}
12:I{"id":9941,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ReferenceListClient","async":false}
28:I{"id":4431,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:Tcbb,WITH source AS (
  
    SELECT *
    FROM {{ ref ('blended_employee_mapping_source') }}
    WHERE uploaded_row_number_desc = 1

), intermediate AS (

    SELECT 
      employee_number,
      employee_id,
      first_name,
      last_name,
      hire_date,
      termination_date,
      first_inactive_date,
      CASE 
        WHEN age BETWEEN 18 AND 24 THEN '18-24'
        WHEN age BETWEEN 25 AND 29  THEN '25-29'
        WHEN age BETWEEN 30 AND 34  THEN '30-34'
        WHEN age BETWEEN 35 AND 39  THEN '35-39'
        WHEN age BETWEEN 40 AND 44  THEN '40-44'
        WHEN age BETWEEN 44 AND 49  THEN '44-49'
        WHEN age BETWEEN 50 AND 54  THEN '50-54'
        WHEN age BETWEEN 55 AND 59  THEN '55-59'
        WHEN age>= 60               THEN '60+'
        WHEN age IS NULL            THEN 'Unreported'
        WHEN age = -1               THEN 'Unreported'
          ELSE NULL END                                                                   AS age_cohort,
      COALESCE(gender,'Did Not Identify')                                                 AS gender,    
      COALESCE(gender_dropdown, gender,'Did Not Identify')                                AS gender_identity,
      COALESCE(ethnicity, 'Did Not Identify')                                             AS ethnicity, 
      country,
      nationality,
      region,
      CASE
        WHEN region = 'Americas' AND country IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'NORAM'
        WHEN region = 'Americas' AND country NOT IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'LATAM'
        ELSE region END                                                                   AS region_modified,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(gender,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(gender,'Did Not Identify')  || '_'|| 'Non-US')                       AS gender_region,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(ethnicity,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(ethnicity,'Did Not Identify')  || '_'|| 'Non-US')                    AS ethnicity_region,
      greenhouse_candidate_id,
      uploaded_at                                                                         AS last_updated_date,
      CASE
        WHEN COALESCE(ethnicity, 'Did Not Identify') NOT IN ('White','Asian','Did Not Identify','Declined to Answer')
            THEN TRUE
        ELSE FALSE END                                                                    AS urg_group,
      IFF (urg_group = TRUE,
        'URG',
        'Non-URG')  || '_' ||
          IFF(country IN ('United States','United States of America'),
            'United States of America',
            'Non-US')                                                                     AS urg_region
    FROM source
    WHERE hire_date IS NOT NULL
        OR (LOWER(first_name) NOT LIKE '%greenhouse test%'
            and LOWER(last_name) NOT LIKE '%test profile%'
            and LOWER(last_name) != 'test-gitlab')
        OR employee_id  NOT IN (11569)  -- mock person


)

SELECT *
FROM intermediate11:Tcbc,WITH source AS (
  
    SELECT *
    FROM "PREP".workday.blended_employee_mapping_source
    WHERE uploaded_row_number_desc = 1

), intermediate AS (

    SELECT 
      employee_number,
      employee_id,
      first_name,
      last_name,
      hire_date,
      termination_date,
      first_inactive_date,
      CASE 
        WHEN age BETWEEN 18 AND 24 THEN '18-24'
        WHEN age BETWEEN 25 AND 29  THEN '25-29'
        WHEN age BETWEEN 30 AND 34  THEN '30-34'
        WHEN age BETWEEN 35 AND 39  THEN '35-39'
        WHEN age BETWEEN 40 AND 44  THEN '40-44'
        WHEN age BETWEEN 44 AND 49  THEN '44-49'
        WHEN age BETWEEN 50 AND 54  THEN '50-54'
        WHEN age BETWEEN 55 AND 59  THEN '55-59'
        WHEN age>= 60               THEN '60+'
        WHEN age IS NULL            THEN 'Unreported'
        WHEN age = -1               THEN 'Unreported'
          ELSE NULL END                                                                   AS age_cohort,
      COALESCE(gender,'Did Not Identify')                                                 AS gender,    
      COALESCE(gender_dropdown, gender,'Did Not Identify')                                AS gender_identity,
      COALESCE(ethnicity, 'Did Not Identify')                                             AS ethnicity, 
      country,
      nationality,
      region,
      CASE
        WHEN region = 'Americas' AND country IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'NORAM'
        WHEN region = 'Americas' AND country NOT IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'LATAM'
        ELSE region END                                                                   AS region_modified,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(gender,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(gender,'Did Not Identify')  || '_'|| 'Non-US')                       AS gender_region,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(ethnicity,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(ethnicity,'Did Not Identify')  || '_'|| 'Non-US')                    AS ethnicity_region,
      greenhouse_candidate_id,
      uploaded_at                                                                         AS last_updated_date,
      CASE
        WHEN COALESCE(ethnicity, 'Did Not Identify') NOT IN ('White','Asian','Did Not Identify','Declined to Answer')
            THEN TRUE
        ELSE FALSE END                                                                    AS urg_group,
      IFF (urg_group = TRUE,
        'URG',
        'Non-URG')  || '_' ||
          IFF(country IN ('United States','United States of America'),
            'United States of America',
            'Non-US')                                                                     AS urg_region
    FROM source
    WHERE hire_date IS NOT NULL
        OR (LOWER(first_name) NOT LIKE '%greenhouse test%'
            and LOWER(last_name) NOT LIKE '%test profile%'
            and LOWER(last_name) != 'test-gitlab')
        OR employee_id  NOT IN (11569)  -- mock person


)

SELECT *
FROM intermediate13:Tdef,WITH applications AS (

    SELECT *,
      ROW_NUMBER() OVER (PARTITION BY candidate_id ORDER BY applied_at)     AS greenhouse_candidate_row_number
    FROM  {{ ref ('greenhouse_applications_source') }}
    WHERE application_status = 'hired'

), offers AS (

    SELECT * 
    FROM  {{ ref ('greenhouse_offers_source') }}
    WHERE offer_status = 'accepted'

), openings AS (
    
    SELECT *
    FROM {{ ref ('greenhouse_openings_source') }}

), greenhouse_opening_custom_fields AS (

    SELECT *
    FROM  {{ ref ('greenhouse_opening_custom_fields') }}

), bamboo_hires AS (
 
    SELECT *
    FROM  {{ ref ('employee_directory') }}

), bamboohr_mapping AS (

    SELECT *
    FROM  {{ ref ('bamboohr_id_employee_number_mapping') }}
   
), division_department AS (

    SELECT *
    FROM  {{ ref ('employee_directory_intermediate') }}
    
), joined AS (

    SELECT 
      openings.job_id,
      applications.application_id,  
      applications.candidate_id, 
      bamboo_hires.employee_id,
      bamboo_hires.full_name                                        AS employee_name,
      bamboohr_mapping.region,
      offers.start_date                                             AS candidate_target_hire_date, 
      applications.applied_at, 
      applications.greenhouse_candidate_row_number,
      IFF(applications.greenhouse_candidate_row_number = 1 
            AND applied_at < bamboo_hires.hire_date, 
              bamboo_hires.hire_date, candidate_target_hire_date)   AS hire_date_mod,
      is_hire_date,
      is_rehire_date,
      CASE WHEN greenhouse_candidate_row_number = 1 
            THEN 'hire'
           WHEN offers.start_date = bamboo_hires.rehire_date
            THEN 'rehire'
           WHEN greenhouse_candidate_row_number>1 
            THEN 'transfer'
           ELSE NULL END                                            AS hire_type,
      greenhouse_opening_custom_fields.job_opening_type,
      division_department.division_mapped_current                   AS division,
      division_department.department_modified                       AS department,
      division_department.employment_status,
      division_department.is_promotion
    FROM applications
    LEFT JOIN offers
      ON offers.application_id = applications.application_id
    LEFT JOIN bamboo_hires 
      ON bamboo_hires.greenhouse_candidate_id = applications.candidate_id
    LEFT JOIN bamboohr_mapping
      ON bamboo_hires.employee_id = bamboohr_mapping.employee_id
    LEFT JOIN openings
      ON openings.hired_application_id = applications.application_id
    LEFT JOIN greenhouse_opening_custom_fields
      ON greenhouse_opening_custom_fields.job_opening_id = openings.job_opening_id
    LEFT JOIN division_department
      ON division_department.employee_id = bamboo_hires.employee_id
      AND division_department.date_actual =  IFF(applications.greenhouse_candidate_row_number = 1 
            AND applied_at < bamboo_hires.hire_date, 
              bamboo_hires.hire_date, offers.start_date)

), final AS (    

    SELECT
      {{ dbt_utils.surrogate_key(['application_id', 'candidate_id',]) }}  AS unique_key,
      job_id,
      application_id,
      candidate_id,
      employee_id,
      employee_name,
      region,
      greenhouse_candidate_row_number,
      hire_date_mod,
      hire_type,
      job_opening_type,
      IFF(employment_status IS NOT NULL,TRUE,FALSE)                             AS hired_in_bamboohr,
      division,
      department
    FROM joined 
    WHERE is_promotion != TRUE --removing promotions

)

SELECT *
FROM final14:Te50,WITH applications AS (

    SELECT *,
      ROW_NUMBER() OVER (PARTITION BY candidate_id ORDER BY applied_at)     AS greenhouse_candidate_row_number
    FROM  "PREP".greenhouse.greenhouse_applications_source
    WHERE application_status = 'hired'

), offers AS (

    SELECT * 
    FROM  "PREP".greenhouse.greenhouse_offers_source
    WHERE offer_status = 'accepted'

), openings AS (
    
    SELECT *
    FROM "PREP".greenhouse.greenhouse_openings_source

), greenhouse_opening_custom_fields AS (

    SELECT *
    FROM  "PREP".sensitive.greenhouse_opening_custom_fields

), bamboo_hires AS (
 
    SELECT *
    FROM  "PREP".sensitive.employee_directory

), bamboohr_mapping AS (

    SELECT *
    FROM  "PREP".sensitive.bamboohr_id_employee_number_mapping
   
), division_department AS (

    SELECT *
    FROM  "PREP".sensitive.employee_directory_intermediate
    
), joined AS (

    SELECT 
      openings.job_id,
      applications.application_id,  
      applications.candidate_id, 
      bamboo_hires.employee_id,
      bamboo_hires.full_name                                        AS employee_name,
      bamboohr_mapping.region,
      offers.start_date                                             AS candidate_target_hire_date, 
      applications.applied_at, 
      applications.greenhouse_candidate_row_number,
      IFF(applications.greenhouse_candidate_row_number = 1 
            AND applied_at < bamboo_hires.hire_date, 
              bamboo_hires.hire_date, candidate_target_hire_date)   AS hire_date_mod,
      is_hire_date,
      is_rehire_date,
      CASE WHEN greenhouse_candidate_row_number = 1 
            THEN 'hire'
           WHEN offers.start_date = bamboo_hires.rehire_date
            THEN 'rehire'
           WHEN greenhouse_candidate_row_number>1 
            THEN 'transfer'
           ELSE NULL END                                            AS hire_type,
      greenhouse_opening_custom_fields.job_opening_type,
      division_department.division_mapped_current                   AS division,
      division_department.department_modified                       AS department,
      division_department.employment_status,
      division_department.is_promotion
    FROM applications
    LEFT JOIN offers
      ON offers.application_id = applications.application_id
    LEFT JOIN bamboo_hires 
      ON bamboo_hires.greenhouse_candidate_id = applications.candidate_id
    LEFT JOIN bamboohr_mapping
      ON bamboo_hires.employee_id = bamboohr_mapping.employee_id
    LEFT JOIN openings
      ON openings.hired_application_id = applications.application_id
    LEFT JOIN greenhouse_opening_custom_fields
      ON greenhouse_opening_custom_fields.job_opening_id = openings.job_opening_id
    LEFT JOIN division_department
      ON division_department.employee_id = bamboo_hires.employee_id
      AND division_department.date_actual =  IFF(applications.greenhouse_candidate_row_number = 1 
            AND applied_at < bamboo_hires.hire_date, 
              bamboo_hires.hire_date, offers.start_date)

), final AS (    

    SELECT
      md5(cast(coalesce(cast(application_id as 
    varchar
), '') || '-' || coalesce(cast(candidate_id as 
    varchar
), '') as 
    varchar
))  AS unique_key,
      job_id,
      application_id,
      candidate_id,
      employee_id,
      employee_name,
      region,
      greenhouse_candidate_row_number,
      hire_date_mod,
      hire_type,
      job_opening_type,
      IFF(employment_status IS NOT NULL,TRUE,FALSE)                             AS hired_in_bamboohr,
      division,
      department
    FROM joined 
    WHERE is_promotion != TRUE --removing promotions

)

SELECT *
FROM final15:T4244,{{ config({
    "materialized":"table",
    })
}}

{% set repeated_metric_columns = 
      "SUM(headcount_start)                                                         AS headcount_start,
      SUM(headcount_start_excluding_sdr)                                            AS headcount_start_excluding_sdr,
      SUM(headcount_end)                                                            AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                              AS headcount_end_excluding_sdr,
      (SUM(headcount_start) + SUM(headcount_end))/2                                 AS headcount_average,
      (SUM(headcount_start_excluding_sdr) + SUM(headcount_end_excluding_sdr))/2     AS headcount_average_excluding_sdr,
      SUM(hire_count)                                                               AS hire_count,
      SUM(separation_count)                                                         AS separation_count,
      SUM(voluntary_separation)                                                     AS voluntary_separation,
      SUM(involuntary_separation)                                                   AS involuntary_separation,

      SUM(headcount_start_leader)                                                   AS headcount_start_leader,
      SUM(headcount_end_leader)                                                     AS headcount_end_leader,
      (SUM(headcount_start_leader) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_leader,
      SUM(hired_leaders)                                                            AS hired_leaders,
      SUM(separated_leaders)                                                        AS separated_leaders,

      SUM(headcount_start_manager)                                                  AS headcount_start_manager,
      SUM(headcount_end_manager)                                                    AS headcount_end_manager,
      (SUM(headcount_start_manager) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_manager,
      SUM(hired_manager)                                                            AS hired_manager,
      SUM(separated_manager)                                                        AS separated_manager,

      SUM(headcount_start_management)                                               AS headcount_start_management,
      SUM(headcount_end_management)                                                 AS headcount_end_management,
      (SUM(headcount_start_management) 
        + SUM(headcount_end_management))/2                                          AS headcount_average_management,
      SUM(hired_management)                                                         AS hired_management,
      SUM(separated_management)                                                     AS separated_management,
            
      SUM(headcount_start_contributor)                                              AS headcount_start_contributor,
      SUM(headcount_end_contributor)                                                AS headcount_end_individual_contributor,
      (SUM(headcount_start_contributor) 
        + SUM(headcount_end_contributor))/2                                         AS headcount_average_contributor,
      SUM(hired_contributor)                                                        AS hired_contributor,
      SUM(separated_contributor)                                                    AS separated_contributor,

      SUM(IFF(is_promotion = TRUE,1,0))                                             AS promotion,
      SUM(IFF(is_promotion_excluding_sdr = TRUE,1,0))                               AS promotion_excluding_sdr,
      
      SUM(percent_change_in_comp)                                                   AS percent_change_in_comp,
      SUM(percent_change_in_comp_excluding_sdr)                                     AS percent_change_in_comp_excluding_sdr,

      AVG(location_factor)                                                          AS location_factor,
      AVG(new_hire_location_factor)                                                 AS new_hire_location_factor,
      SUM(discretionary_bonus)                                                      AS discretionary_bonus, 
      AVG(tenure_months)                                                            AS tenure_months,
      SUM(tenure_zero_to_six_months)                                                AS tenure_zero_to_six_months,
      SUM(tenure_six_to_twelve_months)                                              AS tenure_six_to_twelve_months,
      SUM(tenure_one_to_two_years)                                                  AS tenure_one_to_two_years,
      SUM(tenure_two_to_four_years)                                                 AS tenure_two_to_four_years,
      SUM(tenure_four_plus_years)                                                   AS tenure_four_plus_years
      "%}



WITH dates AS (

    SELECT
      date_actual                                 AS start_date,
      LAST_DAY(date_actual)                       AS end_date
    FROM {{ ref ('date_details') }}
    WHERE date_day <= LAST_DAY(current_date)
       AND day_of_month = 1
       AND date_actual >= '2013-07-01' -- min employment_status_date in bamboohr_employment_status model

), mapping AS (

    {{ dbt_utils.unpivot(relation=ref('bamboohr_id_employee_number_mapping'), cast_to='varchar', 
       exclude=['employee_number', 'employee_id','first_name', 'last_name', 'hire_date', 'termination_date', 'greenhouse_candidate_id','region','country','nationality', 'last_updated_date', 'first_inactive_date']) }}

), mapping_enhanced AS (

    SELECT 
      employee_id,
      LOWER(field_name)                  AS eeoc_field_name, 
      COALESCE(value, 'Not Identified')  AS eeoc_value
    FROM mapping

    UNION ALL

    SELECT 
      DISTINCT employee_id,
      'no_eeoc'                         AS eeoc_field_name,
      'no_eeoc'                         AS eeoc_value
    FROM mapping
 
), separation_reason AS(

    SELECT * 
    FROM {{ ref ('bamboohr_employment_status_xf') }}
    WHERE employment_status = 'Terminated'

), employees AS (

    SELECT *
    FROM {{ ref ('employee_directory_intermediate') }}

), bamboohr_promotion AS (

    SELECT *
    FROM {{ ref ('bamboohr_promotions_xf') }}

), intermediate AS (

    SELECT
      employees.date_actual,
      employees.department_modified                                                 AS department,
      division_mapped_current                                                       AS division,
      --using the current division - department mapping for reporting
      job_role_modified                                                             AS job_role,
      COALESCE(job_grade,'NA')                                                      AS job_grade,
      mapping_enhanced.eeoc_field_name,
      CASE
        WHEN mapping_enhanced.eeoc_field_name like '%_region'
          THEN SPLIT_PART(mapping_enhanced.eeoc_value,'_',1)|| '_' || 
            IFF(employees.country in ('United States of America', 'United States'),'United States of America', 'Non-US')
        WHEN mapping_enhanced.eeoc_field_name = 'region_modified'
          THEN employees.region_modified
        ELSE mapping_enhanced.eeoc_value END                                        AS eeoc_value,   
      IFF(dates.start_date = date_actual,1,0)                                       AS headcount_start,
      IFF(dates.start_date = date_actual 
        AND employees.department_modified != 'Sales Development', 1,0)              AS headcount_start_excluding_sdr,
      IFF(dates.end_date = date_actual,1,0)                                         AS headcount_end,
      IFF(dates.end_date = date_actual 
        AND employees.department_modified != 'Sales Development', 1,0)              AS headcount_end_excluding_sdr,
      IFF(is_hire_date = True, 1,0)                                                 AS hire_count,
      IFF(termination_type = 'Resignation (Voluntary)',1,0)                         AS voluntary_separation,
      IFF(termination_type = 'Termination (Involuntary)',1,0)                       AS involuntary_separation,
      voluntary_separation + involuntary_separation                                 AS separation_count,

      IFF(dates.start_date = date_actual 
          AND job_role_modified = 'Director+',1,0)                          AS headcount_start_leader,
      IFF(dates.end_date = date_actual
          AND job_role_modified = 'Director+',1,0)                          AS headcount_end_leader,
      IFF(is_hire_date = True 
          AND job_role_modified = 'Director+',1,0)                          AS hired_leaders,
      IFF(is_termination_date = True
          AND job_role_modified = 'Director+',1,0)                          AS separated_leaders,
      
      IFF(dates.start_date = date_actual 
          AND job_role_modified = 'Manager',1,0)                                    AS headcount_start_manager,
      IFF(dates.end_date = date_actual
          AND job_role_modified = 'Manager',1,0)                                    AS headcount_end_manager,
      IFF(is_hire_date = True 
          AND job_role_modified = 'Manager',1,0)                                    AS hired_manager,
      IFF(is_termination_date = True
          AND job_role_modified = 'Manager',1,0)                                    AS separated_manager,

      IFF(dates.start_date = date_actual 
          AND job_role_modified != 'Individual Contributor',1,0)                    AS headcount_start_management,
      IFF(dates.end_date = date_actual
          AND job_role_modified != 'Individual Contributor',1,0)                    AS headcount_end_management,
      IFF(is_hire_date = True 
          AND job_role_modified != 'Individual Contributor',1,0)                    AS hired_management,
      IFF(is_termination_date = True
          AND job_role_modified != 'Individual Contributor',1,0)                    AS separated_management,   

       IFF(dates.start_date = date_actual 
          AND job_role_modified = 'Individual Contributor',1,0)                     AS headcount_start_contributor,
      IFF(dates.end_date = date_actual
          AND job_role_modified = 'Individual Contributor',1,0)                     AS headcount_end_contributor,
      IFF(is_hire_date = True 
          AND job_role_modified = 'Individual Contributor',1,0)                     AS hired_contributor,
      IFF(is_termination_date = True
          AND job_role_modified = 'Individual Contributor',1,0)                     AS separated_contributor, 


      IFF(employees.job_title LIKE '%VP%', 'Exclude', is_promotion)                 AS is_promotion,  
      IFF(employees.job_title LIKE '%VP%' 
        OR employees.department_modified = 'Sales Development',
        'Exclude',is_promotion)                                                     AS is_promotion_excluding_sdr,
      IFF(is_promotion = TRUE AND employees.job_title NOT LIKE '%VP%',
        percent_change_in_comp, NULL)                                               AS percent_change_in_comp,      
      IFF(employees.job_title LIKE '%VP%' 
        OR employees.department_modified = 'Sales Development',
        NULL,percent_change_in_comp)                                                AS percent_change_in_comp_excluding_sdr,

      IFF(dates.end_date = date_actual 
            AND COALESCE(sales_geo_differential,'n/a - Comp Calc') = 'n/a - Comp Calc',
            location_factor, NULL)                                                  AS location_factor,
      IFF(is_hire_date = TRUE
            AND COALESCE(sales_geo_differential,'n/a - Comp Calc') = 'n/a - Comp Calc',
            location_factor, NULL)                                                  AS new_hire_location_factor,      
      discretionary_bonus,      
      ROUND((tenure_days/30),2)                                                     AS tenure_months,
      IFF(tenure_months BETWEEN 0 AND 6 AND dates.end_date = date_actual, 1, 0)     AS tenure_zero_to_six_months,
      IFF(tenure_months BETWEEN 6 AND 12 AND dates.end_date = date_actual, 1, 0)    AS tenure_six_to_twelve_months,
      IFF(tenure_months BETWEEN 12 AND 24 AND dates.end_date = date_actual, 1, 0)   AS tenure_one_to_two_years,
      IFF(tenure_months BETWEEN 24 AND 48 AND dates.end_date = date_actual, 1, 0)   AS tenure_two_to_four_years,
      IFF(tenure_months >= 48 AND dates.end_date = date_actual, 1, 0)               AS tenure_four_plus_years
    FROM dates
    LEFT JOIN employees
      ON DATE_TRUNC(month,dates.start_date) = DATE_TRUNC(month, employees.date_actual)
    LEFT JOIN mapping_enhanced
      ON employees.employee_id = mapping_enhanced.employee_id
    LEFT JOIN separation_reason
      ON separation_reason.employee_id = employees.employee_id
      AND employees.date_actual = separation_reason.valid_from_date
    LEFT JOIN bamboohr_promotion
      ON employees.employee_id = bamboohr_promotion.employee_id
      AND employees.date_actual = bamboohr_promotion.promotion_date  
   WHERE date_actual IS NOT NULL


), aggregated AS (

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'all_attributes_breakout'         AS breakout_type,
      department,
      division,
      job_role,
      job_grade,
      eeoc_field_name,                                                       
      eeoc_value,    
     {{repeated_metric_columns}}
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    {{ dbt_utils.group_by(n=8) }}  


    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'department_breakout'             AS breakout_type,
      department,
      division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,    
     {{repeated_metric_columns}}
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    {{ dbt_utils.group_by(n=8) }}  

    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'eeoc_breakout'                   AS breakout_type, 
      'eeoc_breakout'                   AS department,
      'eeoc_breakout'                   AS division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,  
      {{repeated_metric_columns}}
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    {{ dbt_utils.group_by(n=8) }} 

    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'division_breakout'               AS breakout_type, 
      'division_breakout'               AS department,
      division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,
      {{repeated_metric_columns}}
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    WHERE department IS NOT NULL
    {{ dbt_utils.group_by(n=8) }} 

    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'division_group_breakout'         AS breakout_type, 
      'division_group_breakout'         AS department,
      CASE
        WHEN division = 'Sales' 
          THEN 'Sales'
        WHEN division in ('Product', 'Engineering', 'Security')
          THEN 'Tech'
        ELSE 'Non-Tech' END             AS division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,
      {{repeated_metric_columns}}
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    WHERE department IS NOT NULL
    {{ dbt_utils.group_by(n=8) }} 

), breakout_modified AS (

    SELECT 
      aggregated.*,
      IFF(breakout_type = 'eeoc_breakout'
          AND eeoc_field_name = 'no_eeoc', 'kpi_breakout', breakout_type)                   AS breakout_type_modified
    FROM aggregated

), final AS (

    SELECT
      {{ dbt_utils.surrogate_key(['month_date', 'breakout_type_modified','department','division',
                                'job_role','job_grade', 'eeoc_field_name', 'eeoc_value']) }} AS unique_key,
      breakout_modified.*                           
    FROM breakout_modified

)

SELECT *
FROM final16:T9fff,





WITH dates AS (

    SELECT
      date_actual                                 AS start_date,
      LAST_DAY(date_actual)                       AS end_date
    FROM "PROD".legacy.date_details
    WHERE date_day <= LAST_DAY(current_date)
       AND day_of_month = 1
       AND date_actual >= '2013-07-01' -- min employment_status_date in bamboohr_employment_status model

), mapping AS (

    

    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('AGE_COHORT' as 
    varchar
) as field_name,
      cast(  
           AGE_COHORT
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('GENDER' as 
    varchar
) as field_name,
      cast(  
           GENDER
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('GENDER_IDENTITY' as 
    varchar
) as field_name,
      cast(  
           GENDER_IDENTITY
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('ETHNICITY' as 
    varchar
) as field_name,
      cast(  
           ETHNICITY
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('REGION_MODIFIED' as 
    varchar
) as field_name,
      cast(  
           REGION_MODIFIED
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('GENDER_REGION' as 
    varchar
) as field_name,
      cast(  
           GENDER_REGION
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('ETHNICITY_REGION' as 
    varchar
) as field_name,
      cast(  
           ETHNICITY_REGION
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('URG_GROUP' as 
    varchar
) as field_name,
      cast(  
           URG_GROUP
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    union all
    select
        employee_number,
        employee_id,
        first_name,
        last_name,
        hire_date,
        termination_date,
        greenhouse_candidate_id,
        region,
        country,
        nationality,
        last_updated_date,
        first_inactive_date,

      cast('URG_REGION' as 
    varchar
) as field_name,
      cast(  
           URG_REGION
             
           as varchar) as value

    from "PREP".sensitive.bamboohr_id_employee_number_mapping

    

), mapping_enhanced AS (

    SELECT 
      employee_id,
      LOWER(field_name)                  AS eeoc_field_name, 
      COALESCE(value, 'Not Identified')  AS eeoc_value
    FROM mapping

    UNION ALL

    SELECT 
      DISTINCT employee_id,
      'no_eeoc'                         AS eeoc_field_name,
      'no_eeoc'                         AS eeoc_value
    FROM mapping
 
), separation_reason AS(

    SELECT * 
    FROM "PREP".sensitive.bamboohr_employment_status_xf
    WHERE employment_status = 'Terminated'

), employees AS (

    SELECT *
    FROM "PREP".sensitive.employee_directory_intermediate

), bamboohr_promotion AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_promotions_xf

), intermediate AS (

    SELECT
      employees.date_actual,
      employees.department_modified                                                 AS department,
      division_mapped_current                                                       AS division,
      --using the current division - department mapping for reporting
      job_role_modified                                                             AS job_role,
      COALESCE(job_grade,'NA')                                                      AS job_grade,
      mapping_enhanced.eeoc_field_name,
      CASE
        WHEN mapping_enhanced.eeoc_field_name like '%_region'
          THEN SPLIT_PART(mapping_enhanced.eeoc_value,'_',1)|| '_' || 
            IFF(employees.country in ('United States of America', 'United States'),'United States of America', 'Non-US')
        WHEN mapping_enhanced.eeoc_field_name = 'region_modified'
          THEN employees.region_modified
        ELSE mapping_enhanced.eeoc_value END                                        AS eeoc_value,   
      IFF(dates.start_date = date_actual,1,0)                                       AS headcount_start,
      IFF(dates.start_date = date_actual 
        AND employees.department_modified != 'Sales Development', 1,0)              AS headcount_start_excluding_sdr,
      IFF(dates.end_date = date_actual,1,0)                                         AS headcount_end,
      IFF(dates.end_date = date_actual 
        AND employees.department_modified != 'Sales Development', 1,0)              AS headcount_end_excluding_sdr,
      IFF(is_hire_date = True, 1,0)                                                 AS hire_count,
      IFF(termination_type = 'Resignation (Voluntary)',1,0)                         AS voluntary_separation,
      IFF(termination_type = 'Termination (Involuntary)',1,0)                       AS involuntary_separation,
      voluntary_separation + involuntary_separation                                 AS separation_count,

      IFF(dates.start_date = date_actual 
          AND job_role_modified = 'Director+',1,0)                          AS headcount_start_leader,
      IFF(dates.end_date = date_actual
          AND job_role_modified = 'Director+',1,0)                          AS headcount_end_leader,
      IFF(is_hire_date = True 
          AND job_role_modified = 'Director+',1,0)                          AS hired_leaders,
      IFF(is_termination_date = True
          AND job_role_modified = 'Director+',1,0)                          AS separated_leaders,
      
      IFF(dates.start_date = date_actual 
          AND job_role_modified = 'Manager',1,0)                                    AS headcount_start_manager,
      IFF(dates.end_date = date_actual
          AND job_role_modified = 'Manager',1,0)                                    AS headcount_end_manager,
      IFF(is_hire_date = True 
          AND job_role_modified = 'Manager',1,0)                                    AS hired_manager,
      IFF(is_termination_date = True
          AND job_role_modified = 'Manager',1,0)                                    AS separated_manager,

      IFF(dates.start_date = date_actual 
          AND job_role_modified != 'Individual Contributor',1,0)                    AS headcount_start_management,
      IFF(dates.end_date = date_actual
          AND job_role_modified != 'Individual Contributor',1,0)                    AS headcount_end_management,
      IFF(is_hire_date = True 
          AND job_role_modified != 'Individual Contributor',1,0)                    AS hired_management,
      IFF(is_termination_date = True
          AND job_role_modified != 'Individual Contributor',1,0)                    AS separated_management,   

       IFF(dates.start_date = date_actual 
          AND job_role_modified = 'Individual Contributor',1,0)                     AS headcount_start_contributor,
      IFF(dates.end_date = date_actual
          AND job_role_modified = 'Individual Contributor',1,0)                     AS headcount_end_contributor,
      IFF(is_hire_date = True 
          AND job_role_modified = 'Individual Contributor',1,0)                     AS hired_contributor,
      IFF(is_termination_date = True
          AND job_role_modified = 'Individual Contributor',1,0)                     AS separated_contributor, 


      IFF(employees.job_title LIKE '%VP%', 'Exclude', is_promotion)                 AS is_promotion,  
      IFF(employees.job_title LIKE '%VP%' 
        OR employees.department_modified = 'Sales Development',
        'Exclude',is_promotion)                                                     AS is_promotion_excluding_sdr,
      IFF(is_promotion = TRUE AND employees.job_title NOT LIKE '%VP%',
        percent_change_in_comp, NULL)                                               AS percent_change_in_comp,      
      IFF(employees.job_title LIKE '%VP%' 
        OR employees.department_modified = 'Sales Development',
        NULL,percent_change_in_comp)                                                AS percent_change_in_comp_excluding_sdr,

      IFF(dates.end_date = date_actual 
            AND COALESCE(sales_geo_differential,'n/a - Comp Calc') = 'n/a - Comp Calc',
            location_factor, NULL)                                                  AS location_factor,
      IFF(is_hire_date = TRUE
            AND COALESCE(sales_geo_differential,'n/a - Comp Calc') = 'n/a - Comp Calc',
            location_factor, NULL)                                                  AS new_hire_location_factor,      
      discretionary_bonus,      
      ROUND((tenure_days/30),2)                                                     AS tenure_months,
      IFF(tenure_months BETWEEN 0 AND 6 AND dates.end_date = date_actual, 1, 0)     AS tenure_zero_to_six_months,
      IFF(tenure_months BETWEEN 6 AND 12 AND dates.end_date = date_actual, 1, 0)    AS tenure_six_to_twelve_months,
      IFF(tenure_months BETWEEN 12 AND 24 AND dates.end_date = date_actual, 1, 0)   AS tenure_one_to_two_years,
      IFF(tenure_months BETWEEN 24 AND 48 AND dates.end_date = date_actual, 1, 0)   AS tenure_two_to_four_years,
      IFF(tenure_months >= 48 AND dates.end_date = date_actual, 1, 0)               AS tenure_four_plus_years
    FROM dates
    LEFT JOIN employees
      ON DATE_TRUNC(month,dates.start_date) = DATE_TRUNC(month, employees.date_actual)
    LEFT JOIN mapping_enhanced
      ON employees.employee_id = mapping_enhanced.employee_id
    LEFT JOIN separation_reason
      ON separation_reason.employee_id = employees.employee_id
      AND employees.date_actual = separation_reason.valid_from_date
    LEFT JOIN bamboohr_promotion
      ON employees.employee_id = bamboohr_promotion.employee_id
      AND employees.date_actual = bamboohr_promotion.promotion_date  
   WHERE date_actual IS NOT NULL


), aggregated AS (

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'all_attributes_breakout'         AS breakout_type,
      department,
      division,
      job_role,
      job_grade,
      eeoc_field_name,                                                       
      eeoc_value,    
     SUM(headcount_start)                                                         AS headcount_start,
      SUM(headcount_start_excluding_sdr)                                            AS headcount_start_excluding_sdr,
      SUM(headcount_end)                                                            AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                              AS headcount_end_excluding_sdr,
      (SUM(headcount_start) + SUM(headcount_end))/2                                 AS headcount_average,
      (SUM(headcount_start_excluding_sdr) + SUM(headcount_end_excluding_sdr))/2     AS headcount_average_excluding_sdr,
      SUM(hire_count)                                                               AS hire_count,
      SUM(separation_count)                                                         AS separation_count,
      SUM(voluntary_separation)                                                     AS voluntary_separation,
      SUM(involuntary_separation)                                                   AS involuntary_separation,

      SUM(headcount_start_leader)                                                   AS headcount_start_leader,
      SUM(headcount_end_leader)                                                     AS headcount_end_leader,
      (SUM(headcount_start_leader) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_leader,
      SUM(hired_leaders)                                                            AS hired_leaders,
      SUM(separated_leaders)                                                        AS separated_leaders,

      SUM(headcount_start_manager)                                                  AS headcount_start_manager,
      SUM(headcount_end_manager)                                                    AS headcount_end_manager,
      (SUM(headcount_start_manager) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_manager,
      SUM(hired_manager)                                                            AS hired_manager,
      SUM(separated_manager)                                                        AS separated_manager,

      SUM(headcount_start_management)                                               AS headcount_start_management,
      SUM(headcount_end_management)                                                 AS headcount_end_management,
      (SUM(headcount_start_management) 
        + SUM(headcount_end_management))/2                                          AS headcount_average_management,
      SUM(hired_management)                                                         AS hired_management,
      SUM(separated_management)                                                     AS separated_management,
            
      SUM(headcount_start_contributor)                                              AS headcount_start_contributor,
      SUM(headcount_end_contributor)                                                AS headcount_end_individual_contributor,
      (SUM(headcount_start_contributor) 
        + SUM(headcount_end_contributor))/2                                         AS headcount_average_contributor,
      SUM(hired_contributor)                                                        AS hired_contributor,
      SUM(separated_contributor)                                                    AS separated_contributor,

      SUM(IFF(is_promotion = TRUE,1,0))                                             AS promotion,
      SUM(IFF(is_promotion_excluding_sdr = TRUE,1,0))                               AS promotion_excluding_sdr,
      
      SUM(percent_change_in_comp)                                                   AS percent_change_in_comp,
      SUM(percent_change_in_comp_excluding_sdr)                                     AS percent_change_in_comp_excluding_sdr,

      AVG(location_factor)                                                          AS location_factor,
      AVG(new_hire_location_factor)                                                 AS new_hire_location_factor,
      SUM(discretionary_bonus)                                                      AS discretionary_bonus, 
      AVG(tenure_months)                                                            AS tenure_months,
      SUM(tenure_zero_to_six_months)                                                AS tenure_zero_to_six_months,
      SUM(tenure_six_to_twelve_months)                                              AS tenure_six_to_twelve_months,
      SUM(tenure_one_to_two_years)                                                  AS tenure_one_to_two_years,
      SUM(tenure_two_to_four_years)                                                 AS tenure_two_to_four_years,
      SUM(tenure_four_plus_years)                                                   AS tenure_four_plus_years
      
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    group by 1,2,3,4,5,6,7,8  


    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'department_breakout'             AS breakout_type,
      department,
      division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,    
     SUM(headcount_start)                                                         AS headcount_start,
      SUM(headcount_start_excluding_sdr)                                            AS headcount_start_excluding_sdr,
      SUM(headcount_end)                                                            AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                              AS headcount_end_excluding_sdr,
      (SUM(headcount_start) + SUM(headcount_end))/2                                 AS headcount_average,
      (SUM(headcount_start_excluding_sdr) + SUM(headcount_end_excluding_sdr))/2     AS headcount_average_excluding_sdr,
      SUM(hire_count)                                                               AS hire_count,
      SUM(separation_count)                                                         AS separation_count,
      SUM(voluntary_separation)                                                     AS voluntary_separation,
      SUM(involuntary_separation)                                                   AS involuntary_separation,

      SUM(headcount_start_leader)                                                   AS headcount_start_leader,
      SUM(headcount_end_leader)                                                     AS headcount_end_leader,
      (SUM(headcount_start_leader) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_leader,
      SUM(hired_leaders)                                                            AS hired_leaders,
      SUM(separated_leaders)                                                        AS separated_leaders,

      SUM(headcount_start_manager)                                                  AS headcount_start_manager,
      SUM(headcount_end_manager)                                                    AS headcount_end_manager,
      (SUM(headcount_start_manager) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_manager,
      SUM(hired_manager)                                                            AS hired_manager,
      SUM(separated_manager)                                                        AS separated_manager,

      SUM(headcount_start_management)                                               AS headcount_start_management,
      SUM(headcount_end_management)                                                 AS headcount_end_management,
      (SUM(headcount_start_management) 
        + SUM(headcount_end_management))/2                                          AS headcount_average_management,
      SUM(hired_management)                                                         AS hired_management,
      SUM(separated_management)                                                     AS separated_management,
            
      SUM(headcount_start_contributor)                                              AS headcount_start_contributor,
      SUM(headcount_end_contributor)                                                AS headcount_end_individual_contributor,
      (SUM(headcount_start_contributor) 
        + SUM(headcount_end_contributor))/2                                         AS headcount_average_contributor,
      SUM(hired_contributor)                                                        AS hired_contributor,
      SUM(separated_contributor)                                                    AS separated_contributor,

      SUM(IFF(is_promotion = TRUE,1,0))                                             AS promotion,
      SUM(IFF(is_promotion_excluding_sdr = TRUE,1,0))                               AS promotion_excluding_sdr,
      
      SUM(percent_change_in_comp)                                                   AS percent_change_in_comp,
      SUM(percent_change_in_comp_excluding_sdr)                                     AS percent_change_in_comp_excluding_sdr,

      AVG(location_factor)                                                          AS location_factor,
      AVG(new_hire_location_factor)                                                 AS new_hire_location_factor,
      SUM(discretionary_bonus)                                                      AS discretionary_bonus, 
      AVG(tenure_months)                                                            AS tenure_months,
      SUM(tenure_zero_to_six_months)                                                AS tenure_zero_to_six_months,
      SUM(tenure_six_to_twelve_months)                                              AS tenure_six_to_twelve_months,
      SUM(tenure_one_to_two_years)                                                  AS tenure_one_to_two_years,
      SUM(tenure_two_to_four_years)                                                 AS tenure_two_to_four_years,
      SUM(tenure_four_plus_years)                                                   AS tenure_four_plus_years
      
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    group by 1,2,3,4,5,6,7,8  

    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'eeoc_breakout'                   AS breakout_type, 
      'eeoc_breakout'                   AS department,
      'eeoc_breakout'                   AS division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,  
      SUM(headcount_start)                                                         AS headcount_start,
      SUM(headcount_start_excluding_sdr)                                            AS headcount_start_excluding_sdr,
      SUM(headcount_end)                                                            AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                              AS headcount_end_excluding_sdr,
      (SUM(headcount_start) + SUM(headcount_end))/2                                 AS headcount_average,
      (SUM(headcount_start_excluding_sdr) + SUM(headcount_end_excluding_sdr))/2     AS headcount_average_excluding_sdr,
      SUM(hire_count)                                                               AS hire_count,
      SUM(separation_count)                                                         AS separation_count,
      SUM(voluntary_separation)                                                     AS voluntary_separation,
      SUM(involuntary_separation)                                                   AS involuntary_separation,

      SUM(headcount_start_leader)                                                   AS headcount_start_leader,
      SUM(headcount_end_leader)                                                     AS headcount_end_leader,
      (SUM(headcount_start_leader) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_leader,
      SUM(hired_leaders)                                                            AS hired_leaders,
      SUM(separated_leaders)                                                        AS separated_leaders,

      SUM(headcount_start_manager)                                                  AS headcount_start_manager,
      SUM(headcount_end_manager)                                                    AS headcount_end_manager,
      (SUM(headcount_start_manager) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_manager,
      SUM(hired_manager)                                                            AS hired_manager,
      SUM(separated_manager)                                                        AS separated_manager,

      SUM(headcount_start_management)                                               AS headcount_start_management,
      SUM(headcount_end_management)                                                 AS headcount_end_management,
      (SUM(headcount_start_management) 
        + SUM(headcount_end_management))/2                                          AS headcount_average_management,
      SUM(hired_management)                                                         AS hired_management,
      SUM(separated_management)                                                     AS separated_management,
            
      SUM(headcount_start_contributor)                                              AS headcount_start_contributor,
      SUM(headcount_end_contributor)                                                AS headcount_end_individual_contributor,
      (SUM(headcount_start_contributor) 
        + SUM(headcount_end_contributor))/2                                         AS headcount_average_contributor,
      SUM(hired_contributor)                                                        AS hired_contributor,
      SUM(separated_contributor)                                                    AS separated_contributor,

      SUM(IFF(is_promotion = TRUE,1,0))                                             AS promotion,
      SUM(IFF(is_promotion_excluding_sdr = TRUE,1,0))                               AS promotion_excluding_sdr,
      
      SUM(percent_change_in_comp)                                                   AS percent_change_in_comp,
      SUM(percent_change_in_comp_excluding_sdr)                                     AS percent_change_in_comp_excluding_sdr,

      AVG(location_factor)                                                          AS location_factor,
      AVG(new_hire_location_factor)                                                 AS new_hire_location_factor,
      SUM(discretionary_bonus)                                                      AS discretionary_bonus, 
      AVG(tenure_months)                                                            AS tenure_months,
      SUM(tenure_zero_to_six_months)                                                AS tenure_zero_to_six_months,
      SUM(tenure_six_to_twelve_months)                                              AS tenure_six_to_twelve_months,
      SUM(tenure_one_to_two_years)                                                  AS tenure_one_to_two_years,
      SUM(tenure_two_to_four_years)                                                 AS tenure_two_to_four_years,
      SUM(tenure_four_plus_years)                                                   AS tenure_four_plus_years
      
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    group by 1,2,3,4,5,6,7,8 

    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'division_breakout'               AS breakout_type, 
      'division_breakout'               AS department,
      division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,
      SUM(headcount_start)                                                         AS headcount_start,
      SUM(headcount_start_excluding_sdr)                                            AS headcount_start_excluding_sdr,
      SUM(headcount_end)                                                            AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                              AS headcount_end_excluding_sdr,
      (SUM(headcount_start) + SUM(headcount_end))/2                                 AS headcount_average,
      (SUM(headcount_start_excluding_sdr) + SUM(headcount_end_excluding_sdr))/2     AS headcount_average_excluding_sdr,
      SUM(hire_count)                                                               AS hire_count,
      SUM(separation_count)                                                         AS separation_count,
      SUM(voluntary_separation)                                                     AS voluntary_separation,
      SUM(involuntary_separation)                                                   AS involuntary_separation,

      SUM(headcount_start_leader)                                                   AS headcount_start_leader,
      SUM(headcount_end_leader)                                                     AS headcount_end_leader,
      (SUM(headcount_start_leader) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_leader,
      SUM(hired_leaders)                                                            AS hired_leaders,
      SUM(separated_leaders)                                                        AS separated_leaders,

      SUM(headcount_start_manager)                                                  AS headcount_start_manager,
      SUM(headcount_end_manager)                                                    AS headcount_end_manager,
      (SUM(headcount_start_manager) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_manager,
      SUM(hired_manager)                                                            AS hired_manager,
      SUM(separated_manager)                                                        AS separated_manager,

      SUM(headcount_start_management)                                               AS headcount_start_management,
      SUM(headcount_end_management)                                                 AS headcount_end_management,
      (SUM(headcount_start_management) 
        + SUM(headcount_end_management))/2                                          AS headcount_average_management,
      SUM(hired_management)                                                         AS hired_management,
      SUM(separated_management)                                                     AS separated_management,
            
      SUM(headcount_start_contributor)                                              AS headcount_start_contributor,
      SUM(headcount_end_contributor)                                                AS headcount_end_individual_contributor,
      (SUM(headcount_start_contributor) 
        + SUM(headcount_end_contributor))/2                                         AS headcount_average_contributor,
      SUM(hired_contributor)                                                        AS hired_contributor,
      SUM(separated_contributor)                                                    AS separated_contributor,

      SUM(IFF(is_promotion = TRUE,1,0))                                             AS promotion,
      SUM(IFF(is_promotion_excluding_sdr = TRUE,1,0))                               AS promotion_excluding_sdr,
      
      SUM(percent_change_in_comp)                                                   AS percent_change_in_comp,
      SUM(percent_change_in_comp_excluding_sdr)                                     AS percent_change_in_comp_excluding_sdr,

      AVG(location_factor)                                                          AS location_factor,
      AVG(new_hire_location_factor)                                                 AS new_hire_location_factor,
      SUM(discretionary_bonus)                                                      AS discretionary_bonus, 
      AVG(tenure_months)                                                            AS tenure_months,
      SUM(tenure_zero_to_six_months)                                                AS tenure_zero_to_six_months,
      SUM(tenure_six_to_twelve_months)                                              AS tenure_six_to_twelve_months,
      SUM(tenure_one_to_two_years)                                                  AS tenure_one_to_two_years,
      SUM(tenure_two_to_four_years)                                                 AS tenure_two_to_four_years,
      SUM(tenure_four_plus_years)                                                   AS tenure_four_plus_years
      
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    WHERE department IS NOT NULL
    group by 1,2,3,4,5,6,7,8 

    UNION ALL

    SELECT
      DATE_TRUNC(month,start_date)      AS month_date,
      'division_group_breakout'         AS breakout_type, 
      'division_group_breakout'         AS department,
      CASE
        WHEN division = 'Sales' 
          THEN 'Sales'
        WHEN division in ('Product', 'Engineering', 'Security')
          THEN 'Tech'
        ELSE 'Non-Tech' END             AS division,
      NULL                              AS job_role,
      NULL                              AS job_grade,
      eeoc_field_name,                                                       
      eeoc_value,
      SUM(headcount_start)                                                         AS headcount_start,
      SUM(headcount_start_excluding_sdr)                                            AS headcount_start_excluding_sdr,
      SUM(headcount_end)                                                            AS headcount_end,
      SUM(headcount_end_excluding_sdr)                                              AS headcount_end_excluding_sdr,
      (SUM(headcount_start) + SUM(headcount_end))/2                                 AS headcount_average,
      (SUM(headcount_start_excluding_sdr) + SUM(headcount_end_excluding_sdr))/2     AS headcount_average_excluding_sdr,
      SUM(hire_count)                                                               AS hire_count,
      SUM(separation_count)                                                         AS separation_count,
      SUM(voluntary_separation)                                                     AS voluntary_separation,
      SUM(involuntary_separation)                                                   AS involuntary_separation,

      SUM(headcount_start_leader)                                                   AS headcount_start_leader,
      SUM(headcount_end_leader)                                                     AS headcount_end_leader,
      (SUM(headcount_start_leader) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_leader,
      SUM(hired_leaders)                                                            AS hired_leaders,
      SUM(separated_leaders)                                                        AS separated_leaders,

      SUM(headcount_start_manager)                                                  AS headcount_start_manager,
      SUM(headcount_end_manager)                                                    AS headcount_end_manager,
      (SUM(headcount_start_manager) 
        + SUM(headcount_end_leader))/2                                              AS headcount_average_manager,
      SUM(hired_manager)                                                            AS hired_manager,
      SUM(separated_manager)                                                        AS separated_manager,

      SUM(headcount_start_management)                                               AS headcount_start_management,
      SUM(headcount_end_management)                                                 AS headcount_end_management,
      (SUM(headcount_start_management) 
        + SUM(headcount_end_management))/2                                          AS headcount_average_management,
      SUM(hired_management)                                                         AS hired_management,
      SUM(separated_management)                                                     AS separated_management,
            
      SUM(headcount_start_contributor)                                              AS headcount_start_contributor,
      SUM(headcount_end_contributor)                                                AS headcount_end_individual_contributor,
      (SUM(headcount_start_contributor) 
        + SUM(headcount_end_contributor))/2                                         AS headcount_average_contributor,
      SUM(hired_contributor)                                                        AS hired_contributor,
      SUM(separated_contributor)                                                    AS separated_contributor,

      SUM(IFF(is_promotion = TRUE,1,0))                                             AS promotion,
      SUM(IFF(is_promotion_excluding_sdr = TRUE,1,0))                               AS promotion_excluding_sdr,
      
      SUM(percent_change_in_comp)                                                   AS percent_change_in_comp,
      SUM(percent_change_in_comp_excluding_sdr)                                     AS percent_change_in_comp_excluding_sdr,

      AVG(location_factor)                                                          AS location_factor,
      AVG(new_hire_location_factor)                                                 AS new_hire_location_factor,
      SUM(discretionary_bonus)                                                      AS discretionary_bonus, 
      AVG(tenure_months)                                                            AS tenure_months,
      SUM(tenure_zero_to_six_months)                                                AS tenure_zero_to_six_months,
      SUM(tenure_six_to_twelve_months)                                              AS tenure_six_to_twelve_months,
      SUM(tenure_one_to_two_years)                                                  AS tenure_one_to_two_years,
      SUM(tenure_two_to_four_years)                                                 AS tenure_two_to_four_years,
      SUM(tenure_four_plus_years)                                                   AS tenure_four_plus_years
      
    FROM dates 
    LEFT JOIN intermediate 
      ON DATE_TRUNC(month, start_date) = DATE_TRUNC(month, date_actual)
    WHERE department IS NOT NULL
    group by 1,2,3,4,5,6,7,8 

), breakout_modified AS (

    SELECT 
      aggregated.*,
      IFF(breakout_type = 'eeoc_breakout'
          AND eeoc_field_name = 'no_eeoc', 'kpi_breakout', breakout_type)                   AS breakout_type_modified
    FROM aggregated

), final AS (

    SELECT
      md5(cast(coalesce(cast(month_date as 
    varchar
), '') || '-' || coalesce(cast(breakout_type_modified as 
    varchar
), '') || '-' || coalesce(cast(department as 
    varchar
), '') || '-' || coalesce(cast(division as 
    varchar
), '') || '-' || coalesce(cast(job_role as 
    varchar
), '') || '-' || coalesce(cast(job_grade as 
    varchar
), '') || '-' || coalesce(cast(eeoc_field_name as 
    varchar
), '') || '-' || coalesce(cast(eeoc_value as 
    varchar
), '') as 
    varchar
)) AS unique_key,
      breakout_modified.*                           
    FROM breakout_modified

)

SELECT *
FROM final17:T1b73,WITH applications AS (

    SELECT *
    FROM  {{ ref ('greenhouse_applications_source') }}
    WHERE applied_at >='2017-01-01'

), offers AS (

    SELECT * 
    FROM  {{ ref ('greenhouse_offers_source') }}

), greenhouse_application_jobs AS (

    SELECT *
    FROM  {{ ref ('greenhouse_applications_jobs_source') }}

), jobs AS (

    SELECT * 
    FROM  {{ ref ('greenhouse_jobs_source') }}

), job_req AS (

    SELECT 
      applications.application_id, 
      jobs.*,
      COUNT(jobs.job_id) OVER (PARTITION BY applications.application_id) AS total_reqs_for_job_id,
      CASE WHEN total_reqs_for_job_id = 1 
             THEN 1 
           WHEN total_reqs_for_job_id>1
             AND applications.applied_at BETWEEN jobs.job_created_at 
             AND COALESCE(jobs.job_closed_at, DATEADD(week, 3, CURRENT_DATE()))
             THEN 1
           ELSE 0 END                                                    AS job_req_to_use 
    FROM applications
    LEFT JOIN greenhouse_application_jobs 
      ON applications.application_id = greenhouse_application_jobs.application_id
    LEFT JOIN jobs 
      ON greenhouse_application_jobs.job_id = jobs.job_id
    
), greenhouse_departments AS (

    SELECT * 
    FROM  {{ ref ('greenhouse_departments_source') }}

), greenhouse_sources AS (

    SELECT * 
    FROM  {{ ref ('greenhouse_sources_source') }}

), greenhouse_sourcer AS (

    SELECT * 
    FROM {{ ref ('greenhouse_sourcer') }}

), candidates AS (

    SELECT * 
    FROM {{ ref ('greenhouse_candidates_source') }}

), rejection_reasons AS (
    
    SELECT * 
    FROM {{ ref ('greenhouse_rejection_reasons_source') }}

), cost_center AS (

    SELECT DISTINCT division, department
    FROM {{ref('cost_center_division_department_mapping_current')}}

), bamboo AS (

    SELECT greenhouse_candidate_id, hire_date 
    FROM {{ref('bamboohr_id_employee_number_mapping')}}
    WHERE greenhouse_candidate_id IS NOT NULL

), final AS (

    SELECT 
      {{ dbt_utils.surrogate_key(['applications.application_id', 
                                  'offers.offer_id',
                                  'applications.candidate_id',
                                  'job_req.job_id',
                                  'job_req.requisition_id']) }}                         AS unique_key,
        applications.application_id, 
        offers.offer_id,
        applications.candidate_id, 
        job_req.job_id,
        job_req.requisition_id, 
        applications.prospect                                                           AS is_prospect,
        applications.application_status,
        applications.stage_name                                                         AS current_stage_name, 
        offers.offer_status,
        applications.applied_at                                                         AS application_date,
        offers.sent_at                                                                  AS offer_sent_date,
        offers.resolved_at                                                              AS offer_resolved_date,
        offers.start_date                                                               AS candidate_target_hire_date,
        applications.rejected_at                                                        AS rejected_date,
        job_req.job_name,
        greenhouse_departments.department_name                                          AS department_name,
        cost_center.division                                                            AS division,                                             
        CASE WHEN lower(greenhouse_departments.department_name) LIKE '%sales%' 
               THEN 'Sales'
             WHEN greenhouse_departments.department_name = 'Dev' 
               THEN 'Engineering'
             WHEN greenhouse_departments.department_name = 'Customer Success Management' 
               THEN 'Sales'
             ELSE COALESCE(cost_center.division, 
                    greenhouse_departments.department_name) END                         AS division_modified,     
        greenhouse_sources.source_name                                                  AS source_name,
        greenhouse_sources.source_type                                                  AS source_type,
        CASE WHEN TRIM(source_name) IN ('Sales Bootcamp','Social media presence','Greenhouse','Maildrop','Reddit',
                              'Slack Groups','AmazingHiring','AngelList','Google','Greenhouse Sourcing',
                              'LinkedIn (Prospecting)','SocialReferral','Talent Community','Viren - LinkedIn',
                              'Referral', 'LinkedIn (Social Media)','Twitter') THEN 1
            WHEN TRIM(source_type) = 'In person event' THEN 1 ELSE 0 END                AS is_outbound,
        CASE WHEN TRIM(source_name) IN ('Greenhouse','Maildrop','Reddit','Slack Groups','AmazingHiring','Google',
                             'Greenhouse Sourcing','LinkedIn (Prospecting)','Talent Community',
                             'Viren - LinkedIn','LinkedIn (Social Media)','Twitter') THEN 1
            WHEN TRIM(source_type) = 'In person event' THEN 1 ELSE 0 END                AS is_sourced,
        greenhouse_sourcer.sourcer_name,
        candidates.candidate_recruiter,
        candidates.candidate_coordinator,
        IFF(greenhouse_sources.source_name ='LinkedIn (Prospecting)',True, False)       AS sourced_candidate,
        rejection_reasons.rejection_reason_name,
        rejection_reasons.rejection_reason_type,
        job_req.job_status                                                              AS current_job_req_status,
        IFF(offers.offer_status ='accepted',
                DATEDIFF('day', applications.applied_at, offers.resolved_at),
                NULL)                                                                   AS time_to_offer,
        IFF(bamboo.hire_date IS NOT NULL, TRUE, FALSE)                                  AS is_hired_in_bamboo
    FROM applications 
    LEFT JOIN job_req
      ON job_req.application_id = applications.application_id
      AND job_req.job_req_to_use = 1 
    LEFT JOIN  greenhouse_departments 
      ON job_req.department_id = greenhouse_departments.department_id
      AND job_req.organization_id = greenhouse_departments.organization_id
    LEFT JOIN greenhouse_sources 
      ON greenhouse_sources.source_id = applications.source_id 
    LEFT JOIN offers 
      ON applications.application_id = offers.application_id
    LEFT JOIN candidates
      ON applications.candidate_id = candidates.candidate_id  
    LEFT JOIN greenhouse_sourcer
      ON applications.application_id = greenhouse_sourcer.application_id
    LEFT JOIN rejection_reasons
      ON rejection_reasons.rejection_reason_id = applications.rejection_reason_id
    LEFT JOIN cost_center
      ON TRIM(greenhouse_departments.department_name)=TRIM(cost_center.department)
    LEFT JOIN bamboo
      ON bamboo.greenhouse_candidate_id = applications.candidate_id

)

SELECT *
FROM final18:T1be4,WITH applications AS (

    SELECT *
    FROM  "PREP".greenhouse.greenhouse_applications_source
    WHERE applied_at >='2017-01-01'

), offers AS (

    SELECT * 
    FROM  "PREP".greenhouse.greenhouse_offers_source

), greenhouse_application_jobs AS (

    SELECT *
    FROM  "PREP".greenhouse.greenhouse_applications_jobs_source

), jobs AS (

    SELECT * 
    FROM  "PREP".greenhouse.greenhouse_jobs_source

), job_req AS (

    SELECT 
      applications.application_id, 
      jobs.*,
      COUNT(jobs.job_id) OVER (PARTITION BY applications.application_id) AS total_reqs_for_job_id,
      CASE WHEN total_reqs_for_job_id = 1 
             THEN 1 
           WHEN total_reqs_for_job_id>1
             AND applications.applied_at BETWEEN jobs.job_created_at 
             AND COALESCE(jobs.job_closed_at, DATEADD(week, 3, CURRENT_DATE()))
             THEN 1
           ELSE 0 END                                                    AS job_req_to_use 
    FROM applications
    LEFT JOIN greenhouse_application_jobs 
      ON applications.application_id = greenhouse_application_jobs.application_id
    LEFT JOIN jobs 
      ON greenhouse_application_jobs.job_id = jobs.job_id
    
), greenhouse_departments AS (

    SELECT * 
    FROM  "PREP".greenhouse.greenhouse_departments_source

), greenhouse_sources AS (

    SELECT * 
    FROM  "PREP".greenhouse.greenhouse_sources_source

), greenhouse_sourcer AS (

    SELECT * 
    FROM "PREP".sensitive.greenhouse_sourcer

), candidates AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_candidates_source

), rejection_reasons AS (
    
    SELECT * 
    FROM "PREP".greenhouse.greenhouse_rejection_reasons_source

), cost_center AS (

    SELECT DISTINCT division, department
    FROM "PROD".legacy.cost_center_division_department_mapping_current

), bamboo AS (

    SELECT greenhouse_candidate_id, hire_date 
    FROM "PREP".sensitive.bamboohr_id_employee_number_mapping
    WHERE greenhouse_candidate_id IS NOT NULL

), final AS (

    SELECT 
      md5(cast(coalesce(cast(applications.application_id as 
    varchar
), '') || '-' || coalesce(cast(offers.offer_id as 
    varchar
), '') || '-' || coalesce(cast(applications.candidate_id as 
    varchar
), '') || '-' || coalesce(cast(job_req.job_id as 
    varchar
), '') || '-' || coalesce(cast(job_req.requisition_id as 
    varchar
), '') as 
    varchar
))                         AS unique_key,
        applications.application_id, 
        offers.offer_id,
        applications.candidate_id, 
        job_req.job_id,
        job_req.requisition_id, 
        applications.prospect                                                           AS is_prospect,
        applications.application_status,
        applications.stage_name                                                         AS current_stage_name, 
        offers.offer_status,
        applications.applied_at                                                         AS application_date,
        offers.sent_at                                                                  AS offer_sent_date,
        offers.resolved_at                                                              AS offer_resolved_date,
        offers.start_date                                                               AS candidate_target_hire_date,
        applications.rejected_at                                                        AS rejected_date,
        job_req.job_name,
        greenhouse_departments.department_name                                          AS department_name,
        cost_center.division                                                            AS division,                                             
        CASE WHEN lower(greenhouse_departments.department_name) LIKE '%sales%' 
               THEN 'Sales'
             WHEN greenhouse_departments.department_name = 'Dev' 
               THEN 'Engineering'
             WHEN greenhouse_departments.department_name = 'Customer Success Management' 
               THEN 'Sales'
             ELSE COALESCE(cost_center.division, 
                    greenhouse_departments.department_name) END                         AS division_modified,     
        greenhouse_sources.source_name                                                  AS source_name,
        greenhouse_sources.source_type                                                  AS source_type,
        CASE WHEN TRIM(source_name) IN ('Sales Bootcamp','Social media presence','Greenhouse','Maildrop','Reddit',
                              'Slack Groups','AmazingHiring','AngelList','Google','Greenhouse Sourcing',
                              'LinkedIn (Prospecting)','SocialReferral','Talent Community','Viren - LinkedIn',
                              'Referral', 'LinkedIn (Social Media)','Twitter') THEN 1
            WHEN TRIM(source_type) = 'In person event' THEN 1 ELSE 0 END                AS is_outbound,
        CASE WHEN TRIM(source_name) IN ('Greenhouse','Maildrop','Reddit','Slack Groups','AmazingHiring','Google',
                             'Greenhouse Sourcing','LinkedIn (Prospecting)','Talent Community',
                             'Viren - LinkedIn','LinkedIn (Social Media)','Twitter') THEN 1
            WHEN TRIM(source_type) = 'In person event' THEN 1 ELSE 0 END                AS is_sourced,
        greenhouse_sourcer.sourcer_name,
        candidates.candidate_recruiter,
        candidates.candidate_coordinator,
        IFF(greenhouse_sources.source_name ='LinkedIn (Prospecting)',True, False)       AS sourced_candidate,
        rejection_reasons.rejection_reason_name,
        rejection_reasons.rejection_reason_type,
        job_req.job_status                                                              AS current_job_req_status,
        IFF(offers.offer_status ='accepted',
                DATEDIFF('day', applications.applied_at, offers.resolved_at),
                NULL)                                                                   AS time_to_offer,
        IFF(bamboo.hire_date IS NOT NULL, TRUE, FALSE)                                  AS is_hired_in_bamboo
    FROM applications 
    LEFT JOIN job_req
      ON job_req.application_id = applications.application_id
      AND job_req.job_req_to_use = 1 
    LEFT JOIN  greenhouse_departments 
      ON job_req.department_id = greenhouse_departments.department_id
      AND job_req.organization_id = greenhouse_departments.organization_id
    LEFT JOIN greenhouse_sources 
      ON greenhouse_sources.source_id = applications.source_id 
    LEFT JOIN offers 
      ON applications.application_id = offers.application_id
    LEFT JOIN candidates
      ON applications.candidate_id = candidates.candidate_id  
    LEFT JOIN greenhouse_sourcer
      ON applications.application_id = greenhouse_sourcer.application_id
    LEFT JOIN rejection_reasons
      ON rejection_reasons.rejection_reason_id = applications.rejection_reason_id
    LEFT JOIN cost_center
      ON TRIM(greenhouse_departments.department_name)=TRIM(cost_center.department)
    LEFT JOIN bamboo
      ON bamboo.greenhouse_candidate_id = applications.candidate_id

)

SELECT *
FROM final19:Td6b,WITH mapping as (

    SELECT *
    FROM {{ref('bamboohr_id_employee_number_mapping')}}

), bamboohr_directory AS (

    SELECT *
    FROM {{ ref ('blended_directory_source') }}
    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id ORDER BY uploaded_at DESC) =1 

), department_info as (

    SELECT 
      employee_id,
      LAST_VALUE(job_title) RESPECT NULLS 
          OVER (PARTITION BY employee_id ORDER BY effective_date , job_sequence) AS last_job_title,
      LAST_VALUE(reports_to) RESPECT NULLS
          OVER (PARTITION BY employee_id ORDER BY effective_date, job_sequence) AS last_supervisor,
      LAST_VALUE(department) RESPECT NULLS
          OVER (PARTITION BY employee_id ORDER BY effective_date, job_sequence) AS last_department,
      LAST_VALUE(division) RESPECT NULLS
          OVER  (PARTITION BY employee_id ORDER BY effective_date, job_sequence) AS last_division       
    FROM {{ ref ('blended_job_info_source') }}

), cost_center AS (

    SELECT
      employee_id,
      LAST_VALUE(cost_center) RESPECT NULLS
          OVER ( PARTITION BY employee_id ORDER BY effective_date) AS last_cost_center
    FROM {{ ref ('bamboohr_job_role') }}

), location_factor as (

    SELECT 
      DISTINCT bamboo_employee_number,
      FIRST_VALUE(location_factor) OVER ( PARTITION BY bamboo_employee_number ORDER BY valid_from) AS hire_location_factor
    FROM {{ ref('employee_location_factor_snapshots') }}

), initial_hire AS (
    
    SELECT 
      employee_id,
      effective_date as hire_date
    FROM {{ref('blended_employment_status_source')}}
    WHERE employment_status != 'Terminated'
    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id ORDER BY effective_date) = 1

), rehire AS (

    SELECT 
      employee_id,
      is_rehire,
      valid_from_date as rehire_date
    FROM {{ref('bamboohr_employment_status_xf')}}
    WHERE is_rehire='True'

), final AS (

    SELECT 
      DISTINCT mapping.employee_id,
      mapping.employee_number,
      mapping.first_name,
      mapping.last_name,
      mapping.first_name || ' ' || mapping.last_name                            AS full_name,
      mapping.region_modified                                                   AS region_modified,
      mapping.country                                                           AS country,
      bamboohr_directory.work_email                                             AS last_work_email,
      IFF(rehire.is_rehire = 'True', initial_hire.hire_date, mapping.hire_date) AS hire_date,
      rehire.rehire_date,
      mapping.termination_date,
      mapping.first_inactive_date,
      department_info.last_job_title,
      department_info.last_supervisor,
      department_info.last_department,
      department_info.last_division,
      cost_center.last_cost_center,
      location_factor.hire_location_factor,
      mapping.greenhouse_candidate_id
    FROM mapping
    LEFT JOIN bamboohr_directory
      ON bamboohr_directory.employee_id = mapping.employee_id
    LEFT JOIN department_info
      ON mapping.employee_id = department_info.employee_id
    LEFT JOIN location_factor
      ON location_factor.bamboo_employee_number = mapping.employee_number
    LEFT JOIN initial_hire 
      ON initial_hire.employee_id = mapping.employee_id
    LEFT JOIN rehire
      ON rehire.employee_id = mapping.employee_id
    LEFT JOIN cost_center
      ON cost_center.employee_id = mapping.employee_id  

)

SELECT * 
FROM final1a:Td84,WITH mapping as (

    SELECT *
    FROM "PREP".sensitive.bamboohr_id_employee_number_mapping

), bamboohr_directory AS (

    SELECT *
    FROM "PREP".workday.blended_directory_source
    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id ORDER BY uploaded_at DESC) =1 

), department_info as (

    SELECT 
      employee_id,
      LAST_VALUE(job_title) RESPECT NULLS 
          OVER (PARTITION BY employee_id ORDER BY effective_date , job_sequence) AS last_job_title,
      LAST_VALUE(reports_to) RESPECT NULLS
          OVER (PARTITION BY employee_id ORDER BY effective_date, job_sequence) AS last_supervisor,
      LAST_VALUE(department) RESPECT NULLS
          OVER (PARTITION BY employee_id ORDER BY effective_date, job_sequence) AS last_department,
      LAST_VALUE(division) RESPECT NULLS
          OVER  (PARTITION BY employee_id ORDER BY effective_date, job_sequence) AS last_division       
    FROM "PREP".workday.blended_job_info_source

), cost_center AS (

    SELECT
      employee_id,
      LAST_VALUE(cost_center) RESPECT NULLS
          OVER ( PARTITION BY employee_id ORDER BY effective_date) AS last_cost_center
    FROM "PREP".sensitive.bamboohr_job_role

), location_factor as (

    SELECT 
      DISTINCT bamboo_employee_number,
      FIRST_VALUE(location_factor) OVER ( PARTITION BY bamboo_employee_number ORDER BY valid_from) AS hire_location_factor
    FROM "PREP".sensitive.employee_location_factor_snapshots

), initial_hire AS (
    
    SELECT 
      employee_id,
      effective_date as hire_date
    FROM "PREP".workday.blended_employment_status_source
    WHERE employment_status != 'Terminated'
    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id ORDER BY effective_date) = 1

), rehire AS (

    SELECT 
      employee_id,
      is_rehire,
      valid_from_date as rehire_date
    FROM "PREP".sensitive.bamboohr_employment_status_xf
    WHERE is_rehire='True'

), final AS (

    SELECT 
      DISTINCT mapping.employee_id,
      mapping.employee_number,
      mapping.first_name,
      mapping.last_name,
      mapping.first_name || ' ' || mapping.last_name                            AS full_name,
      mapping.region_modified                                                   AS region_modified,
      mapping.country                                                           AS country,
      bamboohr_directory.work_email                                             AS last_work_email,
      IFF(rehire.is_rehire = 'True', initial_hire.hire_date, mapping.hire_date) AS hire_date,
      rehire.rehire_date,
      mapping.termination_date,
      mapping.first_inactive_date,
      department_info.last_job_title,
      department_info.last_supervisor,
      department_info.last_department,
      department_info.last_division,
      cost_center.last_cost_center,
      location_factor.hire_location_factor,
      mapping.greenhouse_candidate_id
    FROM mapping
    LEFT JOIN bamboohr_directory
      ON bamboohr_directory.employee_id = mapping.employee_id
    LEFT JOIN department_info
      ON mapping.employee_id = department_info.employee_id
    LEFT JOIN location_factor
      ON location_factor.bamboo_employee_number = mapping.employee_number
    LEFT JOIN initial_hire 
      ON initial_hire.employee_id = mapping.employee_id
    LEFT JOIN rehire
      ON rehire.employee_id = mapping.employee_id
    LEFT JOIN cost_center
      ON cost_center.employee_id = mapping.employee_id  

)

SELECT * 
FROM final1b:T52a,WITH dim_date AS (

    SELECT *
    FROM {{ ref('dim_date') }}

), separations AS (

    SELECT
      employee_number,
      employee_id,
      hire_date,
      date_actual                       AS separation_date, 
      DATE_TRUNC(month, date_actual)    AS separation_month, 
      division_mapped_current           AS division, 
      department_modified               AS department,
      job_title                         AS job_title
    FROM {{ ref('employee_directory_intermediate') }}
    WHERE is_termination_date = TRUE
      AND date_actual>='2020-02-01'

), separation_type AS (

    SELECT *
    FROM {{ ref('blended_employment_status_source') }}
    WHERE LOWER(employment_status) = 'terminated'

), eeoc AS (

    SELECT *
    FROM {{ ref('bamboohr_id_employee_number_mapping') }}

), final AS (

    SELECT 
      dim_date.fiscal_year,
      separations.*,
      termination_type,
      eeoc.gender,
      eeoc.ethnicity,
      eeoc.region
    FROM separations
    LEFT JOIN dim_date
      ON separations.separation_date = dim_date.date_actual
    LEFT JOIN separation_type 
      ON separations.employee_id = separation_type.employee_id
      AND separations.separation_date = separation_type.effective_date
    LEFT JOIN eeoc 
      ON separations.employee_id = eeoc.employee_id

)

SELECT *
FROM final1c:T535,WITH dim_date AS (

    SELECT *
    FROM "PROD".common.dim_date

), separations AS (

    SELECT
      employee_number,
      employee_id,
      hire_date,
      date_actual                       AS separation_date, 
      DATE_TRUNC(month, date_actual)    AS separation_month, 
      division_mapped_current           AS division, 
      department_modified               AS department,
      job_title                         AS job_title
    FROM "PREP".sensitive.employee_directory_intermediate
    WHERE is_termination_date = TRUE
      AND date_actual>='2020-02-01'

), separation_type AS (

    SELECT *
    FROM "PREP".workday.blended_employment_status_source
    WHERE LOWER(employment_status) = 'terminated'

), eeoc AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_id_employee_number_mapping

), final AS (

    SELECT 
      dim_date.fiscal_year,
      separations.*,
      termination_type,
      eeoc.gender,
      eeoc.ethnicity,
      eeoc.region
    FROM separations
    LEFT JOIN dim_date
      ON separations.separation_date = dim_date.date_actual
    LEFT JOIN separation_type 
      ON separations.employee_id = separation_type.employee_id
      AND separations.separation_date = separation_type.effective_date
    LEFT JOIN eeoc 
      ON separations.employee_id = eeoc.employee_id

)

SELECT *
FROM final1d:T8b8,{{ config({
    "schema": "legacy",
    "database": env_var('SNOWFLAKE_PROD_DATABASE'),
    })
}}

WITH job_info AS (

    SELECT *
    FROM {{ ref ('bamboohr_job_info') }}

), bamboo_mapping AS (

    SELECT *
    FROM {{ ref ('bamboohr_id_employee_number_mapping') }}

), job_role AS (

    SELECT *
    FROM {{ ref ('bamboohr_job_role') }}

), department_name_changes AS (

    SELECT  
      TRIM(old_department_name) AS old_department_name,
      TRIM(new_department_name) AS new_department_name,
      change_effective_date
    FROM {{ref ('department_name_changes')}}

), current_division_department_mapping AS (

    SELECT DISTINCT 
      division, 
      department,
      MAX(effective_date) AS max_effective_date
    FROM bamboo_mapping
    LEFT JOIN job_info
      ON job_info.employee_id = bamboo_mapping.employee_id
    WHERE CURRENT_DATE() BETWEEN effective_date AND COALESCE(effective_end_date, CURRENT_DATE())
      AND bamboo_mapping.termination_date IS NULL
    GROUP BY 1,2
    QUALIFY ROW_NUMBER() OVER (PARTITION BY department ORDER BY max_effective_date DESC) =1 
    --to account for individuals that have not been transistioned to new division  

)

SELECT 
  job_info.*, 
  IFF(job_info.department = 'Meltano', 'Engineering',
      COALESCE(current_division_department_mapping.division, job_info.division))               AS division_mapped_current,
  {{bamboohr_division_grouping(division=
    'COALESCE(current_division_department_mapping.division, job_info.division)')}}             AS division_grouping,      
  COALESCE(department_name_changes.new_department_name, job_info.department)                   AS department_modified,  
  {{bamboohr_department_grouping(department='department_modified')}}                           AS department_grouping,  
  bamboo_mapping.termination_date,
  bamboo_mapping.first_inactive_date  
FROM bamboo_mapping
LEFT JOIN job_info 
  ON job_info.employee_id = bamboo_mapping.employee_id
LEFT JOIN department_name_changes
  ON job_info.department = department_name_changes.old_department_name  
LEFT JOIN current_division_department_mapping
  ON current_division_department_mapping.department = COALESCE(department_name_changes.new_department_name, job_info.department)1e:Te25,

WITH job_info AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_job_info

), bamboo_mapping AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_id_employee_number_mapping

), job_role AS (

    SELECT *
    FROM "PREP".sensitive.bamboohr_job_role

), department_name_changes AS (

    SELECT  
      TRIM(old_department_name) AS old_department_name,
      TRIM(new_department_name) AS new_department_name,
      change_effective_date
    FROM "PROD".legacy.department_name_changes

), current_division_department_mapping AS (

    SELECT DISTINCT 
      division, 
      department,
      MAX(effective_date) AS max_effective_date
    FROM bamboo_mapping
    LEFT JOIN job_info
      ON job_info.employee_id = bamboo_mapping.employee_id
    WHERE CURRENT_DATE() BETWEEN effective_date AND COALESCE(effective_end_date, CURRENT_DATE())
      AND bamboo_mapping.termination_date IS NULL
    GROUP BY 1,2
    QUALIFY ROW_NUMBER() OVER (PARTITION BY department ORDER BY max_effective_date DESC) =1 
    --to account for individuals that have not been transistioned to new division  

)

SELECT 
  job_info.*, 
  IFF(job_info.department = 'Meltano', 'Engineering',
      COALESCE(current_division_department_mapping.division, job_info.division))               AS division_mapped_current,
  CASE WHEN COALESCE(current_division_department_mapping.division, job_info.division) IN ('Engineering', 'Meltano') THEN 'Engineering/Meltano'
           WHEN COALESCE(current_division_department_mapping.division, job_info.division) IN ('CEO', 'People Group') THEN 'People Group/CEO'
           ELSE COALESCE(current_division_department_mapping.division, job_info.division) END             AS division_grouping,      
  COALESCE(department_name_changes.new_department_name, job_info.department)                   AS department_modified,  
  CASE WHEN department_modified IN ('Awareness', 'Communications', 'Community Relations', 'Owned Events')
           THEN 'Awareness, Communications, Community Relations, Owned Events'
         WHEN department_modified IN ('Brand & Digital Design', 'Content Marketing', 'Inbound Marketing')
           THEN 'Brand & Digital Design, Content Marketing, Inbound Marketing'
         WHEN department_modified IN ('Campaigns', 'Digital Marketing', 'Partner Marketing')
           THEN 'Campaigns, Digital Marketing, Partner Marketing'
         WHEN department_modified IN ('Consulting Delivery', 'Customer Success', 'Education Delivery', 'Practice Management')
          THEN 'Consulting Delivery, Customer Success, Education Delivery, Practice Management'
         WHEN department_modified IN ('Field Marketing', 'Marketing Ops')
          THEN 'Field Marketing, Marketing Ops'
         WHEN department_modified IN ('People Success', 'CEO')
          THEN 'People Success, CEO'
         WHEN department_modified IN ('Product Management', 'Product Strategy')
           THEN 'Product Management, Product Strategy'
         WHEN department_modified in ('Field Ops - Child','Field Operations')
             THEN 'Field Ops - Child, Field Operations'
         ELSE department_modified 
         END                           AS department_grouping,  
  bamboo_mapping.termination_date,
  bamboo_mapping.first_inactive_date  
FROM bamboo_mapping
LEFT JOIN job_info 
  ON job_info.employee_id = bamboo_mapping.employee_id
LEFT JOIN department_name_changes
  ON job_info.department = department_name_changes.old_department_name  
LEFT JOIN current_division_department_mapping
  ON current_division_department_mapping.department = COALESCE(department_name_changes.new_department_name, job_info.department)1f:Tb06,WITH recruiting_xf AS (
    
    SELECT * 
    FROM {{ref('greenhouse_recruiting_xf')}} 
    WHERE offer_id IS NOT NULL
    AND offer_status <>'rejected'
  
), greenhouse_offer_custom_fields as (

    SELECT 
        offer_id, 
        offer_custom_field,
        offer_custom_field_display_value                                                    AS candidate_country
    FROM {{ref('greenhouse_offer_custom_fields_source')}}
    WHERE offer_custom_field = 'Candidate Country'

), zuora_regions AS (

    SELECT *
    FROM {{ref('zuora_country_geographic_region')}}

), bamboohr AS (

    SELECT 
      greenhouse_candidate_id, 
      IFF(region = 'JAPAC','Asia Pacific', region) AS region
    FROM  {{ref('bamboohr_id_employee_number_mapping')}} 

), location_cleaned AS (

    SELECT
      offer_id,
      candidate_country,
      IFF(LOWER(LEFT(candidate_country,12))= 'united state', 
          'North America',
          COALESCE(z1.geographic_region,z2.geographic_region, z3.geographic_region, candidate_country))       AS geographic_region      
    FROM greenhouse_offer_custom_fields
    LEFT JOIN zuora_regions z1 
      ON LOWER(z1.country_name_in_zuora) = LOWER(greenhouse_offer_custom_fields.candidate_country)
    LEFT JOIN zuora_regions z2 
      ON LOWER(z2.iso_alpha_2_code) = LOWER(greenhouse_offer_custom_fields.candidate_country)
    LEFT JOIN zuora_regions z3 
      ON LOWER(z3.iso_alpha_3_code) = LOWER(greenhouse_offer_custom_fields.candidate_country) 

), data_set AS (

    SELECT 
      recruiting_xf.offer_id,
      application_status, 
      current_stage_name                               AS stage_name, 
      offer_status,
      offer_sent_date,
      offer_resolved_date,
      candidate_target_hire_date                        AS start_date,
      candidate_country,
      geographic_region,
      bamboohr.region as bh_region,
      CASE WHEN geographic_region IN ('North America', 'South America') 
            THEN geographic_region
           ELSE COALESCE(bh_region, geographic_region) END AS region_final
    FROM recruiting_xf
    INNER JOIN bamboohr
      ON recruiting_xf.candidate_id = bamboohr.greenhouse_candidate_id
    INNER JOIN location_cleaned
      ON location_cleaned.offer_id = recruiting_xf.offer_id  

), final AS (

    SELECT 
      DATE_TRUNC(WEEK,start_date)                               AS start_week,
      region_final                                              AS geographic_region,
      COUNT(offer_id)                                           AS candidates_estimated_to_start,
      SUM(IFF(offer_status = 'accepted',1,0))                   AS accepted_offers_to_start
    FROM data_set
    WHERE geographic_region IN ('North America', 'South America', 'EMEA','Asia Pacific', 'Americas')
    GROUP BY 1,2
    ORDER BY 1 DESC

)

SELECT * 
FROM final20:Tb1c,WITH recruiting_xf AS (
    
    SELECT * 
    FROM "PREP".sensitive.greenhouse_recruiting_xf 
    WHERE offer_id IS NOT NULL
    AND offer_status <>'rejected'
  
), greenhouse_offer_custom_fields as (

    SELECT 
        offer_id, 
        offer_custom_field,
        offer_custom_field_display_value                                                    AS candidate_country
    FROM "PREP".greenhouse.greenhouse_offer_custom_fields_source
    WHERE offer_custom_field = 'Candidate Country'

), zuora_regions AS (

    SELECT *
    FROM "PROD".legacy.zuora_country_geographic_region

), bamboohr AS (

    SELECT 
      greenhouse_candidate_id, 
      IFF(region = 'JAPAC','Asia Pacific', region) AS region
    FROM  "PREP".sensitive.bamboohr_id_employee_number_mapping 

), location_cleaned AS (

    SELECT
      offer_id,
      candidate_country,
      IFF(LOWER(LEFT(candidate_country,12))= 'united state', 
          'North America',
          COALESCE(z1.geographic_region,z2.geographic_region, z3.geographic_region, candidate_country))       AS geographic_region      
    FROM greenhouse_offer_custom_fields
    LEFT JOIN zuora_regions z1 
      ON LOWER(z1.country_name_in_zuora) = LOWER(greenhouse_offer_custom_fields.candidate_country)
    LEFT JOIN zuora_regions z2 
      ON LOWER(z2.iso_alpha_2_code) = LOWER(greenhouse_offer_custom_fields.candidate_country)
    LEFT JOIN zuora_regions z3 
      ON LOWER(z3.iso_alpha_3_code) = LOWER(greenhouse_offer_custom_fields.candidate_country) 

), data_set AS (

    SELECT 
      recruiting_xf.offer_id,
      application_status, 
      current_stage_name                               AS stage_name, 
      offer_status,
      offer_sent_date,
      offer_resolved_date,
      candidate_target_hire_date                        AS start_date,
      candidate_country,
      geographic_region,
      bamboohr.region as bh_region,
      CASE WHEN geographic_region IN ('North America', 'South America') 
            THEN geographic_region
           ELSE COALESCE(bh_region, geographic_region) END AS region_final
    FROM recruiting_xf
    INNER JOIN bamboohr
      ON recruiting_xf.candidate_id = bamboohr.greenhouse_candidate_id
    INNER JOIN location_cleaned
      ON location_cleaned.offer_id = recruiting_xf.offer_id  

), final AS (

    SELECT 
      DATE_TRUNC(WEEK,start_date)                               AS start_week,
      region_final                                              AS geographic_region,
      COUNT(offer_id)                                           AS candidates_estimated_to_start,
      SUM(IFF(offer_status = 'accepted',1,0))                   AS accepted_offers_to_start
    FROM data_set
    WHERE geographic_region IN ('North America', 'South America', 'EMEA','Asia Pacific', 'Americas')
    GROUP BY 1,2
    ORDER BY 1 DESC

)

SELECT * 
FROM final21:T92e,{{ simple_cte([
    ('bamboohr_mapping','bamboohr_id_employee_number_mapping'),
    ('applications','greenhouse_applications_source'),
    ('sources','greenhouse_sources_source'),
    ('offers','greenhouse_offers_source'),
    ('openings','greenhouse_openings_source'),
    ('departments','wk_prep_greenhouse_departments'),
    ('application_jobs','greenhouse_applications_jobs_source'),
    ('jobs','greenhouse_jobs_source'),
    ('candidates','greenhouse_candidates_source')
])}}

, job_departments AS (

    SELECT *
    FROM {{ ref('greenhouse_jobs_departments_source') }}
    -- Table is many to many (job_id to department_id) with the lowest level created first
    QUALIFY row_number() OVER (PARTITION BY job_id ORDER BY job_department_created_at ASC) = 1
    
)

SELECT
  applications.candidate_id,
  applications.application_id,
  bamboohr_mapping.region,
  jobs.job_id,
  jobs.job_name,
  candidates.candidate_recruiter,
  sources.source_name,
  sources.source_type,
  applications.applied_at,
  openings.job_opened_at            AS job_opening_opened_at,
  openings.job_closed_at            AS job_opening_closed_at,
  openings.target_start_date        AS job_opening_target_start_date,
  offers.sent_at                    AS offer_sent_at,
  offers.resolved_at                AS offer_accepted_at,
  departments.department_name       AS greenhouse_department_name,
  departments.level_1               AS greenhouse_department_level_1,
  departments.level_2               AS greenhouse_department_level_2,
  departments.level_3               AS greenhouse_department_level_3
FROM offers
LEFT JOIN applications
  ON offers.application_id = applications.application_id
LEFT JOIN sources
  ON applications.source_id = sources.source_id
LEFT JOIN openings
  ON offers.application_id = openings.hired_application_id
LEFT JOIN bamboohr_mapping
  ON applications.candidate_id = bamboohr_mapping.greenhouse_candidate_id
LEFT JOIN application_jobs
  ON offers.application_id = application_jobs.application_id
LEFT JOIN job_departments
  ON application_jobs.job_id = job_departments.job_id
LEFT JOIN departments
  ON job_departments.department_id = departments.department_id
LEFT JOIN jobs
  ON application_jobs.job_id = jobs.job_id
LEFT JOIN candidates
  ON applications.candidate_id = candidates.candidate_id
WHERE offers.offer_status = 'accepted'22:Ted2,

WITH  __dbt__cte__wk_prep_greenhouse_departments as (


WITH source AS (
  SELECT
    *
  FROM "PREP".greenhouse.greenhouse_departments_source 
),
  greenhouse_departments (department_name, department_id, hierarchy_id, hierarchy_name) AS (
    SELECT
      department_name,
      department_id,
      TO_ARRAY(department_id)   AS hierarchy_id,
      TO_ARRAY(department_name) AS hierarchy_name
    FROM source
    WHERE parent_id IS NULL
    UNION ALL
    SELECT
      iteration.department_name,
      iteration.department_id,
      ARRAY_APPEND(anchor.hierarchy_id, iteration.department_id)     AS hierarchy_id,
      ARRAY_APPEND(anchor.hierarchy_name, iteration.department_name) AS hierarchy_name
    FROM source iteration
    INNER JOIN greenhouse_departments anchor
      ON iteration.parent_id = anchor.department_id
  )
SELECT
  department_name,
  department_id,
  ARRAY_SIZE(hierarchy_id)   AS hierarchy_level,
  hierarchy_id,
  hierarchy_name,
  hierarchy_name[0]::VARCHAR AS level_1,
  hierarchy_name[1]::VARCHAR AS level_2,
  hierarchy_name[2]::VARCHAR AS level_3
FROM greenhouse_departments
),bamboohr_mapping AS (

    SELECT * 
    FROM "PREP".sensitive.bamboohr_id_employee_number_mapping

), applications AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_applications_source

), sources AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_sources_source

), offers AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_offers_source

), openings AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_openings_source

), departments AS (

    SELECT * 
    FROM __dbt__cte__wk_prep_greenhouse_departments

), application_jobs AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_applications_jobs_source

), jobs AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_jobs_source

), candidates AS (

    SELECT * 
    FROM "PREP".greenhouse.greenhouse_candidates_source

)

, job_departments AS (

    SELECT *
    FROM "PREP".greenhouse.greenhouse_jobs_departments_source
    -- Table is many to many (job_id to department_id) with the lowest level created first
    QUALIFY row_number() OVER (PARTITION BY job_id ORDER BY job_department_created_at ASC) = 1
    
)

SELECT
  applications.candidate_id,
  applications.application_id,
  bamboohr_mapping.region,
  jobs.job_id,
  jobs.job_name,
  candidates.candidate_recruiter,
  sources.source_name,
  sources.source_type,
  applications.applied_at,
  openings.job_opened_at            AS job_opening_opened_at,
  openings.job_closed_at            AS job_opening_closed_at,
  openings.target_start_date        AS job_opening_target_start_date,
  offers.sent_at                    AS offer_sent_at,
  offers.resolved_at                AS offer_accepted_at,
  departments.department_name       AS greenhouse_department_name,
  departments.level_1               AS greenhouse_department_level_1,
  departments.level_2               AS greenhouse_department_level_2,
  departments.level_3               AS greenhouse_department_level_3
FROM offers
LEFT JOIN applications
  ON offers.application_id = applications.application_id
LEFT JOIN sources
  ON applications.source_id = sources.source_id
LEFT JOIN openings
  ON offers.application_id = openings.hired_application_id
LEFT JOIN bamboohr_mapping
  ON applications.candidate_id = bamboohr_mapping.greenhouse_candidate_id
LEFT JOIN application_jobs
  ON offers.application_id = application_jobs.application_id
LEFT JOIN job_departments
  ON application_jobs.job_id = job_departments.job_id
LEFT JOIN departments
  ON job_departments.department_id = departments.department_id
LEFT JOIN jobs
  ON application_jobs.job_id = jobs.job_id
LEFT JOIN candidates
  ON applications.candidate_id = candidates.candidate_id
WHERE offers.offer_status = 'accepted'23:T44b, __dbt__cte__wk_prep_greenhouse_departments as (


WITH source AS (
  SELECT
    *
  FROM "PREP".greenhouse.greenhouse_departments_source 
),
  greenhouse_departments (department_name, department_id, hierarchy_id, hierarchy_name) AS (
    SELECT
      department_name,
      department_id,
      TO_ARRAY(department_id)   AS hierarchy_id,
      TO_ARRAY(department_name) AS hierarchy_name
    FROM source
    WHERE parent_id IS NULL
    UNION ALL
    SELECT
      iteration.department_name,
      iteration.department_id,
      ARRAY_APPEND(anchor.hierarchy_id, iteration.department_id)     AS hierarchy_id,
      ARRAY_APPEND(anchor.hierarchy_name, iteration.department_name) AS hierarchy_name
    FROM source iteration
    INNER JOIN greenhouse_departments anchor
      ON iteration.parent_id = anchor.department_id
  )
SELECT
  department_name,
  department_id,
  ARRAY_SIZE(hierarchy_id)   AS hierarchy_level,
  hierarchy_id,
  hierarchy_name,
  hierarchy_name[0]::VARCHAR AS level_1,
  hierarchy_name[1]::VARCHAR AS level_2,
  hierarchy_name[2]::VARCHAR AS level_3
FROM greenhouse_departments
)24:T69d,WITH mapping as (

    SELECT *
    FROM {{ref('bamboohr_id_employee_number_mapping')}}
    --mapping on bamboohr_id_employee_number_mapping as this has accounted for all hired employees whereas bamboohr_directory_source has not

), bamboohr_directory AS (

    SELECT *
    FROM {{ ref('blended_directory_source') }}
    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id, DATE_TRUNC(day, uploaded_at) ORDER BY uploaded_at DESC) = 1

), intermediate AS (

    SELECT bamboohr_directory.*,
      LAST_VALUE(DATE_TRUNC(DAY, bamboohr_directory.uploaded_at)) OVER 
            (PARTITION BY bamboohr_directory.employee_id ORDER BY uploaded_at)                         AS max_uploaded_date,
      DENSE_RANK() OVER (PARTITION BY bamboohr_directory.employee_id ORDER BY uploaded_at DESC)        AS rank_email_desc        
    FROM mapping
    LEFT JOIN bamboohr_directory
      ON mapping.employee_id = bamboohr_directory.employee_id
    QUALIFY ROW_NUMBER() OVER (PARTITION BY bamboohr_directory.employee_id, work_email ORDER BY uploaded_at) = 1       

), final AS (

    SELECT
      employee_id,
      full_name,
      work_email,
      uploaded_at                                                                     AS valid_from_date,
      IFF(max_uploaded_date< CURRENT_DATE() AND rank_email_desc = 1, 
        max_uploaded_date, 
        COALESCE(LEAD(DATEADD(day,-1,uploaded_at)) OVER (PARTITION BY employee_id ORDER BY uploaded_at),
                {{max_date_in_bamboo_analyses()}}))                                   AS valid_to_date,
      DENSE_RANK() OVER (PARTITION BY employee_id ORDER BY valid_from_date DESC)      AS rank_email_desc
    FROM intermediate
)

SELECT *
FROM final25:T6b6,WITH mapping as (

    SELECT *
    FROM "PREP".sensitive.bamboohr_id_employee_number_mapping
    --mapping on bamboohr_id_employee_number_mapping as this has accounted for all hired employees whereas bamboohr_directory_source has not

), bamboohr_directory AS (

    SELECT *
    FROM "PREP".workday.blended_directory_source
    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id, DATE_TRUNC(day, uploaded_at) ORDER BY uploaded_at DESC) = 1

), intermediate AS (

    SELECT bamboohr_directory.*,
      LAST_VALUE(DATE_TRUNC(DAY, bamboohr_directory.uploaded_at)) OVER 
            (PARTITION BY bamboohr_directory.employee_id ORDER BY uploaded_at)                         AS max_uploaded_date,
      DENSE_RANK() OVER (PARTITION BY bamboohr_directory.employee_id ORDER BY uploaded_at DESC)        AS rank_email_desc        
    FROM mapping
    LEFT JOIN bamboohr_directory
      ON mapping.employee_id = bamboohr_directory.employee_id
    QUALIFY ROW_NUMBER() OVER (PARTITION BY bamboohr_directory.employee_id, work_email ORDER BY uploaded_at) = 1       

), final AS (

    SELECT
      employee_id,
      full_name,
      work_email,
      uploaded_at                                                                     AS valid_from_date,
      IFF(max_uploaded_date< CURRENT_DATE() AND rank_email_desc = 1, 
        max_uploaded_date, 
        COALESCE(LEAD(DATEADD(day,-1,uploaded_at)) OVER (PARTITION BY employee_id ORDER BY uploaded_at),
                date_trunc('week', dateadd(week, 3, CURRENT_DATE))))                                   AS valid_to_date,
      DENSE_RANK() OVER (PARTITION BY employee_id ORDER BY valid_from_date DESC)      AS rank_email_desc
    FROM intermediate
)

SELECT *
FROM final26:T707,WITH bamboohr AS (
  
  SELECT *
  FROM {{ ref('bamboohr_id_employee_number_mapping_source') }}

),

workday AS (

  SELECT *
  FROM {{ ref('workday_employee_mapping_source') }} 
  
),

unioned AS (
SELECT
  employee_number,
  employee_number AS employee_id,
  first_name,
  last_name,
  hire_date,
  termination_date,
  termination_date + 1 AS first_inactive_date,
  greenhouse_candidate_id,
  cost_center,
  gitlab_username,
  jobtitle_speciality_single_select,
  jobtitle_speciality_multi_select,
  locality,
  nationality,
  gender_dropdown,
  region,
  job_role,
  sales_geo_differential,
  date_of_birth,
  employee_status_date,
  employment_history_status,
  ethnicity,
  gender,
  country,
  age,
  job_grade,
  pay_frequency,
  uploaded_at,
  uploaded_row_number_desc,
  'bamboohr' AS source_system
FROM bamboohr

UNION 

SELECT
  employee_id AS employee_number,
  employee_id,
  first_name,
  last_name,
  hire_date,
  termination_date,
  termination_date + 1 AS first_inactive_date,
  greenhouse_candidate_id,
  cost_center,
  gitlab_username,
  jobtitle_speciality_single_select,
  REGEXP_REPLACE(jobtitle_speciality_multi_select,'; ',',') AS jobtitle_speciality_multi_select,
  locality,
  nationality,
  gender_dropdown,
  region,
  job_role,
  sales_geo_differential,
  date_of_birth,
  employee_status_date,
  employment_history_status,
  ethnicity,
  gender,
  country,
  age,
  job_grade::VARCHAR AS job_grade, -- BambooHR data is a text filed.
  pay_frequency,
  uploaded_at,
  DENSE_RANK() OVER (ORDER BY DATE_TRUNC('day',uploaded_at) DESC) AS uploaded_row_number_desc,
  'workday' AS source_system
FROM workday
),

filtered AS (

  {{ gitlab_snowflake.workday_bamboohr_blending_filter('unioned', ['employee_id','DATE_TRUNC(\'day\',uploaded_at)']) }}
  
)

SELECT *
FROM filtered27:T8fb,WITH bamboohr AS (
  
  SELECT *
  FROM "PREP".bamboohr.bamboohr_id_employee_number_mapping_source

),

workday AS (

  SELECT *
  FROM "PREP".workday.workday_employee_mapping_source 
  
),

unioned AS (
SELECT
  employee_number,
  employee_number AS employee_id,
  first_name,
  last_name,
  hire_date,
  termination_date,
  termination_date + 1 AS first_inactive_date,
  greenhouse_candidate_id,
  cost_center,
  gitlab_username,
  jobtitle_speciality_single_select,
  jobtitle_speciality_multi_select,
  locality,
  nationality,
  gender_dropdown,
  region,
  job_role,
  sales_geo_differential,
  date_of_birth,
  employee_status_date,
  employment_history_status,
  ethnicity,
  gender,
  country,
  age,
  job_grade,
  pay_frequency,
  uploaded_at,
  uploaded_row_number_desc,
  'bamboohr' AS source_system
FROM bamboohr

UNION 

SELECT
  employee_id AS employee_number,
  employee_id,
  first_name,
  last_name,
  hire_date,
  termination_date,
  termination_date + 1 AS first_inactive_date,
  greenhouse_candidate_id,
  cost_center,
  gitlab_username,
  jobtitle_speciality_single_select,
  REGEXP_REPLACE(jobtitle_speciality_multi_select,'; ',',') AS jobtitle_speciality_multi_select,
  locality,
  nationality,
  gender_dropdown,
  region,
  job_role,
  sales_geo_differential,
  date_of_birth,
  employee_status_date,
  employment_history_status,
  ethnicity,
  gender,
  country,
  age,
  job_grade::VARCHAR AS job_grade, -- BambooHR data is a text filed.
  pay_frequency,
  uploaded_at,
  DENSE_RANK() OVER (ORDER BY DATE_TRUNC('day',uploaded_at) DESC) AS uploaded_row_number_desc,
  'workday' AS source_system
FROM workday
),

filtered AS (

  -- this will be changed to the actual cut over date once the system cut over happens

SELECT 
  *,
  md5(cast(coalesce(cast(employee_id as 
    varchar
), '') || '-' || coalesce(cast(DATE_TRUNC('day',uploaded_at) as 
    varchar
), '') as 
    varchar
)) AS unique_filter_key,
  IFF(IFF(uploaded_at >= '2022-06-16' ,'workday','bamboohr' ) = source_system,1,0) AS sort_order
FROM unioned 
WHERE (source_system = 'workday' AND '9999-01-01' >= '2022-06-16' ) 
OR (source_system = 'bamboohr' AND '0001-01-01' < '2022-06-16' )
QUALIFY ROW_NUMBER() OVER (PARTITION BY unique_filter_key ORDER BY sort_order DESC, 1) = 1
  
)

SELECT *
FROM filtered29:Tcbb,WITH source AS (
  
    SELECT *
    FROM {{ ref ('blended_employee_mapping_source') }}
    WHERE uploaded_row_number_desc = 1

), intermediate AS (

    SELECT 
      employee_number,
      employee_id,
      first_name,
      last_name,
      hire_date,
      termination_date,
      first_inactive_date,
      CASE 
        WHEN age BETWEEN 18 AND 24 THEN '18-24'
        WHEN age BETWEEN 25 AND 29  THEN '25-29'
        WHEN age BETWEEN 30 AND 34  THEN '30-34'
        WHEN age BETWEEN 35 AND 39  THEN '35-39'
        WHEN age BETWEEN 40 AND 44  THEN '40-44'
        WHEN age BETWEEN 44 AND 49  THEN '44-49'
        WHEN age BETWEEN 50 AND 54  THEN '50-54'
        WHEN age BETWEEN 55 AND 59  THEN '55-59'
        WHEN age>= 60               THEN '60+'
        WHEN age IS NULL            THEN 'Unreported'
        WHEN age = -1               THEN 'Unreported'
          ELSE NULL END                                                                   AS age_cohort,
      COALESCE(gender,'Did Not Identify')                                                 AS gender,    
      COALESCE(gender_dropdown, gender,'Did Not Identify')                                AS gender_identity,
      COALESCE(ethnicity, 'Did Not Identify')                                             AS ethnicity, 
      country,
      nationality,
      region,
      CASE
        WHEN region = 'Americas' AND country IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'NORAM'
        WHEN region = 'Americas' AND country NOT IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'LATAM'
        ELSE region END                                                                   AS region_modified,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(gender,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(gender,'Did Not Identify')  || '_'|| 'Non-US')                       AS gender_region,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(ethnicity,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(ethnicity,'Did Not Identify')  || '_'|| 'Non-US')                    AS ethnicity_region,
      greenhouse_candidate_id,
      uploaded_at                                                                         AS last_updated_date,
      CASE
        WHEN COALESCE(ethnicity, 'Did Not Identify') NOT IN ('White','Asian','Did Not Identify','Declined to Answer')
            THEN TRUE
        ELSE FALSE END                                                                    AS urg_group,
      IFF (urg_group = TRUE,
        'URG',
        'Non-URG')  || '_' ||
          IFF(country IN ('United States','United States of America'),
            'United States of America',
            'Non-US')                                                                     AS urg_region
    FROM source
    WHERE hire_date IS NOT NULL
        OR (LOWER(first_name) NOT LIKE '%greenhouse test%'
            and LOWER(last_name) NOT LIKE '%test profile%'
            and LOWER(last_name) != 'test-gitlab')
        OR employee_id  NOT IN (11569)  -- mock person


)

SELECT *
FROM intermediate2a:Tcbc,WITH source AS (
  
    SELECT *
    FROM "PREP".workday.blended_employee_mapping_source
    WHERE uploaded_row_number_desc = 1

), intermediate AS (

    SELECT 
      employee_number,
      employee_id,
      first_name,
      last_name,
      hire_date,
      termination_date,
      first_inactive_date,
      CASE 
        WHEN age BETWEEN 18 AND 24 THEN '18-24'
        WHEN age BETWEEN 25 AND 29  THEN '25-29'
        WHEN age BETWEEN 30 AND 34  THEN '30-34'
        WHEN age BETWEEN 35 AND 39  THEN '35-39'
        WHEN age BETWEEN 40 AND 44  THEN '40-44'
        WHEN age BETWEEN 44 AND 49  THEN '44-49'
        WHEN age BETWEEN 50 AND 54  THEN '50-54'
        WHEN age BETWEEN 55 AND 59  THEN '55-59'
        WHEN age>= 60               THEN '60+'
        WHEN age IS NULL            THEN 'Unreported'
        WHEN age = -1               THEN 'Unreported'
          ELSE NULL END                                                                   AS age_cohort,
      COALESCE(gender,'Did Not Identify')                                                 AS gender,    
      COALESCE(gender_dropdown, gender,'Did Not Identify')                                AS gender_identity,
      COALESCE(ethnicity, 'Did Not Identify')                                             AS ethnicity, 
      country,
      nationality,
      region,
      CASE
        WHEN region = 'Americas' AND country IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'NORAM'
        WHEN region = 'Americas' AND country NOT IN ('United States', 'Canada','Mexico','United States of America') 
          THEN 'LATAM'
        ELSE region END                                                                   AS region_modified,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(gender,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(gender,'Did Not Identify')  || '_'|| 'Non-US')                       AS gender_region,
      IFF(country IN ('United States','United States of America'), 
            COALESCE(ethnicity,'Did Not Identify')  || '_' || 'United States of America', 
            COALESCE(ethnicity,'Did Not Identify')  || '_'|| 'Non-US')                    AS ethnicity_region,
      greenhouse_candidate_id,
      uploaded_at                                                                         AS last_updated_date,
      CASE
        WHEN COALESCE(ethnicity, 'Did Not Identify') NOT IN ('White','Asian','Did Not Identify','Declined to Answer')
            THEN TRUE
        ELSE FALSE END                                                                    AS urg_group,
      IFF (urg_group = TRUE,
        'URG',
        'Non-URG')  || '_' ||
          IFF(country IN ('United States','United States of America'),
            'United States of America',
            'Non-US')                                                                     AS urg_region
    FROM source
    WHERE hire_date IS NOT NULL
        OR (LOWER(first_name) NOT LIKE '%greenhouse test%'
            and LOWER(last_name) NOT LIKE '%test profile%'
            and LOWER(last_name) != 'test-gitlab')
        OR employee_id  NOT IN (11569)  -- mock person


)

SELECT *
FROM intermediatec:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.bamboohr_id_employee_number_mapping"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"bamboohr_id_employee_number_mapping"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],null,["$","dd",null,{"className":"detail-value","children":"untagged"}]]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PREP.sensitive.bamboohr_id_employee_number_mapping"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"554 KB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-10 09:03UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"This model is the canonical source mapping bamboo employee numbers with employee IDs. It includes all employees for all time. The model also captures demographic information, and removes test accounts."}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"BAMBOOHR_ID_EMPLOYEE_NUMBER_MAPPING","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"EMPLOYEE_NUMBER":{"type":"NUMBER","index":1,"name":"employee_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"test":["not_null","unique"],"display_name":"employee_number"},"EMPLOYEE_ID":{"type":"NUMBER","index":2,"name":"employee_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"test":["not_null","unique"],"display_name":"employee_id"},"FIRST_NAME":{"type":"TEXT","index":3,"name":"first_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":4,"name":"last_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_name"},"HIRE_DATE":{"type":"DATE","index":5,"name":"hire_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_date"},"TERMINATION_DATE":{"type":"DATE","index":6,"name":"termination_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"termination_date"},"FIRST_INACTIVE_DATE":{"type":"DATE","index":7,"name":"first_inactive_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_inactive_date"},"AGE_COHORT":{"type":"TEXT","index":8,"name":"age_cohort","comment":null,"description":"As based on current data.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"age_cohort"},"GENDER":{"type":"TEXT","index":9,"name":"gender","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"gender"},"GENDER_IDENTITY":{"type":"TEXT","index":10,"name":"gender_identity","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"gender_identity"},"ETHNICITY":{"type":"TEXT","index":11,"name":"ETHNICITY","comment":null,"display_name":"ethnicity"},"COUNTRY":{"type":"TEXT","index":12,"name":"COUNTRY","comment":null,"display_name":"country"},"NATIONALITY":{"type":"TEXT","index":13,"name":"nationality","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"nationality"},"REGION":{"type":"TEXT","index":14,"name":"region","comment":null,"description":"Identifies the region of the employees country of residence as it is entered in Workday.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"region"},"REGION_MODIFIED":{"type":"TEXT","index":15,"name":"region_modified","comment":null,"description":"Identifies if employee is in NORAM, LATAM, EMEA, or JAPAC region based on their country of residence. US and Canada are NORAM, while Mexico is LATAM. All others stay the same.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"region_modified"},"GENDER_REGION":{"type":"TEXT","index":16,"name":"gender_region","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"gender_region"},"ETHNICITY_REGION":{"type":"TEXT","index":17,"name":"ethnicity_region","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"ethnicity_region"},"GREENHOUSE_CANDIDATE_ID":{"type":"NUMBER","index":18,"name":"greenhouse_candidate_id","comment":null,"description":"Captures the id associated to the employee in Greenhouse (our recruiting platform). This will only be applicable in Greenhouse starting 2019-12-13, and will help identify which candidates were hired.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"greenhouse_candidate_id"},"LAST_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":19,"name":"LAST_UPDATED_DATE","comment":null,"display_name":"last_updated_date"},"URG_GROUP":{"type":"BOOLEAN","index":20,"name":"urg_group","comment":null,"description":"Identifies if the Team Member identifies their identity as one of an underrepresented group or not. Any ethnicity given that is not White, Asian or Did Not Identify is TRUE for urg_group.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"urg_group"},"URG_REGION":{"type":"TEXT","index":21,"name":"urg_region","comment":null,"description":"Same definition as urg_group, but this separates US based Team Members from Non-US based Team Members","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"urg_region"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:03UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":566784,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_id_employee_number_mapping","raw_sql":"$10","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.blended_employee_mapping_source","model.gitlab_snowflake.blended_employee_mapping_source"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","legacy","bamboohr","sensitive","bamboohr_id_employee_number_mapping"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/sensitive/bamboohr_id_employee_number_mapping.sql","original_file_path":"models/legacy/bamboohr/sensitive/bamboohr_id_employee_number_mapping.sql","name":"bamboohr_id_employee_number_mapping","alias":"bamboohr_id_employee_number_mapping","checksum":{"name":"sha256","checksum":"4d12a093c6e2c30a64f43a21f3f2d5b5229f6682b8f6e321515b7084a57f93e5"},"tags":[],"refs":[["blended_employee_mapping_source"],["blended_employee_mapping_source"]],"sources":[],"metrics":[],"description":"This model is the canonical source mapping bamboo employee numbers with employee IDs. It includes all employees for all time. The model also captures demographic information, and removes test accounts.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/sensitive/bamboohr_id_employee_number_mapping.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033758.8328693,"compiled_sql":"$11","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.bamboohr_id_employee_number_mapping","label":"bamboohr_id_employee_number_mapping"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"GREENHOUSE_HIRES","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"UNIQUE_KEY":{"type":"TEXT","index":1,"name":"unique_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"unique_key"},"JOB_ID":{"type":"NUMBER","index":2,"name":"JOB_ID","comment":null,"display_name":"job_id"},"APPLICATION_ID":{"type":"NUMBER","index":3,"name":"application_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"application_id"},"CANDIDATE_ID":{"type":"NUMBER","index":4,"name":"candidate_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"candidate_id"},"EMPLOYEE_ID":{"type":"NUMBER","index":5,"name":"EMPLOYEE_ID","comment":null,"display_name":"employee_id"},"EMPLOYEE_NAME":{"type":"TEXT","index":6,"name":"EMPLOYEE_NAME","comment":null,"display_name":"employee_name"},"REGION":{"type":"TEXT","index":7,"name":"REGION","comment":null,"display_name":"region"},"GREENHOUSE_CANDIDATE_ROW_NUMBER":{"type":"NUMBER","index":8,"name":"greenhouse_candidate_row_number","comment":null,"description":"Indiciates the number of applications the candidate submitted and was hired for. For example, a 2 would be their second hire within the company.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"greenhouse_candidate_row_number"},"HIRE_DATE_MOD":{"type":"DATE","index":9,"name":"hire_date_mod","comment":null,"description":"Note - this is a calculated field. In the case we don't have the candidate target hire date we are using the first record from the employment status table. If we do then we factor in the time between the candidate target hire and the bamboo hire date, and if it is less than 120 days we use the bamboo hire date, otherwise the target_hire (the reason for this is because we don't have every application record for candidates hired prior to greenhouse. If this is the 2+ hired record in greenhouse we use the candidate target hire date as this candidate is a transfer.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_date_mod"},"HIRE_TYPE":{"type":"TEXT","index":10,"name":"hire_type","comment":null,"description":"Indicates whether the candidate is a hire, rehire, or transfer based on greenhouse_candidate_row_number.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_type"},"JOB_OPENING_TYPE":{"type":"TEXT","index":11,"name":"job_opening_type","comment":null,"description":"Identifies if job is backfill, new hire, internal transfer, or open to current employees.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_opening_type"},"HIRED_IN_BAMBOOHR":{"type":"BOOLEAN","index":12,"name":"HIRED_IN_BAMBOOHR","comment":null,"display_name":"hired_in_bamboohr"},"DIVISION":{"type":"TEXT","index":13,"name":"division","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division"},"DEPARTMENT":{"type":"TEXT","index":14,"name":"department","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"department"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:11UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":582656,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.greenhouse_hires","raw_sql":"$13","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.greenhouse_applications_source","model.gitlab_snowflake.greenhouse_applications_source","model.gitlab_snowflake.greenhouse_offers_source","model.gitlab_snowflake.greenhouse_offers_source","model.gitlab_snowflake.greenhouse_openings_source","model.gitlab_snowflake.greenhouse_openings_source","model.gitlab_snowflake.greenhouse_opening_custom_fields","model.gitlab_snowflake.greenhouse_opening_custom_fields","model.gitlab_snowflake.employee_directory","model.gitlab_snowflake.employee_directory","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.employee_directory_intermediate"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","legacy","greenhouse","xf","greenhouse_hires"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/greenhouse/xf/greenhouse_hires.sql","original_file_path":"models/legacy/greenhouse/xf/greenhouse_hires.sql","name":"greenhouse_hires","alias":"greenhouse_hires","checksum":{"name":"sha256","checksum":"ab462cd0f8e4cda0294aafaeabddf7022b814baa1a78f372d1f9fa98829e79bd"},"tags":[],"refs":[["greenhouse_applications_source"],["greenhouse_applications_source"],["greenhouse_offers_source"],["greenhouse_offers_source"],["greenhouse_openings_source"],["greenhouse_openings_source"],["greenhouse_opening_custom_fields"],["greenhouse_opening_custom_fields"],["employee_directory"],["employee_directory"],["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"],["employee_directory_intermediate"],["employee_directory_intermediate"]],"sources":[],"metrics":[],"description":"This model is used to identify all greenhouse hires (including transfers within company). We want to capture the date the candidate truly started in bamboohr.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/greenhouse/xf/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/greenhouse/xf/greenhouse_hires.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033761.8877118,"compiled_sql":"$14","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.greenhouse_hires","label":"greenhouse_hires"},{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"BAMBOOHR_HEADCOUNT_INTERMEDIATE","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"UNIQUE_KEY":{"type":"TEXT","index":1,"name":"unique_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"unique_key"},"MONTH_DATE":{"type":"DATE","index":2,"name":"month_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_date"},"BREAKOUT_TYPE":{"type":"TEXT","index":3,"name":"breakout_type","comment":null,"description":"Explains the breakout of the data in the columns associated to this field.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"breakout_type"},"DEPARTMENT":{"type":"TEXT","index":4,"name":"department","comment":null,"description":"This is using current department, and maps out historical department/divisions to the current mapping.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"department"},"DIVISION":{"type":"TEXT","index":5,"name":"division","comment":null,"description":"This is using current division, and maps out historical department/divisions to the current mapping.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division"},"JOB_ROLE":{"type":"TEXT","index":6,"name":"JOB_ROLE","comment":null,"display_name":"job_role"},"JOB_GRADE":{"type":"TEXT","index":7,"name":"JOB_GRADE","comment":null,"display_name":"job_grade"},"EEOC_FIELD_NAME":{"type":"TEXT","index":8,"name":"eeoc_field_name","comment":null,"description":"Identifies what eeoc field the data is associated to.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eeoc_field_name"},"EEOC_VALUE":{"type":"TEXT","index":9,"name":"eeoc_value","comment":null,"description":"This is the answer to the eeoc questions. For example, for the eeoc gender field we could have female, male, choose not to identify.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eeoc_value"},"HEADCOUNT_START":{"type":"NUMBER","index":10,"name":"headcount_start","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start"},"HEADCOUNT_START_EXCLUDING_SDR":{"type":"NUMBER","index":11,"name":"HEADCOUNT_START_EXCLUDING_SDR","comment":null,"display_name":"headcount_start_excluding_sdr"},"HEADCOUNT_END":{"type":"NUMBER","index":12,"name":"headcount_end","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end"},"HEADCOUNT_END_EXCLUDING_SDR":{"type":"NUMBER","index":13,"name":"HEADCOUNT_END_EXCLUDING_SDR","comment":null,"display_name":"headcount_end_excluding_sdr"},"HEADCOUNT_AVERAGE":{"type":"NUMBER","index":14,"name":"headcount_average","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average"},"HEADCOUNT_AVERAGE_EXCLUDING_SDR":{"type":"NUMBER","index":15,"name":"HEADCOUNT_AVERAGE_EXCLUDING_SDR","comment":null,"display_name":"headcount_average_excluding_sdr"},"HIRE_COUNT":{"type":"NUMBER","index":16,"name":"hire_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_count"},"SEPARATION_COUNT":{"type":"NUMBER","index":17,"name":"separation_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separation_count"},"VOLUNTARY_SEPARATION":{"type":"NUMBER","index":18,"name":"voluntary_separation","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"voluntary_separation"},"INVOLUNTARY_SEPARATION":{"type":"NUMBER","index":19,"name":"involuntary_separation","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"involuntary_separation"},"HEADCOUNT_START_LEADER":{"type":"NUMBER","index":20,"name":"headcount_start_leader","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start_leader"},"HEADCOUNT_END_LEADER":{"type":"NUMBER","index":21,"name":"headcount_end_leader","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_leader"},"HEADCOUNT_AVERAGE_LEADER":{"type":"NUMBER","index":22,"name":"headcount_average_leader","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average_leader"},"HIRED_LEADERS":{"type":"NUMBER","index":23,"name":"hired_leaders","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_leaders"},"SEPARATED_LEADERS":{"type":"NUMBER","index":24,"name":"separated_leaders","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_leaders"},"HEADCOUNT_START_MANAGER":{"type":"NUMBER","index":25,"name":"headcount_start_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start_manager"},"HEADCOUNT_END_MANAGER":{"type":"NUMBER","index":26,"name":"headcount_end_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_manager"},"HEADCOUNT_AVERAGE_MANAGER":{"type":"NUMBER","index":27,"name":"headcount_average_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average_manager"},"HIRED_MANAGER":{"type":"NUMBER","index":28,"name":"hired_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_manager"},"SEPARATED_MANAGER":{"type":"NUMBER","index":29,"name":"separated_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_manager"},"HEADCOUNT_START_MANAGEMENT":{"type":"NUMBER","index":30,"name":"headcount_start_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start_management"},"HEADCOUNT_END_MANAGEMENT":{"type":"NUMBER","index":31,"name":"headcount_end_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_management"},"HEADCOUNT_AVERAGE_MANAGEMENT":{"type":"NUMBER","index":32,"name":"headcount_average_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average_management"},"HIRED_MANAGEMENT":{"type":"NUMBER","index":33,"name":"hired_management","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_management"},"SEPARATED_MANAGEMENT":{"type":"NUMBER","index":34,"name":"SEPARATED_MANAGEMENT","comment":null,"display_name":"separated_management"},"HEADCOUNT_START_CONTRIBUTOR":{"type":"NUMBER","index":35,"name":"headcount_start_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start_contributor"},"HEADCOUNT_END_INDIVIDUAL_CONTRIBUTOR":{"type":"NUMBER","index":36,"name":"headcount_end_individual_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_individual_contributor"},"HEADCOUNT_AVERAGE_CONTRIBUTOR":{"type":"NUMBER","index":37,"name":"headcount_average_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average_contributor"},"HIRED_CONTRIBUTOR":{"type":"NUMBER","index":38,"name":"hired_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_contributor"},"SEPARATED_CONTRIBUTOR":{"type":"NUMBER","index":39,"name":"separated_contributor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_contributor"},"PROMOTION":{"type":"NUMBER","index":40,"name":"promotion","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"promotion"},"PROMOTION_EXCLUDING_SDR":{"type":"NUMBER","index":41,"name":"PROMOTION_EXCLUDING_SDR","comment":null,"display_name":"promotion_excluding_sdr"},"PERCENT_CHANGE_IN_COMP":{"type":"FLOAT","index":42,"name":"PERCENT_CHANGE_IN_COMP","comment":null,"display_name":"percent_change_in_comp"},"PERCENT_CHANGE_IN_COMP_EXCLUDING_SDR":{"type":"FLOAT","index":43,"name":"PERCENT_CHANGE_IN_COMP_EXCLUDING_SDR","comment":null,"display_name":"percent_change_in_comp_excluding_sdr"},"LOCATION_FACTOR":{"type":"FLOAT","index":44,"name":"location_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"location_factor"},"NEW_HIRE_LOCATION_FACTOR":{"type":"FLOAT","index":45,"name":"NEW_HIRE_LOCATION_FACTOR","comment":null,"display_name":"new_hire_location_factor"},"DISCRETIONARY_BONUS":{"type":"NUMBER","index":46,"name":"discretionary_bonus","comment":null,"description":"Identifies the total team members for the breakout and month that received a discretionary bonus_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"discretionary_bonus"},"TENURE_MONTHS":{"type":"NUMBER","index":47,"name":"tenure_months","comment":null,"description":"Average tenure in months for team members based on end of month","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_months"},"TENURE_ZERO_TO_SIX_MONTHS":{"type":"NUMBER","index":48,"name":"tenure_zero_to_six_months","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_zero_to_six_months"},"TENURE_SIX_TO_TWELVE_MONTHS":{"type":"NUMBER","index":49,"name":"tenure_six_to_twelve_months","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_six_to_twelve_months"},"TENURE_ONE_TO_TWO_YEARS":{"type":"NUMBER","index":50,"name":"tenure_one_to_two_years","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_one_to_two_years"},"TENURE_TWO_TO_FOUR_YEARS":{"type":"NUMBER","index":51,"name":"tenure_two_to_four_years","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_two_to_four_years"},"TENURE_FOUR_PLUS_YEARS":{"type":"NUMBER","index":52,"name":"tenure_four_plus_years","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tenure_four_plus_years"},"BREAKOUT_TYPE_MODIFIED":{"type":"TEXT","index":53,"name":"breakout_type_modified","comment":null,"description":"This takes the current breakouts and adds in a company overall.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"breakout_type_modified"},"headcount_start_staff":{"name":"headcount_start_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_start_staff"},"headcount_end_staff":{"name":"headcount_end_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_end_staff"},"headcount_average_staff":{"name":"headcount_average_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"headcount_average_staff"},"hired_staff":{"name":"hired_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hired_staff"},"separated_staff":{"name":"separated_staff","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"separated_staff"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:12UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":32218624,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_headcount_intermediate","raw_sql":"$15","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.unpivot","macro.dbt_utils.group_by","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.date_details","model.gitlab_snowflake.date_details","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_employment_status_xf","model.gitlab_snowflake.bamboohr_employment_status_xf","model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.bamboohr_promotions_xf","model.gitlab_snowflake.bamboohr_promotions_xf"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","legacy","bamboohr","sensitive","bamboohr_headcount_intermediate"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/sensitive/bamboohr_headcount_intermediate.sql","original_file_path":"models/legacy/bamboohr/sensitive/bamboohr_headcount_intermediate.sql","name":"bamboohr_headcount_intermediate","alias":"bamboohr_headcount_intermediate","checksum":{"name":"sha256","checksum":"eb0038c90f1b1b838badc76805693d9847adeb2c47eac8341b795bd418b4cf9a"},"tags":[],"refs":[["date_details"],["date_details"],["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"],["bamboohr_employment_status_xf"],["bamboohr_employment_status_xf"],["employee_directory_intermediate"],["employee_directory_intermediate"],["bamboohr_promotions_xf"],["bamboohr_promotions_xf"]],"sources":[],"metrics":[],"description":"This is the intermediate model to creating out the headcount report. This report provides headcounts, hires, separations by diversity fields, department, and division. Note - division is mapped to the last month in the report to account for 12 month calculations.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/sensitive/bamboohr_headcount_intermediate.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033758.8180118,"compiled_sql":"$16","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.bamboohr_headcount_intermediate","label":"bamboohr_headcount_intermediate"},{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"GREENHOUSE_RECRUITING_XF","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"UNIQUE_KEY":{"type":"TEXT","index":1,"name":"unique_key","comment":null,"description":"Unique key based on application_id, offer_id, candidate_id, requisition_id, and job_id","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"unique_key"},"APPLICATION_ID":{"type":"NUMBER","index":2,"name":"application_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"application_id"},"OFFER_ID":{"type":"NUMBER","index":3,"name":"offer_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"offer_id"},"CANDIDATE_ID":{"type":"NUMBER","index":4,"name":"candidate_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"candidate_id"},"JOB_ID":{"type":"NUMBER","index":5,"name":"job_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_id"},"REQUISITION_ID":{"type":"TEXT","index":6,"name":"requisition_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requisition_id"},"IS_PROSPECT":{"type":"TEXT","index":7,"name":"is_prospect","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_prospect"},"APPLICATION_STATUS":{"type":"TEXT","index":8,"name":"application_status","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"application_status"},"CURRENT_STAGE_NAME":{"type":"TEXT","index":9,"name":"CURRENT_STAGE_NAME","comment":null,"display_name":"current_stage_name"},"OFFER_STATUS":{"type":"TEXT","index":10,"name":"offer_status","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"offer_status"},"APPLICATION_DATE":{"type":"TIMESTAMP_NTZ","index":11,"name":"application_date","comment":null,"description":"The date the candidate applied for a specific job posting.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"application_date"},"OFFER_SENT_DATE":{"type":"TIMESTAMP_NTZ","index":12,"name":"offer_sent_date","comment":null,"description":"The date the candidate was sent an offer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"offer_sent_date"},"OFFER_RESOLVED_DATE":{"type":"TIMESTAMP_NTZ","index":13,"name":"offer_resolved_date","comment":null,"description":"The date the candidate either accepted or rejected the offer.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"offer_resolved_date"},"CANDIDATE_TARGET_HIRE_DATE":{"type":"DATE","index":14,"name":"CANDIDATE_TARGET_HIRE_DATE","comment":null,"display_name":"candidate_target_hire_date"},"REJECTED_DATE":{"type":"TIMESTAMP_NTZ","index":15,"name":"REJECTED_DATE","comment":null,"display_name":"rejected_date"},"JOB_NAME":{"type":"TEXT","index":16,"name":"job_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_name"},"DEPARTMENT_NAME":{"type":"TEXT","index":17,"name":"department_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"department_name"},"DIVISION":{"type":"TEXT","index":18,"name":"division","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division"},"DIVISION_MODIFIED":{"type":"TEXT","index":19,"name":"DIVISION_MODIFIED","comment":null,"display_name":"division_modified"},"SOURCE_NAME":{"type":"TEXT","index":20,"name":"source_name","comment":null,"description":"Where the candidate came from","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_name"},"SOURCE_TYPE":{"type":"TEXT","index":21,"name":"source_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_type"},"IS_OUTBOUND":{"type":"NUMBER","index":22,"name":"is_outbound","comment":null,"description":"Indicates whether the applicant source is from outbound recruiting. A 1 indicates the applicant came through the outbound recruiting model vs a 0 indicates they did not.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_outbound"},"IS_SOURCED":{"type":"NUMBER","index":23,"name":"is_sourced","comment":null,"description":"Indicates whether the candidate was sourced by the recruiting team. A 1 indicates the candidate was sourced, and a 0 indicates they were not.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sourced"},"SOURCER_NAME":{"type":"TEXT","index":24,"name":"sourcer_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sourcer_name"},"CANDIDATE_RECRUITER":{"type":"TEXT","index":25,"name":"candidate_recruiter","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"candidate_recruiter"},"CANDIDATE_COORDINATOR":{"type":"TEXT","index":26,"name":"candidate_coordinator","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"candidate_coordinator"},"SOURCED_CANDIDATE":{"type":"BOOLEAN","index":27,"name":"sourced_candidate","comment":null,"description":"Identifies if the source is LinkedIn(Prospecting)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sourced_candidate"},"REJECTION_REASON_NAME":{"type":"TEXT","index":28,"name":"REJECTION_REASON_NAME","comment":null,"display_name":"rejection_reason_name"},"REJECTION_REASON_TYPE":{"type":"TEXT","index":29,"name":"REJECTION_REASON_TYPE","comment":null,"display_name":"rejection_reason_type"},"CURRENT_JOB_REQ_STATUS":{"type":"TEXT","index":30,"name":"CURRENT_JOB_REQ_STATUS","comment":null,"display_name":"current_job_req_status"},"TIME_TO_OFFER":{"type":"NUMBER","index":31,"name":"time_to_offer","comment":null,"description":"Shows how long an applicant to go from applying to accepting an offer. This is based on offer accept month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"time_to_offer"},"IS_HIRED_IN_BAMBOO":{"type":"BOOLEAN","index":32,"name":"is_hired_in_bamboo","comment":null,"description":"This indicates if the candidate got hired and appears in bamboohr.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_hired_in_bamboo"},"stage_name":{"name":"stage_name","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_name"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:12UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":91181568,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.greenhouse_recruiting_xf","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.greenhouse_applications_source","model.gitlab_snowflake.greenhouse_applications_source","model.gitlab_snowflake.greenhouse_offers_source","model.gitlab_snowflake.greenhouse_offers_source","model.gitlab_snowflake.greenhouse_applications_jobs_source","model.gitlab_snowflake.greenhouse_applications_jobs_source","model.gitlab_snowflake.greenhouse_jobs_source","model.gitlab_snowflake.greenhouse_jobs_source","model.gitlab_snowflake.greenhouse_departments_source","model.gitlab_snowflake.greenhouse_departments_source","model.gitlab_snowflake.greenhouse_sources_source","model.gitlab_snowflake.greenhouse_sources_source","model.gitlab_snowflake.greenhouse_sourcer","model.gitlab_snowflake.greenhouse_sourcer","model.gitlab_snowflake.greenhouse_candidates_source","model.gitlab_snowflake.greenhouse_candidates_source","model.gitlab_snowflake.greenhouse_rejection_reasons_source","model.gitlab_snowflake.greenhouse_rejection_reasons_source","model.gitlab_snowflake.cost_center_division_department_mapping_current","model.gitlab_snowflake.cost_center_division_department_mapping_current","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","legacy","greenhouse","xf","greenhouse_recruiting_xf"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/greenhouse/xf/greenhouse_recruiting_xf.sql","original_file_path":"models/legacy/greenhouse/xf/greenhouse_recruiting_xf.sql","name":"greenhouse_recruiting_xf","alias":"greenhouse_recruiting_xf","checksum":{"name":"sha256","checksum":"feffd28e80cc3fc274b3ce178cd71e2a89eca1587500178ca1b0aff20a765241"},"tags":[],"refs":[["greenhouse_applications_source"],["greenhouse_applications_source"],["greenhouse_offers_source"],["greenhouse_offers_source"],["greenhouse_applications_jobs_source"],["greenhouse_applications_jobs_source"],["greenhouse_jobs_source"],["greenhouse_jobs_source"],["greenhouse_departments_source"],["greenhouse_departments_source"],["greenhouse_sources_source"],["greenhouse_sources_source"],["greenhouse_sourcer"],["greenhouse_sourcer"],["greenhouse_candidates_source"],["greenhouse_candidates_source"],["greenhouse_rejection_reasons_source"],["greenhouse_rejection_reasons_source"],["cost_center_division_department_mapping_current"],["cost_center_division_department_mapping_current"],["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"]],"sources":[],"metrics":[],"description":"This is shows all applications submitted and ties in offer data, greenhouse department (the associated division), and source data to be in 1 place.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/greenhouse/xf/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/greenhouse/xf/greenhouse_recruiting_xf.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033761.8451743,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.greenhouse_recruiting_xf","label":"greenhouse_recruiting_xf"},{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"EMPLOYEE_DIRECTORY","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"EMPLOYEE_ID":{"type":"NUMBER","index":1,"name":"employee_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"employee_id"},"EMPLOYEE_NUMBER":{"type":"NUMBER","index":2,"name":"employee_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"employee_number"},"FIRST_NAME":{"type":"TEXT","index":3,"name":"first_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":4,"name":"last_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_name"},"FULL_NAME":{"type":"TEXT","index":5,"name":"full_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"full_name"},"REGION_MODIFIED":{"type":"TEXT","index":6,"name":"REGION_MODIFIED","comment":null,"display_name":"region_modified"},"COUNTRY":{"type":"TEXT","index":7,"name":"country","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"country"},"LAST_WORK_EMAIL":{"type":"TEXT","index":8,"name":"LAST_WORK_EMAIL","comment":null,"display_name":"last_work_email"},"HIRE_DATE":{"type":"DATE","index":9,"name":"hire_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_date"},"REHIRE_DATE":{"type":"DATE","index":10,"name":"rehire_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rehire_date"},"TERMINATION_DATE":{"type":"DATE","index":11,"name":"termination_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"termination_date"},"FIRST_INACTIVE_DATE":{"type":"DATE","index":12,"name":"first_inactive_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_inactive_date"},"LAST_JOB_TITLE":{"type":"TEXT","index":13,"name":"last_job_title","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_job_title"},"LAST_SUPERVISOR":{"type":"TEXT","index":14,"name":"last_supervisor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_supervisor"},"LAST_DEPARTMENT":{"type":"TEXT","index":15,"name":"last_department","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_department"},"LAST_DIVISION":{"type":"TEXT","index":16,"name":"last_division","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_division"},"LAST_COST_CENTER":{"type":"TEXT","index":17,"name":"last_cost_center","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_cost_center"},"HIRE_LOCATION_FACTOR":{"type":"FLOAT","index":18,"name":"hire_location_factor","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_location_factor"},"GREENHOUSE_CANDIDATE_ID":{"type":"NUMBER","index":19,"name":"greenhouse_candidate_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"greenhouse_candidate_id"},"work_email":{"name":"work_email","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"work_email"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:08UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":790528,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.employee_directory","raw_sql":"$19","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.blended_directory_source","model.gitlab_snowflake.blended_directory_source","model.gitlab_snowflake.blended_job_info_source","model.gitlab_snowflake.blended_job_info_source","model.gitlab_snowflake.bamboohr_job_role","model.gitlab_snowflake.bamboohr_job_role","model.gitlab_snowflake.employee_location_factor_snapshots","model.gitlab_snowflake.employee_location_factor_snapshots","model.gitlab_snowflake.blended_employment_status_source","model.gitlab_snowflake.blended_employment_status_source","model.gitlab_snowflake.bamboohr_employment_status_xf","model.gitlab_snowflake.bamboohr_employment_status_xf"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","legacy","bamboohr","sensitive","employee_directory"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/sensitive/employee_directory.sql","original_file_path":"models/legacy/bamboohr/sensitive/employee_directory.sql","name":"employee_directory","alias":"employee_directory","checksum":{"name":"sha256","checksum":"67e214c5d7a6f6369b0db2a8b683963b831c9bceb5f58e1e01dea2a01e6a2e9d"},"tags":[],"refs":[["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"],["blended_directory_source"],["blended_directory_source"],["blended_job_info_source"],["blended_job_info_source"],["bamboohr_job_role"],["bamboohr_job_role"],["employee_location_factor_snapshots"],["employee_location_factor_snapshots"],["blended_employment_status_source"],["blended_employment_status_source"],["bamboohr_employment_status_xf"],["bamboohr_employment_status_xf"]],"sources":[],"metrics":[],"description":"Provides most recent record for all GitLab employees (active and separated).","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/sensitive/employee_directory.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033758.8461099,"compiled_sql":"$1a","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.employee_directory","label":"employee_directory"},{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"BAMBOOHR_SEPARATIONS","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"FISCAL_YEAR":{"type":"NUMBER","index":1,"name":"FISCAL_YEAR","comment":null,"display_name":"fiscal_year"},"EMPLOYEE_NUMBER":{"type":"NUMBER","index":2,"name":"EMPLOYEE_NUMBER","comment":null,"display_name":"employee_number"},"EMPLOYEE_ID":{"type":"NUMBER","index":3,"name":"EMPLOYEE_ID","comment":null,"display_name":"employee_id"},"HIRE_DATE":{"type":"DATE","index":4,"name":"HIRE_DATE","comment":null,"display_name":"hire_date"},"SEPARATION_DATE":{"type":"DATE","index":5,"name":"SEPARATION_DATE","comment":null,"display_name":"separation_date"},"SEPARATION_MONTH":{"type":"DATE","index":6,"name":"SEPARATION_MONTH","comment":null,"display_name":"separation_month"},"DIVISION":{"type":"TEXT","index":7,"name":"DIVISION","comment":null,"display_name":"division"},"DEPARTMENT":{"type":"TEXT","index":8,"name":"DEPARTMENT","comment":null,"display_name":"department"},"JOB_TITLE":{"type":"TEXT","index":9,"name":"JOB_TITLE","comment":null,"display_name":"job_title"},"TERMINATION_TYPE":{"type":"TEXT","index":10,"name":"termination_type","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"termination_type"},"GENDER":{"type":"TEXT","index":11,"name":"GENDER","comment":null,"display_name":"gender"},"ETHNICITY":{"type":"TEXT","index":12,"name":"ETHNICITY","comment":null,"display_name":"ethnicity"},"REGION":{"type":"TEXT","index":13,"name":"REGION","comment":null,"display_name":"region"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:11UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":258560,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_separations","raw_sql":"$1b","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.employee_directory_intermediate","model.gitlab_snowflake.blended_employment_status_source","model.gitlab_snowflake.blended_employment_status_source","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","legacy","bamboohr","sensitive","bamboohr_separations"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/sensitive/bamboohr_separations.sql","original_file_path":"models/legacy/bamboohr/sensitive/bamboohr_separations.sql","name":"bamboohr_separations","alias":"bamboohr_separations","checksum":{"name":"sha256","checksum":"67297225aa45d2361c295e1a209e8fbcee7c9c4c2992acca93d9a94d4c5b138d"},"tags":[],"refs":[["dim_date"],["dim_date"],["employee_directory_intermediate"],["employee_directory_intermediate"],["blended_employment_status_source"],["blended_employment_status_source"],["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"]],"sources":[],"metrics":[],"description":"Provides a report of all separated team members.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/sensitive/bamboohr_separations.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033758.8348603,"compiled_sql":"$1c","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.bamboohr_separations","label":"bamboohr_separations"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"BAMBOOHR_JOB_INFO_CURRENT_DIVISION_BASE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"JOB_SEQUENCE":{"type":"NUMBER","index":1,"name":"JOB_SEQUENCE","comment":null,"display_name":"job_sequence"},"EMPLOYEE_ID":{"type":"NUMBER","index":2,"name":"EMPLOYEE_ID","comment":null,"display_name":"employee_id"},"JOB_TITLE":{"type":"TEXT","index":3,"name":"JOB_TITLE","comment":null,"display_name":"job_title"},"REPORTS_TO_ID":{"type":"NUMBER","index":4,"name":"REPORTS_TO_ID","comment":null,"display_name":"reports_to_id"},"EFFECTIVE_DATE":{"type":"DATE","index":5,"name":"EFFECTIVE_DATE","comment":null,"display_name":"effective_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":6,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"DEPARTMENT":{"type":"TEXT","index":7,"name":"DEPARTMENT","comment":null,"display_name":"department"},"DIVISION":{"type":"TEXT","index":8,"name":"DIVISION","comment":null,"display_name":"division"},"ENTITY":{"type":"TEXT","index":9,"name":"ENTITY","comment":null,"display_name":"entity"},"REPORTS_TO":{"type":"TEXT","index":10,"name":"REPORTS_TO","comment":null,"display_name":"reports_to"},"JOB_ROLE":{"type":"TEXT","index":11,"name":"JOB_ROLE","comment":null,"display_name":"job_role"},"DIVISION_MAPPED_CURRENT":{"type":"TEXT","index":12,"name":"DIVISION_MAPPED_CURRENT","comment":null,"display_name":"division_mapped_current"},"DIVISION_GROUPING":{"type":"TEXT","index":13,"name":"DIVISION_GROUPING","comment":null,"display_name":"division_grouping"},"DEPARTMENT_MODIFIED":{"type":"TEXT","index":14,"name":"DEPARTMENT_MODIFIED","comment":null,"display_name":"department_modified"},"DEPARTMENT_GROUPING":{"type":"TEXT","index":15,"name":"DEPARTMENT_GROUPING","comment":null,"display_name":"department_grouping"},"TERMINATION_DATE":{"type":"DATE","index":16,"name":"TERMINATION_DATE","comment":null,"display_name":"termination_date"},"FIRST_INACTIVE_DATE":{"type":"DATE","index":17,"name":"FIRST_INACTIVE_DATE","comment":null,"display_name":"first_inactive_date"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:09UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":898560,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_job_info_current_division_base","raw_sql":"$1d","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.bamboohr_division_grouping","macro.gitlab_snowflake.bamboohr_department_grouping","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_job_info","model.gitlab_snowflake.bamboohr_job_info","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_job_role","model.gitlab_snowflake.bamboohr_job_role","seed.gitlab_snowflake.department_name_changes","seed.gitlab_snowflake.department_name_changes"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","xf","bamboohr_job_info_current_division_base"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/xf/bamboohr_job_info_current_division_base.sql","original_file_path":"models/legacy/bamboohr/xf/bamboohr_job_info_current_division_base.sql","name":"bamboohr_job_info_current_division_base","alias":"bamboohr_job_info_current_division_base","checksum":{"name":"sha256","checksum":"9aac5e20ad7115fb8391f23f85dd1c0f653d7d78066088b2319224d2b94ae396"},"tags":[],"refs":[["bamboohr_job_info"],["bamboohr_job_info"],["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"],["bamboohr_job_role"],["bamboohr_job_role"],["department_name_changes"],["department_name_changes"]],"sources":[],"metrics":[],"description":"This model identifies the current division department mapping and joins back on to bamboohr_job_info to map historical departments to the current division.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/xf/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/xf/bamboohr_job_info_current_division_base.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"PROD","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.928794,"compiled_sql":"$1e","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.bamboohr_job_info_current_division_base","label":"bamboohr_job_info_current_division_base"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"RPT_GREENHOUSE_OFFER_STAGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"START_WEEK":{"type":"DATE","index":1,"name":"start_week","comment":null,"description":"The week the candidate is expected to start. We've aggregated to week level to help with onboarding.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"start_week"},"GEOGRAPHIC_REGION":{"type":"TEXT","index":2,"name":"geographic_region","comment":null,"description":"The report currently pulls for candidates expected to start in North America, and is our start case to determine if the report helps with onboarding.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"accepted_values","short":"A","label":"Accepted Values: North America, South America, EMEA, Asia Pacific, Americas"}],"display_name":"geographic_region"},"CANDIDATES_ESTIMATED_TO_START":{"type":"NUMBER","index":3,"name":"candidates_estimated_to_start","comment":null,"description":"This is a total count of all the candidates we have sent an offer to.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"candidates_estimated_to_start"},"ACCEPTED_OFFERS_TO_START":{"type":"NUMBER","index":4,"name":"accepted_offers_to_start","comment":null,"description":"This is a count of the candidates that have accepted the offer. This will be the true count for what we will have to prepare for, whereas the candidates_estimated_to_start provides an idea of how many overall we may see.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"accepted_offers_to_start"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:13UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":124928,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_greenhouse_offer_stage","raw_sql":"$1f","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.greenhouse_recruiting_xf","model.gitlab_snowflake.greenhouse_recruiting_xf","model.gitlab_snowflake.greenhouse_offer_custom_fields_source","model.gitlab_snowflake.greenhouse_offer_custom_fields_source","seed.gitlab_snowflake.zuora_country_geographic_region","seed.gitlab_snowflake.zuora_country_geographic_region","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","greenhouse","rpt","rpt_greenhouse_offer_stage"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/greenhouse/rpt/rpt_greenhouse_offer_stage.sql","original_file_path":"models/legacy/greenhouse/rpt/rpt_greenhouse_offer_stage.sql","name":"rpt_greenhouse_offer_stage","alias":"rpt_greenhouse_offer_stage","checksum":{"name":"sha256","checksum":"8d0cd2dd0058002fb35c9cb4298960ea91b919cf05575335a97600adc00f3527"},"tags":[],"refs":[["greenhouse_recruiting_xf"],["greenhouse_recruiting_xf"],["greenhouse_offer_custom_fields_source"],["greenhouse_offer_custom_fields_source"],["zuora_country_geographic_region"],["zuora_country_geographic_region"],["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"]],"sources":[],"metrics":[],"description":"This report provides a breakdown of how many candidates we expect to start in North America.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/greenhouse/rpt/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/greenhouse/rpt/rpt_greenhouse_offer_stage.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033761.7675393,"compiled_sql":"$20","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.rpt_greenhouse_offer_stage","label":"rpt_greenhouse_offer_stage"},{"metadata":{"type":"VIEW","schema":"WORKSPACE_PEOPLE","name":"RPT_HIRES","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"CANDIDATE_ID":{"type":"NUMBER","index":1,"name":"CANDIDATE_ID","comment":null,"display_name":"candidate_id"},"APPLICATION_ID":{"type":"NUMBER","index":2,"name":"APPLICATION_ID","comment":null,"display_name":"application_id"},"REGION":{"type":"TEXT","index":3,"name":"REGION","comment":null,"display_name":"region"},"JOB_ID":{"type":"NUMBER","index":4,"name":"JOB_ID","comment":null,"display_name":"job_id"},"JOB_NAME":{"type":"TEXT","index":5,"name":"JOB_NAME","comment":null,"display_name":"job_name"},"CANDIDATE_RECRUITER":{"type":"TEXT","index":6,"name":"CANDIDATE_RECRUITER","comment":null,"display_name":"candidate_recruiter"},"SOURCE_NAME":{"type":"TEXT","index":7,"name":"SOURCE_NAME","comment":null,"display_name":"source_name"},"SOURCE_TYPE":{"type":"TEXT","index":8,"name":"SOURCE_TYPE","comment":null,"display_name":"source_type"},"APPLIED_AT":{"type":"TIMESTAMP_NTZ","index":9,"name":"APPLIED_AT","comment":null,"display_name":"applied_at"},"JOB_OPENING_OPENED_AT":{"type":"TIMESTAMP_NTZ","index":10,"name":"JOB_OPENING_OPENED_AT","comment":null,"display_name":"job_opening_opened_at"},"JOB_OPENING_CLOSED_AT":{"type":"TIMESTAMP_NTZ","index":11,"name":"JOB_OPENING_CLOSED_AT","comment":null,"display_name":"job_opening_closed_at"},"JOB_OPENING_TARGET_START_DATE":{"type":"DATE","index":12,"name":"JOB_OPENING_TARGET_START_DATE","comment":null,"display_name":"job_opening_target_start_date"},"OFFER_SENT_AT":{"type":"TIMESTAMP_NTZ","index":13,"name":"OFFER_SENT_AT","comment":null,"display_name":"offer_sent_at"},"OFFER_ACCEPTED_AT":{"type":"TIMESTAMP_NTZ","index":14,"name":"OFFER_ACCEPTED_AT","comment":null,"display_name":"offer_accepted_at"},"GREENHOUSE_DEPARTMENT_NAME":{"type":"TEXT","index":15,"name":"GREENHOUSE_DEPARTMENT_NAME","comment":null,"display_name":"greenhouse_department_name"},"GREENHOUSE_DEPARTMENT_LEVEL_1":{"type":"TEXT","index":16,"name":"GREENHOUSE_DEPARTMENT_LEVEL_1","comment":null,"display_name":"greenhouse_department_level_1"},"GREENHOUSE_DEPARTMENT_LEVEL_2":{"type":"TEXT","index":17,"name":"GREENHOUSE_DEPARTMENT_LEVEL_2","comment":null,"display_name":"greenhouse_department_level_2"},"GREENHOUSE_DEPARTMENT_LEVEL_3":{"type":"TEXT","index":18,"name":"GREENHOUSE_DEPARTMENT_LEVEL_3","comment":null,"display_name":"greenhouse_department_level_3"}},"stats":{"has_stats":{"id":"has_stats","label":"Has Stats?","value":false,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_hires","raw_sql":"$21","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.greenhouse_applications_source","model.gitlab_snowflake.greenhouse_applications_source","model.gitlab_snowflake.greenhouse_sources_source","model.gitlab_snowflake.greenhouse_sources_source","model.gitlab_snowflake.greenhouse_offers_source","model.gitlab_snowflake.greenhouse_offers_source","model.gitlab_snowflake.greenhouse_openings_source","model.gitlab_snowflake.greenhouse_openings_source","model.gitlab_snowflake.wk_prep_greenhouse_departments","model.gitlab_snowflake.wk_prep_greenhouse_departments","model.gitlab_snowflake.greenhouse_applications_jobs_source","model.gitlab_snowflake.greenhouse_applications_jobs_source","model.gitlab_snowflake.greenhouse_jobs_source","model.gitlab_snowflake.greenhouse_jobs_source","model.gitlab_snowflake.greenhouse_candidates_source","model.gitlab_snowflake.greenhouse_candidates_source","model.gitlab_snowflake.greenhouse_jobs_departments_source","model.gitlab_snowflake.greenhouse_jobs_departments_source"]},"config":{"enabled":true,"alias":null,"schema":"workspace_people","database":"PROD","tags":["workspace","people"],"meta":{},"materialized":"view","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_people","fqn":["gitlab_snowflake","workspaces","workspace_people","talent_acquisition","rpt_hires"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_people/talent_acquisition/rpt_hires.sql","original_file_path":"models/workspaces/workspace_people/talent_acquisition/rpt_hires.sql","name":"rpt_hires","alias":"rpt_hires","checksum":{"name":"sha256","checksum":"a197185e1206aacbb1759580049ebbf2caf9f7fc5fbb7f8d4e0c74e1dfc2ef02"},"tags":["workspace","people"],"refs":[["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"],["greenhouse_applications_source"],["greenhouse_applications_source"],["greenhouse_sources_source"],["greenhouse_sources_source"],["greenhouse_offers_source"],["greenhouse_offers_source"],["greenhouse_openings_source"],["greenhouse_openings_source"],["wk_prep_greenhouse_departments"],["wk_prep_greenhouse_departments"],["greenhouse_applications_jobs_source"],["greenhouse_applications_jobs_source"],["greenhouse_jobs_source"],["greenhouse_jobs_source"],["greenhouse_candidates_source"],["greenhouse_candidates_source"],["greenhouse_jobs_departments_source"],["greenhouse_jobs_departments_source"]],"sources":[],"metrics":[],"description":"This is a report specifically for talent acquisition and counts accepted offers as hires.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_people/talent_acquisition/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_people/talent_acquisition/rpt_hires.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_people","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"view","tags":["people"]},"created_at":1689033735.0438483,"compiled_sql":"$22","extra_ctes_injected":true,"extra_ctes":[{"id":"model.gitlab_snowflake.wk_prep_greenhouse_departments","sql":"$23"}],"relation_name":"\"PROD\".workspace_people.rpt_hires","label":"rpt_hires"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"BAMBOOHR_WORK_EMAIL","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"EMPLOYEE_ID":{"type":"NUMBER","index":1,"name":"employee_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"employee_id"},"FULL_NAME":{"type":"TEXT","index":2,"name":"full_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"full_name"},"WORK_EMAIL":{"type":"TEXT","index":3,"name":"work_email","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"work_email"},"VALID_FROM_DATE":{"type":"TIMESTAMP_NTZ","index":4,"name":"valid_from_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"valid_from_date"},"VALID_TO_DATE":{"type":"TIMESTAMP_NTZ","index":5,"name":"valid_to_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"valid_to_date"},"RANK_EMAIL_DESC":{"type":"NUMBER","index":6,"name":"rank_email_desc","comment":null,"description":"Identifies the email in descending order where 1 is equal to the the current email.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rank_email_desc"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:07UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":279040,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.bamboohr_work_email","raw_sql":"$24","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.max_date_in_bamboo_analyses","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.bamboohr_id_employee_number_mapping","model.gitlab_snowflake.blended_directory_source","model.gitlab_snowflake.blended_directory_source"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","bamboohr","xf","bamboohr_work_email"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/bamboohr/xf/bamboohr_work_email.sql","original_file_path":"models/legacy/bamboohr/xf/bamboohr_work_email.sql","name":"bamboohr_work_email","alias":"bamboohr_work_email","checksum":{"name":"sha256","checksum":"00b60032218e60943b3eddb6433effe2d75de8797565a1a785c37e1b2f4ab9d1"},"tags":[],"refs":[["bamboohr_id_employee_number_mapping"],["bamboohr_id_employee_number_mapping"],["blended_directory_source"],["blended_directory_source"]],"sources":[],"metrics":[],"description":"This shows employee work emails as applicable to the valid_from_date and valid_to_date","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/bamboohr/xf/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/xf/bamboohr_work_email.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033758.959388,"compiled_sql":"$25","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.bamboohr_work_email","label":"bamboohr_work_email"}],"test":[{"raw_sql":"{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_bamboohr_id_employee_nu_aca63a777d63efc7a72fc5abc3c3d8ac\") }}","test_metadata":{"name":"unique","kwargs":{"column_name":"greenhouse_candidate_id","model":"{{ get_where_subquery(ref('bamboohr_id_employee_number_mapping')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_unique","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.bamboohr_id_employee_number_mapping"]},"config":{"enabled":true,"alias":"unique_bamboohr_id_employee_nu_aca63a777d63efc7a72fc5abc3c3d8ac","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","legacy","bamboohr","sensitive","unique_bamboohr_id_employee_number_mapping_greenhouse_candidate_id"],"unique_id":"test.gitlab_snowflake.unique_bamboohr_id_employee_number_mapping_greenhouse_candidate_id.a0fcb48c5d","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"unique_bamboohr_id_employee_nu_aca63a777d63efc7a72fc5abc3c3d8ac.sql","original_file_path":"models/legacy/bamboohr/sensitive/schema.yml","name":"unique_bamboohr_id_employee_number_mapping_greenhouse_candidate_id","alias":"unique_bamboohr_id_employee_nu_aca63a777d63efc7a72fc5abc3c3d8ac","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["bamboohr_id_employee_number_mapping"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/legacy/bamboohr/sensitive/schema.yml/unique_bamboohr_id_employee_nu_aca63a777d63efc7a72fc5abc3c3d8ac.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"unique_bamboohr_id_employee_nu_aca63a777d63efc7a72fc5abc3c3d8ac"},"created_at":1689033758.8650563,"compiled_sql":"\n    \n    \n\nselect\n    greenhouse_candidate_id as unique_field,\n    count(*) as n_records\n\nfrom \"PREP\".sensitive.bamboohr_id_employee_number_mapping\nwhere greenhouse_candidate_id is not null\ngroup by greenhouse_candidate_id\nhaving count(*) > 1\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"greenhouse_candidate_id","file_key_name":"models.bamboohr_id_employee_number_mapping","label":"unique_bamboohr_id_employee_number_mapping_greenhouse_candidate_id"}]},"node":{"resource_type":"model","name":"bamboohr_id_employee_number_mapping","unique_id":"model.gitlab_snowflake.bamboohr_id_employee_number_mapping"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"WORKDAY","name":"BLENDED_EMPLOYEE_MAPPING_SOURCE","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"EMPLOYEE_NUMBER":{"type":"NUMBER","index":1,"name":"employee_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"employee_number"},"EMPLOYEE_ID":{"type":"NUMBER","index":2,"name":"employee_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"employee_id"},"FIRST_NAME":{"type":"TEXT","index":3,"name":"first_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":4,"name":"last_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_name"},"HIRE_DATE":{"type":"DATE","index":5,"name":"hire_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hire_date"},"TERMINATION_DATE":{"type":"DATE","index":6,"name":"termination_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"termination_date"},"FIRST_INACTIVE_DATE":{"type":"DATE","index":7,"name":"first_inactive_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_inactive_date"},"GREENHOUSE_CANDIDATE_ID":{"type":"NUMBER","index":8,"name":"greenhouse_candidate_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"greenhouse_candidate_id"},"COST_CENTER":{"type":"TEXT","index":9,"name":"cost_center","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cost_center"},"GITLAB_USERNAME":{"type":"TEXT","index":10,"name":"gitlab_username","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_username"},"JOBTITLE_SPECIALITY_SINGLE_SELECT":{"type":"TEXT","index":11,"name":"jobtitle_speciality_single_select","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"jobtitle_speciality_single_select"},"JOBTITLE_SPECIALITY_MULTI_SELECT":{"type":"TEXT","index":12,"name":"jobtitle_speciality_multi_select","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"jobtitle_speciality_multi_select"},"LOCALITY":{"type":"TEXT","index":13,"name":"locality","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"locality"},"NATIONALITY":{"type":"TEXT","index":14,"name":"nationality","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"nationality"},"GENDER_DROPDOWN":{"type":"TEXT","index":15,"name":"gender_dropdown","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"gender_dropdown"},"REGION":{"type":"TEXT","index":16,"name":"region","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"region"},"JOB_ROLE":{"type":"TEXT","index":17,"name":"job_role","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_role"},"SALES_GEO_DIFFERENTIAL":{"type":"TEXT","index":18,"name":"sales_geo_differential","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_geo_differential"},"DATE_OF_BIRTH":{"type":"DATE","index":19,"name":"date_of_birth","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"date_of_birth"},"EMPLOYEE_STATUS_DATE":{"type":"DATE","index":20,"name":"employee_status_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"employee_status_date"},"EMPLOYMENT_HISTORY_STATUS":{"type":"TEXT","index":21,"name":"employment_history_status","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"employment_history_status"},"ETHNICITY":{"type":"TEXT","index":22,"name":"ethnicity","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"ethnicity"},"GENDER":{"type":"TEXT","index":23,"name":"gender","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"gender"},"COUNTRY":{"type":"TEXT","index":24,"name":"country","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"country"},"AGE":{"type":"NUMBER","index":25,"name":"age","comment":null,"description":"","meta":{"masking_policy":"analyst_people"},"data_type":null,"quote":null,"tags":[],"display_name":"age"},"JOB_GRADE":{"type":"TEXT","index":26,"name":"job_grade","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_grade"},"PAY_FREQUENCY":{"type":"FLOAT","index":27,"name":"pay_frequency","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pay_frequency"},"UPLOADED_AT":{"type":"TIMESTAMP_NTZ","index":28,"name":"uploaded_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"uploaded_at"},"UPLOADED_ROW_NUMBER_DESC":{"type":"NUMBER","index":29,"name":"uploaded_row_number_desc","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"uploaded_row_number_desc"},"SOURCE_SYSTEM":{"type":"TEXT","index":30,"name":"source_system","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_system"},"UNIQUE_FILTER_KEY":{"type":"TEXT","index":31,"name":"unique_filter_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"unique_filter_key"},"SORT_ORDER":{"type":"NUMBER","index":32,"name":"SORT_ORDER","comment":null,"display_name":"sort_order"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:02UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":261098496,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.blended_employee_mapping_source","raw_sql":"$26","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.workday_bamboohr_blending_filter","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bamboohr_id_employee_number_mapping_source","model.gitlab_snowflake.bamboohr_id_employee_number_mapping_source","model.gitlab_snowflake.workday_employee_mapping_source","model.gitlab_snowflake.workday_employee_mapping_source"]},"config":{"enabled":true,"alias":null,"schema":"workday","database":"PREP","tags":["sources"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"workday","fqn":["gitlab_snowflake","sources","workday","blended_employee_mapping_source"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"sources/workday/blended_employee_mapping_source.sql","original_file_path":"models/sources/workday/blended_employee_mapping_source.sql","name":"blended_employee_mapping_source","alias":"blended_employee_mapping_source","checksum":{"name":"sha256","checksum":"d618ff734c53491ccf190b415af734c392c234a3595cb722a95ea71ba43a2900"},"tags":["sources"],"refs":[["bamboohr_id_employee_number_mapping_source"],["bamboohr_id_employee_number_mapping_source"],["workday_employee_mapping_source"],["workday_employee_mapping_source"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/sources/workday/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/sources/workday/blended_employee_mapping_source.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"workday","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["sources"]},"created_at":1689033738.6381176,"compiled_sql":"$27","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".workday.blended_employee_mapping_source","label":"blended_employee_mapping_source"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.ref","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/override/ref.sql","original_file_path":"macros/utils/override/ref.sql","name":"ref","macro_sql":"{% macro ref(model_name) %}\n\n  {% set relation = builtins.ref(model_name) %}\n\n  {% if is_table_sampled(model_name) %}\n    {% set new_relation = get_sample_relation(relation) %}\n  {% else %}\n    {% set new_relation = relation %}\n  {% endif %}\n  \n  {% do return(new_relation) %}\n\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.is_table_sampled","macro.gitlab_snowflake.get_sample_relation"]},"description":"This macro will return a the normal relation unless one of the following conditions are met:\n- The table is configured to be sampled, will return relation with the sample_suffix variable appended to the table name","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/override/override.yml","arguments":[],"created_at":1689033766.060527}]},"node":{"resource_type":"model","name":"bamboohr_id_employee_number_mapping","unique_id":"model.gitlab_snowflake.bamboohr_id_employee_number_mapping"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L28",null,{"versions":{"Source":"$29","Compiled":"$2a"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
