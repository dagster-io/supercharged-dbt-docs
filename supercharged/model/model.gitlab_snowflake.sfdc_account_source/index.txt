1:HL["/supercharged-dbt-docs/supercharged/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css",{"as":"style"}]
0:["3_N3LAWgtmWGg2et9V1N1",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.sfdc_account_source","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.sfdc_account_source\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/supercharged-dbt-docs/supercharged/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_5f725a","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.sfdc_account_source","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.sfdc_account_source\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.sfdc_account_source","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ColumnDetails","async":false}
12:I{"id":9941,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ReferenceListClient","async":false}
2e:I{"id":4431,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:T263e,{{ config(
    tags=["mnpi"]
) }}

/*

  ATTENTION: When a field is added to this live model, add it to the SFDC_ACCOUNT_SNAPSHOTS_SOURCE model to keep the live and snapshot models in alignment.

*/

WITH source AS (

  SELECT *
  FROM {{ source('salesforce', 'account') }}

),

renamed AS (

  SELECT
    id AS account_id,
    name AS account_name,

    -- keys
    account_id_18__c AS account_id_18,
    masterrecordid AS master_record_id,
    ownerid AS owner_id,
    parentid AS parent_id,
    primary_contact_id__c AS primary_contact_id,
    recordtypeid AS record_type_id,
    ultimate_parent_account_id__c AS ultimate_parent_id,
    partner_vat_tax_id__c AS partner_vat_tax_id,


    -- key people GL side
    gitlab_com_user__c AS gitlab_com_user,
    account_manager__c AS account_manager,
    account_owner_calc__c AS account_owner,
    account_owner_team__c AS account_owner_team,
    proposed_account_owner__c AS proposed_account_owner,
    business_development_rep__c AS business_development_rep,
    dedicated_service_engineer__c AS dedicated_service_engineer,
    sdr_assigned__c AS sales_development_rep,
    -- solutions_architect__c                     AS solutions_architect,
    technical_account_manager_lu__c AS technical_account_manager_id,

    -- info
    "{{ this.database }}".{{ target.schema }}.ID15TO18(SUBSTRING(REGEXP_REPLACE(
      ultimate_parent_account__c, '_HL_ENCODED_/|<a\\s+href="/', ''
      ), 0, 15)) AS ultimate_parent_account_id,
    ultimate_parent_account_text__c AS ultimate_parent_account_name,
    type AS account_type,
    dfox_industry__c AS df_industry,
    parent_lam_industry_acct_heirarchy__c AS industry,
    sub_industry__c AS sub_industry,
    parent_lam_industry_acct_heirarchy__c AS parent_account_industry_hierarchy,
    account_tier__c AS account_tier,
    account_tier_notes__c AS account_tier_notes,
    customer_since__c::DATE AS customer_since_date,
    carr_this_account__c AS carr_this_account,
    carr_acct_family__c AS carr_account_family,
    next_renewal_date__c AS next_renewal_date,
    license_utilization__c AS license_utilization,
    support_level__c AS support_level,
    named_account__c AS named_account,
    billingcountry AS billing_country,
    account_demographics_upa_country__c AS billing_country_code,
    billingpostalcode AS billing_postal_code,
    sdr_target_account__c::BOOLEAN AS is_sdr_target_account,
    lam_tier__c AS lam,
    lam_dev_count__c AS lam_dev_count,
    jihu_account__c::BOOLEAN AS is_jihu_account,
    partners_signed_contract_date__c AS partners_signed_contract_date,
    partner_account_iban_number__c AS partner_account_iban_number,
    partners_partner_type__c AS partner_type,
    partners_partner_status__c AS partner_status,
    bdr_prospecting_status__c AS bdr_prospecting_status,
    first_order_available__c::BOOLEAN AS is_first_order_available,
    REPLACE(
      zi_technologies__c,
      'The technologies that are used and not used at this account, according to ZoomInfo, after completing a scan are:', -- noqa:L016
      ''
    ) AS zi_technologies,
    technical_account_manager_date__c::DATE AS technical_account_manager_date,
    gitlab_customer_success_project__c::VARCHAR AS gitlab_customer_success_project,
    forbes_2000_rank__c AS forbes_2000_rank,
    potential_users__c AS potential_users,
    number_of_licenses_this_account__c AS number_of_licenses_this_account,
    decision_maker_count_linkedin__c AS decision_maker_count_linkedin,
    numberofemployees                AS number_of_employees,
    phone AS account_phone,
    zi_phone__c AS zoominfo_account_phone,
    number_of_employees_manual_source_admin__c AS admin_manual_source_number_of_employees,
    account_address_manual_source_admin__c AS admin_manual_source_account_address,

    -- account demographics fields

    -- Add sales_segment_cleaning macro to avoid duplication in downstream models
    {{sales_segment_cleaning('account_demographics_sales_segment__c')}} AS account_sales_segment,
    account_demographics_geo__c AS account_geo,
    account_demographics_region__c AS account_region,
    account_demographics_area__c AS account_area,
    account_demographics_territory__c AS account_territory,
    account_demographics_business_unit__c AS account_business_unit,
    account_demographics_role_type__c AS account_role_type,
    account_demographics_employee_count__c AS account_employee_count,
    account_demographic_max_family_employees__c AS account_max_family_employee,
    account_demographics_upa_country__c AS account_upa_country,
    account_demographics_upa_state__c AS account_upa_state,
    account_demographics_upa_city__c AS account_upa_city,
    account_demographics_upa_street__c AS account_upa_street,
    account_demographics_upa_postal_code__c AS account_upa_postal_code,

    -- present state info
    gs_health_score__c AS health_number,
    gs_health_score_color__c AS health_score_color,

    -- opportunity metrics
    count_of_active_subscription_charges__c AS count_active_subscription_charges,
    count_of_active_subscriptions__c AS count_active_subscriptions,
    count_of_billing_accounts__c AS count_billing_accounts,
    license_user_count__c AS count_licensed_users,
    count_of_new_business_won_opps__c AS count_of_new_business_won_opportunities,
    count_of_open_renewal_opportunities__c AS count_open_renewal_opportunities,
    count_of_opportunities__c AS count_opportunities,
    count_of_products_purchased__c AS count_products_purchased,
    count_of_won_opportunities__c AS count_won_opportunities,
    concurrent_ee_subscriptions__c AS count_concurrent_ee_subscriptions,
    ce_instances__c AS count_ce_instances,
    active_ce_users__c AS count_active_ce_users,
    number_of_open_opportunities__c AS count_open_opportunities,
    using_ce__c AS count_using_ce,

    --account based marketing fields
    abm_tier__c AS abm_tier,
    gtm_strategy__c AS gtm_strategy,
    gtm_acceleration_date__c AS gtm_acceleration_date,
    gtm_account_based_date__c AS gtm_account_based_date,
    gtm_account_centric_date__c AS gtm_account_centric_date,
    abm_tier_1_date__c AS abm_tier_1_date,
    abm_tier_2_date__c AS abm_tier_2_date,
    abm_tier_3_date__c AS abm_tier_3_date,

    --demandbase fields
    account_list__c AS demandbase_account_list,
    intent__c AS demandbase_intent,
    page_views__c AS demandbase_page_views,
    score__c AS demandbase_score,
    sessions__c AS demandbase_sessions,
    trending_offsite_intent__c AS demandbase_trending_offsite_intent,
    trending_onsite_engagement__c AS demandbase_trending_onsite_engagement,

    -- sales segment fields
    account_demographics_sales_segment__c AS ultimate_parent_sales_segment,
    sales_segmentation_new__c AS division_sales_segment,
    account_owner_user_segment__c AS account_owner_user_segment,
    ultimate_parent_sales_segment_employees__c AS sales_segment,
    sales_segmentation_new__c AS account_segment,

    locally_managed__c AS is_locally_managed_account,
    strategic__c AS is_strategic_account,

    -- ************************************
    -- New SFDC Account Fields for FY22 Planning
    next_fy_account_owner_temp__c AS next_fy_account_owner_temp,
    next_fy_planning_notes_temp__c AS next_fy_planning_notes_temp,
    --*************************************
    -- Partner Account fields
    partner_track__c AS partner_track,
    partners_partner_type__c AS partners_partner_type,
    gitlab_partner_programs__c AS gitlab_partner_program,
    focus_partner__c AS is_focus_partner,

    --*************************************
    -- Zoom Info Fields
    zi_account_name__c AS zoom_info_company_name,
    zi_revenue__c AS zoom_info_company_revenue,
    zi_employees__c AS zoom_info_company_employee_count,
    zi_industry__c AS zoom_info_company_industry,
    zi_city__c AS zoom_info_company_city,
    zi_state_province__c AS zoom_info_company_state_province,
    zi_country__c AS zoom_info_company_country,
    exclude_from_zoominfo_enrich__c AS is_excluded_from_zoom_info_enrich,
    zi_website__c AS zoom_info_website,
    zi_company_other_domains__c AS zoom_info_company_other_domains,
    dozisf__zoominfo_id__c AS zoom_info_dozisf_zi_id,
    zi_parent_company_zoominfo_id__c AS zoom_info_parent_company_zi_id,
    zi_parent_company_name__c AS zoom_info_parent_company_name,
    zi_ultimate_parent_company_zoominfo_id__c AS zoom_info_ultimate_parent_company_zi_id,
    zi_ultimate_parent_company_name__c AS zoom_info_ultimate_parent_company_name,
    zi_number_of_developers__c AS zoom_info_number_of_developers,
    zi_total_funding__c AS zoom_info_total_funding,

    -- NF: Added on 20220427 to support EMEA reporting
    key_account__c                     AS is_key_account,

    -- Gainsight Fields
    gs_first_value_date__c AS gs_first_value_date,
    gs_last_tam_activity_date__c AS gs_last_csm_activity_date,
    eoa_sentiment__c AS eoa_sentiment,
    gs_health_user_engagement__c AS gs_health_user_engagement,
    gs_health_cd__c AS gs_health_cd,
    gs_health_devsecops__c AS gs_health_devsecops,
    gs_health_ci__c AS gs_health_ci,
    gs_health_scm__c AS gs_health_scm,

    -- Risk Fields
    risk_impact__c AS risk_impact,
    risk_reason__c AS risk_reason,
    last_timeline_at_risk_update__c AS last_timeline_at_risk_update,
    last_at_risk_update_comments__c AS last_at_risk_update_comments,

    -- metadata
    createdbyid AS created_by_id,
    createddate AS created_date,
    isdeleted AS is_deleted,
    lastmodifiedbyid AS last_modified_by_id,
    lastmodifieddate AS last_modified_date,
    lastactivitydate AS last_activity_date,
    CONVERT_TIMEZONE(
      'America/Los_Angeles', CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP())
    ) AS _last_dbt_run,
    systemmodstamp

  FROM source
)

SELECT *
FROM renamed11:T28a7,

/*

  ATTENTION: When a field is added to this live model, add it to the SFDC_ACCOUNT_SNAPSHOTS_SOURCE model to keep the live and snapshot models in alignment.

*/

WITH source AS (

  SELECT *
  FROM "RAW".salesforce_stitch.account

),

renamed AS (

  SELECT
    id AS account_id,
    name AS account_name,

    -- keys
    account_id_18__c AS account_id_18,
    masterrecordid AS master_record_id,
    ownerid AS owner_id,
    parentid AS parent_id,
    primary_contact_id__c AS primary_contact_id,
    recordtypeid AS record_type_id,
    ultimate_parent_account_id__c AS ultimate_parent_id,
    partner_vat_tax_id__c AS partner_vat_tax_id,


    -- key people GL side
    gitlab_com_user__c AS gitlab_com_user,
    account_manager__c AS account_manager,
    account_owner_calc__c AS account_owner,
    account_owner_team__c AS account_owner_team,
    proposed_account_owner__c AS proposed_account_owner,
    business_development_rep__c AS business_development_rep,
    dedicated_service_engineer__c AS dedicated_service_engineer,
    sdr_assigned__c AS sales_development_rep,
    -- solutions_architect__c                     AS solutions_architect,
    technical_account_manager_lu__c AS technical_account_manager_id,

    -- info
    "PREP".preparation.ID15TO18(SUBSTRING(REGEXP_REPLACE(
      ultimate_parent_account__c, '_HL_ENCODED_/|<a\\s+href="/', ''
      ), 0, 15)) AS ultimate_parent_account_id,
    ultimate_parent_account_text__c AS ultimate_parent_account_name,
    type AS account_type,
    dfox_industry__c AS df_industry,
    parent_lam_industry_acct_heirarchy__c AS industry,
    sub_industry__c AS sub_industry,
    parent_lam_industry_acct_heirarchy__c AS parent_account_industry_hierarchy,
    account_tier__c AS account_tier,
    account_tier_notes__c AS account_tier_notes,
    customer_since__c::DATE AS customer_since_date,
    carr_this_account__c AS carr_this_account,
    carr_acct_family__c AS carr_account_family,
    next_renewal_date__c AS next_renewal_date,
    license_utilization__c AS license_utilization,
    support_level__c AS support_level,
    named_account__c AS named_account,
    billingcountry AS billing_country,
    account_demographics_upa_country__c AS billing_country_code,
    billingpostalcode AS billing_postal_code,
    sdr_target_account__c::BOOLEAN AS is_sdr_target_account,
    lam_tier__c AS lam,
    lam_dev_count__c AS lam_dev_count,
    jihu_account__c::BOOLEAN AS is_jihu_account,
    partners_signed_contract_date__c AS partners_signed_contract_date,
    partner_account_iban_number__c AS partner_account_iban_number,
    partners_partner_type__c AS partner_type,
    partners_partner_status__c AS partner_status,
    bdr_prospecting_status__c AS bdr_prospecting_status,
    first_order_available__c::BOOLEAN AS is_first_order_available,
    REPLACE(
      zi_technologies__c,
      'The technologies that are used and not used at this account, according to ZoomInfo, after completing a scan are:', -- noqa:L016
      ''
    ) AS zi_technologies,
    technical_account_manager_date__c::DATE AS technical_account_manager_date,
    gitlab_customer_success_project__c::VARCHAR AS gitlab_customer_success_project,
    forbes_2000_rank__c AS forbes_2000_rank,
    potential_users__c AS potential_users,
    number_of_licenses_this_account__c AS number_of_licenses_this_account,
    decision_maker_count_linkedin__c AS decision_maker_count_linkedin,
    numberofemployees                AS number_of_employees,
    phone AS account_phone,
    zi_phone__c AS zoominfo_account_phone,
    number_of_employees_manual_source_admin__c AS admin_manual_source_number_of_employees,
    account_address_manual_source_admin__c AS admin_manual_source_account_address,

    -- account demographics fields

    -- Add sales_segment_cleaning macro to avoid duplication in downstream models
    CASE WHEN LOWER(account_demographics_sales_segment__c) = 'smb' THEN 'SMB'
     WHEN LOWER(account_demographics_sales_segment__c) LIKE ('mid%market') THEN 'Mid-Market'
     WHEN LOWER(account_demographics_sales_segment__c) = 'unknown' THEN 'SMB'
     WHEN LOWER(account_demographics_sales_segment__c) IS NULL THEN 'SMB'
     WHEN LOWER(account_demographics_sales_segment__c) = 'pubsec' THEN 'PubSec'
     WHEN LOWER(account_demographics_sales_segment__c) = 'mm' THEN 'Mid-Market'
     WHEN LOWER(account_demographics_sales_segment__c) = 'lrg' THEN 'Large'
     WHEN LOWER(account_demographics_sales_segment__c) = 'jihu' THEN 'JiHu'
     WHEN account_demographics_sales_segment__c IS NOT NULL THEN initcap(account_demographics_sales_segment__c)
END AS account_sales_segment,
    account_demographics_geo__c AS account_geo,
    account_demographics_region__c AS account_region,
    account_demographics_area__c AS account_area,
    account_demographics_territory__c AS account_territory,
    account_demographics_business_unit__c AS account_business_unit,
    account_demographics_role_type__c AS account_role_type,
    account_demographics_employee_count__c AS account_employee_count,
    account_demographic_max_family_employees__c AS account_max_family_employee,
    account_demographics_upa_country__c AS account_upa_country,
    account_demographics_upa_state__c AS account_upa_state,
    account_demographics_upa_city__c AS account_upa_city,
    account_demographics_upa_street__c AS account_upa_street,
    account_demographics_upa_postal_code__c AS account_upa_postal_code,

    -- present state info
    gs_health_score__c AS health_number,
    gs_health_score_color__c AS health_score_color,

    -- opportunity metrics
    count_of_active_subscription_charges__c AS count_active_subscription_charges,
    count_of_active_subscriptions__c AS count_active_subscriptions,
    count_of_billing_accounts__c AS count_billing_accounts,
    license_user_count__c AS count_licensed_users,
    count_of_new_business_won_opps__c AS count_of_new_business_won_opportunities,
    count_of_open_renewal_opportunities__c AS count_open_renewal_opportunities,
    count_of_opportunities__c AS count_opportunities,
    count_of_products_purchased__c AS count_products_purchased,
    count_of_won_opportunities__c AS count_won_opportunities,
    concurrent_ee_subscriptions__c AS count_concurrent_ee_subscriptions,
    ce_instances__c AS count_ce_instances,
    active_ce_users__c AS count_active_ce_users,
    number_of_open_opportunities__c AS count_open_opportunities,
    using_ce__c AS count_using_ce,

    --account based marketing fields
    abm_tier__c AS abm_tier,
    gtm_strategy__c AS gtm_strategy,
    gtm_acceleration_date__c AS gtm_acceleration_date,
    gtm_account_based_date__c AS gtm_account_based_date,
    gtm_account_centric_date__c AS gtm_account_centric_date,
    abm_tier_1_date__c AS abm_tier_1_date,
    abm_tier_2_date__c AS abm_tier_2_date,
    abm_tier_3_date__c AS abm_tier_3_date,

    --demandbase fields
    account_list__c AS demandbase_account_list,
    intent__c AS demandbase_intent,
    page_views__c AS demandbase_page_views,
    score__c AS demandbase_score,
    sessions__c AS demandbase_sessions,
    trending_offsite_intent__c AS demandbase_trending_offsite_intent,
    trending_onsite_engagement__c AS demandbase_trending_onsite_engagement,

    -- sales segment fields
    account_demographics_sales_segment__c AS ultimate_parent_sales_segment,
    sales_segmentation_new__c AS division_sales_segment,
    account_owner_user_segment__c AS account_owner_user_segment,
    ultimate_parent_sales_segment_employees__c AS sales_segment,
    sales_segmentation_new__c AS account_segment,

    locally_managed__c AS is_locally_managed_account,
    strategic__c AS is_strategic_account,

    -- ************************************
    -- New SFDC Account Fields for FY22 Planning
    next_fy_account_owner_temp__c AS next_fy_account_owner_temp,
    next_fy_planning_notes_temp__c AS next_fy_planning_notes_temp,
    --*************************************
    -- Partner Account fields
    partner_track__c AS partner_track,
    partners_partner_type__c AS partners_partner_type,
    gitlab_partner_programs__c AS gitlab_partner_program,
    focus_partner__c AS is_focus_partner,

    --*************************************
    -- Zoom Info Fields
    zi_account_name__c AS zoom_info_company_name,
    zi_revenue__c AS zoom_info_company_revenue,
    zi_employees__c AS zoom_info_company_employee_count,
    zi_industry__c AS zoom_info_company_industry,
    zi_city__c AS zoom_info_company_city,
    zi_state_province__c AS zoom_info_company_state_province,
    zi_country__c AS zoom_info_company_country,
    exclude_from_zoominfo_enrich__c AS is_excluded_from_zoom_info_enrich,
    zi_website__c AS zoom_info_website,
    zi_company_other_domains__c AS zoom_info_company_other_domains,
    dozisf__zoominfo_id__c AS zoom_info_dozisf_zi_id,
    zi_parent_company_zoominfo_id__c AS zoom_info_parent_company_zi_id,
    zi_parent_company_name__c AS zoom_info_parent_company_name,
    zi_ultimate_parent_company_zoominfo_id__c AS zoom_info_ultimate_parent_company_zi_id,
    zi_ultimate_parent_company_name__c AS zoom_info_ultimate_parent_company_name,
    zi_number_of_developers__c AS zoom_info_number_of_developers,
    zi_total_funding__c AS zoom_info_total_funding,

    -- NF: Added on 20220427 to support EMEA reporting
    key_account__c                     AS is_key_account,

    -- Gainsight Fields
    gs_first_value_date__c AS gs_first_value_date,
    gs_last_tam_activity_date__c AS gs_last_csm_activity_date,
    eoa_sentiment__c AS eoa_sentiment,
    gs_health_user_engagement__c AS gs_health_user_engagement,
    gs_health_cd__c AS gs_health_cd,
    gs_health_devsecops__c AS gs_health_devsecops,
    gs_health_ci__c AS gs_health_ci,
    gs_health_scm__c AS gs_health_scm,

    -- Risk Fields
    risk_impact__c AS risk_impact,
    risk_reason__c AS risk_reason,
    last_timeline_at_risk_update__c AS last_timeline_at_risk_update,
    last_at_risk_update_comments__c AS last_at_risk_update_comments,

    -- metadata
    createdbyid AS created_by_id,
    createddate AS created_date,
    isdeleted AS is_deleted,
    lastmodifiedbyid AS last_modified_by_id,
    lastmodifieddate AS last_modified_date,
    lastactivitydate AS last_activity_date,
    CONVERT_TIMEZONE(
      'America/Los_Angeles', CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP())
    ) AS _last_dbt_run,
    systemmodstamp

  FROM source
)

SELECT *
FROM renamed13:T5510,WITH sfdc_lead AS (

    SELECT *
    FROM {{ref('sfdc_lead_source') }}

), sfdc_contact AS (

    SELECT *
    FROM {{ref('sfdc_contact_source') }}

), sfdc_account AS (

    SELECT *
    FROM {{ref('sfdc_account_source') }}

), marketo AS (

    SELECT *
    FROM {{ref('marketo_lead_source') }}
    
), crm_account AS (

    SELECT *
    FROM {{ref('dim_crm_account') }}

), sales_segment AS (

    SELECT *
    FROM {{ref('prep_sales_segment') }}

), crm_person AS (

    SELECT *
    FROM {{ref('prep_crm_person') }}

), gitlab_users AS (

    SELECT *
    FROM {{ref('gitlab_dotcom_users_source') }}

), customer_db_source AS (

    SELECT *
    FROM {{ref('customers_db_customers_source') }}

), zuora_contact_source AS (

    SELECT *
    FROM {{ref('zuora_contact_source') }}

), zuora_account_source AS (

    SELECT *
    FROM {{ref('zuora_account_source') }}

), dnc_list AS (

    SELECT *,
      ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY CASE WHEN result IN ('undeliverable', 'do_not_send') THEN 2 ELSE 1 END DESC)                                                    AS record_number
    FROM {{ref('driveload_marketing_dnc_list_source')}}
    QUALIFY record_number = 1

), sfdc AS (

    SELECT
      crm_person.sfdc_record_id,
      crm_person.dim_crm_account_id,
      CASE WHEN crm_person.sfdc_record_type = 'contact' THEN sfdc_contact.contact_email ELSE sfdc_lead.lead_email END        AS email_address,
      crm_person.dim_crm_person_id                                                                                           AS crm_person_id,
      crm_person.sfdc_record_type                                                                                            AS sfdc_lead_contact,
      CASE
        WHEN sfdc_lead_contact = 'contact' THEN sfdc_contact.contact_first_name
        ELSE sfdc_lead.lead_first_name
      END                                                                                                                    AS first_name,
      CASE
        WHEN sfdc_lead_contact = 'contact' AND sfdc_contact.contact_last_name  = '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'contact' AND sfdc_contact.contact_last_name  <> '[[unknown]]' THEN sfdc_contact.contact_last_name
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.lead_last_name = '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.lead_last_name <> '[[unknown]]' THEN sfdc_lead.lead_last_name
      END                                                                                                                    AS last_name,
      CASE
        WHEN sfdc_lead_contact = 'contact' AND sfdc_account.account_name = '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'contact' AND sfdc_account.account_name <> '[[unknown]]' THEN sfdc_account.account_name
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.company =  '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.company <>  '[[unknown]]' THEN sfdc_lead.company
      END                                                                                                                   AS company_name,
      crm_person.title                                                                                                      AS job_title,
      crm_person.it_job_title_hierarchy,
      crm_account.parent_crm_account_sales_segment                                                                          AS parent_crm_account_sales_segment,
      crm_account.parent_crm_account_region                                                                                 AS parent_crm_account_region,
      crm_person.account_demographics_geo                                                                                   AS crm_person_region,
      CASE
        WHEN sfdc_lead_contact = 'contact' THEN sfdc_contact.mailing_country
        ELSE sfdc_lead.country
      END                                                                                                                   AS country,
      sfdc_contact.mobile_phone,
      CASE
        WHEN sfdc_lead_contact = 'contact' THEN sfdc_contact.created_date
        ELSE sfdc_lead.created_date
      END                                                                                                                   AS sfdc_created_date,
      crm_person.has_opted_out_email                                                                                        AS opted_out_salesforce,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY sfdc_created_date DESC))                                      AS record_number

    FROM crm_person
    LEFT JOIN sfdc_contact
      ON sfdc_contact.contact_id = crm_person.sfdc_record_id
    LEFT JOIN sfdc_lead
      ON sfdc_lead.lead_id = sfdc_record_id
    LEFT JOIN sfdc_account
      ON sfdc_account.account_id = sfdc_contact.account_id
    LEFT JOIN crm_account
      ON crm_account.dim_crm_account_id = crm_person.dim_crm_account_id
    WHERE  email_address IS NOT NULL
      AND email_address <> ''
    QUALIFY record_number = 1

), marketo_lead AS (

    SELECT
      marketo_lead_id,
      email                                                                             AS email_address,
      first_name,
      last_name,
      IFF(company_name = '[[unknown]]', NULL, company_name)                             AS company_name,
      job_title,
      it_job_title_hierarchy,
      country,
      mobile_phone,
      is_lead_inactive,
      is_contact_inactive,
      IFF(sales_segmentation = 'Unknown', NULL, sales_segmentation)                     AS sales_segmentation,
      is_email_bounced                                                                  AS is_marketo_email_bounced,
      email_bounced_date                                                                AS marketo_email_bounced_date,
      is_unsubscribed                                                                   AS is_marketo_unsubscribed,
      COALESCE(is_marketo_unsubscribed, FALSE)                                          AS has_marketo_unsubscribed,
      is_opt_in                                                                         AS is_marketo_opted_in,
      compliance_segment_value                                                          AS marketo_compliance_segment_value,
      is_pql_marketo,
      is_paid_tier_marketo,
      is_ptpt_contact_marketo,
      is_ptp_contact_marketo,
      is_impacted_by_user_limit_marketo,
      is_currently_in_trial_marketo,
      trial_start_date_marketo,
      trial_end_date_marketo,
      (ROW_NUMBER() OVER (PARTITION BY email ORDER BY updated_at DESC))                 AS record_number

    FROM marketo
    WHERE email IS NOT NULL
      OR  email <> ''
    QUALIFY record_number = 1
  
), gitlab_dotcom AS (

    SELECT
      COALESCE(notification_email, email)                                                                                   AS email_address,
      user_id                                                                                                               AS user_id,
      SPLIT_PART(users_name,' ',1)                                                                                          AS first_name,
      SPLIT_PART(users_name,' ',2)                                                                                          AS last_name,
      user_name                                                                                                             AS user_name,
      organization                                                                                                          AS company_name,
      role                                                                                                                  AS job_title,
      it_job_title_hierarchy,
      created_at                                                                                                            AS created_date,
      confirmed_at                                                                                                          AS confirmed_date,
      state                                                                                                                 AS active_state,
      last_sign_in_at                                                                                                       AS last_login_date,
      is_email_opted_in                                                                                                     AS email_opted_in,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY created_date DESC))                                           AS record_number
    FROM gitlab_users
    WHERE email_address IS NOT NULL
      AND email_address <> ''
      AND active_state = 'active'
    QUALIFY record_number = 1

), customer_db AS (

    SELECT
      customer_email                                                                                                        AS email_address,
      customer_id                                                                                                           AS customer_id,
      customer_first_name                                                                                                   AS first_name,
      customer_last_name                                                                                                    AS last_name,
      company                                                                                                               AS company_name,
      country                                                                                                               AS country,
      customer_created_at                                                                                                   AS created_date,
      confirmed_at                                                                                                          AS confirmed_date,
      company_size                                                                                                          AS market_segment,
      last_sign_in_at                                                                                                       AS last_login_date,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY created_date DESC))                                           AS record_number
    FROM customer_db_source
    WHERE email_address IS NOT NULL
      AND email_address <> ''
      AND confirmed_at IS NOT NULL
    QUALIFY record_number = 1

), zuora AS (

    SELECT
      zuora_contact_source.work_email                                                                                       AS email_address,
      zuora_contact_source.contact_id                                                                                       AS contact_id,
      zuora_contact_source.first_name                                                                                       AS first_name,
      zuora_contact_source.last_name                                                                                        AS last_name,
      zuora_account_source.account_name                                                                                     AS company_name,
      zuora_contact_source.country                                                                                          AS country,
      zuora_contact_source.created_date                                                                                     AS created_date,
      CASE
        WHEN zuora_contact_source.is_deleted = TRUE THEN 'Inactive'
        ELSE 'Active'
      END                                                                                                                   AS active_state,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY zuora_contact_source.created_date DESC))                      AS record_number
    FROM zuora_contact_source
    INNER JOIN zuora_account_source
      ON zuora_account_source.account_id = zuora_contact_source.account_id
    WHERE email_address IS NOT NULL
      AND email_address <> ''
      AND zuora_contact_source.is_deleted = FALSE
    QUALIFY record_number = 1

), emails AS (

    SELECT email_address
    FROM sfdc

    UNION

    SELECT email_address
    FROM gitlab_dotcom

    UNION

    SELECT email_address
    FROM customer_db

    UNION

    SELECT email_address
    FROM zuora

    UNION

    SELECT email_address
    FROM marketo_lead

), final AS (

    SELECT
      {{ dbt_utils.surrogate_key(['emails.email_address']) }}                                                            AS dim_marketing_contact_id,
      emails.email_address,
      COALESCE(zuora.first_name, marketo_lead.first_name, sfdc.first_name, customer_db.first_name, gitlab_dotcom.first_name) 
                                                                                                                         AS first_name,
      COALESCE(zuora.last_name, marketo_lead.last_name, sfdc.last_name, customer_db.last_name, gitlab_dotcom.last_name)  AS last_name,
      gitlab_dotcom.user_name                                                                                            AS gitlab_user_name,
      COALESCE(zuora.company_name,  marketo_lead.company_name, sfdc.company_name, customer_db.company_name, gitlab_dotcom.company_name)
                                                                                                                         AS company_name,
      COALESCE(marketo_lead.job_title, sfdc.job_title, gitlab_dotcom.job_title)                                          AS job_title,
      CASE
        WHEN marketo_lead.job_title IS NOT NULL THEN marketo_lead.it_job_title_hierarchy
        WHEN sfdc.job_title IS NOT NULL THEN sfdc.it_job_title_hierarchy
        ELSE gitlab_dotcom.it_job_title_hierarchy
      END                                                                                                                AS it_job_title_hierarchy,
      COALESCE(zuora.country, marketo_lead.country, sfdc.country, customer_db.country)                                   AS country,
      sfdc.parent_crm_account_sales_segment                                                                              AS sfdc_parent_sales_segment,
      COALESCE(sfdc.parent_crm_account_region, sfdc.crm_person_region)                                                   AS sfdc_parent_crm_account_region,
      marketo_lead.marketo_lead_id                                                                                       AS marketo_lead_id,
      IFF(marketo_lead.email_address IS NOT NULL, TRUE, FALSE)                                                           AS is_marketo_lead,
      COALESCE(marketo_lead.is_marketo_email_bounced, FALSE)                                                             AS is_marketo_email_hard_bounced,
      marketo_lead.marketo_email_bounced_date                                                                            AS marketo_email_hard_bounced_date,
      marketo_lead.is_marketo_unsubscribed,
      marketo_lead.is_marketo_opted_in,
      marketo_lead.has_marketo_unsubscribed,
      marketo_lead.marketo_compliance_segment_value                                                                      AS marketo_compliance_segment_value,
      IFNULL(marketo_lead.is_pql_marketo, FALSE)                                                                         AS is_pql_marketo,
      IFNULL(marketo_lead.is_paid_tier_marketo, FALSE)                                                                   AS is_paid_tier_marketo,
      IFNULL(marketo_lead.is_ptpt_contact_marketo, FALSE)                                                                AS is_ptpt_contact_marketo,
      IFNULL(marketo_lead.is_ptp_contact_marketo, FALSE)                                                                 AS is_ptp_contact_marketo,
      IFNULL(marketo_lead.is_impacted_by_user_limit_marketo, FALSE)                                                      AS is_impacted_by_user_limit_marketo,
      IFNULL(marketo_lead.is_currently_in_trial_marketo, FALSE)                                                          AS is_currently_in_trial_marketo,
      marketo_lead.trial_start_date_marketo                                                                              AS trial_start_date_marketo,
      marketo_lead.trial_end_date_marketo                                                                                AS trial_end_date_marketo,
      CASE
        WHEN sfdc.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_sfdc_lead_contact,
      sfdc.sfdc_record_id,
      sfdc.dim_crm_account_id,
      sfdc.sfdc_lead_contact,
      COALESCE(marketo_lead.mobile_phone, sfdc.mobile_phone)                                                             AS mobile_phone,
      sfdc.sfdc_created_date                                                                                             AS sfdc_created_date,
      sfdc.opted_out_salesforce                                                                                          AS is_sfdc_opted_out,
      CASE
        WHEN gitlab_dotcom.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_gitlab_dotcom_user,
      gitlab_dotcom.user_id                                                                                              AS gitlab_dotcom_user_id,
      gitlab_dotcom.created_date                                                                                         AS gitlab_dotcom_created_date,
      gitlab_dotcom.confirmed_date                                                                                       AS gitlab_dotcom_confirmed_date,
      gitlab_dotcom.active_state                                                                                         AS gitlab_dotcom_active_state,
      gitlab_dotcom.last_login_date                                                                                      AS gitlab_dotcom_last_login_date,
      gitlab_dotcom.email_opted_in                                                                                       AS gitlab_dotcom_email_opted_in,
      DATEDIFF(DAY, gitlab_dotcom.confirmed_date, GETDATE())                                                             AS days_since_saas_signup,
      {{ days_buckets('days_since_saas_signup') }}                                                                       AS days_since_saas_signup_bucket,
      CASE
        WHEN customer_db.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_customer_db_user,
      customer_db.customer_id                                                                                            AS customer_db_customer_id,
      customer_db.created_date                                                                                           AS customer_db_created_date,
      customer_db.confirmed_date                                                                                         AS customer_db_confirmed_date,
      DATEDIFF(DAY, customer_db.confirmed_date, GETDATE())                                                               AS days_since_self_managed_owner_signup,
      {{ days_buckets('days_since_self_managed_owner_signup') }}                                                         AS days_since_self_managed_owner_signup_bucket,
      CASE
        WHEN zuora.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_zuora_billing_contact,
      zuora.contact_id                                                                                                   AS zuora_contact_id,
      zuora.created_date                                                                                                 AS zuora_created_date,
      zuora.active_state                                                                                                 AS zuora_active_state,
      dnc_list.result                                                                                                    AS dnc_list_result,
      CASE
        WHEN dnc_list.result IN ('undeliverable', 'do_not_send')
          THEN FALSE
        ELSE TRUE
      END                                                                                                                AS wip_is_valid_email_address,
      CASE
        WHEN NOT wip_is_valid_email_address
          THEN dnc_list.result
      END                                                                                                                AS wip_invalid_email_address_reason

    FROM emails
    LEFT JOIN sfdc
      ON sfdc.email_address = emails.email_address
    LEFT JOIN gitlab_dotcom
      ON gitlab_dotcom.email_address = emails.email_address
    LEFT JOIN customer_db
      ON customer_db.email_address = emails.email_address
    LEFT JOIN zuora
      ON zuora.email_address = emails.email_address
    LEFT JOIN marketo_lead
      ON marketo_lead.email_address = emails.email_address
    LEFT JOIN dnc_list
      ON dnc_list.email_address = emails.email_address

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@rmistry",
    updated_by="@jpeguero",
    created_date="2021-01-19",
    updated_date="2023-06-19"
) }}14:T5da8,WITH sfdc_lead AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_lead_source

), sfdc_contact AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_contact_source

), sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source

), marketo AS (

    SELECT *
    FROM "PREP".marketo.marketo_lead_source
    
), crm_account AS (

    SELECT *
    FROM "PROD".restricted_safe_common.dim_crm_account

), sales_segment AS (

    SELECT *
    FROM "PROD".common_prep.prep_sales_segment

), crm_person AS (

    SELECT *
    FROM "PROD".common_prep.prep_crm_person

), gitlab_users AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_users_source

), customer_db_source AS (

    SELECT *
    FROM "PREP".customers.customers_db_customers_source

), zuora_contact_source AS (

    SELECT *
    FROM "PREP".zuora.zuora_contact_source

), zuora_account_source AS (

    SELECT *
    FROM "PREP".zuora.zuora_account_source

), dnc_list AS (

    SELECT *,
      ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY CASE WHEN result IN ('undeliverable', 'do_not_send') THEN 2 ELSE 1 END DESC)                                                    AS record_number
    FROM "PREP".driveload.driveload_marketing_dnc_list_source
    QUALIFY record_number = 1

), sfdc AS (

    SELECT
      crm_person.sfdc_record_id,
      crm_person.dim_crm_account_id,
      CASE WHEN crm_person.sfdc_record_type = 'contact' THEN sfdc_contact.contact_email ELSE sfdc_lead.lead_email END        AS email_address,
      crm_person.dim_crm_person_id                                                                                           AS crm_person_id,
      crm_person.sfdc_record_type                                                                                            AS sfdc_lead_contact,
      CASE
        WHEN sfdc_lead_contact = 'contact' THEN sfdc_contact.contact_first_name
        ELSE sfdc_lead.lead_first_name
      END                                                                                                                    AS first_name,
      CASE
        WHEN sfdc_lead_contact = 'contact' AND sfdc_contact.contact_last_name  = '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'contact' AND sfdc_contact.contact_last_name  <> '[[unknown]]' THEN sfdc_contact.contact_last_name
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.lead_last_name = '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.lead_last_name <> '[[unknown]]' THEN sfdc_lead.lead_last_name
      END                                                                                                                    AS last_name,
      CASE
        WHEN sfdc_lead_contact = 'contact' AND sfdc_account.account_name = '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'contact' AND sfdc_account.account_name <> '[[unknown]]' THEN sfdc_account.account_name
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.company =  '[[unknown]]' THEN NULL
        WHEN sfdc_lead_contact = 'lead' AND sfdc_lead.company <>  '[[unknown]]' THEN sfdc_lead.company
      END                                                                                                                   AS company_name,
      crm_person.title                                                                                                      AS job_title,
      crm_person.it_job_title_hierarchy,
      crm_account.parent_crm_account_sales_segment                                                                          AS parent_crm_account_sales_segment,
      crm_account.parent_crm_account_region                                                                                 AS parent_crm_account_region,
      crm_person.account_demographics_geo                                                                                   AS crm_person_region,
      CASE
        WHEN sfdc_lead_contact = 'contact' THEN sfdc_contact.mailing_country
        ELSE sfdc_lead.country
      END                                                                                                                   AS country,
      sfdc_contact.mobile_phone,
      CASE
        WHEN sfdc_lead_contact = 'contact' THEN sfdc_contact.created_date
        ELSE sfdc_lead.created_date
      END                                                                                                                   AS sfdc_created_date,
      crm_person.has_opted_out_email                                                                                        AS opted_out_salesforce,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY sfdc_created_date DESC))                                      AS record_number

    FROM crm_person
    LEFT JOIN sfdc_contact
      ON sfdc_contact.contact_id = crm_person.sfdc_record_id
    LEFT JOIN sfdc_lead
      ON sfdc_lead.lead_id = sfdc_record_id
    LEFT JOIN sfdc_account
      ON sfdc_account.account_id = sfdc_contact.account_id
    LEFT JOIN crm_account
      ON crm_account.dim_crm_account_id = crm_person.dim_crm_account_id
    WHERE  email_address IS NOT NULL
      AND email_address <> ''
    QUALIFY record_number = 1

), marketo_lead AS (

    SELECT
      marketo_lead_id,
      email                                                                             AS email_address,
      first_name,
      last_name,
      IFF(company_name = '[[unknown]]', NULL, company_name)                             AS company_name,
      job_title,
      it_job_title_hierarchy,
      country,
      mobile_phone,
      is_lead_inactive,
      is_contact_inactive,
      IFF(sales_segmentation = 'Unknown', NULL, sales_segmentation)                     AS sales_segmentation,
      is_email_bounced                                                                  AS is_marketo_email_bounced,
      email_bounced_date                                                                AS marketo_email_bounced_date,
      is_unsubscribed                                                                   AS is_marketo_unsubscribed,
      COALESCE(is_marketo_unsubscribed, FALSE)                                          AS has_marketo_unsubscribed,
      is_opt_in                                                                         AS is_marketo_opted_in,
      compliance_segment_value                                                          AS marketo_compliance_segment_value,
      is_pql_marketo,
      is_paid_tier_marketo,
      is_ptpt_contact_marketo,
      is_ptp_contact_marketo,
      is_impacted_by_user_limit_marketo,
      is_currently_in_trial_marketo,
      trial_start_date_marketo,
      trial_end_date_marketo,
      (ROW_NUMBER() OVER (PARTITION BY email ORDER BY updated_at DESC))                 AS record_number

    FROM marketo
    WHERE email IS NOT NULL
      OR  email <> ''
    QUALIFY record_number = 1
  
), gitlab_dotcom AS (

    SELECT
      COALESCE(notification_email, email)                                                                                   AS email_address,
      user_id                                                                                                               AS user_id,
      SPLIT_PART(users_name,' ',1)                                                                                          AS first_name,
      SPLIT_PART(users_name,' ',2)                                                                                          AS last_name,
      user_name                                                                                                             AS user_name,
      organization                                                                                                          AS company_name,
      role                                                                                                                  AS job_title,
      it_job_title_hierarchy,
      created_at                                                                                                            AS created_date,
      confirmed_at                                                                                                          AS confirmed_date,
      state                                                                                                                 AS active_state,
      last_sign_in_at                                                                                                       AS last_login_date,
      is_email_opted_in                                                                                                     AS email_opted_in,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY created_date DESC))                                           AS record_number
    FROM gitlab_users
    WHERE email_address IS NOT NULL
      AND email_address <> ''
      AND active_state = 'active'
    QUALIFY record_number = 1

), customer_db AS (

    SELECT
      customer_email                                                                                                        AS email_address,
      customer_id                                                                                                           AS customer_id,
      customer_first_name                                                                                                   AS first_name,
      customer_last_name                                                                                                    AS last_name,
      company                                                                                                               AS company_name,
      country                                                                                                               AS country,
      customer_created_at                                                                                                   AS created_date,
      confirmed_at                                                                                                          AS confirmed_date,
      company_size                                                                                                          AS market_segment,
      last_sign_in_at                                                                                                       AS last_login_date,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY created_date DESC))                                           AS record_number
    FROM customer_db_source
    WHERE email_address IS NOT NULL
      AND email_address <> ''
      AND confirmed_at IS NOT NULL
    QUALIFY record_number = 1

), zuora AS (

    SELECT
      zuora_contact_source.work_email                                                                                       AS email_address,
      zuora_contact_source.contact_id                                                                                       AS contact_id,
      zuora_contact_source.first_name                                                                                       AS first_name,
      zuora_contact_source.last_name                                                                                        AS last_name,
      zuora_account_source.account_name                                                                                     AS company_name,
      zuora_contact_source.country                                                                                          AS country,
      zuora_contact_source.created_date                                                                                     AS created_date,
      CASE
        WHEN zuora_contact_source.is_deleted = TRUE THEN 'Inactive'
        ELSE 'Active'
      END                                                                                                                   AS active_state,
      (ROW_NUMBER() OVER (PARTITION BY email_address ORDER BY zuora_contact_source.created_date DESC))                      AS record_number
    FROM zuora_contact_source
    INNER JOIN zuora_account_source
      ON zuora_account_source.account_id = zuora_contact_source.account_id
    WHERE email_address IS NOT NULL
      AND email_address <> ''
      AND zuora_contact_source.is_deleted = FALSE
    QUALIFY record_number = 1

), emails AS (

    SELECT email_address
    FROM sfdc

    UNION

    SELECT email_address
    FROM gitlab_dotcom

    UNION

    SELECT email_address
    FROM customer_db

    UNION

    SELECT email_address
    FROM zuora

    UNION

    SELECT email_address
    FROM marketo_lead

), final AS (

    SELECT
      md5(cast(coalesce(cast(emails.email_address as 
    varchar
), '') as 
    varchar
))                                                            AS dim_marketing_contact_id,
      emails.email_address,
      COALESCE(zuora.first_name, marketo_lead.first_name, sfdc.first_name, customer_db.first_name, gitlab_dotcom.first_name) 
                                                                                                                         AS first_name,
      COALESCE(zuora.last_name, marketo_lead.last_name, sfdc.last_name, customer_db.last_name, gitlab_dotcom.last_name)  AS last_name,
      gitlab_dotcom.user_name                                                                                            AS gitlab_user_name,
      COALESCE(zuora.company_name,  marketo_lead.company_name, sfdc.company_name, customer_db.company_name, gitlab_dotcom.company_name)
                                                                                                                         AS company_name,
      COALESCE(marketo_lead.job_title, sfdc.job_title, gitlab_dotcom.job_title)                                          AS job_title,
      CASE
        WHEN marketo_lead.job_title IS NOT NULL THEN marketo_lead.it_job_title_hierarchy
        WHEN sfdc.job_title IS NOT NULL THEN sfdc.it_job_title_hierarchy
        ELSE gitlab_dotcom.it_job_title_hierarchy
      END                                                                                                                AS it_job_title_hierarchy,
      COALESCE(zuora.country, marketo_lead.country, sfdc.country, customer_db.country)                                   AS country,
      sfdc.parent_crm_account_sales_segment                                                                              AS sfdc_parent_sales_segment,
      COALESCE(sfdc.parent_crm_account_region, sfdc.crm_person_region)                                                   AS sfdc_parent_crm_account_region,
      marketo_lead.marketo_lead_id                                                                                       AS marketo_lead_id,
      IFF(marketo_lead.email_address IS NOT NULL, TRUE, FALSE)                                                           AS is_marketo_lead,
      COALESCE(marketo_lead.is_marketo_email_bounced, FALSE)                                                             AS is_marketo_email_hard_bounced,
      marketo_lead.marketo_email_bounced_date                                                                            AS marketo_email_hard_bounced_date,
      marketo_lead.is_marketo_unsubscribed,
      marketo_lead.is_marketo_opted_in,
      marketo_lead.has_marketo_unsubscribed,
      marketo_lead.marketo_compliance_segment_value                                                                      AS marketo_compliance_segment_value,
      IFNULL(marketo_lead.is_pql_marketo, FALSE)                                                                         AS is_pql_marketo,
      IFNULL(marketo_lead.is_paid_tier_marketo, FALSE)                                                                   AS is_paid_tier_marketo,
      IFNULL(marketo_lead.is_ptpt_contact_marketo, FALSE)                                                                AS is_ptpt_contact_marketo,
      IFNULL(marketo_lead.is_ptp_contact_marketo, FALSE)                                                                 AS is_ptp_contact_marketo,
      IFNULL(marketo_lead.is_impacted_by_user_limit_marketo, FALSE)                                                      AS is_impacted_by_user_limit_marketo,
      IFNULL(marketo_lead.is_currently_in_trial_marketo, FALSE)                                                          AS is_currently_in_trial_marketo,
      marketo_lead.trial_start_date_marketo                                                                              AS trial_start_date_marketo,
      marketo_lead.trial_end_date_marketo                                                                                AS trial_end_date_marketo,
      CASE
        WHEN sfdc.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_sfdc_lead_contact,
      sfdc.sfdc_record_id,
      sfdc.dim_crm_account_id,
      sfdc.sfdc_lead_contact,
      COALESCE(marketo_lead.mobile_phone, sfdc.mobile_phone)                                                             AS mobile_phone,
      sfdc.sfdc_created_date                                                                                             AS sfdc_created_date,
      sfdc.opted_out_salesforce                                                                                          AS is_sfdc_opted_out,
      CASE
        WHEN gitlab_dotcom.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_gitlab_dotcom_user,
      gitlab_dotcom.user_id                                                                                              AS gitlab_dotcom_user_id,
      gitlab_dotcom.created_date                                                                                         AS gitlab_dotcom_created_date,
      gitlab_dotcom.confirmed_date                                                                                       AS gitlab_dotcom_confirmed_date,
      gitlab_dotcom.active_state                                                                                         AS gitlab_dotcom_active_state,
      gitlab_dotcom.last_login_date                                                                                      AS gitlab_dotcom_last_login_date,
      gitlab_dotcom.email_opted_in                                                                                       AS gitlab_dotcom_email_opted_in,
      DATEDIFF(DAY, gitlab_dotcom.confirmed_date, GETDATE())                                                             AS days_since_saas_signup,
      CASE 
  WHEN days_since_saas_signup BETWEEN 0 AND 6
    THEN '[01] 0-6 Days'
  WHEN days_since_saas_signup BETWEEN 7 AND 14
    THEN '[02] 7-14 Days'
  WHEN days_since_saas_signup BETWEEN 15 AND 21
    THEN '[03] 15-21 Days'
  WHEN days_since_saas_signup BETWEEN 22 AND 30
    THEN '[04] 22-30 Days'
  WHEN days_since_saas_signup BETWEEN 31 AND 60
    THEN '[05] 31-60 Days'
  WHEN days_since_saas_signup BETWEEN 61 AND 90
    THEN '[06] 61-90 Days'
  WHEN days_since_saas_signup BETWEEN 91 AND 120
    THEN '[07] 91-120 Days'
  WHEN days_since_saas_signup BETWEEN 121 AND 180
    THEN '[08] 121-180 Days'
  WHEN days_since_saas_signup BETWEEN 181 AND 365
    THEN '[09] 181-365 Days'
  WHEN days_since_saas_signup BETWEEN 366 AND 730
    THEN '[10] 1-2 Years'
  WHEN days_since_saas_signup BETWEEN 731 AND 1095
    THEN '[11] 2-3 Years'
  WHEN days_since_saas_signup > 1095
    THEN '[12] 3+ Years'
END                                                                       AS days_since_saas_signup_bucket,
      CASE
        WHEN customer_db.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_customer_db_user,
      customer_db.customer_id                                                                                            AS customer_db_customer_id,
      customer_db.created_date                                                                                           AS customer_db_created_date,
      customer_db.confirmed_date                                                                                         AS customer_db_confirmed_date,
      DATEDIFF(DAY, customer_db.confirmed_date, GETDATE())                                                               AS days_since_self_managed_owner_signup,
      CASE 
  WHEN days_since_self_managed_owner_signup BETWEEN 0 AND 6
    THEN '[01] 0-6 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 7 AND 14
    THEN '[02] 7-14 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 15 AND 21
    THEN '[03] 15-21 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 22 AND 30
    THEN '[04] 22-30 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 31 AND 60
    THEN '[05] 31-60 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 61 AND 90
    THEN '[06] 61-90 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 91 AND 120
    THEN '[07] 91-120 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 121 AND 180
    THEN '[08] 121-180 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 181 AND 365
    THEN '[09] 181-365 Days'
  WHEN days_since_self_managed_owner_signup BETWEEN 366 AND 730
    THEN '[10] 1-2 Years'
  WHEN days_since_self_managed_owner_signup BETWEEN 731 AND 1095
    THEN '[11] 2-3 Years'
  WHEN days_since_self_managed_owner_signup > 1095
    THEN '[12] 3+ Years'
END                                                         AS days_since_self_managed_owner_signup_bucket,
      CASE
        WHEN zuora.email_address IS NOT NULL THEN TRUE
        ELSE FALSE
      END                                                                                                                AS is_zuora_billing_contact,
      zuora.contact_id                                                                                                   AS zuora_contact_id,
      zuora.created_date                                                                                                 AS zuora_created_date,
      zuora.active_state                                                                                                 AS zuora_active_state,
      dnc_list.result                                                                                                    AS dnc_list_result,
      CASE
        WHEN dnc_list.result IN ('undeliverable', 'do_not_send')
          THEN FALSE
        ELSE TRUE
      END                                                                                                                AS wip_is_valid_email_address,
      CASE
        WHEN NOT wip_is_valid_email_address
          THEN dnc_list.result
      END                                                                                                                AS wip_invalid_email_address_reason

    FROM emails
    LEFT JOIN sfdc
      ON sfdc.email_address = emails.email_address
    LEFT JOIN gitlab_dotcom
      ON gitlab_dotcom.email_address = emails.email_address
    LEFT JOIN customer_db
      ON customer_db.email_address = emails.email_address
    LEFT JOIN zuora
      ON zuora.email_address = emails.email_address
    LEFT JOIN marketo_lead
      ON marketo_lead.email_address = emails.email_address
    LEFT JOIN dnc_list
      ON dnc_list.email_address = emails.email_address

)

SELECT
      *,
      '@rmistry'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-01-19'::DATE        AS model_created_date,
      '2023-06-19'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final15:T5374,{{ config(
    tags=["mnpi"]
) }}

WITH map_merged_crm_account AS (

    SELECT *
    FROM {{ ref('map_merged_crm_account') }}

), sfdc_account AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE account_id IS NOT NULL

), zuora_account AS (

    SELECT *
    FROM {{ ref('zuora_central_sandbox_account_source') }}
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_rate_plan AS (

    SELECT *
    FROM {{ ref('zuora_central_sandbox_rate_plan_source') }}

), zuora_rate_plan_charge AS (

    SELECT *
    FROM {{ ref('zuora_central_sandbox_rate_plan_charge_source') }}

), zuora_subscription AS (

    SELECT *
    FROM {{ ref('zuora_central_sandbox_subscription_source') }}
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')

), revenue_contract_line AS (

    SELECT *
    FROM {{ ref('zuora_revenue_revenue_contract_line_source') }}
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM {{ ref('zuora_revenue_manual_journal_entry_source') }}

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    {{ dbt_utils.group_by(n=1) }}

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    {{ dbt_utils.group_by(n=7) }}

), non_manual_charges AS (

    SELECT
      --Natural Key
      zuora_subscription.subscription_name,
      zuora_subscription.subscription_name_slugify,
      zuora_subscription.version                                        AS subscription_version,
      zuora_rate_plan_charge.rate_plan_charge_number,
      zuora_rate_plan_charge.version                                    AS rate_plan_charge_version,
      zuora_rate_plan_charge.segment                                    AS rate_plan_charge_segment,

      --Surrogate Key
      zuora_rate_plan_charge.rate_plan_charge_id                        AS dim_charge_id,

      --Common Dimension Keys
      zuora_rate_plan_charge.product_rate_plan_charge_id                AS dim_product_detail_id,
      zuora_rate_plan.amendment_id                                      AS dim_amendment_id_charge,
      zuora_rate_plan.subscription_id                                   AS dim_subscription_id,
      zuora_rate_plan_charge.account_id                                 AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                         AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                           AS dim_parent_crm_account_id,
      {{ get_date_id('zuora_rate_plan_charge.effective_start_date') }}  AS effective_start_date_id,
      {{ get_date_id('zuora_rate_plan_charge.effective_end_date') }}    AS effective_end_date_id,

      --Information
      zuora_subscription.subscription_status                            AS subscription_status,
      zuora_rate_plan.rate_plan_name                                    AS rate_plan_name,
      zuora_rate_plan_charge.rate_plan_charge_name,
      zuora_rate_plan_charge.description                                AS rate_plan_charge_description,
      zuora_rate_plan_charge.is_last_segment,
      zuora_rate_plan_charge.discount_level,
      zuora_rate_plan_charge.charge_type,
      zuora_rate_plan.amendment_type                                    AS rate_plan_charge_amendement_type,
      zuora_rate_plan_charge.unit_of_measure,
      CASE
        WHEN DATE_TRUNC('month',zuora_rate_plan_charge.charged_through_date) = zuora_rate_plan_charge.effective_end_month::DATE
          THEN TRUE ELSE FALSE
      END                                                               AS is_paid_in_full,
      CASE
        WHEN charged_through_date IS NULL THEN zuora_subscription.current_term
        ELSE DATEDIFF('month',DATE_TRUNC('month', zuora_rate_plan_charge.charged_through_date::DATE), zuora_rate_plan_charge.effective_end_month::DATE)
      END                                                               AS months_of_future_billings,
      CASE
        WHEN effective_end_month > effective_start_month OR effective_end_month IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                               AS is_included_in_arr_calc,

      --Dates
      zuora_subscription.subscription_end_date                          AS subscription_end_date,
      zuora_rate_plan_charge.effective_start_date::DATE                 AS effective_start_date,
      zuora_rate_plan_charge.effective_end_date::DATE                   AS effective_end_date,
      zuora_rate_plan_charge.effective_start_month::DATE                AS effective_start_month,
      zuora_rate_plan_charge.effective_end_month::DATE                  AS effective_end_month,
      zuora_rate_plan_charge.charged_through_date::DATE                 AS charged_through_date,
      zuora_rate_plan_charge.created_date::DATE                         AS charge_created_date,
      zuora_rate_plan_charge.updated_date::DATE                         AS charge_updated_date,
      DATEDIFF(month, zuora_rate_plan_charge.effective_start_month::DATE, zuora_rate_plan_charge.effective_end_month::DATE)
                                                                        AS charge_term,

      --Additive Fields
      zuora_rate_plan_charge.mrr,
      LAG(zuora_rate_plan_charge.mrr,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                              ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_mrr_calc,
      CASE
        WHEN previous_mrr_calc IS NULL
          THEN 0 ELSE previous_mrr_calc
      END                                                               AS previous_mrr,
      zuora_rate_plan_charge.mrr - previous_mrr                         AS delta_mrr_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_mrr
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_mrr
        ELSE delta_mrr_calc
      END                                                               AS delta_mrr,
      zuora_rate_plan_charge.delta_mrc,
      zuora_rate_plan_charge.mrr * 12                                   AS arr,
      previous_mrr * 12                                                 AS previous_arr,
      zuora_rate_plan_charge.delta_mrc * 12                             AS delta_arc,
      delta_mrr * 12                                                    AS delta_arr,
      zuora_rate_plan_charge.quantity,
      LAG(zuora_rate_plan_charge.quantity,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                                   ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_quantity_calc,
      CASE
        WHEN previous_quantity_calc IS NULL
          THEN 0 ELSE previous_quantity_calc
      END                                                               AS previous_quantity,
      zuora_rate_plan_charge.quantity - previous_quantity               AS delta_quantity_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_quantity
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_quantity
        ELSE delta_quantity_calc
      END                                                               AS delta_quantity,
      zuora_rate_plan_charge.tcv,
      zuora_rate_plan_charge.delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * zuora_rate_plan_charge.mrr
        ELSE 0
      END                                                               AS estimated_total_future_billings

    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_subscription
      ON zuora_rate_plan.subscription_id = zuora_subscription.subscription_id
    INNER JOIN zuora_account
      ON zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      {{ get_date_id('manual_charges_prep.effective_start_date') }}                         AS effective_start_date_id,
      {{ get_date_id('manual_charges_prep.effective_end_date') }}                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'manual true up allocation'                                                           AS rate_plan_charge_description,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                         AS estimated_total_future_billings
    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id

), combined_charges AS (

    SELECT *
    FROM non_manual_charges

    UNION

    SELECT *
    FROM manual_charges

), arr_analysis_framework AS (

    SELECT
      combined_charges.*,
      CASE
        WHEN subscription_version = 1
          THEN 'New'
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE
          THEN 'Churn'
        WHEN LOWER(subscription_status) = 'cancelled'
          THEN 'Churn'
        WHEN arr < previous_arr AND arr > 0
          THEN 'Contraction'
        WHEN arr > previous_arr AND subscription_version > 1
          THEN 'Expansion'
        WHEN arr = previous_arr
          THEN 'No Impact'
        ELSE NULL
      END                 AS type_of_arr_change
    FROM combined_charges

)

{{ dbt_audit(
    cte_ref="arr_analysis_framework",
    created_by="@michellecooper",
    updated_by="@nmcavinue",
    created_date="2022-04-13",
    updated_date="2023-05-30"
) }}16:T5516,

WITH map_merged_crm_account AS (

    SELECT *
    FROM "PROD".restricted_safe_common_mapping.map_merged_crm_account

), sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE account_id IS NOT NULL

), zuora_account AS (

    SELECT *
    FROM "PREP".zuora_central_sandbox.zuora_central_sandbox_account_source
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_rate_plan AS (

    SELECT *
    FROM "PREP".zuora_central_sandbox.zuora_central_sandbox_rate_plan_source

), zuora_rate_plan_charge AS (

    SELECT *
    FROM "PREP".zuora_central_sandbox.zuora_central_sandbox_rate_plan_charge_source

), zuora_subscription AS (

    SELECT *
    FROM "PREP".zuora_central_sandbox.zuora_central_sandbox_subscription_source
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')

), revenue_contract_line AS (

    SELECT *
    FROM "PREP".zuora_revenue.zuora_revenue_revenue_contract_line_source
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM "PREP".zuora_revenue.zuora_revenue_manual_journal_entry_source

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    group by 1

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    group by 1,2,3,4,5,6,7

), non_manual_charges AS (

    SELECT
      --Natural Key
      zuora_subscription.subscription_name,
      zuora_subscription.subscription_name_slugify,
      zuora_subscription.version                                        AS subscription_version,
      zuora_rate_plan_charge.rate_plan_charge_number,
      zuora_rate_plan_charge.version                                    AS rate_plan_charge_version,
      zuora_rate_plan_charge.segment                                    AS rate_plan_charge_segment,

      --Surrogate Key
      zuora_rate_plan_charge.rate_plan_charge_id                        AS dim_charge_id,

      --Common Dimension Keys
      zuora_rate_plan_charge.product_rate_plan_charge_id                AS dim_product_detail_id,
      zuora_rate_plan.amendment_id                                      AS dim_amendment_id_charge,
      zuora_rate_plan.subscription_id                                   AS dim_subscription_id,
      zuora_rate_plan_charge.account_id                                 AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                         AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                           AS dim_parent_crm_account_id,
      

  TO_NUMBER(TO_CHAR(zuora_rate_plan_charge.effective_start_date::DATE,'YYYYMMDD'),'99999999')

  AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(zuora_rate_plan_charge.effective_end_date::DATE,'YYYYMMDD'),'99999999')

    AS effective_end_date_id,

      --Information
      zuora_subscription.subscription_status                            AS subscription_status,
      zuora_rate_plan.rate_plan_name                                    AS rate_plan_name,
      zuora_rate_plan_charge.rate_plan_charge_name,
      zuora_rate_plan_charge.description                                AS rate_plan_charge_description,
      zuora_rate_plan_charge.is_last_segment,
      zuora_rate_plan_charge.discount_level,
      zuora_rate_plan_charge.charge_type,
      zuora_rate_plan.amendment_type                                    AS rate_plan_charge_amendement_type,
      zuora_rate_plan_charge.unit_of_measure,
      CASE
        WHEN DATE_TRUNC('month',zuora_rate_plan_charge.charged_through_date) = zuora_rate_plan_charge.effective_end_month::DATE
          THEN TRUE ELSE FALSE
      END                                                               AS is_paid_in_full,
      CASE
        WHEN charged_through_date IS NULL THEN zuora_subscription.current_term
        ELSE DATEDIFF('month',DATE_TRUNC('month', zuora_rate_plan_charge.charged_through_date::DATE), zuora_rate_plan_charge.effective_end_month::DATE)
      END                                                               AS months_of_future_billings,
      CASE
        WHEN effective_end_month > effective_start_month OR effective_end_month IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                               AS is_included_in_arr_calc,

      --Dates
      zuora_subscription.subscription_end_date                          AS subscription_end_date,
      zuora_rate_plan_charge.effective_start_date::DATE                 AS effective_start_date,
      zuora_rate_plan_charge.effective_end_date::DATE                   AS effective_end_date,
      zuora_rate_plan_charge.effective_start_month::DATE                AS effective_start_month,
      zuora_rate_plan_charge.effective_end_month::DATE                  AS effective_end_month,
      zuora_rate_plan_charge.charged_through_date::DATE                 AS charged_through_date,
      zuora_rate_plan_charge.created_date::DATE                         AS charge_created_date,
      zuora_rate_plan_charge.updated_date::DATE                         AS charge_updated_date,
      DATEDIFF(month, zuora_rate_plan_charge.effective_start_month::DATE, zuora_rate_plan_charge.effective_end_month::DATE)
                                                                        AS charge_term,

      --Additive Fields
      zuora_rate_plan_charge.mrr,
      LAG(zuora_rate_plan_charge.mrr,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                              ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_mrr_calc,
      CASE
        WHEN previous_mrr_calc IS NULL
          THEN 0 ELSE previous_mrr_calc
      END                                                               AS previous_mrr,
      zuora_rate_plan_charge.mrr - previous_mrr                         AS delta_mrr_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_mrr
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_mrr
        ELSE delta_mrr_calc
      END                                                               AS delta_mrr,
      zuora_rate_plan_charge.delta_mrc,
      zuora_rate_plan_charge.mrr * 12                                   AS arr,
      previous_mrr * 12                                                 AS previous_arr,
      zuora_rate_plan_charge.delta_mrc * 12                             AS delta_arc,
      delta_mrr * 12                                                    AS delta_arr,
      zuora_rate_plan_charge.quantity,
      LAG(zuora_rate_plan_charge.quantity,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                                   ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_quantity_calc,
      CASE
        WHEN previous_quantity_calc IS NULL
          THEN 0 ELSE previous_quantity_calc
      END                                                               AS previous_quantity,
      zuora_rate_plan_charge.quantity - previous_quantity               AS delta_quantity_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_quantity
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_quantity
        ELSE delta_quantity_calc
      END                                                               AS delta_quantity,
      zuora_rate_plan_charge.tcv,
      zuora_rate_plan_charge.delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * zuora_rate_plan_charge.mrr
        ELSE 0
      END                                                               AS estimated_total_future_billings

    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_subscription
      ON zuora_rate_plan.subscription_id = zuora_subscription.subscription_id
    INNER JOIN zuora_account
      ON zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_start_date::DATE,'YYYYMMDD'),'99999999')

                         AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_end_date::DATE,'YYYYMMDD'),'99999999')

                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'manual true up allocation'                                                           AS rate_plan_charge_description,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                         AS estimated_total_future_billings
    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id

), combined_charges AS (

    SELECT *
    FROM non_manual_charges

    UNION

    SELECT *
    FROM manual_charges

), arr_analysis_framework AS (

    SELECT
      combined_charges.*,
      CASE
        WHEN subscription_version = 1
          THEN 'New'
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE
          THEN 'Churn'
        WHEN LOWER(subscription_status) = 'cancelled'
          THEN 'Churn'
        WHEN arr < previous_arr AND arr > 0
          THEN 'Contraction'
        WHEN arr > previous_arr AND subscription_version > 1
          THEN 'Expansion'
        WHEN arr = previous_arr
          THEN 'No Impact'
        ELSE NULL
      END                 AS type_of_arr_change
    FROM combined_charges

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2022-04-13'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM arr_analysis_framework17:Tcdb,{{ config(
    tags=["mnpi_exception"]
) }}

WITH sfdc_opportunity_source AS (

    SELECT *
    FROM {{ ref('sfdc_opportunity_source') }}
    WHERE NOT is_deleted

), sfdc_account_source AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE NOT is_deleted

), dim_date AS (

    SELECT *
    FROM {{ ref('dim_date') }}

), current_fiscal_year AS (

    SELECT last_day_of_fiscal_quarter
    FROM dim_date
    WHERE date_actual = CURRENT_DATE

), alliance_type AS (

    SELECT
      {{ alliance_partner('fulfillment_partner.account_name', 'partner_account.account_name',
                       'sfdc_opportunity_source.close_date', 'sfdc_opportunity_source.partner_track',
                       'sfdc_opportunity_source.resale_partner_track', 'sfdc_opportunity_source.deal_path',
                       'partner_account.is_focus_partner') }}                                                        AS alliance_type,
      {{ alliance_partner_short('fulfillment_partner.account_name', 'partner_account.account_name',
                             'sfdc_opportunity_source.close_date', 'sfdc_opportunity_source.partner_track',
                             'sfdc_opportunity_source.resale_partner_track', 'sfdc_opportunity_source.deal_path',
                             'partner_account.is_focus_partner') }}                                                  AS alliance_type_short,
      MIN(dim_date.first_day_of_fiscal_quarter)                                                                      AS valid_from,
      MAX(dim_date.last_day_of_fiscal_quarter)                                                                       AS valid_to,
      IFF(valid_to >= MAX(current_fiscal_year.last_day_of_fiscal_quarter), TRUE, FALSE)                              AS is_currently_valid
    FROM sfdc_opportunity_source
    LEFT JOIN sfdc_account_source      AS fulfillment_partner
      ON sfdc_opportunity_source.fulfillment_partner = fulfillment_partner.account_id
    LEFT JOIN sfdc_account_source AS partner_account
      ON sfdc_opportunity_source.partner_account = partner_account.account_id
    LEFT JOIN dim_date
      ON dim_date.date_actual = sfdc_opportunity_source.close_date
    LEFT JOIN current_fiscal_year
    WHERE alliance_type IS NOT NULL
    GROUP BY 1, 2

), final AS (

    SELECT
      {{ dbt_utils.surrogate_key(['alliance_type']) }}  AS dim_alliance_type_id,
      alliance_type                                     AS alliance_type_name,
      alliance_type_short                               AS alliance_type_short_name,
      valid_from,
      valid_to,
      is_currently_valid
    FROM alliance_type

    UNION ALL

    SELECT
      MD5('-1')                                         AS dim_alliance_type_id,
      'Missing alliance_type_name'                      AS alliance_type_name,
      'Missing alliance_type_short_name'                AS alliance_type_short_name,
      '2000-02-01'                                      AS valid_from,
      '2040-01-31'                                      AS valid_to,
      TRUE                                              AS is_currently_valid
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@iweeks",
    updated_by="@chrissharp",
    created_date="2021-04-07",
    updated_date="2023-06-23"
) }}18:T12fe,

WITH sfdc_opportunity_source AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_opportunity_source
    WHERE NOT is_deleted

), sfdc_account_source AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE NOT is_deleted

), dim_date AS (

    SELECT *
    FROM "PROD".common.dim_date

), current_fiscal_year AS (

    SELECT last_day_of_fiscal_quarter
    FROM dim_date
    WHERE date_actual = CURRENT_DATE

), alliance_type AS (

    SELECT
      CASE
  WHEN LOWER(fulfillment_partner.account_name) LIKE '%google%' OR LOWER(partner_account.account_name) LIKE '%google%'
    THEN 'Google Cloud' 
  WHEN LOWER(fulfillment_partner.account_name) LIKE ANY ('%aws%', '%amazon%') OR LOWER(partner_account.account_name) LIKE ANY ('%aws%', '%amazon%')
    THEN 'Amazon Web Services'
  WHEN LOWER(fulfillment_partner.account_name) LIKE '%ibm (oem)%' OR LOWER(partner_account.account_name) LIKE '%ibm (oem)%'
    THEN 'IBM (OEM)'
  WHEN sfdc_opportunity_source.close_date >= '2022-02-01' AND NOT EQUAL_NULL(sfdc_opportunity_source.partner_track, 'Technology') AND NOT EQUAL_NULL(sfdc_opportunity_source.resale_partner_track, 'Technology') AND sfdc_opportunity_source.deal_path = 'Partner'
    THEN 'Channel Partners'
  WHEN sfdc_opportunity_source.close_date < '2022-02-01' AND ( fulfillment_partner.account_name IS NOT NULL OR partner_account.account_name IS NOT NULL )
    THEN 'Non-Alliance Partners'
  WHEN partner_account.is_focus_partner = TRUE 
    THEN 'Channel Focus Partner'
  ELSE 'Other Alliance Partners'
END                                                        AS alliance_type,
      CASE
  WHEN LOWER(fulfillment_partner.account_name) LIKE '%google%' OR LOWER(partner_account.account_name) LIKE '%google%'
    THEN 'GCP' 
  WHEN LOWER(fulfillment_partner.account_name) LIKE ANY ('%aws%', '%amazon%') OR LOWER(partner_account.account_name) LIKE ANY ('%aws%', '%amazon%')
    THEN 'AWS'
  WHEN LOWER(fulfillment_partner.account_name) LIKE '%ibm (oem)%' OR LOWER(partner_account.account_name) LIKE '%ibm (oem)%'
    THEN 'IBM'
  WHEN sfdc_opportunity_source.close_date >= '2022-02-01' AND NOT EQUAL_NULL(sfdc_opportunity_source.partner_track, 'Technology') AND NOT EQUAL_NULL(sfdc_opportunity_source.resale_partner_track, 'Technology') AND sfdc_opportunity_source.deal_path = 'Partner'
    THEN 'Channel Partners'
  WHEN sfdc_opportunity_source.close_date < '2022-02-01' AND ( fulfillment_partner.account_name IS NOT NULL OR partner_account.account_name IS NOT NULL )
    THEN 'Non-Alliance'
  WHEN partner_account.is_focus_partner = TRUE 
    THEN 'Channel Focus Partner'
  ELSE 'Other Alliance Partners'
END                                                  AS alliance_type_short,
      MIN(dim_date.first_day_of_fiscal_quarter)                                                                      AS valid_from,
      MAX(dim_date.last_day_of_fiscal_quarter)                                                                       AS valid_to,
      IFF(valid_to >= MAX(current_fiscal_year.last_day_of_fiscal_quarter), TRUE, FALSE)                              AS is_currently_valid
    FROM sfdc_opportunity_source
    LEFT JOIN sfdc_account_source      AS fulfillment_partner
      ON sfdc_opportunity_source.fulfillment_partner = fulfillment_partner.account_id
    LEFT JOIN sfdc_account_source AS partner_account
      ON sfdc_opportunity_source.partner_account = partner_account.account_id
    LEFT JOIN dim_date
      ON dim_date.date_actual = sfdc_opportunity_source.close_date
    LEFT JOIN current_fiscal_year
    WHERE alliance_type IS NOT NULL
    GROUP BY 1, 2

), final AS (

    SELECT
      md5(cast(coalesce(cast(alliance_type as 
    varchar
), '') as 
    varchar
))  AS dim_alliance_type_id,
      alliance_type                                     AS alliance_type_name,
      alliance_type_short                               AS alliance_type_short_name,
      valid_from,
      valid_to,
      is_currently_valid
    FROM alliance_type

    UNION ALL

    SELECT
      MD5('-1')                                         AS dim_alliance_type_id,
      'Missing alliance_type_name'                      AS alliance_type_name,
      'Missing alliance_type_short_name'                AS alliance_type_short_name,
      '2000-02-01'                                      AS valid_from,
      '2040-01-31'                                      AS valid_to,
      TRUE                                              AS is_currently_valid
)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-04-07'::DATE        AS model_created_date,
      '2023-06-23'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final19:T5efd,

WITH map_merged_crm_account AS (

    SELECT *
    FROM "PROD".restricted_safe_common_mapping.map_merged_crm_account

), prep_crm_person AS (

    SELECT *
    FROM "PROD".common_prep.prep_crm_person

), sfdc_user_roles_source AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_user_roles_source

), crm_user AS (

    SELECT * 
    FROM
        "PROD".common_prep.prep_crm_user

), sfdc_account AS (

    SELECT
        *
    FROM
        "PREP".sfdc.sfdc_account_source
    WHERE account_id IS NOT NULL

), sfdc_users AS (

    SELECT
        *
    FROM
      "PREP".sfdc.sfdc_users_source

), sfdc_record_type AS (

    SELECT *
    FROM "PROD".legacy.sfdc_record_type

), pte_scores AS (

    SELECT 
      crm_account_id                                                                                           AS account_id,
      score                                                                                                    AS score,
      decile                                                                                                   AS decile,
      score_group                                                                                              AS score_group,
      MIN(score_date)                                                                                          AS valid_from,
      COALESCE(LEAD(valid_from) OVER (PARTITION BY crm_account_id ORDER BY valid_from), DATEADD('day',1,CURRENT_DATE())) AS valid_to,
      CASE 
        WHEN ROW_NUMBER() OVER (PARTITION BY crm_account_id ORDER BY valid_from DESC) = 1 
          THEN TRUE
        ELSE FALSE
      END                                                                                                      AS is_current
    FROM "PREP".data_science.pte_scores_source
    group by 1,2,3,4
    ORDER BY valid_from, valid_to


), ptc_scores AS (

    SELECT 
      crm_account_id                                                                                           AS account_id,
      score                                                                                                    AS score,
      decile                                                                                                   AS decile,
      score_group                                                                                              AS score_group,
      MIN(score_date)                                                                                          AS valid_from,
      COALESCE(LEAD(valid_from) OVER (PARTITION BY crm_account_id ORDER BY valid_from), DATEADD('day',1,CURRENT_DATE())) AS valid_to,
      CASE 
        WHEN ROW_NUMBER() OVER (PARTITION BY crm_account_id ORDER BY valid_from DESC) = 1 
          THEN TRUE
        ELSE FALSE
      END                                                                                                      AS is_current
    FROM "PREP".data_science.ptc_scores_source
    group by 1,2,3,4
    ORDER BY valid_from, valid_to

), final AS (

    SELECT
      --crm account information
      --primary key
      sfdc_account.account_id                                             AS dim_crm_account_id,

      --surrogate keys
      sfdc_account.ultimate_parent_account_id                             AS dim_parent_crm_account_id,
      sfdc_account.owner_id                                               AS dim_crm_user_id,
      map_merged_crm_account.dim_crm_account_id                           AS merged_to_account_id,
      sfdc_account.record_type_id                                         AS record_type_id,
      account_owner.user_id                                               AS crm_account_owner_id,
      proposed_account_owner.user_id                                      AS proposed_crm_account_owner_id,
      technical_account_manager.user_id                                   AS technical_account_manager_id,
      sfdc_account.master_record_id,
      prep_crm_person.dim_crm_person_id                                   AS dim_crm_person_primary_contact_id,

      --account people
      account_owner.name                                                  AS account_owner,
      proposed_account_owner.name                                         AS proposed_crm_account_owner,
      technical_account_manager.name                                      AS technical_account_manager,

      -- account owner fields
      account_owner.user_segment                                          AS crm_account_owner_sales_segment,
      account_owner.user_geo                                              AS crm_account_owner_geo,
      account_owner.user_region                                           AS crm_account_owner_region,
      account_owner.user_area                                             AS crm_account_owner_area,
      account_owner.user_segment_geo_region_area                          AS crm_account_owner_sales_segment_geo_region_area,
      account_owner.title                                                 AS crm_account_owner_title,
      sfdc_user_roles_source.name                                         AS crm_account_owner_role,

      ----ultimate parent crm account info
       sfdc_account.ultimate_parent_account_name                          AS parent_crm_account_name,

      --descriptive attributes
      sfdc_account.account_name                                           AS crm_account_name,
      sfdc_account.account_sales_segment                                  AS parent_crm_account_sales_segment,
      sfdc_account.account_geo                                            AS parent_crm_account_geo,
      sfdc_account.account_region                                         AS parent_crm_account_region,
      sfdc_account.account_area                                           AS parent_crm_account_area,
      sfdc_account.account_territory                                      AS parent_crm_account_territory,
      sfdc_account.account_business_unit                                  AS parent_crm_account_business_unit,
      sfdc_account.account_role_type                                      AS parent_crm_account_role_type,
      sfdc_account.account_max_family_employee                            AS parent_crm_account_max_family_employee,
      sfdc_account.account_upa_country                                    AS parent_crm_account_upa_country,
      sfdc_account.account_upa_state                                      AS parent_crm_account_upa_state,
      sfdc_account.account_upa_city                                       AS parent_crm_account_upa_city,
      sfdc_account.account_upa_street                                     AS parent_crm_account_upa_street,
      sfdc_account.account_upa_postal_code                                AS parent_crm_account_upa_postal_code,
      sfdc_account.account_employee_count                                 AS crm_account_employee_count,
      sfdc_account.parent_account_industry_hierarchy                      AS parent_crm_account_industry,
      sfdc_account.gtm_strategy                                           AS crm_account_gtm_strategy,
      CASE 
        WHEN sfdc_account.account_sales_segment IN ('Large', 'PubSec') THEN 'Large'
        WHEN sfdc_account.account_sales_segment = 'Unknown' THEN 'SMB'
        ELSE sfdc_account.account_sales_segment
      END                                                                 AS parent_crm_account_sales_segment_grouped,
      CASE 
  WHEN UPPER(sfdc_account.account_sales_segment) IN ('LARGE', 'PUBSEC') AND UPPER(sfdc_account.account_geo) = 'AMER' AND UPPER(sfdc_account.account_region) = 'WEST'
    THEN 'US WEST'
  WHEN UPPER(sfdc_account.account_sales_segment) IN ('LARGE', 'PUBSEC') AND UPPER(sfdc_account.account_geo) IN ('AMER', 'LATAM') AND UPPER(sfdc_account.account_region) IN ('EAST', 'LATAM')
    THEN 'US EAST'
  WHEN UPPER(sfdc_account.account_sales_segment) IN ('LARGE', 'PUBSEC') AND UPPER(sfdc_account.account_geo) IN ('APAC', 'PUBSEC','EMEA', 'GLOBAL')
    THEN sfdc_account.account_geo
  WHEN UPPER(sfdc_account.account_sales_segment) IN ('LARGE', 'PUBSEC') AND UPPER(sfdc_account.account_region) = 'PUBSEC'
    THEN 'PUBSEC'
  WHEN UPPER(sfdc_account.account_sales_segment) IN ('LARGE', 'PUBSEC') AND UPPER(sfdc_account.account_geo) NOT IN ('WEST', 'EAST', 'APAC', 'PUBSEC','EMEA', 'GLOBAL')
    THEN 'LARGE OTHER'
  WHEN UPPER(sfdc_account.account_sales_segment) NOT IN ('LARGE', 'PUBSEC')
    THEN sfdc_account.account_sales_segment
  ELSE 'Missing segment_region_grouped'
END AS parent_crm_account_segment_region_stamped_grouped,
      CASE
        WHEN LOWER(sfdc_account.gtm_strategy) IN ('account centric', 'account based - net new', 'account based - expand') THEN 'Focus Account'
        ELSE 'Non - Focus Account'
      END                                                                 AS crm_account_focus_account,
      sfdc_account.account_owner_user_segment                             AS crm_account_owner_user_segment,
      sfdc_account.billing_country                                        AS crm_account_billing_country,
      sfdc_account.billing_country_code                                   AS crm_account_billing_country_code,
      sfdc_account.account_type                                           AS crm_account_type,
      sfdc_account.industry                                               AS crm_account_industry,
      sfdc_account.sub_industry                                           AS crm_account_sub_industry,
      sfdc_account.account_owner                                          AS crm_account_owner,
      CASE
         WHEN sfdc_account.account_max_family_employee > 2000 THEN 'Employees > 2K'
         WHEN sfdc_account.account_max_family_employee <= 2000 AND sfdc_account.account_max_family_employee > 1500 THEN 'Employees > 1.5K'
         WHEN sfdc_account.account_max_family_employee <= 1500 AND sfdc_account.account_max_family_employee > 1000  THEN 'Employees > 1K'
         ELSE 'Employees < 1K'
      END                                                                 AS crm_account_employee_count_band,
      sfdc_account.partner_vat_tax_id,
      sfdc_account.account_manager,
      sfdc_account.business_development_rep,
      sfdc_account.dedicated_service_engineer,
      sfdc_account.account_tier,
      sfdc_account.account_tier_notes,
      sfdc_account.license_utilization,
      sfdc_account.support_level,
      sfdc_account.named_account,
      sfdc_account.billing_postal_code,
      sfdc_account.partner_type,
      sfdc_account.partner_status,
      sfdc_account.gitlab_customer_success_project,
      sfdc_account.demandbase_account_list,
      sfdc_account.demandbase_intent,
      sfdc_account.demandbase_page_views,
      sfdc_account.demandbase_score,
      sfdc_account.demandbase_sessions,
      sfdc_account.demandbase_trending_offsite_intent,
      sfdc_account.demandbase_trending_onsite_engagement,
      sfdc_account.is_locally_managed_account,
      sfdc_account.is_strategic_account,
      sfdc_account.partner_track,
      sfdc_account.partners_partner_type,
      sfdc_account.gitlab_partner_program,
      sfdc_account.zoom_info_company_name,
      sfdc_account.zoom_info_company_revenue,
      sfdc_account.zoom_info_company_employee_count,
      sfdc_account.zoom_info_company_industry,
      sfdc_account.zoom_info_company_city,
      sfdc_account.zoom_info_company_state_province,
      sfdc_account.zoom_info_company_country,
      sfdc_account.account_phone,
      sfdc_account.zoominfo_account_phone,
      sfdc_account.abm_tier,
      sfdc_account.health_number,
      sfdc_account.health_score_color,
      sfdc_account.partner_account_iban_number,
      sfdc_account.gitlab_com_user,
      sfdc_account.zi_technologies                                        AS crm_account_zi_technologies,
      sfdc_account.zoom_info_website                                      AS crm_account_zoom_info_website,
      sfdc_account.zoom_info_company_other_domains                        AS crm_account_zoom_info_company_other_domains,
      sfdc_account.zoom_info_dozisf_zi_id                                 AS crm_account_zoom_info_dozisf_zi_id,
      sfdc_account.zoom_info_parent_company_zi_id                         AS crm_account_zoom_info_parent_company_zi_id,
      sfdc_account.zoom_info_parent_company_name                          AS crm_account_zoom_info_parent_company_name,
      sfdc_account.zoom_info_ultimate_parent_company_zi_id                AS crm_account_zoom_info_ultimate_parent_company_zi_id,
      sfdc_account.zoom_info_ultimate_parent_company_name                 AS crm_account_zoom_info_ultimate_parent_company_name,
      sfdc_account.zoom_info_number_of_developers                         AS crm_account_zoom_info_number_of_developers,
      sfdc_account.zoom_info_total_funding                                AS crm_account_zoom_info_total_funding,
      sfdc_account.forbes_2000_rank,
      sfdc_account.parent_account_industry_hierarchy,
      sfdc_account.sales_development_rep,
      sfdc_account.admin_manual_source_number_of_employees,
      sfdc_account.admin_manual_source_account_address,
      sfdc_account.eoa_sentiment,
      sfdc_account.gs_health_user_engagement,
      sfdc_account.gs_health_cd,
      sfdc_account.gs_health_devsecops,
      sfdc_account.gs_health_ci,
      sfdc_account.gs_health_scm,
      sfdc_account.risk_impact,
      sfdc_account.risk_reason,
      sfdc_account.last_timeline_at_risk_update,
      sfdc_account.last_at_risk_update_comments,
      sfdc_account.bdr_prospecting_status,

      --degenerative dimensions
      sfdc_account.is_sdr_target_account,
      IFF(sfdc_record_type.record_type_label = 'Partner'
          AND sfdc_account.partner_type IN ('Alliance', 'Channel')
          AND sfdc_account.partner_status = 'Authorized',
          TRUE, FALSE)                                                    AS is_reseller,
      sfdc_account.is_jihu_account                                        AS is_jihu_account,
      sfdc_account.is_first_order_available,
      sfdc_account.is_key_account                                         AS is_key_account,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies,'ARE_USED: Jenkins')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_jenkins_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: SVN')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_svn_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Tortoise SVN')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_tortoise_svn_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Google Cloud Platform')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_gcp_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Atlassian')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_atlassian_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: GitHub')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_github_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: GitHub Enterprise')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_github_enterprise_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: AWS')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_aws_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Kubernetes')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_kubernetes_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Apache Subversion')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_apache_subversion_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Apache Subversion (SVN)')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_apache_subversion_svn_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Hashicorp')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_hashicorp_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: Amazon AWS CloudTrail')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_aws_cloud_trail_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: CircleCI')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_circle_ci_present,
      CASE
        WHEN CONTAINS (sfdc_account.zi_technologies, 'ARE_USED: BitBucket')
          THEN 1
        ELSE 0
      END                                                                 AS is_zi_bit_bucket_present,
      sfdc_account.is_excluded_from_zoom_info_enrich,

      --dates
      

  TO_NUMBER(TO_CHAR(sfdc_account.created_date::DATE,'YYYYMMDD'),'99999999')

                      AS crm_account_created_date_id,
      sfdc_account.created_date                                           AS crm_account_created_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.abm_tier_1_date::DATE,'YYYYMMDD'),'99999999')

                   AS abm_tier_1_date_id,
      sfdc_account.abm_tier_1_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.abm_tier_2_date::DATE,'YYYYMMDD'),'99999999')

                   AS abm_tier_2_date_id,
      sfdc_account.abm_tier_2_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.abm_tier_3_date::DATE,'YYYYMMDD'),'99999999')

                   AS abm_tier_3_date_id,
      sfdc_account.abm_tier_3_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.gtm_acceleration_date::DATE,'YYYYMMDD'),'99999999')

             AS gtm_acceleration_date_id,
      sfdc_account.gtm_acceleration_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.gtm_account_based_date::DATE,'YYYYMMDD'),'99999999')

            AS gtm_account_based_date_id,
      sfdc_account.gtm_account_based_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.gtm_account_centric_date::DATE,'YYYYMMDD'),'99999999')

          AS gtm_account_centric_date_id,
      sfdc_account.gtm_account_centric_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.partners_signed_contract_date::DATE,'YYYYMMDD'),'99999999')

     AS partners_signed_contract_date_id,
      CAST(sfdc_account.partners_signed_contract_date AS date)            AS partners_signed_contract_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.technical_account_manager_date::DATE,'YYYYMMDD'),'99999999')

    AS technical_account_manager_date_id,
      sfdc_account.technical_account_manager_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.customer_since_date::DATE,'YYYYMMDD'),'99999999')

               AS customer_since_date_id,
      sfdc_account.customer_since_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.next_renewal_date::DATE,'YYYYMMDD'),'99999999')

                 AS next_renewal_date_id,
      sfdc_account.next_renewal_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.gs_first_value_date::DATE,'YYYYMMDD'),'99999999')

               AS gs_first_value_date_id,
      sfdc_account.gs_first_value_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.gs_last_csm_activity_date::DATE,'YYYYMMDD'),'99999999')

         AS gs_last_csm_activity_date_id,
      sfdc_account.gs_last_csm_activity_date,


      --measures
      sfdc_account.count_active_subscription_charges,
      sfdc_account.count_active_subscriptions,
      sfdc_account.count_billing_accounts,
      sfdc_account.count_licensed_users,
      sfdc_account.count_of_new_business_won_opportunities,
      sfdc_account.count_open_renewal_opportunities,
      sfdc_account.count_opportunities,
      sfdc_account.count_products_purchased,
      sfdc_account.count_won_opportunities,
      sfdc_account.count_concurrent_ee_subscriptions,
      sfdc_account.count_ce_instances,
      sfdc_account.count_active_ce_users,
      sfdc_account.count_open_opportunities,
      sfdc_account.count_using_ce,
      sfdc_account.carr_this_account,
      sfdc_account.carr_account_family,
      sfdc_account.potential_users,
      sfdc_account.number_of_licenses_this_account,
      sfdc_account.decision_maker_count_linkedin,
      sfdc_account.number_of_employees,
      crm_user.crm_user_role_type                                         AS user_role_type,
      crm_user.user_role_name                                             AS owner_role,
      sfdc_account.lam                                                    AS parent_crm_account_lam,
      sfdc_account.lam_dev_count                                          AS parent_crm_account_lam_dev_count,

      -- PtC and PtE 
      pte_scores.score                                               AS pte_score,
      pte_scores.decile                                              AS pte_decile,
      pte_scores.score_group                                         AS pte_score_group,
      ptc_scores.score                                               AS ptc_score,
      ptc_scores.decile                                              AS ptc_decile,
      ptc_scores.score_group                                         AS ptc_score_group,


      --metadata
      sfdc_account.created_by_id,
      created_by.name                                                     AS created_by_name,
      sfdc_account.last_modified_by_id,
      last_modified_by.name                                               AS last_modified_by_name,
      

  TO_NUMBER(TO_CHAR(sfdc_account.last_modified_date::DATE,'YYYYMMDD'),'99999999')

                AS last_modified_date_id,
      sfdc_account.last_modified_date,
      

  TO_NUMBER(TO_CHAR(sfdc_account.last_activity_date::DATE,'YYYYMMDD'),'99999999')

                AS last_activity_date_id,
      sfdc_account.last_activity_date,
      sfdc_account.is_deleted

    FROM sfdc_account
    LEFT JOIN map_merged_crm_account
      ON sfdc_account.account_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_record_type
      ON sfdc_account.record_type_id = sfdc_record_type.record_type_id
    LEFT JOIN prep_crm_person
      ON sfdc_account.primary_contact_id = prep_crm_person.sfdc_record_id
    LEFT JOIN pte_scores 
      ON sfdc_account.account_id = pte_scores.account_id 
        AND pte_scores.is_current = TRUE
    LEFT JOIN ptc_scores
      ON sfdc_account.account_id = ptc_scores.account_id 
        AND ptc_scores.is_current = TRUE
    LEFT OUTER JOIN sfdc_users AS technical_account_manager
      ON sfdc_account.technical_account_manager_id = technical_account_manager.user_id
    LEFT JOIN sfdc_users AS account_owner
      ON sfdc_account.owner_id = account_owner.user_id
    LEFT JOIN sfdc_users AS proposed_account_owner
      ON proposed_account_owner.user_id = sfdc_account.proposed_account_owner
    LEFT JOIN sfdc_users created_by
      ON sfdc_account.created_by_id = created_by.user_id
    LEFT JOIN sfdc_users AS last_modified_by
      ON sfdc_account.last_modified_by_id = last_modified_by.user_id
    LEFT JOIN crm_user
      ON sfdc_account.owner_id = crm_user.dim_crm_user_id
     LEFT JOIN sfdc_user_roles_source
      ON account_owner.user_role_id = sfdc_user_roles_source.id


)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2020-06-01'::DATE        AS model_created_date,
      '2022-03-02'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1a:T1135a,{{ config(
    tags=["six_hourly"],
    materialized="incremental",
    unique_key="primary_key"
) }}

{{ simple_cte([
    ('sfdc_user_roles_source','sfdc_user_roles_source'),
    ('net_iacv_to_net_arr_ratio', 'net_iacv_to_net_arr_ratio'),
    ('dim_date', 'dim_date'),
    ('sfdc_opportunity_stage_source', 'sfdc_opportunity_stage_source'),
    ('sfdc_opportunity_source', 'sfdc_opportunity_source'),
    ('sfdc_opportunity_snapshots_source','sfdc_opportunity_snapshots_source'),
    ('sfdc_opportunity_stage', 'sfdc_opportunity_stage_source'),
    ('sfdc_record_type_source', 'sfdc_record_type_source')
]) }}

, first_contact  AS (

    SELECT
      opportunity_id,                                                             -- opportunity_id
      contact_id                                                                  AS sfdc_contact_id,
      {{ dbt_utils.surrogate_key(['contact_id']) }}                               AS dim_crm_person_id,
      ROW_NUMBER() OVER (PARTITION BY opportunity_id ORDER BY created_date ASC)   AS row_num
    FROM {{ ref('sfdc_opportunity_contact_role_source')}}

), attribution_touchpoints AS (

    SELECT *
    FROM {{ ref('sfdc_bizible_attribution_touchpoint_source') }}
    WHERE is_deleted = 'FALSE'

), linear_attribution_base AS ( --the number of attribution touches a given opp has in total
    --linear attribution IACV of an opp / all touches (count_touches) for each opp - weighted by the number of touches in the given bucket (campaign,channel,etc)
    SELECT
     opportunity_id                                         AS dim_crm_opportunity_id,
     COUNT(DISTINCT attribution_touchpoints.touchpoint_id)  AS count_crm_attribution_touchpoints
    FROM  attribution_touchpoints
    GROUP BY 1

), campaigns_per_opp as (

    SELECT
      opportunity_id                                        AS dim_crm_opportunity_id,
      COUNT(DISTINCT attribution_touchpoints.campaign_id)   AS count_campaigns
    FROM attribution_touchpoints
    GROUP BY 1

), snapshot_dates AS (

    SELECT *
    FROM dim_date
    WHERE date_actual::DATE >= '2020-02-01' -- Restricting snapshot model to only have data from this date forward. More information https://gitlab.com/gitlab-data/analytics/-/issues/14418#note_1134521216
      AND date_actual <= CURRENT_DATE

), sfdc_account_snapshot AS (

    SELECT *
    FROM {{ ref('prep_crm_account_daily_snapshot') }}
    {% if is_incremental() %}

       WHERE snapshot_date > (SELECT MAX(snapshot_date) FROM {{this}})

    {% endif %}

), sfdc_user_snapshot AS (

    SELECT *
    FROM {{ ref('prep_crm_user_daily_snapshot') }}
    {% if is_incremental() %}

    WHERE snapshot_date > (SELECT MAX(snapshot_date) FROM {{this}})

    {% endif %}

), sfdc_account AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE account_id IS NOT NULL

), sfdc_user AS (

    SELECT *
    FROM {{ ref('sfdc_users_source') }}
    WHERE user_id IS NOT NULL

), sfdc_opportunity_snapshot AS (

    SELECT
      sfdc_opportunity_snapshots_source.account_id                                                                  AS dim_crm_account_id,
      sfdc_opportunity_snapshots_source.opportunity_id                                                              AS dim_crm_opportunity_id,
      sfdc_opportunity_snapshots_source.owner_id                                                                    AS dim_crm_user_id,
      sfdc_opportunity_snapshots_source.parent_opportunity_id                                                       AS dim_parent_crm_opportunity_id,
      sfdc_opportunity_snapshots_source.order_type_stamped                                                          AS order_type,
      sfdc_opportunity_snapshots_source.opportunity_term                                                            AS opportunity_term_base,
      {{ sales_qualified_source_cleaning('sfdc_opportunity_snapshots_source.sales_qualified_source') }}             AS sales_qualified_source,
      sfdc_opportunity_snapshots_source.user_segment_stamped                                                        AS crm_opp_owner_sales_segment_stamped,
      sfdc_opportunity_snapshots_source.user_geo_stamped                                                            AS crm_opp_owner_geo_stamped,
      sfdc_opportunity_snapshots_source.user_region_stamped                                                         AS crm_opp_owner_region_stamped,
      sfdc_opportunity_snapshots_source.user_area_stamped                                                           AS crm_opp_owner_area_stamped,
      sfdc_opportunity_snapshots_source.user_segment_geo_region_area_stamped                                        AS crm_opp_owner_sales_segment_geo_region_area_stamped,
      sfdc_opportunity_snapshots_source.user_business_unit_stamped                                                  AS crm_opp_owner_business_unit_stamped,
      sfdc_opportunity_snapshots_source.created_date::DATE                                                          AS created_date,
      sfdc_opportunity_snapshots_source.sales_accepted_date::DATE                                                   AS sales_accepted_date,
      sfdc_opportunity_snapshots_source.close_date::DATE                                                            AS close_date,
      sfdc_opportunity_snapshots_source.net_arr                                                                     AS raw_net_arr,
      {{ dbt_utils.surrogate_key(['sfdc_opportunity_snapshots_source.opportunity_id','snapshot_dates.date_id'])}}   AS crm_opportunity_snapshot_id,
      snapshot_dates.date_id                                                                                        AS snapshot_id,
      snapshot_dates.date_actual                                                                                    AS snapshot_date,
      snapshot_dates.first_day_of_month                                                                             AS snapshot_month,
      snapshot_dates.fiscal_year                                                                                    AS snapshot_fiscal_year,
      snapshot_dates.fiscal_quarter_name_fy                                                                         AS snapshot_fiscal_quarter_name,
      snapshot_dates.first_day_of_fiscal_quarter                                                                    AS snapshot_fiscal_quarter_date,
      snapshot_dates.day_of_fiscal_quarter_normalised                                                               AS snapshot_day_of_fiscal_quarter_normalised,
      snapshot_dates.day_of_fiscal_year_normalised                                                                  AS snapshot_day_of_fiscal_year_normalised,
      sfdc_account_snapshot.crm_account_owner_sales_segment,
      sfdc_account_snapshot.crm_account_owner_geo,
      sfdc_account_snapshot.crm_account_owner_region,
      sfdc_account_snapshot.crm_account_owner_area,
      sfdc_account_snapshot.crm_account_owner_sales_segment_geo_region_area,
      fulfillment_partner.crm_account_name AS fulfillment_partner_account_name,
      fulfillment_partner.partner_track AS fulfillment_partner_partner_track,
      partner_account.crm_account_name AS partner_account_account_name,
      partner_account.partner_track AS partner_account_partner_track,
      sfdc_account_snapshot.is_jihu_account,
      sfdc_account_snapshot.dim_parent_crm_account_id,
      CASE
        WHEN sfdc_opportunity_snapshots_source.stage_name IN ('8-Closed Lost', 'Closed Lost', '9-Unqualified', 
                                                              'Closed Won', '10-Duplicate')
            THEN 0
        ELSE 1
      END                                                                                                         AS is_open,
      CASE
        WHEN sfdc_opportunity_snapshots_source.user_segment_stamped IS NULL
          OR is_open = 1
          THEN sfdc_account_snapshot.crm_account_owner_sales_segment
        ELSE sfdc_opportunity_snapshots_source.user_segment_stamped
      END                                                                                                         AS opportunity_owner_user_segment,
      CASE
        WHEN sfdc_opportunity_snapshots_source.user_geo_stamped IS NULL
          OR is_open = 1
        THEN sfdc_account_snapshot.crm_account_owner_geo
      ELSE sfdc_opportunity_snapshots_source.user_geo_stamped
      END                                                                                                         AS opportunity_owner_user_geo,

      CASE
        WHEN sfdc_opportunity_snapshots_source.user_region_stamped IS NULL
             OR is_open = 1
          THEN sfdc_account_snapshot.crm_account_owner_region
          ELSE sfdc_opportunity_snapshots_source.user_region_stamped
      END                                                                                                         AS opportunity_owner_user_region,

      CASE
        WHEN sfdc_opportunity_snapshots_source.user_area_stamped IS NULL
             OR is_open = 1
          THEN sfdc_account_snapshot.crm_account_owner_area
        ELSE sfdc_opportunity_snapshots_source.user_area_stamped
      END                                                                                                         AS opportunity_owner_user_area,
      sfdc_account_snapshot.crm_account_owner_role                                                                AS opportunity_owner_role,
      sfdc_account_snapshot.crm_account_owner_title                                                               AS opportunity_owner_title,
      {{ dbt_utils.star(from=ref('sfdc_opportunity_snapshots_source'), except=["ACCOUNT_ID", "OPPORTUNITY_ID", "OWNER_ID", "PARENT_OPPORTUNITY_ID", "ORDER_TYPE_STAMPED",
                                                                               "IS_WON", "ORDER_TYPE", "OPPORTUNITY_TERM", "SALES_QUALIFIED_SOURCE", 
                                                                               "DBT_UPDATED_AT", "CREATED_DATE", "SALES_ACCEPTED_DATE", "CLOSE_DATE", 
                                                                               "NET_ARR", "DEAL_SIZE"],relation_alias="sfdc_opportunity_snapshots_source")}},
      0 AS is_live
    FROM sfdc_opportunity_snapshots_source
    INNER JOIN snapshot_dates
      ON sfdc_opportunity_snapshots_source.dbt_valid_from::DATE <= snapshot_dates.date_actual
        AND (sfdc_opportunity_snapshots_source.dbt_valid_to::DATE > snapshot_dates.date_actual OR sfdc_opportunity_snapshots_source.dbt_valid_to IS NULL)
    LEFT JOIN sfdc_account_snapshot AS fulfillment_partner
      ON sfdc_opportunity_snapshots_source.fulfillment_partner = fulfillment_partner.dim_crm_account_id
        AND snapshot_dates.date_id = fulfillment_partner.snapshot_id
    LEFT JOIN sfdc_account_snapshot AS partner_account
      ON sfdc_opportunity_snapshots_source.partner_account = partner_account.dim_crm_account_id
        AND snapshot_dates.date_id = partner_account.snapshot_id
    LEFT JOIN sfdc_account_snapshot
      ON sfdc_opportunity_snapshots_source.account_id = sfdc_account_snapshot.dim_crm_account_id
        AND snapshot_dates.date_id = sfdc_account_snapshot.snapshot_id
    WHERE sfdc_opportunity_snapshots_source.account_id IS NOT NULL
      AND sfdc_opportunity_snapshots_source.is_deleted = FALSE
     {% if is_incremental() %}

       AND snapshot_dates.date_actual > (SELECT MAX(snapshot_date) FROM {{this}})

    {% endif %}

    QUALIFY ROW_NUMBER() OVER (
    PARTITION BY 
        snapshot_dates.date_id, 
        sfdc_opportunity_snapshots_source.opportunity_id 
    ORDER BY sfdc_opportunity_snapshots_source.dbt_valid_from DESC
    ) = 1

), sfdc_opportunity_live AS (

    SELECT
      sfdc_opportunity_source.account_id                                                                    AS dim_crm_account_id,
      sfdc_opportunity_source.opportunity_id                                                                AS dim_crm_opportunity_id,
      sfdc_opportunity_source.owner_id                                                                      AS dim_crm_user_id,
      sfdc_opportunity_source.parent_opportunity_id                                                         AS dim_parent_crm_opportunity_id,
      sfdc_opportunity_source.order_type_stamped                                                            AS order_type,
      sfdc_opportunity_source.opportunity_term                                                              AS opportunity_term_base,
      {{ sales_qualified_source_cleaning('sfdc_opportunity_source.sales_qualified_source') }}               AS sales_qualified_source,
      sfdc_opportunity_source.user_segment_stamped                                                          AS crm_opp_owner_sales_segment_stamped,
      sfdc_opportunity_source.user_geo_stamped                                                              AS crm_opp_owner_geo_stamped,
      sfdc_opportunity_source.user_region_stamped                                                           AS crm_opp_owner_region_stamped,
      sfdc_opportunity_source.user_area_stamped                                                             AS crm_opp_owner_area_stamped,
      sfdc_opportunity_source.user_segment_geo_region_area_stamped                                          AS crm_opp_owner_sales_segment_geo_region_area_stamped,
      sfdc_opportunity_source.user_business_unit_stamped                                                    AS crm_opp_owner_business_unit_stamped,
      sfdc_opportunity_source.created_date::DATE                                                            AS created_date,
      sfdc_opportunity_source.sales_accepted_date::DATE                                                     AS sales_accepted_date,
      sfdc_opportunity_source.close_date::DATE                                                              AS close_date,
      sfdc_opportunity_source.net_arr                                                                       AS raw_net_arr,
      {{ dbt_utils.surrogate_key(['sfdc_opportunity_source.opportunity_id',"'99991231'"])}}                 AS crm_opportunity_snapshot_id,
      '99991231'                                                                                            AS snapshot_id,
      snapshot_dates.date_actual                                                                            AS snapshot_date,
      snapshot_dates.first_day_of_month                                                                     AS snapshot_month,
      snapshot_dates.fiscal_year                                                                            AS snapshot_fiscal_year,
      snapshot_dates.fiscal_quarter_name_fy                                                                 AS snapshot_fiscal_quarter_name,
      snapshot_dates.first_day_of_fiscal_quarter                                                            AS snapshot_fiscal_quarter_date,
      snapshot_dates.day_of_fiscal_quarter_normalised                                                       AS snapshot_day_of_fiscal_quarter_normalised,
      snapshot_dates.day_of_fiscal_year_normalised                                                          AS snapshot_day_of_fiscal_year_normalised,
      account_owner.user_segment                                                                            AS crm_account_owner_sales_segment_segment,
      account_owner.user_geo                                                                                AS crm_account_owner_geo,
      account_owner.user_region                                                                             AS crm_account_owner_region,
      account_owner.user_area                                                                               AS crm_account_owner_area,
      account_owner.user_segment_geo_region_area                                                            AS crm_account_owner_sales_segment_geo_region_area,
      fulfillment_partner.account_name                                                                      AS fulfillment_partner_account_name,
      fulfillment_partner.partner_track                                                                     AS fulfillment_partner_partner_track,
      partner_account.account_name                                                                          AS partner_account_account_name,
      partner_account.partner_track                                                                         AS partner_account_partner_track,
      sfdc_account.is_jihu_account,
      sfdc_account.ultimate_parent_account_id                                                               AS dim_parent_crm_account_id,
      CASE
        WHEN sfdc_opportunity_source.stage_name IN ('8-Closed Lost', 'Closed Lost', '9-Unqualified', 
                                                    'Closed Won', '10-Duplicate')
            THEN 0
        ELSE 1
      END                                                                                                   AS is_open,
      CASE
        WHEN sfdc_opportunity_source.user_segment_stamped IS NULL
          OR is_open = 1
          THEN account_owner.user_segment
        ELSE sfdc_opportunity_source.user_segment_stamped
      END                                                                                                   AS opportunity_owner_user_segment,
      CASE
        WHEN sfdc_opportunity_source.user_geo_stamped IS NULL
          OR is_open = 1
        THEN account_owner.user_geo
      ELSE sfdc_opportunity_source.user_geo_stamped
      END                                                                                                   AS opportunity_owner_user_geo,

      CASE
        WHEN sfdc_opportunity_source.user_region_stamped IS NULL
             OR is_open = 1
          THEN account_owner.user_region
          ELSE sfdc_opportunity_source.user_region_stamped
      END                                                                                                   AS opportunity_owner_user_region,

      CASE
        WHEN sfdc_opportunity_source.user_area_stamped IS NULL
             OR is_open = 1
          THEN account_owner.user_area
        ELSE sfdc_opportunity_source.user_area_stamped
      END                                                                                                   AS opportunity_owner_user_area,
      sfdc_user_roles_source.name                                                                           AS opportunity_owner_role,
      account_owner.title                                                                                   AS opportunity_owner_title,
      {{ dbt_utils.star(from=ref('sfdc_opportunity_source'), except=["ACCOUNT_ID", "OPPORTUNITY_ID", "OWNER_ID", "PARENT_OPPORTUNITY_ID", "ORDER_TYPE_STAMPED", "IS_WON", 
                                                                     "ORDER_TYPE", "OPPORTUNITY_TERM","SALES_QUALIFIED_SOURCE", "DBT_UPDATED_AT", 
                                                                     "CREATED_DATE", "SALES_ACCEPTED_DATE", "CLOSE_DATE", "NET_ARR", "DEAL_SIZE"],relation_alias="sfdc_opportunity_source")}},
      NULL                                                                                                  AS dbt_scd_id,
      CURRENT_DATE()                                                                                        AS dbt_valid_from,
      CURRENT_DATE()                                                                                        AS dbt_valid_to,
      1                                                                                                     AS is_live
    FROM sfdc_opportunity_source
    LEFT JOIN snapshot_dates
      ON CURRENT_DATE() = snapshot_dates.date_actual
    LEFT JOIN sfdc_account AS fulfillment_partner
      ON sfdc_opportunity_source.fulfillment_partner = fulfillment_partner.account_id
    LEFT JOIN sfdc_account AS partner_account
      ON sfdc_opportunity_source.partner_account = partner_account.account_id
    LEFT JOIN sfdc_account
      ON sfdc_opportunity_source.account_id= sfdc_account.account_id
    LEFT JOIN sfdc_user AS account_owner
      ON sfdc_account.owner_id = account_owner.user_id
    LEFT JOIN sfdc_user_roles_source
      ON account_owner.user_role_id = sfdc_user_roles_source.id
    WHERE sfdc_opportunity_source.account_id IS NOT NULL
      AND sfdc_opportunity_source.is_deleted = FALSE

), sfdc_opportunity AS (

    SELECT *
    FROM sfdc_opportunity_snapshot

    UNION ALL 

    SELECT * 
    FROM sfdc_opportunity_live

), sfdc_zqu_quote_source AS (

    SELECT *
    FROM {{ ref('sfdc_zqu_quote_source') }}
    WHERE is_deleted = FALSE

), quote AS (

    SELECT DISTINCT
      sfdc_zqu_quote_source.zqu__opportunity                AS dim_crm_opportunity_id,
      sfdc_zqu_quote_source.zqu_quote_id                    AS dim_quote_id,
      sfdc_zqu_quote_source.zqu__start_date::DATE           AS quote_start_date,
      (ROW_NUMBER() OVER (PARTITION BY sfdc_zqu_quote_source.zqu__opportunity ORDER BY sfdc_zqu_quote_source.created_date DESC))
                                                            AS record_number
    FROM sfdc_zqu_quote_source
    INNER JOIN sfdc_opportunity
      ON sfdc_zqu_quote_source.zqu__opportunity = sfdc_opportunity.dim_crm_opportunity_id
    WHERE stage_name IN ('Closed Won', '8-Closed Lost')
      AND zqu__primary = TRUE
    QUALIFY record_number = 1

), final AS (

    SELECT
      -- opportunity information
      sfdc_opportunity.*,
      sfdc_opportunity.crm_opportunity_snapshot_id||'-'||sfdc_opportunity.is_live                  AS primary_key,

      -- dates & date ids
      {{ get_date_id('sfdc_opportunity.created_date') }}                                          AS created_date_id,
      {{ get_date_id('sfdc_opportunity.sales_accepted_date') }}                                   AS sales_accepted_date_id,
      {{ get_date_id('sfdc_opportunity.close_date') }}                                            AS close_date_id,
      {{ get_date_id('sfdc_opportunity.stage_0_pending_acceptance_date') }}                       AS stage_0_pending_acceptance_date_id,
      {{ get_date_id('sfdc_opportunity.stage_1_discovery_date') }}                                AS stage_1_discovery_date_id,
      {{ get_date_id('sfdc_opportunity.stage_2_scoping_date') }}                                  AS stage_2_scoping_date_id,
      {{ get_date_id('sfdc_opportunity.stage_3_technical_evaluation_date') }}                     AS stage_3_technical_evaluation_date_id,
      {{ get_date_id('sfdc_opportunity.stage_4_proposal_date') }}                                 AS stage_4_proposal_date_id,
      {{ get_date_id('sfdc_opportunity.stage_5_negotiating_date') }}                              AS stage_5_negotiating_date_id,
      {{ get_date_id('sfdc_opportunity.stage_6_awaiting_signature_date') }}                       AS stage_6_awaiting_signature_date_id,
      {{ get_date_id('sfdc_opportunity.stage_6_closed_won_date') }}                               AS stage_6_closed_won_date_id,
      {{ get_date_id('sfdc_opportunity.stage_6_closed_lost_date') }}                              AS stage_6_closed_lost_date_id,
      {{ get_date_id('sfdc_opportunity.technical_evaluation_date') }}                             AS technical_evaluation_date_id,
      {{ get_date_id('sfdc_opportunity.last_activity_date') }}                                    AS last_activity_date_id,
      {{ get_date_id('sfdc_opportunity.sales_last_activity_date') }}                              AS sales_last_activity_date_id,
      {{ get_date_id('sfdc_opportunity.subscription_start_date') }}                               AS subscription_start_date_id,
      {{ get_date_id('sfdc_opportunity.subscription_end_date') }}                                 AS subscription_end_date_id,
      {{ get_date_id('sfdc_opportunity.sales_qualified_date') }}                                  AS sales_qualified_date_id,

      close_date.first_day_of_fiscal_quarter                                                      AS close_fiscal_quarter_date,
      90 - DATEDIFF(DAY, sfdc_opportunity.snapshot_date, close_date.last_day_of_fiscal_quarter)   AS close_day_of_fiscal_quarter_normalised,
      -- The fiscal year has to be created from scratch instead of joining to the date model because of sales practices which put close dates out 100+ years in the future
      CASE 
        WHEN DATE_PART('month', sfdc_opportunity.close_date) < 2
          THEN DATE_PART('year', sfdc_opportunity.close_date)
        ELSE (DATE_PART('year', sfdc_opportunity.close_date)+1) 
      END                                                                                         AS close_fiscal_year,

      {{ get_date_id('sfdc_opportunity.iacv_created_date')}}                                      AS arr_created_date_id,
      sfdc_opportunity.iacv_created_date                                                          AS arr_created_date,
      arr_created_date.fiscal_quarter_name_fy                                                     AS arr_created_fiscal_quarter_name,
      arr_created_date.first_day_of_fiscal_quarter                                                AS arr_created_fiscal_quarter_date,

      subscription_start_date.fiscal_quarter_name_fy                                              AS subscription_start_date_fiscal_quarter_name,
      subscription_start_date.first_day_of_fiscal_quarter                                         AS subscription_start_date_fiscal_quarter_date,

      COALESCE(net_iacv_to_net_arr_ratio.ratio_net_iacv_to_net_arr,0)                             AS segment_order_type_iacv_to_net_arr_ratio,

      -- net arr
      CASE
        WHEN sfdc_opportunity_stage.is_won = 1 -- only consider won deals
          AND sfdc_opportunity.opportunity_category <> 'Contract Reset' -- contract resets have a special way of calculating net iacv
          AND COALESCE(sfdc_opportunity.raw_net_arr,0) <> 0
          AND COALESCE(sfdc_opportunity.net_incremental_acv,0) <> 0
            THEN COALESCE(sfdc_opportunity.raw_net_arr / sfdc_opportunity.net_incremental_acv,0)
        ELSE NULL
      END                                                                     AS opportunity_based_iacv_to_net_arr_ratio,
      -- If there is no opportunity, use a default table ratio
      -- I am faking that using the upper CTE, that should be replaced by the official table
      -- calculated net_arr
      -- uses ratios to estimate the net_arr based on iacv if open or net_iacv if closed
      -- if there is an opportunity based ratio, use that, if not, use default from segment / order type
      -- NUANCE: Lost deals might not have net_incremental_acv populated, so we must rely on iacv
      -- Using opty ratio for open deals doesn't seem to work well
      CASE
        WHEN sfdc_opportunity.stage_name NOT IN ('8-Closed Lost', '9-Unqualified', 'Closed Won', '10-Duplicate')  -- OPEN DEAL
            THEN COALESCE(sfdc_opportunity.incremental_acv,0) * COALESCE(segment_order_type_iacv_to_net_arr_ratio,0)
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost')                       -- CLOSED LOST DEAL and no Net IACV
          AND COALESCE(sfdc_opportunity.net_incremental_acv,0) = 0
            THEN COALESCE(sfdc_opportunity.incremental_acv,0) * COALESCE(segment_order_type_iacv_to_net_arr_ratio,0)
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Won')         -- REST of CLOSED DEAL
            THEN COALESCE(sfdc_opportunity.net_incremental_acv,0) * COALESCE(opportunity_based_iacv_to_net_arr_ratio,segment_order_type_iacv_to_net_arr_ratio)
        ELSE NULL
      END                                                                     AS calculated_from_ratio_net_arr,
      -- For opportunities before start of FY22, as Net ARR was WIP, there are a lot of opties with IACV or Net IACV and no Net ARR
      -- Those were later fixed in the opportunity object but stayed in the snapshot table.
      -- To account for those issues and give a directionally correct answer, we apply a ratio to everything before FY22
      CASE
        WHEN  sfdc_opportunity.snapshot_date::DATE < '2021-02-01' -- All deals before cutoff and that were not updated to Net ARR
          THEN calculated_from_ratio_net_arr
        WHEN  sfdc_opportunity.snapshot_date::DATE >= '2021-02-01'  -- After cutoff date, for all deals earlier than FY19 that are closed and have no net arr
              AND sfdc_opportunity.close_date::DATE < '2018-02-01'
              AND sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost', '9-Unqualified', 'Closed Won', '10-Duplicate')
              AND COALESCE(sfdc_opportunity.raw_net_arr,0) = 0
          THEN calculated_from_ratio_net_arr
        ELSE COALESCE(sfdc_opportunity.raw_net_arr,0) -- Rest of deals after cut off date
      END                                                                     AS net_arr,

      -- opportunity flags
      CASE
        WHEN (sfdc_opportunity.days_in_stage > 30
          OR sfdc_opportunity.incremental_acv > 100000
          OR sfdc_opportunity.pushed_count > 0)
          THEN TRUE
          ELSE FALSE
      END                                                                                         AS is_risky,
      CASE
        WHEN sfdc_opportunity.opportunity_term_base IS NULL THEN
          DATEDIFF('month', quote.quote_start_date, sfdc_opportunity.subscription_end_date)
        ELSE sfdc_opportunity.opportunity_term_base
      END                                                                                         AS opportunity_term,
      -- opportunity stage information
      sfdc_opportunity_stage.is_active                                                            AS is_active,
      sfdc_opportunity_stage.is_won                                                               AS is_won,
      IFF(sfdc_opportunity.stage_name IN ('1-Discovery', '2-Developing', '2-Scoping','3-Technical Evaluation', '4-Proposal', 'Closed Won','5-Negotiating', '6-Awaiting Signature', '7-Closing'), 1, 0) AS is_stage_1_plus,
      IFF(sfdc_opportunity.stage_name IN ('3-Technical Evaluation', '4-Proposal', 'Closed Won','5-Negotiating', '6-Awaiting Signature', '7-Closing'), 1, 0) AS is_stage_3_plus,
      IFF(sfdc_opportunity.stage_name IN ('4-Proposal', 'Closed Won','5-Negotiating', '6-Awaiting Signature', '7-Closing'), 1, 0) AS is_stage_4_plus,
      IFF(sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost'), 1, 0) AS is_lost,
      IFF(LOWER(sfdc_opportunity.sales_type) like '%renewal%', 1, 0) AS is_renewal,
      IFF(sfdc_opportunity.opportunity_category IN ('Decommission'), 1, 0) AS is_decommissed,

     -- flags
      CASE
        WHEN sfdc_opportunity.sales_accepted_date IS NOT NULL
          AND sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.stage_name != '10-Duplicate'
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_sao,
      CASE
        WHEN is_sao = TRUE
          AND sfdc_opportunity.sales_qualified_source IN (
                                        'SDR Generated'
                                        , 'BDR Generated'
                                        )
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_sdr_sao,
      CASE
        WHEN (
               (sfdc_opportunity.sales_type = 'Renewal' AND sfdc_opportunity.stage_name = '8-Closed Lost')
                 OR sfdc_opportunity.stage_name = 'Closed Won'
              )
            AND sfdc_opportunity.is_jihu_account = FALSE
          THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_net_arr_closed_deal,
      CASE
        WHEN (sfdc_opportunity.new_logo_count = 1
          OR sfdc_opportunity.new_logo_count = -1
          )
          AND sfdc_opportunity.is_jihu_account = FALSE
          THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_new_logo_first_order,
      COALESCE(
        sfdc_opportunity.is_pipeline_created_eligible,
        CASE
         WHEN sfdc_opportunity.order_type IN ('1. New - First Order' ,'2. New - Connected', '3. Growth')
           AND sfdc_opportunity.is_edu_oss = 0
           AND arr_created_date.first_day_of_fiscal_quarter IS NOT NULL
           AND sfdc_opportunity.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Credit','Contract Reset')
           -- 20211222 Adjusted to remove the ommitted filter
           AND sfdc_opportunity.stage_name NOT IN ('00-Pre Opportunity','10-Duplicate', '9-Unqualified','0-Pending Acceptance')
           AND (net_arr > 0
             OR sfdc_opportunity.opportunity_category = 'Credit')
           -- 20220128 Updated to remove webdirect SQS deals
           AND sfdc_opportunity.sales_qualified_source  != 'Web Direct Generated'
           AND sfdc_opportunity.is_jihu_account = 0
          THEN 1
          ELSE 0
        END
        ) AS is_net_arr_pipeline_created,
      CASE
        WHEN sfdc_opportunity_stage.is_closed = TRUE
          AND sfdc_opportunity.amount >= 0
          AND (sfdc_opportunity.reason_for_loss IS NULL OR sfdc_opportunity.reason_for_loss != 'Merged into another opportunity')
          AND sfdc_opportunity.is_edu_oss = 0
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_win_rate_calc,
      CASE
        WHEN sfdc_opportunity_stage.is_won = 'TRUE'
          AND sfdc_opportunity.is_closed = 'TRUE'
          AND sfdc_opportunity.is_edu_oss = 0
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_closed_won,
      CASE
        WHEN LOWER(sfdc_opportunity.order_type_grouped) LIKE ANY ('%growth%', '%new%')
          AND sfdc_opportunity.is_edu_oss = 0
          AND is_stage_1_plus = 1
          AND sfdc_opportunity.forecast_category_name != 'Omitted'
          AND sfdc_opportunity.is_open = 1
         THEN 1
         ELSE 0
      END                                                                                         AS is_eligible_open_pipeline,
      CASE
        WHEN sfdc_opportunity.sales_accepted_date IS NOT NULL
          AND sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
            THEN 1
        ELSE 0
      END                                                                                         AS is_eligible_sao,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          -- For ASP we care mainly about add on, new business, excluding contraction / churn
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth')
          -- Exclude Decomissioned as they are not aligned to the real owner
          -- Contract Reset, Decomission
          AND sfdc_opportunity.opportunity_category IN ('Standard','Ramp Deal','Internal Correction')
          -- Exclude Deals with nARR < 0
          AND net_arr > 0
            THEN 1
          ELSE 0
      END                                                           AS is_eligible_asp_analysis,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND is_renewal = 0
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
          AND sfdc_opportunity.opportunity_category IN ('Standard','Ramp Deal','Decommissioned')
          AND sfdc_opportunity.is_web_portal_purchase = 0
            THEN 1
          ELSE 0
      END                                                                                         AS is_eligible_age_analysis,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND (sfdc_opportunity_stage.is_won = 1
              OR (is_renewal = 1 AND is_lost = 1))
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            THEN 1
          ELSE 0
      END                                                                                         AS is_eligible_net_arr,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND sfdc_opportunity.order_type IN ('4. Contraction','6. Churn - Final','5. Churn - Partial')
            THEN 1
          ELSE 0
      END                                                                                         AS is_eligible_churn_contraction,
      CASE
        WHEN sfdc_opportunity.stage_name IN ('10-Duplicate')
            THEN 1
        ELSE 0
      END                                                                                         AS is_duplicate,
      CASE
        WHEN sfdc_opportunity.opportunity_category IN ('Credit')
          THEN 1
        ELSE 0
      END                                                                                         AS is_credit,
      CASE
        WHEN sfdc_opportunity.opportunity_category IN ('Contract Reset')
          THEN 1
        ELSE 0
      END                                                                                         AS is_contract_reset,

      -- alliance type fields

      {{ alliance_partner_current('sfdc_opportunity.fulfillment_partner_account_name', 'sfdc_opportunity.partner_account_account_name', 'sfdc_opportunity.partner_track', 'sfdc_opportunity.resale_partner_track', 'sfdc_opportunity.deal_path', 'sfdc_opportunity.is_focus_partner') }} AS alliance_type_current,
      {{ alliance_partner_short_current('sfdc_opportunity.fulfillment_partner_account_name', 'sfdc_opportunity.partner_account_account_name', 'sfdc_opportunity.partner_track', 'sfdc_opportunity.resale_partner_track', 'sfdc_opportunity.deal_path', 'sfdc_opportunity.is_focus_partner') }} AS alliance_type_short_current,

      {{ alliance_partner('sfdc_opportunity.fulfillment_partner_account_name', 'sfdc_opportunity.partner_account_account_name', 'sfdc_opportunity.close_date', 'sfdc_opportunity.partner_track', 'sfdc_opportunity.resale_partner_track', 'sfdc_opportunity.deal_path', 'sfdc_opportunity.is_focus_partner') }} AS alliance_type,
      {{ alliance_partner_short('sfdc_opportunity.fulfillment_partner_account_name', 'sfdc_opportunity.partner_account_account_name', 'sfdc_opportunity.close_date', 'sfdc_opportunity.partner_track', 'sfdc_opportunity.resale_partner_track', 'sfdc_opportunity.deal_path', 'sfdc_opportunity.is_focus_partner') }} AS alliance_type_short,

      sfdc_opportunity.fulfillment_partner_account_name AS resale_partner_name,

      --  quote information
      quote.dim_quote_id,
      quote.quote_start_date,

      -- contact information
      first_contact.dim_crm_person_id,
      first_contact.sfdc_contact_id,

      -- Record type information
      sfdc_record_type_source.record_type_name,

      -- attribution information
      linear_attribution_base.count_crm_attribution_touchpoints,
      campaigns_per_opp.count_campaigns,
      sfdc_opportunity.incremental_acv/linear_attribution_base.count_crm_attribution_touchpoints   AS weighted_linear_iacv,

     -- opportunity attributes
      CASE
        WHEN sfdc_opportunity.days_in_sao < 0                  THEN '1. Closed in < 0 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 0 AND 30     THEN '2. Closed in 0-30 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 31 AND 60    THEN '3. Closed in 31-60 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 61 AND 90    THEN '4. Closed in 61-90 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 91 AND 180   THEN '5. Closed in 91-180 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 181 AND 270  THEN '6. Closed in 181-270 days'
        WHEN sfdc_opportunity.days_in_sao > 270                THEN '7. Closed in > 270 days'
        ELSE NULL
      END                                                                                         AS closed_buckets,
      CASE
        WHEN net_arr > -5000
            AND is_eligible_churn_contraction = 1
          THEN '1. < 5k'
        WHEN net_arr > -20000
          AND net_arr <= -5000
          AND is_eligible_churn_contraction = 1
          THEN '2. 5k-20k'
        WHEN net_arr > -50000
          AND net_arr <= -20000
          AND is_eligible_churn_contraction = 1
          THEN '3. 20k-50k'
        WHEN net_arr > -100000
          AND net_arr <= -50000
          AND is_eligible_churn_contraction = 1
          THEN '4. 50k-100k'
        WHEN net_arr < -100000
          AND is_eligible_churn_contraction = 1
          THEN '5. 100k+'
      END                                                 AS churn_contraction_net_arr_bucket,
      CASE
        WHEN sfdc_opportunity.created_date < '2022-02-01'
          THEN 'Legacy'
        WHEN sfdc_opportunity.opportunity_sales_development_representative IS NOT NULL AND sfdc_opportunity.opportunity_business_development_representative IS NOT NULL
          THEN 'SDR & BDR'
        WHEN sfdc_opportunity.opportunity_sales_development_representative IS NOT NULL
          THEN 'SDR'
        WHEN sfdc_opportunity.opportunity_business_development_representative IS NOT NULL
          THEN 'BDR'
        WHEN sfdc_opportunity.opportunity_business_development_representative IS NULL AND sfdc_opportunity.opportunity_sales_development_representative IS NULL
          THEN 'No XDR Assigned'
      END                                               AS sdr_or_bdr,
      CASE
        WHEN sfdc_opportunity_stage.is_won = 1
          THEN '1.Won'
        WHEN is_lost = 1
          THEN '2.Lost'
        WHEN sfdc_opportunity.is_open = 1
          THEN '0. Open'
        ELSE 'N/A'
      END                                                                                         AS stage_category,
      CASE
       WHEN sfdc_opportunity.order_type = '1. New - First Order'
         THEN '1. New'
       WHEN sfdc_opportunity.order_type IN ('2. New - Connected', '3. Growth', '5. Churn - Partial','6. Churn - Final','4. Contraction')
         THEN '2. Growth'
       ELSE '3. Other'
     END                                                                   AS deal_group,
     CASE
       WHEN sfdc_opportunity.order_type = '1. New - First Order'
         THEN '1. New'
       WHEN sfdc_opportunity.order_type IN ('2. New - Connected', '3. Growth')
         THEN '2. Growth'
       WHEN sfdc_opportunity.order_type IN ('4. Contraction')
         THEN '3. Contraction'
       WHEN sfdc_opportunity.order_type IN ('5. Churn - Partial','6. Churn - Final')
         THEN '4. Churn'
       ELSE '5. Other'
      END                                                                                       AS deal_category,
      COALESCE(sfdc_opportunity.reason_for_loss, sfdc_opportunity.downgrade_reason)               AS reason_for_loss_staged,
      CASE
        WHEN reason_for_loss_staged IN ('Do Nothing','Other','Competitive Loss','Operational Silos')
          OR reason_for_loss_staged IS NULL
          THEN 'Unknown'
        WHEN reason_for_loss_staged IN ('Missing Feature','Product value/gaps','Product Value / Gaps',
                                          'Stayed with Community Edition','Budget/Value Unperceived')
          THEN 'Product Value / Gaps'
        WHEN reason_for_loss_staged IN ('Lack of Engagement / Sponsor','Went Silent','Evangelist Left')
          THEN 'Lack of Engagement / Sponsor'
        WHEN reason_for_loss_staged IN ('Loss of Budget','No budget')
          THEN 'Loss of Budget'
        WHEN reason_for_loss_staged = 'Merged into another opportunity'
          THEN 'Merged Opp'
        WHEN reason_for_loss_staged = 'Stale Opportunity'
          THEN 'No Progression - Auto-close'
        WHEN reason_for_loss_staged IN ('Product Quality / Availability','Product quality/availability')
          THEN 'Product Quality / Availability'
        ELSE reason_for_loss_staged
     END                                                                                        AS reason_for_loss_calc,
     CASE
       WHEN (
              (
                is_renewal = 1
                  AND is_lost = 1
               )
                OR sfdc_opportunity_stage.is_won = 1
              )
               AND sfdc_opportunity.order_type IN ('4. Contraction','5. Churn - Partial')
          THEN 'Contraction'
               WHEN (
              (
                is_renewal = 1
                  AND is_lost = 1
               )
                OR sfdc_opportunity_stage.is_won = 1
              )
               AND sfdc_opportunity.order_type = '6. Churn - Final'
          THEN 'Churn'
        ELSE NULL
     END                                                                                        AS churn_contraction_type,
     CASE
        WHEN is_renewal = 1
          AND subscription_start_date_fiscal_quarter_date >= close_fiscal_quarter_date
         THEN 'On-Time'
        WHEN is_renewal = 1
          AND subscription_start_date_fiscal_quarter_date < close_fiscal_quarter_date
            THEN 'Late'
      END                                                                                       AS renewal_timing_status,
      CASE
        WHEN net_arr > -5000
          THEN '1. < 5k'
        WHEN net_arr > -20000 AND net_arr <= -5000
          THEN '2. 5k-20k'
        WHEN net_arr > -50000 AND net_arr <= -20000
          THEN '3. 20k-50k'
        WHEN net_arr > -100000 AND net_arr <= -50000
          THEN '4. 50k-100k'
        WHEN net_arr < -100000
          THEN '5. 100k+'
      END                                                                                       AS churned_contraction_net_arr_bucket,
      CASE
        WHEN sfdc_opportunity.deal_path = 'Direct'
          THEN 'Direct'
        WHEN sfdc_opportunity.deal_path = 'Web Direct'
          THEN 'Web Direct'
        WHEN sfdc_opportunity.deal_path = 'Partner'
            AND sfdc_opportunity.sales_qualified_source = 'Partner Generated'
          THEN 'Partner Sourced'
        WHEN sfdc_opportunity.deal_path = 'Partner'
            AND sfdc_opportunity.sales_qualified_source != 'Partner Generated'
          THEN 'Partner Co-Sell'
      END                                                                                       AS deal_path_engagement,
      CASE
        WHEN net_arr > 0 AND net_arr < 5000
          THEN '1 - Small (<5k)'
        WHEN net_arr >=5000 AND net_arr < 25000
          THEN '2 - Medium (5k - 25k)'
        WHEN net_arr >=25000 AND net_arr < 100000
          THEN '3 - Big (25k - 100k)'
        WHEN net_arr >= 100000
          THEN '4 - Jumbo (>100k)'
        ELSE 'Other'
      END                                                          AS deal_size,
      CASE
        WHEN net_arr > 0 AND net_arr < 1000
          THEN '1. (0k -1k)'
        WHEN net_arr >=1000 AND net_arr < 10000
          THEN '2. (1k - 10k)'
        WHEN net_arr >=10000 AND net_arr < 50000
          THEN '3. (10k - 50k)'
        WHEN net_arr >=50000 AND net_arr < 100000
          THEN '4. (50k - 100k)'
        WHEN net_arr >= 100000 AND net_arr < 250000
          THEN '5. (100k - 250k)'
        WHEN net_arr >= 250000 AND net_arr < 500000
          THEN '6. (250k - 500k)'
        WHEN net_arr >= 500000 AND net_arr < 1000000
          THEN '7. (500k-1000k)'
        WHEN net_arr >= 1000000
          THEN '8. (>1000k)'
        ELSE 'Other'
      END                                                                                         AS calculated_deal_size,
      CASE
        WHEN
          sfdc_opportunity.stage_name IN (
            '00-Pre Opportunity',
            '0-Pending Acceptance',
            '0-Qualifying',
            'Developing',
            '1-Discovery',
            '2-Developing',
            '2-Scoping'
          )
          THEN 'Pipeline'
        WHEN
          sfdc_opportunity.stage_name IN (
            '3-Technical Evaluation',
            '4-Proposal',
            '5-Negotiating',
            '6-Awaiting Signature',
            '7-Closing'
          )
          THEN '3+ Pipeline'
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost')
          THEN 'Lost'
        WHEN sfdc_opportunity.stage_name IN ('Closed Won')
          THEN 'Closed Won'
        ELSE 'Other'
      END AS stage_name_3plus,
      CASE
        WHEN
          sfdc_opportunity.stage_name IN (
            '00-Pre Opportunity',
            '0-Pending Acceptance',
            '0-Qualifying',
            'Developing',
            '1-Discovery',
            '2-Developing',
            '2-Scoping',
            '3-Technical Evaluation'
          )
          THEN 'Pipeline'
        WHEN
          sfdc_opportunity.stage_name IN (
            '4-Proposal', '5-Negotiating', '6-Awaiting Signature', '7-Closing'
          )
          THEN '4+ Pipeline'
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost')
          THEN 'Lost'
        WHEN sfdc_opportunity.stage_name IN ('Closed Won')
          THEN 'Closed Won'
        ELSE 'Other'
      END AS stage_name_4plus,

      -- counts and arr totals by pipeline stage
       CASE
        WHEN is_decommissed = 1
          THEN -1
        WHEN is_credit = 1
          THEN 0
        ELSE 1
      END                                               AS calculated_deal_count,
      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_1_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_1plus_deal_count,

      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_3_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_3plus_deal_count,

      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_4_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_4plus_deal_count,
      CASE
        WHEN sfdc_opportunity_stage.is_won = 1
          THEN calculated_deal_count
        ELSE 0
      END                                               AS booked_deal_count,
      CASE
        WHEN is_eligible_churn_contraction = 1
          THEN calculated_deal_count
        ELSE 0
      END                                               AS churned_contraction_deal_count,
      CASE
        WHEN (
              (
                is_renewal = 1
                  AND is_lost = 1
               )
                OR sfdc_opportunity_stage.is_won = 1
              )
              AND is_eligible_churn_contraction = 1
          THEN calculated_deal_count
        ELSE 0
      END                                                 AS booked_churned_contraction_deal_count,
      CASE
        WHEN
          (
            (
              is_renewal = 1
                AND is_lost = 1
              )
            OR sfdc_opportunity_stage.is_won = 1
            )
            AND is_eligible_churn_contraction = 1
          THEN net_arr
        ELSE 0
      END                                                 AS booked_churned_contraction_net_arr,

      CASE
        WHEN is_eligible_churn_contraction = 1
          THEN net_arr
        ELSE 0
      END                                                 AS churned_contraction_net_arr,
      CASE
        WHEN is_eligible_open_pipeline = 1
          THEN net_arr
        ELSE 0
      END                                                AS open_1plus_net_arr,
      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_3_plus = 1
            THEN net_arr
        ELSE 0
      END                                                AS open_3plus_net_arr,
      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_4_plus = 1
            THEN net_arr
        ELSE 0
      END                                                AS open_4plus_net_arr,
      CASE
        WHEN (
                sfdc_opportunity_stage.is_won = 1
                OR (
                    is_renewal = 1
                      AND is_lost = 1
                   )
             )
          THEN net_arr
        ELSE 0
      END                                                 AS booked_net_arr,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND (
               sfdc_opportunity_stage.is_won = 1
                OR (
                    is_renewal = 1
                     AND is_lost = 1)
                   )
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            THEN 1
          ELSE 0
      END                                                           AS is_booked_net_arr,
      CASE
        WHEN sfdc_opportunity.deal_path = 'Partner'
          THEN REPLACE(COALESCE(sfdc_opportunity.partner_track, sfdc_opportunity.partner_account_partner_track, sfdc_opportunity.fulfillment_partner_partner_track,'Open'),'select','Select')
        ELSE 'Direct'
      END                                                                                           AS calculated_partner_track,
      CASE
        WHEN
        sfdc_opportunity.dim_parent_crm_account_id IN (
          '001610000111bA3',
          '0016100001F4xla',
          '0016100001CXGCs',
          '00161000015O9Yn',
          '0016100001b9Jsc'
        )
        AND sfdc_opportunity.close_date < '2020-08-01'
        THEN 1
      -- NF 2021 - Pubsec extreme deals
      WHEN
        sfdc_opportunity.dim_crm_opportunity_id IN ('0064M00000WtZKUQA3', '0064M00000Xb975QAB')
        AND (sfdc_opportunity.snapshot_date < '2021-05-01' OR sfdc_opportunity.is_live = 1)
        THEN 1
      -- exclude vision opps from FY21-Q2
      WHEN arr_created_fiscal_quarter_name = 'FY21-Q2'
        AND sfdc_opportunity.snapshot_day_of_fiscal_quarter_normalised = 90
        AND sfdc_opportunity.stage_name IN (
          '00-Pre Opportunity', '0-Pending Acceptance', '0-Qualifying'
        )
        THEN 1
      -- NF 20220415 PubSec duplicated deals on Pipe Gen -- Lockheed Martin GV - 40000 Ultimate Renewal
      WHEN
        sfdc_opportunity.dim_crm_opportunity_id IN (
          '0064M00000ZGpfQQAT', '0064M00000ZGpfVQAT', '0064M00000ZGpfGQAT'
        )
        THEN 1
       -- remove test accounts
       WHEN
         sfdc_opportunity.dim_crm_account_id = '0014M00001kGcORQA0'
         THEN 1
       --remove test accounts
       WHEN (sfdc_opportunity.dim_parent_crm_account_id = ('0016100001YUkWVAA1')
            OR sfdc_opportunity.dim_crm_account_id IS NULL)
         THEN 1
       -- remove jihu accounts
       WHEN sfdc_opportunity.is_jihu_account = 1
         THEN 1
       -- remove deleted opps
        WHEN sfdc_opportunity.is_deleted = 1
          THEN 1
         ELSE 0
      END AS is_excluded_from_pipeline_created,
      CASE
        WHEN sfdc_opportunity.is_open = 1
          THEN DATEDIFF(days, sfdc_opportunity.created_date, sfdc_opportunity.snapshot_date)
        WHEN sfdc_opportunity.is_open = 0 AND sfdc_opportunity.snapshot_date < sfdc_opportunity.close_date
          THEN DATEDIFF(days, sfdc_opportunity.created_date, sfdc_opportunity.snapshot_date)
        ELSE DATEDIFF(days, sfdc_opportunity.created_date, sfdc_opportunity.close_date)
      END                                                       AS calculated_age_in_days,
      CASE
        WHEN arr_created_fiscal_quarter_date = close_fiscal_quarter_date
          AND is_net_arr_pipeline_created = 1
            THEN net_arr
        ELSE 0
      END                                                         AS created_and_won_same_quarter_net_arr,
      IFF(sfdc_opportunity.comp_new_logo_override = 'Yes', 1, 0) AS is_comp_new_logo_override,
      IFF(arr_created_date.fiscal_quarter_name_fy = sfdc_opportunity.snapshot_fiscal_quarter_name AND is_net_arr_pipeline_created = 1, net_arr, 0) AS created_in_snapshot_quarter_net_arr,
      IFF(arr_created_date.fiscal_quarter_name_fy = sfdc_opportunity.snapshot_fiscal_quarter_name AND is_net_arr_pipeline_created = 1, calculated_deal_count, 0) AS created_in_snapshot_quarter_deal_count,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Other'),1,0) AS competitors_other_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitLab Core'),1,0) AS competitors_gitlab_core_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'None'),1,0) AS competitors_none_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitHub Enterprise'),1,0) AS competitors_github_enterprise_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'BitBucket Server'),1,0) AS competitors_bitbucket_server_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Unknown'),1,0) AS competitors_unknown_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitHub.com'),1,0) AS competitors_github_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitLab.com'),1,0) AS competitors_gitlab_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Jenkins'),1,0) AS competitors_jenkins_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Azure DevOps'),1,0) AS competitors_azure_devops_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'SVN'),1,0) AS competitors_svn_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'BitBucket.Org'),1,0) AS competitors_bitbucket_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Atlassian'),1,0) AS competitors_atlassian_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Perforce'),1,0) AS competitors_perforce_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Visual Studio Team Services'),1,0) AS competitors_visual_studio_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Azure'),1,0) AS competitors_azure_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Amazon Code Commit'),1,0) AS competitors_amazon_code_commit_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'CircleCI'),1,0) AS competitors_circleci_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Bamboo'),1,0) AS competitors_bamboo_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'AWS'),1,0) AS competitors_aws_flag,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_sales_segment, sfdc_opportunity.opportunity_owner_user_segment)
      )                                                     AS report_opportunity_user_segment,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_geo, sfdc_opportunity.opportunity_owner_user_geo)
      ) AS report_opportunity_user_geo,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_region, sfdc_opportunity.opportunity_owner_user_region)
      ) AS report_opportunity_user_region,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_area, sfdc_opportunity.opportunity_owner_user_area)
      ) AS report_opportunity_user_area,
      LOWER(
        CONCAT(
          report_opportunity_user_segment,'-',report_opportunity_user_geo,'-',report_opportunity_user_region,'-',report_opportunity_user_area
        )
      ) AS report_user_segment_geo_region_area,
      COALESCE(sfdc_opportunity.sales_qualified_source, 'Missing sales_qualified_source_name') AS key_sqs,
      LOWER(
        CONCAT(
          report_user_segment_geo_region_area,'-',key_sqs,'-',COALESCE(sfdc_opportunity.order_type, 'Missing order_type_name')
        )
      ) AS report_user_segment_geo_region_area_sqs_ot,
      COALESCE(report_opportunity_user_segment, 'other') AS key_segment,
      COALESCE(deal_group, 'other') AS key_ot,
      COALESCE(report_opportunity_user_segment || '_' || key_sqs, 'other') AS key_segment_sqs,
      COALESCE(report_opportunity_user_segment || '_' || deal_group, 'other') AS key_segment_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo, 'other') AS key_segment_geo,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || key_sqs, 'other') AS key_segment_geo_sqs,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || deal_group, 'other') AS key_segment_geo_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region, 'other') AS key_segment_geo_region,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || key_sqs, 'other') AS key_segment_geo_region_sqs,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || deal_group, 'other') AS key_segment_geo_region_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || report_opportunity_user_area, 'other') AS key_segment_geo_region_area,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || report_opportunity_user_area || '_' || key_sqs, 'other') AS key_segment_geo_region_area_sqs,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || report_opportunity_user_area || '_' || deal_group, 'other') AS key_segment_geo_region_area_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_area, 'other') AS key_segment_geo_area,
      COALESCE(
        report_opportunity_user_segment, 'other'
      ) AS sales_team_cro_level,
      -- This code replicates the reporting structured of FY22, to keep current tools working
      CASE
        WHEN report_opportunity_user_segment = 'large'
          AND report_opportunity_user_geo = 'emea'
          THEN 'large_emea'
        WHEN report_opportunity_user_segment = 'mid-market'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) LIKE '%west%'
          THEN 'mid-market_west'
        WHEN report_opportunity_user_segment = 'mid-market'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) NOT LIKE '%west%'
          THEN 'mid-market_east'
        WHEN report_opportunity_user_segment = 'smb'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) LIKE '%west%'
          THEN 'smb_west'
        WHEN report_opportunity_user_segment = 'smb'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) NOT LIKE '%west%'
          THEN 'smb_east'
        WHEN report_opportunity_user_segment = 'smb'
          AND report_opportunity_user_region = 'latam'
          THEN 'smb_east'
        WHEN (report_opportunity_user_segment IS NULL
          OR report_opportunity_user_region IS NULL)
          THEN 'other'
        WHEN
          CONCAT(report_opportunity_user_segment, '_', report_opportunity_user_region) LIKE '%other%'
          THEN 'other'
        ELSE CONCAT(report_opportunity_user_segment, '_', report_opportunity_user_region)
      END AS sales_team_rd_asm_level,
      COALESCE(
        CONCAT(report_opportunity_user_segment, '_', report_opportunity_user_geo), 'other'
      ) AS sales_team_vp_level,
      COALESCE(
        CONCAT(
          report_opportunity_user_segment,
          '_',
          report_opportunity_user_geo,
          '_',
          report_opportunity_user_region
        ),
        'other'
      ) AS sales_team_avp_rd_level,
      COALESCE(
        CONCAT(
          report_opportunity_user_segment,
          '_',
          report_opportunity_user_geo,
          '_',
          report_opportunity_user_region,
          '_',
          report_opportunity_user_area
        ),
        'other'
      ) AS sales_team_asm_level,
      CASE
        WHEN
          sfdc_opportunity.account_owner_team_stamped IN (
            'Commercial - SMB', 'SMB', 'SMB - US', 'SMB - International'
          )
          THEN 'SMB'
        WHEN
          sfdc_opportunity.account_owner_team_stamped IN (
            'APAC', 'EMEA', 'Channel', 'US West', 'US East', 'Public Sector'
          )
          THEN 'Large'
        WHEN
          sfdc_opportunity.account_owner_team_stamped IN (
            'MM - APAC', 'MM - East', 'MM - EMEA', 'Commercial - MM', 'MM - West', 'MM-EMEA'
          )
          THEN 'Mid-Market'
        ELSE 'SMB'
      END AS account_owner_team_stamped_cro_level,
      CASE
        WHEN sfdc_opportunity.close_date < '2023-02-01'
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01' AND LOWER(sfdc_opportunity.crm_opp_owner_business_unit_stamped) = 'comm'
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_business_unit_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01' AND LOWER(sfdc_opportunity.crm_opp_owner_business_unit_stamped) = 'entg'
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_business_unit_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01'
          AND (sfdc_opportunity.crm_opp_owner_business_unit_stamped IS NOT NULL AND LOWER(sfdc_opportunity.crm_opp_owner_business_unit_stamped) NOT IN ('comm', 'entg')) -- some opps are closed by non-sales reps, so fill in their values completely
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_business_unit_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01' AND sfdc_opportunity.crm_opp_owner_business_unit_stamped IS NULL -- done for data quality issues
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
    END AS dim_crm_opp_owner_stamped_hierarchy_sk

    FROM sfdc_opportunity
    INNER JOIN sfdc_opportunity_stage
      ON sfdc_opportunity.stage_name = sfdc_opportunity_stage.primary_label
    LEFT JOIN quote
      ON sfdc_opportunity.dim_crm_opportunity_id = quote.dim_crm_opportunity_id
    LEFT JOIN linear_attribution_base
      ON sfdc_opportunity.dim_crm_opportunity_id = linear_attribution_base.dim_crm_opportunity_id
    LEFT JOIN campaigns_per_opp
      ON sfdc_opportunity.dim_crm_opportunity_id = campaigns_per_opp.dim_crm_opportunity_id
    LEFT JOIN first_contact
      ON sfdc_opportunity.dim_crm_opportunity_id = first_contact.opportunity_id AND first_contact.row_num = 1
    LEFT JOIN dim_date AS close_date
      ON sfdc_opportunity.close_date = close_date.date_actual
    LEFT JOIN dim_date AS arr_created_date
      ON sfdc_opportunity.iacv_created_date::DATE = arr_created_date.date_actual
    LEFT JOIN dim_date AS subscription_start_date
      ON sfdc_opportunity.subscription_start_date::DATE = subscription_start_date.date_actual
    LEFT JOIN net_iacv_to_net_arr_ratio
      ON sfdc_opportunity.opportunity_owner_user_segment = net_iacv_to_net_arr_ratio.user_segment_stamped
        AND sfdc_opportunity.order_type = net_iacv_to_net_arr_ratio.order_type
    LEFT JOIN sfdc_record_type_source 
      ON sfdc_opportunity.record_type_id = sfdc_record_type_source.record_type_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@michellecooper",
    updated_by="@jngCES",
    created_date="2022-02-23",
    updated_date="2023-06-15"
) }}1b:T175ab,



WITH sfdc_user_roles_source AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_user_roles_source

), net_iacv_to_net_arr_ratio AS (

    SELECT * 
    FROM "PROD".legacy.net_iacv_to_net_arr_ratio

), dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), sfdc_opportunity_stage_source AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_opportunity_stage_source

), sfdc_opportunity_source AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_opportunity_source

), sfdc_opportunity_snapshots_source AS (

    SELECT * 
    FROM "PROD".restricted_safe_legacy.sfdc_opportunity_snapshots_source

), sfdc_opportunity_stage AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_opportunity_stage_source

), sfdc_record_type_source AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_record_type_source

)

, first_contact  AS (

    SELECT
      opportunity_id,                                                             -- opportunity_id
      contact_id                                                                  AS sfdc_contact_id,
      md5(cast(coalesce(cast(contact_id as 
    varchar
), '') as 
    varchar
))                               AS dim_crm_person_id,
      ROW_NUMBER() OVER (PARTITION BY opportunity_id ORDER BY created_date ASC)   AS row_num
    FROM "PREP".sfdc.sfdc_opportunity_contact_role_source

), attribution_touchpoints AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_bizible_attribution_touchpoint_source
    WHERE is_deleted = 'FALSE'

), linear_attribution_base AS ( --the number of attribution touches a given opp has in total
    --linear attribution IACV of an opp / all touches (count_touches) for each opp - weighted by the number of touches in the given bucket (campaign,channel,etc)
    SELECT
     opportunity_id                                         AS dim_crm_opportunity_id,
     COUNT(DISTINCT attribution_touchpoints.touchpoint_id)  AS count_crm_attribution_touchpoints
    FROM  attribution_touchpoints
    GROUP BY 1

), campaigns_per_opp as (

    SELECT
      opportunity_id                                        AS dim_crm_opportunity_id,
      COUNT(DISTINCT attribution_touchpoints.campaign_id)   AS count_campaigns
    FROM attribution_touchpoints
    GROUP BY 1

), snapshot_dates AS (

    SELECT *
    FROM dim_date
    WHERE date_actual::DATE >= '2020-02-01' -- Restricting snapshot model to only have data from this date forward. More information https://gitlab.com/gitlab-data/analytics/-/issues/14418#note_1134521216
      AND date_actual <= CURRENT_DATE

), sfdc_account_snapshot AS (

    SELECT *
    FROM "PROD".restricted_safe_common_prep.prep_crm_account_daily_snapshot
    

       WHERE snapshot_date > (SELECT MAX(snapshot_date) FROM "PROD".restricted_safe_common_prep.prep_crm_opportunity)

    

), sfdc_user_snapshot AS (

    SELECT *
    FROM "PROD".common_prep.prep_crm_user_daily_snapshot
    

    WHERE snapshot_date > (SELECT MAX(snapshot_date) FROM "PROD".restricted_safe_common_prep.prep_crm_opportunity)

    

), sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE account_id IS NOT NULL

), sfdc_user AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_users_source
    WHERE user_id IS NOT NULL

), sfdc_opportunity_snapshot AS (

    SELECT
      sfdc_opportunity_snapshots_source.account_id                                                                  AS dim_crm_account_id,
      sfdc_opportunity_snapshots_source.opportunity_id                                                              AS dim_crm_opportunity_id,
      sfdc_opportunity_snapshots_source.owner_id                                                                    AS dim_crm_user_id,
      sfdc_opportunity_snapshots_source.parent_opportunity_id                                                       AS dim_parent_crm_opportunity_id,
      sfdc_opportunity_snapshots_source.order_type_stamped                                                          AS order_type,
      sfdc_opportunity_snapshots_source.opportunity_term                                                            AS opportunity_term_base,
      CASE sfdc_opportunity_snapshots_source.sales_qualified_source
    WHEN  'BDR Generated'
      THEN 'SDR Generated'
    WHEN 'Channel Generated'
      THEN 'Partner Generated'
    ELSE sfdc_opportunity_snapshots_source.sales_qualified_source
  END             AS sales_qualified_source,
      sfdc_opportunity_snapshots_source.user_segment_stamped                                                        AS crm_opp_owner_sales_segment_stamped,
      sfdc_opportunity_snapshots_source.user_geo_stamped                                                            AS crm_opp_owner_geo_stamped,
      sfdc_opportunity_snapshots_source.user_region_stamped                                                         AS crm_opp_owner_region_stamped,
      sfdc_opportunity_snapshots_source.user_area_stamped                                                           AS crm_opp_owner_area_stamped,
      sfdc_opportunity_snapshots_source.user_segment_geo_region_area_stamped                                        AS crm_opp_owner_sales_segment_geo_region_area_stamped,
      sfdc_opportunity_snapshots_source.user_business_unit_stamped                                                  AS crm_opp_owner_business_unit_stamped,
      sfdc_opportunity_snapshots_source.created_date::DATE                                                          AS created_date,
      sfdc_opportunity_snapshots_source.sales_accepted_date::DATE                                                   AS sales_accepted_date,
      sfdc_opportunity_snapshots_source.close_date::DATE                                                            AS close_date,
      sfdc_opportunity_snapshots_source.net_arr                                                                     AS raw_net_arr,
      md5(cast(coalesce(cast(sfdc_opportunity_snapshots_source.opportunity_id as 
    varchar
), '') || '-' || coalesce(cast(snapshot_dates.date_id as 
    varchar
), '') as 
    varchar
))   AS crm_opportunity_snapshot_id,
      snapshot_dates.date_id                                                                                        AS snapshot_id,
      snapshot_dates.date_actual                                                                                    AS snapshot_date,
      snapshot_dates.first_day_of_month                                                                             AS snapshot_month,
      snapshot_dates.fiscal_year                                                                                    AS snapshot_fiscal_year,
      snapshot_dates.fiscal_quarter_name_fy                                                                         AS snapshot_fiscal_quarter_name,
      snapshot_dates.first_day_of_fiscal_quarter                                                                    AS snapshot_fiscal_quarter_date,
      snapshot_dates.day_of_fiscal_quarter_normalised                                                               AS snapshot_day_of_fiscal_quarter_normalised,
      snapshot_dates.day_of_fiscal_year_normalised                                                                  AS snapshot_day_of_fiscal_year_normalised,
      sfdc_account_snapshot.crm_account_owner_sales_segment,
      sfdc_account_snapshot.crm_account_owner_geo,
      sfdc_account_snapshot.crm_account_owner_region,
      sfdc_account_snapshot.crm_account_owner_area,
      sfdc_account_snapshot.crm_account_owner_sales_segment_geo_region_area,
      fulfillment_partner.crm_account_name AS fulfillment_partner_account_name,
      fulfillment_partner.partner_track AS fulfillment_partner_partner_track,
      partner_account.crm_account_name AS partner_account_account_name,
      partner_account.partner_track AS partner_account_partner_track,
      sfdc_account_snapshot.is_jihu_account,
      sfdc_account_snapshot.dim_parent_crm_account_id,
      CASE
        WHEN sfdc_opportunity_snapshots_source.stage_name IN ('8-Closed Lost', 'Closed Lost', '9-Unqualified', 
                                                              'Closed Won', '10-Duplicate')
            THEN 0
        ELSE 1
      END                                                                                                         AS is_open,
      CASE
        WHEN sfdc_opportunity_snapshots_source.user_segment_stamped IS NULL
          OR is_open = 1
          THEN sfdc_account_snapshot.crm_account_owner_sales_segment
        ELSE sfdc_opportunity_snapshots_source.user_segment_stamped
      END                                                                                                         AS opportunity_owner_user_segment,
      CASE
        WHEN sfdc_opportunity_snapshots_source.user_geo_stamped IS NULL
          OR is_open = 1
        THEN sfdc_account_snapshot.crm_account_owner_geo
      ELSE sfdc_opportunity_snapshots_source.user_geo_stamped
      END                                                                                                         AS opportunity_owner_user_geo,

      CASE
        WHEN sfdc_opportunity_snapshots_source.user_region_stamped IS NULL
             OR is_open = 1
          THEN sfdc_account_snapshot.crm_account_owner_region
          ELSE sfdc_opportunity_snapshots_source.user_region_stamped
      END                                                                                                         AS opportunity_owner_user_region,

      CASE
        WHEN sfdc_opportunity_snapshots_source.user_area_stamped IS NULL
             OR is_open = 1
          THEN sfdc_account_snapshot.crm_account_owner_area
        ELSE sfdc_opportunity_snapshots_source.user_area_stamped
      END                                                                                                         AS opportunity_owner_user_area,
      sfdc_account_snapshot.crm_account_owner_role                                                                AS opportunity_owner_role,
      sfdc_account_snapshot.crm_account_owner_title                                                               AS opportunity_owner_title,
      sfdc_opportunity_snapshots_source."OPPORTUNITY_NAME",
  sfdc_opportunity_snapshots_source."IS_CLOSED",
  sfdc_opportunity_snapshots_source."DAYS_IN_STAGE",
  sfdc_opportunity_snapshots_source."DEPLOYMENT_PREFERENCE",
  sfdc_opportunity_snapshots_source."GENERATED_SOURCE",
  sfdc_opportunity_snapshots_source."LEAD_SOURCE",
  sfdc_opportunity_snapshots_source."MERGED_OPPORTUNITY_ID",
  sfdc_opportunity_snapshots_source."DUPLICATE_OPPORTUNITY_ID",
  sfdc_opportunity_snapshots_source."ACCOUNT_OWNER",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_OWNER",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_OWNER_MANAGER",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_OWNER_DEPARTMENT",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE_LOOKUP",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE",
  sfdc_opportunity_snapshots_source."ACCOUNT_OWNER_TEAM_STAMPED",
  sfdc_opportunity_snapshots_source."SALES_PATH",
  sfdc_opportunity_snapshots_source."SALES_QUALIFIED_DATE",
  sfdc_opportunity_snapshots_source."IQM_SUBMITTED_BY_ROLE",
  sfdc_opportunity_snapshots_source."SALES_TYPE",
  sfdc_opportunity_snapshots_source."NET_NEW_SOURCE_CATEGORIES",
  sfdc_opportunity_snapshots_source."SOURCE_BUCKETS",
  sfdc_opportunity_snapshots_source."STAGE_NAME",
  sfdc_opportunity_snapshots_source."DEAL_PATH",
  sfdc_opportunity_snapshots_source."ACV",
  sfdc_opportunity_snapshots_source."AMOUNT",
  sfdc_opportunity_snapshots_source."CLOSED_DEALS",
  sfdc_opportunity_snapshots_source."COMPETITORS",
  sfdc_opportunity_snapshots_source."CRITICAL_DEAL_FLAG",
  sfdc_opportunity_snapshots_source."FORECAST_CATEGORY_NAME",
  sfdc_opportunity_snapshots_source."FORECASTED_IACV",
  sfdc_opportunity_snapshots_source."IACV_CREATED_DATE",
  sfdc_opportunity_snapshots_source."INCREMENTAL_ACV",
  sfdc_opportunity_snapshots_source."PRE_COVID_IACV",
  sfdc_opportunity_snapshots_source."INVOICE_NUMBER",
  sfdc_opportunity_snapshots_source."IS_REFUND",
  sfdc_opportunity_snapshots_source."IS_DOWNGRADE",
  sfdc_opportunity_snapshots_source."IS_SWING_DEAL",
  sfdc_opportunity_snapshots_source."IS_EDU_OSS",
  sfdc_opportunity_snapshots_source."IS_PS_OPP",
  sfdc_opportunity_snapshots_source."NET_INCREMENTAL_ACV",
  sfdc_opportunity_snapshots_source."PRIMARY_CAMPAIGN_SOURCE_ID",
  sfdc_opportunity_snapshots_source."PROBABILITY",
  sfdc_opportunity_snapshots_source."PROFESSIONAL_SERVICES_VALUE",
  sfdc_opportunity_snapshots_source."PUSHED_COUNT",
  sfdc_opportunity_snapshots_source."REASON_FOR_LOSS",
  sfdc_opportunity_snapshots_source."REASON_FOR_LOSS_DETAILS",
  sfdc_opportunity_snapshots_source."REFUND_IACV",
  sfdc_opportunity_snapshots_source."DOWNGRADE_IACV",
  sfdc_opportunity_snapshots_source."RENEWAL_ACV",
  sfdc_opportunity_snapshots_source."RENEWAL_AMOUNT",
  sfdc_opportunity_snapshots_source."SALES_QUALIFIED_SOURCE_GROUPED",
  sfdc_opportunity_snapshots_source."SQS_BUCKET_ENGAGEMENT",
  sfdc_opportunity_snapshots_source."SDR_PIPELINE_CONTRIBUTION",
  sfdc_opportunity_snapshots_source."SOLUTIONS_TO_BE_REPLACED",
  sfdc_opportunity_snapshots_source."TECHNICAL_EVALUATION_DATE",
  sfdc_opportunity_snapshots_source."TOTAL_CONTRACT_VALUE",
  sfdc_opportunity_snapshots_source."RECURRING_AMOUNT",
  sfdc_opportunity_snapshots_source."TRUE_UP_AMOUNT",
  sfdc_opportunity_snapshots_source."PROSERV_AMOUNT",
  sfdc_opportunity_snapshots_source."OTHER_NON_RECURRING_AMOUNT",
  sfdc_opportunity_snapshots_source."UPSIDE_IACV",
  sfdc_opportunity_snapshots_source."UPSIDE_SWING_DEAL_IACV",
  sfdc_opportunity_snapshots_source."IS_WEB_PORTAL_PURCHASE",
  sfdc_opportunity_snapshots_source."PARTNER_INITIATED_OPPORTUNITY",
  sfdc_opportunity_snapshots_source."USER_SEGMENT",
  sfdc_opportunity_snapshots_source."SUBSCRIPTION_START_DATE",
  sfdc_opportunity_snapshots_source."SUBSCRIPTION_END_DATE",
  sfdc_opportunity_snapshots_source."TRUE_UP_VALUE",
  sfdc_opportunity_snapshots_source."ORDER_TYPE_LIVE",
  sfdc_opportunity_snapshots_source."ORDER_TYPE_GROUPED",
  sfdc_opportunity_snapshots_source."GROWTH_TYPE",
  sfdc_opportunity_snapshots_source."ARR_BASIS",
  sfdc_opportunity_snapshots_source."ARR",
  sfdc_opportunity_snapshots_source."DAYS_IN_SAO",
  sfdc_opportunity_snapshots_source."NEW_LOGO_COUNT",
  sfdc_opportunity_snapshots_source."USER_SEGMENT_STAMPED",
  sfdc_opportunity_snapshots_source."USER_SEGMENT_STAMPED_GROUPED",
  sfdc_opportunity_snapshots_source."USER_GEO_STAMPED",
  sfdc_opportunity_snapshots_source."USER_REGION_STAMPED",
  sfdc_opportunity_snapshots_source."USER_AREA_STAMPED",
  sfdc_opportunity_snapshots_source."USER_SEGMENT_REGION_STAMPED_GROUPED",
  sfdc_opportunity_snapshots_source."USER_SEGMENT_GEO_REGION_AREA_STAMPED",
  sfdc_opportunity_snapshots_source."CRM_OPP_OWNER_USER_ROLE_TYPE_STAMPED",
  sfdc_opportunity_snapshots_source."USER_BUSINESS_UNIT_STAMPED",
  sfdc_opportunity_snapshots_source."CRM_OPP_OWNER_STAMPED_NAME",
  sfdc_opportunity_snapshots_source."CRM_ACCOUNT_OWNER_STAMPED_NAME",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_STAMPED_NAME",
  sfdc_opportunity_snapshots_source."SAO_CRM_ACCOUNT_OWNER_STAMPED_NAME",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_GROUPED",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_GEO_STAMPED",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_REGION_STAMPED",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_AREA_STAMPED",
  sfdc_opportunity_snapshots_source."SAO_CRM_OPP_OWNER_SEGMENT_REGION_STAMPED_GROUPED",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_CATEGORY",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_HEALTH",
  sfdc_opportunity_snapshots_source."RISK_TYPE",
  sfdc_opportunity_snapshots_source."RISK_REASONS",
  sfdc_opportunity_snapshots_source."TAM_NOTES",
  sfdc_opportunity_snapshots_source."PRIMARY_SOLUTION_ARCHITECT",
  sfdc_opportunity_snapshots_source."PRODUCT_DETAILS",
  sfdc_opportunity_snapshots_source."PRODUCT_CATEGORY",
  sfdc_opportunity_snapshots_source."PRODUCTS_PURCHASED",
  sfdc_opportunity_snapshots_source."OPPORTUNITY_DEAL_SIZE",
  sfdc_opportunity_snapshots_source."PAYMENT_SCHEDULE",
  sfdc_opportunity_snapshots_source."COMP_Y2_IACV",
  sfdc_opportunity_snapshots_source."COMP_NEW_LOGO_OVERRIDE",
  sfdc_opportunity_snapshots_source."IS_PIPELINE_CREATED_ELIGIBLE",
  sfdc_opportunity_snapshots_source."SALES_SEGMENT",
  sfdc_opportunity_snapshots_source."PARENT_SEGMENT",
  sfdc_opportunity_snapshots_source."DAYS_IN_0_PENDING_ACCEPTANCE",
  sfdc_opportunity_snapshots_source."DAYS_IN_1_DISCOVERY",
  sfdc_opportunity_snapshots_source."DAYS_IN_2_SCOPING",
  sfdc_opportunity_snapshots_source."DAYS_IN_3_TECHNICAL_EVALUATION",
  sfdc_opportunity_snapshots_source."DAYS_IN_4_PROPOSAL",
  sfdc_opportunity_snapshots_source."DAYS_IN_5_NEGOTIATING",
  sfdc_opportunity_snapshots_source."STAGE_0_PENDING_ACCEPTANCE_DATE",
  sfdc_opportunity_snapshots_source."STAGE_1_DISCOVERY_DATE",
  sfdc_opportunity_snapshots_source."STAGE_2_SCOPING_DATE",
  sfdc_opportunity_snapshots_source."STAGE_3_TECHNICAL_EVALUATION_DATE",
  sfdc_opportunity_snapshots_source."STAGE_4_PROPOSAL_DATE",
  sfdc_opportunity_snapshots_source."STAGE_5_NEGOTIATING_DATE",
  sfdc_opportunity_snapshots_source."STAGE_6_AWAITING_SIGNATURE_DATE",
  sfdc_opportunity_snapshots_source."STAGE_6_CLOSED_WON_DATE",
  sfdc_opportunity_snapshots_source."STAGE_6_CLOSED_LOST_DATE",
  sfdc_opportunity_snapshots_source."DIVISION_SALES_SEGMENT_STAMPED",
  sfdc_opportunity_snapshots_source."DR_PARTNER_DEAL_TYPE",
  sfdc_opportunity_snapshots_source."DR_PARTNER_ENGAGEMENT",
  sfdc_opportunity_snapshots_source."DR_DEAL_ID",
  sfdc_opportunity_snapshots_source."DR_PRIMARY_REGISTRATION",
  sfdc_opportunity_snapshots_source."CHANNEL_TYPE",
  sfdc_opportunity_snapshots_source."PARTNER_ACCOUNT",
  sfdc_opportunity_snapshots_source."DR_STATUS",
  sfdc_opportunity_snapshots_source."DISTRIBUTOR",
  sfdc_opportunity_snapshots_source."INFLUENCE_PARTNER",
  sfdc_opportunity_snapshots_source."IS_FOCUS_PARTNER",
  sfdc_opportunity_snapshots_source."FULFILLMENT_PARTNER",
  sfdc_opportunity_snapshots_source."PLATFORM_PARTNER",
  sfdc_opportunity_snapshots_source."PARTNER_TRACK",
  sfdc_opportunity_snapshots_source."RESALE_PARTNER_TRACK",
  sfdc_opportunity_snapshots_source."IS_PUBLIC_SECTOR_OPP",
  sfdc_opportunity_snapshots_source."IS_REGISTRATION_FROM_PORTAL",
  sfdc_opportunity_snapshots_source."CALCULATED_DISCOUNT",
  sfdc_opportunity_snapshots_source."PARTNER_DISCOUNT",
  sfdc_opportunity_snapshots_source."PARTNER_DISCOUNT_CALC",
  sfdc_opportunity_snapshots_source."COMP_CHANNEL_NEUTRAL",
  sfdc_opportunity_snapshots_source."CP_CHAMPION",
  sfdc_opportunity_snapshots_source."CP_CLOSE_PLAN",
  sfdc_opportunity_snapshots_source."CP_COMPETITION",
  sfdc_opportunity_snapshots_source."CP_DECISION_CRITERIA",
  sfdc_opportunity_snapshots_source."CP_DECISION_PROCESS",
  sfdc_opportunity_snapshots_source."CP_ECONOMIC_BUYER",
  sfdc_opportunity_snapshots_source."CP_HELP",
  sfdc_opportunity_snapshots_source."CP_IDENTIFY_PAIN",
  sfdc_opportunity_snapshots_source."CP_METRICS",
  sfdc_opportunity_snapshots_source."CP_PARTNER",
  sfdc_opportunity_snapshots_source."CP_PAPER_PROCESS",
  sfdc_opportunity_snapshots_source."CP_REVIEW_NOTES",
  sfdc_opportunity_snapshots_source."CP_RISKS",
  sfdc_opportunity_snapshots_source."CP_USE_CASES",
  sfdc_opportunity_snapshots_source."CP_VALUE_DRIVER",
  sfdc_opportunity_snapshots_source."CP_WHY_DO_ANYTHING_AT_ALL",
  sfdc_opportunity_snapshots_source."CP_WHY_GITLAB",
  sfdc_opportunity_snapshots_source."CP_WHY_NOW",
  sfdc_opportunity_snapshots_source."CP_SCORE",
  sfdc_opportunity_snapshots_source."SA_TECH_EVALUATION_CLOSE_STATUS",
  sfdc_opportunity_snapshots_source."SA_TECH_EVALUATION_END_DATE",
  sfdc_opportunity_snapshots_source."SA_TECH_EVALUATION_START_DATE",
  sfdc_opportunity_snapshots_source."FPA_MASTER_BOOKINGS_FLAG",
  sfdc_opportunity_snapshots_source."DOWNGRADE_REASON",
  sfdc_opportunity_snapshots_source."SSP_ID",
  sfdc_opportunity_snapshots_source."GA_CLIENT_ID",
  sfdc_opportunity_snapshots_source."VSA_READOUT",
  sfdc_opportunity_snapshots_source."VSA_START_DATE_NET_ARR",
  sfdc_opportunity_snapshots_source."VSA_START_DATE",
  sfdc_opportunity_snapshots_source."VSA_URL",
  sfdc_opportunity_snapshots_source."VSA_STATUS",
  sfdc_opportunity_snapshots_source."VSA_END_DATE",
  sfdc_opportunity_snapshots_source."MILITARY_INVASION_COMMENTS",
  sfdc_opportunity_snapshots_source."PRE_MILITARY_INVASION_ARR",
  sfdc_opportunity_snapshots_source."MILITARY_INVASION_RISK_SCALE",
  sfdc_opportunity_snapshots_source."DOWNGRADE_DETAILS",
  sfdc_opportunity_snapshots_source."WON_ARR_BASIS_FOR_CLARI",
  sfdc_opportunity_snapshots_source."ARR_BASIS_FOR_CLARI",
  sfdc_opportunity_snapshots_source."FORECASTED_CHURN_FOR_CLARI",
  sfdc_opportunity_snapshots_source."OVERRIDE_ARR_BASIS_CLARI",
  sfdc_opportunity_snapshots_source."INTENDED_PRODUCT_TIER",
  sfdc_opportunity_snapshots_source."_LAST_DBT_RUN",
  sfdc_opportunity_snapshots_source."DAYS_SINCE_LAST_ACTIVITY",
  sfdc_opportunity_snapshots_source."IS_DELETED",
  sfdc_opportunity_snapshots_source."LAST_ACTIVITY_DATE",
  sfdc_opportunity_snapshots_source."SALES_LAST_ACTIVITY_DATE",
  sfdc_opportunity_snapshots_source."RECORD_TYPE_ID",
  sfdc_opportunity_snapshots_source."DBT_SCD_ID",
  sfdc_opportunity_snapshots_source."DBT_VALID_FROM",
  sfdc_opportunity_snapshots_source."DBT_VALID_TO",
      0 AS is_live
    FROM sfdc_opportunity_snapshots_source
    INNER JOIN snapshot_dates
      ON sfdc_opportunity_snapshots_source.dbt_valid_from::DATE <= snapshot_dates.date_actual
        AND (sfdc_opportunity_snapshots_source.dbt_valid_to::DATE > snapshot_dates.date_actual OR sfdc_opportunity_snapshots_source.dbt_valid_to IS NULL)
    LEFT JOIN sfdc_account_snapshot AS fulfillment_partner
      ON sfdc_opportunity_snapshots_source.fulfillment_partner = fulfillment_partner.dim_crm_account_id
        AND snapshot_dates.date_id = fulfillment_partner.snapshot_id
    LEFT JOIN sfdc_account_snapshot AS partner_account
      ON sfdc_opportunity_snapshots_source.partner_account = partner_account.dim_crm_account_id
        AND snapshot_dates.date_id = partner_account.snapshot_id
    LEFT JOIN sfdc_account_snapshot
      ON sfdc_opportunity_snapshots_source.account_id = sfdc_account_snapshot.dim_crm_account_id
        AND snapshot_dates.date_id = sfdc_account_snapshot.snapshot_id
    WHERE sfdc_opportunity_snapshots_source.account_id IS NOT NULL
      AND sfdc_opportunity_snapshots_source.is_deleted = FALSE
     

       AND snapshot_dates.date_actual > (SELECT MAX(snapshot_date) FROM "PROD".restricted_safe_common_prep.prep_crm_opportunity)

    

    QUALIFY ROW_NUMBER() OVER (
    PARTITION BY 
        snapshot_dates.date_id, 
        sfdc_opportunity_snapshots_source.opportunity_id 
    ORDER BY sfdc_opportunity_snapshots_source.dbt_valid_from DESC
    ) = 1

), sfdc_opportunity_live AS (

    SELECT
      sfdc_opportunity_source.account_id                                                                    AS dim_crm_account_id,
      sfdc_opportunity_source.opportunity_id                                                                AS dim_crm_opportunity_id,
      sfdc_opportunity_source.owner_id                                                                      AS dim_crm_user_id,
      sfdc_opportunity_source.parent_opportunity_id                                                         AS dim_parent_crm_opportunity_id,
      sfdc_opportunity_source.order_type_stamped                                                            AS order_type,
      sfdc_opportunity_source.opportunity_term                                                              AS opportunity_term_base,
      CASE sfdc_opportunity_source.sales_qualified_source
    WHEN  'BDR Generated'
      THEN 'SDR Generated'
    WHEN 'Channel Generated'
      THEN 'Partner Generated'
    ELSE sfdc_opportunity_source.sales_qualified_source
  END               AS sales_qualified_source,
      sfdc_opportunity_source.user_segment_stamped                                                          AS crm_opp_owner_sales_segment_stamped,
      sfdc_opportunity_source.user_geo_stamped                                                              AS crm_opp_owner_geo_stamped,
      sfdc_opportunity_source.user_region_stamped                                                           AS crm_opp_owner_region_stamped,
      sfdc_opportunity_source.user_area_stamped                                                             AS crm_opp_owner_area_stamped,
      sfdc_opportunity_source.user_segment_geo_region_area_stamped                                          AS crm_opp_owner_sales_segment_geo_region_area_stamped,
      sfdc_opportunity_source.user_business_unit_stamped                                                    AS crm_opp_owner_business_unit_stamped,
      sfdc_opportunity_source.created_date::DATE                                                            AS created_date,
      sfdc_opportunity_source.sales_accepted_date::DATE                                                     AS sales_accepted_date,
      sfdc_opportunity_source.close_date::DATE                                                              AS close_date,
      sfdc_opportunity_source.net_arr                                                                       AS raw_net_arr,
      md5(cast(coalesce(cast(sfdc_opportunity_source.opportunity_id as 
    varchar
), '') || '-' || coalesce(cast('99991231' as 
    varchar
), '') as 
    varchar
))                 AS crm_opportunity_snapshot_id,
      '99991231'                                                                                            AS snapshot_id,
      snapshot_dates.date_actual                                                                            AS snapshot_date,
      snapshot_dates.first_day_of_month                                                                     AS snapshot_month,
      snapshot_dates.fiscal_year                                                                            AS snapshot_fiscal_year,
      snapshot_dates.fiscal_quarter_name_fy                                                                 AS snapshot_fiscal_quarter_name,
      snapshot_dates.first_day_of_fiscal_quarter                                                            AS snapshot_fiscal_quarter_date,
      snapshot_dates.day_of_fiscal_quarter_normalised                                                       AS snapshot_day_of_fiscal_quarter_normalised,
      snapshot_dates.day_of_fiscal_year_normalised                                                          AS snapshot_day_of_fiscal_year_normalised,
      account_owner.user_segment                                                                            AS crm_account_owner_sales_segment_segment,
      account_owner.user_geo                                                                                AS crm_account_owner_geo,
      account_owner.user_region                                                                             AS crm_account_owner_region,
      account_owner.user_area                                                                               AS crm_account_owner_area,
      account_owner.user_segment_geo_region_area                                                            AS crm_account_owner_sales_segment_geo_region_area,
      fulfillment_partner.account_name                                                                      AS fulfillment_partner_account_name,
      fulfillment_partner.partner_track                                                                     AS fulfillment_partner_partner_track,
      partner_account.account_name                                                                          AS partner_account_account_name,
      partner_account.partner_track                                                                         AS partner_account_partner_track,
      sfdc_account.is_jihu_account,
      sfdc_account.ultimate_parent_account_id                                                               AS dim_parent_crm_account_id,
      CASE
        WHEN sfdc_opportunity_source.stage_name IN ('8-Closed Lost', 'Closed Lost', '9-Unqualified', 
                                                    'Closed Won', '10-Duplicate')
            THEN 0
        ELSE 1
      END                                                                                                   AS is_open,
      CASE
        WHEN sfdc_opportunity_source.user_segment_stamped IS NULL
          OR is_open = 1
          THEN account_owner.user_segment
        ELSE sfdc_opportunity_source.user_segment_stamped
      END                                                                                                   AS opportunity_owner_user_segment,
      CASE
        WHEN sfdc_opportunity_source.user_geo_stamped IS NULL
          OR is_open = 1
        THEN account_owner.user_geo
      ELSE sfdc_opportunity_source.user_geo_stamped
      END                                                                                                   AS opportunity_owner_user_geo,

      CASE
        WHEN sfdc_opportunity_source.user_region_stamped IS NULL
             OR is_open = 1
          THEN account_owner.user_region
          ELSE sfdc_opportunity_source.user_region_stamped
      END                                                                                                   AS opportunity_owner_user_region,

      CASE
        WHEN sfdc_opportunity_source.user_area_stamped IS NULL
             OR is_open = 1
          THEN account_owner.user_area
        ELSE sfdc_opportunity_source.user_area_stamped
      END                                                                                                   AS opportunity_owner_user_area,
      sfdc_user_roles_source.name                                                                           AS opportunity_owner_role,
      account_owner.title                                                                                   AS opportunity_owner_title,
      sfdc_opportunity_source."OPPORTUNITY_NAME",
  sfdc_opportunity_source."IS_CLOSED",
  sfdc_opportunity_source."DAYS_IN_STAGE",
  sfdc_opportunity_source."DEPLOYMENT_PREFERENCE",
  sfdc_opportunity_source."GENERATED_SOURCE",
  sfdc_opportunity_source."LEAD_SOURCE",
  sfdc_opportunity_source."MERGED_OPPORTUNITY_ID",
  sfdc_opportunity_source."DUPLICATE_OPPORTUNITY_ID",
  sfdc_opportunity_source."ACCOUNT_OWNER",
  sfdc_opportunity_source."OPPORTUNITY_OWNER",
  sfdc_opportunity_source."OPPORTUNITY_OWNER_MANAGER",
  sfdc_opportunity_source."OPPORTUNITY_OWNER_DEPARTMENT",
  sfdc_opportunity_source."OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE",
  sfdc_opportunity_source."OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE",
  sfdc_opportunity_source."OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE_LOOKUP",
  sfdc_opportunity_source."OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE",
  sfdc_opportunity_source."ACCOUNT_OWNER_TEAM_STAMPED",
  sfdc_opportunity_source."SALES_PATH",
  sfdc_opportunity_source."SALES_QUALIFIED_DATE",
  sfdc_opportunity_source."IQM_SUBMITTED_BY_ROLE",
  sfdc_opportunity_source."SALES_TYPE",
  sfdc_opportunity_source."NET_NEW_SOURCE_CATEGORIES",
  sfdc_opportunity_source."SOURCE_BUCKETS",
  sfdc_opportunity_source."STAGE_NAME",
  sfdc_opportunity_source."DEAL_PATH",
  sfdc_opportunity_source."ACV",
  sfdc_opportunity_source."AMOUNT",
  sfdc_opportunity_source."CLOSED_DEALS",
  sfdc_opportunity_source."COMPETITORS",
  sfdc_opportunity_source."CRITICAL_DEAL_FLAG",
  sfdc_opportunity_source."FORECAST_CATEGORY_NAME",
  sfdc_opportunity_source."FORECASTED_IACV",
  sfdc_opportunity_source."IACV_CREATED_DATE",
  sfdc_opportunity_source."INCREMENTAL_ACV",
  sfdc_opportunity_source."PRE_COVID_IACV",
  sfdc_opportunity_source."INVOICE_NUMBER",
  sfdc_opportunity_source."IS_REFUND",
  sfdc_opportunity_source."IS_DOWNGRADE",
  sfdc_opportunity_source."IS_SWING_DEAL",
  sfdc_opportunity_source."IS_EDU_OSS",
  sfdc_opportunity_source."IS_PS_OPP",
  sfdc_opportunity_source."NET_INCREMENTAL_ACV",
  sfdc_opportunity_source."PRIMARY_CAMPAIGN_SOURCE_ID",
  sfdc_opportunity_source."PROBABILITY",
  sfdc_opportunity_source."PROFESSIONAL_SERVICES_VALUE",
  sfdc_opportunity_source."PUSHED_COUNT",
  sfdc_opportunity_source."REASON_FOR_LOSS",
  sfdc_opportunity_source."REASON_FOR_LOSS_DETAILS",
  sfdc_opportunity_source."REFUND_IACV",
  sfdc_opportunity_source."DOWNGRADE_IACV",
  sfdc_opportunity_source."RENEWAL_ACV",
  sfdc_opportunity_source."RENEWAL_AMOUNT",
  sfdc_opportunity_source."SALES_QUALIFIED_SOURCE_GROUPED",
  sfdc_opportunity_source."SQS_BUCKET_ENGAGEMENT",
  sfdc_opportunity_source."SDR_PIPELINE_CONTRIBUTION",
  sfdc_opportunity_source."SOLUTIONS_TO_BE_REPLACED",
  sfdc_opportunity_source."TECHNICAL_EVALUATION_DATE",
  sfdc_opportunity_source."TOTAL_CONTRACT_VALUE",
  sfdc_opportunity_source."RECURRING_AMOUNT",
  sfdc_opportunity_source."TRUE_UP_AMOUNT",
  sfdc_opportunity_source."PROSERV_AMOUNT",
  sfdc_opportunity_source."OTHER_NON_RECURRING_AMOUNT",
  sfdc_opportunity_source."UPSIDE_IACV",
  sfdc_opportunity_source."UPSIDE_SWING_DEAL_IACV",
  sfdc_opportunity_source."IS_WEB_PORTAL_PURCHASE",
  sfdc_opportunity_source."PARTNER_INITIATED_OPPORTUNITY",
  sfdc_opportunity_source."USER_SEGMENT",
  sfdc_opportunity_source."SUBSCRIPTION_START_DATE",
  sfdc_opportunity_source."SUBSCRIPTION_END_DATE",
  sfdc_opportunity_source."TRUE_UP_VALUE",
  sfdc_opportunity_source."ORDER_TYPE_LIVE",
  sfdc_opportunity_source."ORDER_TYPE_GROUPED",
  sfdc_opportunity_source."GROWTH_TYPE",
  sfdc_opportunity_source."ARR_BASIS",
  sfdc_opportunity_source."ARR",
  sfdc_opportunity_source."DAYS_IN_SAO",
  sfdc_opportunity_source."NEW_LOGO_COUNT",
  sfdc_opportunity_source."USER_SEGMENT_STAMPED",
  sfdc_opportunity_source."USER_SEGMENT_STAMPED_GROUPED",
  sfdc_opportunity_source."USER_GEO_STAMPED",
  sfdc_opportunity_source."USER_REGION_STAMPED",
  sfdc_opportunity_source."USER_AREA_STAMPED",
  sfdc_opportunity_source."USER_SEGMENT_REGION_STAMPED_GROUPED",
  sfdc_opportunity_source."USER_SEGMENT_GEO_REGION_AREA_STAMPED",
  sfdc_opportunity_source."CRM_OPP_OWNER_USER_ROLE_TYPE_STAMPED",
  sfdc_opportunity_source."USER_BUSINESS_UNIT_STAMPED",
  sfdc_opportunity_source."CRM_OPP_OWNER_STAMPED_NAME",
  sfdc_opportunity_source."CRM_ACCOUNT_OWNER_STAMPED_NAME",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_STAMPED_NAME",
  sfdc_opportunity_source."SAO_CRM_ACCOUNT_OWNER_STAMPED_NAME",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_GROUPED",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_GEO_STAMPED",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_REGION_STAMPED",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_AREA_STAMPED",
  sfdc_opportunity_source."SAO_CRM_OPP_OWNER_SEGMENT_REGION_STAMPED_GROUPED",
  sfdc_opportunity_source."OPPORTUNITY_CATEGORY",
  sfdc_opportunity_source."OPPORTUNITY_HEALTH",
  sfdc_opportunity_source."RISK_TYPE",
  sfdc_opportunity_source."RISK_REASONS",
  sfdc_opportunity_source."TAM_NOTES",
  sfdc_opportunity_source."PRIMARY_SOLUTION_ARCHITECT",
  sfdc_opportunity_source."PRODUCT_DETAILS",
  sfdc_opportunity_source."PRODUCT_CATEGORY",
  sfdc_opportunity_source."PRODUCTS_PURCHASED",
  sfdc_opportunity_source."OPPORTUNITY_DEAL_SIZE",
  sfdc_opportunity_source."PAYMENT_SCHEDULE",
  sfdc_opportunity_source."COMP_Y2_IACV",
  sfdc_opportunity_source."COMP_NEW_LOGO_OVERRIDE",
  sfdc_opportunity_source."IS_PIPELINE_CREATED_ELIGIBLE",
  sfdc_opportunity_source."SALES_SEGMENT",
  sfdc_opportunity_source."PARENT_SEGMENT",
  sfdc_opportunity_source."DAYS_IN_0_PENDING_ACCEPTANCE",
  sfdc_opportunity_source."DAYS_IN_1_DISCOVERY",
  sfdc_opportunity_source."DAYS_IN_2_SCOPING",
  sfdc_opportunity_source."DAYS_IN_3_TECHNICAL_EVALUATION",
  sfdc_opportunity_source."DAYS_IN_4_PROPOSAL",
  sfdc_opportunity_source."DAYS_IN_5_NEGOTIATING",
  sfdc_opportunity_source."STAGE_0_PENDING_ACCEPTANCE_DATE",
  sfdc_opportunity_source."STAGE_1_DISCOVERY_DATE",
  sfdc_opportunity_source."STAGE_2_SCOPING_DATE",
  sfdc_opportunity_source."STAGE_3_TECHNICAL_EVALUATION_DATE",
  sfdc_opportunity_source."STAGE_4_PROPOSAL_DATE",
  sfdc_opportunity_source."STAGE_5_NEGOTIATING_DATE",
  sfdc_opportunity_source."STAGE_6_AWAITING_SIGNATURE_DATE",
  sfdc_opportunity_source."STAGE_6_CLOSED_WON_DATE",
  sfdc_opportunity_source."STAGE_6_CLOSED_LOST_DATE",
  sfdc_opportunity_source."DIVISION_SALES_SEGMENT_STAMPED",
  sfdc_opportunity_source."DR_PARTNER_DEAL_TYPE",
  sfdc_opportunity_source."DR_PARTNER_ENGAGEMENT",
  sfdc_opportunity_source."DR_DEAL_ID",
  sfdc_opportunity_source."DR_PRIMARY_REGISTRATION",
  sfdc_opportunity_source."CHANNEL_TYPE",
  sfdc_opportunity_source."PARTNER_ACCOUNT",
  sfdc_opportunity_source."DR_STATUS",
  sfdc_opportunity_source."DISTRIBUTOR",
  sfdc_opportunity_source."INFLUENCE_PARTNER",
  sfdc_opportunity_source."IS_FOCUS_PARTNER",
  sfdc_opportunity_source."FULFILLMENT_PARTNER",
  sfdc_opportunity_source."PLATFORM_PARTNER",
  sfdc_opportunity_source."PARTNER_TRACK",
  sfdc_opportunity_source."RESALE_PARTNER_TRACK",
  sfdc_opportunity_source."IS_PUBLIC_SECTOR_OPP",
  sfdc_opportunity_source."IS_REGISTRATION_FROM_PORTAL",
  sfdc_opportunity_source."CALCULATED_DISCOUNT",
  sfdc_opportunity_source."PARTNER_DISCOUNT",
  sfdc_opportunity_source."PARTNER_DISCOUNT_CALC",
  sfdc_opportunity_source."COMP_CHANNEL_NEUTRAL",
  sfdc_opportunity_source."CP_CHAMPION",
  sfdc_opportunity_source."CP_CLOSE_PLAN",
  sfdc_opportunity_source."CP_COMPETITION",
  sfdc_opportunity_source."CP_DECISION_CRITERIA",
  sfdc_opportunity_source."CP_DECISION_PROCESS",
  sfdc_opportunity_source."CP_ECONOMIC_BUYER",
  sfdc_opportunity_source."CP_HELP",
  sfdc_opportunity_source."CP_IDENTIFY_PAIN",
  sfdc_opportunity_source."CP_METRICS",
  sfdc_opportunity_source."CP_PARTNER",
  sfdc_opportunity_source."CP_PAPER_PROCESS",
  sfdc_opportunity_source."CP_REVIEW_NOTES",
  sfdc_opportunity_source."CP_RISKS",
  sfdc_opportunity_source."CP_USE_CASES",
  sfdc_opportunity_source."CP_VALUE_DRIVER",
  sfdc_opportunity_source."CP_WHY_DO_ANYTHING_AT_ALL",
  sfdc_opportunity_source."CP_WHY_GITLAB",
  sfdc_opportunity_source."CP_WHY_NOW",
  sfdc_opportunity_source."CP_SCORE",
  sfdc_opportunity_source."SA_TECH_EVALUATION_CLOSE_STATUS",
  sfdc_opportunity_source."SA_TECH_EVALUATION_END_DATE",
  sfdc_opportunity_source."SA_TECH_EVALUATION_START_DATE",
  sfdc_opportunity_source."FPA_MASTER_BOOKINGS_FLAG",
  sfdc_opportunity_source."DOWNGRADE_REASON",
  sfdc_opportunity_source."SSP_ID",
  sfdc_opportunity_source."GA_CLIENT_ID",
  sfdc_opportunity_source."VSA_READOUT",
  sfdc_opportunity_source."VSA_START_DATE_NET_ARR",
  sfdc_opportunity_source."VSA_START_DATE",
  sfdc_opportunity_source."VSA_URL",
  sfdc_opportunity_source."VSA_STATUS",
  sfdc_opportunity_source."VSA_END_DATE",
  sfdc_opportunity_source."MILITARY_INVASION_COMMENTS",
  sfdc_opportunity_source."PRE_MILITARY_INVASION_ARR",
  sfdc_opportunity_source."MILITARY_INVASION_RISK_SCALE",
  sfdc_opportunity_source."DOWNGRADE_DETAILS",
  sfdc_opportunity_source."WON_ARR_BASIS_FOR_CLARI",
  sfdc_opportunity_source."ARR_BASIS_FOR_CLARI",
  sfdc_opportunity_source."FORECASTED_CHURN_FOR_CLARI",
  sfdc_opportunity_source."OVERRIDE_ARR_BASIS_CLARI",
  sfdc_opportunity_source."INTENDED_PRODUCT_TIER",
  sfdc_opportunity_source."_LAST_DBT_RUN",
  sfdc_opportunity_source."DAYS_SINCE_LAST_ACTIVITY",
  sfdc_opportunity_source."IS_DELETED",
  sfdc_opportunity_source."LAST_ACTIVITY_DATE",
  sfdc_opportunity_source."SALES_LAST_ACTIVITY_DATE",
  sfdc_opportunity_source."RECORD_TYPE_ID",
      NULL                                                                                                  AS dbt_scd_id,
      CURRENT_DATE()                                                                                        AS dbt_valid_from,
      CURRENT_DATE()                                                                                        AS dbt_valid_to,
      1                                                                                                     AS is_live
    FROM sfdc_opportunity_source
    LEFT JOIN snapshot_dates
      ON CURRENT_DATE() = snapshot_dates.date_actual
    LEFT JOIN sfdc_account AS fulfillment_partner
      ON sfdc_opportunity_source.fulfillment_partner = fulfillment_partner.account_id
    LEFT JOIN sfdc_account AS partner_account
      ON sfdc_opportunity_source.partner_account = partner_account.account_id
    LEFT JOIN sfdc_account
      ON sfdc_opportunity_source.account_id= sfdc_account.account_id
    LEFT JOIN sfdc_user AS account_owner
      ON sfdc_account.owner_id = account_owner.user_id
    LEFT JOIN sfdc_user_roles_source
      ON account_owner.user_role_id = sfdc_user_roles_source.id
    WHERE sfdc_opportunity_source.account_id IS NOT NULL
      AND sfdc_opportunity_source.is_deleted = FALSE

), sfdc_opportunity AS (

    SELECT *
    FROM sfdc_opportunity_snapshot

    UNION ALL 

    SELECT * 
    FROM sfdc_opportunity_live

), sfdc_zqu_quote_source AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_zqu_quote_source
    WHERE is_deleted = FALSE

), quote AS (

    SELECT DISTINCT
      sfdc_zqu_quote_source.zqu__opportunity                AS dim_crm_opportunity_id,
      sfdc_zqu_quote_source.zqu_quote_id                    AS dim_quote_id,
      sfdc_zqu_quote_source.zqu__start_date::DATE           AS quote_start_date,
      (ROW_NUMBER() OVER (PARTITION BY sfdc_zqu_quote_source.zqu__opportunity ORDER BY sfdc_zqu_quote_source.created_date DESC))
                                                            AS record_number
    FROM sfdc_zqu_quote_source
    INNER JOIN sfdc_opportunity
      ON sfdc_zqu_quote_source.zqu__opportunity = sfdc_opportunity.dim_crm_opportunity_id
    WHERE stage_name IN ('Closed Won', '8-Closed Lost')
      AND zqu__primary = TRUE
    QUALIFY record_number = 1

), final AS (

    SELECT
      -- opportunity information
      sfdc_opportunity.*,
      sfdc_opportunity.crm_opportunity_snapshot_id||'-'||sfdc_opportunity.is_live                  AS primary_key,

      -- dates & date ids
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.created_date::DATE,'YYYYMMDD'),'99999999')

                                          AS created_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.sales_accepted_date::DATE,'YYYYMMDD'),'99999999')

                                   AS sales_accepted_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.close_date::DATE,'YYYYMMDD'),'99999999')

                                            AS close_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_0_pending_acceptance_date::DATE,'YYYYMMDD'),'99999999')

                       AS stage_0_pending_acceptance_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_1_discovery_date::DATE,'YYYYMMDD'),'99999999')

                                AS stage_1_discovery_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_2_scoping_date::DATE,'YYYYMMDD'),'99999999')

                                  AS stage_2_scoping_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_3_technical_evaluation_date::DATE,'YYYYMMDD'),'99999999')

                     AS stage_3_technical_evaluation_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_4_proposal_date::DATE,'YYYYMMDD'),'99999999')

                                 AS stage_4_proposal_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_5_negotiating_date::DATE,'YYYYMMDD'),'99999999')

                              AS stage_5_negotiating_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_6_awaiting_signature_date::DATE,'YYYYMMDD'),'99999999')

                       AS stage_6_awaiting_signature_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_6_closed_won_date::DATE,'YYYYMMDD'),'99999999')

                               AS stage_6_closed_won_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.stage_6_closed_lost_date::DATE,'YYYYMMDD'),'99999999')

                              AS stage_6_closed_lost_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.technical_evaluation_date::DATE,'YYYYMMDD'),'99999999')

                             AS technical_evaluation_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.last_activity_date::DATE,'YYYYMMDD'),'99999999')

                                    AS last_activity_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.sales_last_activity_date::DATE,'YYYYMMDD'),'99999999')

                              AS sales_last_activity_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.subscription_start_date::DATE,'YYYYMMDD'),'99999999')

                               AS subscription_start_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.subscription_end_date::DATE,'YYYYMMDD'),'99999999')

                                 AS subscription_end_date_id,
      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.sales_qualified_date::DATE,'YYYYMMDD'),'99999999')

                                  AS sales_qualified_date_id,

      close_date.first_day_of_fiscal_quarter                                                      AS close_fiscal_quarter_date,
      90 - DATEDIFF(DAY, sfdc_opportunity.snapshot_date, close_date.last_day_of_fiscal_quarter)   AS close_day_of_fiscal_quarter_normalised,
      -- The fiscal year has to be created from scratch instead of joining to the date model because of sales practices which put close dates out 100+ years in the future
      CASE 
        WHEN DATE_PART('month', sfdc_opportunity.close_date) < 2
          THEN DATE_PART('year', sfdc_opportunity.close_date)
        ELSE (DATE_PART('year', sfdc_opportunity.close_date)+1) 
      END                                                                                         AS close_fiscal_year,

      

  TO_NUMBER(TO_CHAR(sfdc_opportunity.iacv_created_date::DATE,'YYYYMMDD'),'99999999')

                                      AS arr_created_date_id,
      sfdc_opportunity.iacv_created_date                                                          AS arr_created_date,
      arr_created_date.fiscal_quarter_name_fy                                                     AS arr_created_fiscal_quarter_name,
      arr_created_date.first_day_of_fiscal_quarter                                                AS arr_created_fiscal_quarter_date,

      subscription_start_date.fiscal_quarter_name_fy                                              AS subscription_start_date_fiscal_quarter_name,
      subscription_start_date.first_day_of_fiscal_quarter                                         AS subscription_start_date_fiscal_quarter_date,

      COALESCE(net_iacv_to_net_arr_ratio.ratio_net_iacv_to_net_arr,0)                             AS segment_order_type_iacv_to_net_arr_ratio,

      -- net arr
      CASE
        WHEN sfdc_opportunity_stage.is_won = 1 -- only consider won deals
          AND sfdc_opportunity.opportunity_category <> 'Contract Reset' -- contract resets have a special way of calculating net iacv
          AND COALESCE(sfdc_opportunity.raw_net_arr,0) <> 0
          AND COALESCE(sfdc_opportunity.net_incremental_acv,0) <> 0
            THEN COALESCE(sfdc_opportunity.raw_net_arr / sfdc_opportunity.net_incremental_acv,0)
        ELSE NULL
      END                                                                     AS opportunity_based_iacv_to_net_arr_ratio,
      -- If there is no opportunity, use a default table ratio
      -- I am faking that using the upper CTE, that should be replaced by the official table
      -- calculated net_arr
      -- uses ratios to estimate the net_arr based on iacv if open or net_iacv if closed
      -- if there is an opportunity based ratio, use that, if not, use default from segment / order type
      -- NUANCE: Lost deals might not have net_incremental_acv populated, so we must rely on iacv
      -- Using opty ratio for open deals doesn't seem to work well
      CASE
        WHEN sfdc_opportunity.stage_name NOT IN ('8-Closed Lost', '9-Unqualified', 'Closed Won', '10-Duplicate')  -- OPEN DEAL
            THEN COALESCE(sfdc_opportunity.incremental_acv,0) * COALESCE(segment_order_type_iacv_to_net_arr_ratio,0)
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost')                       -- CLOSED LOST DEAL and no Net IACV
          AND COALESCE(sfdc_opportunity.net_incremental_acv,0) = 0
            THEN COALESCE(sfdc_opportunity.incremental_acv,0) * COALESCE(segment_order_type_iacv_to_net_arr_ratio,0)
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Won')         -- REST of CLOSED DEAL
            THEN COALESCE(sfdc_opportunity.net_incremental_acv,0) * COALESCE(opportunity_based_iacv_to_net_arr_ratio,segment_order_type_iacv_to_net_arr_ratio)
        ELSE NULL
      END                                                                     AS calculated_from_ratio_net_arr,
      -- For opportunities before start of FY22, as Net ARR was WIP, there are a lot of opties with IACV or Net IACV and no Net ARR
      -- Those were later fixed in the opportunity object but stayed in the snapshot table.
      -- To account for those issues and give a directionally correct answer, we apply a ratio to everything before FY22
      CASE
        WHEN  sfdc_opportunity.snapshot_date::DATE < '2021-02-01' -- All deals before cutoff and that were not updated to Net ARR
          THEN calculated_from_ratio_net_arr
        WHEN  sfdc_opportunity.snapshot_date::DATE >= '2021-02-01'  -- After cutoff date, for all deals earlier than FY19 that are closed and have no net arr
              AND sfdc_opportunity.close_date::DATE < '2018-02-01'
              AND sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost', '9-Unqualified', 'Closed Won', '10-Duplicate')
              AND COALESCE(sfdc_opportunity.raw_net_arr,0) = 0
          THEN calculated_from_ratio_net_arr
        ELSE COALESCE(sfdc_opportunity.raw_net_arr,0) -- Rest of deals after cut off date
      END                                                                     AS net_arr,

      -- opportunity flags
      CASE
        WHEN (sfdc_opportunity.days_in_stage > 30
          OR sfdc_opportunity.incremental_acv > 100000
          OR sfdc_opportunity.pushed_count > 0)
          THEN TRUE
          ELSE FALSE
      END                                                                                         AS is_risky,
      CASE
        WHEN sfdc_opportunity.opportunity_term_base IS NULL THEN
          DATEDIFF('month', quote.quote_start_date, sfdc_opportunity.subscription_end_date)
        ELSE sfdc_opportunity.opportunity_term_base
      END                                                                                         AS opportunity_term,
      -- opportunity stage information
      sfdc_opportunity_stage.is_active                                                            AS is_active,
      sfdc_opportunity_stage.is_won                                                               AS is_won,
      IFF(sfdc_opportunity.stage_name IN ('1-Discovery', '2-Developing', '2-Scoping','3-Technical Evaluation', '4-Proposal', 'Closed Won','5-Negotiating', '6-Awaiting Signature', '7-Closing'), 1, 0) AS is_stage_1_plus,
      IFF(sfdc_opportunity.stage_name IN ('3-Technical Evaluation', '4-Proposal', 'Closed Won','5-Negotiating', '6-Awaiting Signature', '7-Closing'), 1, 0) AS is_stage_3_plus,
      IFF(sfdc_opportunity.stage_name IN ('4-Proposal', 'Closed Won','5-Negotiating', '6-Awaiting Signature', '7-Closing'), 1, 0) AS is_stage_4_plus,
      IFF(sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost'), 1, 0) AS is_lost,
      IFF(LOWER(sfdc_opportunity.sales_type) like '%renewal%', 1, 0) AS is_renewal,
      IFF(sfdc_opportunity.opportunity_category IN ('Decommission'), 1, 0) AS is_decommissed,

     -- flags
      CASE
        WHEN sfdc_opportunity.sales_accepted_date IS NOT NULL
          AND sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.stage_name != '10-Duplicate'
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_sao,
      CASE
        WHEN is_sao = TRUE
          AND sfdc_opportunity.sales_qualified_source IN (
                                        'SDR Generated'
                                        , 'BDR Generated'
                                        )
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_sdr_sao,
      CASE
        WHEN (
               (sfdc_opportunity.sales_type = 'Renewal' AND sfdc_opportunity.stage_name = '8-Closed Lost')
                 OR sfdc_opportunity.stage_name = 'Closed Won'
              )
            AND sfdc_opportunity.is_jihu_account = FALSE
          THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_net_arr_closed_deal,
      CASE
        WHEN (sfdc_opportunity.new_logo_count = 1
          OR sfdc_opportunity.new_logo_count = -1
          )
          AND sfdc_opportunity.is_jihu_account = FALSE
          THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_new_logo_first_order,
      COALESCE(
        sfdc_opportunity.is_pipeline_created_eligible,
        CASE
         WHEN sfdc_opportunity.order_type IN ('1. New - First Order' ,'2. New - Connected', '3. Growth')
           AND sfdc_opportunity.is_edu_oss = 0
           AND arr_created_date.first_day_of_fiscal_quarter IS NOT NULL
           AND sfdc_opportunity.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Credit','Contract Reset')
           -- 20211222 Adjusted to remove the ommitted filter
           AND sfdc_opportunity.stage_name NOT IN ('00-Pre Opportunity','10-Duplicate', '9-Unqualified','0-Pending Acceptance')
           AND (net_arr > 0
             OR sfdc_opportunity.opportunity_category = 'Credit')
           -- 20220128 Updated to remove webdirect SQS deals
           AND sfdc_opportunity.sales_qualified_source  != 'Web Direct Generated'
           AND sfdc_opportunity.is_jihu_account = 0
          THEN 1
          ELSE 0
        END
        ) AS is_net_arr_pipeline_created,
      CASE
        WHEN sfdc_opportunity_stage.is_closed = TRUE
          AND sfdc_opportunity.amount >= 0
          AND (sfdc_opportunity.reason_for_loss IS NULL OR sfdc_opportunity.reason_for_loss != 'Merged into another opportunity')
          AND sfdc_opportunity.is_edu_oss = 0
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_win_rate_calc,
      CASE
        WHEN sfdc_opportunity_stage.is_won = 'TRUE'
          AND sfdc_opportunity.is_closed = 'TRUE'
          AND sfdc_opportunity.is_edu_oss = 0
            THEN TRUE
        ELSE FALSE
      END                                                                                         AS is_closed_won,
      CASE
        WHEN LOWER(sfdc_opportunity.order_type_grouped) LIKE ANY ('%growth%', '%new%')
          AND sfdc_opportunity.is_edu_oss = 0
          AND is_stage_1_plus = 1
          AND sfdc_opportunity.forecast_category_name != 'Omitted'
          AND sfdc_opportunity.is_open = 1
         THEN 1
         ELSE 0
      END                                                                                         AS is_eligible_open_pipeline,
      CASE
        WHEN sfdc_opportunity.sales_accepted_date IS NOT NULL
          AND sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
            THEN 1
        ELSE 0
      END                                                                                         AS is_eligible_sao,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          -- For ASP we care mainly about add on, new business, excluding contraction / churn
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth')
          -- Exclude Decomissioned as they are not aligned to the real owner
          -- Contract Reset, Decomission
          AND sfdc_opportunity.opportunity_category IN ('Standard','Ramp Deal','Internal Correction')
          -- Exclude Deals with nARR < 0
          AND net_arr > 0
            THEN 1
          ELSE 0
      END                                                           AS is_eligible_asp_analysis,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND is_renewal = 0
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
          AND sfdc_opportunity.opportunity_category IN ('Standard','Ramp Deal','Decommissioned')
          AND sfdc_opportunity.is_web_portal_purchase = 0
            THEN 1
          ELSE 0
      END                                                                                         AS is_eligible_age_analysis,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND (sfdc_opportunity_stage.is_won = 1
              OR (is_renewal = 1 AND is_lost = 1))
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            THEN 1
          ELSE 0
      END                                                                                         AS is_eligible_net_arr,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND sfdc_opportunity.order_type IN ('4. Contraction','6. Churn - Final','5. Churn - Partial')
            THEN 1
          ELSE 0
      END                                                                                         AS is_eligible_churn_contraction,
      CASE
        WHEN sfdc_opportunity.stage_name IN ('10-Duplicate')
            THEN 1
        ELSE 0
      END                                                                                         AS is_duplicate,
      CASE
        WHEN sfdc_opportunity.opportunity_category IN ('Credit')
          THEN 1
        ELSE 0
      END                                                                                         AS is_credit,
      CASE
        WHEN sfdc_opportunity.opportunity_category IN ('Contract Reset')
          THEN 1
        ELSE 0
      END                                                                                         AS is_contract_reset,

      -- alliance type fields

      CASE
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%google%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%google%'
    THEN 'Google Cloud' 
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE ANY ('%aws%', '%amazon%') OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE ANY ('%aws%', '%amazon%')
    THEN 'Amazon Web Services'
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%ibm (oem)%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%ibm (oem)%'
    THEN 'IBM (OEM)'
  WHEN NOT EQUAL_NULL(sfdc_opportunity.partner_track, 'Technology') AND NOT EQUAL_NULL(sfdc_opportunity.resale_partner_track, 'Technology') AND sfdc_opportunity.deal_path = 'Partner'
    THEN 'Channel Partners'
  WHEN ( sfdc_opportunity.fulfillment_partner_account_name IS NOT NULL OR sfdc_opportunity.partner_account_account_name IS NOT NULL )
    THEN 'Non-Alliance Partners'
  WHEN sfdc_opportunity.is_focus_partner = TRUE 
    THEN 'Channel Focus Partner'
  ELSE 'Other Alliance Partners'
END AS alliance_type_current,
      CASE
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%google%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%google%'
    THEN 'GCP' 
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE ANY ('%aws%', '%amazon%') OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE ANY ('%aws%', '%amazon%')
    THEN 'AWS'
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%ibm (oem)%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%ibm (oem)%'
    THEN 'IBM'
  WHEN NOT EQUAL_NULL(sfdc_opportunity.partner_track, 'Technology') AND NOT EQUAL_NULL(sfdc_opportunity.resale_partner_track, 'Technology') AND sfdc_opportunity.deal_path = 'Partner'
    THEN 'Channel Partners'
  WHEN ( sfdc_opportunity.fulfillment_partner_account_name IS NOT NULL OR sfdc_opportunity.partner_account_account_name IS NOT NULL )
    THEN 'Non-Alliance'
  WHEN sfdc_opportunity.is_focus_partner = TRUE 
    THEN 'Channel Focus Partner'
  ELSE 'Other Alliance'
END AS alliance_type_short_current,

      CASE
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%google%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%google%'
    THEN 'Google Cloud' 
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE ANY ('%aws%', '%amazon%') OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE ANY ('%aws%', '%amazon%')
    THEN 'Amazon Web Services'
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%ibm (oem)%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%ibm (oem)%'
    THEN 'IBM (OEM)'
  WHEN sfdc_opportunity.close_date >= '2022-02-01' AND NOT EQUAL_NULL(sfdc_opportunity.partner_track, 'Technology') AND NOT EQUAL_NULL(sfdc_opportunity.resale_partner_track, 'Technology') AND sfdc_opportunity.deal_path = 'Partner'
    THEN 'Channel Partners'
  WHEN sfdc_opportunity.close_date < '2022-02-01' AND ( sfdc_opportunity.fulfillment_partner_account_name IS NOT NULL OR sfdc_opportunity.partner_account_account_name IS NOT NULL )
    THEN 'Non-Alliance Partners'
  WHEN sfdc_opportunity.is_focus_partner = TRUE 
    THEN 'Channel Focus Partner'
  ELSE 'Other Alliance Partners'
END AS alliance_type,
      CASE
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%google%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%google%'
    THEN 'GCP' 
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE ANY ('%aws%', '%amazon%') OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE ANY ('%aws%', '%amazon%')
    THEN 'AWS'
  WHEN LOWER(sfdc_opportunity.fulfillment_partner_account_name) LIKE '%ibm (oem)%' OR LOWER(sfdc_opportunity.partner_account_account_name) LIKE '%ibm (oem)%'
    THEN 'IBM'
  WHEN sfdc_opportunity.close_date >= '2022-02-01' AND NOT EQUAL_NULL(sfdc_opportunity.partner_track, 'Technology') AND NOT EQUAL_NULL(sfdc_opportunity.resale_partner_track, 'Technology') AND sfdc_opportunity.deal_path = 'Partner'
    THEN 'Channel Partners'
  WHEN sfdc_opportunity.close_date < '2022-02-01' AND ( sfdc_opportunity.fulfillment_partner_account_name IS NOT NULL OR sfdc_opportunity.partner_account_account_name IS NOT NULL )
    THEN 'Non-Alliance'
  WHEN sfdc_opportunity.is_focus_partner = TRUE 
    THEN 'Channel Focus Partner'
  ELSE 'Other Alliance Partners'
END AS alliance_type_short,

      sfdc_opportunity.fulfillment_partner_account_name AS resale_partner_name,

      --  quote information
      quote.dim_quote_id,
      quote.quote_start_date,

      -- contact information
      first_contact.dim_crm_person_id,
      first_contact.sfdc_contact_id,

      -- Record type information
      sfdc_record_type_source.record_type_name,

      -- attribution information
      linear_attribution_base.count_crm_attribution_touchpoints,
      campaigns_per_opp.count_campaigns,
      sfdc_opportunity.incremental_acv/linear_attribution_base.count_crm_attribution_touchpoints   AS weighted_linear_iacv,

     -- opportunity attributes
      CASE
        WHEN sfdc_opportunity.days_in_sao < 0                  THEN '1. Closed in < 0 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 0 AND 30     THEN '2. Closed in 0-30 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 31 AND 60    THEN '3. Closed in 31-60 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 61 AND 90    THEN '4. Closed in 61-90 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 91 AND 180   THEN '5. Closed in 91-180 days'
        WHEN sfdc_opportunity.days_in_sao BETWEEN 181 AND 270  THEN '6. Closed in 181-270 days'
        WHEN sfdc_opportunity.days_in_sao > 270                THEN '7. Closed in > 270 days'
        ELSE NULL
      END                                                                                         AS closed_buckets,
      CASE
        WHEN net_arr > -5000
            AND is_eligible_churn_contraction = 1
          THEN '1. < 5k'
        WHEN net_arr > -20000
          AND net_arr <= -5000
          AND is_eligible_churn_contraction = 1
          THEN '2. 5k-20k'
        WHEN net_arr > -50000
          AND net_arr <= -20000
          AND is_eligible_churn_contraction = 1
          THEN '3. 20k-50k'
        WHEN net_arr > -100000
          AND net_arr <= -50000
          AND is_eligible_churn_contraction = 1
          THEN '4. 50k-100k'
        WHEN net_arr < -100000
          AND is_eligible_churn_contraction = 1
          THEN '5. 100k+'
      END                                                 AS churn_contraction_net_arr_bucket,
      CASE
        WHEN sfdc_opportunity.created_date < '2022-02-01'
          THEN 'Legacy'
        WHEN sfdc_opportunity.opportunity_sales_development_representative IS NOT NULL AND sfdc_opportunity.opportunity_business_development_representative IS NOT NULL
          THEN 'SDR & BDR'
        WHEN sfdc_opportunity.opportunity_sales_development_representative IS NOT NULL
          THEN 'SDR'
        WHEN sfdc_opportunity.opportunity_business_development_representative IS NOT NULL
          THEN 'BDR'
        WHEN sfdc_opportunity.opportunity_business_development_representative IS NULL AND sfdc_opportunity.opportunity_sales_development_representative IS NULL
          THEN 'No XDR Assigned'
      END                                               AS sdr_or_bdr,
      CASE
        WHEN sfdc_opportunity_stage.is_won = 1
          THEN '1.Won'
        WHEN is_lost = 1
          THEN '2.Lost'
        WHEN sfdc_opportunity.is_open = 1
          THEN '0. Open'
        ELSE 'N/A'
      END                                                                                         AS stage_category,
      CASE
       WHEN sfdc_opportunity.order_type = '1. New - First Order'
         THEN '1. New'
       WHEN sfdc_opportunity.order_type IN ('2. New - Connected', '3. Growth', '5. Churn - Partial','6. Churn - Final','4. Contraction')
         THEN '2. Growth'
       ELSE '3. Other'
     END                                                                   AS deal_group,
     CASE
       WHEN sfdc_opportunity.order_type = '1. New - First Order'
         THEN '1. New'
       WHEN sfdc_opportunity.order_type IN ('2. New - Connected', '3. Growth')
         THEN '2. Growth'
       WHEN sfdc_opportunity.order_type IN ('4. Contraction')
         THEN '3. Contraction'
       WHEN sfdc_opportunity.order_type IN ('5. Churn - Partial','6. Churn - Final')
         THEN '4. Churn'
       ELSE '5. Other'
      END                                                                                       AS deal_category,
      COALESCE(sfdc_opportunity.reason_for_loss, sfdc_opportunity.downgrade_reason)               AS reason_for_loss_staged,
      CASE
        WHEN reason_for_loss_staged IN ('Do Nothing','Other','Competitive Loss','Operational Silos')
          OR reason_for_loss_staged IS NULL
          THEN 'Unknown'
        WHEN reason_for_loss_staged IN ('Missing Feature','Product value/gaps','Product Value / Gaps',
                                          'Stayed with Community Edition','Budget/Value Unperceived')
          THEN 'Product Value / Gaps'
        WHEN reason_for_loss_staged IN ('Lack of Engagement / Sponsor','Went Silent','Evangelist Left')
          THEN 'Lack of Engagement / Sponsor'
        WHEN reason_for_loss_staged IN ('Loss of Budget','No budget')
          THEN 'Loss of Budget'
        WHEN reason_for_loss_staged = 'Merged into another opportunity'
          THEN 'Merged Opp'
        WHEN reason_for_loss_staged = 'Stale Opportunity'
          THEN 'No Progression - Auto-close'
        WHEN reason_for_loss_staged IN ('Product Quality / Availability','Product quality/availability')
          THEN 'Product Quality / Availability'
        ELSE reason_for_loss_staged
     END                                                                                        AS reason_for_loss_calc,
     CASE
       WHEN (
              (
                is_renewal = 1
                  AND is_lost = 1
               )
                OR sfdc_opportunity_stage.is_won = 1
              )
               AND sfdc_opportunity.order_type IN ('4. Contraction','5. Churn - Partial')
          THEN 'Contraction'
               WHEN (
              (
                is_renewal = 1
                  AND is_lost = 1
               )
                OR sfdc_opportunity_stage.is_won = 1
              )
               AND sfdc_opportunity.order_type = '6. Churn - Final'
          THEN 'Churn'
        ELSE NULL
     END                                                                                        AS churn_contraction_type,
     CASE
        WHEN is_renewal = 1
          AND subscription_start_date_fiscal_quarter_date >= close_fiscal_quarter_date
         THEN 'On-Time'
        WHEN is_renewal = 1
          AND subscription_start_date_fiscal_quarter_date < close_fiscal_quarter_date
            THEN 'Late'
      END                                                                                       AS renewal_timing_status,
      CASE
        WHEN net_arr > -5000
          THEN '1. < 5k'
        WHEN net_arr > -20000 AND net_arr <= -5000
          THEN '2. 5k-20k'
        WHEN net_arr > -50000 AND net_arr <= -20000
          THEN '3. 20k-50k'
        WHEN net_arr > -100000 AND net_arr <= -50000
          THEN '4. 50k-100k'
        WHEN net_arr < -100000
          THEN '5. 100k+'
      END                                                                                       AS churned_contraction_net_arr_bucket,
      CASE
        WHEN sfdc_opportunity.deal_path = 'Direct'
          THEN 'Direct'
        WHEN sfdc_opportunity.deal_path = 'Web Direct'
          THEN 'Web Direct'
        WHEN sfdc_opportunity.deal_path = 'Partner'
            AND sfdc_opportunity.sales_qualified_source = 'Partner Generated'
          THEN 'Partner Sourced'
        WHEN sfdc_opportunity.deal_path = 'Partner'
            AND sfdc_opportunity.sales_qualified_source != 'Partner Generated'
          THEN 'Partner Co-Sell'
      END                                                                                       AS deal_path_engagement,
      CASE
        WHEN net_arr > 0 AND net_arr < 5000
          THEN '1 - Small (<5k)'
        WHEN net_arr >=5000 AND net_arr < 25000
          THEN '2 - Medium (5k - 25k)'
        WHEN net_arr >=25000 AND net_arr < 100000
          THEN '3 - Big (25k - 100k)'
        WHEN net_arr >= 100000
          THEN '4 - Jumbo (>100k)'
        ELSE 'Other'
      END                                                          AS deal_size,
      CASE
        WHEN net_arr > 0 AND net_arr < 1000
          THEN '1. (0k -1k)'
        WHEN net_arr >=1000 AND net_arr < 10000
          THEN '2. (1k - 10k)'
        WHEN net_arr >=10000 AND net_arr < 50000
          THEN '3. (10k - 50k)'
        WHEN net_arr >=50000 AND net_arr < 100000
          THEN '4. (50k - 100k)'
        WHEN net_arr >= 100000 AND net_arr < 250000
          THEN '5. (100k - 250k)'
        WHEN net_arr >= 250000 AND net_arr < 500000
          THEN '6. (250k - 500k)'
        WHEN net_arr >= 500000 AND net_arr < 1000000
          THEN '7. (500k-1000k)'
        WHEN net_arr >= 1000000
          THEN '8. (>1000k)'
        ELSE 'Other'
      END                                                                                         AS calculated_deal_size,
      CASE
        WHEN
          sfdc_opportunity.stage_name IN (
            '00-Pre Opportunity',
            '0-Pending Acceptance',
            '0-Qualifying',
            'Developing',
            '1-Discovery',
            '2-Developing',
            '2-Scoping'
          )
          THEN 'Pipeline'
        WHEN
          sfdc_opportunity.stage_name IN (
            '3-Technical Evaluation',
            '4-Proposal',
            '5-Negotiating',
            '6-Awaiting Signature',
            '7-Closing'
          )
          THEN '3+ Pipeline'
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost')
          THEN 'Lost'
        WHEN sfdc_opportunity.stage_name IN ('Closed Won')
          THEN 'Closed Won'
        ELSE 'Other'
      END AS stage_name_3plus,
      CASE
        WHEN
          sfdc_opportunity.stage_name IN (
            '00-Pre Opportunity',
            '0-Pending Acceptance',
            '0-Qualifying',
            'Developing',
            '1-Discovery',
            '2-Developing',
            '2-Scoping',
            '3-Technical Evaluation'
          )
          THEN 'Pipeline'
        WHEN
          sfdc_opportunity.stage_name IN (
            '4-Proposal', '5-Negotiating', '6-Awaiting Signature', '7-Closing'
          )
          THEN '4+ Pipeline'
        WHEN sfdc_opportunity.stage_name IN ('8-Closed Lost', 'Closed Lost')
          THEN 'Lost'
        WHEN sfdc_opportunity.stage_name IN ('Closed Won')
          THEN 'Closed Won'
        ELSE 'Other'
      END AS stage_name_4plus,

      -- counts and arr totals by pipeline stage
       CASE
        WHEN is_decommissed = 1
          THEN -1
        WHEN is_credit = 1
          THEN 0
        ELSE 1
      END                                               AS calculated_deal_count,
      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_1_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_1plus_deal_count,

      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_3_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_3plus_deal_count,

      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_4_plus = 1
            THEN calculated_deal_count
        ELSE 0
      END                                               AS open_4plus_deal_count,
      CASE
        WHEN sfdc_opportunity_stage.is_won = 1
          THEN calculated_deal_count
        ELSE 0
      END                                               AS booked_deal_count,
      CASE
        WHEN is_eligible_churn_contraction = 1
          THEN calculated_deal_count
        ELSE 0
      END                                               AS churned_contraction_deal_count,
      CASE
        WHEN (
              (
                is_renewal = 1
                  AND is_lost = 1
               )
                OR sfdc_opportunity_stage.is_won = 1
              )
              AND is_eligible_churn_contraction = 1
          THEN calculated_deal_count
        ELSE 0
      END                                                 AS booked_churned_contraction_deal_count,
      CASE
        WHEN
          (
            (
              is_renewal = 1
                AND is_lost = 1
              )
            OR sfdc_opportunity_stage.is_won = 1
            )
            AND is_eligible_churn_contraction = 1
          THEN net_arr
        ELSE 0
      END                                                 AS booked_churned_contraction_net_arr,

      CASE
        WHEN is_eligible_churn_contraction = 1
          THEN net_arr
        ELSE 0
      END                                                 AS churned_contraction_net_arr,
      CASE
        WHEN is_eligible_open_pipeline = 1
          THEN net_arr
        ELSE 0
      END                                                AS open_1plus_net_arr,
      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_3_plus = 1
            THEN net_arr
        ELSE 0
      END                                                AS open_3plus_net_arr,
      CASE
        WHEN is_eligible_open_pipeline = 1
          AND is_stage_4_plus = 1
            THEN net_arr
        ELSE 0
      END                                                AS open_4plus_net_arr,
      CASE
        WHEN (
                sfdc_opportunity_stage.is_won = 1
                OR (
                    is_renewal = 1
                      AND is_lost = 1
                   )
             )
          THEN net_arr
        ELSE 0
      END                                                 AS booked_net_arr,
      CASE
        WHEN sfdc_opportunity.is_edu_oss = 0
          AND sfdc_opportunity.is_deleted = 0
          AND (
               sfdc_opportunity_stage.is_won = 1
                OR (
                    is_renewal = 1
                     AND is_lost = 1)
                   )
          AND sfdc_opportunity.order_type IN ('1. New - First Order','2. New - Connected','3. Growth','4. Contraction','6. Churn - Final','5. Churn - Partial')
            THEN 1
          ELSE 0
      END                                                           AS is_booked_net_arr,
      CASE
        WHEN sfdc_opportunity.deal_path = 'Partner'
          THEN REPLACE(COALESCE(sfdc_opportunity.partner_track, sfdc_opportunity.partner_account_partner_track, sfdc_opportunity.fulfillment_partner_partner_track,'Open'),'select','Select')
        ELSE 'Direct'
      END                                                                                           AS calculated_partner_track,
      CASE
        WHEN
        sfdc_opportunity.dim_parent_crm_account_id IN (
          '001610000111bA3',
          '0016100001F4xla',
          '0016100001CXGCs',
          '00161000015O9Yn',
          '0016100001b9Jsc'
        )
        AND sfdc_opportunity.close_date < '2020-08-01'
        THEN 1
      -- NF 2021 - Pubsec extreme deals
      WHEN
        sfdc_opportunity.dim_crm_opportunity_id IN ('0064M00000WtZKUQA3', '0064M00000Xb975QAB')
        AND (sfdc_opportunity.snapshot_date < '2021-05-01' OR sfdc_opportunity.is_live = 1)
        THEN 1
      -- exclude vision opps from FY21-Q2
      WHEN arr_created_fiscal_quarter_name = 'FY21-Q2'
        AND sfdc_opportunity.snapshot_day_of_fiscal_quarter_normalised = 90
        AND sfdc_opportunity.stage_name IN (
          '00-Pre Opportunity', '0-Pending Acceptance', '0-Qualifying'
        )
        THEN 1
      -- NF 20220415 PubSec duplicated deals on Pipe Gen -- Lockheed Martin GV - 40000 Ultimate Renewal
      WHEN
        sfdc_opportunity.dim_crm_opportunity_id IN (
          '0064M00000ZGpfQQAT', '0064M00000ZGpfVQAT', '0064M00000ZGpfGQAT'
        )
        THEN 1
       -- remove test accounts
       WHEN
         sfdc_opportunity.dim_crm_account_id = '0014M00001kGcORQA0'
         THEN 1
       --remove test accounts
       WHEN (sfdc_opportunity.dim_parent_crm_account_id = ('0016100001YUkWVAA1')
            OR sfdc_opportunity.dim_crm_account_id IS NULL)
         THEN 1
       -- remove jihu accounts
       WHEN sfdc_opportunity.is_jihu_account = 1
         THEN 1
       -- remove deleted opps
        WHEN sfdc_opportunity.is_deleted = 1
          THEN 1
         ELSE 0
      END AS is_excluded_from_pipeline_created,
      CASE
        WHEN sfdc_opportunity.is_open = 1
          THEN DATEDIFF(days, sfdc_opportunity.created_date, sfdc_opportunity.snapshot_date)
        WHEN sfdc_opportunity.is_open = 0 AND sfdc_opportunity.snapshot_date < sfdc_opportunity.close_date
          THEN DATEDIFF(days, sfdc_opportunity.created_date, sfdc_opportunity.snapshot_date)
        ELSE DATEDIFF(days, sfdc_opportunity.created_date, sfdc_opportunity.close_date)
      END                                                       AS calculated_age_in_days,
      CASE
        WHEN arr_created_fiscal_quarter_date = close_fiscal_quarter_date
          AND is_net_arr_pipeline_created = 1
            THEN net_arr
        ELSE 0
      END                                                         AS created_and_won_same_quarter_net_arr,
      IFF(sfdc_opportunity.comp_new_logo_override = 'Yes', 1, 0) AS is_comp_new_logo_override,
      IFF(arr_created_date.fiscal_quarter_name_fy = sfdc_opportunity.snapshot_fiscal_quarter_name AND is_net_arr_pipeline_created = 1, net_arr, 0) AS created_in_snapshot_quarter_net_arr,
      IFF(arr_created_date.fiscal_quarter_name_fy = sfdc_opportunity.snapshot_fiscal_quarter_name AND is_net_arr_pipeline_created = 1, calculated_deal_count, 0) AS created_in_snapshot_quarter_deal_count,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Other'),1,0) AS competitors_other_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitLab Core'),1,0) AS competitors_gitlab_core_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'None'),1,0) AS competitors_none_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitHub Enterprise'),1,0) AS competitors_github_enterprise_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'BitBucket Server'),1,0) AS competitors_bitbucket_server_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Unknown'),1,0) AS competitors_unknown_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitHub.com'),1,0) AS competitors_github_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'GitLab.com'),1,0) AS competitors_gitlab_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Jenkins'),1,0) AS competitors_jenkins_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Azure DevOps'),1,0) AS competitors_azure_devops_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'SVN'),1,0) AS competitors_svn_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'BitBucket.Org'),1,0) AS competitors_bitbucket_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Atlassian'),1,0) AS competitors_atlassian_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Perforce'),1,0) AS competitors_perforce_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Visual Studio Team Services'),1,0) AS competitors_visual_studio_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Azure'),1,0) AS competitors_azure_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Amazon Code Commit'),1,0) AS competitors_amazon_code_commit_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'CircleCI'),1,0) AS competitors_circleci_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'Bamboo'),1,0) AS competitors_bamboo_flag,
      IFF(CONTAINS(sfdc_opportunity.competitors, 'AWS'),1,0) AS competitors_aws_flag,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_sales_segment, sfdc_opportunity.opportunity_owner_user_segment)
      )                                                     AS report_opportunity_user_segment,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_geo, sfdc_opportunity.opportunity_owner_user_geo)
      ) AS report_opportunity_user_geo,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_region, sfdc_opportunity.opportunity_owner_user_region)
      ) AS report_opportunity_user_region,
      LOWER(
        IFF(sfdc_opportunity.close_date < close_date.current_first_day_of_fiscal_year, sfdc_opportunity.crm_account_owner_area, sfdc_opportunity.opportunity_owner_user_area)
      ) AS report_opportunity_user_area,
      LOWER(
        CONCAT(
          report_opportunity_user_segment,'-',report_opportunity_user_geo,'-',report_opportunity_user_region,'-',report_opportunity_user_area
        )
      ) AS report_user_segment_geo_region_area,
      COALESCE(sfdc_opportunity.sales_qualified_source, 'Missing sales_qualified_source_name') AS key_sqs,
      LOWER(
        CONCAT(
          report_user_segment_geo_region_area,'-',key_sqs,'-',COALESCE(sfdc_opportunity.order_type, 'Missing order_type_name')
        )
      ) AS report_user_segment_geo_region_area_sqs_ot,
      COALESCE(report_opportunity_user_segment, 'other') AS key_segment,
      COALESCE(deal_group, 'other') AS key_ot,
      COALESCE(report_opportunity_user_segment || '_' || key_sqs, 'other') AS key_segment_sqs,
      COALESCE(report_opportunity_user_segment || '_' || deal_group, 'other') AS key_segment_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo, 'other') AS key_segment_geo,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || key_sqs, 'other') AS key_segment_geo_sqs,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || deal_group, 'other') AS key_segment_geo_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region, 'other') AS key_segment_geo_region,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || key_sqs, 'other') AS key_segment_geo_region_sqs,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || deal_group, 'other') AS key_segment_geo_region_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || report_opportunity_user_area, 'other') AS key_segment_geo_region_area,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || report_opportunity_user_area || '_' || key_sqs, 'other') AS key_segment_geo_region_area_sqs,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_region || '_' || report_opportunity_user_area || '_' || deal_group, 'other') AS key_segment_geo_region_area_ot,
      COALESCE(report_opportunity_user_segment || '_' || report_opportunity_user_geo || '_' || report_opportunity_user_area, 'other') AS key_segment_geo_area,
      COALESCE(
        report_opportunity_user_segment, 'other'
      ) AS sales_team_cro_level,
      -- This code replicates the reporting structured of FY22, to keep current tools working
      CASE
        WHEN report_opportunity_user_segment = 'large'
          AND report_opportunity_user_geo = 'emea'
          THEN 'large_emea'
        WHEN report_opportunity_user_segment = 'mid-market'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) LIKE '%west%'
          THEN 'mid-market_west'
        WHEN report_opportunity_user_segment = 'mid-market'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) NOT LIKE '%west%'
          THEN 'mid-market_east'
        WHEN report_opportunity_user_segment = 'smb'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) LIKE '%west%'
          THEN 'smb_west'
        WHEN report_opportunity_user_segment = 'smb'
          AND report_opportunity_user_region = 'amer'
          AND LOWER(report_opportunity_user_area) NOT LIKE '%west%'
          THEN 'smb_east'
        WHEN report_opportunity_user_segment = 'smb'
          AND report_opportunity_user_region = 'latam'
          THEN 'smb_east'
        WHEN (report_opportunity_user_segment IS NULL
          OR report_opportunity_user_region IS NULL)
          THEN 'other'
        WHEN
          CONCAT(report_opportunity_user_segment, '_', report_opportunity_user_region) LIKE '%other%'
          THEN 'other'
        ELSE CONCAT(report_opportunity_user_segment, '_', report_opportunity_user_region)
      END AS sales_team_rd_asm_level,
      COALESCE(
        CONCAT(report_opportunity_user_segment, '_', report_opportunity_user_geo), 'other'
      ) AS sales_team_vp_level,
      COALESCE(
        CONCAT(
          report_opportunity_user_segment,
          '_',
          report_opportunity_user_geo,
          '_',
          report_opportunity_user_region
        ),
        'other'
      ) AS sales_team_avp_rd_level,
      COALESCE(
        CONCAT(
          report_opportunity_user_segment,
          '_',
          report_opportunity_user_geo,
          '_',
          report_opportunity_user_region,
          '_',
          report_opportunity_user_area
        ),
        'other'
      ) AS sales_team_asm_level,
      CASE
        WHEN
          sfdc_opportunity.account_owner_team_stamped IN (
            'Commercial - SMB', 'SMB', 'SMB - US', 'SMB - International'
          )
          THEN 'SMB'
        WHEN
          sfdc_opportunity.account_owner_team_stamped IN (
            'APAC', 'EMEA', 'Channel', 'US West', 'US East', 'Public Sector'
          )
          THEN 'Large'
        WHEN
          sfdc_opportunity.account_owner_team_stamped IN (
            'MM - APAC', 'MM - East', 'MM - EMEA', 'Commercial - MM', 'MM - West', 'MM-EMEA'
          )
          THEN 'Mid-Market'
        ELSE 'SMB'
      END AS account_owner_team_stamped_cro_level,
      CASE
        WHEN sfdc_opportunity.close_date < '2023-02-01'
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01' AND LOWER(sfdc_opportunity.crm_opp_owner_business_unit_stamped) = 'comm'
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_business_unit_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01' AND LOWER(sfdc_opportunity.crm_opp_owner_business_unit_stamped) = 'entg'
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_business_unit_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01'
          AND (sfdc_opportunity.crm_opp_owner_business_unit_stamped IS NOT NULL AND LOWER(sfdc_opportunity.crm_opp_owner_business_unit_stamped) NOT IN ('comm', 'entg')) -- some opps are closed by non-sales reps, so fill in their values completely
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_business_unit_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
        WHEN sfdc_opportunity.close_date >= '2023-02-01' AND sfdc_opportunity.crm_opp_owner_business_unit_stamped IS NULL -- done for data quality issues
          THEN CONCAT(
                    UPPER(sfdc_opportunity.crm_opp_owner_sales_segment_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_geo_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_region_stamped),
                    '-',
                    UPPER(sfdc_opportunity.crm_opp_owner_area_stamped),
                    '-',
                    close_fiscal_year
                    )
    END AS dim_crm_opp_owner_stamped_hierarchy_sk

    FROM sfdc_opportunity
    INNER JOIN sfdc_opportunity_stage
      ON sfdc_opportunity.stage_name = sfdc_opportunity_stage.primary_label
    LEFT JOIN quote
      ON sfdc_opportunity.dim_crm_opportunity_id = quote.dim_crm_opportunity_id
    LEFT JOIN linear_attribution_base
      ON sfdc_opportunity.dim_crm_opportunity_id = linear_attribution_base.dim_crm_opportunity_id
    LEFT JOIN campaigns_per_opp
      ON sfdc_opportunity.dim_crm_opportunity_id = campaigns_per_opp.dim_crm_opportunity_id
    LEFT JOIN first_contact
      ON sfdc_opportunity.dim_crm_opportunity_id = first_contact.opportunity_id AND first_contact.row_num = 1
    LEFT JOIN dim_date AS close_date
      ON sfdc_opportunity.close_date = close_date.date_actual
    LEFT JOIN dim_date AS arr_created_date
      ON sfdc_opportunity.iacv_created_date::DATE = arr_created_date.date_actual
    LEFT JOIN dim_date AS subscription_start_date
      ON sfdc_opportunity.subscription_start_date::DATE = subscription_start_date.date_actual
    LEFT JOIN net_iacv_to_net_arr_ratio
      ON sfdc_opportunity.opportunity_owner_user_segment = net_iacv_to_net_arr_ratio.user_segment_stamped
        AND sfdc_opportunity.order_type = net_iacv_to_net_arr_ratio.order_type
    LEFT JOIN sfdc_record_type_source 
      ON sfdc_opportunity.record_type_id = sfdc_record_type_source.record_type_id

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@jngCES'::VARCHAR       AS updated_by,
      '2022-02-23'::DATE        AS model_created_date,
      '2023-06-15'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

                CURRENT_TIMESTAMP()               AS dbt_created_at

            

        
    
    

    FROM final1c:T495,{{ config(
    tags=["mnpi_exception"]
) }}

WITH source AS (

    SELECT *
    FROM {{ ref('sfdc_opportunity_source') }}
    WHERE NOT is_deleted

), sfdc_account_source AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE NOT is_deleted

), partner_category AS (


   SELECT DISTINCT 
     {{ partner_category('source.sales_qualified_source', 'fulfillment_partner.account_name') }} AS partner_category 
   FROM source
   LEFT JOIN sfdc_account_source      AS fulfillment_partner
     ON source.fulfillment_partner = fulfillment_partner.account_id

), unioned AS (

    SELECT
      {{ dbt_utils.surrogate_key(['partner_category']) }}  AS dim_partner_category_id,
      partner_category                                     AS partner_category_name
    FROM partner_category

    UNION ALL
    
    SELECT
      MD5('-1')                                              AS dim_partner_category_id,
      'Missing order_type_name'                              AS partner_category_name

)

{{ dbt_audit(
    cte_ref="unioned",
    created_by="@michellecooper",
    updated_by="@michellecooper",
    created_date="2023-03-10",
    updated_date="2023-03-10"
) }}1d:T83b,

WITH source AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_opportunity_source
    WHERE NOT is_deleted

), sfdc_account_source AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE NOT is_deleted

), partner_category AS (


   SELECT DISTINCT 
     CASE
      WHEN (
            source.sales_qualified_source = 'Channel Generated' 
              OR source.sales_qualified_source = 'Partner Generated'
          )
        THEN 'Partner Sourced'
      WHEN (
            source.sales_qualified_source != 'Channel Generated'
              AND source.sales_qualified_source != 'Partner Generated'
            )
          AND NOT LOWER(fulfillment_partner.account_name) LIKE ANY ('%google%','%gcp%','%amazon%')
        THEN 'Channel Co-Sell'
      WHEN (
            source.sales_qualified_source != 'Channel Generated' 
              AND source.sales_qualified_source != 'Partner Generated')
                AND LOWER(fulfillment_partner.account_name) LIKE ANY ('%google%','%gcp%','%amazon%')
        THEN 'Alliance Co-Sell'
      ELSE 'Direct'
    END AS partner_category 
   FROM source
   LEFT JOIN sfdc_account_source      AS fulfillment_partner
     ON source.fulfillment_partner = fulfillment_partner.account_id

), unioned AS (

    SELECT
      md5(cast(coalesce(cast(partner_category as 
    varchar
), '') as 
    varchar
))  AS dim_partner_category_id,
      partner_category                                     AS partner_category_name
    FROM partner_category

    UNION ALL
    
    SELECT
      MD5('-1')                                              AS dim_partner_category_id,
      'Missing order_type_name'                              AS partner_category_name

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2023-03-10'::DATE        AS model_created_date,
      '2023-03-10'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM unioned1e:T3303,WITH map_merged_crm_account AS (

    SELECT *
    FROM {{ ref('map_merged_crm_account') }}

), sfdc_account AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE account_id IS NOT NULL

), zuora_account AS (

    SELECT *
    FROM {{ ref('zuora_account_source') }}
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_rate_plan AS (

    SELECT *
    FROM {{ ref('zuora_rate_plan_source') }}

), zuora_rate_plan_charge AS (

    SELECT *
    FROM {{ ref('zuora_rate_plan_charge_source') }}

), zuora_subscription AS (

    SELECT *
    FROM {{ ref('zuora_subscription_source') }}
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')

), revenue_contract_line AS (

    SELECT *
    FROM {{ ref('zuora_revenue_revenue_contract_line_source') }}
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM {{ ref('zuora_revenue_manual_journal_entry_source') }}

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    {{ dbt_utils.group_by(n=1) }}

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    {{ dbt_utils.group_by(n=7) }}

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      adjustment,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      {{ get_date_id('manual_charges_prep.effective_start_date') }}                         AS effective_start_date_id,
      {{ get_date_id('manual_charges_prep.effective_end_date') }}                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      adjustment,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                         AS estimated_total_future_billings
    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id

)

{{ dbt_audit(
    cte_ref="manual_charges",
    created_by="@michellecooper",
    updated_by="@lisvinueza",
    created_date="2021-10-28",
    updated_date="2023-05-21",
) }}1f:T3443,WITH map_merged_crm_account AS (

    SELECT *
    FROM "PROD".restricted_safe_common_mapping.map_merged_crm_account

), sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE account_id IS NOT NULL

), zuora_account AS (

    SELECT *
    FROM "PREP".zuora.zuora_account_source
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_rate_plan AS (

    SELECT *
    FROM "PREP".zuora.zuora_rate_plan_source

), zuora_rate_plan_charge AS (

    SELECT *
    FROM "PREP".zuora.zuora_rate_plan_charge_source

), zuora_subscription AS (

    SELECT *
    FROM "PREP".zuora.zuora_subscription_source
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')

), revenue_contract_line AS (

    SELECT *
    FROM "PREP".zuora_revenue.zuora_revenue_revenue_contract_line_source
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM "PREP".zuora_revenue.zuora_revenue_manual_journal_entry_source

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    group by 1

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    group by 1,2,3,4,5,6,7

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      adjustment,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_start_date::DATE,'YYYYMMDD'),'99999999')

                         AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_end_date::DATE,'YYYYMMDD'),'99999999')

                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      adjustment,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                         AS estimated_total_future_billings
    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2021-10-28'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM manual_charges20:T5a61,{{ config(
    tags=["mnpi"]
) }}

{{ simple_cte([
    ('map_merged_crm_account', 'map_merged_crm_account'),
    ('zuora_rate_plan', 'zuora_api_sandbox_rate_plan_source'),
    ('zuora_rate_plan_charge', 'zuora_api_sandbox_rate_plan_charge_source'),
    ('zuora_order_action', 'zuora_api_sandbox_order_action_source'),
    ('revenue_contract_line', 'zuora_revenue_revenue_contract_line_source'),
    ('zuora_order', 'zuora_api_sandbox_order_source'),
])}}

, zuora_order_action_rate_plan AS (
    -- referencing a static table as there is not currectly a method for extracting this data from Zuora API sandbox
    SELECT *
    FROM prod.boneyard.orderactionrateplan

), sfdc_account AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE account_id IS NOT NULL

), ultimate_parent_account AS (

    SELECT
      account_id
    FROM sfdc_account
    WHERE account_id = ultimate_parent_account_id

), zuora_account AS (

    SELECT *
    FROM {{ ref('zuora_api_sandbox_account_source') }}
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_rate_plan AS (

    SELECT *
    FROM {{ ref('zuora_api_sandbox_rate_plan_source') }}

), zuora_rate_plan_charge AS (

    SELECT *
    FROM {{ ref('zuora_api_sandbox_rate_plan_charge_source') }}

), zuora_subscription AS (

    SELECT *
    FROM {{ ref('zuora_api_sandbox_subscription_source') }}
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')

), revenue_contract_line AS (

    SELECT *
    FROM {{ ref('zuora_revenue_revenue_contract_line_source') }}
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM {{ ref('zuora_revenue_manual_journal_entry_source') }}

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    {{ dbt_utils.group_by(n=1) }}

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    {{ dbt_utils.group_by(n=7) }}

), charge_to_order AS (

    SELECT 
      zuora_rate_plan_charge.rate_plan_charge_id,
      zuora_order_action.dim_order_id
    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_order_action_rate_plan
      ON zuora_rate_plan.rate_plan_id = zuora_order_action_rate_plan.RatePlanId
    INNER JOIN zuora_order_action
      ON zuora_order_action_rate_plan.OrderActionId = zuora_order_action.dim_order_action_id
    {{ dbt_utils.group_by(n=2) }}

), non_manual_charges AS (

    SELECT
      --Natural Key
      zuora_subscription.subscription_name,
      zuora_subscription.subscription_name_slugify,
      zuora_subscription.version                                        AS subscription_version,
      zuora_rate_plan_charge.rate_plan_charge_number,
      zuora_rate_plan_charge.version                                    AS rate_plan_charge_version,
      zuora_rate_plan_charge.segment                                    AS rate_plan_charge_segment,

      --Surrogate Key
      zuora_rate_plan_charge.rate_plan_charge_id                        AS dim_charge_id,

      --Common Dimension Keys
      zuora_rate_plan_charge.product_rate_plan_charge_id                AS dim_product_detail_id,
      zuora_rate_plan.amendment_id                                      AS dim_amendment_id_charge,
      zuora_rate_plan.subscription_id                                   AS dim_subscription_id,
      zuora_rate_plan_charge.account_id                                 AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                         AS dim_crm_account_id,
      ultimate_parent_account.account_id                                AS dim_parent_crm_account_id,
      charge_to_order.dim_order_id                                      AS dim_order_id,
      {{ get_date_id('zuora_rate_plan_charge.effective_start_date') }}  AS effective_start_date_id,
      {{ get_date_id('zuora_rate_plan_charge.effective_end_date') }}    AS effective_end_date_id,

      --Information
      zuora_subscription.subscription_status                            AS subscription_status,
      zuora_rate_plan.rate_plan_name                                    AS rate_plan_name,
      zuora_rate_plan_charge.rate_plan_charge_name,
      zuora_rate_plan_charge.description                                AS rate_plan_charge_description,
      zuora_rate_plan_charge.is_last_segment,
      zuora_rate_plan_charge.discount_level,
      zuora_rate_plan_charge.charge_type,
      zuora_rate_plan.amendment_type                                    AS rate_plan_charge_amendement_type,
      zuora_rate_plan_charge.unit_of_measure,
      CASE
        WHEN DATE_TRUNC('month',zuora_rate_plan_charge.charged_through_date) = zuora_rate_plan_charge.effective_end_month::DATE
          THEN TRUE ELSE FALSE
      END                                                               AS is_paid_in_full,
      CASE
        WHEN charged_through_date IS NULL THEN zuora_subscription.current_term
        ELSE DATEDIFF('month',DATE_TRUNC('month', zuora_rate_plan_charge.charged_through_date::DATE), zuora_rate_plan_charge.effective_end_month::DATE)
      END                                                               AS months_of_future_billings,
      CASE
        WHEN effective_end_month > effective_start_month OR effective_end_month IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                               AS is_included_in_arr_calc,

      --Dates
      zuora_subscription.subscription_end_date                          AS subscription_end_date,
      zuora_rate_plan_charge.effective_start_date::DATE                 AS effective_start_date,
      zuora_rate_plan_charge.effective_end_date::DATE                   AS effective_end_date,
      zuora_rate_plan_charge.effective_start_month::DATE                AS effective_start_month,
      zuora_rate_plan_charge.effective_end_month::DATE                  AS effective_end_month,
      zuora_rate_plan_charge.charged_through_date::DATE                 AS charged_through_date,
      zuora_rate_plan_charge.created_date::DATE                         AS charge_created_date,
      zuora_rate_plan_charge.updated_date::DATE                         AS charge_updated_date,
      DATEDIFF(month, zuora_rate_plan_charge.effective_start_month::DATE, zuora_rate_plan_charge.effective_end_month::DATE)
                                                                        AS charge_term,

      --Additive Fields
      zuora_rate_plan_charge.mrr,
      LAG(zuora_rate_plan_charge.mrr,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                              ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_mrr_calc,
      CASE
        WHEN previous_mrr_calc IS NULL
          THEN 0 ELSE previous_mrr_calc
      END                                                               AS previous_mrr,
      zuora_rate_plan_charge.mrr - previous_mrr                         AS delta_mrr_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_mrr
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_mrr
        ELSE delta_mrr_calc
      END                                                               AS delta_mrr,
      zuora_rate_plan_charge.delta_mrc,
      zuora_rate_plan_charge.mrr * 12                                   AS arr,
      previous_mrr * 12                                                 AS previous_arr,
      zuora_rate_plan_charge.delta_mrc * 12                             AS delta_arc,
      delta_mrr * 12                                                    AS delta_arr,
      zuora_rate_plan_charge.quantity,
      LAG(zuora_rate_plan_charge.quantity,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                                   ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_quantity_calc,
      CASE
        WHEN previous_quantity_calc IS NULL
          THEN 0 ELSE previous_quantity_calc
      END                                                               AS previous_quantity,
      zuora_rate_plan_charge.quantity - previous_quantity               AS delta_quantity_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_quantity
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_quantity
        ELSE delta_quantity_calc
      END                                                               AS delta_quantity,
      zuora_rate_plan_charge.tcv,
      zuora_rate_plan_charge.delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * zuora_rate_plan_charge.mrr
        ELSE 0
      END                                                               AS estimated_total_future_billings

    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_subscription
      ON zuora_rate_plan.subscription_id = zuora_subscription.subscription_id
    INNER JOIN zuora_account
      ON zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id
    LEFT JOIN ultimate_parent_account
      ON sfdc_account.ultimate_parent_account_id = ultimate_parent_account.account_id
    LEFT JOIN charge_to_order
      ON zuora_rate_plan_charge.rate_plan_charge_id = charge_to_order.rate_plan_charge_id

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      MD5(-1)                                                                               AS dim_order_id,
      {{ get_date_id('manual_charges_prep.effective_start_date') }}                         AS effective_start_date_id,
      {{ get_date_id('manual_charges_prep.effective_end_date') }}                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'manual true up allocation'                                                           AS rate_plan_charge_description,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                         AS estimated_total_future_billings
    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id
    LEFT JOIN ultimate_parent_account
      ON sfdc_account.ultimate_parent_account_id = ultimate_parent_account.account_id


), combined_charges AS (

    SELECT *
    FROM non_manual_charges

    UNION

    SELECT *
    FROM manual_charges

), arr_analysis_framework AS (

    SELECT
      combined_charges.*,
      CASE
        WHEN subscription_version = 1
          THEN 'New'
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE
          THEN 'Churn'
        WHEN LOWER(subscription_status) = 'cancelled'
          THEN 'Churn'
        WHEN arr < previous_arr AND arr > 0
          THEN 'Contraction'
        WHEN arr > previous_arr AND subscription_version > 1
          THEN 'Expansion'
        WHEN arr = previous_arr
          THEN 'No Impact'
        ELSE NULL
      END                 AS type_of_arr_change
    FROM combined_charges

)

{{ dbt_audit(
    cte_ref="arr_analysis_framework",
    created_by="@michellecooper",
    updated_by="@nmcavinue",
    created_date="2022-04-13",
    updated_date="2023-05-30"
) }}21:T5cd7,



WITH map_merged_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mapping.map_merged_crm_account

), zuora_rate_plan AS (

    SELECT * 
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_rate_plan_source

), zuora_rate_plan_charge AS (

    SELECT * 
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_rate_plan_charge_source

), zuora_order_action AS (

    SELECT * 
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_order_action_source

), revenue_contract_line AS (

    SELECT * 
    FROM "PREP".zuora_revenue.zuora_revenue_revenue_contract_line_source

), zuora_order AS (

    SELECT * 
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_order_source

)

, zuora_order_action_rate_plan AS (
    -- referencing a static table as there is not currectly a method for extracting this data from Zuora API sandbox
    SELECT *
    FROM prod.boneyard.orderactionrateplan

), sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE account_id IS NOT NULL

), ultimate_parent_account AS (

    SELECT
      account_id
    FROM sfdc_account
    WHERE account_id = ultimate_parent_account_id

), zuora_account AS (

    SELECT *
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_account_source
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_rate_plan AS (

    SELECT *
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_rate_plan_source

), zuora_rate_plan_charge AS (

    SELECT *
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_rate_plan_charge_source

), zuora_subscription AS (

    SELECT *
    FROM "PREP".zuora_api_sandbox.zuora_api_sandbox_subscription_source
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')

), revenue_contract_line AS (

    SELECT *
    FROM "PREP".zuora_revenue.zuora_revenue_revenue_contract_line_source
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM "PREP".zuora_revenue.zuora_revenue_manual_journal_entry_source

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    group by 1

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    group by 1,2,3,4,5,6,7

), charge_to_order AS (

    SELECT 
      zuora_rate_plan_charge.rate_plan_charge_id,
      zuora_order_action.dim_order_id
    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_order_action_rate_plan
      ON zuora_rate_plan.rate_plan_id = zuora_order_action_rate_plan.RatePlanId
    INNER JOIN zuora_order_action
      ON zuora_order_action_rate_plan.OrderActionId = zuora_order_action.dim_order_action_id
    group by 1,2

), non_manual_charges AS (

    SELECT
      --Natural Key
      zuora_subscription.subscription_name,
      zuora_subscription.subscription_name_slugify,
      zuora_subscription.version                                        AS subscription_version,
      zuora_rate_plan_charge.rate_plan_charge_number,
      zuora_rate_plan_charge.version                                    AS rate_plan_charge_version,
      zuora_rate_plan_charge.segment                                    AS rate_plan_charge_segment,

      --Surrogate Key
      zuora_rate_plan_charge.rate_plan_charge_id                        AS dim_charge_id,

      --Common Dimension Keys
      zuora_rate_plan_charge.product_rate_plan_charge_id                AS dim_product_detail_id,
      zuora_rate_plan.amendment_id                                      AS dim_amendment_id_charge,
      zuora_rate_plan.subscription_id                                   AS dim_subscription_id,
      zuora_rate_plan_charge.account_id                                 AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                         AS dim_crm_account_id,
      ultimate_parent_account.account_id                                AS dim_parent_crm_account_id,
      charge_to_order.dim_order_id                                      AS dim_order_id,
      

  TO_NUMBER(TO_CHAR(zuora_rate_plan_charge.effective_start_date::DATE,'YYYYMMDD'),'99999999')

  AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(zuora_rate_plan_charge.effective_end_date::DATE,'YYYYMMDD'),'99999999')

    AS effective_end_date_id,

      --Information
      zuora_subscription.subscription_status                            AS subscription_status,
      zuora_rate_plan.rate_plan_name                                    AS rate_plan_name,
      zuora_rate_plan_charge.rate_plan_charge_name,
      zuora_rate_plan_charge.description                                AS rate_plan_charge_description,
      zuora_rate_plan_charge.is_last_segment,
      zuora_rate_plan_charge.discount_level,
      zuora_rate_plan_charge.charge_type,
      zuora_rate_plan.amendment_type                                    AS rate_plan_charge_amendement_type,
      zuora_rate_plan_charge.unit_of_measure,
      CASE
        WHEN DATE_TRUNC('month',zuora_rate_plan_charge.charged_through_date) = zuora_rate_plan_charge.effective_end_month::DATE
          THEN TRUE ELSE FALSE
      END                                                               AS is_paid_in_full,
      CASE
        WHEN charged_through_date IS NULL THEN zuora_subscription.current_term
        ELSE DATEDIFF('month',DATE_TRUNC('month', zuora_rate_plan_charge.charged_through_date::DATE), zuora_rate_plan_charge.effective_end_month::DATE)
      END                                                               AS months_of_future_billings,
      CASE
        WHEN effective_end_month > effective_start_month OR effective_end_month IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                               AS is_included_in_arr_calc,

      --Dates
      zuora_subscription.subscription_end_date                          AS subscription_end_date,
      zuora_rate_plan_charge.effective_start_date::DATE                 AS effective_start_date,
      zuora_rate_plan_charge.effective_end_date::DATE                   AS effective_end_date,
      zuora_rate_plan_charge.effective_start_month::DATE                AS effective_start_month,
      zuora_rate_plan_charge.effective_end_month::DATE                  AS effective_end_month,
      zuora_rate_plan_charge.charged_through_date::DATE                 AS charged_through_date,
      zuora_rate_plan_charge.created_date::DATE                         AS charge_created_date,
      zuora_rate_plan_charge.updated_date::DATE                         AS charge_updated_date,
      DATEDIFF(month, zuora_rate_plan_charge.effective_start_month::DATE, zuora_rate_plan_charge.effective_end_month::DATE)
                                                                        AS charge_term,

      --Additive Fields
      zuora_rate_plan_charge.mrr,
      LAG(zuora_rate_plan_charge.mrr,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                              ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_mrr_calc,
      CASE
        WHEN previous_mrr_calc IS NULL
          THEN 0 ELSE previous_mrr_calc
      END                                                               AS previous_mrr,
      zuora_rate_plan_charge.mrr - previous_mrr                         AS delta_mrr_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_mrr
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_mrr
        ELSE delta_mrr_calc
      END                                                               AS delta_mrr,
      zuora_rate_plan_charge.delta_mrc,
      zuora_rate_plan_charge.mrr * 12                                   AS arr,
      previous_mrr * 12                                                 AS previous_arr,
      zuora_rate_plan_charge.delta_mrc * 12                             AS delta_arc,
      delta_mrr * 12                                                    AS delta_arr,
      zuora_rate_plan_charge.quantity,
      LAG(zuora_rate_plan_charge.quantity,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                                   ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_quantity_calc,
      CASE
        WHEN previous_quantity_calc IS NULL
          THEN 0 ELSE previous_quantity_calc
      END                                                               AS previous_quantity,
      zuora_rate_plan_charge.quantity - previous_quantity               AS delta_quantity_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_quantity
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_quantity
        ELSE delta_quantity_calc
      END                                                               AS delta_quantity,
      zuora_rate_plan_charge.tcv,
      zuora_rate_plan_charge.delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * zuora_rate_plan_charge.mrr
        ELSE 0
      END                                                               AS estimated_total_future_billings

    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_subscription
      ON zuora_rate_plan.subscription_id = zuora_subscription.subscription_id
    INNER JOIN zuora_account
      ON zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id
    LEFT JOIN ultimate_parent_account
      ON sfdc_account.ultimate_parent_account_id = ultimate_parent_account.account_id
    LEFT JOIN charge_to_order
      ON zuora_rate_plan_charge.rate_plan_charge_id = charge_to_order.rate_plan_charge_id

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      MD5(-1)                                                                               AS dim_order_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_start_date::DATE,'YYYYMMDD'),'99999999')

                         AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_end_date::DATE,'YYYYMMDD'),'99999999')

                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'manual true up allocation'                                                           AS rate_plan_charge_description,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                         AS estimated_total_future_billings
    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id
    LEFT JOIN ultimate_parent_account
      ON sfdc_account.ultimate_parent_account_id = ultimate_parent_account.account_id


), combined_charges AS (

    SELECT *
    FROM non_manual_charges

    UNION

    SELECT *
    FROM manual_charges

), arr_analysis_framework AS (

    SELECT
      combined_charges.*,
      CASE
        WHEN subscription_version = 1
          THEN 'New'
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE
          THEN 'Churn'
        WHEN LOWER(subscription_status) = 'cancelled'
          THEN 'Churn'
        WHEN arr < previous_arr AND arr > 0
          THEN 'Contraction'
        WHEN arr > previous_arr AND subscription_version > 1
          THEN 'Expansion'
        WHEN arr = previous_arr
          THEN 'No Impact'
        ELSE NULL
      END                 AS type_of_arr_change
    FROM combined_charges

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2022-04-13'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM arr_analysis_framework22:Taf9,{{ config({
        "materialized": "view",
    })
}}

WITH sfdc_account AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE NOT is_deleted

), sfdc_account_with_ultimate_parent AS (

    SELECT
      sfdc_account.account_id                                                                                        AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                                                        AS ultimate_parent_account_id,
      sfdc_account.account_sales_segment                                                                             AS ultimate_parent_sales_segment_name,
      sfdc_account.parent_account_industry_hierarchy                                                                 AS ultimate_parent_industry,
      sfdc_account.account_territory                                                                    AS ultimate_parent_territory,
      CASE 
        WHEN ultimate_parent_sales_segment_name IN ('Large', 'PubSec')
          THEN 'Large'
        ELSE ultimate_parent_sales_segment_name
      END                                                                                                            AS ultimate_parent_sales_segment_grouped,
      sfdc_account.billing_country,
      sfdc_account.industry
    FROM sfdc_account

), final AS (

    SELECT
      dim_crm_account_id                                                                                             AS dim_crm_account_id,
      ultimate_parent_territory                                                                                      AS dim_parent_sales_territory_name_source,
      ultimate_parent_account_id                                                                                     AS dim_parent_crm_account_id,
      ultimate_parent_sales_segment_name                                                                             AS dim_parent_sales_segment_name_source,
      ultimate_parent_sales_segment_grouped                                                                          AS dim_parent_sales_segment_grouped_source,
      industry                                                                                                       AS dim_account_industry_name_source,
      ultimate_parent_industry                                                                                       AS dim_parent_industry_name_source,
      billing_country                                                                                                AS dim_account_location_country_name_source
    FROM sfdc_account_with_ultimate_parent

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@paul_armstrong",
    updated_by="@lisvinueza",
    created_date="2020-10-30",
    updated_date="2023-05-21"
) }}23:Tbb4,

WITH sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE NOT is_deleted

), sfdc_account_with_ultimate_parent AS (

    SELECT
      sfdc_account.account_id                                                                                        AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                                                        AS ultimate_parent_account_id,
      sfdc_account.account_sales_segment                                                                             AS ultimate_parent_sales_segment_name,
      sfdc_account.parent_account_industry_hierarchy                                                                 AS ultimate_parent_industry,
      sfdc_account.account_territory                                                                    AS ultimate_parent_territory,
      CASE 
        WHEN ultimate_parent_sales_segment_name IN ('Large', 'PubSec')
          THEN 'Large'
        ELSE ultimate_parent_sales_segment_name
      END                                                                                                            AS ultimate_parent_sales_segment_grouped,
      sfdc_account.billing_country,
      sfdc_account.industry
    FROM sfdc_account

), final AS (

    SELECT
      dim_crm_account_id                                                                                             AS dim_crm_account_id,
      ultimate_parent_territory                                                                                      AS dim_parent_sales_territory_name_source,
      ultimate_parent_account_id                                                                                     AS dim_parent_crm_account_id,
      ultimate_parent_sales_segment_name                                                                             AS dim_parent_sales_segment_name_source,
      ultimate_parent_sales_segment_grouped                                                                          AS dim_parent_sales_segment_grouped_source,
      industry                                                                                                       AS dim_account_industry_name_source,
      ultimate_parent_industry                                                                                       AS dim_parent_industry_name_source,
      billing_country                                                                                                AS dim_account_location_country_name_source
    FROM sfdc_account_with_ultimate_parent

)

SELECT
      *,
      '@paul_armstrong'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2020-10-30'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final24:T1b6f,{{ config(
    tags=["mnpi_exception"]
) }}

WITH gitlab_dotcom_namespaces AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_namespaces_source') }}
  
), issue_links AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_issue_links_source') }}
    WHERE is_currently_valid

), issue_notes AS (
  
    SELECT
      noteable_id AS issue_id,
      *
    FROM {{ ref('gitlab_dotcom_notes_source') }}
    WHERE noteable_type = 'Issue'
      AND system = FALSE
  
), gitlab_epics AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_epics_source') }}
    QUALIFY ROW_NUMBER() OVER(PARTITION BY group_id, epic_internal_id ORDER BY created_at DESC) = 1 

), gitlab_issues AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_issues_source') }}
    QUALIFY ROW_NUMBER() OVER(PARTITION BY project_id, issue_iid ORDER BY created_at DESC) = 1 

), collaboration_projects AS (

    SELECT
      account_id,
      gitlab_customer_success_project
    FROM {{ ref('sfdc_account_source') }}
    WHERE gitlab_customer_success_project LIKE '%gitlab.com/%'

), gitlab_dotcom_project_routes AS (

    SELECT
      'https://gitlab.com/' || path AS complete_path,
      source_id                     AS project_id,
      *
    FROM {{ ref('gitlab_dotcom_routes_source') }}
    WHERE source_type = 'Project'

), gitlab_dotcom_namespace_routes AS (

    SELECT
      'https://gitlab.com/' || path AS complete_path,
      source_id                     AS namespace_id,
      *
    FROM {{ ref('gitlab_dotcom_routes_source') }}
    WHERE source_type = 'Namespace' 

), collaboration_projects_with_ids AS (

    SELECT
      collaboration_projects.*,
      gitlab_dotcom_project_routes.project_id                              AS collaboration_project_id,
      gitlab_issues.issue_id,
      gitlab_issues.issue_description,
      IFNULL(gitlab_issues.issue_last_edited_at, gitlab_issues.created_at) AS updated_at
    FROM collaboration_projects
    LEFT JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.complete_path = collaboration_projects.gitlab_customer_success_project
    LEFT JOIN gitlab_issues
      ON gitlab_issues.project_id = gitlab_dotcom_project_routes.project_id

), collaboration_projects_issue_descriptions AS (

    SELECT
      *,
      "{{this.database}}".{{target.schema}}.regexp_to_array(issue_description, '(?<=gitlab.com\/groups\/)gitlab-org\/[^ ]*epics\/[0-9]{1,10}') AS epic_links
    FROM collaboration_projects_with_ids
    WHERE ARRAY_SIZE(epic_links) != 0

), collaboration_projects_issue_descriptions_parsed AS (

    SELECT
      collaboration_projects_issue_descriptions.*,
      f.value                                                                      AS user_request_issue_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss') AS user_request_epic_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                         AS user_request_epic_internal_id,
      RTRIM(SPLIT_PART(f.value, '/epics', 1), '/-')                                AS user_request_namespace_path
    FROM collaboration_projects_issue_descriptions,
      TABLE(FLATTEN(epic_links)) f

), collaboration_projects_issue_notes AS (

    SELECT 
      collaboration_projects_with_ids.*,
      "{{this.database}}".{{target.schema}}.regexp_to_array(issue_notes.note, '(?<=gitlab.com\/groups\/)gitlab-org\/[^ ]*epics\/[0-9]{1,10}') AS epic_links,
      issue_notes.updated_at                                                       AS note_updated_at
    FROM collaboration_projects_with_ids
    LEFT JOIN issue_notes
      ON issue_notes.issue_id = collaboration_projects_with_ids.issue_id
    WHERE ARRAY_SIZE(epic_links) != 0

), collaboration_projects_issue_notes_parsed AS (

    SELECT
      collaboration_projects_issue_notes.*,
      f.value                                                                      AS user_request_epic_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss') AS user_request_epic_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                         AS user_request_epic_internal_id,
      RTRIM(SPLIT_PART(f.value, '/epics', 1), '/-')                                AS user_request_namespace_path
    FROM collaboration_projects_issue_notes,
      TABLE(FLATTEN(epic_links)) f

), collaboration_projects_issue_description_notes_unioned AS (

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_epic_internal_id,
      user_request_namespace_path,
      note_updated_at AS link_last_updated_at
    FROM collaboration_projects_issue_notes_parsed

    UNION

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_epic_internal_id,
      user_request_namespace_path,
      updated_at
    FROM collaboration_projects_issue_descriptions_parsed

), unioned_with_user_request_namespace_id AS (

    SELECT
      collaboration_projects_issue_description_notes_unioned.*,
      gitlab_dotcom_namespace_routes.namespace_id AS user_request_namespace_id
    FROM collaboration_projects_issue_description_notes_unioned
    INNER JOIN gitlab_dotcom_namespace_routes
      ON gitlab_dotcom_namespace_routes.path = collaboration_projects_issue_description_notes_unioned.user_request_namespace_path
    INNER JOIN gitlab_dotcom_namespaces
      ON gitlab_dotcom_namespaces.namespace_id = gitlab_dotcom_namespace_routes.namespace_id

), final AS ( -- In case there are various issues with the same link to issues and dim_crm_account_id, dedup them by taking the latest updated link

    SELECT
      gitlab_epics.epic_id                                                    AS dim_epic_id,
      unioned_with_user_request_namespace_id.account_id                       AS dim_crm_account_id,
      unioned_with_user_request_namespace_id.collaboration_project_id         AS dim_collaboration_project_id,
      unioned_with_user_request_namespace_id.user_request_namespace_id        AS dim_namespace_id,
      unioned_with_user_request_namespace_id.gitlab_customer_success_project  AS gitlab_customer_success_project,
      unioned_with_user_request_namespace_id.user_request_epic_internal_id    AS epic_internal_id,
      unioned_with_user_request_namespace_id.link_last_updated_at             AS link_last_updated_at
    FROM unioned_with_user_request_namespace_id
    INNER JOIN gitlab_epics
      ON gitlab_epics.group_id = unioned_with_user_request_namespace_id.user_request_namespace_id
      AND gitlab_epics.epic_internal_id = unioned_with_user_request_namespace_id.user_request_epic_internal_id
    QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_epics.epic_id, unioned_with_user_request_namespace_id.account_id
      ORDER BY unioned_with_user_request_namespace_id.link_last_updated_at DESC NULLS LAST) = 1

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@jpeguero",
    updated_by="@jpeguero",
    created_date="2021-10-12",
    updated_date="2022-01-10",
) }}25:T1c45,

WITH gitlab_dotcom_namespaces AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_namespaces_source
  
), issue_links AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_issue_links_source
    WHERE is_currently_valid

), issue_notes AS (
  
    SELECT
      noteable_id AS issue_id,
      *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_notes_source
    WHERE noteable_type = 'Issue'
      AND system = FALSE
  
), gitlab_epics AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_epics_source
    QUALIFY ROW_NUMBER() OVER(PARTITION BY group_id, epic_internal_id ORDER BY created_at DESC) = 1 

), gitlab_issues AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_issues_source
    QUALIFY ROW_NUMBER() OVER(PARTITION BY project_id, issue_iid ORDER BY created_at DESC) = 1 

), collaboration_projects AS (

    SELECT
      account_id,
      gitlab_customer_success_project
    FROM "PREP".sfdc.sfdc_account_source
    WHERE gitlab_customer_success_project LIKE '%gitlab.com/%'

), gitlab_dotcom_project_routes AS (

    SELECT
      'https://gitlab.com/' || path AS complete_path,
      source_id                     AS project_id,
      *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_routes_source
    WHERE source_type = 'Project'

), gitlab_dotcom_namespace_routes AS (

    SELECT
      'https://gitlab.com/' || path AS complete_path,
      source_id                     AS namespace_id,
      *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_routes_source
    WHERE source_type = 'Namespace' 

), collaboration_projects_with_ids AS (

    SELECT
      collaboration_projects.*,
      gitlab_dotcom_project_routes.project_id                              AS collaboration_project_id,
      gitlab_issues.issue_id,
      gitlab_issues.issue_description,
      IFNULL(gitlab_issues.issue_last_edited_at, gitlab_issues.created_at) AS updated_at
    FROM collaboration_projects
    LEFT JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.complete_path = collaboration_projects.gitlab_customer_success_project
    LEFT JOIN gitlab_issues
      ON gitlab_issues.project_id = gitlab_dotcom_project_routes.project_id

), collaboration_projects_issue_descriptions AS (

    SELECT
      *,
      "PROD".preparation.regexp_to_array(issue_description, '(?<=gitlab.com\/groups\/)gitlab-org\/[^ ]*epics\/[0-9]{1,10}') AS epic_links
    FROM collaboration_projects_with_ids
    WHERE ARRAY_SIZE(epic_links) != 0

), collaboration_projects_issue_descriptions_parsed AS (

    SELECT
      collaboration_projects_issue_descriptions.*,
      f.value                                                                      AS user_request_issue_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss') AS user_request_epic_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                         AS user_request_epic_internal_id,
      RTRIM(SPLIT_PART(f.value, '/epics', 1), '/-')                                AS user_request_namespace_path
    FROM collaboration_projects_issue_descriptions,
      TABLE(FLATTEN(epic_links)) f

), collaboration_projects_issue_notes AS (

    SELECT 
      collaboration_projects_with_ids.*,
      "PROD".preparation.regexp_to_array(issue_notes.note, '(?<=gitlab.com\/groups\/)gitlab-org\/[^ ]*epics\/[0-9]{1,10}') AS epic_links,
      issue_notes.updated_at                                                       AS note_updated_at
    FROM collaboration_projects_with_ids
    LEFT JOIN issue_notes
      ON issue_notes.issue_id = collaboration_projects_with_ids.issue_id
    WHERE ARRAY_SIZE(epic_links) != 0

), collaboration_projects_issue_notes_parsed AS (

    SELECT
      collaboration_projects_issue_notes.*,
      f.value                                                                      AS user_request_epic_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss') AS user_request_epic_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                         AS user_request_epic_internal_id,
      RTRIM(SPLIT_PART(f.value, '/epics', 1), '/-')                                AS user_request_namespace_path
    FROM collaboration_projects_issue_notes,
      TABLE(FLATTEN(epic_links)) f

), collaboration_projects_issue_description_notes_unioned AS (

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_epic_internal_id,
      user_request_namespace_path,
      note_updated_at AS link_last_updated_at
    FROM collaboration_projects_issue_notes_parsed

    UNION

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_epic_internal_id,
      user_request_namespace_path,
      updated_at
    FROM collaboration_projects_issue_descriptions_parsed

), unioned_with_user_request_namespace_id AS (

    SELECT
      collaboration_projects_issue_description_notes_unioned.*,
      gitlab_dotcom_namespace_routes.namespace_id AS user_request_namespace_id
    FROM collaboration_projects_issue_description_notes_unioned
    INNER JOIN gitlab_dotcom_namespace_routes
      ON gitlab_dotcom_namespace_routes.path = collaboration_projects_issue_description_notes_unioned.user_request_namespace_path
    INNER JOIN gitlab_dotcom_namespaces
      ON gitlab_dotcom_namespaces.namespace_id = gitlab_dotcom_namespace_routes.namespace_id

), final AS ( -- In case there are various issues with the same link to issues and dim_crm_account_id, dedup them by taking the latest updated link

    SELECT
      gitlab_epics.epic_id                                                    AS dim_epic_id,
      unioned_with_user_request_namespace_id.account_id                       AS dim_crm_account_id,
      unioned_with_user_request_namespace_id.collaboration_project_id         AS dim_collaboration_project_id,
      unioned_with_user_request_namespace_id.user_request_namespace_id        AS dim_namespace_id,
      unioned_with_user_request_namespace_id.gitlab_customer_success_project  AS gitlab_customer_success_project,
      unioned_with_user_request_namespace_id.user_request_epic_internal_id    AS epic_internal_id,
      unioned_with_user_request_namespace_id.link_last_updated_at             AS link_last_updated_at
    FROM unioned_with_user_request_namespace_id
    INNER JOIN gitlab_epics
      ON gitlab_epics.group_id = unioned_with_user_request_namespace_id.user_request_namespace_id
      AND gitlab_epics.epic_internal_id = unioned_with_user_request_namespace_id.user_request_epic_internal_id
    QUALIFY ROW_NUMBER() OVER(PARTITION BY gitlab_epics.epic_id, unioned_with_user_request_namespace_id.account_id
      ORDER BY unioned_with_user_request_namespace_id.link_last_updated_at DESC NULLS LAST) = 1

)

SELECT
      *,
      '@jpeguero'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-10-12'::DATE        AS model_created_date,
      '2022-01-10'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final26:T5872,{{ simple_cte([
    ('map_merged_crm_account', 'map_merged_crm_account'),
    ('zuora_rate_plan', 'zuora_rate_plan_source'),
    ('zuora_rate_plan_charge', 'zuora_rate_plan_charge_source'),
    ('zuora_order_action_rate_plan','zuora_query_api_order_action_rate_plan_source'),
    ('zuora_order_action', 'zuora_order_action_source'),
    ('revenue_contract_line', 'zuora_revenue_revenue_contract_line_source'),
    ('zuora_order', 'zuora_order_source')
])}}

, sfdc_account AS (

    SELECT *
    FROM {{ ref('sfdc_account_source') }}
    WHERE account_id IS NOT NULL
    
), zuora_account AS (

    SELECT *
    FROM {{ ref('zuora_account_source') }}
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_subscription AS (

    SELECT *
    FROM {{ ref('zuora_subscription_source') }}
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM {{ ref('zuora_revenue_manual_journal_entry_source') }}

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    {{ dbt_utils.group_by(n=1) }}

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    {{ dbt_utils.group_by(n=7) }}

), charge_to_order AS (

    SELECT 
      zuora_rate_plan_charge.rate_plan_charge_id,
      zuora_order_action.order_id
    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_order_action_rate_plan
      ON zuora_rate_plan.rate_plan_id = zuora_order_action_rate_plan.rate_plan_id
    INNER JOIN zuora_order_action
      ON zuora_order_action_rate_plan.order_action_id = zuora_order_action.order_action_id
    {{ dbt_utils.group_by(n=2) }}

), non_manual_charges AS (

    SELECT
      --Natural Key
      zuora_subscription.subscription_name,
      zuora_subscription.subscription_name_slugify,
      zuora_subscription.version                                        AS subscription_version,
      zuora_subscription.created_by_id                                  AS subscription_created_by_id,
      zuora_rate_plan_charge.rate_plan_charge_number,
      zuora_rate_plan_charge.version                                    AS rate_plan_charge_version,
      zuora_rate_plan_charge.segment                                    AS rate_plan_charge_segment,

      --Surrogate Key
      zuora_rate_plan_charge.rate_plan_charge_id                        AS dim_charge_id,

      --Common Dimension Keys
      zuora_rate_plan_charge.product_rate_plan_charge_id                AS dim_product_detail_id,
      zuora_rate_plan.amendement_id                                     AS dim_amendment_id_charge,
      zuora_rate_plan.subscription_id                                   AS dim_subscription_id,
      zuora_rate_plan_charge.account_id                                 AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                         AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                           AS dim_parent_crm_account_id,
      charge_to_order.order_id                                          AS dim_order_id,
      {{ get_date_id('zuora_rate_plan_charge.effective_start_date') }}  AS effective_start_date_id,
      {{ get_date_id('zuora_rate_plan_charge.effective_end_date') }}    AS effective_end_date_id,

      --Information
      zuora_subscription.subscription_status                            AS subscription_status,
      zuora_rate_plan.rate_plan_name                                    AS rate_plan_name,
      zuora_rate_plan_charge.rate_plan_charge_name,
      zuora_rate_plan_charge.description                                AS rate_plan_charge_description,
      zuora_rate_plan_charge.is_last_segment,
      zuora_rate_plan_charge.discount_level,
      zuora_rate_plan_charge.charge_type,
      zuora_rate_plan.amendement_type                                   AS rate_plan_charge_amendement_type,
      zuora_rate_plan_charge.unit_of_measure,
      CASE
        WHEN DATE_TRUNC('month',zuora_rate_plan_charge.charged_through_date) = zuora_rate_plan_charge.effective_end_month::DATE
          THEN TRUE ELSE FALSE
      END                                                               AS is_paid_in_full,
      CASE
        WHEN charged_through_date IS NULL THEN zuora_subscription.current_term
        ELSE DATEDIFF('month',DATE_TRUNC('month', zuora_rate_plan_charge.charged_through_date::DATE), zuora_rate_plan_charge.effective_end_month::DATE)
      END                                                               AS months_of_future_billings,
      CASE
        WHEN effective_end_month > effective_start_month OR effective_end_month IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                               AS is_included_in_arr_calc,

      --Dates
      zuora_subscription.subscription_end_date                          AS subscription_end_date,
      zuora_rate_plan_charge.effective_start_date::DATE                 AS effective_start_date,
      zuora_rate_plan_charge.effective_end_date::DATE                   AS effective_end_date,
      zuora_rate_plan_charge.effective_start_month::DATE                AS effective_start_month,
      zuora_rate_plan_charge.effective_end_month::DATE                  AS effective_end_month,
      zuora_rate_plan_charge.charged_through_date::DATE                 AS charged_through_date,
      zuora_rate_plan_charge.created_date::DATE                         AS charge_created_date,
      zuora_rate_plan_charge.updated_date::DATE                         AS charge_updated_date,
      DATEDIFF(month, zuora_rate_plan_charge.effective_start_month::DATE, zuora_rate_plan_charge.effective_end_month::DATE)
                                                                        AS charge_term,

      --Additive Fields
      zuora_rate_plan_charge.mrr,
      LAG(zuora_rate_plan_charge.mrr,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                              ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_mrr_calc,
      CASE
        WHEN previous_mrr_calc IS NULL
          THEN 0 ELSE previous_mrr_calc
      END                                                               AS previous_mrr,
      zuora_rate_plan_charge.mrr - previous_mrr                         AS delta_mrr_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_mrr
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_mrr
        ELSE delta_mrr_calc
      END                                                               AS delta_mrr,
      zuora_rate_plan_charge.delta_mrc,
      zuora_rate_plan_charge.mrr * 12                                   AS arr,
      previous_mrr * 12                                                 AS previous_arr,
      zuora_rate_plan_charge.delta_mrc * 12                             AS delta_arc,
      delta_mrr * 12                                                    AS delta_arr,
      zuora_rate_plan_charge.quantity,
      LAG(zuora_rate_plan_charge.quantity,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                                   ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_quantity_calc,
      CASE
        WHEN previous_quantity_calc IS NULL
          THEN 0 ELSE previous_quantity_calc
      END                                                               AS previous_quantity,
      zuora_rate_plan_charge.quantity - previous_quantity               AS delta_quantity_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_quantity
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_quantity
        ELSE delta_quantity_calc
      END                                                               AS delta_quantity,
      zuora_rate_plan_charge.tcv,
      zuora_rate_plan_charge.delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * zuora_rate_plan_charge.mrr
        ELSE 0
      END                                                               AS estimated_total_future_billings,
      0                                                                 AS is_manual_charge

    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_subscription
      ON zuora_rate_plan.subscription_id = zuora_subscription.subscription_id
    INNER JOIN zuora_account
      ON zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id
    LEFT JOIN charge_to_order
      ON zuora_rate_plan_charge.rate_plan_charge_id = charge_to_order.rate_plan_charge_id

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      active_zuora_subscription.created_by_id                                               AS subscription_created_by_id,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      MD5(-1)                                                                               AS dim_order_id,
      {{ get_date_id('manual_charges_prep.effective_start_date') }}                         AS effective_start_date_id,
      {{ get_date_id('manual_charges_prep.effective_end_date') }}                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'manual true up allocation'                                                           AS rate_plan_charge_description,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                                   AS estimated_total_future_billings,
      1                                                                                     AS is_manual_charge

    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id


), combined_charges AS (

    SELECT *
    FROM non_manual_charges

    UNION

    SELECT *
    FROM manual_charges

), arr_analysis_framework AS (

    SELECT
      combined_charges.*,
      CASE
        WHEN subscription_version = 1
          THEN 'New'
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE
          THEN 'Churn'
        WHEN LOWER(subscription_status) = 'cancelled'
          THEN 'Churn'
        WHEN arr < previous_arr AND arr > 0
          THEN 'Contraction'
        WHEN arr > previous_arr AND subscription_version > 1
          THEN 'Expansion'
        WHEN arr = previous_arr
          THEN 'No Impact'
        ELSE NULL
      END                 AS type_of_arr_change
    FROM combined_charges

)

{{ dbt_audit(
    cte_ref="arr_analysis_framework",
    created_by="@iweeks",
    updated_by="@chrissharp",
    created_date="2021-04-28",
    updated_date="2023-06-13"
) }}27:T5adb,

WITH map_merged_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mapping.map_merged_crm_account

), zuora_rate_plan AS (

    SELECT * 
    FROM "PREP".zuora.zuora_rate_plan_source

), zuora_rate_plan_charge AS (

    SELECT * 
    FROM "PREP".zuora.zuora_rate_plan_charge_source

), zuora_order_action_rate_plan AS (

    SELECT * 
    FROM "PREP".zuora_query_api.zuora_query_api_order_action_rate_plan_source

), zuora_order_action AS (

    SELECT * 
    FROM "PREP".zuora_order.zuora_order_action_source

), revenue_contract_line AS (

    SELECT * 
    FROM "PREP".zuora_revenue.zuora_revenue_revenue_contract_line_source

), zuora_order AS (

    SELECT * 
    FROM "PREP".zuora_order.zuora_order_source

)

, sfdc_account AS (

    SELECT *
    FROM "PREP".sfdc.sfdc_account_source
    WHERE account_id IS NOT NULL
    
), zuora_account AS (

    SELECT *
    FROM "PREP".zuora.zuora_account_source
    WHERE is_deleted = FALSE
    --Exclude Batch20 which are the test accounts. This method replaces the manual dbt seed exclusion file.
      AND LOWER(batch) != 'batch20'

), zuora_subscription AS (

    SELECT *
    FROM "PREP".zuora.zuora_subscription_source
    WHERE is_deleted = FALSE
      AND exclude_from_analysis IN ('False', '')

), active_zuora_subscription AS (

    SELECT *
    FROM zuora_subscription
    WHERE subscription_status IN ('Active', 'Cancelled')
  
), mje AS (

    SELECT 
      *,
      CASE 
        WHEN debit_activity_type = 'Revenue' AND  credit_activity_type = 'Contract Liability' 
          THEN -amount           
        WHEN credit_activity_type = 'Revenue' AND  debit_activity_type = 'Contract Liability' 
          THEN amount
        ELSE amount                                                                             
      END                                                                                       AS adjustment_amount
    FROM "PREP".zuora_revenue.zuora_revenue_manual_journal_entry_source

), true_up_lines_dates AS (
  
    SELECT 
      subscription_name,
      revenue_contract_line_attribute_16,
      MIN(revenue_start_date)               AS revenue_start_date,
      MAX(revenue_end_date)                 AS revenue_end_date
    FROM revenue_contract_line
    GROUP BY 1,2

), true_up_lines AS (

    SELECT 
      revenue_contract_line_id,
      revenue_contract_id,
      zuora_account.account_id                                  AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                 AS dim_crm_account_id,
      MD5(rate_plan_charge_id)                                  AS dim_charge_id,
      active_zuora_subscription.subscription_id                 AS dim_subscription_id,
      active_zuora_subscription.subscription_name               AS subscription_name,
      active_zuora_subscription.subscription_status             AS subscription_status,
      product_rate_plan_charge_id                               AS dim_product_detail_id,
      true_up_lines_dates.revenue_start_date                    AS revenue_start_date,
      true_up_lines_dates.revenue_end_date                      AS revenue_end_date,
      revenue_contract_line.revenue_contract_line_created_date  AS revenue_contract_line_created_date,
      revenue_contract_line.revenue_contract_line_updated_date  AS revenue_contract_line_updated_date
    FROM revenue_contract_line
    INNER JOIN active_zuora_subscription
      ON revenue_contract_line.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON revenue_contract_line.customer_number = zuora_account.account_number
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN true_up_lines_dates
      ON revenue_contract_line.subscription_name = true_up_lines_dates.subscription_name
        AND revenue_contract_line.revenue_contract_line_attribute_16 = true_up_lines_dates.revenue_contract_line_attribute_16
    WHERE revenue_contract_line.revenue_contract_line_attribute_16 LIKE '%True-up ARR Allocation%'
  
), mje_summed AS (
  
    SELECT
      mje.revenue_contract_line_id,
      SUM(adjustment_amount) AS adjustment
    FROM mje
    INNER JOIN true_up_lines
      ON mje.revenue_contract_line_id = true_up_lines.revenue_contract_line_id
        AND mje.revenue_contract_id = true_up_lines.revenue_contract_id
    group by 1

), true_up_lines_subcription_grain AS (
  
    SELECT
      lns.dim_billing_account_id,
      lns.dim_crm_account_id,
      lns.dim_charge_id,
      lns.dim_subscription_id,
      lns.subscription_name,
      lns.subscription_status,
      lns.dim_product_detail_id,
      MIN(lns.revenue_contract_line_created_date)   AS revenue_contract_line_created_date,
      MAX(lns.revenue_contract_line_updated_date)   AS revenue_contract_line_updated_date,
      SUM(mje.adjustment)                           AS adjustment,
      MIN(revenue_start_date)                       AS revenue_start_date,
      MAX(revenue_end_date)                         AS revenue_end_date
    FROM true_up_lines lns
    LEFT JOIN mje_summed mje
      ON lns.revenue_contract_line_id = mje.revenue_contract_line_id
    WHERE adjustment IS NOT NULL
      AND ABS(ROUND(adjustment,5)) > 0
    group by 1,2,3,4,5,6,7

), charge_to_order AS (

    SELECT 
      zuora_rate_plan_charge.rate_plan_charge_id,
      zuora_order_action.order_id
    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_order_action_rate_plan
      ON zuora_rate_plan.rate_plan_id = zuora_order_action_rate_plan.rate_plan_id
    INNER JOIN zuora_order_action
      ON zuora_order_action_rate_plan.order_action_id = zuora_order_action.order_action_id
    group by 1,2

), non_manual_charges AS (

    SELECT
      --Natural Key
      zuora_subscription.subscription_name,
      zuora_subscription.subscription_name_slugify,
      zuora_subscription.version                                        AS subscription_version,
      zuora_subscription.created_by_id                                  AS subscription_created_by_id,
      zuora_rate_plan_charge.rate_plan_charge_number,
      zuora_rate_plan_charge.version                                    AS rate_plan_charge_version,
      zuora_rate_plan_charge.segment                                    AS rate_plan_charge_segment,

      --Surrogate Key
      zuora_rate_plan_charge.rate_plan_charge_id                        AS dim_charge_id,

      --Common Dimension Keys
      zuora_rate_plan_charge.product_rate_plan_charge_id                AS dim_product_detail_id,
      zuora_rate_plan.amendement_id                                     AS dim_amendment_id_charge,
      zuora_rate_plan.subscription_id                                   AS dim_subscription_id,
      zuora_rate_plan_charge.account_id                                 AS dim_billing_account_id,
      map_merged_crm_account.dim_crm_account_id                         AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                           AS dim_parent_crm_account_id,
      charge_to_order.order_id                                          AS dim_order_id,
      

  TO_NUMBER(TO_CHAR(zuora_rate_plan_charge.effective_start_date::DATE,'YYYYMMDD'),'99999999')

  AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(zuora_rate_plan_charge.effective_end_date::DATE,'YYYYMMDD'),'99999999')

    AS effective_end_date_id,

      --Information
      zuora_subscription.subscription_status                            AS subscription_status,
      zuora_rate_plan.rate_plan_name                                    AS rate_plan_name,
      zuora_rate_plan_charge.rate_plan_charge_name,
      zuora_rate_plan_charge.description                                AS rate_plan_charge_description,
      zuora_rate_plan_charge.is_last_segment,
      zuora_rate_plan_charge.discount_level,
      zuora_rate_plan_charge.charge_type,
      zuora_rate_plan.amendement_type                                   AS rate_plan_charge_amendement_type,
      zuora_rate_plan_charge.unit_of_measure,
      CASE
        WHEN DATE_TRUNC('month',zuora_rate_plan_charge.charged_through_date) = zuora_rate_plan_charge.effective_end_month::DATE
          THEN TRUE ELSE FALSE
      END                                                               AS is_paid_in_full,
      CASE
        WHEN charged_through_date IS NULL THEN zuora_subscription.current_term
        ELSE DATEDIFF('month',DATE_TRUNC('month', zuora_rate_plan_charge.charged_through_date::DATE), zuora_rate_plan_charge.effective_end_month::DATE)
      END                                                               AS months_of_future_billings,
      CASE
        WHEN effective_end_month > effective_start_month OR effective_end_month IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                               AS is_included_in_arr_calc,

      --Dates
      zuora_subscription.subscription_end_date                          AS subscription_end_date,
      zuora_rate_plan_charge.effective_start_date::DATE                 AS effective_start_date,
      zuora_rate_plan_charge.effective_end_date::DATE                   AS effective_end_date,
      zuora_rate_plan_charge.effective_start_month::DATE                AS effective_start_month,
      zuora_rate_plan_charge.effective_end_month::DATE                  AS effective_end_month,
      zuora_rate_plan_charge.charged_through_date::DATE                 AS charged_through_date,
      zuora_rate_plan_charge.created_date::DATE                         AS charge_created_date,
      zuora_rate_plan_charge.updated_date::DATE                         AS charge_updated_date,
      DATEDIFF(month, zuora_rate_plan_charge.effective_start_month::DATE, zuora_rate_plan_charge.effective_end_month::DATE)
                                                                        AS charge_term,

      --Additive Fields
      zuora_rate_plan_charge.mrr,
      LAG(zuora_rate_plan_charge.mrr,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                              ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_mrr_calc,
      CASE
        WHEN previous_mrr_calc IS NULL
          THEN 0 ELSE previous_mrr_calc
      END                                                               AS previous_mrr,
      zuora_rate_plan_charge.mrr - previous_mrr                         AS delta_mrr_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_mrr
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_mrr
        ELSE delta_mrr_calc
      END                                                               AS delta_mrr,
      zuora_rate_plan_charge.delta_mrc,
      zuora_rate_plan_charge.mrr * 12                                   AS arr,
      previous_mrr * 12                                                 AS previous_arr,
      zuora_rate_plan_charge.delta_mrc * 12                             AS delta_arc,
      delta_mrr * 12                                                    AS delta_arr,
      zuora_rate_plan_charge.quantity,
      LAG(zuora_rate_plan_charge.quantity,1) OVER (PARTITION BY zuora_subscription.subscription_name, zuora_rate_plan_charge.rate_plan_charge_number
                                                   ORDER BY zuora_rate_plan_charge.segment, zuora_subscription.version)
                                                                        AS previous_quantity_calc,
      CASE
        WHEN previous_quantity_calc IS NULL
          THEN 0 ELSE previous_quantity_calc
      END                                                               AS previous_quantity,
      zuora_rate_plan_charge.quantity - previous_quantity               AS delta_quantity_calc,
      CASE
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE AND is_last_segment = TRUE
          THEN -previous_quantity
        WHEN LOWER(subscription_status) = 'cancelled' AND is_last_segment = TRUE
          THEN -previous_quantity
        ELSE delta_quantity_calc
      END                                                               AS delta_quantity,
      zuora_rate_plan_charge.tcv,
      zuora_rate_plan_charge.delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * zuora_rate_plan_charge.mrr
        ELSE 0
      END                                                               AS estimated_total_future_billings,
      0                                                                 AS is_manual_charge

    FROM zuora_rate_plan
    INNER JOIN zuora_rate_plan_charge
      ON zuora_rate_plan.rate_plan_id = zuora_rate_plan_charge.rate_plan_id
    INNER JOIN zuora_subscription
      ON zuora_rate_plan.subscription_id = zuora_subscription.subscription_id
    INNER JOIN zuora_account
      ON zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id
    LEFT JOIN charge_to_order
      ON zuora_rate_plan_charge.rate_plan_charge_id = charge_to_order.rate_plan_charge_id

 ), manual_charges_prep AS (
  
    SELECT 
      dim_billing_account_id,
      dim_crm_account_id,
      dim_charge_id,
      dim_subscription_id,
      subscription_name,
      subscription_status,
      dim_product_detail_id,
      revenue_contract_line_created_date,
      revenue_contract_line_updated_date,
      adjustment/ROUND(MONTHS_BETWEEN(revenue_end_date::date, revenue_start_date::date),0)  AS mrr,
      NULL                                                                                  AS delta_tcv,
      'Seats'                                                                               AS unit_of_measure,
      0                                                                                     AS quantity,
      revenue_start_date::DATE                                                              AS effective_start_date,
      DATEADD('day',1,revenue_end_date::DATE)                                               AS effective_end_date
    FROM true_up_lines_subcription_grain

), manual_charges AS ( 

    SELECT
      active_zuora_subscription.subscription_name                                           AS subscription_name,
      active_zuora_subscription.subscription_name_slugify                                   AS subscription_name_slugify,
      active_zuora_subscription.version                                                     AS subscription_version,
      active_zuora_subscription.created_by_id                                               AS subscription_created_by_id,
      NULL                                                                                  AS rate_plan_charge_number,
      NULL                                                                                  AS rate_plan_charge_version,
      NULL                                                                                  AS rate_plan_charge_segment,
      manual_charges_prep.dim_charge_id                                                     AS dim_charge_id,
      manual_charges_prep.dim_product_detail_id                                             AS dim_product_detail_id,
      NULL                                                                                  AS dim_amendment_id_charge,
      active_zuora_subscription.subscription_id                                             AS dim_subscription_id,
      manual_charges_prep.dim_billing_account_id                                            AS dim_billing_account_id,
      zuora_account.crm_id                                                                  AS dim_crm_account_id,
      sfdc_account.ultimate_parent_account_id                                               AS dim_parent_crm_account_id,
      MD5(-1)                                                                               AS dim_order_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_start_date::DATE,'YYYYMMDD'),'99999999')

                         AS effective_start_date_id,
      

  TO_NUMBER(TO_CHAR(manual_charges_prep.effective_end_date::DATE,'YYYYMMDD'),'99999999')

                           AS effective_end_date_id,
      active_zuora_subscription.subscription_status                                         AS subscription_status,
      'manual true up allocation'                                                           AS rate_plan_name,
      'manual true up allocation'                                                           AS rate_plan_charge_name,
      'manual true up allocation'                                                           AS rate_plan_charge_description,
      'TRUE'                                                                                AS is_last_segment,
      NULL                                                                                  AS discount_level,
      'Recurring'                                                                           AS charge_type,
      NULL                                                                                  AS rate_plan_charge_amendement_type,
      manual_charges_prep.unit_of_measure                                                   AS unit_of_measure,
      'TRUE'                                                                                AS is_paid_in_full,
      active_zuora_subscription.current_term                                                AS months_of_future_billings,
      CASE
        WHEN DATE_TRUNC('month', effective_end_date) > DATE_TRUNC('month', effective_start_date) OR DATE_TRUNC('month', effective_end_date) IS NULL
          THEN TRUE
        ELSE FALSE
      END                                                                                   AS is_included_in_arr_calc,
      active_zuora_subscription.subscription_end_date                                       AS subscription_end_date,
      effective_start_date                                                                  AS effective_start_date,
      effective_end_date                                                                    AS effective_end_date,
      DATE_TRUNC('month', effective_start_date)                                             AS effective_start_month,
      DATE_TRUNC('month', effective_end_date)                                               AS effective_end_month,
      DATEADD('day',1,effective_end_date)                                                   AS charged_through_date,
      revenue_contract_line_created_date                                                    AS charge_created_date,
      revenue_contract_line_updated_date                                                    AS charge_updated_date,
      DATEDIFF('month', effective_start_month::DATE, effective_end_month::DATE)             AS charge_term,
      manual_charges_prep.mrr                                                               AS mrr,
      NULL                                                                                  AS previous_mrr_calc,
      NULL                                                                                  AS previous_mrr,
      NULL                                                                                  AS delta_mrr_calc,
      NULL                                                                                  AS delta_mrr,
      NULL                                                                                  AS delta_mrc,
      manual_charges_prep.mrr * 12                                                          AS arr,
      NULL                                                                                  AS previous_arr,
      NULL                                                                                  AS delta_arc,
      NULL                                                                                  AS delta_arr,
      0                                                                                     AS quantity,
      NULL                                                                                  AS previous_quantity_calc,
      NULL                                                                                  AS previous_quantity,
      NULL                                                                                  AS delta_quantity_calc,
      NULL                                                                                  AS delta_quantity,
      NULL                                                                                  AS tcv,
      NULL                                                                                  AS delta_tcv,
      CASE
        WHEN is_paid_in_full = FALSE THEN months_of_future_billings * manual_charges_prep.mrr
        ELSE 0
      END                                                                                   AS estimated_total_future_billings,
      1                                                                                     AS is_manual_charge

    FROM manual_charges_prep
    INNER JOIN active_zuora_subscription
      ON manual_charges_prep.subscription_name = active_zuora_subscription.subscription_name
    INNER JOIN zuora_account
      ON active_zuora_subscription.account_id = zuora_account.account_id
    LEFT JOIN map_merged_crm_account
      ON zuora_account.crm_id = map_merged_crm_account.sfdc_account_id
    LEFT JOIN sfdc_account
      ON map_merged_crm_account.dim_crm_account_id = sfdc_account.account_id


), combined_charges AS (

    SELECT *
    FROM non_manual_charges

    UNION

    SELECT *
    FROM manual_charges

), arr_analysis_framework AS (

    SELECT
      combined_charges.*,
      CASE
        WHEN subscription_version = 1
          THEN 'New'
        WHEN LOWER(subscription_status) = 'active' AND subscription_end_date <= CURRENT_DATE
          THEN 'Churn'
        WHEN LOWER(subscription_status) = 'cancelled'
          THEN 'Churn'
        WHEN arr < previous_arr AND arr > 0
          THEN 'Contraction'
        WHEN arr > previous_arr AND subscription_version > 1
          THEN 'Expansion'
        WHEN arr = previous_arr
          THEN 'No Impact'
        ELSE NULL
      END                 AS type_of_arr_change
    FROM combined_charges

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-04-28'::DATE        AS model_created_date,
      '2023-06-13'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM arr_analysis_framework28:T78c,WITH last_account_snapshot AS (

    SELECT *
    FROM {{ ref('sfdc_account_snapshots_source') }}
    WHERE dbt_valid_to IS NULL

), unioned AS (


    SELECT 
      account_id,
      master_record_id,
      is_deleted
    FROM {{ ref('sfdc_account_source') }}

    UNION ALL

    /*
      Union in accounts which have been hard deleted but are captured in the snapshot models for completeness. 
    */

    SELECT 
      last_account_snapshot.account_id,
      last_account_snapshot.master_record_id,
      last_account_snapshot.is_deleted
    FROM last_account_snapshot
    LEFT JOIN {{ ref('sfdc_account_source') }}
      ON last_account_snapshot.account_id = sfdc_account_source.account_id
    WHERE sfdc_account_source.account_id IS NULL

), recursive_cte(account_id, master_record_id, is_deleted, lineage) AS (

    SELECT
      account_id,
      master_record_id,
      is_deleted,
      TO_ARRAY(account_id) AS lineage
    FROM unioned
    WHERE master_record_id IS NULL

    UNION ALL

    SELECT
      iter.account_id,
      iter.master_record_id,
      iter.is_deleted,
      ARRAY_INSERT(anchor.lineage, 0, iter.account_id)  AS lineage
    FROM recursive_cte AS anchor
    INNER JOIN unioned AS iter
      ON iter.master_record_id = anchor.account_id

), final AS (

    SELECT
      account_id                                         AS sfdc_account_id,
      lineage[ARRAY_SIZE(lineage) - 1]::VARCHAR          AS merged_account_id,
      is_deleted,
      IFF(merged_account_id != account_id, TRUE, FALSE)  AS is_merged,
      IFF(is_deleted AND NOT is_merged, TRUE, FALSE)     AS deleted_not_merged,
      --return final common dimension mapping,
      IFF(deleted_not_merged, '-1', merged_account_id)   AS dim_crm_account_id
    FROM recursive_cte

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mcooperDD",
    updated_by="@michellecooper",
    created_date="2020-11-23",
    updated_date="2023-04-13",
) }}29:T87b,WITH last_account_snapshot AS (

    SELECT *
    FROM "PROD".legacy.sfdc_account_snapshots_source
    WHERE dbt_valid_to IS NULL

), unioned AS (


    SELECT 
      account_id,
      master_record_id,
      is_deleted
    FROM "PREP".sfdc.sfdc_account_source

    UNION ALL

    /*
      Union in accounts which have been hard deleted but are captured in the snapshot models for completeness. 
    */

    SELECT 
      last_account_snapshot.account_id,
      last_account_snapshot.master_record_id,
      last_account_snapshot.is_deleted
    FROM last_account_snapshot
    LEFT JOIN "PREP".sfdc.sfdc_account_source
      ON last_account_snapshot.account_id = sfdc_account_source.account_id
    WHERE sfdc_account_source.account_id IS NULL

), recursive_cte(account_id, master_record_id, is_deleted, lineage) AS (

    SELECT
      account_id,
      master_record_id,
      is_deleted,
      TO_ARRAY(account_id) AS lineage
    FROM unioned
    WHERE master_record_id IS NULL

    UNION ALL

    SELECT
      iter.account_id,
      iter.master_record_id,
      iter.is_deleted,
      ARRAY_INSERT(anchor.lineage, 0, iter.account_id)  AS lineage
    FROM recursive_cte AS anchor
    INNER JOIN unioned AS iter
      ON iter.master_record_id = anchor.account_id

), final AS (

    SELECT
      account_id                                         AS sfdc_account_id,
      lineage[ARRAY_SIZE(lineage) - 1]::VARCHAR          AS merged_account_id,
      is_deleted,
      IFF(merged_account_id != account_id, TRUE, FALSE)  AS is_merged,
      IFF(is_deleted AND NOT is_merged, TRUE, FALSE)     AS deleted_not_merged,
      --return final common dimension mapping,
      IFF(deleted_not_merged, '-1', merged_account_id)   AS dim_crm_account_id
    FROM recursive_cte

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2020-11-23'::DATE        AS model_created_date,
      '2023-04-13'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final2a:T1fda,{{ config(
    tags=["mnpi_exception"]
) }}

WITH gitlab_dotcom_projects AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_projects_source') }}
  
), map_moved_duplicated_issue AS (

    SELECT *
    FROM {{ ref('map_moved_duplicated_issue') }}

), issue_links AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_issue_links_source') }}
    WHERE is_currently_valid

), issue_notes AS (
  
    SELECT
      noteable_id AS issue_id,
      *
    FROM {{ ref('gitlab_dotcom_notes_source') }}
    WHERE noteable_type = 'Issue'
      AND system = FALSE
  
), gitlab_issues AS (

    SELECT *
    FROM {{ ref('gitlab_dotcom_issues_source') }}
    QUALIFY ROW_NUMBER() OVER(PARTITION BY project_id, issue_iid ORDER BY created_at DESC) = 1 

), collaboration_projects AS (

    SELECT
      account_id,
      gitlab_customer_success_project
    FROM {{ ref('sfdc_account_source') }}
    WHERE gitlab_customer_success_project LIKE '%gitlab.com/%'

), gitlab_dotcom_project_routes AS (

    SELECT
      'https://gitlab.com/' || path AS complete_path,
      source_id                     AS project_id,
      *
    FROM {{ ref('gitlab_dotcom_routes_source') }}
    WHERE source_type = 'Project'

), collaboration_projects_with_ids AS (

    SELECT
      collaboration_projects.*,
      gitlab_dotcom_project_routes.project_id                              AS collaboration_project_id,
      gitlab_issues.issue_id,
      gitlab_issues.issue_description,
      IFNULL(gitlab_issues.issue_last_edited_at, gitlab_issues.created_at) AS updated_at
    FROM collaboration_projects
    LEFT JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.complete_path = collaboration_projects.gitlab_customer_success_project
    LEFT JOIN gitlab_issues
      ON gitlab_issues.project_id = gitlab_dotcom_project_routes.project_id

), collaboration_projects_issue_descriptions AS (

    SELECT
      *,
      "{{this.database}}".{{target.schema}}.regexp_to_array(issue_description, '(?<=gitlab.com\/)gitlab-org\/[^ ]*issues\/[0-9]{1,10}')      AS issue_links
    FROM collaboration_projects_with_ids
    WHERE ARRAY_SIZE(issue_links) != 0

), collaboration_projects_issue_descriptions_parsed AS (

    SELECT
      collaboration_projects_issue_descriptions.*,
      f.value AS user_request_issue_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss') AS user_request_issue_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                         AS user_request_issue_iid,
      RTRIM(SPLIT_PART(f.value, '/issues', 1), '/-')                               AS user_request_project_path
    FROM collaboration_projects_issue_descriptions,
      TABLE(FLATTEN(issue_links)) f

), collaboration_projects_issue_notes AS (

    SELECT 
      collaboration_projects_with_ids.*,
      "{{this.database}}".{{target.schema}}.regexp_to_array(issue_notes.note, '(?<=gitlab.com\/)gitlab-org\/[^ ]*issues\/[0-9]{1,10}') AS issue_links,
      issue_notes.updated_at                                                        AS note_updated_at
    FROM collaboration_projects_with_ids
    LEFT JOIN issue_notes
      ON issue_notes.issue_id = collaboration_projects_with_ids.issue_id
    WHERE ARRAY_SIZE(issue_links) != 0

), collaboration_projects_issue_notes_parsed AS (

    SELECT
      collaboration_projects_issue_notes.*,
      f.value AS user_request_issue_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss')  AS user_request_issue_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                          AS user_request_issue_iid,
      RTRIM(SPLIT_PART(f.value, '/issues', 1), '/-')                                AS user_request_project_path
    FROM collaboration_projects_issue_notes,
      TABLE(FLATTEN(issue_links)) f

), collaboration_projects_issue_description_notes_unioned AS (

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_issue_iid,
      user_request_project_path,
      note_updated_at  AS link_last_updated_at
    FROM collaboration_projects_issue_notes_parsed

    UNION

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_issue_iid,
      user_request_project_path,
      updated_at
    FROM collaboration_projects_issue_descriptions_parsed

), unioned_with_user_request_project_id AS (

    SELECT
      collaboration_projects_issue_description_notes_unioned.*,
      gitlab_dotcom_project_routes.project_id AS user_request_project_id
    FROM collaboration_projects_issue_description_notes_unioned
    INNER JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.path = collaboration_projects_issue_description_notes_unioned.user_request_project_path
    INNER JOIN gitlab_dotcom_projects
      ON gitlab_dotcom_projects.project_id = gitlab_dotcom_project_routes.project_id

), unioned_with_issue_links AS (

    SELECT
      gitlab_issues.issue_id                                                AS dim_issue_id,
      unioned_with_user_request_project_id.account_id                       AS dim_crm_account_id,
      unioned_with_user_request_project_id.collaboration_project_id         AS dim_collaboration_project_id,
      unioned_with_user_request_project_id.user_request_project_id          AS dim_project_id,
      unioned_with_user_request_project_id.gitlab_customer_success_project,
      unioned_with_user_request_project_id.user_request_issue_iid           AS issue_internal_id,
      unioned_with_user_request_project_id.link_last_updated_at
    FROM unioned_with_user_request_project_id
    INNER JOIN gitlab_issues
      ON gitlab_issues.project_id = unioned_with_user_request_project_id.user_request_project_id
      AND gitlab_issues.issue_iid = unioned_with_user_request_project_id.user_request_issue_iid

    UNION

    SELECT
      gitlab_issues.issue_id                                                AS dim_issue_id,
      collaboration_projects_with_ids.account_id                            AS dim_crm_account_id,
      collaboration_projects_with_ids.collaboration_project_id              AS dim_collaboration_project_id,
      gitlab_issues.project_id                                              AS dim_project_id,
      collaboration_projects_with_ids.gitlab_customer_success_project,
      gitlab_issues.issue_iid                                               AS issue_internal_id,
      issue_links.updated_at                                                AS link_last_updated_at
    FROM collaboration_projects_with_ids
    INNER JOIN issue_links
      ON issue_links.source_id = collaboration_projects_with_ids.issue_id
    INNER JOIN gitlab_issues
      ON gitlab_issues.issue_id = issue_links.target_id
    INNER JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.project_id = gitlab_issues.project_id
    WHERE gitlab_dotcom_project_routes.path LIKE 'gitlab-org%'

), final AS ( -- In case there are various issues that merge to the same, dedup them by taking the latest updated link

    SELECT
      map_moved_duplicated_issue.dim_issue_id,
      unioned_with_issue_links.dim_crm_account_id,
      unioned_with_issue_links.dim_collaboration_project_id,
      unioned_with_issue_links.dim_project_id                 AS dim_original_issue_project_id,
      unioned_with_issue_links.gitlab_customer_success_project,
      unioned_with_issue_links.issue_internal_id              AS original_issue_internal_id,
      unioned_with_issue_links.link_last_updated_at           AS link_last_updated_at
    FROM unioned_with_issue_links
    INNER JOIN map_moved_duplicated_issue
      ON map_moved_duplicated_issue.issue_id = unioned_with_issue_links.dim_issue_id
    QUALIFY ROW_NUMBER() OVER(PARTITION BY map_moved_duplicated_issue.dim_issue_id, unioned_with_issue_links.dim_crm_account_id
      ORDER BY unioned_with_issue_links.link_last_updated_at DESC NULLS LAST) = 1

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@jpeguero",
    updated_by="@jpeguero",
    created_date="2021-10-12",
    updated_date="2022-01-10"
) }}2b:T20aa,

WITH gitlab_dotcom_projects AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_projects_source
  
), map_moved_duplicated_issue AS (

    SELECT *
    FROM "PROD".common_mapping.map_moved_duplicated_issue

), issue_links AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_issue_links_source
    WHERE is_currently_valid

), issue_notes AS (
  
    SELECT
      noteable_id AS issue_id,
      *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_notes_source
    WHERE noteable_type = 'Issue'
      AND system = FALSE
  
), gitlab_issues AS (

    SELECT *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_issues_source
    QUALIFY ROW_NUMBER() OVER(PARTITION BY project_id, issue_iid ORDER BY created_at DESC) = 1 

), collaboration_projects AS (

    SELECT
      account_id,
      gitlab_customer_success_project
    FROM "PREP".sfdc.sfdc_account_source
    WHERE gitlab_customer_success_project LIKE '%gitlab.com/%'

), gitlab_dotcom_project_routes AS (

    SELECT
      'https://gitlab.com/' || path AS complete_path,
      source_id                     AS project_id,
      *
    FROM "PREP".gitlab_dotcom.gitlab_dotcom_routes_source
    WHERE source_type = 'Project'

), collaboration_projects_with_ids AS (

    SELECT
      collaboration_projects.*,
      gitlab_dotcom_project_routes.project_id                              AS collaboration_project_id,
      gitlab_issues.issue_id,
      gitlab_issues.issue_description,
      IFNULL(gitlab_issues.issue_last_edited_at, gitlab_issues.created_at) AS updated_at
    FROM collaboration_projects
    LEFT JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.complete_path = collaboration_projects.gitlab_customer_success_project
    LEFT JOIN gitlab_issues
      ON gitlab_issues.project_id = gitlab_dotcom_project_routes.project_id

), collaboration_projects_issue_descriptions AS (

    SELECT
      *,
      "PROD".preparation.regexp_to_array(issue_description, '(?<=gitlab.com\/)gitlab-org\/[^ ]*issues\/[0-9]{1,10}')      AS issue_links
    FROM collaboration_projects_with_ids
    WHERE ARRAY_SIZE(issue_links) != 0

), collaboration_projects_issue_descriptions_parsed AS (

    SELECT
      collaboration_projects_issue_descriptions.*,
      f.value AS user_request_issue_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss') AS user_request_issue_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                         AS user_request_issue_iid,
      RTRIM(SPLIT_PART(f.value, '/issues', 1), '/-')                               AS user_request_project_path
    FROM collaboration_projects_issue_descriptions,
      TABLE(FLATTEN(issue_links)) f

), collaboration_projects_issue_notes AS (

    SELECT 
      collaboration_projects_with_ids.*,
      "PROD".preparation.regexp_to_array(issue_notes.note, '(?<=gitlab.com\/)gitlab-org\/[^ ]*issues\/[0-9]{1,10}') AS issue_links,
      issue_notes.updated_at                                                        AS note_updated_at
    FROM collaboration_projects_with_ids
    LEFT JOIN issue_notes
      ON issue_notes.issue_id = collaboration_projects_with_ids.issue_id
    WHERE ARRAY_SIZE(issue_links) != 0

), collaboration_projects_issue_notes_parsed AS (

    SELECT
      collaboration_projects_issue_notes.*,
      f.value AS user_request_issue_path,
      REPLACE(REPLACE(f.value, 'gitlab-ee', 'gitlab'), 'gitlab-ce', 'gitlab-foss')  AS user_request_issue_path_fixed,
      SPLIT_PART(f.value, '/', -1)::NUMBER                                          AS user_request_issue_iid,
      RTRIM(SPLIT_PART(f.value, '/issues', 1), '/-')                                AS user_request_project_path
    FROM collaboration_projects_issue_notes,
      TABLE(FLATTEN(issue_links)) f

), collaboration_projects_issue_description_notes_unioned AS (

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_issue_iid,
      user_request_project_path,
      note_updated_at  AS link_last_updated_at
    FROM collaboration_projects_issue_notes_parsed

    UNION

    SELECT
      account_id,
      gitlab_customer_success_project,
      collaboration_project_id,
      user_request_issue_iid,
      user_request_project_path,
      updated_at
    FROM collaboration_projects_issue_descriptions_parsed

), unioned_with_user_request_project_id AS (

    SELECT
      collaboration_projects_issue_description_notes_unioned.*,
      gitlab_dotcom_project_routes.project_id AS user_request_project_id
    FROM collaboration_projects_issue_description_notes_unioned
    INNER JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.path = collaboration_projects_issue_description_notes_unioned.user_request_project_path
    INNER JOIN gitlab_dotcom_projects
      ON gitlab_dotcom_projects.project_id = gitlab_dotcom_project_routes.project_id

), unioned_with_issue_links AS (

    SELECT
      gitlab_issues.issue_id                                                AS dim_issue_id,
      unioned_with_user_request_project_id.account_id                       AS dim_crm_account_id,
      unioned_with_user_request_project_id.collaboration_project_id         AS dim_collaboration_project_id,
      unioned_with_user_request_project_id.user_request_project_id          AS dim_project_id,
      unioned_with_user_request_project_id.gitlab_customer_success_project,
      unioned_with_user_request_project_id.user_request_issue_iid           AS issue_internal_id,
      unioned_with_user_request_project_id.link_last_updated_at
    FROM unioned_with_user_request_project_id
    INNER JOIN gitlab_issues
      ON gitlab_issues.project_id = unioned_with_user_request_project_id.user_request_project_id
      AND gitlab_issues.issue_iid = unioned_with_user_request_project_id.user_request_issue_iid

    UNION

    SELECT
      gitlab_issues.issue_id                                                AS dim_issue_id,
      collaboration_projects_with_ids.account_id                            AS dim_crm_account_id,
      collaboration_projects_with_ids.collaboration_project_id              AS dim_collaboration_project_id,
      gitlab_issues.project_id                                              AS dim_project_id,
      collaboration_projects_with_ids.gitlab_customer_success_project,
      gitlab_issues.issue_iid                                               AS issue_internal_id,
      issue_links.updated_at                                                AS link_last_updated_at
    FROM collaboration_projects_with_ids
    INNER JOIN issue_links
      ON issue_links.source_id = collaboration_projects_with_ids.issue_id
    INNER JOIN gitlab_issues
      ON gitlab_issues.issue_id = issue_links.target_id
    INNER JOIN gitlab_dotcom_project_routes
      ON gitlab_dotcom_project_routes.project_id = gitlab_issues.project_id
    WHERE gitlab_dotcom_project_routes.path LIKE 'gitlab-org%'

), final AS ( -- In case there are various issues that merge to the same, dedup them by taking the latest updated link

    SELECT
      map_moved_duplicated_issue.dim_issue_id,
      unioned_with_issue_links.dim_crm_account_id,
      unioned_with_issue_links.dim_collaboration_project_id,
      unioned_with_issue_links.dim_project_id                 AS dim_original_issue_project_id,
      unioned_with_issue_links.gitlab_customer_success_project,
      unioned_with_issue_links.issue_internal_id              AS original_issue_internal_id,
      unioned_with_issue_links.link_last_updated_at           AS link_last_updated_at
    FROM unioned_with_issue_links
    INNER JOIN map_moved_duplicated_issue
      ON map_moved_duplicated_issue.issue_id = unioned_with_issue_links.dim_issue_id
    QUALIFY ROW_NUMBER() OVER(PARTITION BY map_moved_duplicated_issue.dim_issue_id, unioned_with_issue_links.dim_crm_account_id
      ORDER BY unioned_with_issue_links.link_last_updated_at DESC NULLS LAST) = 1

)

SELECT
      *,
      '@jpeguero'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2021-10-12'::DATE        AS model_created_date,
      '2022-01-10'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final2c:T195f,{{ config(
    materialized='table',
    tags=["mnpi_exception"]
) }}

{{ simple_cte([
    ('accounts','sfdc_account_source'),
    ('contacts','sfdc_contact_source'),
    ('leads','sfdc_lead_source'),
    ('zoom_info','zi_comp_with_linkages_global_source')
]) }},

salesforce_accounts AS (
  SELECT
    zoom_info_dozisf_zi_id AS company_id,
    zoom_info_company_name AS company_name,
    zoom_info_company_revenue AS company_revenue,
    zoom_info_company_employee_count AS company_employee_count,
    zoom_info_company_industry AS company_industry,
    zoom_info_company_state_province AS company_state_province,
    zoom_info_company_country AS company_country,
    IFF(company_industry IS NOT NULL, 1, 0)
    + IFF(company_state_province IS NOT NULL, 1, 0 )
    + IFF(company_country IS NOT NULL, 1, 0) AS completeness_score
  FROM accounts
  WHERE company_id IS NOT NULL
    AND is_excluded_from_zoom_info_enrich = FALSE
  QUALIFY MAX(company_revenue) OVER (PARTITION BY company_id) = company_revenue
    AND ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY completeness_score DESC) = 1
),

salesforce_leads AS (
  SELECT
    zoominfo_company_id AS company_id,
    company AS company_name,
    zoominfo_company_revenue AS company_revenue,
    zoominfo_company_employee_count AS company_employee_count,
    zoominfo_company_industry AS company_industry,
    zoominfo_company_state AS company_state_province,
    zoominfo_company_country AS company_country,
    IFF(company_industry IS NOT NULL, 1, 0)
    + IFF(company_state_province IS NOT NULL, 1, 0 )
    + IFF(company_country IS NOT NULL, 1, 0) AS completeness_score
  FROM leads
  WHERE company_id IS NOT NULL
  QUALIFY MAX(company_revenue) OVER (PARTITION BY company_id) = company_revenue
    AND ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY completeness_score DESC) = 1
),

salesforce_contacts AS (
  SELECT
    zoominfo_company_id AS company_id,
    zoominfo_company_revenue AS company_revenue,
    zoominfo_company_employee_count AS company_employee_count,
    zoominfo_company_industry AS company_industry,
    zoominfo_company_state AS company_state_province,
    zoominfo_company_country AS company_country,
    IFF(company_industry IS NOT NULL, 1, 0)
    + IFF(company_state_province IS NOT NULL, 1, 0 )
    + IFF(company_country IS NOT NULL, 1, 0) AS completeness_score
  FROM contacts
  WHERE company_id IS NOT NULL
  QUALIFY MAX(company_revenue) OVER (PARTITION BY company_id) = company_revenue
    AND ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY completeness_score DESC) = 1
),

zoom_info_base AS (
  SELECT
    company_id AS company_id,
    headquarters_company_name AS company_name,
    headquarters_employees AS company_employee_count,
    industry_primary AS company_industry,
    headquarters_company_state AS company_state_province,
    headquarters_company_country AS company_country,
    merged_previous_company_ids,
    headquarters_revenue AS company_revenue
  FROM zoom_info
  WHERE is_headquarters = TRUE
),

zoom_info_merged AS (
  SELECT DISTINCT
    merged_company_ids.value::VARCHAR AS company_id,
    zoom_info_base.company_name,
    zoom_info_base.company_revenue,
    zoom_info_base.company_employee_count,
    zoom_info_base.company_industry,
    zoom_info_base.company_state_province,
    zoom_info_base.company_country,
    zoom_info_base.company_id AS source_company_id
  FROM zoom_info_base
  INNER JOIN LATERAL FLATTEN(INPUT =>SPLIT(merged_previous_company_ids, '|')) AS merged_company_ids
),

company_id_spine AS (

  SELECT company_id
  FROM salesforce_accounts

  UNION

  SELECT company_id
  FROM salesforce_leads

  UNION

  SELECT company_id
  FROM salesforce_contacts

  UNION

  SELECT company_id
  FROM zoom_info_base

  UNION

  SELECT company_id
  FROM zoom_info_merged

),

report AS (
  SELECT DISTINCT
    {{ dbt_utils.surrogate_key(['company_id_spine.company_id::INT']) }} AS dim_company_id,
    company_id_spine.company_id::INT AS company_id,
    zoom_info_merged.source_company_id,
    COALESCE(zoom_info_base.company_name,
      zoom_info_merged.company_name,
      salesforce_accounts.company_name,
      salesforce_leads.company_name,
      'Unknown Company Name') AS company_name,
    COALESCE(zoom_info_base.company_revenue,
      zoom_info_merged.company_revenue,
      salesforce_accounts.company_revenue,
      salesforce_contacts.company_revenue,
      salesforce_leads.company_revenue) AS company_revenue,
    COALESCE(zoom_info_base.company_employee_count,
      zoom_info_merged.company_employee_count,
      salesforce_accounts.company_employee_count,
      salesforce_contacts.company_employee_count,
      salesforce_leads.company_employee_count) AS company_employee_count,
    COALESCE(zoom_info_base.company_industry,
      zoom_info_merged.company_industry,
      salesforce_accounts.company_industry,
      salesforce_contacts.company_industry,
      salesforce_leads.company_industry) AS company_industry,
    COALESCE(zoom_info_base.company_country,
      zoom_info_merged.company_country,
      salesforce_accounts.company_country,
      salesforce_contacts.company_country,
      salesforce_leads.company_country) AS company_country,
    COALESCE(zoom_info_base.company_state_province,
      zoom_info_merged.company_state_province,
      salesforce_accounts.company_state_province,
      salesforce_contacts.company_state_province,
      salesforce_leads.company_state_province) AS company_state_province,
    IFF(
      salesforce_accounts.company_id IS NOT NULL, TRUE, FALSE
    ) AS has_crm_account,
    IFF(
      salesforce_leads.company_id IS NOT NULL, TRUE, FALSE
    ) AS has_crm_lead,
    IFF(
      salesforce_contacts.company_id IS NOT NULL, TRUE, FALSE
    ) AS has_crm_contact,
    IFF(
      zoom_info_base.company_id IS NOT NULL, TRUE, FALSE
    ) AS is_company_hq,
    IFF(zoom_info_merged.company_id IS NOT NULL, TRUE, FALSE) AS is_merged_company_id
  FROM company_id_spine
  LEFT JOIN zoom_info_base
    ON company_id_spine.company_id = zoom_info_base.company_id
  LEFT JOIN salesforce_accounts
    ON company_id_spine.company_id = salesforce_accounts.company_id
  LEFT JOIN zoom_info_merged
    ON company_id_spine.company_id = zoom_info_merged.company_id
  LEFT JOIN salesforce_leads
    ON company_id_spine.company_id = salesforce_leads.company_id
  LEFT JOIN salesforce_contacts
    ON company_id_spine.company_id = salesforce_contacts.company_id
  WHERE company_id_spine.company_id IS NOT NULL
)

SELECT *
FROM report2d:T19b5,



WITH accounts AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_account_source

), contacts AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_contact_source

), leads AS (

    SELECT * 
    FROM "PREP".sfdc.sfdc_lead_source

), zoom_info AS (

    SELECT * 
    FROM "PREP".zoominfo.zi_comp_with_linkages_global_source

),

salesforce_accounts AS (
  SELECT
    zoom_info_dozisf_zi_id AS company_id,
    zoom_info_company_name AS company_name,
    zoom_info_company_revenue AS company_revenue,
    zoom_info_company_employee_count AS company_employee_count,
    zoom_info_company_industry AS company_industry,
    zoom_info_company_state_province AS company_state_province,
    zoom_info_company_country AS company_country,
    IFF(company_industry IS NOT NULL, 1, 0)
    + IFF(company_state_province IS NOT NULL, 1, 0 )
    + IFF(company_country IS NOT NULL, 1, 0) AS completeness_score
  FROM accounts
  WHERE company_id IS NOT NULL
    AND is_excluded_from_zoom_info_enrich = FALSE
  QUALIFY MAX(company_revenue) OVER (PARTITION BY company_id) = company_revenue
    AND ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY completeness_score DESC) = 1
),

salesforce_leads AS (
  SELECT
    zoominfo_company_id AS company_id,
    company AS company_name,
    zoominfo_company_revenue AS company_revenue,
    zoominfo_company_employee_count AS company_employee_count,
    zoominfo_company_industry AS company_industry,
    zoominfo_company_state AS company_state_province,
    zoominfo_company_country AS company_country,
    IFF(company_industry IS NOT NULL, 1, 0)
    + IFF(company_state_province IS NOT NULL, 1, 0 )
    + IFF(company_country IS NOT NULL, 1, 0) AS completeness_score
  FROM leads
  WHERE company_id IS NOT NULL
  QUALIFY MAX(company_revenue) OVER (PARTITION BY company_id) = company_revenue
    AND ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY completeness_score DESC) = 1
),

salesforce_contacts AS (
  SELECT
    zoominfo_company_id AS company_id,
    zoominfo_company_revenue AS company_revenue,
    zoominfo_company_employee_count AS company_employee_count,
    zoominfo_company_industry AS company_industry,
    zoominfo_company_state AS company_state_province,
    zoominfo_company_country AS company_country,
    IFF(company_industry IS NOT NULL, 1, 0)
    + IFF(company_state_province IS NOT NULL, 1, 0 )
    + IFF(company_country IS NOT NULL, 1, 0) AS completeness_score
  FROM contacts
  WHERE company_id IS NOT NULL
  QUALIFY MAX(company_revenue) OVER (PARTITION BY company_id) = company_revenue
    AND ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY completeness_score DESC) = 1
),

zoom_info_base AS (
  SELECT
    company_id AS company_id,
    headquarters_company_name AS company_name,
    headquarters_employees AS company_employee_count,
    industry_primary AS company_industry,
    headquarters_company_state AS company_state_province,
    headquarters_company_country AS company_country,
    merged_previous_company_ids,
    headquarters_revenue AS company_revenue
  FROM zoom_info
  WHERE is_headquarters = TRUE
),

zoom_info_merged AS (
  SELECT DISTINCT
    merged_company_ids.value::VARCHAR AS company_id,
    zoom_info_base.company_name,
    zoom_info_base.company_revenue,
    zoom_info_base.company_employee_count,
    zoom_info_base.company_industry,
    zoom_info_base.company_state_province,
    zoom_info_base.company_country,
    zoom_info_base.company_id AS source_company_id
  FROM zoom_info_base
  INNER JOIN LATERAL FLATTEN(INPUT =>SPLIT(merged_previous_company_ids, '|')) AS merged_company_ids
),

company_id_spine AS (

  SELECT company_id
  FROM salesforce_accounts

  UNION

  SELECT company_id
  FROM salesforce_leads

  UNION

  SELECT company_id
  FROM salesforce_contacts

  UNION

  SELECT company_id
  FROM zoom_info_base

  UNION

  SELECT company_id
  FROM zoom_info_merged

),

report AS (
  SELECT DISTINCT
    md5(cast(coalesce(cast(company_id_spine.company_id::INT as 
    varchar
), '') as 
    varchar
)) AS dim_company_id,
    company_id_spine.company_id::INT AS company_id,
    zoom_info_merged.source_company_id,
    COALESCE(zoom_info_base.company_name,
      zoom_info_merged.company_name,
      salesforce_accounts.company_name,
      salesforce_leads.company_name,
      'Unknown Company Name') AS company_name,
    COALESCE(zoom_info_base.company_revenue,
      zoom_info_merged.company_revenue,
      salesforce_accounts.company_revenue,
      salesforce_contacts.company_revenue,
      salesforce_leads.company_revenue) AS company_revenue,
    COALESCE(zoom_info_base.company_employee_count,
      zoom_info_merged.company_employee_count,
      salesforce_accounts.company_employee_count,
      salesforce_contacts.company_employee_count,
      salesforce_leads.company_employee_count) AS company_employee_count,
    COALESCE(zoom_info_base.company_industry,
      zoom_info_merged.company_industry,
      salesforce_accounts.company_industry,
      salesforce_contacts.company_industry,
      salesforce_leads.company_industry) AS company_industry,
    COALESCE(zoom_info_base.company_country,
      zoom_info_merged.company_country,
      salesforce_accounts.company_country,
      salesforce_contacts.company_country,
      salesforce_leads.company_country) AS company_country,
    COALESCE(zoom_info_base.company_state_province,
      zoom_info_merged.company_state_province,
      salesforce_accounts.company_state_province,
      salesforce_contacts.company_state_province,
      salesforce_leads.company_state_province) AS company_state_province,
    IFF(
      salesforce_accounts.company_id IS NOT NULL, TRUE, FALSE
    ) AS has_crm_account,
    IFF(
      salesforce_leads.company_id IS NOT NULL, TRUE, FALSE
    ) AS has_crm_lead,
    IFF(
      salesforce_contacts.company_id IS NOT NULL, TRUE, FALSE
    ) AS has_crm_contact,
    IFF(
      zoom_info_base.company_id IS NOT NULL, TRUE, FALSE
    ) AS is_company_hq,
    IFF(zoom_info_merged.company_id IS NOT NULL, TRUE, FALSE) AS is_merged_company_id
  FROM company_id_spine
  LEFT JOIN zoom_info_base
    ON company_id_spine.company_id = zoom_info_base.company_id
  LEFT JOIN salesforce_accounts
    ON company_id_spine.company_id = salesforce_accounts.company_id
  LEFT JOIN zoom_info_merged
    ON company_id_spine.company_id = zoom_info_merged.company_id
  LEFT JOIN salesforce_leads
    ON company_id_spine.company_id = salesforce_leads.company_id
  LEFT JOIN salesforce_contacts
    ON company_id_spine.company_id = salesforce_contacts.company_id
  WHERE company_id_spine.company_id IS NOT NULL
)

SELECT *
FROM report2f:T263e,{{ config(
    tags=["mnpi"]
) }}

/*

  ATTENTION: When a field is added to this live model, add it to the SFDC_ACCOUNT_SNAPSHOTS_SOURCE model to keep the live and snapshot models in alignment.

*/

WITH source AS (

  SELECT *
  FROM {{ source('salesforce', 'account') }}

),

renamed AS (

  SELECT
    id AS account_id,
    name AS account_name,

    -- keys
    account_id_18__c AS account_id_18,
    masterrecordid AS master_record_id,
    ownerid AS owner_id,
    parentid AS parent_id,
    primary_contact_id__c AS primary_contact_id,
    recordtypeid AS record_type_id,
    ultimate_parent_account_id__c AS ultimate_parent_id,
    partner_vat_tax_id__c AS partner_vat_tax_id,


    -- key people GL side
    gitlab_com_user__c AS gitlab_com_user,
    account_manager__c AS account_manager,
    account_owner_calc__c AS account_owner,
    account_owner_team__c AS account_owner_team,
    proposed_account_owner__c AS proposed_account_owner,
    business_development_rep__c AS business_development_rep,
    dedicated_service_engineer__c AS dedicated_service_engineer,
    sdr_assigned__c AS sales_development_rep,
    -- solutions_architect__c                     AS solutions_architect,
    technical_account_manager_lu__c AS technical_account_manager_id,

    -- info
    "{{ this.database }}".{{ target.schema }}.ID15TO18(SUBSTRING(REGEXP_REPLACE(
      ultimate_parent_account__c, '_HL_ENCODED_/|<a\\s+href="/', ''
      ), 0, 15)) AS ultimate_parent_account_id,
    ultimate_parent_account_text__c AS ultimate_parent_account_name,
    type AS account_type,
    dfox_industry__c AS df_industry,
    parent_lam_industry_acct_heirarchy__c AS industry,
    sub_industry__c AS sub_industry,
    parent_lam_industry_acct_heirarchy__c AS parent_account_industry_hierarchy,
    account_tier__c AS account_tier,
    account_tier_notes__c AS account_tier_notes,
    customer_since__c::DATE AS customer_since_date,
    carr_this_account__c AS carr_this_account,
    carr_acct_family__c AS carr_account_family,
    next_renewal_date__c AS next_renewal_date,
    license_utilization__c AS license_utilization,
    support_level__c AS support_level,
    named_account__c AS named_account,
    billingcountry AS billing_country,
    account_demographics_upa_country__c AS billing_country_code,
    billingpostalcode AS billing_postal_code,
    sdr_target_account__c::BOOLEAN AS is_sdr_target_account,
    lam_tier__c AS lam,
    lam_dev_count__c AS lam_dev_count,
    jihu_account__c::BOOLEAN AS is_jihu_account,
    partners_signed_contract_date__c AS partners_signed_contract_date,
    partner_account_iban_number__c AS partner_account_iban_number,
    partners_partner_type__c AS partner_type,
    partners_partner_status__c AS partner_status,
    bdr_prospecting_status__c AS bdr_prospecting_status,
    first_order_available__c::BOOLEAN AS is_first_order_available,
    REPLACE(
      zi_technologies__c,
      'The technologies that are used and not used at this account, according to ZoomInfo, after completing a scan are:', -- noqa:L016
      ''
    ) AS zi_technologies,
    technical_account_manager_date__c::DATE AS technical_account_manager_date,
    gitlab_customer_success_project__c::VARCHAR AS gitlab_customer_success_project,
    forbes_2000_rank__c AS forbes_2000_rank,
    potential_users__c AS potential_users,
    number_of_licenses_this_account__c AS number_of_licenses_this_account,
    decision_maker_count_linkedin__c AS decision_maker_count_linkedin,
    numberofemployees                AS number_of_employees,
    phone AS account_phone,
    zi_phone__c AS zoominfo_account_phone,
    number_of_employees_manual_source_admin__c AS admin_manual_source_number_of_employees,
    account_address_manual_source_admin__c AS admin_manual_source_account_address,

    -- account demographics fields

    -- Add sales_segment_cleaning macro to avoid duplication in downstream models
    {{sales_segment_cleaning('account_demographics_sales_segment__c')}} AS account_sales_segment,
    account_demographics_geo__c AS account_geo,
    account_demographics_region__c AS account_region,
    account_demographics_area__c AS account_area,
    account_demographics_territory__c AS account_territory,
    account_demographics_business_unit__c AS account_business_unit,
    account_demographics_role_type__c AS account_role_type,
    account_demographics_employee_count__c AS account_employee_count,
    account_demographic_max_family_employees__c AS account_max_family_employee,
    account_demographics_upa_country__c AS account_upa_country,
    account_demographics_upa_state__c AS account_upa_state,
    account_demographics_upa_city__c AS account_upa_city,
    account_demographics_upa_street__c AS account_upa_street,
    account_demographics_upa_postal_code__c AS account_upa_postal_code,

    -- present state info
    gs_health_score__c AS health_number,
    gs_health_score_color__c AS health_score_color,

    -- opportunity metrics
    count_of_active_subscription_charges__c AS count_active_subscription_charges,
    count_of_active_subscriptions__c AS count_active_subscriptions,
    count_of_billing_accounts__c AS count_billing_accounts,
    license_user_count__c AS count_licensed_users,
    count_of_new_business_won_opps__c AS count_of_new_business_won_opportunities,
    count_of_open_renewal_opportunities__c AS count_open_renewal_opportunities,
    count_of_opportunities__c AS count_opportunities,
    count_of_products_purchased__c AS count_products_purchased,
    count_of_won_opportunities__c AS count_won_opportunities,
    concurrent_ee_subscriptions__c AS count_concurrent_ee_subscriptions,
    ce_instances__c AS count_ce_instances,
    active_ce_users__c AS count_active_ce_users,
    number_of_open_opportunities__c AS count_open_opportunities,
    using_ce__c AS count_using_ce,

    --account based marketing fields
    abm_tier__c AS abm_tier,
    gtm_strategy__c AS gtm_strategy,
    gtm_acceleration_date__c AS gtm_acceleration_date,
    gtm_account_based_date__c AS gtm_account_based_date,
    gtm_account_centric_date__c AS gtm_account_centric_date,
    abm_tier_1_date__c AS abm_tier_1_date,
    abm_tier_2_date__c AS abm_tier_2_date,
    abm_tier_3_date__c AS abm_tier_3_date,

    --demandbase fields
    account_list__c AS demandbase_account_list,
    intent__c AS demandbase_intent,
    page_views__c AS demandbase_page_views,
    score__c AS demandbase_score,
    sessions__c AS demandbase_sessions,
    trending_offsite_intent__c AS demandbase_trending_offsite_intent,
    trending_onsite_engagement__c AS demandbase_trending_onsite_engagement,

    -- sales segment fields
    account_demographics_sales_segment__c AS ultimate_parent_sales_segment,
    sales_segmentation_new__c AS division_sales_segment,
    account_owner_user_segment__c AS account_owner_user_segment,
    ultimate_parent_sales_segment_employees__c AS sales_segment,
    sales_segmentation_new__c AS account_segment,

    locally_managed__c AS is_locally_managed_account,
    strategic__c AS is_strategic_account,

    -- ************************************
    -- New SFDC Account Fields for FY22 Planning
    next_fy_account_owner_temp__c AS next_fy_account_owner_temp,
    next_fy_planning_notes_temp__c AS next_fy_planning_notes_temp,
    --*************************************
    -- Partner Account fields
    partner_track__c AS partner_track,
    partners_partner_type__c AS partners_partner_type,
    gitlab_partner_programs__c AS gitlab_partner_program,
    focus_partner__c AS is_focus_partner,

    --*************************************
    -- Zoom Info Fields
    zi_account_name__c AS zoom_info_company_name,
    zi_revenue__c AS zoom_info_company_revenue,
    zi_employees__c AS zoom_info_company_employee_count,
    zi_industry__c AS zoom_info_company_industry,
    zi_city__c AS zoom_info_company_city,
    zi_state_province__c AS zoom_info_company_state_province,
    zi_country__c AS zoom_info_company_country,
    exclude_from_zoominfo_enrich__c AS is_excluded_from_zoom_info_enrich,
    zi_website__c AS zoom_info_website,
    zi_company_other_domains__c AS zoom_info_company_other_domains,
    dozisf__zoominfo_id__c AS zoom_info_dozisf_zi_id,
    zi_parent_company_zoominfo_id__c AS zoom_info_parent_company_zi_id,
    zi_parent_company_name__c AS zoom_info_parent_company_name,
    zi_ultimate_parent_company_zoominfo_id__c AS zoom_info_ultimate_parent_company_zi_id,
    zi_ultimate_parent_company_name__c AS zoom_info_ultimate_parent_company_name,
    zi_number_of_developers__c AS zoom_info_number_of_developers,
    zi_total_funding__c AS zoom_info_total_funding,

    -- NF: Added on 20220427 to support EMEA reporting
    key_account__c                     AS is_key_account,

    -- Gainsight Fields
    gs_first_value_date__c AS gs_first_value_date,
    gs_last_tam_activity_date__c AS gs_last_csm_activity_date,
    eoa_sentiment__c AS eoa_sentiment,
    gs_health_user_engagement__c AS gs_health_user_engagement,
    gs_health_cd__c AS gs_health_cd,
    gs_health_devsecops__c AS gs_health_devsecops,
    gs_health_ci__c AS gs_health_ci,
    gs_health_scm__c AS gs_health_scm,

    -- Risk Fields
    risk_impact__c AS risk_impact,
    risk_reason__c AS risk_reason,
    last_timeline_at_risk_update__c AS last_timeline_at_risk_update,
    last_at_risk_update_comments__c AS last_at_risk_update_comments,

    -- metadata
    createdbyid AS created_by_id,
    createddate AS created_date,
    isdeleted AS is_deleted,
    lastmodifiedbyid AS last_modified_by_id,
    lastmodifieddate AS last_modified_date,
    lastactivitydate AS last_activity_date,
    CONVERT_TIMEZONE(
      'America/Los_Angeles', CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP())
    ) AS _last_dbt_run,
    systemmodstamp

  FROM source
)

SELECT *
FROM renamed30:T28a7,

/*

  ATTENTION: When a field is added to this live model, add it to the SFDC_ACCOUNT_SNAPSHOTS_SOURCE model to keep the live and snapshot models in alignment.

*/

WITH source AS (

  SELECT *
  FROM "RAW".salesforce_stitch.account

),

renamed AS (

  SELECT
    id AS account_id,
    name AS account_name,

    -- keys
    account_id_18__c AS account_id_18,
    masterrecordid AS master_record_id,
    ownerid AS owner_id,
    parentid AS parent_id,
    primary_contact_id__c AS primary_contact_id,
    recordtypeid AS record_type_id,
    ultimate_parent_account_id__c AS ultimate_parent_id,
    partner_vat_tax_id__c AS partner_vat_tax_id,


    -- key people GL side
    gitlab_com_user__c AS gitlab_com_user,
    account_manager__c AS account_manager,
    account_owner_calc__c AS account_owner,
    account_owner_team__c AS account_owner_team,
    proposed_account_owner__c AS proposed_account_owner,
    business_development_rep__c AS business_development_rep,
    dedicated_service_engineer__c AS dedicated_service_engineer,
    sdr_assigned__c AS sales_development_rep,
    -- solutions_architect__c                     AS solutions_architect,
    technical_account_manager_lu__c AS technical_account_manager_id,

    -- info
    "PREP".preparation.ID15TO18(SUBSTRING(REGEXP_REPLACE(
      ultimate_parent_account__c, '_HL_ENCODED_/|<a\\s+href="/', ''
      ), 0, 15)) AS ultimate_parent_account_id,
    ultimate_parent_account_text__c AS ultimate_parent_account_name,
    type AS account_type,
    dfox_industry__c AS df_industry,
    parent_lam_industry_acct_heirarchy__c AS industry,
    sub_industry__c AS sub_industry,
    parent_lam_industry_acct_heirarchy__c AS parent_account_industry_hierarchy,
    account_tier__c AS account_tier,
    account_tier_notes__c AS account_tier_notes,
    customer_since__c::DATE AS customer_since_date,
    carr_this_account__c AS carr_this_account,
    carr_acct_family__c AS carr_account_family,
    next_renewal_date__c AS next_renewal_date,
    license_utilization__c AS license_utilization,
    support_level__c AS support_level,
    named_account__c AS named_account,
    billingcountry AS billing_country,
    account_demographics_upa_country__c AS billing_country_code,
    billingpostalcode AS billing_postal_code,
    sdr_target_account__c::BOOLEAN AS is_sdr_target_account,
    lam_tier__c AS lam,
    lam_dev_count__c AS lam_dev_count,
    jihu_account__c::BOOLEAN AS is_jihu_account,
    partners_signed_contract_date__c AS partners_signed_contract_date,
    partner_account_iban_number__c AS partner_account_iban_number,
    partners_partner_type__c AS partner_type,
    partners_partner_status__c AS partner_status,
    bdr_prospecting_status__c AS bdr_prospecting_status,
    first_order_available__c::BOOLEAN AS is_first_order_available,
    REPLACE(
      zi_technologies__c,
      'The technologies that are used and not used at this account, according to ZoomInfo, after completing a scan are:', -- noqa:L016
      ''
    ) AS zi_technologies,
    technical_account_manager_date__c::DATE AS technical_account_manager_date,
    gitlab_customer_success_project__c::VARCHAR AS gitlab_customer_success_project,
    forbes_2000_rank__c AS forbes_2000_rank,
    potential_users__c AS potential_users,
    number_of_licenses_this_account__c AS number_of_licenses_this_account,
    decision_maker_count_linkedin__c AS decision_maker_count_linkedin,
    numberofemployees                AS number_of_employees,
    phone AS account_phone,
    zi_phone__c AS zoominfo_account_phone,
    number_of_employees_manual_source_admin__c AS admin_manual_source_number_of_employees,
    account_address_manual_source_admin__c AS admin_manual_source_account_address,

    -- account demographics fields

    -- Add sales_segment_cleaning macro to avoid duplication in downstream models
    CASE WHEN LOWER(account_demographics_sales_segment__c) = 'smb' THEN 'SMB'
     WHEN LOWER(account_demographics_sales_segment__c) LIKE ('mid%market') THEN 'Mid-Market'
     WHEN LOWER(account_demographics_sales_segment__c) = 'unknown' THEN 'SMB'
     WHEN LOWER(account_demographics_sales_segment__c) IS NULL THEN 'SMB'
     WHEN LOWER(account_demographics_sales_segment__c) = 'pubsec' THEN 'PubSec'
     WHEN LOWER(account_demographics_sales_segment__c) = 'mm' THEN 'Mid-Market'
     WHEN LOWER(account_demographics_sales_segment__c) = 'lrg' THEN 'Large'
     WHEN LOWER(account_demographics_sales_segment__c) = 'jihu' THEN 'JiHu'
     WHEN account_demographics_sales_segment__c IS NOT NULL THEN initcap(account_demographics_sales_segment__c)
END AS account_sales_segment,
    account_demographics_geo__c AS account_geo,
    account_demographics_region__c AS account_region,
    account_demographics_area__c AS account_area,
    account_demographics_territory__c AS account_territory,
    account_demographics_business_unit__c AS account_business_unit,
    account_demographics_role_type__c AS account_role_type,
    account_demographics_employee_count__c AS account_employee_count,
    account_demographic_max_family_employees__c AS account_max_family_employee,
    account_demographics_upa_country__c AS account_upa_country,
    account_demographics_upa_state__c AS account_upa_state,
    account_demographics_upa_city__c AS account_upa_city,
    account_demographics_upa_street__c AS account_upa_street,
    account_demographics_upa_postal_code__c AS account_upa_postal_code,

    -- present state info
    gs_health_score__c AS health_number,
    gs_health_score_color__c AS health_score_color,

    -- opportunity metrics
    count_of_active_subscription_charges__c AS count_active_subscription_charges,
    count_of_active_subscriptions__c AS count_active_subscriptions,
    count_of_billing_accounts__c AS count_billing_accounts,
    license_user_count__c AS count_licensed_users,
    count_of_new_business_won_opps__c AS count_of_new_business_won_opportunities,
    count_of_open_renewal_opportunities__c AS count_open_renewal_opportunities,
    count_of_opportunities__c AS count_opportunities,
    count_of_products_purchased__c AS count_products_purchased,
    count_of_won_opportunities__c AS count_won_opportunities,
    concurrent_ee_subscriptions__c AS count_concurrent_ee_subscriptions,
    ce_instances__c AS count_ce_instances,
    active_ce_users__c AS count_active_ce_users,
    number_of_open_opportunities__c AS count_open_opportunities,
    using_ce__c AS count_using_ce,

    --account based marketing fields
    abm_tier__c AS abm_tier,
    gtm_strategy__c AS gtm_strategy,
    gtm_acceleration_date__c AS gtm_acceleration_date,
    gtm_account_based_date__c AS gtm_account_based_date,
    gtm_account_centric_date__c AS gtm_account_centric_date,
    abm_tier_1_date__c AS abm_tier_1_date,
    abm_tier_2_date__c AS abm_tier_2_date,
    abm_tier_3_date__c AS abm_tier_3_date,

    --demandbase fields
    account_list__c AS demandbase_account_list,
    intent__c AS demandbase_intent,
    page_views__c AS demandbase_page_views,
    score__c AS demandbase_score,
    sessions__c AS demandbase_sessions,
    trending_offsite_intent__c AS demandbase_trending_offsite_intent,
    trending_onsite_engagement__c AS demandbase_trending_onsite_engagement,

    -- sales segment fields
    account_demographics_sales_segment__c AS ultimate_parent_sales_segment,
    sales_segmentation_new__c AS division_sales_segment,
    account_owner_user_segment__c AS account_owner_user_segment,
    ultimate_parent_sales_segment_employees__c AS sales_segment,
    sales_segmentation_new__c AS account_segment,

    locally_managed__c AS is_locally_managed_account,
    strategic__c AS is_strategic_account,

    -- ************************************
    -- New SFDC Account Fields for FY22 Planning
    next_fy_account_owner_temp__c AS next_fy_account_owner_temp,
    next_fy_planning_notes_temp__c AS next_fy_planning_notes_temp,
    --*************************************
    -- Partner Account fields
    partner_track__c AS partner_track,
    partners_partner_type__c AS partners_partner_type,
    gitlab_partner_programs__c AS gitlab_partner_program,
    focus_partner__c AS is_focus_partner,

    --*************************************
    -- Zoom Info Fields
    zi_account_name__c AS zoom_info_company_name,
    zi_revenue__c AS zoom_info_company_revenue,
    zi_employees__c AS zoom_info_company_employee_count,
    zi_industry__c AS zoom_info_company_industry,
    zi_city__c AS zoom_info_company_city,
    zi_state_province__c AS zoom_info_company_state_province,
    zi_country__c AS zoom_info_company_country,
    exclude_from_zoominfo_enrich__c AS is_excluded_from_zoom_info_enrich,
    zi_website__c AS zoom_info_website,
    zi_company_other_domains__c AS zoom_info_company_other_domains,
    dozisf__zoominfo_id__c AS zoom_info_dozisf_zi_id,
    zi_parent_company_zoominfo_id__c AS zoom_info_parent_company_zi_id,
    zi_parent_company_name__c AS zoom_info_parent_company_name,
    zi_ultimate_parent_company_zoominfo_id__c AS zoom_info_ultimate_parent_company_zi_id,
    zi_ultimate_parent_company_name__c AS zoom_info_ultimate_parent_company_name,
    zi_number_of_developers__c AS zoom_info_number_of_developers,
    zi_total_funding__c AS zoom_info_total_funding,

    -- NF: Added on 20220427 to support EMEA reporting
    key_account__c                     AS is_key_account,

    -- Gainsight Fields
    gs_first_value_date__c AS gs_first_value_date,
    gs_last_tam_activity_date__c AS gs_last_csm_activity_date,
    eoa_sentiment__c AS eoa_sentiment,
    gs_health_user_engagement__c AS gs_health_user_engagement,
    gs_health_cd__c AS gs_health_cd,
    gs_health_devsecops__c AS gs_health_devsecops,
    gs_health_ci__c AS gs_health_ci,
    gs_health_scm__c AS gs_health_scm,

    -- Risk Fields
    risk_impact__c AS risk_impact,
    risk_reason__c AS risk_reason,
    last_timeline_at_risk_update__c AS last_timeline_at_risk_update,
    last_at_risk_update_comments__c AS last_at_risk_update_comments,

    -- metadata
    createdbyid AS created_by_id,
    createddate AS created_date,
    isdeleted AS is_deleted,
    lastmodifiedbyid AS last_modified_by_id,
    lastmodifieddate AS last_modified_date,
    lastactivitydate AS last_activity_date,
    CONVERT_TIMEZONE(
      'America/Los_Angeles', CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP())
    ) AS _last_dbt_run,
    systemmodstamp

  FROM source
)

SELECT *
FROM renamedc:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.sfdc_account_source"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"sfdc_account_source"}],["$","small",null,{"children":"view"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","sources",{"children":[["$","code",null,{"children":["$","a",null,{"children":"sources"}]}],"Â "]}],["$","span","mnpi",{"children":[["$","code",null,{"children":["$","a",null,{"children":"mnpi"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"view"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PREP.sfdc.sfdc_account_source"}]]}]]]}]}],null]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"Source model for SFDC Accounts"}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"VIEW","schema":"SFDC","name":"SFDC_ACCOUNT_SOURCE","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"ACCOUNT_ID":{"type":"TEXT","index":1,"name":"account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","sfdc"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"account_id"},"ACCOUNT_NAME":{"type":"TEXT","index":2,"name":"account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","sfdc"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"account_name"},"ACCOUNT_ID_18":{"type":"TEXT","index":3,"name":"account_id_18","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_id_18"},"MASTER_RECORD_ID":{"type":"TEXT","index":4,"name":"master_record_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"master_record_id"},"OWNER_ID":{"type":"TEXT","index":5,"name":"owner_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"owner_id"},"PARENT_ID":{"type":"TEXT","index":6,"name":"parent_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"PRIMARY_CONTACT_ID":{"type":"TEXT","index":7,"name":"primary_contact_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"primary_contact_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":8,"name":"record_type_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"record_type_id"},"ULTIMATE_PARENT_ID":{"type":"TEXT","index":9,"name":"ultimate_parent_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_id"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":10,"name":"partner_vat_tax_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_vat_tax_id"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":11,"name":"gitlab_com_user","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_user"},"ACCOUNT_MANAGER":{"type":"TEXT","index":12,"name":"account_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_manager"},"ACCOUNT_OWNER":{"type":"TEXT","index":13,"name":"account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner"},"ACCOUNT_OWNER_TEAM":{"type":"TEXT","index":14,"name":"account_owner_team","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner_team"},"PROPOSED_ACCOUNT_OWNER":{"type":"TEXT","index":15,"name":"proposed_account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"proposed_account_owner"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":16,"name":"business_development_rep","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":17,"name":"dedicated_service_engineer","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dedicated_service_engineer"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":18,"name":"sales_development_rep","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_development_rep"},"TECHNICAL_ACCOUNT_MANAGER_ID":{"type":"TEXT","index":19,"name":"technical_account_manager_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager_id"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":20,"name":"ultimate_parent_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_id"},"ULTIMATE_PARENT_ACCOUNT_NAME":{"type":"TEXT","index":21,"name":"ultimate_parent_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_name"},"ACCOUNT_TYPE":{"type":"TEXT","index":22,"name":"account_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_type"},"DF_INDUSTRY":{"type":"TEXT","index":23,"name":"df_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"df_industry"},"INDUSTRY":{"type":"TEXT","index":24,"name":"industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"industry"},"SUB_INDUSTRY":{"type":"TEXT","index":25,"name":"sub_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sub_industry"},"PARENT_ACCOUNT_INDUSTRY_HIERARCHY":{"type":"TEXT","index":26,"name":"parent_account_industry_hierarchy","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_account_industry_hierarchy"},"ACCOUNT_TIER":{"type":"TEXT","index":27,"name":"account_tier","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":28,"name":"account_tier_notes","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_tier_notes"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":29,"name":"customer_since_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_since_date"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":30,"name":"carr_this_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"carr_this_account"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":31,"name":"carr_account_family","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"carr_account_family"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":32,"name":"next_renewal_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"next_renewal_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":33,"name":"license_utilization","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":34,"name":"support_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":35,"name":"named_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"named_account"},"BILLING_COUNTRY":{"type":"TEXT","index":36,"name":"billing_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_country"},"BILLING_COUNTRY_CODE":{"type":"TEXT","index":37,"name":"billing_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_country_code"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":38,"name":"billing_postal_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_postal_code"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":39,"name":"is_sdr_target_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","sfdc"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_sdr_target_account"},"LAM":{"type":"FLOAT","index":40,"name":"lam","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lam"},"LAM_DEV_COUNT":{"type":"FLOAT","index":41,"name":"lam_dev_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lam_dev_count"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":42,"name":"is_jihu_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_jihu_account"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"TIMESTAMP_TZ","index":43,"name":"partners_signed_contract_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partners_signed_contract_date"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":44,"name":"partner_account_iban_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_account_iban_number"},"PARTNER_TYPE":{"type":"TEXT","index":45,"name":"partner_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":46,"name":"partner_status","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_status"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":47,"name":"bdr_prospecting_status","comment":null,"description":"Indicates whether the account is actively being prospected by a BDR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bdr_prospecting_status"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":48,"name":"is_first_order_available","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_order_available"},"ZI_TECHNOLOGIES":{"type":"TEXT","index":49,"name":"zi_technologies","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zi_technologies"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":50,"name":"technical_account_manager_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager_date"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":51,"name":"gitlab_customer_success_project","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_customer_success_project"},"FORBES_2000_RANK":{"type":"TEXT","index":52,"name":"forbes_2000_rank","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"forbes_2000_rank"},"POTENTIAL_USERS":{"type":"FLOAT","index":53,"name":"potential_users","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"potential_users"},"NUMBER_OF_LICENSES_THIS_ACCOUNT":{"type":"FLOAT","index":54,"name":"number_of_licenses_this_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"number_of_licenses_this_account"},"DECISION_MAKER_COUNT_LINKEDIN":{"type":"FLOAT","index":55,"name":"decision_maker_count_linkedin","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"decision_maker_count_linkedin"},"NUMBER_OF_EMPLOYEES":{"type":"NUMBER","index":56,"name":"number_of_employees","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"number_of_employees"},"ACCOUNT_PHONE":{"type":"TEXT","index":57,"name":"account_phone","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_phone"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":58,"name":"zoominfo_account_phone","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoominfo_account_phone"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":59,"name":"admin_manual_source_number_of_employees","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":60,"name":"admin_manual_source_account_address","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"admin_manual_source_account_address"},"ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":61,"name":"account_sales_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_sales_segment"},"ACCOUNT_GEO":{"type":"TEXT","index":62,"name":"account_geo","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_geo"},"ACCOUNT_REGION":{"type":"TEXT","index":63,"name":"account_region","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_region"},"ACCOUNT_AREA":{"type":"TEXT","index":64,"name":"account_area","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_area"},"ACCOUNT_TERRITORY":{"type":"TEXT","index":65,"name":"account_territory","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_territory"},"ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":66,"name":"account_business_unit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_business_unit"},"ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":67,"name":"account_role_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_role_type"},"ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":68,"name":"account_employee_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_employee_count"},"ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":69,"name":"account_max_family_employee","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_max_family_employee"},"ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":70,"name":"account_upa_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_upa_country"},"ACCOUNT_UPA_STATE":{"type":"TEXT","index":71,"name":"account_upa_state","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_upa_state"},"ACCOUNT_UPA_CITY":{"type":"TEXT","index":72,"name":"account_upa_city","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_upa_city"},"ACCOUNT_UPA_STREET":{"type":"TEXT","index":73,"name":"account_upa_street","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_upa_street"},"ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":74,"name":"account_upa_postal_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_upa_postal_code"},"HEALTH_NUMBER":{"type":"FLOAT","index":75,"name":"health_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":76,"name":"health_score_color","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"health_score_color"},"COUNT_ACTIVE_SUBSCRIPTION_CHARGES":{"type":"FLOAT","index":77,"name":"count_active_subscription_charges","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_active_subscription_charges"},"COUNT_ACTIVE_SUBSCRIPTIONS":{"type":"FLOAT","index":78,"name":"count_active_subscriptions","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_active_subscriptions"},"COUNT_BILLING_ACCOUNTS":{"type":"FLOAT","index":79,"name":"count_billing_accounts","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_billing_accounts"},"COUNT_LICENSED_USERS":{"type":"FLOAT","index":80,"name":"count_licensed_users","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_licensed_users"},"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES":{"type":"FLOAT","index":81,"name":"count_of_new_business_won_opportunities","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_of_new_business_won_opportunities"},"COUNT_OPEN_RENEWAL_OPPORTUNITIES":{"type":"FLOAT","index":82,"name":"count_open_renewal_opportunities","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_open_renewal_opportunities"},"COUNT_OPPORTUNITIES":{"type":"FLOAT","index":83,"name":"count_opportunities","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_opportunities"},"COUNT_PRODUCTS_PURCHASED":{"type":"FLOAT","index":84,"name":"count_products_purchased","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_products_purchased"},"COUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":85,"name":"count_won_opportunities","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_won_opportunities"},"COUNT_CONCURRENT_EE_SUBSCRIPTIONS":{"type":"FLOAT","index":86,"name":"count_concurrent_ee_subscriptions","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_concurrent_ee_subscriptions"},"COUNT_CE_INSTANCES":{"type":"FLOAT","index":87,"name":"count_ce_instances","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_ce_instances"},"COUNT_ACTIVE_CE_USERS":{"type":"FLOAT","index":88,"name":"count_active_ce_users","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_active_ce_users"},"COUNT_OPEN_OPPORTUNITIES":{"type":"FLOAT","index":89,"name":"count_open_opportunities","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_open_opportunities"},"COUNT_USING_CE":{"type":"BOOLEAN","index":90,"name":"count_using_ce","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"count_using_ce"},"ABM_TIER":{"type":"TEXT","index":91,"name":"abm_tier","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier"},"GTM_STRATEGY":{"type":"TEXT","index":92,"name":"gtm_strategy","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_strategy"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":93,"name":"gtm_acceleration_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":94,"name":"gtm_account_based_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":95,"name":"gtm_account_centric_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_account_centric_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":96,"name":"abm_tier_1_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":97,"name":"abm_tier_2_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":98,"name":"abm_tier_3_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_3_date"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":99,"name":"demandbase_account_list","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":100,"name":"demandbase_intent","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":101,"name":"demandbase_page_views","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":102,"name":"demandbase_score","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":103,"name":"demandbase_sessions","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":104,"name":"demandbase_trending_offsite_intent","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":105,"name":"demandbase_trending_onsite_engagement","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_trending_onsite_engagement"},"ULTIMATE_PARENT_SALES_SEGMENT":{"type":"TEXT","index":106,"name":"ultimate_parent_sales_segment","comment":null,"description":"Sales segment of the parent of the account hierarchy.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_sales_segment"},"DIVISION_SALES_SEGMENT":{"type":"TEXT","index":107,"name":"division_sales_segment","comment":null,"description":"Sales segment of the specific account.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"division_sales_segment"},"ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":108,"name":"account_owner_user_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner_user_segment"},"SALES_SEGMENT":{"type":"TEXT","index":109,"name":"sales_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_segment"},"ACCOUNT_SEGMENT":{"type":"TEXT","index":110,"name":"account_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_segment"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"is_locally_managed_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":112,"name":"is_strategic_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_strategic_account"},"NEXT_FY_ACCOUNT_OWNER_TEMP":{"type":"TEXT","index":113,"name":"next_fy_account_owner_temp","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"next_fy_account_owner_temp"},"NEXT_FY_PLANNING_NOTES_TEMP":{"type":"TEXT","index":114,"name":"next_fy_planning_notes_temp","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"next_fy_planning_notes_temp"},"PARTNER_TRACK":{"type":"TEXT","index":115,"name":"partner_track","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":116,"name":"partners_partner_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":117,"name":"gitlab_partner_program","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_partner_program"},"IS_FOCUS_PARTNER":{"type":"BOOLEAN","index":118,"name":"IS_FOCUS_PARTNER","comment":null,"display_name":"is_focus_partner"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":119,"name":"zoom_info_company_name","comment":null,"description":"The name of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":120,"name":"zoom_info_company_revenue","comment":null,"description":"The estimated revenue of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":121,"name":"zoom_info_company_employee_count","comment":null,"description":"The number of employees of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":122,"name":"zoom_info_company_industry","comment":null,"description":"The the primary industry of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":123,"name":"zoom_info_company_city","comment":null,"description":"The city of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":124,"name":"zoom_info_company_state_province","comment":null,"description":"The state or province of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":125,"name":"zoom_info_company_country","comment":null,"description":"The country of the company matched by the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_country"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":126,"name":"is_excluded_from_zoom_info_enrich","comment":null,"description":"A flag to indicate if the account should be included in the Zoom Info enrichment process.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_excluded_from_zoom_info_enrich"},"ZOOM_INFO_WEBSITE":{"type":"TEXT","index":127,"name":"zoom_info_website","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_website"},"ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":128,"name":"zoom_info_company_other_domains","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_other_domains"},"ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":129,"name":"zoom_info_dozisf_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_dozisf_zi_id"},"ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":130,"name":"zoom_info_parent_company_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_parent_company_zi_id"},"ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":131,"name":"zoom_info_parent_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_parent_company_name"},"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":132,"name":"zoom_info_ultimate_parent_company_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_ultimate_parent_company_zi_id"},"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":133,"name":"zoom_info_ultimate_parent_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_ultimate_parent_company_name"},"ZOOM_INFO_NUMBER_OF_DEVELOPERS":{"type":"FLOAT","index":134,"name":"zoom_info_number_of_developers","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_number_of_developers"},"ZOOM_INFO_TOTAL_FUNDING":{"type":"TEXT","index":135,"name":"zoom_info_total_funding","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_total_funding"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":136,"name":"is_key_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_key_account"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":137,"name":"gs_first_value_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":138,"name":"gs_last_csm_activity_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_last_csm_activity_date"},"EOA_SENTIMENT":{"type":"TEXT","index":139,"name":"eoa_sentiment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":140,"name":"gs_health_user_engagement","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":141,"name":"gs_health_cd","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":142,"name":"gs_health_devsecops","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":143,"name":"gs_health_ci","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":144,"name":"gs_health_scm","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":145,"name":"risk_impact","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":146,"name":"risk_reason","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":147,"name":"last_timeline_at_risk_update","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":148,"name":"last_at_risk_update_comments","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_at_risk_update_comments"},"CREATED_BY_ID":{"type":"TEXT","index":149,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"CREATED_DATE":{"type":"TIMESTAMP_TZ","index":150,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"IS_DELETED":{"type":"BOOLEAN","index":151,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"LAST_MODIFIED_BY_ID":{"type":"TEXT","index":152,"name":"LAST_MODIFIED_BY_ID","comment":null,"display_name":"last_modified_by_id"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":153,"name":"LAST_MODIFIED_DATE","comment":null,"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":154,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_TZ","index":155,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"SYSTEMMODSTAMP":{"type":"TIMESTAMP_TZ","index":156,"name":"SYSTEMMODSTAMP","comment":null,"display_name":"systemmodstamp"}},"stats":{"has_stats":{"id":"has_stats","label":"Has Stats?","value":false,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.sfdc_account_source","raw_sql":"$10","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.sales_segment_cleaning","macro.gitlab_snowflake.mask_model"],"nodes":["source.gitlab_snowflake.salesforce.account"]},"config":{"enabled":true,"alias":null,"schema":"sfdc","database":"PREP","tags":["sources","mnpi"],"meta":{},"materialized":"view","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sfdc","fqn":["gitlab_snowflake","sources","sfdc","sfdc_account_source"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"sources/sfdc/sfdc_account_source.sql","original_file_path":"models/sources/sfdc/sfdc_account_source.sql","name":"sfdc_account_source","alias":"sfdc_account_source","checksum":{"name":"sha256","checksum":"eb152dc64e1759387331420a34ae89212d0734a722c857c28949ea876c1297ef"},"tags":["sources","mnpi"],"refs":[],"sources":[["salesforce","account"]],"metrics":[],"description":"Source model for SFDC Accounts","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/sources/sfdc/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/sources/sfdc/sfdc_account_source.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sfdc","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"view","tags":["mnpi"]},"created_at":1689033749.548663,"compiled_sql":"$11","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sfdc.sfdc_account_source","label":"sfdc_account_source"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"SENSITIVE","name":"DIM_MARKETING_CONTACT","database":"PREP","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_MARKETING_CONTACT_ID":{"type":"TEXT","index":1,"name":"dim_marketing_contact_id","comment":null,"description":"A primary key for the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_marketing_contact_id"},"EMAIL_ADDRESS":{"type":"TEXT","index":2,"name":"email_address","comment":null,"description":"Email address for the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"email_address"},"FIRST_NAME":{"type":"TEXT","index":3,"name":"first_name","comment":null,"description":"First name of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_name"},"LAST_NAME":{"type":"TEXT","index":4,"name":"last_name","comment":null,"description":"Last name of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_name"},"GITLAB_USER_NAME":{"type":"TEXT","index":5,"name":"gitlab_user_name","comment":null,"description":"Gitlab.com user name of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_user_name"},"COMPANY_NAME":{"type":"TEXT","index":6,"name":"company_name","comment":null,"description":"Company of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_name"},"JOB_TITLE":{"type":"TEXT","index":7,"name":"job_title","comment":null,"description":"Job title of the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"job_title"},"IT_JOB_TITLE_HIERARCHY":{"type":"TEXT","index":8,"name":"IT_JOB_TITLE_HIERARCHY","comment":null,"display_name":"it_job_title_hierarchy"},"COUNTRY":{"type":"TEXT","index":9,"name":"country","comment":null,"description":"Country where marketing contacted is located","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"country"},"SFDC_PARENT_SALES_SEGMENT":{"type":"TEXT","index":10,"name":"sfdc_parent_sales_segment","comment":null,"description":"Sales segment of the CRM account related to the marketing contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_parent_sales_segment"},"SFDC_PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":11,"name":"SFDC_PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"sfdc_parent_crm_account_region"},"MARKETO_LEAD_ID":{"type":"FLOAT","index":12,"name":"MARKETO_LEAD_ID","comment":null,"display_name":"marketo_lead_id"},"IS_MARKETO_LEAD":{"type":"BOOLEAN","index":13,"name":"IS_MARKETO_LEAD","comment":null,"display_name":"is_marketo_lead"},"IS_MARKETO_EMAIL_HARD_BOUNCED":{"type":"BOOLEAN","index":14,"name":"IS_MARKETO_EMAIL_HARD_BOUNCED","comment":null,"display_name":"is_marketo_email_hard_bounced"},"MARKETO_EMAIL_HARD_BOUNCED_DATE":{"type":"DATE","index":15,"name":"MARKETO_EMAIL_HARD_BOUNCED_DATE","comment":null,"display_name":"marketo_email_hard_bounced_date"},"IS_MARKETO_UNSUBSCRIBED":{"type":"BOOLEAN","index":16,"name":"IS_MARKETO_UNSUBSCRIBED","comment":null,"display_name":"is_marketo_unsubscribed"},"IS_MARKETO_OPTED_IN":{"type":"BOOLEAN","index":17,"name":"IS_MARKETO_OPTED_IN","comment":null,"display_name":"is_marketo_opted_in"},"HAS_MARKETO_UNSUBSCRIBED":{"type":"BOOLEAN","index":18,"name":"HAS_MARKETO_UNSUBSCRIBED","comment":null,"display_name":"has_marketo_unsubscribed"},"MARKETO_COMPLIANCE_SEGMENT_VALUE":{"type":"TEXT","index":19,"name":"marketo_compliance_segment_value","comment":null,"description":"Holds one of 4 values saying if they are compliant to be emailed or not","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"marketo_compliance_segment_value"},"IS_PQL_MARKETO":{"type":"BOOLEAN","index":20,"name":"IS_PQL_MARKETO","comment":null,"display_name":"is_pql_marketo"},"IS_PAID_TIER_MARKETO":{"type":"BOOLEAN","index":21,"name":"IS_PAID_TIER_MARKETO","comment":null,"display_name":"is_paid_tier_marketo"},"IS_PTPT_CONTACT_MARKETO":{"type":"BOOLEAN","index":22,"name":"IS_PTPT_CONTACT_MARKETO","comment":null,"display_name":"is_ptpt_contact_marketo"},"IS_PTP_CONTACT_MARKETO":{"type":"BOOLEAN","index":23,"name":"IS_PTP_CONTACT_MARKETO","comment":null,"display_name":"is_ptp_contact_marketo"},"IS_IMPACTED_BY_USER_LIMIT_MARKETO":{"type":"BOOLEAN","index":24,"name":"IS_IMPACTED_BY_USER_LIMIT_MARKETO","comment":null,"display_name":"is_impacted_by_user_limit_marketo"},"IS_CURRENTLY_IN_TRIAL_MARKETO":{"type":"BOOLEAN","index":25,"name":"IS_CURRENTLY_IN_TRIAL_MARKETO","comment":null,"display_name":"is_currently_in_trial_marketo"},"TRIAL_START_DATE_MARKETO":{"type":"DATE","index":26,"name":"TRIAL_START_DATE_MARKETO","comment":null,"display_name":"trial_start_date_marketo"},"TRIAL_END_DATE_MARKETO":{"type":"DATE","index":27,"name":"TRIAL_END_DATE_MARKETO","comment":null,"display_name":"trial_end_date_marketo"},"IS_SFDC_LEAD_CONTACT":{"type":"BOOLEAN","index":28,"name":"is_sfdc_lead_contact","comment":null,"description":"Flags whether or not marketing contact is a Salesforce contact/lead","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sfdc_lead_contact"},"SFDC_RECORD_ID":{"type":"TEXT","index":29,"name":"SFDC_RECORD_ID","comment":null,"display_name":"sfdc_record_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":30,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"SFDC_LEAD_CONTACT":{"type":"TEXT","index":31,"name":"sfdc_lead_contact","comment":null,"description":"Lists whether marketing contact is a Lead or a Contact in Salesforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_lead_contact"},"MOBILE_PHONE":{"type":"TEXT","index":32,"name":"MOBILE_PHONE","comment":null,"display_name":"mobile_phone"},"SFDC_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":33,"name":"sfdc_created_date","comment":null,"description":"Date that the Salesforce record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_created_date"},"IS_SFDC_OPTED_OUT":{"type":"BOOLEAN","index":34,"name":"is_sfdc_opted_out","comment":null,"description":"Flags whether or not contact is opted out of Salesforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sfdc_opted_out"},"IS_GITLAB_DOTCOM_USER":{"type":"BOOLEAN","index":35,"name":"IS_GITLAB_DOTCOM_USER","comment":null,"display_name":"is_gitlab_dotcom_user"},"GITLAB_DOTCOM_USER_ID":{"type":"NUMBER","index":36,"name":"GITLAB_DOTCOM_USER_ID","comment":null,"display_name":"gitlab_dotcom_user_id"},"GITLAB_DOTCOM_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":37,"name":"GITLAB_DOTCOM_CREATED_DATE","comment":null,"display_name":"gitlab_dotcom_created_date"},"GITLAB_DOTCOM_CONFIRMED_DATE":{"type":"TIMESTAMP_NTZ","index":38,"name":"GITLAB_DOTCOM_CONFIRMED_DATE","comment":null,"display_name":"gitlab_dotcom_confirmed_date"},"GITLAB_DOTCOM_ACTIVE_STATE":{"type":"TEXT","index":39,"name":"GITLAB_DOTCOM_ACTIVE_STATE","comment":null,"display_name":"gitlab_dotcom_active_state"},"GITLAB_DOTCOM_LAST_LOGIN_DATE":{"type":"TIMESTAMP_NTZ","index":40,"name":"GITLAB_DOTCOM_LAST_LOGIN_DATE","comment":null,"display_name":"gitlab_dotcom_last_login_date"},"GITLAB_DOTCOM_EMAIL_OPTED_IN":{"type":"BOOLEAN","index":41,"name":"GITLAB_DOTCOM_EMAIL_OPTED_IN","comment":null,"display_name":"gitlab_dotcom_email_opted_in"},"DAYS_SINCE_SAAS_SIGNUP":{"type":"NUMBER","index":42,"name":"days_since_saas_signup","comment":null,"description":"Number of days since gitlab_com_confirmed_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_saas_signup"},"DAYS_SINCE_SAAS_SIGNUP_BUCKET":{"type":"TEXT","index":43,"name":"DAYS_SINCE_SAAS_SIGNUP_BUCKET","comment":null,"display_name":"days_since_saas_signup_bucket"},"IS_CUSTOMER_DB_USER":{"type":"BOOLEAN","index":44,"name":"is_customer_db_user","comment":null,"description":"Flags whether or not marketing contact is in Customer_DB","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_customer_db_user"},"CUSTOMER_DB_CUSTOMER_ID":{"type":"NUMBER","index":45,"name":"customer_db_customer_id","comment":null,"description":"Customer_DB user id of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_db_customer_id"},"CUSTOMER_DB_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":46,"name":"customer_db_created_date","comment":null,"description":"Date that Customer_db record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_db_created_date"},"CUSTOMER_DB_CONFIRMED_DATE":{"type":"TIMESTAMP_NTZ","index":47,"name":"customer_db_confirmed_date","comment":null,"description":"Date that Customer_db record was confirmed for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_db_confirmed_date"},"DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP":{"type":"NUMBER","index":48,"name":"days_since_self_managed_owner_signup","comment":null,"description":"Number of days since customer_db_confirmed_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_since_self_managed_owner_signup"},"DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP_BUCKET":{"type":"TEXT","index":49,"name":"DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP_BUCKET","comment":null,"display_name":"days_since_self_managed_owner_signup_bucket"},"IS_ZUORA_BILLING_CONTACT":{"type":"BOOLEAN","index":50,"name":"is_zuora_billing_contact","comment":null,"description":"Flags whether or not marketing contact is in Zuora","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zuora_billing_contact"},"ZUORA_CONTACT_ID":{"type":"TEXT","index":51,"name":"zuora_contact_id","comment":null,"description":"Zuora contact id of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_contact_id"},"ZUORA_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":52,"name":"zuora_created_date","comment":null,"description":"Date that Zuora record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_created_date"},"ZUORA_ACTIVE_STATE":{"type":"TEXT","index":53,"name":"zuora_active_state","comment":null,"description":"Lists if marketing contact is active in Zuora.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_active_state"},"DNC_LIST_RESULT":{"type":"TEXT","index":54,"name":"DNC_LIST_RESULT","comment":null,"display_name":"dnc_list_result"},"WIP_IS_VALID_EMAIL_ADDRESS":{"type":"BOOLEAN","index":55,"name":"WIP_IS_VALID_EMAIL_ADDRESS","comment":null,"display_name":"wip_is_valid_email_address"},"WIP_INVALID_EMAIL_ADDRESS_REASON":{"type":"TEXT","index":56,"name":"wip_invalid_email_address_reason","comment":null,"description":"Reason why the email address is invalid. Work in progress - full list of invalid emails is not loaded","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"wip_invalid_email_address_reason"},"CREATED_BY":{"type":"TEXT","index":57,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":58,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":59,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":60,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":61,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":62,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"is_gitlab_com_user":{"name":"is_gitlab_com_user","description":"Flags whether or not marketing contact is in Gitlab.com","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_gitlab_com_user"},"gitlab_com_user_id":{"name":"gitlab_com_user_id","description":"Gitlab.com user id of the marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_user_id"},"gitlab_com_created_date":{"name":"gitlab_com_created_date","description":"Date that the GitLab.com record was created for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_created_date"},"gitlab_com_confirmed_date":{"name":"gitlab_com_confirmed_date","description":"Date that the GitLab.com record was confirmed for marketing contact.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_confirmed_date"},"gitlab_com_active_state":{"name":"gitlab_com_active_state","description":"Lists whether marketing contact is active or not in GitLab.com. Can be 'active', 'blocked', 'deactivated'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_active_state"},"gitlab_com_last_login_date":{"name":"gitlab_com_last_login_date","description":"Most recent date that marketing contact logged into gitlab.com","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_last_login_date"},"gitlab_com_email_opted_in":{"name":"gitlab_com_email_opted_in","description":"Flags whether or not contact is opted out of Gitlab.com.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_email_opted_in"},"wip_is_email_address_valid":{"name":"wip_is_email_address_valid","description":"Flags if the email address is valid. Work in progress - full list of invalid emails is not loaded","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"wip_is_email_address_valid"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:10UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":1261721088,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_marketing_contact","raw_sql":"$13","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.days_buckets","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_lead_source","model.gitlab_snowflake.sfdc_lead_source","model.gitlab_snowflake.sfdc_contact_source","model.gitlab_snowflake.sfdc_contact_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.marketo_lead_source","model.gitlab_snowflake.marketo_lead_source","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.prep_sales_segment","model.gitlab_snowflake.prep_sales_segment","model.gitlab_snowflake.prep_crm_person","model.gitlab_snowflake.prep_crm_person","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.gitlab_dotcom_users_source","model.gitlab_snowflake.customers_db_customers_source","model.gitlab_snowflake.customers_db_customers_source","model.gitlab_snowflake.zuora_contact_source","model.gitlab_snowflake.zuora_contact_source","model.gitlab_snowflake.zuora_account_source","model.gitlab_snowflake.zuora_account_source","model.gitlab_snowflake.driveload_marketing_dnc_list_source","model.gitlab_snowflake.driveload_marketing_dnc_list_source"]},"config":{"enabled":true,"alias":null,"schema":"sensitive","database":"PREP","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PREP","schema":"sensitive","fqn":["gitlab_snowflake","common","sensitive","dim_marketing_contact"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/sensitive/dim_marketing_contact.sql","original_file_path":"models/common/sensitive/dim_marketing_contact.sql","name":"dim_marketing_contact","alias":"dim_marketing_contact","checksum":{"name":"sha256","checksum":"2cf8e313c4a64673b3780dac0bcffd6f46d21244d42c4263aba32674d460b42c"},"tags":[],"refs":[["sfdc_lead_source"],["sfdc_lead_source"],["sfdc_contact_source"],["sfdc_contact_source"],["sfdc_account_source"],["sfdc_account_source"],["marketo_lead_source"],["marketo_lead_source"],["dim_crm_account"],["dim_crm_account"],["prep_sales_segment"],["prep_sales_segment"],["prep_crm_person"],["prep_crm_person"],["gitlab_dotcom_users_source"],["gitlab_dotcom_users_source"],["customers_db_customers_source"],["customers_db_customers_source"],["zuora_contact_source"],["zuora_contact_source"],["zuora_account_source"],["zuora_account_source"],["driveload_marketing_dnc_list_source"],["driveload_marketing_dnc_list_source"]],"sources":[],"metrics":[],"description":"A dimension table for marketing contacts, combining contacts from GitLab.com, Salesforce, CustomerDB, and Zuora Sources.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/sensitive/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/sensitive/dim_marketing_contact.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PREP_DATABASE') }}","schema":"sensitive","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","secure":true},"created_at":1689033756.211765,"compiled_sql":"$14","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PREP\".sensitive.dim_marketing_contact","label":"dim_marketing_contact"},{"metadata":{"type":"VIEW","schema":"RESTRICTED_SAFE_WORKSPACE_FINANCE","name":"PREP_CHARGE_CENTRAL_SANDBOX","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SUBSCRIPTION_NAME":{"type":"TEXT","index":1,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"DIM_CHARGE_ID":{"type":"TEXT","index":7,"name":"DIM_CHARGE_ID","comment":null,"display_name":"dim_charge_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":8,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":9,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":10,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":11,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":12,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":13,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"EFFECTIVE_START_DATE_ID":{"type":"NUMBER","index":14,"name":"EFFECTIVE_START_DATE_ID","comment":null,"display_name":"effective_start_date_id"},"EFFECTIVE_END_DATE_ID":{"type":"NUMBER","index":15,"name":"EFFECTIVE_END_DATE_ID","comment":null,"display_name":"effective_end_date_id"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":16,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"RATE_PLAN_NAME":{"type":"TEXT","index":17,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":18,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"RATE_PLAN_CHARGE_DESCRIPTION":{"type":"TEXT","index":19,"name":"RATE_PLAN_CHARGE_DESCRIPTION","comment":null,"display_name":"rate_plan_charge_description"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":20,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"DISCOUNT_LEVEL":{"type":"TEXT","index":21,"name":"DISCOUNT_LEVEL","comment":null,"display_name":"discount_level"},"CHARGE_TYPE":{"type":"TEXT","index":22,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"RATE_PLAN_CHARGE_AMENDEMENT_TYPE":{"type":"TEXT","index":23,"name":"RATE_PLAN_CHARGE_AMENDEMENT_TYPE","comment":null,"display_name":"rate_plan_charge_amendement_type"},"UNIT_OF_MEASURE":{"type":"TEXT","index":24,"name":"UNIT_OF_MEASURE","comment":null,"display_name":"unit_of_measure"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":25,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"MONTHS_OF_FUTURE_BILLINGS":{"type":"NUMBER","index":26,"name":"MONTHS_OF_FUTURE_BILLINGS","comment":null,"display_name":"months_of_future_billings"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":27,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":28,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"EFFECTIVE_START_DATE":{"type":"DATE","index":29,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":30,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":31,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":32,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGED_THROUGH_DATE":{"type":"DATE","index":33,"name":"CHARGED_THROUGH_DATE","comment":null,"display_name":"charged_through_date"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":34,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":35,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"CHARGE_TERM":{"type":"NUMBER","index":36,"name":"CHARGE_TERM","comment":null,"display_name":"charge_term"},"MRR":{"type":"FLOAT","index":37,"name":"MRR","comment":null,"display_name":"mrr"},"PREVIOUS_MRR_CALC":{"type":"FLOAT","index":38,"name":"PREVIOUS_MRR_CALC","comment":null,"display_name":"previous_mrr_calc"},"PREVIOUS_MRR":{"type":"FLOAT","index":39,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR_CALC":{"type":"FLOAT","index":40,"name":"DELTA_MRR_CALC","comment":null,"display_name":"delta_mrr_calc"},"DELTA_MRR":{"type":"FLOAT","index":41,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"DELTA_MRC":{"type":"FLOAT","index":42,"name":"DELTA_MRC","comment":null,"display_name":"delta_mrc"},"ARR":{"type":"FLOAT","index":43,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":44,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARC":{"type":"FLOAT","index":45,"name":"DELTA_ARC","comment":null,"display_name":"delta_arc"},"DELTA_ARR":{"type":"FLOAT","index":46,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":47,"name":"QUANTITY","comment":null,"display_name":"quantity"},"PREVIOUS_QUANTITY_CALC":{"type":"FLOAT","index":48,"name":"PREVIOUS_QUANTITY_CALC","comment":null,"display_name":"previous_quantity_calc"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":49,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY_CALC":{"type":"FLOAT","index":50,"name":"DELTA_QUANTITY_CALC","comment":null,"display_name":"delta_quantity_calc"},"DELTA_QUANTITY":{"type":"FLOAT","index":51,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"TCV":{"type":"FLOAT","index":52,"name":"TCV","comment":null,"display_name":"tcv"},"DELTA_TCV":{"type":"FLOAT","index":53,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":54,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":55,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"CREATED_BY":{"type":"TEXT","index":56,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":57,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":58,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":59,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":60,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":61,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"has_stats":{"id":"has_stats","label":"Has Stats?","value":false,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_charge_central_sandbox","raw_sql":"$15","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.zuora_central_sandbox_account_source","model.gitlab_snowflake.zuora_central_sandbox_account_source","model.gitlab_snowflake.zuora_central_sandbox_rate_plan_source","model.gitlab_snowflake.zuora_central_sandbox_rate_plan_source","model.gitlab_snowflake.zuora_central_sandbox_rate_plan_charge_source","model.gitlab_snowflake.zuora_central_sandbox_rate_plan_charge_source","model.gitlab_snowflake.zuora_central_sandbox_subscription_source","model.gitlab_snowflake.zuora_central_sandbox_subscription_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_workspace_finance","database":"PROD","tags":["workspace","safe","mnpi"],"meta":{},"materialized":"view","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_finance","fqn":["gitlab_snowflake","workspaces","workspace_finance","restricted_safe","prep_charge_central_sandbox"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_finance/restricted_safe/prep_charge_central_sandbox.sql","original_file_path":"models/workspaces/workspace_finance/restricted_safe/prep_charge_central_sandbox.sql","name":"prep_charge_central_sandbox","alias":"prep_charge_central_sandbox","checksum":{"name":"sha256","checksum":"bf393a03806624f791bd7ad929e037813beb1a810999a12223b00b6c29567ef8"},"tags":["workspace","safe","mnpi"],"refs":[["map_merged_crm_account"],["map_merged_crm_account"],["sfdc_account_source"],["sfdc_account_source"],["zuora_central_sandbox_account_source"],["zuora_central_sandbox_account_source"],["zuora_central_sandbox_rate_plan_source"],["zuora_central_sandbox_rate_plan_source"],["zuora_central_sandbox_rate_plan_charge_source"],["zuora_central_sandbox_rate_plan_charge_source"],["zuora_central_sandbox_subscription_source"],["zuora_central_sandbox_subscription_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_manual_journal_entry_source"],["zuora_revenue_manual_journal_entry_source"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_finance/restricted_safe/prep_charge_central_sandbox.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"view","tags":["mnpi"],"secure":true},"created_at":1689033687.6080577,"compiled_sql":"$16","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_finance.prep_charge_central_sandbox","label":"prep_charge_central_sandbox"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_ALLIANCE_TYPE_SCD","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_ALLIANCE_TYPE_ID":{"type":"TEXT","index":1,"name":"dim_alliance_type_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_alliance_type_id"},"ALLIANCE_TYPE_NAME":{"type":"TEXT","index":2,"name":"ALLIANCE_TYPE_NAME","comment":null,"display_name":"alliance_type_name"},"ALLIANCE_TYPE_SHORT_NAME":{"type":"TEXT","index":3,"name":"ALLIANCE_TYPE_SHORT_NAME","comment":null,"display_name":"alliance_type_short_name"},"VALID_FROM":{"type":"DATE","index":4,"name":"VALID_FROM","comment":null,"display_name":"valid_from"},"VALID_TO":{"type":"DATE","index":5,"name":"VALID_TO","comment":null,"display_name":"valid_to"},"IS_CURRENTLY_VALID":{"type":"BOOLEAN","index":6,"name":"IS_CURRENTLY_VALID","comment":null,"display_name":"is_currently_valid"},"CREATED_BY":{"type":"TEXT","index":7,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":8,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":9,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":10,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":11,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":12,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:04UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":29184,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_alliance_type_scd","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.alliance_partner","macro.gitlab_snowflake.alliance_partner_short","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_alliance_type_scd"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_alliance_type_scd.sql","original_file_path":"models/common_prep/prep_alliance_type_scd.sql","name":"prep_alliance_type_scd","alias":"prep_alliance_type_scd","checksum":{"name":"sha256","checksum":"4759fe42eecf71ea055a45bc886ec12faf9761d525cb98ab0f4a564c11374985"},"tags":["mnpi_exception"],"refs":[["sfdc_opportunity_source"],["sfdc_opportunity_source"],["sfdc_account_source"],["sfdc_account_source"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"Creates a base view with generated keys for the alliance type shared dimension and references in facts.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_alliance_type_scd.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033756.3981383,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_alliance_type_scd","label":"prep_alliance_type_scd"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_PREP","name":"PREP_CRM_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"account id from SFDC identifing the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_parent_crm_account_id","comment":null,"description":"ultimate parent account id","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_crm_account_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":3,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"merged_to_account_id","comment":null,"description":"for deleted accounts this is the SFDC account they were merged to","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merged_to_account_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":5,"name":"record_type_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"record_type_id"},"CRM_ACCOUNT_OWNER_ID":{"type":"TEXT","index":6,"name":"CRM_ACCOUNT_OWNER_ID","comment":null,"display_name":"crm_account_owner_id"},"PROPOSED_CRM_ACCOUNT_OWNER_ID":{"type":"TEXT","index":7,"name":"PROPOSED_CRM_ACCOUNT_OWNER_ID","comment":null,"display_name":"proposed_crm_account_owner_id"},"TECHNICAL_ACCOUNT_MANAGER_ID":{"type":"TEXT","index":8,"name":"TECHNICAL_ACCOUNT_MANAGER_ID","comment":null,"display_name":"technical_account_manager_id"},"MASTER_RECORD_ID":{"type":"TEXT","index":9,"name":"MASTER_RECORD_ID","comment":null,"display_name":"master_record_id"},"DIM_CRM_PERSON_PRIMARY_CONTACT_ID":{"type":"TEXT","index":10,"name":"DIM_CRM_PERSON_PRIMARY_CONTACT_ID","comment":null,"display_name":"dim_crm_person_primary_contact_id"},"ACCOUNT_OWNER":{"type":"TEXT","index":11,"name":"account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner"},"PROPOSED_CRM_ACCOUNT_OWNER":{"type":"TEXT","index":12,"name":"PROPOSED_CRM_ACCOUNT_OWNER","comment":null,"display_name":"proposed_crm_account_owner"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":13,"name":"technical_account_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager"},"CRM_ACCOUNT_OWNER_SALES_SEGMENT":{"type":"TEXT","index":14,"name":"CRM_ACCOUNT_OWNER_SALES_SEGMENT","comment":null,"display_name":"crm_account_owner_sales_segment"},"CRM_ACCOUNT_OWNER_GEO":{"type":"TEXT","index":15,"name":"CRM_ACCOUNT_OWNER_GEO","comment":null,"display_name":"crm_account_owner_geo"},"CRM_ACCOUNT_OWNER_REGION":{"type":"TEXT","index":16,"name":"CRM_ACCOUNT_OWNER_REGION","comment":null,"display_name":"crm_account_owner_region"},"CRM_ACCOUNT_OWNER_AREA":{"type":"TEXT","index":17,"name":"CRM_ACCOUNT_OWNER_AREA","comment":null,"display_name":"crm_account_owner_area"},"CRM_ACCOUNT_OWNER_SALES_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":18,"name":"CRM_ACCOUNT_OWNER_SALES_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"crm_account_owner_sales_segment_geo_region_area"},"CRM_ACCOUNT_OWNER_TITLE":{"type":"TEXT","index":19,"name":"CRM_ACCOUNT_OWNER_TITLE","comment":null,"display_name":"crm_account_owner_title"},"CRM_ACCOUNT_OWNER_ROLE":{"type":"TEXT","index":20,"name":"CRM_ACCOUNT_OWNER_ROLE","comment":null,"display_name":"crm_account_owner_role"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":21,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":22,"name":"crm_account_name","comment":null,"description":"account name from SFDC","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":23,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":24,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":25,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":26,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":27,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":28,"name":"PARENT_CRM_ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"parent_crm_account_business_unit"},"PARENT_CRM_ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":29,"name":"PARENT_CRM_ACCOUNT_ROLE_TYPE","comment":null,"display_name":"parent_crm_account_role_type"},"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":30,"name":"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"parent_crm_account_max_family_employee"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":31,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":32,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":33,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":34,"name":"PARENT_CRM_ACCOUNT_UPA_STREET","comment":null,"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":35,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"CRM_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":36,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"crm_account_employee_count"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":37,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":38,"name":"CRM_ACCOUNT_GTM_STRATEGY","comment":null,"display_name":"crm_account_gtm_strategy"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":39,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT_GROUPED","comment":null,"display_name":"parent_crm_account_sales_segment_grouped"},"PARENT_CRM_ACCOUNT_SEGMENT_REGION_STAMPED_GROUPED":{"type":"TEXT","index":40,"name":"PARENT_CRM_ACCOUNT_SEGMENT_REGION_STAMPED_GROUPED","comment":null,"display_name":"parent_crm_account_segment_region_stamped_grouped"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":41,"name":"CRM_ACCOUNT_FOCUS_ACCOUNT","comment":null,"display_name":"crm_account_focus_account"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":42,"name":"CRM_ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"crm_account_owner_user_segment"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":43,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_BILLING_COUNTRY_CODE":{"type":"TEXT","index":44,"name":"CRM_ACCOUNT_BILLING_COUNTRY_CODE","comment":null,"display_name":"crm_account_billing_country_code"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":45,"name":"CRM_ACCOUNT_TYPE","comment":null,"display_name":"crm_account_type"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":46,"name":"CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"crm_account_industry"},"CRM_ACCOUNT_SUB_INDUSTRY":{"type":"TEXT","index":47,"name":"CRM_ACCOUNT_SUB_INDUSTRY","comment":null,"display_name":"crm_account_sub_industry"},"CRM_ACCOUNT_OWNER":{"type":"TEXT","index":48,"name":"CRM_ACCOUNT_OWNER","comment":null,"display_name":"crm_account_owner"},"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND":{"type":"TEXT","index":49,"name":"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND","comment":null,"display_name":"crm_account_employee_count_band"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":50,"name":"PARTNER_VAT_TAX_ID","comment":null,"display_name":"partner_vat_tax_id"},"ACCOUNT_MANAGER":{"type":"TEXT","index":51,"name":"ACCOUNT_MANAGER","comment":null,"display_name":"account_manager"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":52,"name":"BUSINESS_DEVELOPMENT_REP","comment":null,"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":53,"name":"DEDICATED_SERVICE_ENGINEER","comment":null,"display_name":"dedicated_service_engineer"},"ACCOUNT_TIER":{"type":"TEXT","index":54,"name":"ACCOUNT_TIER","comment":null,"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":55,"name":"ACCOUNT_TIER_NOTES","comment":null,"display_name":"account_tier_notes"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":56,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":57,"name":"SUPPORT_LEVEL","comment":null,"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":58,"name":"NAMED_ACCOUNT","comment":null,"display_name":"named_account"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":59,"name":"BILLING_POSTAL_CODE","comment":null,"display_name":"billing_postal_code"},"PARTNER_TYPE":{"type":"TEXT","index":60,"name":"PARTNER_TYPE","comment":null,"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":61,"name":"PARTNER_STATUS","comment":null,"display_name":"partner_status"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":62,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":63,"name":"DEMANDBASE_ACCOUNT_LIST","comment":null,"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":64,"name":"DEMANDBASE_INTENT","comment":null,"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":65,"name":"DEMANDBASE_PAGE_VIEWS","comment":null,"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":66,"name":"DEMANDBASE_SCORE","comment":null,"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":67,"name":"DEMANDBASE_SESSIONS","comment":null,"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":68,"name":"DEMANDBASE_TRENDING_OFFSITE_INTENT","comment":null,"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":69,"name":"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT","comment":null,"display_name":"demandbase_trending_onsite_engagement"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":70,"name":"IS_LOCALLY_MANAGED_ACCOUNT","comment":null,"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":71,"name":"IS_STRATEGIC_ACCOUNT","comment":null,"display_name":"is_strategic_account"},"PARTNER_TRACK":{"type":"TEXT","index":72,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":73,"name":"PARTNERS_PARTNER_TYPE","comment":null,"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":74,"name":"GITLAB_PARTNER_PROGRAM","comment":null,"display_name":"gitlab_partner_program"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":75,"name":"ZOOM_INFO_COMPANY_NAME","comment":null,"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":76,"name":"ZOOM_INFO_COMPANY_REVENUE","comment":null,"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":77,"name":"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT","comment":null,"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":78,"name":"ZOOM_INFO_COMPANY_INDUSTRY","comment":null,"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":79,"name":"ZOOM_INFO_COMPANY_CITY","comment":null,"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":80,"name":"ZOOM_INFO_COMPANY_STATE_PROVINCE","comment":null,"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":81,"name":"ZOOM_INFO_COMPANY_COUNTRY","comment":null,"display_name":"zoom_info_company_country"},"ACCOUNT_PHONE":{"type":"TEXT","index":82,"name":"ACCOUNT_PHONE","comment":null,"display_name":"account_phone"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":83,"name":"ZOOMINFO_ACCOUNT_PHONE","comment":null,"display_name":"zoominfo_account_phone"},"ABM_TIER":{"type":"TEXT","index":84,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"HEALTH_NUMBER":{"type":"FLOAT","index":85,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":86,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":87,"name":"PARTNER_ACCOUNT_IBAN_NUMBER","comment":null,"display_name":"partner_account_iban_number"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":88,"name":"gitlab_com_user","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_user"},"CRM_ACCOUNT_ZI_TECHNOLOGIES":{"type":"TEXT","index":89,"name":"CRM_ACCOUNT_ZI_TECHNOLOGIES","comment":null,"display_name":"crm_account_zi_technologies"},"CRM_ACCOUNT_ZOOM_INFO_WEBSITE":{"type":"TEXT","index":90,"name":"CRM_ACCOUNT_ZOOM_INFO_WEBSITE","comment":null,"display_name":"crm_account_zoom_info_website"},"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":91,"name":"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS","comment":null,"display_name":"crm_account_zoom_info_company_other_domains"},"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":92,"name":"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_dozisf_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":93,"name":"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":94,"name":"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME","comment":null,"display_name":"crm_account_zoom_info_parent_company_name"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":95,"name":"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"crm_account_zoom_info_ultimate_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":96,"name":"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME","comment":null,"display_name":"crm_account_zoom_info_ultimate_parent_company_name"},"CRM_ACCOUNT_ZOOM_INFO_NUMBER_OF_DEVELOPERS":{"type":"FLOAT","index":97,"name":"CRM_ACCOUNT_ZOOM_INFO_NUMBER_OF_DEVELOPERS","comment":null,"display_name":"crm_account_zoom_info_number_of_developers"},"CRM_ACCOUNT_ZOOM_INFO_TOTAL_FUNDING":{"type":"TEXT","index":98,"name":"CRM_ACCOUNT_ZOOM_INFO_TOTAL_FUNDING","comment":null,"display_name":"crm_account_zoom_info_total_funding"},"FORBES_2000_RANK":{"type":"TEXT","index":99,"name":"FORBES_2000_RANK","comment":null,"display_name":"forbes_2000_rank"},"PARENT_ACCOUNT_INDUSTRY_HIERARCHY":{"type":"TEXT","index":100,"name":"PARENT_ACCOUNT_INDUSTRY_HIERARCHY","comment":null,"display_name":"parent_account_industry_hierarchy"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":101,"name":"SALES_DEVELOPMENT_REP","comment":null,"display_name":"sales_development_rep"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":102,"name":"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES","comment":null,"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":103,"name":"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS","comment":null,"display_name":"admin_manual_source_account_address"},"EOA_SENTIMENT":{"type":"TEXT","index":104,"name":"EOA_SENTIMENT","comment":null,"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":105,"name":"GS_HEALTH_USER_ENGAGEMENT","comment":null,"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":106,"name":"GS_HEALTH_CD","comment":null,"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":107,"name":"GS_HEALTH_DEVSECOPS","comment":null,"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":108,"name":"GS_HEALTH_CI","comment":null,"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":109,"name":"GS_HEALTH_SCM","comment":null,"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":110,"name":"RISK_IMPACT","comment":null,"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":111,"name":"RISK_REASON","comment":null,"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":112,"name":"LAST_TIMELINE_AT_RISK_UPDATE","comment":null,"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":113,"name":"LAST_AT_RISK_UPDATE_COMMENTS","comment":null,"display_name":"last_at_risk_update_comments"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":114,"name":"BDR_PROSPECTING_STATUS","comment":null,"display_name":"bdr_prospecting_status"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":115,"name":"IS_SDR_TARGET_ACCOUNT","comment":null,"display_name":"is_sdr_target_account"},"IS_RESELLER":{"type":"BOOLEAN","index":116,"name":"is_reseller","comment":null,"description":"Identify whether a crm_account is a reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_reseller"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":117,"name":"is_jihu_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_jihu_account"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":118,"name":"IS_FIRST_ORDER_AVAILABLE","comment":null,"display_name":"is_first_order_available"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":119,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"IS_ZI_JENKINS_PRESENT":{"type":"NUMBER","index":120,"name":"IS_ZI_JENKINS_PRESENT","comment":null,"display_name":"is_zi_jenkins_present"},"IS_ZI_SVN_PRESENT":{"type":"NUMBER","index":121,"name":"IS_ZI_SVN_PRESENT","comment":null,"display_name":"is_zi_svn_present"},"IS_ZI_TORTOISE_SVN_PRESENT":{"type":"NUMBER","index":122,"name":"IS_ZI_TORTOISE_SVN_PRESENT","comment":null,"display_name":"is_zi_tortoise_svn_present"},"IS_ZI_GCP_PRESENT":{"type":"NUMBER","index":123,"name":"IS_ZI_GCP_PRESENT","comment":null,"display_name":"is_zi_gcp_present"},"IS_ZI_ATLASSIAN_PRESENT":{"type":"NUMBER","index":124,"name":"IS_ZI_ATLASSIAN_PRESENT","comment":null,"display_name":"is_zi_atlassian_present"},"IS_ZI_GITHUB_PRESENT":{"type":"NUMBER","index":125,"name":"IS_ZI_GITHUB_PRESENT","comment":null,"display_name":"is_zi_github_present"},"IS_ZI_GITHUB_ENTERPRISE_PRESENT":{"type":"NUMBER","index":126,"name":"IS_ZI_GITHUB_ENTERPRISE_PRESENT","comment":null,"display_name":"is_zi_github_enterprise_present"},"IS_ZI_AWS_PRESENT":{"type":"NUMBER","index":127,"name":"IS_ZI_AWS_PRESENT","comment":null,"display_name":"is_zi_aws_present"},"IS_ZI_KUBERNETES_PRESENT":{"type":"NUMBER","index":128,"name":"IS_ZI_KUBERNETES_PRESENT","comment":null,"display_name":"is_zi_kubernetes_present"},"IS_ZI_APACHE_SUBVERSION_PRESENT":{"type":"NUMBER","index":129,"name":"IS_ZI_APACHE_SUBVERSION_PRESENT","comment":null,"display_name":"is_zi_apache_subversion_present"},"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT":{"type":"NUMBER","index":130,"name":"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT","comment":null,"display_name":"is_zi_apache_subversion_svn_present"},"IS_ZI_HASHICORP_PRESENT":{"type":"NUMBER","index":131,"name":"IS_ZI_HASHICORP_PRESENT","comment":null,"display_name":"is_zi_hashicorp_present"},"IS_ZI_AWS_CLOUD_TRAIL_PRESENT":{"type":"NUMBER","index":132,"name":"IS_ZI_AWS_CLOUD_TRAIL_PRESENT","comment":null,"display_name":"is_zi_aws_cloud_trail_present"},"IS_ZI_CIRCLE_CI_PRESENT":{"type":"NUMBER","index":133,"name":"IS_ZI_CIRCLE_CI_PRESENT","comment":null,"display_name":"is_zi_circle_ci_present"},"IS_ZI_BIT_BUCKET_PRESENT":{"type":"NUMBER","index":134,"name":"IS_ZI_BIT_BUCKET_PRESENT","comment":null,"display_name":"is_zi_bit_bucket_present"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":135,"name":"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH","comment":null,"display_name":"is_excluded_from_zoom_info_enrich"},"CRM_ACCOUNT_CREATED_DATE_ID":{"type":"NUMBER","index":136,"name":"CRM_ACCOUNT_CREATED_DATE_ID","comment":null,"display_name":"crm_account_created_date_id"},"CRM_ACCOUNT_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":137,"name":"crm_account_created_date","comment":null,"description":"The date on which the CRM account was created in SFDC","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_created_date"},"ABM_TIER_1_DATE_ID":{"type":"NUMBER","index":138,"name":"ABM_TIER_1_DATE_ID","comment":null,"display_name":"abm_tier_1_date_id"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":139,"name":"ABM_TIER_1_DATE","comment":null,"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE_ID":{"type":"NUMBER","index":140,"name":"ABM_TIER_2_DATE_ID","comment":null,"display_name":"abm_tier_2_date_id"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":141,"name":"ABM_TIER_2_DATE","comment":null,"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE_ID":{"type":"NUMBER","index":142,"name":"ABM_TIER_3_DATE_ID","comment":null,"display_name":"abm_tier_3_date_id"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":143,"name":"ABM_TIER_3_DATE","comment":null,"display_name":"abm_tier_3_date"},"GTM_ACCELERATION_DATE_ID":{"type":"NUMBER","index":144,"name":"GTM_ACCELERATION_DATE_ID","comment":null,"display_name":"gtm_acceleration_date_id"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":145,"name":"GTM_ACCELERATION_DATE","comment":null,"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE_ID":{"type":"NUMBER","index":146,"name":"GTM_ACCOUNT_BASED_DATE_ID","comment":null,"display_name":"gtm_account_based_date_id"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":147,"name":"GTM_ACCOUNT_BASED_DATE","comment":null,"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE_ID":{"type":"NUMBER","index":148,"name":"GTM_ACCOUNT_CENTRIC_DATE_ID","comment":null,"display_name":"gtm_account_centric_date_id"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":149,"name":"GTM_ACCOUNT_CENTRIC_DATE","comment":null,"display_name":"gtm_account_centric_date"},"PARTNERS_SIGNED_CONTRACT_DATE_ID":{"type":"NUMBER","index":150,"name":"PARTNERS_SIGNED_CONTRACT_DATE_ID","comment":null,"display_name":"partners_signed_contract_date_id"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"DATE","index":151,"name":"PARTNERS_SIGNED_CONTRACT_DATE","comment":null,"display_name":"partners_signed_contract_date"},"TECHNICAL_ACCOUNT_MANAGER_DATE_ID":{"type":"NUMBER","index":152,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE_ID","comment":null,"display_name":"technical_account_manager_date_id"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":153,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"CUSTOMER_SINCE_DATE_ID":{"type":"NUMBER","index":154,"name":"CUSTOMER_SINCE_DATE_ID","comment":null,"display_name":"customer_since_date_id"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":155,"name":"CUSTOMER_SINCE_DATE","comment":null,"display_name":"customer_since_date"},"NEXT_RENEWAL_DATE_ID":{"type":"NUMBER","index":156,"name":"NEXT_RENEWAL_DATE_ID","comment":null,"display_name":"next_renewal_date_id"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":157,"name":"NEXT_RENEWAL_DATE","comment":null,"display_name":"next_renewal_date"},"GS_FIRST_VALUE_DATE_ID":{"type":"NUMBER","index":158,"name":"GS_FIRST_VALUE_DATE_ID","comment":null,"display_name":"gs_first_value_date_id"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":159,"name":"GS_FIRST_VALUE_DATE","comment":null,"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE_ID":{"type":"NUMBER","index":160,"name":"GS_LAST_CSM_ACTIVITY_DATE_ID","comment":null,"display_name":"gs_last_csm_activity_date_id"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":161,"name":"GS_LAST_CSM_ACTIVITY_DATE","comment":null,"display_name":"gs_last_csm_activity_date"},"COUNT_ACTIVE_SUBSCRIPTION_CHARGES":{"type":"FLOAT","index":162,"name":"COUNT_ACTIVE_SUBSCRIPTION_CHARGES","comment":null,"display_name":"count_active_subscription_charges"},"COUNT_ACTIVE_SUBSCRIPTIONS":{"type":"FLOAT","index":163,"name":"COUNT_ACTIVE_SUBSCRIPTIONS","comment":null,"display_name":"count_active_subscriptions"},"COUNT_BILLING_ACCOUNTS":{"type":"FLOAT","index":164,"name":"COUNT_BILLING_ACCOUNTS","comment":null,"display_name":"count_billing_accounts"},"COUNT_LICENSED_USERS":{"type":"FLOAT","index":165,"name":"COUNT_LICENSED_USERS","comment":null,"display_name":"count_licensed_users"},"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES":{"type":"FLOAT","index":166,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES","comment":null,"display_name":"count_of_new_business_won_opportunities"},"COUNT_OPEN_RENEWAL_OPPORTUNITIES":{"type":"FLOAT","index":167,"name":"COUNT_OPEN_RENEWAL_OPPORTUNITIES","comment":null,"display_name":"count_open_renewal_opportunities"},"COUNT_OPPORTUNITIES":{"type":"FLOAT","index":168,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_PRODUCTS_PURCHASED":{"type":"FLOAT","index":169,"name":"COUNT_PRODUCTS_PURCHASED","comment":null,"display_name":"count_products_purchased"},"COUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":170,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_CONCURRENT_EE_SUBSCRIPTIONS":{"type":"FLOAT","index":171,"name":"COUNT_CONCURRENT_EE_SUBSCRIPTIONS","comment":null,"display_name":"count_concurrent_ee_subscriptions"},"COUNT_CE_INSTANCES":{"type":"FLOAT","index":172,"name":"COUNT_CE_INSTANCES","comment":null,"display_name":"count_ce_instances"},"COUNT_ACTIVE_CE_USERS":{"type":"FLOAT","index":173,"name":"COUNT_ACTIVE_CE_USERS","comment":null,"display_name":"count_active_ce_users"},"COUNT_OPEN_OPPORTUNITIES":{"type":"FLOAT","index":174,"name":"COUNT_OPEN_OPPORTUNITIES","comment":null,"display_name":"count_open_opportunities"},"COUNT_USING_CE":{"type":"BOOLEAN","index":175,"name":"COUNT_USING_CE","comment":null,"display_name":"count_using_ce"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":176,"name":"CARR_THIS_ACCOUNT","comment":null,"display_name":"carr_this_account"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":177,"name":"CARR_ACCOUNT_FAMILY","comment":null,"display_name":"carr_account_family"},"POTENTIAL_USERS":{"type":"FLOAT","index":178,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"NUMBER_OF_LICENSES_THIS_ACCOUNT":{"type":"FLOAT","index":179,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT","comment":null,"display_name":"number_of_licenses_this_account"},"DECISION_MAKER_COUNT_LINKEDIN":{"type":"FLOAT","index":180,"name":"DECISION_MAKER_COUNT_LINKEDIN","comment":null,"display_name":"decision_maker_count_linkedin"},"NUMBER_OF_EMPLOYEES":{"type":"NUMBER","index":181,"name":"NUMBER_OF_EMPLOYEES","comment":null,"display_name":"number_of_employees"},"USER_ROLE_TYPE":{"type":"TEXT","index":182,"name":"USER_ROLE_TYPE","comment":null,"display_name":"user_role_type"},"OWNER_ROLE":{"type":"TEXT","index":183,"name":"OWNER_ROLE","comment":null,"display_name":"owner_role"},"PARENT_CRM_ACCOUNT_LAM":{"type":"FLOAT","index":184,"name":"PARENT_CRM_ACCOUNT_LAM","comment":null,"display_name":"parent_crm_account_lam"},"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT":{"type":"FLOAT","index":185,"name":"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT","comment":null,"display_name":"parent_crm_account_lam_dev_count"},"PTE_SCORE":{"type":"NUMBER","index":186,"name":"PTE_SCORE","comment":null,"display_name":"pte_score"},"PTE_DECILE":{"type":"NUMBER","index":187,"name":"PTE_DECILE","comment":null,"display_name":"pte_decile"},"PTE_SCORE_GROUP":{"type":"NUMBER","index":188,"name":"PTE_SCORE_GROUP","comment":null,"display_name":"pte_score_group"},"PTC_SCORE":{"type":"NUMBER","index":189,"name":"PTC_SCORE","comment":null,"display_name":"ptc_score"},"PTC_DECILE":{"type":"NUMBER","index":190,"name":"PTC_DECILE","comment":null,"display_name":"ptc_decile"},"PTC_SCORE_GROUP":{"type":"NUMBER","index":191,"name":"PTC_SCORE_GROUP","comment":null,"display_name":"ptc_score_group"},"CREATED_BY_ID":{"type":"TEXT","index":192,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"CREATED_BY_NAME":{"type":"TEXT","index":193,"name":"CREATED_BY_NAME","comment":null,"display_name":"created_by_name"},"LAST_MODIFIED_BY_ID":{"type":"TEXT","index":194,"name":"LAST_MODIFIED_BY_ID","comment":null,"display_name":"last_modified_by_id"},"LAST_MODIFIED_BY_NAME":{"type":"TEXT","index":195,"name":"LAST_MODIFIED_BY_NAME","comment":null,"display_name":"last_modified_by_name"},"LAST_MODIFIED_DATE_ID":{"type":"NUMBER","index":196,"name":"LAST_MODIFIED_DATE_ID","comment":null,"display_name":"last_modified_date_id"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":197,"name":"LAST_MODIFIED_DATE","comment":null,"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":198,"name":"LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"last_activity_date_id"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":199,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"IS_DELETED":{"type":"BOOLEAN","index":200,"name":"is_deleted","comment":null,"description":"flag indicating if account has been deleted","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_deleted"},"CREATED_BY":{"type":"TEXT","index":201,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":202,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":203,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":204,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":205,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":206,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"crm_account_country":{"name":"crm_account_country","description":"billing country of SFDC account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_country"},"ultimate_parent_account_name":{"name":"ultimate_parent_account_name","description":"parent account name","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_name"},"ultimate_parent_account_segment":{"name":"ultimate_parent_account_segment","description":"Sales segment of the parent account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_account_segment"},"ultimate_parent_billing_country":{"name":"ultimate_parent_billing_country","description":"billing country of parent account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_billing_country"},"account_owner_team":{"name":"account_owner_team","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner_team"},"account_type":{"name":"account_type","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_type"},"gtm_strategy":{"name":"gtm_strategy","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_strategy"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:04UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":80442880,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_crm_account","raw_sql":"{{ sfdc_account_fields('live') }}\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@msendal\",\n    updated_by=\"@michellecooper\",\n    created_date=\"2020-06-01\",\n    updated_date=\"2022-03-02\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.sfdc_account_fields","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.prep_crm_person","model.gitlab_snowflake.prep_crm_person","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_users_source","model.gitlab_snowflake.sfdc_users_source","model.gitlab_snowflake.sfdc_record_type","model.gitlab_snowflake.sfdc_record_type","model.gitlab_snowflake.pte_scores_source","model.gitlab_snowflake.pte_scores_source","model.gitlab_snowflake.ptc_scores_source","model.gitlab_snowflake.ptc_scores_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_prep","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_prep","fqn":["gitlab_snowflake","common_prep","restricted_safe","prep_crm_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/restricted_safe/prep_crm_account.sql","original_file_path":"models/common_prep/restricted_safe/prep_crm_account.sql","name":"prep_crm_account","alias":"prep_crm_account","checksum":{"name":"sha256","checksum":"8249bc0b327b437d9c590ca7079e67606701ec579cc03123a790d9090872ca28"},"tags":["safe"],"refs":[["map_merged_crm_account"],["map_merged_crm_account"],["prep_crm_person"],["prep_crm_person"],["sfdc_user_roles_source"],["sfdc_user_roles_source"],["prep_crm_user"],["prep_crm_user"],["sfdc_account_source"],["sfdc_account_source"],["sfdc_users_source"],["sfdc_users_source"],["sfdc_record_type"],["sfdc_record_type"],["pte_scores_source"],["pte_scores_source"],["ptc_scores_source"],["ptc_scores_source"]],"sources":[],"metrics":[],"description":"Prep model for the live crm account dimension.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/restricted_safe/prep_crm_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033757.9712517,"compiled_sql":"$19","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_prep.prep_crm_account","label":"prep_crm_account"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_PREP","name":"PREP_CRM_OPPORTUNITY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":2,"name":"DIM_CRM_OPPORTUNITY_ID","comment":null,"display_name":"dim_crm_opportunity_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":3,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"DIM_PARENT_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":4,"name":"DIM_PARENT_CRM_OPPORTUNITY_ID","comment":null,"display_name":"dim_parent_crm_opportunity_id"},"ORDER_TYPE":{"type":"TEXT","index":5,"name":"ORDER_TYPE","comment":null,"display_name":"order_type"},"OPPORTUNITY_TERM_BASE":{"type":"FLOAT","index":6,"name":"OPPORTUNITY_TERM_BASE","comment":null,"display_name":"opportunity_term_base"},"SALES_QUALIFIED_SOURCE":{"type":"TEXT","index":7,"name":"SALES_QUALIFIED_SOURCE","comment":null,"display_name":"sales_qualified_source"},"CRM_OPP_OWNER_SALES_SEGMENT_STAMPED":{"type":"TEXT","index":8,"name":"CRM_OPP_OWNER_SALES_SEGMENT_STAMPED","comment":null,"display_name":"crm_opp_owner_sales_segment_stamped"},"CRM_OPP_OWNER_GEO_STAMPED":{"type":"TEXT","index":9,"name":"CRM_OPP_OWNER_GEO_STAMPED","comment":null,"display_name":"crm_opp_owner_geo_stamped"},"CRM_OPP_OWNER_REGION_STAMPED":{"type":"TEXT","index":10,"name":"CRM_OPP_OWNER_REGION_STAMPED","comment":null,"display_name":"crm_opp_owner_region_stamped"},"CRM_OPP_OWNER_AREA_STAMPED":{"type":"TEXT","index":11,"name":"CRM_OPP_OWNER_AREA_STAMPED","comment":null,"display_name":"crm_opp_owner_area_stamped"},"CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED":{"type":"TEXT","index":12,"name":"CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED","comment":null,"display_name":"crm_opp_owner_sales_segment_geo_region_area_stamped"},"CRM_OPP_OWNER_BUSINESS_UNIT_STAMPED":{"type":"TEXT","index":13,"name":"CRM_OPP_OWNER_BUSINESS_UNIT_STAMPED","comment":null,"display_name":"crm_opp_owner_business_unit_stamped"},"CREATED_DATE":{"type":"DATE","index":14,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"SALES_ACCEPTED_DATE":{"type":"DATE","index":15,"name":"SALES_ACCEPTED_DATE","comment":null,"display_name":"sales_accepted_date"},"CLOSE_DATE":{"type":"DATE","index":16,"name":"CLOSE_DATE","comment":null,"display_name":"close_date"},"RAW_NET_ARR":{"type":"FLOAT","index":17,"name":"RAW_NET_ARR","comment":null,"display_name":"raw_net_arr"},"CRM_OPPORTUNITY_SNAPSHOT_ID":{"type":"TEXT","index":18,"name":"CRM_OPPORTUNITY_SNAPSHOT_ID","comment":null,"display_name":"crm_opportunity_snapshot_id"},"SNAPSHOT_ID":{"type":"NUMBER","index":19,"name":"SNAPSHOT_ID","comment":null,"display_name":"snapshot_id"},"SNAPSHOT_DATE":{"type":"DATE","index":20,"name":"SNAPSHOT_DATE","comment":null,"display_name":"snapshot_date"},"SNAPSHOT_MONTH":{"type":"DATE","index":21,"name":"SNAPSHOT_MONTH","comment":null,"display_name":"snapshot_month"},"SNAPSHOT_FISCAL_YEAR":{"type":"NUMBER","index":22,"name":"SNAPSHOT_FISCAL_YEAR","comment":null,"display_name":"snapshot_fiscal_year"},"SNAPSHOT_FISCAL_QUARTER_NAME":{"type":"TEXT","index":23,"name":"SNAPSHOT_FISCAL_QUARTER_NAME","comment":null,"display_name":"snapshot_fiscal_quarter_name"},"SNAPSHOT_FISCAL_QUARTER_DATE":{"type":"DATE","index":24,"name":"SNAPSHOT_FISCAL_QUARTER_DATE","comment":null,"display_name":"snapshot_fiscal_quarter_date"},"SNAPSHOT_DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":25,"name":"SNAPSHOT_DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"snapshot_day_of_fiscal_quarter_normalised"},"SNAPSHOT_DAY_OF_FISCAL_YEAR_NORMALISED":{"type":"NUMBER","index":26,"name":"SNAPSHOT_DAY_OF_FISCAL_YEAR_NORMALISED","comment":null,"display_name":"snapshot_day_of_fiscal_year_normalised"},"CRM_ACCOUNT_OWNER_SALES_SEGMENT":{"type":"TEXT","index":27,"name":"CRM_ACCOUNT_OWNER_SALES_SEGMENT","comment":null,"display_name":"crm_account_owner_sales_segment"},"CRM_ACCOUNT_OWNER_GEO":{"type":"TEXT","index":28,"name":"CRM_ACCOUNT_OWNER_GEO","comment":null,"display_name":"crm_account_owner_geo"},"CRM_ACCOUNT_OWNER_REGION":{"type":"TEXT","index":29,"name":"CRM_ACCOUNT_OWNER_REGION","comment":null,"display_name":"crm_account_owner_region"},"CRM_ACCOUNT_OWNER_AREA":{"type":"TEXT","index":30,"name":"CRM_ACCOUNT_OWNER_AREA","comment":null,"display_name":"crm_account_owner_area"},"CRM_ACCOUNT_OWNER_SALES_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":31,"name":"CRM_ACCOUNT_OWNER_SALES_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"crm_account_owner_sales_segment_geo_region_area"},"FULFILLMENT_PARTNER_ACCOUNT_NAME":{"type":"TEXT","index":32,"name":"FULFILLMENT_PARTNER_ACCOUNT_NAME","comment":null,"display_name":"fulfillment_partner_account_name"},"FULFILLMENT_PARTNER_PARTNER_TRACK":{"type":"TEXT","index":33,"name":"FULFILLMENT_PARTNER_PARTNER_TRACK","comment":null,"display_name":"fulfillment_partner_partner_track"},"PARTNER_ACCOUNT_ACCOUNT_NAME":{"type":"TEXT","index":34,"name":"PARTNER_ACCOUNT_ACCOUNT_NAME","comment":null,"display_name":"partner_account_account_name"},"PARTNER_ACCOUNT_PARTNER_TRACK":{"type":"TEXT","index":35,"name":"PARTNER_ACCOUNT_PARTNER_TRACK","comment":null,"display_name":"partner_account_partner_track"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":36,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":37,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"IS_OPEN":{"type":"NUMBER","index":38,"name":"IS_OPEN","comment":null,"display_name":"is_open"},"OPPORTUNITY_OWNER_USER_SEGMENT":{"type":"TEXT","index":39,"name":"OPPORTUNITY_OWNER_USER_SEGMENT","comment":null,"display_name":"opportunity_owner_user_segment"},"OPPORTUNITY_OWNER_USER_GEO":{"type":"TEXT","index":40,"name":"OPPORTUNITY_OWNER_USER_GEO","comment":null,"display_name":"opportunity_owner_user_geo"},"OPPORTUNITY_OWNER_USER_REGION":{"type":"TEXT","index":41,"name":"OPPORTUNITY_OWNER_USER_REGION","comment":null,"display_name":"opportunity_owner_user_region"},"OPPORTUNITY_OWNER_USER_AREA":{"type":"TEXT","index":42,"name":"OPPORTUNITY_OWNER_USER_AREA","comment":null,"display_name":"opportunity_owner_user_area"},"OPPORTUNITY_OWNER_ROLE":{"type":"TEXT","index":43,"name":"OPPORTUNITY_OWNER_ROLE","comment":null,"display_name":"opportunity_owner_role"},"OPPORTUNITY_OWNER_TITLE":{"type":"TEXT","index":44,"name":"OPPORTUNITY_OWNER_TITLE","comment":null,"display_name":"opportunity_owner_title"},"OPPORTUNITY_NAME":{"type":"TEXT","index":45,"name":"OPPORTUNITY_NAME","comment":null,"display_name":"opportunity_name"},"IS_CLOSED":{"type":"BOOLEAN","index":46,"name":"IS_CLOSED","comment":null,"display_name":"is_closed"},"DAYS_IN_STAGE":{"type":"NUMBER","index":47,"name":"DAYS_IN_STAGE","comment":null,"display_name":"days_in_stage"},"DEPLOYMENT_PREFERENCE":{"type":"TEXT","index":48,"name":"DEPLOYMENT_PREFERENCE","comment":null,"display_name":"deployment_preference"},"GENERATED_SOURCE":{"type":"TEXT","index":49,"name":"GENERATED_SOURCE","comment":null,"display_name":"generated_source"},"LEAD_SOURCE":{"type":"TEXT","index":50,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"MERGED_OPPORTUNITY_ID":{"type":"TEXT","index":51,"name":"MERGED_OPPORTUNITY_ID","comment":null,"display_name":"merged_opportunity_id"},"DUPLICATE_OPPORTUNITY_ID":{"type":"TEXT","index":52,"name":"DUPLICATE_OPPORTUNITY_ID","comment":null,"display_name":"duplicate_opportunity_id"},"ACCOUNT_OWNER":{"type":"TEXT","index":53,"name":"ACCOUNT_OWNER","comment":null,"display_name":"account_owner"},"OPPORTUNITY_OWNER":{"type":"TEXT","index":54,"name":"OPPORTUNITY_OWNER","comment":null,"display_name":"opportunity_owner"},"OPPORTUNITY_OWNER_MANAGER":{"type":"TEXT","index":55,"name":"OPPORTUNITY_OWNER_MANAGER","comment":null,"display_name":"opportunity_owner_manager"},"OPPORTUNITY_OWNER_DEPARTMENT":{"type":"TEXT","index":56,"name":"OPPORTUNITY_OWNER_DEPARTMENT","comment":null,"display_name":"opportunity_owner_department"},"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":57,"name":"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_sales_development_representative"},"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":58,"name":"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_business_development_representative"},"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE_LOOKUP":{"type":"TEXT","index":59,"name":"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE_LOOKUP","comment":null,"display_name":"opportunity_business_development_representative_lookup"},"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":60,"name":"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_development_representative"},"ACCOUNT_OWNER_TEAM_STAMPED":{"type":"TEXT","index":61,"name":"ACCOUNT_OWNER_TEAM_STAMPED","comment":null,"display_name":"account_owner_team_stamped"},"SALES_PATH":{"type":"TEXT","index":62,"name":"SALES_PATH","comment":null,"display_name":"sales_path"},"SALES_QUALIFIED_DATE":{"type":"TIMESTAMP_TZ","index":63,"name":"SALES_QUALIFIED_DATE","comment":null,"display_name":"sales_qualified_date"},"IQM_SUBMITTED_BY_ROLE":{"type":"TEXT","index":64,"name":"IQM_SUBMITTED_BY_ROLE","comment":null,"display_name":"iqm_submitted_by_role"},"SALES_TYPE":{"type":"TEXT","index":65,"name":"SALES_TYPE","comment":null,"display_name":"sales_type"},"NET_NEW_SOURCE_CATEGORIES":{"type":"TEXT","index":66,"name":"NET_NEW_SOURCE_CATEGORIES","comment":null,"display_name":"net_new_source_categories"},"SOURCE_BUCKETS":{"type":"TEXT","index":67,"name":"SOURCE_BUCKETS","comment":null,"display_name":"source_buckets"},"STAGE_NAME":{"type":"TEXT","index":68,"name":"STAGE_NAME","comment":null,"display_name":"stage_name"},"DEAL_PATH":{"type":"TEXT","index":69,"name":"DEAL_PATH","comment":null,"display_name":"deal_path"},"ACV":{"type":"FLOAT","index":70,"name":"ACV","comment":null,"display_name":"acv"},"AMOUNT":{"type":"FLOAT","index":71,"name":"AMOUNT","comment":null,"display_name":"amount"},"CLOSED_DEALS":{"type":"NUMBER","index":72,"name":"CLOSED_DEALS","comment":null,"display_name":"closed_deals"},"COMPETITORS":{"type":"TEXT","index":73,"name":"COMPETITORS","comment":null,"display_name":"competitors"},"CRITICAL_DEAL_FLAG":{"type":"TEXT","index":74,"name":"CRITICAL_DEAL_FLAG","comment":null,"display_name":"critical_deal_flag"},"FORECAST_CATEGORY_NAME":{"type":"TEXT","index":75,"name":"FORECAST_CATEGORY_NAME","comment":null,"display_name":"forecast_category_name"},"FORECASTED_IACV":{"type":"FLOAT","index":76,"name":"FORECASTED_IACV","comment":null,"display_name":"forecasted_iacv"},"IACV_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":77,"name":"IACV_CREATED_DATE","comment":null,"display_name":"iacv_created_date"},"INCREMENTAL_ACV":{"type":"FLOAT","index":78,"name":"INCREMENTAL_ACV","comment":null,"display_name":"incremental_acv"},"PRE_COVID_IACV":{"type":"FLOAT","index":79,"name":"PRE_COVID_IACV","comment":null,"display_name":"pre_covid_iacv"},"INVOICE_NUMBER":{"type":"TEXT","index":80,"name":"INVOICE_NUMBER","comment":null,"display_name":"invoice_number"},"IS_REFUND":{"type":"FLOAT","index":81,"name":"IS_REFUND","comment":null,"display_name":"is_refund"},"IS_DOWNGRADE":{"type":"FLOAT","index":82,"name":"IS_DOWNGRADE","comment":null,"display_name":"is_downgrade"},"IS_SWING_DEAL":{"type":"BOOLEAN","index":83,"name":"IS_SWING_DEAL","comment":null,"display_name":"is_swing_deal"},"IS_EDU_OSS":{"type":"FLOAT","index":84,"name":"IS_EDU_OSS","comment":null,"display_name":"is_edu_oss"},"IS_PS_OPP":{"type":"FLOAT","index":85,"name":"IS_PS_OPP","comment":null,"display_name":"is_ps_opp"},"NET_INCREMENTAL_ACV":{"type":"FLOAT","index":86,"name":"NET_INCREMENTAL_ACV","comment":null,"display_name":"net_incremental_acv"},"PRIMARY_CAMPAIGN_SOURCE_ID":{"type":"TEXT","index":87,"name":"PRIMARY_CAMPAIGN_SOURCE_ID","comment":null,"display_name":"primary_campaign_source_id"},"PROBABILITY":{"type":"FLOAT","index":88,"name":"PROBABILITY","comment":null,"display_name":"probability"},"PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":89,"name":"PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"professional_services_value"},"PUSHED_COUNT":{"type":"FLOAT","index":90,"name":"PUSHED_COUNT","comment":null,"display_name":"pushed_count"},"REASON_FOR_LOSS":{"type":"TEXT","index":91,"name":"REASON_FOR_LOSS","comment":null,"display_name":"reason_for_loss"},"REASON_FOR_LOSS_DETAILS":{"type":"TEXT","index":92,"name":"REASON_FOR_LOSS_DETAILS","comment":null,"display_name":"reason_for_loss_details"},"REFUND_IACV":{"type":"FLOAT","index":93,"name":"REFUND_IACV","comment":null,"display_name":"refund_iacv"},"DOWNGRADE_IACV":{"type":"FLOAT","index":94,"name":"DOWNGRADE_IACV","comment":null,"display_name":"downgrade_iacv"},"RENEWAL_ACV":{"type":"FLOAT","index":95,"name":"RENEWAL_ACV","comment":null,"display_name":"renewal_acv"},"RENEWAL_AMOUNT":{"type":"FLOAT","index":96,"name":"RENEWAL_AMOUNT","comment":null,"display_name":"renewal_amount"},"SALES_QUALIFIED_SOURCE_GROUPED":{"type":"TEXT","index":97,"name":"SALES_QUALIFIED_SOURCE_GROUPED","comment":null,"display_name":"sales_qualified_source_grouped"},"SQS_BUCKET_ENGAGEMENT":{"type":"TEXT","index":98,"name":"SQS_BUCKET_ENGAGEMENT","comment":null,"display_name":"sqs_bucket_engagement"},"SDR_PIPELINE_CONTRIBUTION":{"type":"FLOAT","index":99,"name":"SDR_PIPELINE_CONTRIBUTION","comment":null,"display_name":"sdr_pipeline_contribution"},"SOLUTIONS_TO_BE_REPLACED":{"type":"TEXT","index":100,"name":"SOLUTIONS_TO_BE_REPLACED","comment":null,"display_name":"solutions_to_be_replaced"},"TECHNICAL_EVALUATION_DATE":{"type":"TIMESTAMP_TZ","index":101,"name":"TECHNICAL_EVALUATION_DATE","comment":null,"display_name":"technical_evaluation_date"},"TOTAL_CONTRACT_VALUE":{"type":"FLOAT","index":102,"name":"TOTAL_CONTRACT_VALUE","comment":null,"display_name":"total_contract_value"},"RECURRING_AMOUNT":{"type":"FLOAT","index":103,"name":"RECURRING_AMOUNT","comment":null,"display_name":"recurring_amount"},"TRUE_UP_AMOUNT":{"type":"FLOAT","index":104,"name":"TRUE_UP_AMOUNT","comment":null,"display_name":"true_up_amount"},"PROSERV_AMOUNT":{"type":"FLOAT","index":105,"name":"PROSERV_AMOUNT","comment":null,"display_name":"proserv_amount"},"OTHER_NON_RECURRING_AMOUNT":{"type":"FLOAT","index":106,"name":"OTHER_NON_RECURRING_AMOUNT","comment":null,"display_name":"other_non_recurring_amount"},"UPSIDE_IACV":{"type":"FLOAT","index":107,"name":"UPSIDE_IACV","comment":null,"display_name":"upside_iacv"},"UPSIDE_SWING_DEAL_IACV":{"type":"FLOAT","index":108,"name":"UPSIDE_SWING_DEAL_IACV","comment":null,"display_name":"upside_swing_deal_iacv"},"IS_WEB_PORTAL_PURCHASE":{"type":"BOOLEAN","index":109,"name":"IS_WEB_PORTAL_PURCHASE","comment":null,"display_name":"is_web_portal_purchase"},"PARTNER_INITIATED_OPPORTUNITY":{"type":"BOOLEAN","index":110,"name":"PARTNER_INITIATED_OPPORTUNITY","comment":null,"display_name":"partner_initiated_opportunity"},"USER_SEGMENT":{"type":"TEXT","index":111,"name":"USER_SEGMENT","comment":null,"display_name":"user_segment"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":112,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":113,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"TRUE_UP_VALUE":{"type":"FLOAT","index":114,"name":"TRUE_UP_VALUE","comment":null,"display_name":"true_up_value"},"ORDER_TYPE_LIVE":{"type":"TEXT","index":115,"name":"ORDER_TYPE_LIVE","comment":null,"display_name":"order_type_live"},"ORDER_TYPE_GROUPED":{"type":"TEXT","index":116,"name":"ORDER_TYPE_GROUPED","comment":null,"display_name":"order_type_grouped"},"GROWTH_TYPE":{"type":"TEXT","index":117,"name":"GROWTH_TYPE","comment":null,"display_name":"growth_type"},"ARR_BASIS":{"type":"FLOAT","index":118,"name":"ARR_BASIS","comment":null,"display_name":"arr_basis"},"ARR":{"type":"FLOAT","index":119,"name":"ARR","comment":null,"display_name":"arr"},"DAYS_IN_SAO":{"type":"FLOAT","index":120,"name":"DAYS_IN_SAO","comment":null,"display_name":"days_in_sao"},"NEW_LOGO_COUNT":{"type":"FLOAT","index":121,"name":"NEW_LOGO_COUNT","comment":null,"display_name":"new_logo_count"},"USER_SEGMENT_STAMPED":{"type":"TEXT","index":122,"name":"USER_SEGMENT_STAMPED","comment":null,"display_name":"user_segment_stamped"},"USER_SEGMENT_STAMPED_GROUPED":{"type":"TEXT","index":123,"name":"USER_SEGMENT_STAMPED_GROUPED","comment":null,"display_name":"user_segment_stamped_grouped"},"USER_GEO_STAMPED":{"type":"TEXT","index":124,"name":"USER_GEO_STAMPED","comment":null,"display_name":"user_geo_stamped"},"USER_REGION_STAMPED":{"type":"TEXT","index":125,"name":"USER_REGION_STAMPED","comment":null,"display_name":"user_region_stamped"},"USER_AREA_STAMPED":{"type":"TEXT","index":126,"name":"USER_AREA_STAMPED","comment":null,"display_name":"user_area_stamped"},"USER_SEGMENT_REGION_STAMPED_GROUPED":{"type":"TEXT","index":127,"name":"USER_SEGMENT_REGION_STAMPED_GROUPED","comment":null,"display_name":"user_segment_region_stamped_grouped"},"USER_SEGMENT_GEO_REGION_AREA_STAMPED":{"type":"TEXT","index":128,"name":"USER_SEGMENT_GEO_REGION_AREA_STAMPED","comment":null,"display_name":"user_segment_geo_region_area_stamped"},"CRM_OPP_OWNER_USER_ROLE_TYPE_STAMPED":{"type":"TEXT","index":129,"name":"CRM_OPP_OWNER_USER_ROLE_TYPE_STAMPED","comment":null,"display_name":"crm_opp_owner_user_role_type_stamped"},"USER_BUSINESS_UNIT_STAMPED":{"type":"TEXT","index":130,"name":"USER_BUSINESS_UNIT_STAMPED","comment":null,"display_name":"user_business_unit_stamped"},"CRM_OPP_OWNER_STAMPED_NAME":{"type":"TEXT","index":131,"name":"CRM_OPP_OWNER_STAMPED_NAME","comment":null,"display_name":"crm_opp_owner_stamped_name"},"CRM_ACCOUNT_OWNER_STAMPED_NAME":{"type":"TEXT","index":132,"name":"CRM_ACCOUNT_OWNER_STAMPED_NAME","comment":null,"display_name":"crm_account_owner_stamped_name"},"SAO_CRM_OPP_OWNER_STAMPED_NAME":{"type":"TEXT","index":133,"name":"SAO_CRM_OPP_OWNER_STAMPED_NAME","comment":null,"display_name":"sao_crm_opp_owner_stamped_name"},"SAO_CRM_ACCOUNT_OWNER_STAMPED_NAME":{"type":"TEXT","index":134,"name":"SAO_CRM_ACCOUNT_OWNER_STAMPED_NAME","comment":null,"display_name":"sao_crm_account_owner_stamped_name"},"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED":{"type":"TEXT","index":135,"name":"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_sales_segment_stamped"},"SAO_CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED":{"type":"TEXT","index":136,"name":"SAO_CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_sales_segment_geo_region_area_stamped"},"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_GROUPED":{"type":"TEXT","index":137,"name":"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_GROUPED","comment":null,"display_name":"sao_crm_opp_owner_sales_segment_stamped_grouped"},"SAO_CRM_OPP_OWNER_GEO_STAMPED":{"type":"TEXT","index":138,"name":"SAO_CRM_OPP_OWNER_GEO_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_geo_stamped"},"SAO_CRM_OPP_OWNER_REGION_STAMPED":{"type":"TEXT","index":139,"name":"SAO_CRM_OPP_OWNER_REGION_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_region_stamped"},"SAO_CRM_OPP_OWNER_AREA_STAMPED":{"type":"TEXT","index":140,"name":"SAO_CRM_OPP_OWNER_AREA_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_area_stamped"},"SAO_CRM_OPP_OWNER_SEGMENT_REGION_STAMPED_GROUPED":{"type":"TEXT","index":141,"name":"SAO_CRM_OPP_OWNER_SEGMENT_REGION_STAMPED_GROUPED","comment":null,"display_name":"sao_crm_opp_owner_segment_region_stamped_grouped"},"OPPORTUNITY_CATEGORY":{"type":"TEXT","index":142,"name":"OPPORTUNITY_CATEGORY","comment":null,"display_name":"opportunity_category"},"OPPORTUNITY_HEALTH":{"type":"TEXT","index":143,"name":"OPPORTUNITY_HEALTH","comment":null,"display_name":"opportunity_health"},"RISK_TYPE":{"type":"TEXT","index":144,"name":"RISK_TYPE","comment":null,"display_name":"risk_type"},"RISK_REASONS":{"type":"TEXT","index":145,"name":"RISK_REASONS","comment":null,"display_name":"risk_reasons"},"TAM_NOTES":{"type":"TEXT","index":146,"name":"TAM_NOTES","comment":null,"display_name":"tam_notes"},"PRIMARY_SOLUTION_ARCHITECT":{"type":"TEXT","index":147,"name":"PRIMARY_SOLUTION_ARCHITECT","comment":null,"display_name":"primary_solution_architect"},"PRODUCT_DETAILS":{"type":"TEXT","index":148,"name":"PRODUCT_DETAILS","comment":null,"display_name":"product_details"},"PRODUCT_CATEGORY":{"type":"TEXT","index":149,"name":"PRODUCT_CATEGORY","comment":null,"display_name":"product_category"},"PRODUCTS_PURCHASED":{"type":"TEXT","index":150,"name":"PRODUCTS_PURCHASED","comment":null,"display_name":"products_purchased"},"OPPORTUNITY_DEAL_SIZE":{"type":"TEXT","index":151,"name":"OPPORTUNITY_DEAL_SIZE","comment":null,"display_name":"opportunity_deal_size"},"PAYMENT_SCHEDULE":{"type":"TEXT","index":152,"name":"PAYMENT_SCHEDULE","comment":null,"display_name":"payment_schedule"},"COMP_Y2_IACV":{"type":"FLOAT","index":153,"name":"COMP_Y2_IACV","comment":null,"display_name":"comp_y2_iacv"},"COMP_NEW_LOGO_OVERRIDE":{"type":"TEXT","index":154,"name":"COMP_NEW_LOGO_OVERRIDE","comment":null,"display_name":"comp_new_logo_override"},"IS_PIPELINE_CREATED_ELIGIBLE":{"type":"BOOLEAN","index":155,"name":"IS_PIPELINE_CREATED_ELIGIBLE","comment":null,"display_name":"is_pipeline_created_eligible"},"SALES_SEGMENT":{"type":"TEXT","index":156,"name":"SALES_SEGMENT","comment":null,"display_name":"sales_segment"},"PARENT_SEGMENT":{"type":"TEXT","index":157,"name":"PARENT_SEGMENT","comment":null,"display_name":"parent_segment"},"DAYS_IN_0_PENDING_ACCEPTANCE":{"type":"FLOAT","index":158,"name":"DAYS_IN_0_PENDING_ACCEPTANCE","comment":null,"display_name":"days_in_0_pending_acceptance"},"DAYS_IN_1_DISCOVERY":{"type":"FLOAT","index":159,"name":"DAYS_IN_1_DISCOVERY","comment":null,"display_name":"days_in_1_discovery"},"DAYS_IN_2_SCOPING":{"type":"FLOAT","index":160,"name":"DAYS_IN_2_SCOPING","comment":null,"display_name":"days_in_2_scoping"},"DAYS_IN_3_TECHNICAL_EVALUATION":{"type":"FLOAT","index":161,"name":"DAYS_IN_3_TECHNICAL_EVALUATION","comment":null,"display_name":"days_in_3_technical_evaluation"},"DAYS_IN_4_PROPOSAL":{"type":"FLOAT","index":162,"name":"DAYS_IN_4_PROPOSAL","comment":null,"display_name":"days_in_4_proposal"},"DAYS_IN_5_NEGOTIATING":{"type":"FLOAT","index":163,"name":"DAYS_IN_5_NEGOTIATING","comment":null,"display_name":"days_in_5_negotiating"},"STAGE_0_PENDING_ACCEPTANCE_DATE":{"type":"TIMESTAMP_TZ","index":164,"name":"STAGE_0_PENDING_ACCEPTANCE_DATE","comment":null,"display_name":"stage_0_pending_acceptance_date"},"STAGE_1_DISCOVERY_DATE":{"type":"TIMESTAMP_TZ","index":165,"name":"STAGE_1_DISCOVERY_DATE","comment":null,"display_name":"stage_1_discovery_date"},"STAGE_2_SCOPING_DATE":{"type":"TIMESTAMP_TZ","index":166,"name":"STAGE_2_SCOPING_DATE","comment":null,"display_name":"stage_2_scoping_date"},"STAGE_3_TECHNICAL_EVALUATION_DATE":{"type":"TIMESTAMP_TZ","index":167,"name":"STAGE_3_TECHNICAL_EVALUATION_DATE","comment":null,"display_name":"stage_3_technical_evaluation_date"},"STAGE_4_PROPOSAL_DATE":{"type":"TIMESTAMP_TZ","index":168,"name":"STAGE_4_PROPOSAL_DATE","comment":null,"display_name":"stage_4_proposal_date"},"STAGE_5_NEGOTIATING_DATE":{"type":"TIMESTAMP_TZ","index":169,"name":"STAGE_5_NEGOTIATING_DATE","comment":null,"display_name":"stage_5_negotiating_date"},"STAGE_6_AWAITING_SIGNATURE_DATE":{"type":"TIMESTAMP_TZ","index":170,"name":"STAGE_6_AWAITING_SIGNATURE_DATE","comment":null,"display_name":"stage_6_awaiting_signature_date"},"STAGE_6_CLOSED_WON_DATE":{"type":"TIMESTAMP_TZ","index":171,"name":"STAGE_6_CLOSED_WON_DATE","comment":null,"display_name":"stage_6_closed_won_date"},"STAGE_6_CLOSED_LOST_DATE":{"type":"TIMESTAMP_TZ","index":172,"name":"STAGE_6_CLOSED_LOST_DATE","comment":null,"display_name":"stage_6_closed_lost_date"},"DIVISION_SALES_SEGMENT_STAMPED":{"type":"TEXT","index":173,"name":"DIVISION_SALES_SEGMENT_STAMPED","comment":null,"display_name":"division_sales_segment_stamped"},"DR_PARTNER_DEAL_TYPE":{"type":"TEXT","index":174,"name":"DR_PARTNER_DEAL_TYPE","comment":null,"display_name":"dr_partner_deal_type"},"DR_PARTNER_ENGAGEMENT":{"type":"TEXT","index":175,"name":"DR_PARTNER_ENGAGEMENT","comment":null,"display_name":"dr_partner_engagement"},"DR_DEAL_ID":{"type":"TEXT","index":176,"name":"DR_DEAL_ID","comment":null,"display_name":"dr_deal_id"},"DR_PRIMARY_REGISTRATION":{"type":"TEXT","index":177,"name":"DR_PRIMARY_REGISTRATION","comment":null,"display_name":"dr_primary_registration"},"CHANNEL_TYPE":{"type":"TEXT","index":178,"name":"CHANNEL_TYPE","comment":null,"display_name":"channel_type"},"PARTNER_ACCOUNT":{"type":"TEXT","index":179,"name":"PARTNER_ACCOUNT","comment":null,"display_name":"partner_account"},"DR_STATUS":{"type":"TEXT","index":180,"name":"DR_STATUS","comment":null,"display_name":"dr_status"},"DISTRIBUTOR":{"type":"TEXT","index":181,"name":"DISTRIBUTOR","comment":null,"display_name":"distributor"},"INFLUENCE_PARTNER":{"type":"TEXT","index":182,"name":"INFLUENCE_PARTNER","comment":null,"display_name":"influence_partner"},"IS_FOCUS_PARTNER":{"type":"BOOLEAN","index":183,"name":"IS_FOCUS_PARTNER","comment":null,"display_name":"is_focus_partner"},"FULFILLMENT_PARTNER":{"type":"TEXT","index":184,"name":"FULFILLMENT_PARTNER","comment":null,"display_name":"fulfillment_partner"},"PLATFORM_PARTNER":{"type":"TEXT","index":185,"name":"PLATFORM_PARTNER","comment":null,"display_name":"platform_partner"},"PARTNER_TRACK":{"type":"TEXT","index":186,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"RESALE_PARTNER_TRACK":{"type":"TEXT","index":187,"name":"RESALE_PARTNER_TRACK","comment":null,"display_name":"resale_partner_track"},"IS_PUBLIC_SECTOR_OPP":{"type":"BOOLEAN","index":188,"name":"IS_PUBLIC_SECTOR_OPP","comment":null,"display_name":"is_public_sector_opp"},"IS_REGISTRATION_FROM_PORTAL":{"type":"BOOLEAN","index":189,"name":"IS_REGISTRATION_FROM_PORTAL","comment":null,"display_name":"is_registration_from_portal"},"CALCULATED_DISCOUNT":{"type":"FLOAT","index":190,"name":"CALCULATED_DISCOUNT","comment":null,"display_name":"calculated_discount"},"PARTNER_DISCOUNT":{"type":"FLOAT","index":191,"name":"PARTNER_DISCOUNT","comment":null,"display_name":"partner_discount"},"PARTNER_DISCOUNT_CALC":{"type":"FLOAT","index":192,"name":"PARTNER_DISCOUNT_CALC","comment":null,"display_name":"partner_discount_calc"},"COMP_CHANNEL_NEUTRAL":{"type":"FLOAT","index":193,"name":"COMP_CHANNEL_NEUTRAL","comment":null,"display_name":"comp_channel_neutral"},"CP_CHAMPION":{"type":"TEXT","index":194,"name":"CP_CHAMPION","comment":null,"display_name":"cp_champion"},"CP_CLOSE_PLAN":{"type":"TEXT","index":195,"name":"CP_CLOSE_PLAN","comment":null,"display_name":"cp_close_plan"},"CP_COMPETITION":{"type":"TEXT","index":196,"name":"CP_COMPETITION","comment":null,"display_name":"cp_competition"},"CP_DECISION_CRITERIA":{"type":"TEXT","index":197,"name":"CP_DECISION_CRITERIA","comment":null,"display_name":"cp_decision_criteria"},"CP_DECISION_PROCESS":{"type":"TEXT","index":198,"name":"CP_DECISION_PROCESS","comment":null,"display_name":"cp_decision_process"},"CP_ECONOMIC_BUYER":{"type":"TEXT","index":199,"name":"CP_ECONOMIC_BUYER","comment":null,"display_name":"cp_economic_buyer"},"CP_HELP":{"type":"TEXT","index":200,"name":"CP_HELP","comment":null,"display_name":"cp_help"},"CP_IDENTIFY_PAIN":{"type":"TEXT","index":201,"name":"CP_IDENTIFY_PAIN","comment":null,"display_name":"cp_identify_pain"},"CP_METRICS":{"type":"TEXT","index":202,"name":"CP_METRICS","comment":null,"display_name":"cp_metrics"},"CP_PARTNER":{"type":"TEXT","index":203,"name":"CP_PARTNER","comment":null,"display_name":"cp_partner"},"CP_PAPER_PROCESS":{"type":"TEXT","index":204,"name":"CP_PAPER_PROCESS","comment":null,"display_name":"cp_paper_process"},"CP_REVIEW_NOTES":{"type":"TEXT","index":205,"name":"CP_REVIEW_NOTES","comment":null,"display_name":"cp_review_notes"},"CP_RISKS":{"type":"TEXT","index":206,"name":"CP_RISKS","comment":null,"display_name":"cp_risks"},"CP_USE_CASES":{"type":"TEXT","index":207,"name":"CP_USE_CASES","comment":null,"display_name":"cp_use_cases"},"CP_VALUE_DRIVER":{"type":"TEXT","index":208,"name":"CP_VALUE_DRIVER","comment":null,"display_name":"cp_value_driver"},"CP_WHY_DO_ANYTHING_AT_ALL":{"type":"TEXT","index":209,"name":"CP_WHY_DO_ANYTHING_AT_ALL","comment":null,"display_name":"cp_why_do_anything_at_all"},"CP_WHY_GITLAB":{"type":"TEXT","index":210,"name":"CP_WHY_GITLAB","comment":null,"display_name":"cp_why_gitlab"},"CP_WHY_NOW":{"type":"TEXT","index":211,"name":"CP_WHY_NOW","comment":null,"display_name":"cp_why_now"},"CP_SCORE":{"type":"FLOAT","index":212,"name":"CP_SCORE","comment":null,"display_name":"cp_score"},"SA_TECH_EVALUATION_CLOSE_STATUS":{"type":"TEXT","index":213,"name":"SA_TECH_EVALUATION_CLOSE_STATUS","comment":null,"display_name":"sa_tech_evaluation_close_status"},"SA_TECH_EVALUATION_END_DATE":{"type":"TIMESTAMP_TZ","index":214,"name":"SA_TECH_EVALUATION_END_DATE","comment":null,"display_name":"sa_tech_evaluation_end_date"},"SA_TECH_EVALUATION_START_DATE":{"type":"TIMESTAMP_TZ","index":215,"name":"SA_TECH_EVALUATION_START_DATE","comment":null,"display_name":"sa_tech_evaluation_start_date"},"FPA_MASTER_BOOKINGS_FLAG":{"type":"BOOLEAN","index":216,"name":"FPA_MASTER_BOOKINGS_FLAG","comment":null,"display_name":"fpa_master_bookings_flag"},"DOWNGRADE_REASON":{"type":"TEXT","index":217,"name":"DOWNGRADE_REASON","comment":null,"display_name":"downgrade_reason"},"SSP_ID":{"type":"TEXT","index":218,"name":"SSP_ID","comment":null,"display_name":"ssp_id"},"GA_CLIENT_ID":{"type":"TEXT","index":219,"name":"GA_CLIENT_ID","comment":null,"display_name":"ga_client_id"},"VSA_READOUT":{"type":"TEXT","index":220,"name":"VSA_READOUT","comment":null,"display_name":"vsa_readout"},"VSA_START_DATE_NET_ARR":{"type":"FLOAT","index":221,"name":"VSA_START_DATE_NET_ARR","comment":null,"display_name":"vsa_start_date_net_arr"},"VSA_START_DATE":{"type":"TIMESTAMP_TZ","index":222,"name":"VSA_START_DATE","comment":null,"display_name":"vsa_start_date"},"VSA_URL":{"type":"TEXT","index":223,"name":"VSA_URL","comment":null,"display_name":"vsa_url"},"VSA_STATUS":{"type":"TEXT","index":224,"name":"VSA_STATUS","comment":null,"display_name":"vsa_status"},"VSA_END_DATE":{"type":"TIMESTAMP_TZ","index":225,"name":"VSA_END_DATE","comment":null,"display_name":"vsa_end_date"},"MILITARY_INVASION_COMMENTS":{"type":"TEXT","index":226,"name":"MILITARY_INVASION_COMMENTS","comment":null,"display_name":"military_invasion_comments"},"PRE_MILITARY_INVASION_ARR":{"type":"FLOAT","index":227,"name":"PRE_MILITARY_INVASION_ARR","comment":null,"display_name":"pre_military_invasion_arr"},"MILITARY_INVASION_RISK_SCALE":{"type":"TEXT","index":228,"name":"MILITARY_INVASION_RISK_SCALE","comment":null,"display_name":"military_invasion_risk_scale"},"DOWNGRADE_DETAILS":{"type":"TEXT","index":229,"name":"DOWNGRADE_DETAILS","comment":null,"display_name":"downgrade_details"},"WON_ARR_BASIS_FOR_CLARI":{"type":"FLOAT","index":230,"name":"WON_ARR_BASIS_FOR_CLARI","comment":null,"display_name":"won_arr_basis_for_clari"},"ARR_BASIS_FOR_CLARI":{"type":"FLOAT","index":231,"name":"ARR_BASIS_FOR_CLARI","comment":null,"display_name":"arr_basis_for_clari"},"FORECASTED_CHURN_FOR_CLARI":{"type":"FLOAT","index":232,"name":"FORECASTED_CHURN_FOR_CLARI","comment":null,"display_name":"forecasted_churn_for_clari"},"OVERRIDE_ARR_BASIS_CLARI":{"type":"FLOAT","index":233,"name":"OVERRIDE_ARR_BASIS_CLARI","comment":null,"display_name":"override_arr_basis_clari"},"INTENDED_PRODUCT_TIER":{"type":"TEXT","index":234,"name":"INTENDED_PRODUCT_TIER","comment":null,"display_name":"intended_product_tier"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_TZ","index":235,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"DAYS_SINCE_LAST_ACTIVITY":{"type":"NUMBER","index":236,"name":"DAYS_SINCE_LAST_ACTIVITY","comment":null,"display_name":"days_since_last_activity"},"IS_DELETED":{"type":"BOOLEAN","index":237,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":238,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"SALES_LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":239,"name":"SALES_LAST_ACTIVITY_DATE","comment":null,"display_name":"sales_last_activity_date"},"RECORD_TYPE_ID":{"type":"TEXT","index":240,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"DBT_SCD_ID":{"type":"TEXT","index":241,"name":"DBT_SCD_ID","comment":null,"display_name":"dbt_scd_id"},"DBT_VALID_FROM":{"type":"TIMESTAMP_TZ","index":242,"name":"DBT_VALID_FROM","comment":null,"display_name":"dbt_valid_from"},"DBT_VALID_TO":{"type":"TIMESTAMP_TZ","index":243,"name":"DBT_VALID_TO","comment":null,"display_name":"dbt_valid_to"},"IS_LIVE":{"type":"NUMBER","index":244,"name":"IS_LIVE","comment":null,"display_name":"is_live"},"PRIMARY_KEY":{"type":"TEXT","index":245,"name":"PRIMARY_KEY","comment":null,"display_name":"primary_key"},"CREATED_DATE_ID":{"type":"NUMBER","index":246,"name":"CREATED_DATE_ID","comment":null,"display_name":"created_date_id"},"SALES_ACCEPTED_DATE_ID":{"type":"NUMBER","index":247,"name":"SALES_ACCEPTED_DATE_ID","comment":null,"display_name":"sales_accepted_date_id"},"CLOSE_DATE_ID":{"type":"NUMBER","index":248,"name":"CLOSE_DATE_ID","comment":null,"display_name":"close_date_id"},"STAGE_0_PENDING_ACCEPTANCE_DATE_ID":{"type":"NUMBER","index":249,"name":"STAGE_0_PENDING_ACCEPTANCE_DATE_ID","comment":null,"display_name":"stage_0_pending_acceptance_date_id"},"STAGE_1_DISCOVERY_DATE_ID":{"type":"NUMBER","index":250,"name":"STAGE_1_DISCOVERY_DATE_ID","comment":null,"display_name":"stage_1_discovery_date_id"},"STAGE_2_SCOPING_DATE_ID":{"type":"NUMBER","index":251,"name":"STAGE_2_SCOPING_DATE_ID","comment":null,"display_name":"stage_2_scoping_date_id"},"STAGE_3_TECHNICAL_EVALUATION_DATE_ID":{"type":"NUMBER","index":252,"name":"STAGE_3_TECHNICAL_EVALUATION_DATE_ID","comment":null,"display_name":"stage_3_technical_evaluation_date_id"},"STAGE_4_PROPOSAL_DATE_ID":{"type":"NUMBER","index":253,"name":"STAGE_4_PROPOSAL_DATE_ID","comment":null,"display_name":"stage_4_proposal_date_id"},"STAGE_5_NEGOTIATING_DATE_ID":{"type":"NUMBER","index":254,"name":"STAGE_5_NEGOTIATING_DATE_ID","comment":null,"display_name":"stage_5_negotiating_date_id"},"STAGE_6_AWAITING_SIGNATURE_DATE_ID":{"type":"NUMBER","index":255,"name":"STAGE_6_AWAITING_SIGNATURE_DATE_ID","comment":null,"display_name":"stage_6_awaiting_signature_date_id"},"STAGE_6_CLOSED_WON_DATE_ID":{"type":"NUMBER","index":256,"name":"STAGE_6_CLOSED_WON_DATE_ID","comment":null,"display_name":"stage_6_closed_won_date_id"},"STAGE_6_CLOSED_LOST_DATE_ID":{"type":"NUMBER","index":257,"name":"STAGE_6_CLOSED_LOST_DATE_ID","comment":null,"display_name":"stage_6_closed_lost_date_id"},"TECHNICAL_EVALUATION_DATE_ID":{"type":"NUMBER","index":258,"name":"TECHNICAL_EVALUATION_DATE_ID","comment":null,"display_name":"technical_evaluation_date_id"},"LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":259,"name":"LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"last_activity_date_id"},"SALES_LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":260,"name":"SALES_LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"sales_last_activity_date_id"},"SUBSCRIPTION_START_DATE_ID":{"type":"NUMBER","index":261,"name":"SUBSCRIPTION_START_DATE_ID","comment":null,"display_name":"subscription_start_date_id"},"SUBSCRIPTION_END_DATE_ID":{"type":"NUMBER","index":262,"name":"SUBSCRIPTION_END_DATE_ID","comment":null,"display_name":"subscription_end_date_id"},"SALES_QUALIFIED_DATE_ID":{"type":"NUMBER","index":263,"name":"SALES_QUALIFIED_DATE_ID","comment":null,"display_name":"sales_qualified_date_id"},"CLOSE_FISCAL_QUARTER_DATE":{"type":"DATE","index":264,"name":"CLOSE_FISCAL_QUARTER_DATE","comment":null,"display_name":"close_fiscal_quarter_date"},"CLOSE_DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":265,"name":"CLOSE_DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"close_day_of_fiscal_quarter_normalised"},"CLOSE_FISCAL_YEAR":{"type":"NUMBER","index":266,"name":"CLOSE_FISCAL_YEAR","comment":null,"display_name":"close_fiscal_year"},"ARR_CREATED_DATE_ID":{"type":"NUMBER","index":267,"name":"ARR_CREATED_DATE_ID","comment":null,"display_name":"arr_created_date_id"},"ARR_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":268,"name":"ARR_CREATED_DATE","comment":null,"display_name":"arr_created_date"},"ARR_CREATED_FISCAL_QUARTER_NAME":{"type":"TEXT","index":269,"name":"ARR_CREATED_FISCAL_QUARTER_NAME","comment":null,"display_name":"arr_created_fiscal_quarter_name"},"ARR_CREATED_FISCAL_QUARTER_DATE":{"type":"DATE","index":270,"name":"ARR_CREATED_FISCAL_QUARTER_DATE","comment":null,"display_name":"arr_created_fiscal_quarter_date"},"SUBSCRIPTION_START_DATE_FISCAL_QUARTER_NAME":{"type":"TEXT","index":271,"name":"SUBSCRIPTION_START_DATE_FISCAL_QUARTER_NAME","comment":null,"display_name":"subscription_start_date_fiscal_quarter_name"},"SUBSCRIPTION_START_DATE_FISCAL_QUARTER_DATE":{"type":"DATE","index":272,"name":"SUBSCRIPTION_START_DATE_FISCAL_QUARTER_DATE","comment":null,"display_name":"subscription_start_date_fiscal_quarter_date"},"SEGMENT_ORDER_TYPE_IACV_TO_NET_ARR_RATIO":{"type":"FLOAT","index":273,"name":"SEGMENT_ORDER_TYPE_IACV_TO_NET_ARR_RATIO","comment":null,"display_name":"segment_order_type_iacv_to_net_arr_ratio"},"OPPORTUNITY_BASED_IACV_TO_NET_ARR_RATIO":{"type":"FLOAT","index":274,"name":"OPPORTUNITY_BASED_IACV_TO_NET_ARR_RATIO","comment":null,"display_name":"opportunity_based_iacv_to_net_arr_ratio"},"CALCULATED_FROM_RATIO_NET_ARR":{"type":"FLOAT","index":275,"name":"CALCULATED_FROM_RATIO_NET_ARR","comment":null,"display_name":"calculated_from_ratio_net_arr"},"NET_ARR":{"type":"FLOAT","index":276,"name":"NET_ARR","comment":null,"display_name":"net_arr"},"IS_RISKY":{"type":"BOOLEAN","index":277,"name":"IS_RISKY","comment":null,"display_name":"is_risky"},"OPPORTUNITY_TERM":{"type":"FLOAT","index":278,"name":"OPPORTUNITY_TERM","comment":null,"display_name":"opportunity_term"},"IS_ACTIVE":{"type":"BOOLEAN","index":279,"name":"IS_ACTIVE","comment":null,"display_name":"is_active"},"IS_WON":{"type":"BOOLEAN","index":280,"name":"IS_WON","comment":null,"display_name":"is_won"},"IS_STAGE_1_PLUS":{"type":"NUMBER","index":281,"name":"IS_STAGE_1_PLUS","comment":null,"display_name":"is_stage_1_plus"},"IS_STAGE_3_PLUS":{"type":"NUMBER","index":282,"name":"IS_STAGE_3_PLUS","comment":null,"display_name":"is_stage_3_plus"},"IS_STAGE_4_PLUS":{"type":"NUMBER","index":283,"name":"IS_STAGE_4_PLUS","comment":null,"display_name":"is_stage_4_plus"},"IS_LOST":{"type":"NUMBER","index":284,"name":"IS_LOST","comment":null,"display_name":"is_lost"},"IS_RENEWAL":{"type":"NUMBER","index":285,"name":"IS_RENEWAL","comment":null,"display_name":"is_renewal"},"IS_DECOMMISSED":{"type":"NUMBER","index":286,"name":"IS_DECOMMISSED","comment":null,"display_name":"is_decommissed"},"IS_SAO":{"type":"BOOLEAN","index":287,"name":"IS_SAO","comment":null,"display_name":"is_sao"},"IS_SDR_SAO":{"type":"BOOLEAN","index":288,"name":"IS_SDR_SAO","comment":null,"display_name":"is_sdr_sao"},"IS_NET_ARR_CLOSED_DEAL":{"type":"BOOLEAN","index":289,"name":"IS_NET_ARR_CLOSED_DEAL","comment":null,"display_name":"is_net_arr_closed_deal"},"IS_NEW_LOGO_FIRST_ORDER":{"type":"BOOLEAN","index":290,"name":"IS_NEW_LOGO_FIRST_ORDER","comment":null,"display_name":"is_new_logo_first_order"},"IS_NET_ARR_PIPELINE_CREATED":{"type":"BOOLEAN","index":291,"name":"IS_NET_ARR_PIPELINE_CREATED","comment":null,"display_name":"is_net_arr_pipeline_created"},"IS_WIN_RATE_CALC":{"type":"BOOLEAN","index":292,"name":"IS_WIN_RATE_CALC","comment":null,"display_name":"is_win_rate_calc"},"IS_CLOSED_WON":{"type":"BOOLEAN","index":293,"name":"IS_CLOSED_WON","comment":null,"display_name":"is_closed_won"},"IS_ELIGIBLE_OPEN_PIPELINE":{"type":"NUMBER","index":294,"name":"IS_ELIGIBLE_OPEN_PIPELINE","comment":null,"display_name":"is_eligible_open_pipeline"},"IS_ELIGIBLE_SAO":{"type":"NUMBER","index":295,"name":"IS_ELIGIBLE_SAO","comment":null,"display_name":"is_eligible_sao"},"IS_ELIGIBLE_ASP_ANALYSIS":{"type":"NUMBER","index":296,"name":"IS_ELIGIBLE_ASP_ANALYSIS","comment":null,"display_name":"is_eligible_asp_analysis"},"IS_ELIGIBLE_AGE_ANALYSIS":{"type":"NUMBER","index":297,"name":"IS_ELIGIBLE_AGE_ANALYSIS","comment":null,"display_name":"is_eligible_age_analysis"},"IS_ELIGIBLE_NET_ARR":{"type":"NUMBER","index":298,"name":"IS_ELIGIBLE_NET_ARR","comment":null,"display_name":"is_eligible_net_arr"},"IS_ELIGIBLE_CHURN_CONTRACTION":{"type":"NUMBER","index":299,"name":"IS_ELIGIBLE_CHURN_CONTRACTION","comment":null,"display_name":"is_eligible_churn_contraction"},"IS_DUPLICATE":{"type":"NUMBER","index":300,"name":"IS_DUPLICATE","comment":null,"display_name":"is_duplicate"},"IS_CREDIT":{"type":"NUMBER","index":301,"name":"IS_CREDIT","comment":null,"display_name":"is_credit"},"IS_CONTRACT_RESET":{"type":"NUMBER","index":302,"name":"IS_CONTRACT_RESET","comment":null,"display_name":"is_contract_reset"},"ALLIANCE_TYPE_CURRENT":{"type":"TEXT","index":303,"name":"ALLIANCE_TYPE_CURRENT","comment":null,"display_name":"alliance_type_current"},"ALLIANCE_TYPE_SHORT_CURRENT":{"type":"TEXT","index":304,"name":"ALLIANCE_TYPE_SHORT_CURRENT","comment":null,"display_name":"alliance_type_short_current"},"ALLIANCE_TYPE":{"type":"TEXT","index":305,"name":"ALLIANCE_TYPE","comment":null,"display_name":"alliance_type"},"ALLIANCE_TYPE_SHORT":{"type":"TEXT","index":306,"name":"ALLIANCE_TYPE_SHORT","comment":null,"display_name":"alliance_type_short"},"RESALE_PARTNER_NAME":{"type":"TEXT","index":307,"name":"RESALE_PARTNER_NAME","comment":null,"display_name":"resale_partner_name"},"DIM_QUOTE_ID":{"type":"TEXT","index":308,"name":"DIM_QUOTE_ID","comment":null,"display_name":"dim_quote_id"},"QUOTE_START_DATE":{"type":"DATE","index":309,"name":"QUOTE_START_DATE","comment":null,"display_name":"quote_start_date"},"DIM_CRM_PERSON_ID":{"type":"TEXT","index":310,"name":"DIM_CRM_PERSON_ID","comment":null,"display_name":"dim_crm_person_id"},"SFDC_CONTACT_ID":{"type":"TEXT","index":311,"name":"SFDC_CONTACT_ID","comment":null,"display_name":"sfdc_contact_id"},"RECORD_TYPE_NAME":{"type":"TEXT","index":312,"name":"RECORD_TYPE_NAME","comment":null,"display_name":"record_type_name"},"COUNT_CRM_ATTRIBUTION_TOUCHPOINTS":{"type":"NUMBER","index":313,"name":"COUNT_CRM_ATTRIBUTION_TOUCHPOINTS","comment":null,"display_name":"count_crm_attribution_touchpoints"},"COUNT_CAMPAIGNS":{"type":"NUMBER","index":314,"name":"COUNT_CAMPAIGNS","comment":null,"display_name":"count_campaigns"},"WEIGHTED_LINEAR_IACV":{"type":"FLOAT","index":315,"name":"WEIGHTED_LINEAR_IACV","comment":null,"display_name":"weighted_linear_iacv"},"CLOSED_BUCKETS":{"type":"TEXT","index":316,"name":"CLOSED_BUCKETS","comment":null,"display_name":"closed_buckets"},"CHURN_CONTRACTION_NET_ARR_BUCKET":{"type":"TEXT","index":317,"name":"CHURN_CONTRACTION_NET_ARR_BUCKET","comment":null,"display_name":"churn_contraction_net_arr_bucket"},"SDR_OR_BDR":{"type":"TEXT","index":318,"name":"SDR_OR_BDR","comment":null,"display_name":"sdr_or_bdr"},"STAGE_CATEGORY":{"type":"TEXT","index":319,"name":"STAGE_CATEGORY","comment":null,"display_name":"stage_category"},"DEAL_GROUP":{"type":"TEXT","index":320,"name":"DEAL_GROUP","comment":null,"display_name":"deal_group"},"DEAL_CATEGORY":{"type":"TEXT","index":321,"name":"DEAL_CATEGORY","comment":null,"display_name":"deal_category"},"REASON_FOR_LOSS_STAGED":{"type":"TEXT","index":322,"name":"REASON_FOR_LOSS_STAGED","comment":null,"display_name":"reason_for_loss_staged"},"REASON_FOR_LOSS_CALC":{"type":"TEXT","index":323,"name":"REASON_FOR_LOSS_CALC","comment":null,"display_name":"reason_for_loss_calc"},"CHURN_CONTRACTION_TYPE":{"type":"TEXT","index":324,"name":"CHURN_CONTRACTION_TYPE","comment":null,"display_name":"churn_contraction_type"},"RENEWAL_TIMING_STATUS":{"type":"TEXT","index":325,"name":"RENEWAL_TIMING_STATUS","comment":null,"display_name":"renewal_timing_status"},"CHURNED_CONTRACTION_NET_ARR_BUCKET":{"type":"TEXT","index":326,"name":"CHURNED_CONTRACTION_NET_ARR_BUCKET","comment":null,"display_name":"churned_contraction_net_arr_bucket"},"DEAL_PATH_ENGAGEMENT":{"type":"TEXT","index":327,"name":"DEAL_PATH_ENGAGEMENT","comment":null,"display_name":"deal_path_engagement"},"DEAL_SIZE":{"type":"TEXT","index":328,"name":"DEAL_SIZE","comment":null,"display_name":"deal_size"},"CALCULATED_DEAL_SIZE":{"type":"TEXT","index":329,"name":"CALCULATED_DEAL_SIZE","comment":null,"display_name":"calculated_deal_size"},"STAGE_NAME_3PLUS":{"type":"TEXT","index":330,"name":"STAGE_NAME_3PLUS","comment":null,"display_name":"stage_name_3plus"},"STAGE_NAME_4PLUS":{"type":"TEXT","index":331,"name":"STAGE_NAME_4PLUS","comment":null,"display_name":"stage_name_4plus"},"CALCULATED_DEAL_COUNT":{"type":"NUMBER","index":332,"name":"CALCULATED_DEAL_COUNT","comment":null,"display_name":"calculated_deal_count"},"OPEN_1PLUS_DEAL_COUNT":{"type":"NUMBER","index":333,"name":"OPEN_1PLUS_DEAL_COUNT","comment":null,"display_name":"open_1plus_deal_count"},"OPEN_3PLUS_DEAL_COUNT":{"type":"NUMBER","index":334,"name":"OPEN_3PLUS_DEAL_COUNT","comment":null,"display_name":"open_3plus_deal_count"},"OPEN_4PLUS_DEAL_COUNT":{"type":"NUMBER","index":335,"name":"OPEN_4PLUS_DEAL_COUNT","comment":null,"display_name":"open_4plus_deal_count"},"BOOKED_DEAL_COUNT":{"type":"NUMBER","index":336,"name":"BOOKED_DEAL_COUNT","comment":null,"display_name":"booked_deal_count"},"CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":337,"name":"CHURNED_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"churned_contraction_deal_count"},"BOOKED_CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":338,"name":"BOOKED_CHURNED_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"booked_churned_contraction_deal_count"},"BOOKED_CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":339,"name":"BOOKED_CHURNED_CONTRACTION_NET_ARR","comment":null,"display_name":"booked_churned_contraction_net_arr"},"CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":340,"name":"CHURNED_CONTRACTION_NET_ARR","comment":null,"display_name":"churned_contraction_net_arr"},"OPEN_1PLUS_NET_ARR":{"type":"FLOAT","index":341,"name":"OPEN_1PLUS_NET_ARR","comment":null,"display_name":"open_1plus_net_arr"},"OPEN_3PLUS_NET_ARR":{"type":"FLOAT","index":342,"name":"OPEN_3PLUS_NET_ARR","comment":null,"display_name":"open_3plus_net_arr"},"OPEN_4PLUS_NET_ARR":{"type":"FLOAT","index":343,"name":"OPEN_4PLUS_NET_ARR","comment":null,"display_name":"open_4plus_net_arr"},"BOOKED_NET_ARR":{"type":"FLOAT","index":344,"name":"BOOKED_NET_ARR","comment":null,"display_name":"booked_net_arr"},"IS_BOOKED_NET_ARR":{"type":"NUMBER","index":345,"name":"IS_BOOKED_NET_ARR","comment":null,"display_name":"is_booked_net_arr"},"CALCULATED_PARTNER_TRACK":{"type":"TEXT","index":346,"name":"CALCULATED_PARTNER_TRACK","comment":null,"display_name":"calculated_partner_track"},"IS_EXCLUDED_FROM_PIPELINE_CREATED":{"type":"NUMBER","index":347,"name":"IS_EXCLUDED_FROM_PIPELINE_CREATED","comment":null,"display_name":"is_excluded_from_pipeline_created"},"CALCULATED_AGE_IN_DAYS":{"type":"NUMBER","index":348,"name":"CALCULATED_AGE_IN_DAYS","comment":null,"display_name":"calculated_age_in_days"},"CREATED_AND_WON_SAME_QUARTER_NET_ARR":{"type":"FLOAT","index":349,"name":"CREATED_AND_WON_SAME_QUARTER_NET_ARR","comment":null,"display_name":"created_and_won_same_quarter_net_arr"},"IS_COMP_NEW_LOGO_OVERRIDE":{"type":"NUMBER","index":350,"name":"IS_COMP_NEW_LOGO_OVERRIDE","comment":null,"display_name":"is_comp_new_logo_override"},"CREATED_IN_SNAPSHOT_QUARTER_NET_ARR":{"type":"FLOAT","index":351,"name":"CREATED_IN_SNAPSHOT_QUARTER_NET_ARR","comment":null,"display_name":"created_in_snapshot_quarter_net_arr"},"CREATED_IN_SNAPSHOT_QUARTER_DEAL_COUNT":{"type":"NUMBER","index":352,"name":"CREATED_IN_SNAPSHOT_QUARTER_DEAL_COUNT","comment":null,"display_name":"created_in_snapshot_quarter_deal_count"},"COMPETITORS_OTHER_FLAG":{"type":"NUMBER","index":353,"name":"COMPETITORS_OTHER_FLAG","comment":null,"display_name":"competitors_other_flag"},"COMPETITORS_GITLAB_CORE_FLAG":{"type":"NUMBER","index":354,"name":"COMPETITORS_GITLAB_CORE_FLAG","comment":null,"display_name":"competitors_gitlab_core_flag"},"COMPETITORS_NONE_FLAG":{"type":"NUMBER","index":355,"name":"COMPETITORS_NONE_FLAG","comment":null,"display_name":"competitors_none_flag"},"COMPETITORS_GITHUB_ENTERPRISE_FLAG":{"type":"NUMBER","index":356,"name":"COMPETITORS_GITHUB_ENTERPRISE_FLAG","comment":null,"display_name":"competitors_github_enterprise_flag"},"COMPETITORS_BITBUCKET_SERVER_FLAG":{"type":"NUMBER","index":357,"name":"COMPETITORS_BITBUCKET_SERVER_FLAG","comment":null,"display_name":"competitors_bitbucket_server_flag"},"COMPETITORS_UNKNOWN_FLAG":{"type":"NUMBER","index":358,"name":"COMPETITORS_UNKNOWN_FLAG","comment":null,"display_name":"competitors_unknown_flag"},"COMPETITORS_GITHUB_FLAG":{"type":"NUMBER","index":359,"name":"COMPETITORS_GITHUB_FLAG","comment":null,"display_name":"competitors_github_flag"},"COMPETITORS_GITLAB_FLAG":{"type":"NUMBER","index":360,"name":"COMPETITORS_GITLAB_FLAG","comment":null,"display_name":"competitors_gitlab_flag"},"COMPETITORS_JENKINS_FLAG":{"type":"NUMBER","index":361,"name":"COMPETITORS_JENKINS_FLAG","comment":null,"display_name":"competitors_jenkins_flag"},"COMPETITORS_AZURE_DEVOPS_FLAG":{"type":"NUMBER","index":362,"name":"COMPETITORS_AZURE_DEVOPS_FLAG","comment":null,"display_name":"competitors_azure_devops_flag"},"COMPETITORS_SVN_FLAG":{"type":"NUMBER","index":363,"name":"COMPETITORS_SVN_FLAG","comment":null,"display_name":"competitors_svn_flag"},"COMPETITORS_BITBUCKET_FLAG":{"type":"NUMBER","index":364,"name":"COMPETITORS_BITBUCKET_FLAG","comment":null,"display_name":"competitors_bitbucket_flag"},"COMPETITORS_ATLASSIAN_FLAG":{"type":"NUMBER","index":365,"name":"COMPETITORS_ATLASSIAN_FLAG","comment":null,"display_name":"competitors_atlassian_flag"},"COMPETITORS_PERFORCE_FLAG":{"type":"NUMBER","index":366,"name":"COMPETITORS_PERFORCE_FLAG","comment":null,"display_name":"competitors_perforce_flag"},"COMPETITORS_VISUAL_STUDIO_FLAG":{"type":"NUMBER","index":367,"name":"COMPETITORS_VISUAL_STUDIO_FLAG","comment":null,"display_name":"competitors_visual_studio_flag"},"COMPETITORS_AZURE_FLAG":{"type":"NUMBER","index":368,"name":"COMPETITORS_AZURE_FLAG","comment":null,"display_name":"competitors_azure_flag"},"COMPETITORS_AMAZON_CODE_COMMIT_FLAG":{"type":"NUMBER","index":369,"name":"COMPETITORS_AMAZON_CODE_COMMIT_FLAG","comment":null,"display_name":"competitors_amazon_code_commit_flag"},"COMPETITORS_CIRCLECI_FLAG":{"type":"NUMBER","index":370,"name":"COMPETITORS_CIRCLECI_FLAG","comment":null,"display_name":"competitors_circleci_flag"},"COMPETITORS_BAMBOO_FLAG":{"type":"NUMBER","index":371,"name":"COMPETITORS_BAMBOO_FLAG","comment":null,"display_name":"competitors_bamboo_flag"},"COMPETITORS_AWS_FLAG":{"type":"NUMBER","index":372,"name":"COMPETITORS_AWS_FLAG","comment":null,"display_name":"competitors_aws_flag"},"REPORT_OPPORTUNITY_USER_SEGMENT":{"type":"TEXT","index":373,"name":"REPORT_OPPORTUNITY_USER_SEGMENT","comment":null,"display_name":"report_opportunity_user_segment"},"REPORT_OPPORTUNITY_USER_GEO":{"type":"TEXT","index":374,"name":"REPORT_OPPORTUNITY_USER_GEO","comment":null,"display_name":"report_opportunity_user_geo"},"REPORT_OPPORTUNITY_USER_REGION":{"type":"TEXT","index":375,"name":"REPORT_OPPORTUNITY_USER_REGION","comment":null,"display_name":"report_opportunity_user_region"},"REPORT_OPPORTUNITY_USER_AREA":{"type":"TEXT","index":376,"name":"REPORT_OPPORTUNITY_USER_AREA","comment":null,"display_name":"report_opportunity_user_area"},"REPORT_USER_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":377,"name":"REPORT_USER_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"report_user_segment_geo_region_area"},"KEY_SQS":{"type":"TEXT","index":378,"name":"KEY_SQS","comment":null,"display_name":"key_sqs"},"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":379,"name":"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT","comment":null,"display_name":"report_user_segment_geo_region_area_sqs_ot"},"KEY_SEGMENT":{"type":"TEXT","index":380,"name":"KEY_SEGMENT","comment":null,"display_name":"key_segment"},"KEY_OT":{"type":"TEXT","index":381,"name":"KEY_OT","comment":null,"display_name":"key_ot"},"KEY_SEGMENT_SQS":{"type":"TEXT","index":382,"name":"KEY_SEGMENT_SQS","comment":null,"display_name":"key_segment_sqs"},"KEY_SEGMENT_OT":{"type":"TEXT","index":383,"name":"KEY_SEGMENT_OT","comment":null,"display_name":"key_segment_ot"},"KEY_SEGMENT_GEO":{"type":"TEXT","index":384,"name":"KEY_SEGMENT_GEO","comment":null,"display_name":"key_segment_geo"},"KEY_SEGMENT_GEO_SQS":{"type":"TEXT","index":385,"name":"KEY_SEGMENT_GEO_SQS","comment":null,"display_name":"key_segment_geo_sqs"},"KEY_SEGMENT_GEO_OT":{"type":"TEXT","index":386,"name":"KEY_SEGMENT_GEO_OT","comment":null,"display_name":"key_segment_geo_ot"},"KEY_SEGMENT_GEO_REGION":{"type":"TEXT","index":387,"name":"KEY_SEGMENT_GEO_REGION","comment":null,"display_name":"key_segment_geo_region"},"KEY_SEGMENT_GEO_REGION_SQS":{"type":"TEXT","index":388,"name":"KEY_SEGMENT_GEO_REGION_SQS","comment":null,"display_name":"key_segment_geo_region_sqs"},"KEY_SEGMENT_GEO_REGION_OT":{"type":"TEXT","index":389,"name":"KEY_SEGMENT_GEO_REGION_OT","comment":null,"display_name":"key_segment_geo_region_ot"},"KEY_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":390,"name":"KEY_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"key_segment_geo_region_area"},"KEY_SEGMENT_GEO_REGION_AREA_SQS":{"type":"TEXT","index":391,"name":"KEY_SEGMENT_GEO_REGION_AREA_SQS","comment":null,"display_name":"key_segment_geo_region_area_sqs"},"KEY_SEGMENT_GEO_REGION_AREA_OT":{"type":"TEXT","index":392,"name":"KEY_SEGMENT_GEO_REGION_AREA_OT","comment":null,"display_name":"key_segment_geo_region_area_ot"},"KEY_SEGMENT_GEO_AREA":{"type":"TEXT","index":393,"name":"KEY_SEGMENT_GEO_AREA","comment":null,"display_name":"key_segment_geo_area"},"SALES_TEAM_CRO_LEVEL":{"type":"TEXT","index":394,"name":"SALES_TEAM_CRO_LEVEL","comment":null,"display_name":"sales_team_cro_level"},"SALES_TEAM_RD_ASM_LEVEL":{"type":"TEXT","index":395,"name":"SALES_TEAM_RD_ASM_LEVEL","comment":null,"display_name":"sales_team_rd_asm_level"},"SALES_TEAM_VP_LEVEL":{"type":"TEXT","index":396,"name":"SALES_TEAM_VP_LEVEL","comment":null,"display_name":"sales_team_vp_level"},"SALES_TEAM_AVP_RD_LEVEL":{"type":"TEXT","index":397,"name":"SALES_TEAM_AVP_RD_LEVEL","comment":null,"display_name":"sales_team_avp_rd_level"},"SALES_TEAM_ASM_LEVEL":{"type":"TEXT","index":398,"name":"SALES_TEAM_ASM_LEVEL","comment":null,"display_name":"sales_team_asm_level"},"ACCOUNT_OWNER_TEAM_STAMPED_CRO_LEVEL":{"type":"TEXT","index":399,"name":"ACCOUNT_OWNER_TEAM_STAMPED_CRO_LEVEL","comment":null,"display_name":"account_owner_team_stamped_cro_level"},"DIM_CRM_OPP_OWNER_STAMPED_HIERARCHY_SK":{"type":"TEXT","index":400,"name":"DIM_CRM_OPP_OWNER_STAMPED_HIERARCHY_SK","comment":null,"display_name":"dim_crm_opp_owner_stamped_hierarchy_sk"},"CREATED_BY":{"type":"TEXT","index":401,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":402,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":403,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":404,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":405,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":406,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 19:00UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":87669423616,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_crm_opportunity","raw_sql":"$1a","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.ref","macro.dbt.is_incremental","macro.gitlab_snowflake.sales_qualified_source_cleaning","macro.dbt_utils.star","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.alliance_partner_current","macro.gitlab_snowflake.alliance_partner_short_current","macro.gitlab_snowflake.alliance_partner","macro.gitlab_snowflake.alliance_partner_short","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_user_roles_source","model.gitlab_snowflake.sfdc_user_roles_source","seed.gitlab_snowflake.net_iacv_to_net_arr_ratio","seed.gitlab_snowflake.net_iacv_to_net_arr_ratio","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.sfdc_opportunity_stage_source","model.gitlab_snowflake.sfdc_opportunity_stage_source","model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_opportunity_snapshots_source","model.gitlab_snowflake.sfdc_opportunity_snapshots_source","model.gitlab_snowflake.sfdc_opportunity_stage_source","model.gitlab_snowflake.sfdc_opportunity_stage_source","model.gitlab_snowflake.sfdc_record_type_source","model.gitlab_snowflake.sfdc_record_type_source","model.gitlab_snowflake.sfdc_opportunity_contact_role_source","model.gitlab_snowflake.sfdc_opportunity_contact_role_source","model.gitlab_snowflake.sfdc_bizible_attribution_touchpoint_source","model.gitlab_snowflake.sfdc_bizible_attribution_touchpoint_source","model.gitlab_snowflake.prep_crm_account_daily_snapshot","model.gitlab_snowflake.prep_crm_account_daily_snapshot","model.gitlab_snowflake.prep_crm_user_daily_snapshot","model.gitlab_snowflake.prep_crm_user_daily_snapshot","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_users_source","model.gitlab_snowflake.sfdc_users_source","model.gitlab_snowflake.sfdc_opportunity_snapshots_source","model.gitlab_snowflake.sfdc_opportunity_snapshots_source","model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_zqu_quote_source","model.gitlab_snowflake.sfdc_zqu_quote_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_prep","database":"PROD","tags":["safe","six_hourly"],"meta":{},"materialized":"incremental","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":"primary_key","on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_prep","fqn":["gitlab_snowflake","common_prep","restricted_safe","prep_crm_opportunity"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/restricted_safe/prep_crm_opportunity.sql","original_file_path":"models/common_prep/restricted_safe/prep_crm_opportunity.sql","name":"prep_crm_opportunity","alias":"prep_crm_opportunity","checksum":{"name":"sha256","checksum":"3840148e615820322c7ff9d0a415488e7df6dc7d9c5e07896a4fa4579caa072d"},"tags":["safe","six_hourly"],"refs":[["sfdc_user_roles_source"],["sfdc_user_roles_source"],["net_iacv_to_net_arr_ratio"],["net_iacv_to_net_arr_ratio"],["dim_date"],["dim_date"],["sfdc_opportunity_stage_source"],["sfdc_opportunity_stage_source"],["sfdc_opportunity_source"],["sfdc_opportunity_source"],["sfdc_opportunity_snapshots_source"],["sfdc_opportunity_snapshots_source"],["sfdc_opportunity_stage_source"],["sfdc_opportunity_stage_source"],["sfdc_record_type_source"],["sfdc_record_type_source"],["sfdc_opportunity_contact_role_source"],["sfdc_opportunity_contact_role_source"],["sfdc_bizible_attribution_touchpoint_source"],["sfdc_bizible_attribution_touchpoint_source"],["prep_crm_account_daily_snapshot"],["prep_crm_account_daily_snapshot"],["prep_crm_user_daily_snapshot"],["prep_crm_user_daily_snapshot"],["sfdc_account_source"],["sfdc_account_source"],["sfdc_users_source"],["sfdc_users_source"],["sfdc_opportunity_snapshots_source"],["sfdc_opportunity_snapshots_source"],["sfdc_opportunity_source"],["sfdc_opportunity_source"],["sfdc_zqu_quote_source"],["sfdc_zqu_quote_source"]],"sources":[],"metrics":[],"description":"Prep model for the live crm opportunity dimension and fact models. This model is refreshed on a six hourly schedule using the `dbt_six_hourly` airflow DAG.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/restricted_safe/prep_crm_opportunity.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"incremental","tags":["six_hourly"],"secure":true,"unique_key":"primary_key"},"created_at":1689033757.9727318,"compiled_sql":"$1b","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_prep.prep_crm_opportunity","label":"prep_crm_opportunity"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_PARTNER_CATEGORY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_PARTNER_CATEGORY_ID":{"type":"TEXT","index":1,"name":"DIM_PARTNER_CATEGORY_ID","comment":null,"display_name":"dim_partner_category_id"},"PARTNER_CATEGORY_NAME":{"type":"TEXT","index":2,"name":"PARTNER_CATEGORY_NAME","comment":null,"display_name":"partner_category_name"},"CREATED_BY":{"type":"TEXT","index":3,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":4,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":5,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":6,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":7,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":8,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 08:54UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":15360,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_partner_category","raw_sql":"$1c","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.partner_category","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_opportunity_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_partner_category"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_partner_category.sql","original_file_path":"models/common_prep/prep_partner_category.sql","name":"prep_partner_category","alias":"prep_partner_category","checksum":{"name":"sha256","checksum":"00f0a62896242aee6665cfecdc782ae641942aa58b80fc95eaa29836810ccd48"},"tags":["mnpi_exception"],"refs":[["sfdc_opportunity_source"],["sfdc_opportunity_source"],["sfdc_account_source"],["sfdc_account_source"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_partner_category.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033710.1718519,"compiled_sql":"$1d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_partner_category","label":"prep_partner_category"},{"metadata":{"type":"VIEW","schema":"RESTRICTED_SAFE_WORKSPACE_FINANCE","name":"RPT_MANUAL_TRUE_UP_CHARGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SUBSCRIPTION_NAME":{"type":"TEXT","index":1,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"TEXT","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"TEXT","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"DIM_CHARGE_ID":{"type":"TEXT","index":7,"name":"DIM_CHARGE_ID","comment":null,"display_name":"dim_charge_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":8,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":9,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":10,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a version of a subscription","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":11,"name":"dim_billing_account_id","comment":null,"description":"Unique identifier of a billing account","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":12,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":13,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"EFFECTIVE_START_DATE_ID":{"type":"NUMBER","index":14,"name":"EFFECTIVE_START_DATE_ID","comment":null,"display_name":"effective_start_date_id"},"EFFECTIVE_END_DATE_ID":{"type":"NUMBER","index":15,"name":"EFFECTIVE_END_DATE_ID","comment":null,"display_name":"effective_end_date_id"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":16,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"RATE_PLAN_NAME":{"type":"TEXT","index":17,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":18,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"IS_LAST_SEGMENT":{"type":"TEXT","index":19,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"DISCOUNT_LEVEL":{"type":"TEXT","index":20,"name":"DISCOUNT_LEVEL","comment":null,"display_name":"discount_level"},"CHARGE_TYPE":{"type":"TEXT","index":21,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"RATE_PLAN_CHARGE_AMENDEMENT_TYPE":{"type":"TEXT","index":22,"name":"RATE_PLAN_CHARGE_AMENDEMENT_TYPE","comment":null,"display_name":"rate_plan_charge_amendement_type"},"UNIT_OF_MEASURE":{"type":"TEXT","index":23,"name":"UNIT_OF_MEASURE","comment":null,"display_name":"unit_of_measure"},"IS_PAID_IN_FULL":{"type":"TEXT","index":24,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"MONTHS_OF_FUTURE_BILLINGS":{"type":"NUMBER","index":25,"name":"MONTHS_OF_FUTURE_BILLINGS","comment":null,"display_name":"months_of_future_billings"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":26,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":27,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"EFFECTIVE_START_DATE":{"type":"DATE","index":28,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":29,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":30,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":31,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGED_THROUGH_DATE":{"type":"DATE","index":32,"name":"CHARGED_THROUGH_DATE","comment":null,"display_name":"charged_through_date"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":33,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":34,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"CHARGE_TERM":{"type":"NUMBER","index":35,"name":"CHARGE_TERM","comment":null,"display_name":"charge_term"},"ADJUSTMENT":{"type":"FLOAT","index":36,"name":"adjustment","comment":null,"description":"Amount of ARR which needs to be adjusted for the true-up","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"adjustment"},"MRR":{"type":"FLOAT","index":37,"name":"MRR","comment":null,"display_name":"mrr"},"PREVIOUS_MRR_CALC":{"type":"TEXT","index":38,"name":"PREVIOUS_MRR_CALC","comment":null,"display_name":"previous_mrr_calc"},"PREVIOUS_MRR":{"type":"TEXT","index":39,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR_CALC":{"type":"TEXT","index":40,"name":"DELTA_MRR_CALC","comment":null,"display_name":"delta_mrr_calc"},"DELTA_MRR":{"type":"TEXT","index":41,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"DELTA_MRC":{"type":"TEXT","index":42,"name":"DELTA_MRC","comment":null,"display_name":"delta_mrc"},"ARR":{"type":"FLOAT","index":43,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"TEXT","index":44,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARC":{"type":"TEXT","index":45,"name":"DELTA_ARC","comment":null,"display_name":"delta_arc"},"DELTA_ARR":{"type":"TEXT","index":46,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"NUMBER","index":47,"name":"QUANTITY","comment":null,"display_name":"quantity"},"PREVIOUS_QUANTITY_CALC":{"type":"TEXT","index":48,"name":"PREVIOUS_QUANTITY_CALC","comment":null,"display_name":"previous_quantity_calc"},"PREVIOUS_QUANTITY":{"type":"TEXT","index":49,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY_CALC":{"type":"TEXT","index":50,"name":"DELTA_QUANTITY_CALC","comment":null,"display_name":"delta_quantity_calc"},"DELTA_QUANTITY":{"type":"TEXT","index":51,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"TCV":{"type":"TEXT","index":52,"name":"TCV","comment":null,"display_name":"tcv"},"DELTA_TCV":{"type":"TEXT","index":53,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":54,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"CREATED_BY":{"type":"TEXT","index":55,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":56,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":57,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":58,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":59,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":60,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"has_stats":{"id":"has_stats","label":"Has Stats?","value":false,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_manual_true_up_charge","raw_sql":"$1e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.zuora_account_source","model.gitlab_snowflake.zuora_account_source","model.gitlab_snowflake.zuora_rate_plan_source","model.gitlab_snowflake.zuora_rate_plan_source","model.gitlab_snowflake.zuora_rate_plan_charge_source","model.gitlab_snowflake.zuora_rate_plan_charge_source","model.gitlab_snowflake.zuora_subscription_source","model.gitlab_snowflake.zuora_subscription_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_workspace_finance","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"view","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_finance","fqn":["gitlab_snowflake","workspaces","workspace_finance","restricted_safe","rpt_manual_true_up_charge"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_finance/restricted_safe/rpt_manual_true_up_charge.sql","original_file_path":"models/workspaces/workspace_finance/restricted_safe/rpt_manual_true_up_charge.sql","name":"rpt_manual_true_up_charge","alias":"rpt_manual_true_up_charge","checksum":{"name":"sha256","checksum":"7aae28b9dd2ac4dcc82abd2d3bb0461ab2fbbd2216a31b7c7e4fcbbdba990c17"},"tags":["workspace","safe"],"refs":[["map_merged_crm_account"],["map_merged_crm_account"],["sfdc_account_source"],["sfdc_account_source"],["zuora_account_source"],["zuora_account_source"],["zuora_rate_plan_source"],["zuora_rate_plan_source"],["zuora_rate_plan_charge_source"],["zuora_rate_plan_charge_source"],["zuora_subscription_source"],["zuora_subscription_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_manual_journal_entry_source"],["zuora_revenue_manual_journal_entry_source"]],"sources":[],"metrics":[],"description":"Report table for tracking true up changes from Zuora Revenue which are added manually into ARR modeling.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_finance/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_finance/restricted_safe/rpt_manual_true_up_charge.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"view","tags":["safe"],"secure":true},"created_at":1689033734.2425058,"compiled_sql":"$1f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_finance.rpt_manual_true_up_charge","label":"rpt_manual_true_up_charge"},{"metadata":{"type":"BASE TABLE","schema":"LEGACY","name":"SFDC_DELETED_ACCOUNTS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SFDC_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"SFDC_ACCOUNT_ID","comment":null,"display_name":"sfdc_account_id"},"SFDC_MASTER_RECORD_ID":{"type":"TEXT","index":2,"name":"SFDC_MASTER_RECORD_ID","comment":null,"display_name":"sfdc_master_record_id"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 08:55UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":76288,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.sfdc_deleted_accounts","raw_sql":"{{ config(\n    tags=[\"mnpi_exception\"]\n) }}\n\nWITH source AS (\n\n    SELECT *\n    FROM {{ ref('sfdc_account_source') }}\n    WHERE account_id IS NOT NULL\n      AND is_deleted = TRUE\n)\n\nSELECT\n  a.account_id                                     AS sfdc_account_id,\n  COALESCE(b.master_record_id, a.master_record_id) AS sfdc_master_record_id\nFROM source a\nLEFT JOIN source b\n  ON a.master_record_id = b.account_id","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"legacy","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"legacy","fqn":["gitlab_snowflake","legacy","sfdc","intermediate","sfdc_deleted_accounts"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/sfdc/intermediate/sfdc_deleted_accounts.sql","original_file_path":"models/legacy/sfdc/intermediate/sfdc_deleted_accounts.sql","name":"sfdc_deleted_accounts","alias":"sfdc_deleted_accounts","checksum":{"name":"sha256","checksum":"a75eb0f9353e7f2494130473b7a243c54aa9bb5924e2b426c8e6781dd45ef16d"},"tags":["mnpi_exception"],"refs":[["sfdc_account_source"],["sfdc_account_source"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/legacy/sfdc/intermediate/sfdc_deleted_accounts.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033721.8505492,"compiled_sql":"\n\nWITH source AS (\n\n    SELECT *\n    FROM \"PREP\".sfdc.sfdc_account_source\n    WHERE account_id IS NOT NULL\n      AND is_deleted = TRUE\n)\n\nSELECT\n  a.account_id                                     AS sfdc_account_id,\n  COALESCE(b.master_record_id, a.master_record_id) AS sfdc_master_record_id\nFROM source a\nLEFT JOIN source b\n  ON a.master_record_id = b.account_id","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".legacy.sfdc_deleted_accounts","label":"sfdc_deleted_accounts"},{"metadata":{"type":"VIEW","schema":"RESTRICTED_SAFE_WORKSPACE_FINANCE","name":"PREP_CHARGE_API_SANDBOX","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SUBSCRIPTION_NAME":{"type":"TEXT","index":1,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"DIM_CHARGE_ID":{"type":"TEXT","index":7,"name":"DIM_CHARGE_ID","comment":null,"display_name":"dim_charge_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":8,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":9,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":10,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":11,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":12,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":13,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"DIM_ORDER_ID":{"type":"TEXT","index":14,"name":"DIM_ORDER_ID","comment":null,"display_name":"dim_order_id"},"EFFECTIVE_START_DATE_ID":{"type":"NUMBER","index":15,"name":"EFFECTIVE_START_DATE_ID","comment":null,"display_name":"effective_start_date_id"},"EFFECTIVE_END_DATE_ID":{"type":"NUMBER","index":16,"name":"EFFECTIVE_END_DATE_ID","comment":null,"display_name":"effective_end_date_id"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":17,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"RATE_PLAN_NAME":{"type":"TEXT","index":18,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":19,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"RATE_PLAN_CHARGE_DESCRIPTION":{"type":"TEXT","index":20,"name":"RATE_PLAN_CHARGE_DESCRIPTION","comment":null,"display_name":"rate_plan_charge_description"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":21,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"DISCOUNT_LEVEL":{"type":"TEXT","index":22,"name":"DISCOUNT_LEVEL","comment":null,"display_name":"discount_level"},"CHARGE_TYPE":{"type":"TEXT","index":23,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"RATE_PLAN_CHARGE_AMENDEMENT_TYPE":{"type":"TEXT","index":24,"name":"RATE_PLAN_CHARGE_AMENDEMENT_TYPE","comment":null,"display_name":"rate_plan_charge_amendement_type"},"UNIT_OF_MEASURE":{"type":"TEXT","index":25,"name":"UNIT_OF_MEASURE","comment":null,"display_name":"unit_of_measure"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":26,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"MONTHS_OF_FUTURE_BILLINGS":{"type":"NUMBER","index":27,"name":"MONTHS_OF_FUTURE_BILLINGS","comment":null,"display_name":"months_of_future_billings"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":28,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":29,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"EFFECTIVE_START_DATE":{"type":"DATE","index":30,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":31,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":32,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":33,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGED_THROUGH_DATE":{"type":"DATE","index":34,"name":"CHARGED_THROUGH_DATE","comment":null,"display_name":"charged_through_date"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":35,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":36,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"CHARGE_TERM":{"type":"NUMBER","index":37,"name":"CHARGE_TERM","comment":null,"display_name":"charge_term"},"MRR":{"type":"FLOAT","index":38,"name":"MRR","comment":null,"display_name":"mrr"},"PREVIOUS_MRR_CALC":{"type":"FLOAT","index":39,"name":"PREVIOUS_MRR_CALC","comment":null,"display_name":"previous_mrr_calc"},"PREVIOUS_MRR":{"type":"FLOAT","index":40,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR_CALC":{"type":"FLOAT","index":41,"name":"DELTA_MRR_CALC","comment":null,"display_name":"delta_mrr_calc"},"DELTA_MRR":{"type":"FLOAT","index":42,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"DELTA_MRC":{"type":"FLOAT","index":43,"name":"DELTA_MRC","comment":null,"display_name":"delta_mrc"},"ARR":{"type":"FLOAT","index":44,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":45,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARC":{"type":"FLOAT","index":46,"name":"DELTA_ARC","comment":null,"display_name":"delta_arc"},"DELTA_ARR":{"type":"FLOAT","index":47,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":48,"name":"QUANTITY","comment":null,"display_name":"quantity"},"PREVIOUS_QUANTITY_CALC":{"type":"FLOAT","index":49,"name":"PREVIOUS_QUANTITY_CALC","comment":null,"display_name":"previous_quantity_calc"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":50,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY_CALC":{"type":"FLOAT","index":51,"name":"DELTA_QUANTITY_CALC","comment":null,"display_name":"delta_quantity_calc"},"DELTA_QUANTITY":{"type":"FLOAT","index":52,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"TCV":{"type":"FLOAT","index":53,"name":"TCV","comment":null,"display_name":"tcv"},"DELTA_TCV":{"type":"FLOAT","index":54,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":55,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":56,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"CREATED_BY":{"type":"TEXT","index":57,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":58,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":59,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":60,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":61,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":62,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"has_stats":{"id":"has_stats","label":"Has Stats?","value":false,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_charge_api_sandbox","raw_sql":"$20","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_charge_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_charge_source","model.gitlab_snowflake.zuora_api_sandbox_order_action_source","model.gitlab_snowflake.zuora_api_sandbox_order_action_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_api_sandbox_order_source","model.gitlab_snowflake.zuora_api_sandbox_order_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.zuora_api_sandbox_account_source","model.gitlab_snowflake.zuora_api_sandbox_account_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_charge_source","model.gitlab_snowflake.zuora_api_sandbox_rate_plan_charge_source","model.gitlab_snowflake.zuora_api_sandbox_subscription_source","model.gitlab_snowflake.zuora_api_sandbox_subscription_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_workspace_finance","database":"PROD","tags":["workspace","safe","mnpi"],"meta":{},"materialized":"view","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_finance","fqn":["gitlab_snowflake","workspaces","workspace_finance","restricted_safe","prep_charge_api_sandbox"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_finance/restricted_safe/prep_charge_api_sandbox.sql","original_file_path":"models/workspaces/workspace_finance/restricted_safe/prep_charge_api_sandbox.sql","name":"prep_charge_api_sandbox","alias":"prep_charge_api_sandbox","checksum":{"name":"sha256","checksum":"90d586471b22fed1725299c68a20aecaa2e08439e16da4592bae2fe2f5c30302"},"tags":["workspace","safe","mnpi"],"refs":[["map_merged_crm_account"],["map_merged_crm_account"],["zuora_api_sandbox_rate_plan_source"],["zuora_api_sandbox_rate_plan_source"],["zuora_api_sandbox_rate_plan_charge_source"],["zuora_api_sandbox_rate_plan_charge_source"],["zuora_api_sandbox_order_action_source"],["zuora_api_sandbox_order_action_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_api_sandbox_order_source"],["zuora_api_sandbox_order_source"],["sfdc_account_source"],["sfdc_account_source"],["zuora_api_sandbox_account_source"],["zuora_api_sandbox_account_source"],["zuora_api_sandbox_rate_plan_source"],["zuora_api_sandbox_rate_plan_source"],["zuora_api_sandbox_rate_plan_charge_source"],["zuora_api_sandbox_rate_plan_charge_source"],["zuora_api_sandbox_subscription_source"],["zuora_api_sandbox_subscription_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_manual_journal_entry_source"],["zuora_revenue_manual_journal_entry_source"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_finance/restricted_safe/prep_charge_api_sandbox.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"view","tags":["mnpi"],"secure":true},"created_at":1689033687.568465,"compiled_sql":"$21","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_finance.prep_charge_api_sandbox","label":"prep_charge_api_sandbox"},{"metadata":{"type":"VIEW","schema":"RESTRICTED_SAFE_COMMON_PREP","name":"PREP_SFDC_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"CRM Account ID provided by Salesforce","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_PARENT_SALES_TERRITORY_NAME_SOURCE":{"type":"TEXT","index":2,"name":"dim_parent_sales_territory_name_source","comment":null,"description":"Dim sales territory name final source column","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_sales_territory_name_source"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"dim_parent_crm_account_id","comment":null,"description":"Ulimate parent CRM Account ID provided by Salesforce","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_crm_account_id"},"DIM_PARENT_SALES_SEGMENT_NAME_SOURCE":{"type":"TEXT","index":4,"name":"dim_parent_sales_segment_name_source","comment":null,"description":"Dim sales segment name final source column","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_sales_segment_name_source"},"DIM_PARENT_SALES_SEGMENT_GROUPED_SOURCE":{"type":"TEXT","index":5,"name":"dim_parent_sales_segment_grouped_source","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_sales_segment_grouped_source"},"DIM_ACCOUNT_INDUSTRY_NAME_SOURCE":{"type":"TEXT","index":6,"name":"dim_account_industry_name_source","comment":null,"description":"Dim industry name final source column","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_account_industry_name_source"},"DIM_PARENT_INDUSTRY_NAME_SOURCE":{"type":"TEXT","index":7,"name":"dim_parent_industry_name_source","comment":null,"description":"Dim industry name final source column","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_industry_name_source"},"DIM_ACCOUNT_LOCATION_COUNTRY_NAME_SOURCE":{"type":"TEXT","index":8,"name":"dim_account_location_country_name_source","comment":null,"description":"Dim location country name final source column","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_account_location_country_name_source"},"CREATED_BY":{"type":"TEXT","index":9,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":10,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":11,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":12,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":13,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":14,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"has_stats":{"id":"has_stats","label":"Has Stats?","value":false,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_sfdc_account","raw_sql":"$22","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_prep","database":"PROD","tags":["safe"],"meta":{},"materialized":"view","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_prep","fqn":["gitlab_snowflake","common_prep","restricted_safe","prep_sfdc_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/restricted_safe/prep_sfdc_account.sql","original_file_path":"models/common_prep/restricted_safe/prep_sfdc_account.sql","name":"prep_sfdc_account","alias":"prep_sfdc_account","checksum":{"name":"sha256","checksum":"c5294297607a0a71172c5d33f7c7579c5317f1a13cbace6fc40fdc9e8381612f"},"tags":["safe"],"refs":[["sfdc_account_source"],["sfdc_account_source"]],"sources":[],"metrics":[],"description":"SFDC Account Prep table, used to clean and dedupe fields from a common source for use in further downstream dimensions.\nCleaning operations vary across columns, depending on the nature of the source data. See discussion in [MR](https://gitlab.com/gitlab-data/analytics/-/merge_requests/3782) for further details","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/restricted_safe/prep_sfdc_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"view","tags":["safe"],"secure":true},"created_at":1689033758.0252986,"compiled_sql":"$23","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_prep.prep_sfdc_account","label":"prep_sfdc_account"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_LEGACY","name":"SFDC_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"ACCOUNT_ID":{"type":"TEXT","index":1,"name":"account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"account_id"},"ACCOUNT_NAME":{"type":"TEXT","index":2,"name":"account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"account_name"},"ACCOUNT_ID_18":{"type":"TEXT","index":3,"name":"ACCOUNT_ID_18","comment":null,"display_name":"account_id_18"},"MASTER_RECORD_ID":{"type":"TEXT","index":4,"name":"MASTER_RECORD_ID","comment":null,"display_name":"master_record_id"},"OWNER_ID":{"type":"TEXT","index":5,"name":"OWNER_ID","comment":null,"display_name":"owner_id"},"PARENT_ID":{"type":"TEXT","index":6,"name":"PARENT_ID","comment":null,"display_name":"parent_id"},"PRIMARY_CONTACT_ID":{"type":"TEXT","index":7,"name":"PRIMARY_CONTACT_ID","comment":null,"display_name":"primary_contact_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":8,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"ULTIMATE_PARENT_ID":{"type":"TEXT","index":9,"name":"ULTIMATE_PARENT_ID","comment":null,"display_name":"ultimate_parent_id"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":10,"name":"PARTNER_VAT_TAX_ID","comment":null,"display_name":"partner_vat_tax_id"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":11,"name":"GITLAB_COM_USER","comment":null,"display_name":"gitlab_com_user"},"ACCOUNT_MANAGER":{"type":"TEXT","index":12,"name":"ACCOUNT_MANAGER","comment":null,"display_name":"account_manager"},"ACCOUNT_OWNER":{"type":"TEXT","index":13,"name":"ACCOUNT_OWNER","comment":null,"display_name":"account_owner"},"ACCOUNT_OWNER_TEAM":{"type":"TEXT","index":14,"name":"ACCOUNT_OWNER_TEAM","comment":null,"display_name":"account_owner_team"},"PROPOSED_ACCOUNT_OWNER":{"type":"TEXT","index":15,"name":"PROPOSED_ACCOUNT_OWNER","comment":null,"display_name":"proposed_account_owner"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":16,"name":"BUSINESS_DEVELOPMENT_REP","comment":null,"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":17,"name":"DEDICATED_SERVICE_ENGINEER","comment":null,"display_name":"dedicated_service_engineer"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":18,"name":"SALES_DEVELOPMENT_REP","comment":null,"display_name":"sales_development_rep"},"TECHNICAL_ACCOUNT_MANAGER_ID":{"type":"TEXT","index":19,"name":"TECHNICAL_ACCOUNT_MANAGER_ID","comment":null,"display_name":"technical_account_manager_id"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":20,"name":"ULTIMATE_PARENT_ACCOUNT_ID","comment":null,"display_name":"ultimate_parent_account_id"},"ULTIMATE_PARENT_ACCOUNT_NAME":{"type":"TEXT","index":21,"name":"ULTIMATE_PARENT_ACCOUNT_NAME","comment":null,"display_name":"ultimate_parent_account_name"},"ACCOUNT_TYPE":{"type":"TEXT","index":22,"name":"ACCOUNT_TYPE","comment":null,"display_name":"account_type"},"DF_INDUSTRY":{"type":"TEXT","index":23,"name":"DF_INDUSTRY","comment":null,"display_name":"df_industry"},"INDUSTRY":{"type":"TEXT","index":24,"name":"INDUSTRY","comment":null,"display_name":"industry"},"SUB_INDUSTRY":{"type":"TEXT","index":25,"name":"SUB_INDUSTRY","comment":null,"display_name":"sub_industry"},"PARENT_ACCOUNT_INDUSTRY_HIERARCHY":{"type":"TEXT","index":26,"name":"PARENT_ACCOUNT_INDUSTRY_HIERARCHY","comment":null,"display_name":"parent_account_industry_hierarchy"},"ACCOUNT_TIER":{"type":"TEXT","index":27,"name":"ACCOUNT_TIER","comment":null,"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":28,"name":"ACCOUNT_TIER_NOTES","comment":null,"display_name":"account_tier_notes"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":29,"name":"CUSTOMER_SINCE_DATE","comment":null,"display_name":"customer_since_date"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":30,"name":"CARR_THIS_ACCOUNT","comment":null,"display_name":"carr_this_account"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":31,"name":"CARR_ACCOUNT_FAMILY","comment":null,"display_name":"carr_account_family"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":32,"name":"NEXT_RENEWAL_DATE","comment":null,"display_name":"next_renewal_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":33,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":34,"name":"SUPPORT_LEVEL","comment":null,"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":35,"name":"NAMED_ACCOUNT","comment":null,"display_name":"named_account"},"BILLING_COUNTRY":{"type":"TEXT","index":36,"name":"BILLING_COUNTRY","comment":null,"display_name":"billing_country"},"BILLING_COUNTRY_CODE":{"type":"TEXT","index":37,"name":"BILLING_COUNTRY_CODE","comment":null,"display_name":"billing_country_code"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":38,"name":"BILLING_POSTAL_CODE","comment":null,"display_name":"billing_postal_code"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":39,"name":"is_sdr_target_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_sdr_target_account"},"LAM":{"type":"FLOAT","index":40,"name":"LAM","comment":null,"display_name":"lam"},"LAM_DEV_COUNT":{"type":"FLOAT","index":41,"name":"LAM_DEV_COUNT","comment":null,"display_name":"lam_dev_count"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":42,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"TIMESTAMP_TZ","index":43,"name":"PARTNERS_SIGNED_CONTRACT_DATE","comment":null,"display_name":"partners_signed_contract_date"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":44,"name":"PARTNER_ACCOUNT_IBAN_NUMBER","comment":null,"display_name":"partner_account_iban_number"},"PARTNER_TYPE":{"type":"TEXT","index":45,"name":"PARTNER_TYPE","comment":null,"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":46,"name":"PARTNER_STATUS","comment":null,"display_name":"partner_status"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":47,"name":"BDR_PROSPECTING_STATUS","comment":null,"display_name":"bdr_prospecting_status"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":48,"name":"IS_FIRST_ORDER_AVAILABLE","comment":null,"display_name":"is_first_order_available"},"ZI_TECHNOLOGIES":{"type":"TEXT","index":49,"name":"ZI_TECHNOLOGIES","comment":null,"display_name":"zi_technologies"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":50,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":51,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"FORBES_2000_RANK":{"type":"TEXT","index":52,"name":"FORBES_2000_RANK","comment":null,"display_name":"forbes_2000_rank"},"POTENTIAL_USERS":{"type":"FLOAT","index":53,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"NUMBER_OF_LICENSES_THIS_ACCOUNT":{"type":"FLOAT","index":54,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT","comment":null,"display_name":"number_of_licenses_this_account"},"DECISION_MAKER_COUNT_LINKEDIN":{"type":"FLOAT","index":55,"name":"DECISION_MAKER_COUNT_LINKEDIN","comment":null,"display_name":"decision_maker_count_linkedin"},"NUMBER_OF_EMPLOYEES":{"type":"NUMBER","index":56,"name":"NUMBER_OF_EMPLOYEES","comment":null,"display_name":"number_of_employees"},"ACCOUNT_PHONE":{"type":"TEXT","index":57,"name":"ACCOUNT_PHONE","comment":null,"display_name":"account_phone"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":58,"name":"ZOOMINFO_ACCOUNT_PHONE","comment":null,"display_name":"zoominfo_account_phone"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":59,"name":"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES","comment":null,"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":60,"name":"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS","comment":null,"display_name":"admin_manual_source_account_address"},"ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":61,"name":"ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"account_sales_segment"},"ACCOUNT_GEO":{"type":"TEXT","index":62,"name":"ACCOUNT_GEO","comment":null,"display_name":"account_geo"},"ACCOUNT_REGION":{"type":"TEXT","index":63,"name":"ACCOUNT_REGION","comment":null,"display_name":"account_region"},"ACCOUNT_AREA":{"type":"TEXT","index":64,"name":"ACCOUNT_AREA","comment":null,"display_name":"account_area"},"ACCOUNT_TERRITORY":{"type":"TEXT","index":65,"name":"ACCOUNT_TERRITORY","comment":null,"display_name":"account_territory"},"ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":66,"name":"ACCOUNT_BUSINESS_UNIT","comment":null,"display_name":"account_business_unit"},"ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":67,"name":"ACCOUNT_ROLE_TYPE","comment":null,"display_name":"account_role_type"},"ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":68,"name":"ACCOUNT_EMPLOYEE_COUNT","comment":null,"display_name":"account_employee_count"},"ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":69,"name":"ACCOUNT_MAX_FAMILY_EMPLOYEE","comment":null,"display_name":"account_max_family_employee"},"ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":70,"name":"ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"account_upa_country"},"ACCOUNT_UPA_STATE":{"type":"TEXT","index":71,"name":"ACCOUNT_UPA_STATE","comment":null,"display_name":"account_upa_state"},"ACCOUNT_UPA_CITY":{"type":"TEXT","index":72,"name":"ACCOUNT_UPA_CITY","comment":null,"display_name":"account_upa_city"},"ACCOUNT_UPA_STREET":{"type":"TEXT","index":73,"name":"ACCOUNT_UPA_STREET","comment":null,"display_name":"account_upa_street"},"ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":74,"name":"ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"account_upa_postal_code"},"HEALTH_NUMBER":{"type":"FLOAT","index":75,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":76,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"COUNT_ACTIVE_SUBSCRIPTION_CHARGES":{"type":"FLOAT","index":77,"name":"COUNT_ACTIVE_SUBSCRIPTION_CHARGES","comment":null,"display_name":"count_active_subscription_charges"},"COUNT_ACTIVE_SUBSCRIPTIONS":{"type":"FLOAT","index":78,"name":"COUNT_ACTIVE_SUBSCRIPTIONS","comment":null,"display_name":"count_active_subscriptions"},"COUNT_BILLING_ACCOUNTS":{"type":"FLOAT","index":79,"name":"COUNT_BILLING_ACCOUNTS","comment":null,"display_name":"count_billing_accounts"},"COUNT_LICENSED_USERS":{"type":"FLOAT","index":80,"name":"COUNT_LICENSED_USERS","comment":null,"display_name":"count_licensed_users"},"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES":{"type":"FLOAT","index":81,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPORTUNITIES","comment":null,"display_name":"count_of_new_business_won_opportunities"},"COUNT_OPEN_RENEWAL_OPPORTUNITIES":{"type":"FLOAT","index":82,"name":"COUNT_OPEN_RENEWAL_OPPORTUNITIES","comment":null,"display_name":"count_open_renewal_opportunities"},"COUNT_OPPORTUNITIES":{"type":"FLOAT","index":83,"name":"COUNT_OPPORTUNITIES","comment":null,"display_name":"count_opportunities"},"COUNT_PRODUCTS_PURCHASED":{"type":"FLOAT","index":84,"name":"COUNT_PRODUCTS_PURCHASED","comment":null,"display_name":"count_products_purchased"},"COUNT_WON_OPPORTUNITIES":{"type":"FLOAT","index":85,"name":"COUNT_WON_OPPORTUNITIES","comment":null,"display_name":"count_won_opportunities"},"COUNT_CONCURRENT_EE_SUBSCRIPTIONS":{"type":"FLOAT","index":86,"name":"COUNT_CONCURRENT_EE_SUBSCRIPTIONS","comment":null,"display_name":"count_concurrent_ee_subscriptions"},"COUNT_CE_INSTANCES":{"type":"FLOAT","index":87,"name":"COUNT_CE_INSTANCES","comment":null,"display_name":"count_ce_instances"},"COUNT_ACTIVE_CE_USERS":{"type":"FLOAT","index":88,"name":"COUNT_ACTIVE_CE_USERS","comment":null,"display_name":"count_active_ce_users"},"COUNT_OPEN_OPPORTUNITIES":{"type":"FLOAT","index":89,"name":"COUNT_OPEN_OPPORTUNITIES","comment":null,"display_name":"count_open_opportunities"},"COUNT_USING_CE":{"type":"BOOLEAN","index":90,"name":"COUNT_USING_CE","comment":null,"display_name":"count_using_ce"},"ABM_TIER":{"type":"TEXT","index":91,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"GTM_STRATEGY":{"type":"TEXT","index":92,"name":"GTM_STRATEGY","comment":null,"display_name":"gtm_strategy"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":93,"name":"GTM_ACCELERATION_DATE","comment":null,"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":94,"name":"GTM_ACCOUNT_BASED_DATE","comment":null,"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":95,"name":"GTM_ACCOUNT_CENTRIC_DATE","comment":null,"display_name":"gtm_account_centric_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":96,"name":"ABM_TIER_1_DATE","comment":null,"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":97,"name":"ABM_TIER_2_DATE","comment":null,"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":98,"name":"ABM_TIER_3_DATE","comment":null,"display_name":"abm_tier_3_date"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":99,"name":"DEMANDBASE_ACCOUNT_LIST","comment":null,"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":100,"name":"DEMANDBASE_INTENT","comment":null,"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":101,"name":"DEMANDBASE_PAGE_VIEWS","comment":null,"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":102,"name":"DEMANDBASE_SCORE","comment":null,"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":103,"name":"DEMANDBASE_SESSIONS","comment":null,"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":104,"name":"DEMANDBASE_TRENDING_OFFSITE_INTENT","comment":null,"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":105,"name":"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT","comment":null,"display_name":"demandbase_trending_onsite_engagement"},"ULTIMATE_PARENT_SALES_SEGMENT":{"type":"TEXT","index":106,"name":"ULTIMATE_PARENT_SALES_SEGMENT","comment":null,"display_name":"ultimate_parent_sales_segment"},"DIVISION_SALES_SEGMENT":{"type":"TEXT","index":107,"name":"DIVISION_SALES_SEGMENT","comment":null,"display_name":"division_sales_segment"},"ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":108,"name":"ACCOUNT_OWNER_USER_SEGMENT","comment":null,"display_name":"account_owner_user_segment"},"SALES_SEGMENT":{"type":"TEXT","index":109,"name":"SALES_SEGMENT","comment":null,"display_name":"sales_segment"},"ACCOUNT_SEGMENT":{"type":"TEXT","index":110,"name":"ACCOUNT_SEGMENT","comment":null,"display_name":"account_segment"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"IS_LOCALLY_MANAGED_ACCOUNT","comment":null,"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":112,"name":"IS_STRATEGIC_ACCOUNT","comment":null,"display_name":"is_strategic_account"},"NEXT_FY_ACCOUNT_OWNER_TEMP":{"type":"TEXT","index":113,"name":"NEXT_FY_ACCOUNT_OWNER_TEMP","comment":null,"display_name":"next_fy_account_owner_temp"},"NEXT_FY_PLANNING_NOTES_TEMP":{"type":"TEXT","index":114,"name":"NEXT_FY_PLANNING_NOTES_TEMP","comment":null,"display_name":"next_fy_planning_notes_temp"},"PARTNER_TRACK":{"type":"TEXT","index":115,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":116,"name":"PARTNERS_PARTNER_TYPE","comment":null,"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":117,"name":"GITLAB_PARTNER_PROGRAM","comment":null,"display_name":"gitlab_partner_program"},"IS_FOCUS_PARTNER":{"type":"BOOLEAN","index":118,"name":"IS_FOCUS_PARTNER","comment":null,"display_name":"is_focus_partner"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":119,"name":"ZOOM_INFO_COMPANY_NAME","comment":null,"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":120,"name":"ZOOM_INFO_COMPANY_REVENUE","comment":null,"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":121,"name":"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT","comment":null,"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":122,"name":"ZOOM_INFO_COMPANY_INDUSTRY","comment":null,"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":123,"name":"ZOOM_INFO_COMPANY_CITY","comment":null,"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":124,"name":"ZOOM_INFO_COMPANY_STATE_PROVINCE","comment":null,"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":125,"name":"ZOOM_INFO_COMPANY_COUNTRY","comment":null,"display_name":"zoom_info_company_country"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":126,"name":"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH","comment":null,"display_name":"is_excluded_from_zoom_info_enrich"},"ZOOM_INFO_WEBSITE":{"type":"TEXT","index":127,"name":"ZOOM_INFO_WEBSITE","comment":null,"display_name":"zoom_info_website"},"ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":128,"name":"ZOOM_INFO_COMPANY_OTHER_DOMAINS","comment":null,"display_name":"zoom_info_company_other_domains"},"ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":129,"name":"ZOOM_INFO_DOZISF_ZI_ID","comment":null,"display_name":"zoom_info_dozisf_zi_id"},"ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":130,"name":"ZOOM_INFO_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"zoom_info_parent_company_zi_id"},"ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":131,"name":"ZOOM_INFO_PARENT_COMPANY_NAME","comment":null,"display_name":"zoom_info_parent_company_name"},"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":132,"name":"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID","comment":null,"display_name":"zoom_info_ultimate_parent_company_zi_id"},"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":133,"name":"ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME","comment":null,"display_name":"zoom_info_ultimate_parent_company_name"},"ZOOM_INFO_NUMBER_OF_DEVELOPERS":{"type":"FLOAT","index":134,"name":"ZOOM_INFO_NUMBER_OF_DEVELOPERS","comment":null,"display_name":"zoom_info_number_of_developers"},"ZOOM_INFO_TOTAL_FUNDING":{"type":"TEXT","index":135,"name":"ZOOM_INFO_TOTAL_FUNDING","comment":null,"display_name":"zoom_info_total_funding"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":136,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":137,"name":"GS_FIRST_VALUE_DATE","comment":null,"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":138,"name":"GS_LAST_CSM_ACTIVITY_DATE","comment":null,"display_name":"gs_last_csm_activity_date"},"EOA_SENTIMENT":{"type":"TEXT","index":139,"name":"EOA_SENTIMENT","comment":null,"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":140,"name":"GS_HEALTH_USER_ENGAGEMENT","comment":null,"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":141,"name":"GS_HEALTH_CD","comment":null,"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":142,"name":"GS_HEALTH_DEVSECOPS","comment":null,"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":143,"name":"GS_HEALTH_CI","comment":null,"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":144,"name":"GS_HEALTH_SCM","comment":null,"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":145,"name":"RISK_IMPACT","comment":null,"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":146,"name":"RISK_REASON","comment":null,"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":147,"name":"LAST_TIMELINE_AT_RISK_UPDATE","comment":null,"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":148,"name":"LAST_AT_RISK_UPDATE_COMMENTS","comment":null,"display_name":"last_at_risk_update_comments"},"CREATED_BY_ID":{"type":"TEXT","index":149,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"CREATED_DATE":{"type":"TIMESTAMP_TZ","index":150,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"IS_DELETED":{"type":"BOOLEAN","index":151,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"LAST_MODIFIED_BY_ID":{"type":"TEXT","index":152,"name":"LAST_MODIFIED_BY_ID","comment":null,"display_name":"last_modified_by_id"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":153,"name":"LAST_MODIFIED_DATE","comment":null,"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":154,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_TZ","index":155,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"SYSTEMMODSTAMP":{"type":"TIMESTAMP_TZ","index":156,"name":"SYSTEMMODSTAMP","comment":null,"display_name":"systemmodstamp"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:34UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":33527296,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.sfdc_account","raw_sql":"WITH source AS (\n\n    SELECT *\n    FROM {{ ref('sfdc_account_source') }}\n    WHERE account_id IS NOT NULL\n    AND is_deleted = FALSE\n\n)\nSELECT *\nFROM source","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_legacy","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_legacy","fqn":["gitlab_snowflake","legacy","sfdc","restricted_safe","sfdc_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"legacy/sfdc/restricted_safe/sfdc_account.sql","original_file_path":"models/legacy/sfdc/restricted_safe/sfdc_account.sql","name":"sfdc_account","alias":"sfdc_account","checksum":{"name":"sha256","checksum":"2e57abedb664abff8252dbef3eb880cc508d91d87ad852c473127b76c3de29ac"},"tags":["safe"],"refs":[["sfdc_account_source"],["sfdc_account_source"]],"sources":[],"metrics":[],"description":"source model for SFDC Accounts","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/legacy/sfdc/intermediate/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/legacy/sfdc/restricted_safe/sfdc_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_legacy","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033764.5662436,"compiled_sql":"WITH source AS (\n\n    SELECT *\n    FROM \"PREP\".sfdc.sfdc_account_source\n    WHERE account_id IS NOT NULL\n    AND is_deleted = FALSE\n\n)\nSELECT *\nFROM source","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_legacy.sfdc_account","label":"sfdc_account"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_EPIC_USER_REQUEST_COLLABORATION_PROJECT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_EPIC_ID":{"type":"NUMBER","index":1,"name":"dim_epic_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_epic_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_COLLABORATION_PROJECT_ID":{"type":"NUMBER","index":3,"name":"DIM_COLLABORATION_PROJECT_ID","comment":null,"display_name":"dim_collaboration_project_id"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"DIM_NAMESPACE_ID","comment":null,"display_name":"dim_namespace_id"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":5,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"EPIC_INTERNAL_ID":{"type":"NUMBER","index":6,"name":"EPIC_INTERNAL_ID","comment":null,"display_name":"epic_internal_id"},"LINK_LAST_UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":7,"name":"LINK_LAST_UPDATED_AT","comment":null,"display_name":"link_last_updated_at"},"CREATED_BY":{"type":"TEXT","index":8,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":9,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":10,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":11,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":12,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":13,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"CONCAT(dim_epic_id, dim_crm_account_id)":{"name":"CONCAT(dim_epic_id, dim_crm_account_id)","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"CONCAT(dim_epic_id, dim_crm_account_id)"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 08:54UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":392704,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_epic_user_request_collaboration_project","raw_sql":"$24","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.gitlab_dotcom_namespaces_source","model.gitlab_snowflake.gitlab_dotcom_namespaces_source","model.gitlab_snowflake.gitlab_dotcom_issue_links_source","model.gitlab_snowflake.gitlab_dotcom_issue_links_source","model.gitlab_snowflake.gitlab_dotcom_notes_source","model.gitlab_snowflake.gitlab_dotcom_notes_source","model.gitlab_snowflake.gitlab_dotcom_epics_source","model.gitlab_snowflake.gitlab_dotcom_epics_source","model.gitlab_snowflake.gitlab_dotcom_issues_source","model.gitlab_snowflake.gitlab_dotcom_issues_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.gitlab_dotcom_routes_source","model.gitlab_snowflake.gitlab_dotcom_routes_source","model.gitlab_snowflake.gitlab_dotcom_routes_source","model.gitlab_snowflake.gitlab_dotcom_routes_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_epic_user_request_collaboration_project"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_epic_user_request_collaboration_project.sql","original_file_path":"models/common_prep/prep_epic_user_request_collaboration_project.sql","name":"prep_epic_user_request_collaboration_project","alias":"prep_epic_user_request_collaboration_project","checksum":{"name":"sha256","checksum":"67291e84ad1762b7a295cefc9a4450628d00ae8e789cd89b76d5150b761709cc"},"tags":["mnpi_exception"],"refs":[["gitlab_dotcom_namespaces_source"],["gitlab_dotcom_namespaces_source"],["gitlab_dotcom_issue_links_source"],["gitlab_dotcom_issue_links_source"],["gitlab_dotcom_notes_source"],["gitlab_dotcom_notes_source"],["gitlab_dotcom_epics_source"],["gitlab_dotcom_epics_source"],["gitlab_dotcom_issues_source"],["gitlab_dotcom_issues_source"],["sfdc_account_source"],["sfdc_account_source"],["gitlab_dotcom_routes_source"],["gitlab_dotcom_routes_source"],["gitlab_dotcom_routes_source"],["gitlab_dotcom_routes_source"]],"sources":[],"metrics":[],"description":" Parses epic links to the `Gitlab-org` group in the description and notes of epics inside the customer collaboration projects. These epics links are related to user feature requests from the product. ","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_epic_user_request_collaboration_project.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033756.4178185,"compiled_sql":"$25","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_epic_user_request_collaboration_project","label":"prep_epic_user_request_collaboration_project"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_PREP","name":"PREP_CHARGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SUBSCRIPTION_NAME":{"type":"TEXT","index":1,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"SUBSCRIPTION_CREATED_BY_ID":{"type":"TEXT","index":4,"name":"SUBSCRIPTION_CREATED_BY_ID","comment":null,"display_name":"subscription_created_by_id"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":5,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":7,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"DIM_CHARGE_ID":{"type":"TEXT","index":8,"name":"dim_charge_id","comment":null,"description":"The unique identifier of the rate plan charge.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_charge_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":9,"name":"dim_product_detail_id","comment":null,"description":"The identifier of product details in dim_product_detail","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_product_detail_id"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":10,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":11,"name":"dim_subscription_id","comment":null,"description":"The identifier of subscription in dim_subscriptions table","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":12,"name":"dim_billing_account_id","comment":null,"description":"Zuora account id","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":13,"name":"dim_crm_account_id","comment":null,"description":"account id frm crm","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":14,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"DIM_ORDER_ID":{"type":"TEXT","index":15,"name":"DIM_ORDER_ID","comment":null,"display_name":"dim_order_id"},"EFFECTIVE_START_DATE_ID":{"type":"NUMBER","index":16,"name":"EFFECTIVE_START_DATE_ID","comment":null,"display_name":"effective_start_date_id"},"EFFECTIVE_END_DATE_ID":{"type":"NUMBER","index":17,"name":"EFFECTIVE_END_DATE_ID","comment":null,"display_name":"effective_end_date_id"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":18,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"RATE_PLAN_NAME":{"type":"TEXT","index":19,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":20,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"RATE_PLAN_CHARGE_DESCRIPTION":{"type":"TEXT","index":21,"name":"RATE_PLAN_CHARGE_DESCRIPTION","comment":null,"display_name":"rate_plan_charge_description"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":22,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"DISCOUNT_LEVEL":{"type":"TEXT","index":23,"name":"DISCOUNT_LEVEL","comment":null,"display_name":"discount_level"},"CHARGE_TYPE":{"type":"TEXT","index":24,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"RATE_PLAN_CHARGE_AMENDEMENT_TYPE":{"type":"TEXT","index":25,"name":"RATE_PLAN_CHARGE_AMENDEMENT_TYPE","comment":null,"display_name":"rate_plan_charge_amendement_type"},"UNIT_OF_MEASURE":{"type":"TEXT","index":26,"name":"UNIT_OF_MEASURE","comment":null,"display_name":"unit_of_measure"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":27,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"MONTHS_OF_FUTURE_BILLINGS":{"type":"NUMBER","index":28,"name":"MONTHS_OF_FUTURE_BILLINGS","comment":null,"display_name":"months_of_future_billings"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":29,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":30,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"EFFECTIVE_START_DATE":{"type":"DATE","index":31,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":32,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":33,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":34,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGED_THROUGH_DATE":{"type":"DATE","index":35,"name":"CHARGED_THROUGH_DATE","comment":null,"display_name":"charged_through_date"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":36,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":37,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"CHARGE_TERM":{"type":"NUMBER","index":38,"name":"CHARGE_TERM","comment":null,"display_name":"charge_term"},"MRR":{"type":"FLOAT","index":39,"name":"mrr","comment":null,"description":"Monthly Recurring Revenue value for given month","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"mrr"},"PREVIOUS_MRR_CALC":{"type":"FLOAT","index":40,"name":"PREVIOUS_MRR_CALC","comment":null,"display_name":"previous_mrr_calc"},"PREVIOUS_MRR":{"type":"FLOAT","index":41,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR_CALC":{"type":"FLOAT","index":42,"name":"DELTA_MRR_CALC","comment":null,"display_name":"delta_mrr_calc"},"DELTA_MRR":{"type":"FLOAT","index":43,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"DELTA_MRC":{"type":"FLOAT","index":44,"name":"DELTA_MRC","comment":null,"display_name":"delta_mrc"},"ARR":{"type":"FLOAT","index":45,"name":"arr","comment":null,"description":"Annual Recurring Revenue value for given month","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":46,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARC":{"type":"FLOAT","index":47,"name":"DELTA_ARC","comment":null,"display_name":"delta_arc"},"DELTA_ARR":{"type":"FLOAT","index":48,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":49,"name":"quantity","comment":null,"description":"Total quantity","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quantity"},"PREVIOUS_QUANTITY_CALC":{"type":"FLOAT","index":50,"name":"PREVIOUS_QUANTITY_CALC","comment":null,"display_name":"previous_quantity_calc"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":51,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY_CALC":{"type":"FLOAT","index":52,"name":"DELTA_QUANTITY_CALC","comment":null,"display_name":"delta_quantity_calc"},"DELTA_QUANTITY":{"type":"FLOAT","index":53,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"TCV":{"type":"FLOAT","index":54,"name":"TCV","comment":null,"display_name":"tcv"},"DELTA_TCV":{"type":"FLOAT","index":55,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":56,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"IS_MANUAL_CHARGE":{"type":"NUMBER","index":57,"name":"IS_MANUAL_CHARGE","comment":null,"display_name":"is_manual_charge"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":58,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"CREATED_BY":{"type":"TEXT","index":59,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":60,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":61,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":62,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":63,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":64,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dim_date_id":{"name":"dim_date_id","description":"The identifier of date month in dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_date_id"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:02UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":227328000,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_charge","raw_sql":"$26","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.map_merged_crm_account","model.gitlab_snowflake.zuora_rate_plan_source","model.gitlab_snowflake.zuora_rate_plan_source","model.gitlab_snowflake.zuora_rate_plan_charge_source","model.gitlab_snowflake.zuora_rate_plan_charge_source","model.gitlab_snowflake.zuora_query_api_order_action_rate_plan_source","model.gitlab_snowflake.zuora_query_api_order_action_rate_plan_source","model.gitlab_snowflake.zuora_order_action_source","model.gitlab_snowflake.zuora_order_action_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source","model.gitlab_snowflake.zuora_order_source","model.gitlab_snowflake.zuora_order_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.zuora_account_source","model.gitlab_snowflake.zuora_account_source","model.gitlab_snowflake.zuora_subscription_source","model.gitlab_snowflake.zuora_subscription_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source","model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_prep","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_prep","fqn":["gitlab_snowflake","common_prep","restricted_safe","prep_charge"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/restricted_safe/prep_charge.sql","original_file_path":"models/common_prep/restricted_safe/prep_charge.sql","name":"prep_charge","alias":"prep_charge","checksum":{"name":"sha256","checksum":"2e3b6055e99dff1af429c98acc314052a2235fec14976b94f4a94a0a858f4f94"},"tags":["safe"],"refs":[["map_merged_crm_account"],["map_merged_crm_account"],["zuora_rate_plan_source"],["zuora_rate_plan_source"],["zuora_rate_plan_charge_source"],["zuora_rate_plan_charge_source"],["zuora_query_api_order_action_rate_plan_source"],["zuora_query_api_order_action_rate_plan_source"],["zuora_order_action_source"],["zuora_order_action_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_revenue_revenue_contract_line_source"],["zuora_order_source"],["zuora_order_source"],["sfdc_account_source"],["sfdc_account_source"],["zuora_account_source"],["zuora_account_source"],["zuora_subscription_source"],["zuora_subscription_source"],["zuora_revenue_manual_journal_entry_source"],["zuora_revenue_manual_journal_entry_source"]],"sources":[],"metrics":[],"description":"Creates a base view of recurring charges that are not amortized over the months. This prep table is used for transaction line analyses that do not require amortization of charges.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/restricted_safe/prep_charge.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033757.951199,"compiled_sql":"$27","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_prep.prep_charge","label":"prep_charge"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MAPPING","name":"MAP_MERGED_CRM_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SFDC_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"sfdc_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","crm_account"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"sfdc_account_id"},"MERGED_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"MERGED_ACCOUNT_ID","comment":null,"display_name":"merged_account_id"},"IS_DELETED":{"type":"BOOLEAN","index":3,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"IS_MERGED":{"type":"BOOLEAN","index":4,"name":"IS_MERGED","comment":null,"display_name":"is_merged"},"DELETED_NOT_MERGED":{"type":"BOOLEAN","index":5,"name":"DELETED_NOT_MERGED","comment":null,"display_name":"deleted_not_merged"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":6,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","crm_account"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"CREATED_BY":{"type":"TEXT","index":7,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":8,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":9,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":10,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":11,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":12,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 08:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":4833280,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.map_merged_crm_account","raw_sql":"$28","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_account_snapshots_source","model.gitlab_snowflake.sfdc_account_snapshots_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mapping","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mapping","fqn":["gitlab_snowflake","common_mapping","restricted_safe","map_merged_crm_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mapping/restricted_safe/map_merged_crm_account.sql","original_file_path":"models/common_mapping/restricted_safe/map_merged_crm_account.sql","name":"map_merged_crm_account","alias":"map_merged_crm_account","checksum":{"name":"sha256","checksum":"4749d641901a5bd3b7a5503d3a3f81baf559fdb39972cea2c5df1b8dc4a7bac4"},"tags":["safe"],"refs":[["sfdc_account_snapshots_source"],["sfdc_account_snapshots_source"],["sfdc_account_source"],["sfdc_account_source"],["sfdc_account_source"],["sfdc_account_source"]],"sources":[],"metrics":[],"description":"This table maps an original crm_account_id to its final, non-deleted crm_account_id if the original crm_id has been deleted and merged. If the account has not been deleted and merged, the non-deleted crm_account_id is equal to the original crm_account_id.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mapping/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mapping/restricted_safe/map_merged_crm_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mapping","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033765.845014,"compiled_sql":"$29","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mapping.map_merged_crm_account","label":"map_merged_crm_account"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_PREP","name":"PREP_ISSUE_USER_REQUEST_COLLABORATION_PROJECT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_ISSUE_ID":{"type":"NUMBER","index":1,"name":"dim_issue_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_issue_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_crm_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_COLLABORATION_PROJECT_ID":{"type":"NUMBER","index":3,"name":"DIM_COLLABORATION_PROJECT_ID","comment":null,"display_name":"dim_collaboration_project_id"},"DIM_ORIGINAL_ISSUE_PROJECT_ID":{"type":"NUMBER","index":4,"name":"DIM_ORIGINAL_ISSUE_PROJECT_ID","comment":null,"display_name":"dim_original_issue_project_id"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":5,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT","comment":null,"display_name":"gitlab_customer_success_project"},"ORIGINAL_ISSUE_INTERNAL_ID":{"type":"NUMBER","index":6,"name":"ORIGINAL_ISSUE_INTERNAL_ID","comment":null,"display_name":"original_issue_internal_id"},"LINK_LAST_UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":7,"name":"LINK_LAST_UPDATED_AT","comment":null,"display_name":"link_last_updated_at"},"CREATED_BY":{"type":"TEXT","index":8,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":9,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":10,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":11,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":12,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":13,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"CONCAT(dim_issue_id, dim_crm_account_id, dim_original_issue_project_id, original_issue_internal_id)":{"name":"CONCAT(dim_issue_id, dim_crm_account_id, dim_original_issue_project_id, original_issue_internal_id)","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"CONCAT(dim_issue_id, dim_crm_account_id, dim_original_issue_project_id, original_issue_internal_id)"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:01UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":700928,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_issue_user_request_collaboration_project","raw_sql":"$2a","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.gitlab_dotcom_projects_source","model.gitlab_snowflake.gitlab_dotcom_projects_source","model.gitlab_snowflake.map_moved_duplicated_issue","model.gitlab_snowflake.map_moved_duplicated_issue","model.gitlab_snowflake.gitlab_dotcom_issue_links_source","model.gitlab_snowflake.gitlab_dotcom_issue_links_source","model.gitlab_snowflake.gitlab_dotcom_notes_source","model.gitlab_snowflake.gitlab_dotcom_notes_source","model.gitlab_snowflake.gitlab_dotcom_issues_source","model.gitlab_snowflake.gitlab_dotcom_issues_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.gitlab_dotcom_routes_source","model.gitlab_snowflake.gitlab_dotcom_routes_source"]},"config":{"enabled":true,"alias":null,"schema":"common_prep","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_prep","fqn":["gitlab_snowflake","common_prep","prep_issue_user_request_collaboration_project"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/prep_issue_user_request_collaboration_project.sql","original_file_path":"models/common_prep/prep_issue_user_request_collaboration_project.sql","name":"prep_issue_user_request_collaboration_project","alias":"prep_issue_user_request_collaboration_project","checksum":{"name":"sha256","checksum":"82fee0567d5430bc6dcd0fa8bdcce535cb7b77a56a2698eac8077d0a7034538e"},"tags":["mnpi_exception"],"refs":[["gitlab_dotcom_projects_source"],["gitlab_dotcom_projects_source"],["map_moved_duplicated_issue"],["map_moved_duplicated_issue"],["gitlab_dotcom_issue_links_source"],["gitlab_dotcom_issue_links_source"],["gitlab_dotcom_notes_source"],["gitlab_dotcom_notes_source"],["gitlab_dotcom_issues_source"],["gitlab_dotcom_issues_source"],["sfdc_account_source"],["sfdc_account_source"],["gitlab_dotcom_routes_source"],["gitlab_dotcom_routes_source"]],"sources":[],"metrics":[],"description":" Parses issue links to the `Gitlab-org` group in the description and notes of issues inside the customer collaboration projects. These issues links are related to user feature requests from the product.\n\nIt also looks for the issue links to the `Gitlab-org` group in the related issue links. ","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/prep_issue_user_request_collaboration_project.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033756.4245002,"compiled_sql":"$2b","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_prep.prep_issue_user_request_collaboration_project","label":"prep_issue_user_request_collaboration_project"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_MARKETING","name":"WK_DIM_COMPANY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_COMPANY_ID":{"type":"TEXT","index":1,"name":"dim_company_id","comment":null,"description":"The surrogate key for the dimension table. Derived from the `company_id` column.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_company_id"},"COMPANY_ID":{"type":"NUMBER","index":2,"name":"company_id","comment":null,"description":"A unique id for the headquarters of a company. Taken from the ZoomInfo company ID.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"company_id"},"SOURCE_COMPANY_ID":{"type":"NUMBER","index":3,"name":"source_company_id","comment":null,"description":"The current company_id for the IDs that have been merged together.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_company_id"},"COMPANY_NAME":{"type":"TEXT","index":4,"name":"company_name","comment":null,"description":"Company name. May match zi_c_C_NAME.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_name"},"COMPANY_REVENUE":{"type":"FLOAT","index":5,"name":"company_revenue","comment":null,"description":"Raw revenue number in USD (in thousands)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_revenue"},"COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":6,"name":"company_employee_count","comment":null,"description":"HQ Raw employee number for a company","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_employee_count"},"COMPANY_INDUSTRY":{"type":"TEXT","index":7,"name":"company_industry","comment":null,"description":"Top-level primary industry of the company location","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_industry"},"COMPANY_COUNTRY":{"type":"TEXT","index":8,"name":"company_country","comment":null,"description":"Company's physical country","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_country"},"COMPANY_STATE_PROVINCE":{"type":"TEXT","index":9,"name":"company_state_province","comment":null,"description":"Company's physical state","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"company_state_province"},"HAS_CRM_ACCOUNT":{"type":"BOOLEAN","index":10,"name":"has_crm_account","comment":null,"description":"A flag to indicate if the company id is matched to a CRM account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_crm_account"},"HAS_CRM_LEAD":{"type":"BOOLEAN","index":11,"name":"has_crm_lead","comment":null,"description":"A flag to indicate if the company id is matched to a CRM lead","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_crm_lead"},"HAS_CRM_CONTACT":{"type":"BOOLEAN","index":12,"name":"has_crm_contact","comment":null,"description":"A flag to indicate if the company id is matched to a CRM contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_crm_contact"},"IS_COMPANY_HQ":{"type":"BOOLEAN","index":13,"name":"is_company_hq","comment":null,"description":"A flag to indicate if the company id matched directly to the list of source company headquarter ids/","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_company_hq"},"IS_MERGED_COMPANY_ID":{"type":"BOOLEAN","index":14,"name":"is_merged_company_id","comment":null,"description":"A flag to indicate if the company id is derived from a list of merged company ids.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_merged_company_id"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:50UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":10785223680,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_dim_company","raw_sql":"$2c","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_contact_source","model.gitlab_snowflake.sfdc_contact_source","model.gitlab_snowflake.sfdc_lead_source","model.gitlab_snowflake.sfdc_lead_source","model.gitlab_snowflake.zi_comp_with_linkages_global_source","model.gitlab_snowflake.zi_comp_with_linkages_global_source"]},"config":{"enabled":true,"alias":null,"schema":"workspace_marketing","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_marketing","fqn":["gitlab_snowflake","workspaces","workspace_marketing","wk_dim_company"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_marketing/wk_dim_company.sql","original_file_path":"models/workspaces/workspace_marketing/wk_dim_company.sql","name":"wk_dim_company","alias":"wk_dim_company","checksum":{"name":"sha256","checksum":"37113677a0483f027231818b21b7453ba78fb863dd3e5296657706280b15454f"},"tags":["workspace","mnpi_exception"],"refs":[["sfdc_account_source"],["sfdc_account_source"],["sfdc_contact_source"],["sfdc_contact_source"],["sfdc_lead_source"],["sfdc_lead_source"],["zi_comp_with_linkages_global_source"],["zi_comp_with_linkages_global_source"]],"sources":[],"metrics":[],"description":"The description","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_marketing/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_marketing/wk_dim_company.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_marketing","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033733.160596,"compiled_sql":"$2d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_marketing.wk_dim_company","label":"wk_dim_company"}],"test":[{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"account_id","model":"{{ get_where_subquery(ref('sfdc_account_source')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","sources","sfdc","not_null_sfdc_account_source_account_id"],"unique_id":"test.gitlab_snowflake.not_null_sfdc_account_source_account_id.f7daa0614f","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_sfdc_account_source_account_id.sql","original_file_path":"models/sources/sfdc/schema.yml","name":"not_null_sfdc_account_source_account_id","alias":"not_null_sfdc_account_source_account_id","checksum":{"name":"none","checksum":""},"tags":["sfdc","tdf"],"refs":[["sfdc_account_source"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/sources/sfdc/schema.yml/not_null_sfdc_account_source_account_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033749.7041771,"compiled_sql":"\n    \n    \n\n\n\nselect account_id\nfrom \"PREP\".sfdc.sfdc_account_source\nwhere account_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"account_id","file_key_name":"models.sfdc_account_source","label":"not_null_sfdc_account_source_account_id"},{"raw_sql":"{{ test_unique(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"unique","kwargs":{"column_name":"account_id","model":"{{ get_where_subquery(ref('sfdc_account_source')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_unique","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","sources","sfdc","unique_sfdc_account_source_account_id"],"unique_id":"test.gitlab_snowflake.unique_sfdc_account_source_account_id.33b6bfa26f","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"unique_sfdc_account_source_account_id.sql","original_file_path":"models/sources/sfdc/schema.yml","name":"unique_sfdc_account_source_account_id","alias":"unique_sfdc_account_source_account_id","checksum":{"name":"none","checksum":""},"tags":["sfdc","tdf"],"refs":[["sfdc_account_source"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/sources/sfdc/schema.yml/unique_sfdc_account_source_account_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033749.708801,"compiled_sql":"\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"PREP\".sfdc.sfdc_account_source\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"account_id","file_key_name":"models.sfdc_account_source","label":"unique_sfdc_account_source_account_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"account_name","model":"{{ get_where_subquery(ref('sfdc_account_source')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","sources","sfdc","not_null_sfdc_account_source_account_name"],"unique_id":"test.gitlab_snowflake.not_null_sfdc_account_source_account_name.606f32f1bf","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_sfdc_account_source_account_name.sql","original_file_path":"models/sources/sfdc/schema.yml","name":"not_null_sfdc_account_source_account_name","alias":"not_null_sfdc_account_source_account_name","checksum":{"name":"none","checksum":""},"tags":["sfdc","tdf"],"refs":[["sfdc_account_source"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/sources/sfdc/schema.yml/not_null_sfdc_account_source_account_name.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033749.7124286,"compiled_sql":"\n    \n    \n\n\n\nselect account_name\nfrom \"PREP\".sfdc.sfdc_account_source\nwhere account_name is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"account_name","file_key_name":"models.sfdc_account_source","label":"not_null_sfdc_account_source_account_name"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"is_sdr_target_account","model":"{{ get_where_subquery(ref('sfdc_account_source')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.sfdc_account_source"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","sources","sfdc","not_null_sfdc_account_source_is_sdr_target_account"],"unique_id":"test.gitlab_snowflake.not_null_sfdc_account_source_is_sdr_target_account.2385f0a95e","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_sfdc_account_source_is_sdr_target_account.sql","original_file_path":"models/sources/sfdc/schema.yml","name":"not_null_sfdc_account_source_is_sdr_target_account","alias":"not_null_sfdc_account_source_is_sdr_target_account","checksum":{"name":"none","checksum":""},"tags":["sfdc","tdf"],"refs":[["sfdc_account_source"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/sources/sfdc/schema.yml/not_null_sfdc_account_source_is_sdr_target_account.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033749.7162292,"compiled_sql":"\n    \n    \n\n\n\nselect is_sdr_target_account\nfrom \"PREP\".sfdc.sfdc_account_source\nwhere is_sdr_target_account is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"is_sdr_target_account","file_key_name":"models.sfdc_account_source","label":"not_null_sfdc_account_source_is_sdr_target_account"},{"raw_sql":"{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",alias=\"relationships_sfdc_event_sourc_9a3675dd56285df8ac47a1074a2e3b10\") }}","test_metadata":{"name":"relationships","kwargs":{"to":"ref('sfdc_account_source')","field":"account_id","column_name":"account_id","model":"{{ get_where_subquery(ref('sfdc_event_source')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_relationships","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.sfdc_account_source","model.gitlab_snowflake.sfdc_event_source"]},"config":{"enabled":true,"alias":"relationships_sfdc_event_sourc_9a3675dd56285df8ac47a1074a2e3b10","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"warn","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","sources","sfdc","relationships_sfdc_event_source_account_id__account_id__ref_sfdc_account_source_"],"unique_id":"test.gitlab_snowflake.relationships_sfdc_event_source_account_id__account_id__ref_sfdc_account_source_.3955cb91e0","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"relationships_sfdc_event_sourc_9a3675dd56285df8ac47a1074a2e3b10.sql","original_file_path":"models/sources/sfdc/schema.yml","name":"relationships_sfdc_event_source_account_id__account_id__ref_sfdc_account_source_","alias":"relationships_sfdc_event_sourc_9a3675dd56285df8ac47a1074a2e3b10","checksum":{"name":"none","checksum":""},"tags":["sfdc","tdf"],"refs":[["sfdc_account_source"],["sfdc_event_source"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/sources/sfdc/schema.yml/relationships_sfdc_event_sourc_9a3675dd56285df8ac47a1074a2e3b10.sql","build_path":null,"deferred":false,"unrendered_config":{"severity":"warn","alias":"relationships_sfdc_event_sourc_9a3675dd56285df8ac47a1074a2e3b10"},"created_at":1689033749.8195395,"compiled_sql":"\n    \n    \n\nwith child as (\n    select account_id as from_field\n    from \"PREP\".sfdc.sfdc_event_source\n    where account_id is not null\n),\n\nparent as (\n    select account_id as to_field\n    from \"PREP\".sfdc.sfdc_account_source\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"account_id","file_key_name":"models.sfdc_event_source","label":"relationships_sfdc_event_source_account_id__account_id__ref_sfdc_account_source_"}]},"node":{"resource_type":"model","name":"sfdc_account_source","unique_id":"model.gitlab_snowflake.sfdc_account_source"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L12",null,{"references":{"source":[{"metadata":{"type":"BASE TABLE","schema":"SALESFORCE_STITCH","name":"ACCOUNT","database":"RAW","comment":null,"owner":"STITCH"},"columns":{"ABERDEEN_CLOUD_PROVIDER__C":{"type":"TEXT","index":1,"name":"ABERDEEN_CLOUD_PROVIDER__C","comment":null,"display_name":"aberdeen_cloud_provider__c"},"ABERDEEN_NUMBER_OF_DEVELOPERS__C":{"type":"FLOAT","index":2,"name":"ABERDEEN_NUMBER_OF_DEVELOPERS__C","comment":null,"display_name":"aberdeen_number_of_developers__c"},"ABERDEEN_TECHNOLOGY_STACK__C":{"type":"TEXT","index":3,"name":"ABERDEEN_TECHNOLOGY_STACK__C","comment":null,"display_name":"aberdeen_technology_stack__c"},"ABERDEEN_ULTIMATE_PARENT_DEVELOPER_COUNT__C":{"type":"TEXT","index":4,"name":"ABERDEEN_ULTIMATE_PARENT_DEVELOPER_COUNT__C","comment":null,"display_name":"aberdeen_ultimate_parent_developer_count__c"},"ABM_TIER_1_DATE__C":{"type":"TIMESTAMP_TZ","index":5,"name":"ABM_TIER_1_DATE__C","comment":null,"display_name":"abm_tier_1_date__c"},"ABM_TIER_2_DATE__C":{"type":"TIMESTAMP_TZ","index":6,"name":"ABM_TIER_2_DATE__C","comment":null,"display_name":"abm_tier_2_date__c"},"ABM_TIER_3_DATE__C":{"type":"TIMESTAMP_TZ","index":7,"name":"ABM_TIER_3_DATE__C","comment":null,"display_name":"abm_tier_3_date__c"},"ABM_TIER__C":{"type":"TEXT","index":8,"name":"ABM_TIER__C","comment":null,"display_name":"abm_tier__c"},"ABSD_CAMPAIGN__C":{"type":"TEXT","index":9,"name":"ABSD_CAMPAIGN__C","comment":null,"display_name":"absd_campaign__c"},"ACCOUNTSOURCE":{"type":"TEXT","index":10,"name":"ACCOUNTSOURCE","comment":null,"display_name":"accountsource"},"ACCOUNT_ADDRESS_MANUAL_SOURCE_ADMIN__C":{"type":"TEXT","index":11,"name":"ACCOUNT_ADDRESS_MANUAL_SOURCE_ADMIN__C","comment":null,"display_name":"account_address_manual_source_admin__c"},"ACCOUNT_AREA_ADMIN_USE_ONLY__C":{"type":"TEXT","index":12,"name":"ACCOUNT_AREA_ADMIN_USE_ONLY__C","comment":null,"display_name":"account_area_admin_use_only__c"},"ACCOUNT_CITY_MANUAL_ADMIN__C":{"type":"TEXT","index":13,"name":"ACCOUNT_CITY_MANUAL_ADMIN__C","comment":null,"display_name":"account_city_manual_admin__c"},"ACCOUNT_COUNTRY_MANUAL_ADMIN__C":{"type":"TEXT","index":14,"name":"ACCOUNT_COUNTRY_MANUAL_ADMIN__C","comment":null,"display_name":"account_country_manual_admin__c"},"ACCOUNT_ID_18__C":{"type":"TEXT","index":15,"name":"ACCOUNT_ID_18__C","comment":null,"display_name":"account_id_18__c"},"ACCOUNT_INITIAL_START_DATE__C":{"type":"TIMESTAMP_TZ","index":16,"name":"ACCOUNT_INITIAL_START_DATE__C","comment":null,"display_name":"account_initial_start_date__c"},"ACCOUNT_LIST__C":{"type":"TEXT","index":17,"name":"ACCOUNT_LIST__C","comment":null,"display_name":"account_list__c"},"ACCOUNT_MANAGER__C":{"type":"TEXT","index":18,"name":"ACCOUNT_MANAGER__C","comment":null,"display_name":"account_manager__c"},"ACCOUNT_NOTES__C":{"type":"TEXT","index":19,"name":"ACCOUNT_NOTES__C","comment":null,"display_name":"account_notes__c"},"ACCOUNT_NUMBER__C":{"type":"TEXT","index":20,"name":"ACCOUNT_NUMBER__C","comment":null,"display_name":"account_number__c"},"ACCOUNT_OWNERSHIP_FLAG_TEMP__C":{"type":"BOOLEAN","index":21,"name":"ACCOUNT_OWNERSHIP_FLAG_TEMP__C","comment":null,"display_name":"account_ownership_flag_temp__c"},"ACCOUNT_OWNER_CALC__C":{"type":"TEXT","index":22,"name":"ACCOUNT_OWNER_CALC__C","comment":null,"display_name":"account_owner_calc__c"},"ACCOUNT_OWNER_EMAIL__C":{"type":"TEXT","index":23,"name":"ACCOUNT_OWNER_EMAIL__C","comment":null,"display_name":"account_owner_email__c"},"ACCOUNT_OWNER_MANAGER_EMAIL__C":{"type":"TEXT","index":24,"name":"ACCOUNT_OWNER_MANAGER_EMAIL__C","comment":null,"display_name":"account_owner_manager_email__c"},"ACCOUNT_OWNER_MANAGER_ID__C":{"type":"TEXT","index":25,"name":"ACCOUNT_OWNER_MANAGER_ID__C","comment":null,"display_name":"account_owner_manager_id__c"},"ACCOUNT_OWNER_PROPOSED__C":{"type":"TEXT","index":26,"name":"ACCOUNT_OWNER_PROPOSED__C","comment":null,"display_name":"account_owner_proposed__c"},"ACCOUNT_OWNER_TEAM__C":{"type":"TEXT","index":27,"name":"ACCOUNT_OWNER_TEAM__C","comment":null,"display_name":"account_owner_team__c"},"ACCOUNT_REASSIGNMENT_STATUS__C":{"type":"TEXT","index":28,"name":"ACCOUNT_REASSIGNMENT_STATUS__C","comment":null,"display_name":"account_reassignment_status__c"},"ACCOUNT_STATE_MANUAL_ADMIN__C":{"type":"TEXT","index":29,"name":"ACCOUNT_STATE_MANUAL_ADMIN__C","comment":null,"display_name":"account_state_manual_admin__c"},"ACCOUNT_STATE_MANUAL_USER__C":{"type":"TEXT","index":30,"name":"ACCOUNT_STATE_MANUAL_USER__C","comment":null,"display_name":"account_state_manual_user__c"},"ACCOUNT_STREET_ADDRESS_MANUAL_ADMIN__C":{"type":"TEXT","index":31,"name":"ACCOUNT_STREET_ADDRESS_MANUAL_ADMIN__C","comment":null,"display_name":"account_street_address_manual_admin__c"},"ACCOUNT_TERRITORY_COUNTRY__C":{"type":"TEXT","index":32,"name":"ACCOUNT_TERRITORY_COUNTRY__C","comment":null,"display_name":"account_territory_country__c"},"ACCOUNT_TERRITORY_STATE__C":{"type":"TEXT","index":33,"name":"ACCOUNT_TERRITORY_STATE__C","comment":null,"display_name":"account_territory_state__c"},"ACCOUNT_TERRITORY_ZIP__C":{"type":"TEXT","index":34,"name":"ACCOUNT_TERRITORY_ZIP__C","comment":null,"display_name":"account_territory_zip__c"},"ACCOUNT_TERRITORY__C":{"type":"TEXT","index":35,"name":"ACCOUNT_TERRITORY__C","comment":null,"display_name":"account_territory__c"},"ACCOUNT_TIER_NOTES_HISTORY__C":{"type":"TEXT","index":36,"name":"ACCOUNT_TIER_NOTES_HISTORY__C","comment":null,"display_name":"account_tier_notes_history__c"},"ACCOUNT_TIER_NOTES__C":{"type":"TEXT","index":37,"name":"ACCOUNT_TIER_NOTES__C","comment":null,"display_name":"account_tier_notes__c"},"ACCOUNT_TIER__C":{"type":"TEXT","index":38,"name":"ACCOUNT_TIER__C","comment":null,"display_name":"account_tier__c"},"ACCOUNT_ZIP_MANUAL_ADMIN__C":{"type":"TEXT","index":39,"name":"ACCOUNT_ZIP_MANUAL_ADMIN__C","comment":null,"display_name":"account_zip_manual_admin__c"},"ACCOUNT__C":{"type":"FLOAT","index":40,"name":"ACCOUNT__C","comment":null,"display_name":"account__c"},"ACTIVE_CE_USERS__C":{"type":"FLOAT","index":41,"name":"ACTIVE_CE_USERS__C","comment":null,"display_name":"active_ce_users__c"},"ACTIVE_USER__C":{"type":"BOOLEAN","index":42,"name":"ACTIVE_USER__C","comment":null,"display_name":"active_user__c"},"ACTIVE__C":{"type":"BOOLEAN","index":43,"name":"ACTIVE__C","comment":null,"display_name":"active__c"},"ADMIN_PHOENIX__C":{"type":"TEXT","index":44,"name":"ADMIN_PHOENIX__C","comment":null,"display_name":"admin_phoenix__c"},"AE_COMMENTS__C":{"type":"TEXT","index":45,"name":"AE_COMMENTS__C","comment":null,"display_name":"ae_comments__c"},"AFFECTLAYER__AFFECTLAYER_NOTES__C":{"type":"TEXT","index":46,"name":"AFFECTLAYER__AFFECTLAYER_NOTES__C","comment":null,"display_name":"affectlayer__affectlayer_notes__c"},"ALLIANCE_RECORD__C":{"type":"BOOLEAN","index":47,"name":"ALLIANCE_RECORD__C","comment":null,"display_name":"alliance_record__c"},"ALYCECOM__INITIAL_GIFT_INVITATION_CREATE_DATE__C":{"type":"TIMESTAMP_TZ","index":48,"name":"ALYCECOM__INITIAL_GIFT_INVITATION_CREATE_DATE__C","comment":null,"display_name":"alycecom__initial_gift_invitation_create_date__c"},"ALYCECOM__INITIAL_GIFT_INVITATION_SENT_DATE__C":{"type":"TIMESTAMP_TZ","index":49,"name":"ALYCECOM__INITIAL_GIFT_INVITATION_SENT_DATE__C","comment":null,"display_name":"alycecom__initial_gift_invitation_sent_date__c"},"ALYCECOM__MOST_RECENT_GIFT_INVITATION_CREATE_DATE__C":{"type":"TIMESTAMP_TZ","index":50,"name":"ALYCECOM__MOST_RECENT_GIFT_INVITATION_CREATE_DATE__C","comment":null,"display_name":"alycecom__most_recent_gift_invitation_create_date__c"},"ALYCECOM__MOST_RECENT_GIFT_INVITATION_SENT_DATE__C":{"type":"TIMESTAMP_TZ","index":51,"name":"ALYCECOM__MOST_RECENT_GIFT_INVITATION_SENT_DATE__C","comment":null,"display_name":"alycecom__most_recent_gift_invitation_sent_date__c"},"ALYCECOM__TOTAL_GIFTS_INVITATIONS_SENT_TO_ACCOUNT__C":{"type":"FLOAT","index":52,"name":"ALYCECOM__TOTAL_GIFTS_INVITATIONS_SENT_TO_ACCOUNT__C","comment":null,"display_name":"alycecom__total_gifts_invitations_sent_to_account__c"},"ANALYST_REFERENCE__C":{"type":"BOOLEAN","index":53,"name":"ANALYST_REFERENCE__C","comment":null,"display_name":"analyst_reference__c"},"ANNUALREVENUE":{"type":"FLOAT","index":54,"name":"ANNUALREVENUE","comment":null,"display_name":"annualrevenue"},"ATAM_ACCOUNT_CARR__C":{"type":"FLOAT","index":55,"name":"ATAM_ACCOUNT_CARR__C","comment":null,"display_name":"atam_account_carr__c"},"ATAM_ACCOUNT_EMPLOYEES__C":{"type":"FLOAT","index":56,"name":"ATAM_ACCOUNT_EMPLOYEES__C","comment":null,"display_name":"atam_account_employees__c"},"ATAM_ADDRESS_CITY__C":{"type":"TEXT","index":57,"name":"ATAM_ADDRESS_CITY__C","comment":null,"display_name":"atam_address_city__c"},"ATAM_ADDRESS_COUNTRY__C":{"type":"TEXT","index":58,"name":"ATAM_ADDRESS_COUNTRY__C","comment":null,"display_name":"atam_address_country__c"},"ATAM_ADDRESS_POSTAL_CODE__C":{"type":"TEXT","index":59,"name":"ATAM_ADDRESS_POSTAL_CODE__C","comment":null,"display_name":"atam_address_postal_code__c"},"ATAM_ADDRESS_STATE__C":{"type":"TEXT","index":60,"name":"ATAM_ADDRESS_STATE__C","comment":null,"display_name":"atam_address_state__c"},"ATAM_ADDRESS_STREET__C":{"type":"TEXT","index":61,"name":"ATAM_ADDRESS_STREET__C","comment":null,"display_name":"atam_address_street__c"},"ATAM_APPROVED_NEXT_OWNER__C":{"type":"TEXT","index":62,"name":"ATAM_APPROVED_NEXT_OWNER__C","comment":null,"display_name":"atam_approved_next_owner__c"},"ATAM_AREA__C":{"type":"TEXT","index":63,"name":"ATAM_AREA__C","comment":null,"display_name":"atam_area__c"},"ATAM_GEO_STORY__C":{"type":"TEXT","index":64,"name":"ATAM_GEO_STORY__C","comment":null,"display_name":"atam_geo_story__c"},"ATAM_MAX_EMPLOYEES_ACCOUNT__C":{"type":"TEXT","index":65,"name":"ATAM_MAX_EMPLOYEES_ACCOUNT__C","comment":null,"display_name":"atam_max_employees_account__c"},"ATAM_NEXT_OWNER_ROLE__C":{"type":"TEXT","index":66,"name":"ATAM_NEXT_OWNER_ROLE__C","comment":null,"display_name":"atam_next_owner_role__c"},"ATAM_NEXT_OWNER_TEAM__C":{"type":"TEXT","index":67,"name":"ATAM_NEXT_OWNER_TEAM__C","comment":null,"display_name":"atam_next_owner_team__c"},"ATAM_OWNER_DIFFERENCE__C":{"type":"BOOLEAN","index":68,"name":"ATAM_OWNER_DIFFERENCE__C","comment":null,"display_name":"atam_owner_difference__c"},"ATAM_OWNER_ROLE_ACRO__C":{"type":"TEXT","index":69,"name":"ATAM_OWNER_ROLE_ACRO__C","comment":null,"display_name":"atam_owner_role_acro__c"},"ATAM_REGION__C":{"type":"TEXT","index":70,"name":"ATAM_REGION__C","comment":null,"display_name":"atam_region__c"},"ATAM_SUB_REGION__C":{"type":"TEXT","index":71,"name":"ATAM_SUB_REGION__C","comment":null,"display_name":"atam_sub_region__c"},"ATAM_TERRITORY__C":{"type":"TEXT","index":72,"name":"ATAM_TERRITORY__C","comment":null,"display_name":"atam_territory__c"},"BILLINGCITY":{"type":"TEXT","index":73,"name":"BILLINGCITY","comment":null,"display_name":"billingcity"},"BILLINGCOUNTRY":{"type":"TEXT","index":74,"name":"BILLINGCOUNTRY","comment":null,"display_name":"billingcountry"},"BILLINGCOUNTRYCODE":{"type":"TEXT","index":75,"name":"BILLINGCOUNTRYCODE","comment":null,"display_name":"billingcountrycode"},"BILLINGD__C":{"type":"TEXT","index":76,"name":"BILLINGD__C","comment":null,"display_name":"billingd__c"},"BILLINGLATITUDE":{"type":"FLOAT","index":77,"name":"BILLINGLATITUDE","comment":null,"display_name":"billinglatitude"},"BILLINGLONGITUDE":{"type":"FLOAT","index":78,"name":"BILLINGLONGITUDE","comment":null,"display_name":"billinglongitude"},"BILLINGPOSTALCODE":{"type":"TEXT","index":79,"name":"BILLINGPOSTALCODE","comment":null,"display_name":"billingpostalcode"},"BILLINGSTATE":{"type":"TEXT","index":80,"name":"BILLINGSTATE","comment":null,"display_name":"billingstate"},"BILLINGSTATECODE":{"type":"TEXT","index":81,"name":"BILLINGSTATECODE","comment":null,"display_name":"billingstatecode"},"BILLINGSTREET":{"type":"TEXT","index":82,"name":"BILLINGSTREET","comment":null,"display_name":"billingstreet"},"BILL_TO_EMAIL__C":{"type":"TEXT","index":83,"name":"BILL_TO_EMAIL__C","comment":null,"display_name":"bill_to_email__c"},"BIZIBLE2__ENGAGEMENT_SCORE__C":{"type":"TEXT","index":84,"name":"BIZIBLE2__ENGAGEMENT_SCORE__C","comment":null,"display_name":"bizible2__engagement_score__c"},"BUSINESS_DEVELOPMENT_REP__C":{"type":"TEXT","index":85,"name":"BUSINESS_DEVELOPMENT_REP__C","comment":null,"display_name":"business_development_rep__c"},"BUYS_FROM_DISTRIBUTION__C":{"type":"BOOLEAN","index":86,"name":"BUYS_FROM_DISTRIBUTION__C","comment":null,"display_name":"buys_from_distribution__c"},"CAB_REFERENCE__C":{"type":"BOOLEAN","index":87,"name":"CAB_REFERENCE__C","comment":null,"display_name":"cab_reference__c"},"CAN_USER_CHANGE_ACCOUNT_OWNER__C":{"type":"TEXT","index":88,"name":"CAN_USER_CHANGE_ACCOUNT_OWNER__C","comment":null,"display_name":"can_user_change_account_owner__c"},"CARR_ALL_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":89,"name":"CARR_ALL_CHILD_ACCOUNTS__C","comment":null,"display_name":"carr_all_child_accounts__c"},"CARR_THIS_ACCOUNT__C":{"type":"FLOAT","index":90,"name":"CARR_THIS_ACCOUNT__C","comment":null,"display_name":"carr_this_account__c"},"CARR_TOTAL__C":{"type":"FLOAT","index":91,"name":"CARR_TOTAL__C","comment":null,"display_name":"carr_total__c"},"CASE_STUDY_REFERENCE__C":{"type":"BOOLEAN","index":92,"name":"CASE_STUDY_REFERENCE__C","comment":null,"display_name":"case_study_reference__c"},"CE_INSTANCES__C":{"type":"FLOAT","index":93,"name":"CE_INSTANCES__C","comment":null,"display_name":"ce_instances__c"},"CMRR_ALL_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":94,"name":"CMRR_ALL_CHILD_ACCOUNTS__C","comment":null,"display_name":"cmrr_all_child_accounts__c"},"CMRR_THIS_ACCOUNT__C":{"type":"FLOAT","index":95,"name":"CMRR_THIS_ACCOUNT__C","comment":null,"display_name":"cmrr_this_account__c"},"CMRR_TOTAL__C":{"type":"FLOAT","index":96,"name":"CMRR_TOTAL__C","comment":null,"display_name":"cmrr_total__c"},"COMPANY_TECHNOLOGIES__C":{"type":"TEXT","index":97,"name":"COMPANY_TECHNOLOGIES__C","comment":null,"display_name":"company_technologies__c"},"CONCURRENT_EE_SUBSCRIPTIONS__C":{"type":"FLOAT","index":98,"name":"CONCURRENT_EE_SUBSCRIPTIONS__C","comment":null,"display_name":"concurrent_ee_subscriptions__c"},"CONTRACTED_CHANNEL_TEAM_USE_ONLY__C":{"type":"BOOLEAN","index":99,"name":"CONTRACTED_CHANNEL_TEAM_USE_ONLY__C","comment":null,"display_name":"contracted_channel_team_use_only__c"},"COUNT_OF_ACTIVE_SUBSCRIPTIONS__C":{"type":"FLOAT","index":100,"name":"COUNT_OF_ACTIVE_SUBSCRIPTIONS__C","comment":null,"display_name":"count_of_active_subscriptions__c"},"COUNT_OF_ACTIVE_SUBSCRIPTION_CHARGES__C":{"type":"FLOAT","index":101,"name":"COUNT_OF_ACTIVE_SUBSCRIPTION_CHARGES__C","comment":null,"display_name":"count_of_active_subscription_charges__c"},"COUNT_OF_BILLING_ACCOUNTS__C":{"type":"FLOAT","index":102,"name":"COUNT_OF_BILLING_ACCOUNTS__C","comment":null,"display_name":"count_of_billing_accounts__c"},"COUNT_OF_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":103,"name":"COUNT_OF_CHILD_ACCOUNTS__C","comment":null,"display_name":"count_of_child_accounts__c"},"COUNT_OF_CONTACTS__C":{"type":"FLOAT","index":104,"name":"COUNT_OF_CONTACTS__C","comment":null,"display_name":"count_of_contacts__c"},"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES_ALL__C":{"type":"FLOAT","index":105,"name":"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES_ALL__C","comment":null,"display_name":"count_of_lost_renewal_opportunities_all__c"},"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES__C":{"type":"FLOAT","index":106,"name":"COUNT_OF_LOST_RENEWAL_OPPORTUNITIES__C","comment":null,"display_name":"count_of_lost_renewal_opportunities__c"},"COUNT_OF_NEW_BUSINESS_WON_OPPS__C":{"type":"FLOAT","index":107,"name":"COUNT_OF_NEW_BUSINESS_WON_OPPS__C","comment":null,"display_name":"count_of_new_business_won_opps__c"},"COUNT_OF_OPEN_NEW_ADDON_OPPS__C":{"type":"FLOAT","index":108,"name":"COUNT_OF_OPEN_NEW_ADDON_OPPS__C","comment":null,"display_name":"count_of_open_new_addon_opps__c"},"COUNT_OF_OPEN_RENEWAL_OPPORTUNITIES__C":{"type":"FLOAT","index":109,"name":"COUNT_OF_OPEN_RENEWAL_OPPORTUNITIES__C","comment":null,"display_name":"count_of_open_renewal_opportunities__c"},"COUNT_OF_OPEN_RENEWAL_OPPS_CM_PM__C":{"type":"FLOAT","index":110,"name":"COUNT_OF_OPEN_RENEWAL_OPPS_CM_PM__C","comment":null,"display_name":"count_of_open_renewal_opps_cm_pm__c"},"COUNT_OF_OPEN_RENEWAL_OPPS_LAST_MONTH__C":{"type":"FLOAT","index":111,"name":"COUNT_OF_OPEN_RENEWAL_OPPS_LAST_MONTH__C","comment":null,"display_name":"count_of_open_renewal_opps_last_month__c"},"COUNT_OF_OPEN_ZD_TICKETS__C":{"type":"FLOAT","index":112,"name":"COUNT_OF_OPEN_ZD_TICKETS__C","comment":null,"display_name":"count_of_open_zd_tickets__c"},"COUNT_OF_OPPORTUNITIES__C":{"type":"FLOAT","index":113,"name":"COUNT_OF_OPPORTUNITIES__C","comment":null,"display_name":"count_of_opportunities__c"},"COUNT_OF_PRODUCTS_PURCHASED__C":{"type":"FLOAT","index":114,"name":"COUNT_OF_PRODUCTS_PURCHASED__C","comment":null,"display_name":"count_of_products_purchased__c"},"COUNT_OF_WON_OPPORTUNITIES__C":{"type":"FLOAT","index":115,"name":"COUNT_OF_WON_OPPORTUNITIES__C","comment":null,"display_name":"count_of_won_opportunities__c"},"COUNT_OF_WON_OPPS_LAST_MONTH__C":{"type":"FLOAT","index":116,"name":"COUNT_OF_WON_OPPS_LAST_MONTH__C","comment":null,"display_name":"count_of_won_opps_last_month__c"},"COUNT_OF_WON_RENEWAL_OPP_LAST_MONTH__C":{"type":"FLOAT","index":117,"name":"COUNT_OF_WON_RENEWAL_OPP_LAST_MONTH__C","comment":null,"display_name":"count_of_won_renewal_opp_last_month__c"},"CREATEDBYID":{"type":"TEXT","index":118,"name":"CREATEDBYID","comment":null,"display_name":"createdbyid"},"CREATEDDATE":{"type":"TIMESTAMP_TZ","index":119,"name":"CREATEDDATE","comment":null,"display_name":"createddate"},"CURRENT_USER_S_ACCOUNT__C":{"type":"BOOLEAN","index":120,"name":"CURRENT_USER_S_ACCOUNT__C","comment":null,"display_name":"current_user_s_account__c"},"CUSTOMER_SINCE__C":{"type":"TIMESTAMP_TZ","index":121,"name":"CUSTOMER_SINCE__C","comment":null,"display_name":"customer_since__c"},"CUSTOMER_SLACK_CHANNEL__C":{"type":"TEXT","index":122,"name":"CUSTOMER_SLACK_CHANNEL__C","comment":null,"display_name":"customer_slack_channel__c"},"DATAFOX_ACCOUNT_WORK__C":{"type":"TEXT","index":123,"name":"DATAFOX_ACCOUNT_WORK__C","comment":null,"display_name":"datafox_account_work__c"},"DATAFOX_ADDRESS__C":{"type":"TEXT","index":124,"name":"DATAFOX_ADDRESS__C","comment":null,"display_name":"datafox_address__c"},"DATAFOX_CITY__C":{"type":"TEXT","index":125,"name":"DATAFOX_CITY__C","comment":null,"display_name":"datafox_city__c"},"DATAFOX_COUNTRY__C":{"type":"TEXT","index":126,"name":"DATAFOX_COUNTRY__C","comment":null,"display_name":"datafox_country__c"},"DATAFOX_STATE__C":{"type":"TEXT","index":127,"name":"DATAFOX_STATE__C","comment":null,"display_name":"datafox_state__c"},"DATAFOX_ZIP__C":{"type":"TEXT","index":128,"name":"DATAFOX_ZIP__C","comment":null,"display_name":"datafox_zip__c"},"DAYS_OUTSTANDING__C":{"type":"FLOAT","index":129,"name":"DAYS_OUTSTANDING__C","comment":null,"display_name":"days_outstanding__c"},"DEAL_DESK_RENEWAL_REVIEW__C":{"type":"TEXT","index":130,"name":"DEAL_DESK_RENEWAL_REVIEW__C","comment":null,"display_name":"deal_desk_renewal_review__c"},"DEDICATED_SERVICE_ENGINEER__C":{"type":"TEXT","index":131,"name":"DEDICATED_SERVICE_ENGINEER__C","comment":null,"display_name":"dedicated_service_engineer__c"},"DEMANDBASE_RANK__C":{"type":"FLOAT","index":132,"name":"DEMANDBASE_RANK__C","comment":null,"display_name":"demandbase_rank__c"},"DESCRIPTION":{"type":"TEXT","index":133,"name":"DESCRIPTION","comment":null,"display_name":"description"},"DFOX_INDUSTRY__C":{"type":"TEXT","index":134,"name":"DFOX_INDUSTRY__C","comment":null,"display_name":"dfox_industry__c"},"DFOX_NAICS_CODE_DESCRIPTION__C":{"type":"TEXT","index":135,"name":"DFOX_NAICS_CODE_DESCRIPTION__C","comment":null,"display_name":"dfox_naics_code_description__c"},"DFOX_NAICS_CODE__C":{"type":"TEXT","index":136,"name":"DFOX_NAICS_CODE__C","comment":null,"display_name":"dfox_naics_code__c"},"DFOX_SUB_INDUSTRY__C":{"type":"TEXT","index":137,"name":"DFOX_SUB_INDUSTRY__C","comment":null,"display_name":"dfox_sub_industry__c"},"DFOX__CRUNCHBASE_URL__C":{"type":"TEXT","index":138,"name":"DFOX__CRUNCHBASE_URL__C","comment":null,"display_name":"dfox__crunchbase_url__c"},"DFOX__DATAFOX_SCORE__C":{"type":"FLOAT","index":139,"name":"DFOX__DATAFOX_SCORE__C","comment":null,"display_name":"dfox__datafox_score__c"},"DFOX__FINANCE_SCORE__C":{"type":"FLOAT","index":140,"name":"DFOX__FINANCE_SCORE__C","comment":null,"display_name":"dfox__finance_score__c"},"DFOX__GROWTH_SCORE__C":{"type":"FLOAT","index":141,"name":"DFOX__GROWTH_SCORE__C","comment":null,"display_name":"dfox__growth_score__c"},"DFOX__HR_SCORE__C":{"type":"FLOAT","index":142,"name":"DFOX__HR_SCORE__C","comment":null,"display_name":"dfox__hr_score__c"},"DFOX__ID__C":{"type":"TEXT","index":143,"name":"DFOX__ID__C","comment":null,"display_name":"dfox__id__c"},"DFOX__INFLUENCE_SCORE__C":{"type":"FLOAT","index":144,"name":"DFOX__INFLUENCE_SCORE__C","comment":null,"display_name":"dfox__influence_score__c"},"DFOX__INVESTORS__C":{"type":"TEXT","index":145,"name":"DFOX__INVESTORS__C","comment":null,"display_name":"dfox__investors__c"},"DFOX__KEYWORDS__C":{"type":"TEXT","index":146,"name":"DFOX__KEYWORDS__C","comment":null,"display_name":"dfox__keywords__c"},"DFOX__LAST_SYNCED_DATE__C":{"type":"TIMESTAMP_TZ","index":147,"name":"DFOX__LAST_SYNCED_DATE__C","comment":null,"display_name":"dfox__last_synced_date__c"},"DFOX__LATEST_FUNDING_AMOUNT__C":{"type":"FLOAT","index":148,"name":"DFOX__LATEST_FUNDING_AMOUNT__C","comment":null,"display_name":"dfox__latest_funding_amount__c"},"DFOX__LATEST_FUNDING_DATE__C":{"type":"TIMESTAMP_TZ","index":149,"name":"DFOX__LATEST_FUNDING_DATE__C","comment":null,"display_name":"dfox__latest_funding_date__c"},"DFOX__LATEST_FUNDING_TYPE__C":{"type":"TEXT","index":150,"name":"DFOX__LATEST_FUNDING_TYPE__C","comment":null,"display_name":"dfox__latest_funding_type__c"},"DFOX__LINKEDIN_URL__C":{"type":"TEXT","index":151,"name":"DFOX__LINKEDIN_URL__C","comment":null,"display_name":"dfox__linkedin_url__c"},"DFOX__LISTS__C":{"type":"TEXT","index":152,"name":"DFOX__LISTS__C","comment":null,"display_name":"dfox__lists__c"},"DFOX__REVENUE_ESTIMATE__C":{"type":"FLOAT","index":153,"name":"DFOX__REVENUE_ESTIMATE__C","comment":null,"display_name":"dfox__revenue_estimate__c"},"DFOX__SOURCED_FROM_DATAFOX__C":{"type":"BOOLEAN","index":154,"name":"DFOX__SOURCED_FROM_DATAFOX__C","comment":null,"display_name":"dfox__sourced_from_datafox__c"},"DFOX__STAGE__C":{"type":"TEXT","index":155,"name":"DFOX__STAGE__C","comment":null,"display_name":"dfox__stage__c"},"DFOX__TECHSTACK__C":{"type":"TEXT","index":156,"name":"DFOX__TECHSTACK__C","comment":null,"display_name":"dfox__techstack__c"},"DFOX__TOTAL_FUNDING__C":{"type":"FLOAT","index":157,"name":"DFOX__TOTAL_FUNDING__C","comment":null,"display_name":"dfox__total_funding__c"},"DFOX__TWITTER_HANDLE__C":{"type":"TEXT","index":158,"name":"DFOX__TWITTER_HANDLE__C","comment":null,"display_name":"dfox__twitter_handle__c"},"DFOX__URL__C":{"type":"TEXT","index":159,"name":"DFOX__URL__C","comment":null,"display_name":"dfox__url__c"},"DFOX__YEAR_FOUNDED__C":{"type":"FLOAT","index":160,"name":"DFOX__YEAR_FOUNDED__C","comment":null,"display_name":"dfox__year_founded__c"},"DISCOVERORG_ADDRESS__C":{"type":"TEXT","index":161,"name":"DISCOVERORG_ADDRESS__C","comment":null,"display_name":"discoverorg_address__c"},"DISCOVERORG_CITY__C":{"type":"TEXT","index":162,"name":"DISCOVERORG_CITY__C","comment":null,"display_name":"discoverorg_city__c"},"DISCOVERORG_ZIP__C":{"type":"TEXT","index":163,"name":"DISCOVERORG_ZIP__C","comment":null,"display_name":"discoverorg_zip__c"},"DOAC_REFERENCE__C":{"type":"BOOLEAN","index":164,"name":"DOAC_REFERENCE__C","comment":null,"display_name":"doac_reference__c"},"DOMAINS__C":{"type":"TEXT","index":165,"name":"DOMAINS__C","comment":null,"display_name":"domains__c"},"DOZISF__ZOOMINFO_FIRST_UPDATED__C":{"type":"TIMESTAMP_TZ","index":166,"name":"DOZISF__ZOOMINFO_FIRST_UPDATED__C","comment":null,"display_name":"dozisf__zoominfo_first_updated__c"},"DOZISF__ZOOMINFO_ID__C":{"type":"TEXT","index":167,"name":"DOZISF__ZOOMINFO_ID__C","comment":null,"display_name":"dozisf__zoominfo_id__c"},"DOZISF__ZOOMINFO_LAST_UPDATED__C":{"type":"TIMESTAMP_TZ","index":168,"name":"DOZISF__ZOOMINFO_LAST_UPDATED__C","comment":null,"display_name":"dozisf__zoominfo_last_updated__c"},"DO_NOT_CONTACT__C":{"type":"BOOLEAN","index":169,"name":"DO_NOT_CONTACT__C","comment":null,"display_name":"do_not_contact__c"},"DSCORGPKG__DELETEDFROMDISCOVERORG__C":{"type":"TEXT","index":170,"name":"DSCORGPKG__DELETEDFROMDISCOVERORG__C","comment":null,"display_name":"dscorgpkg__deletedfromdiscoverorg__c"},"DSCORGPKG__DISCOVERORG_CREATED_ON__C":{"type":"TIMESTAMP_TZ","index":171,"name":"DSCORGPKG__DISCOVERORG_CREATED_ON__C","comment":null,"display_name":"dscorgpkg__discoverorg_created_on__c"},"DSCORGPKG__DISCOVERORG_FIRST_UPDATE__C":{"type":"TIMESTAMP_TZ","index":172,"name":"DSCORGPKG__DISCOVERORG_FIRST_UPDATE__C","comment":null,"display_name":"dscorgpkg__discoverorg_first_update__c"},"DSCORGPKG__DISCOVERORG_FULLCOUNTRYNAME__C":{"type":"TEXT","index":173,"name":"DSCORGPKG__DISCOVERORG_FULLCOUNTRYNAME__C","comment":null,"display_name":"dscorgpkg__discoverorg_fullcountryname__c"},"DSCORGPKG__DISCOVERORG_ID__C":{"type":"TEXT","index":174,"name":"DSCORGPKG__DISCOVERORG_ID__C","comment":null,"display_name":"dscorgpkg__discoverorg_id__c"},"DSCORGPKG__DISCOVERORG_LASTUPDATE__C":{"type":"TIMESTAMP_TZ","index":175,"name":"DSCORGPKG__DISCOVERORG_LASTUPDATE__C","comment":null,"display_name":"dscorgpkg__discoverorg_lastupdate__c"},"DSCORGPKG__DISCOVERORG_STATE_FULL_NAME__C":{"type":"TEXT","index":176,"name":"DSCORGPKG__DISCOVERORG_STATE_FULL_NAME__C","comment":null,"display_name":"dscorgpkg__discoverorg_state_full_name__c"},"DSCORGPKG__DISCOVERORG_TECHNOLOGIES__C":{"type":"TEXT","index":177,"name":"DSCORGPKG__DISCOVERORG_TECHNOLOGIES__C","comment":null,"display_name":"dscorgpkg__discoverorg_technologies__c"},"DSCORGPKG__DO_3YR_EMPLOYEES_GROWTH__C":{"type":"TEXT","index":178,"name":"DSCORGPKG__DO_3YR_EMPLOYEES_GROWTH__C","comment":null,"display_name":"dscorgpkg__do_3yr_employees_growth__c"},"DSCORGPKG__DO_3YR_SALES_GROWTH__C":{"type":"TEXT","index":179,"name":"DSCORGPKG__DO_3YR_SALES_GROWTH__C","comment":null,"display_name":"dscorgpkg__do_3yr_sales_growth__c"},"DSCORGPKG__EXCLUDE_UPDATE__C":{"type":"BOOLEAN","index":180,"name":"DSCORGPKG__EXCLUDE_UPDATE__C","comment":null,"display_name":"dscorgpkg__exclude_update__c"},"DSCORGPKG__EXTERNAL_DISCOVERORG_ID__C":{"type":"TEXT","index":181,"name":"DSCORGPKG__EXTERNAL_DISCOVERORG_ID__C","comment":null,"display_name":"dscorgpkg__external_discoverorg_id__c"},"DSCORGPKG__FISCAL_YEAR_END__C":{"type":"TEXT","index":182,"name":"DSCORGPKG__FISCAL_YEAR_END__C","comment":null,"display_name":"dscorgpkg__fiscal_year_end__c"},"DSCORGPKG__FORTUNE_RANK__C":{"type":"TEXT","index":183,"name":"DSCORGPKG__FORTUNE_RANK__C","comment":null,"display_name":"dscorgpkg__fortune_rank__c"},"DSCORGPKG__ITORGCHART__C":{"type":"TEXT","index":184,"name":"DSCORGPKG__ITORGCHART__C","comment":null,"display_name":"dscorgpkg__itorgchart__c"},"DSCORGPKG__IT_BUDGET__C":{"type":"FLOAT","index":185,"name":"DSCORGPKG__IT_BUDGET__C","comment":null,"display_name":"dscorgpkg__it_budget__c"},"DSCORGPKG__IT_EMPLOYEES__C":{"type":"FLOAT","index":186,"name":"DSCORGPKG__IT_EMPLOYEES__C","comment":null,"display_name":"dscorgpkg__it_employees__c"},"DSCORGPKG__LEAD_SOURCE__C":{"type":"TEXT","index":187,"name":"DSCORGPKG__LEAD_SOURCE__C","comment":null,"display_name":"dscorgpkg__lead_source__c"},"DSCORGPKG__LOCKED_BY_USER__C":{"type":"TEXT","index":188,"name":"DSCORGPKG__LOCKED_BY_USER__C","comment":null,"display_name":"dscorgpkg__locked_by_user__c"},"DSCORGPKG__NAICS_CODES__C":{"type":"TEXT","index":189,"name":"DSCORGPKG__NAICS_CODES__C","comment":null,"display_name":"dscorgpkg__naics_codes__c"},"DSCORGPKG__OWNERSHIP__C":{"type":"TEXT","index":190,"name":"DSCORGPKG__OWNERSHIP__C","comment":null,"display_name":"dscorgpkg__ownership__c"},"DSCORGPKG__SIC_CODES__C":{"type":"TEXT","index":191,"name":"DSCORGPKG__SIC_CODES__C","comment":null,"display_name":"dscorgpkg__sic_codes__c"},"ECUSTOMS__COMPLIANCE_HISTORY__C":{"type":"TEXT","index":192,"name":"ECUSTOMS__COMPLIANCE_HISTORY__C","comment":null,"display_name":"ecustoms__compliance_history__c"},"ECUSTOMS__IM_DATE__C":{"type":"TIMESTAMP_TZ","index":193,"name":"ECUSTOMS__IM_DATE__C","comment":null,"display_name":"ecustoms__im_date__c"},"ECUSTOMS__IM_STATUS__C":{"type":"TEXT","index":194,"name":"ECUSTOMS__IM_STATUS__C","comment":null,"display_name":"ecustoms__im_status__c"},"ECUSTOMS__RPS_DATE__C":{"type":"TIMESTAMP_TZ","index":195,"name":"ECUSTOMS__RPS_DATE__C","comment":null,"display_name":"ecustoms__rps_date__c"},"ECUSTOMS__RPS_RISKCOUNTRY_STATUS__C":{"type":"TEXT","index":196,"name":"ECUSTOMS__RPS_RISKCOUNTRY_STATUS__C","comment":null,"display_name":"ecustoms__rps_riskcountry_status__c"},"ECUSTOMS__RPS_STATUS__C":{"type":"TEXT","index":197,"name":"ECUSTOMS__RPS_STATUS__C","comment":null,"display_name":"ecustoms__rps_status__c"},"ECUSTOMS__SCREENING_TRIGGER__C":{"type":"BOOLEAN","index":198,"name":"ECUSTOMS__SCREENING_TRIGGER__C","comment":null,"display_name":"ecustoms__screening_trigger__c"},"EDIT__C":{"type":"TEXT","index":199,"name":"EDIT__C","comment":null,"display_name":"edit__c"},"ENGAGIO__ENGAGEDPEOPLE__C":{"type":"FLOAT","index":200,"name":"ENGAGIO__ENGAGEDPEOPLE__C","comment":null,"display_name":"engagio__engagedpeople__c"},"ENGAGIO__ENGAGEMENTMINUTESLAST3MONTHS__C":{"type":"FLOAT","index":201,"name":"ENGAGIO__ENGAGEMENTMINUTESLAST3MONTHS__C","comment":null,"display_name":"engagio__engagementminuteslast3months__c"},"ENGAGIO__ENGAGEMENTMINUTESLAST7DAYS__C":{"type":"FLOAT","index":202,"name":"ENGAGIO__ENGAGEMENTMINUTESLAST7DAYS__C","comment":null,"display_name":"engagio__engagementminuteslast7days__c"},"ENGAGIO__FIRSTENGAGEMENTDATE__C":{"type":"TIMESTAMP_TZ","index":203,"name":"ENGAGIO__FIRSTENGAGEMENTDATE__C","comment":null,"display_name":"engagio__firstengagementdate__c"},"ENGAGIO__HIGHINTENTKEYWORDS__C":{"type":"TEXT","index":204,"name":"ENGAGIO__HIGHINTENTKEYWORDS__C","comment":null,"display_name":"engagio__highintentkeywords__c"},"ENGAGIO__NUMBEROFPEOPLE__C":{"type":"FLOAT","index":205,"name":"ENGAGIO__NUMBEROFPEOPLE__C","comment":null,"display_name":"engagio__numberofpeople__c"},"ENGAGIO__STATUS__C":{"type":"TEXT","index":206,"name":"ENGAGIO__STATUS__C","comment":null,"display_name":"engagio__status__c"},"EVENT_SPEAKER_REFERENCE__C":{"type":"BOOLEAN","index":207,"name":"EVENT_SPEAKER_REFERENCE__C","comment":null,"display_name":"event_speaker_reference__c"},"EXECUTIVE_SPONSOR_PROGRAM_STATUS__C":{"type":"TEXT","index":208,"name":"EXECUTIVE_SPONSOR_PROGRAM_STATUS__C","comment":null,"display_name":"executive_sponsor_program_status__c"},"EXECUTIVE_SPONSOR__C":{"type":"TEXT","index":209,"name":"EXECUTIVE_SPONSOR__C","comment":null,"display_name":"executive_sponsor__c"},"FAX":{"type":"TEXT","index":210,"name":"FAX","comment":null,"display_name":"fax"},"FEDERAL_ACCOUNT__C":{"type":"BOOLEAN","index":211,"name":"FEDERAL_ACCOUNT__C","comment":null,"display_name":"federal_account__c"},"FIELD_MARKETING_MANAGER__C":{"type":"TEXT","index":212,"name":"FIELD_MARKETING_MANAGER__C","comment":null,"display_name":"field_marketing_manager__c"},"FIRST_ORDER_AVAILABLE__C":{"type":"BOOLEAN","index":213,"name":"FIRST_ORDER_AVAILABLE__C","comment":null,"display_name":"first_order_available__c"},"FORBES_2000_RANK__C":{"type":"TEXT","index":214,"name":"FORBES_2000_RANK__C","comment":null,"display_name":"forbes_2000_rank__c"},"FORTUNE_RANK_2__C":{"type":"TEXT","index":215,"name":"FORTUNE_RANK_2__C","comment":null,"display_name":"fortune_rank_2__c"},"FORTUNE_RANK_NUMBER__C":{"type":"FLOAT","index":216,"name":"FORTUNE_RANK_NUMBER__C","comment":null,"display_name":"fortune_rank_number__c"},"FUTURE_PLANS_REFERENCE__C":{"type":"TEXT","index":217,"name":"FUTURE_PLANS_REFERENCE__C","comment":null,"display_name":"future_plans_reference__c"},"GITLAB_COM_USER__C":{"type":"BOOLEAN","index":218,"name":"GITLAB_COM_USER__C","comment":null,"display_name":"gitlab_com_user__c"},"GITLAB_CUSTOMER_SUCCESS_PROJECT__C":{"type":"TEXT","index":219,"name":"GITLAB_CUSTOMER_SUCCESS_PROJECT__C","comment":null,"display_name":"gitlab_customer_success_project__c"},"GITLAB_PARTNER_PROGRAMS__C":{"type":"TEXT","index":220,"name":"GITLAB_PARTNER_PROGRAMS__C","comment":null,"display_name":"gitlab_partner_programs__c"},"GITLAB_PLAN_TEMP__C":{"type":"TEXT","index":221,"name":"GITLAB_PLAN_TEMP__C","comment":null,"display_name":"gitlab_plan_temp__c"},"GITLAB_PLAN_TEST__C":{"type":"TEXT","index":222,"name":"GITLAB_PLAN_TEST__C","comment":null,"display_name":"gitlab_plan_test__c"},"GITLAB_TEAM__C":{"type":"TEXT","index":223,"name":"GITLAB_TEAM__C","comment":null,"display_name":"gitlab_team__c"},"GS_ARCHITECTURE_DIAGRAM_LINK__C":{"type":"TEXT","index":224,"name":"GS_ARCHITECTURE_DIAGRAM_LINK__C","comment":null,"display_name":"gs_architecture_diagram_link__c"},"GS_CUSTOMER_TYPE__C":{"type":"TEXT","index":225,"name":"GS_CUSTOMER_TYPE__C","comment":null,"display_name":"gs_customer_type__c"},"GS_GEO__C":{"type":"BOOLEAN","index":226,"name":"GS_GEO__C","comment":null,"display_name":"gs_geo__c"},"GS_GOOGLE_DOC_NOTES__C":{"type":"TEXT","index":227,"name":"GS_GOOGLE_DOC_NOTES__C","comment":null,"display_name":"gs_google_doc_notes__c"},"GS_HEALTH_SCORE_COLOR__C":{"type":"TEXT","index":228,"name":"GS_HEALTH_SCORE_COLOR__C","comment":null,"display_name":"gs_health_score_color__c"},"GS_HEALTH_SCORE_LABEL__C":{"type":"TEXT","index":229,"name":"GS_HEALTH_SCORE_LABEL__C","comment":null,"display_name":"gs_health_score_label__c"},"GS_HEALTH_SCORE__C":{"type":"FLOAT","index":230,"name":"GS_HEALTH_SCORE__C","comment":null,"display_name":"gs_health_score__c"},"GS_HIGH_AVAILABILITY__C":{"type":"BOOLEAN","index":231,"name":"GS_HIGH_AVAILABILITY__C","comment":null,"display_name":"gs_high_availability__c"},"GS_HOSTING__C":{"type":"TEXT","index":232,"name":"GS_HOSTING__C","comment":null,"display_name":"gs_hosting__c"},"GS_LIFECYCLE_STAGE__C":{"type":"TEXT","index":233,"name":"GS_LIFECYCLE_STAGE__C","comment":null,"display_name":"gs_lifecycle_stage__c"},"GS_PRODUCT_RISK_MEASURE__C":{"type":"TEXT","index":234,"name":"GS_PRODUCT_RISK_MEASURE__C","comment":null,"display_name":"gs_product_risk_measure__c"},"GS_PROVIDER__C":{"type":"TEXT","index":235,"name":"GS_PROVIDER__C","comment":null,"display_name":"gs_provider__c"},"GS_STAGE_COUNT__C":{"type":"FLOAT","index":236,"name":"GS_STAGE_COUNT__C","comment":null,"display_name":"gs_stage_count__c"},"GS_SUMMARY__C":{"type":"TEXT","index":237,"name":"GS_SUMMARY__C","comment":null,"display_name":"gs_summary__c"},"GS_SUPPORT_ISSUES_MEASURE__C":{"type":"TEXT","index":238,"name":"GS_SUPPORT_ISSUES_MEASURE__C","comment":null,"display_name":"gs_support_issues_measure__c"},"GS_TRIAGE_ISSUE_URL__C":{"type":"TEXT","index":239,"name":"GS_TRIAGE_ISSUE_URL__C","comment":null,"display_name":"gs_triage_issue_url__c"},"GTM_ACCELERATION_DATE__C":{"type":"TIMESTAMP_TZ","index":240,"name":"GTM_ACCELERATION_DATE__C","comment":null,"display_name":"gtm_acceleration_date__c"},"GTM_ACCOUNT_BASED_DATE__C":{"type":"TIMESTAMP_TZ","index":241,"name":"GTM_ACCOUNT_BASED_DATE__C","comment":null,"display_name":"gtm_account_based_date__c"},"GTM_ACCOUNT_CENTRIC_DATE__C":{"type":"TIMESTAMP_TZ","index":242,"name":"GTM_ACCOUNT_CENTRIC_DATE__C","comment":null,"display_name":"gtm_account_centric_date__c"},"GTM_STRATEGY__C":{"type":"TEXT","index":243,"name":"GTM_STRATEGY__C","comment":null,"display_name":"gtm_strategy__c"},"HAS_10K_EMPLOYEES__C":{"type":"BOOLEAN","index":244,"name":"HAS_10K_EMPLOYEES__C","comment":null,"display_name":"has_10k_employees__c"},"HAS_TAM__C":{"type":"BOOLEAN","index":245,"name":"HAS_TAM__C","comment":null,"display_name":"has_tam__c"},"HEALTH__C":{"type":"TEXT","index":246,"name":"HEALTH__C","comment":null,"display_name":"health__c"},"HISTORICAL_MAX_USERS__C":{"type":"FLOAT","index":247,"name":"HISTORICAL_MAX_USERS__C","comment":null,"display_name":"historical_max_users__c"},"HOLDING_COMPANY_NAME__C":{"type":"TEXT","index":248,"name":"HOLDING_COMPANY_NAME__C","comment":null,"display_name":"holding_company_name__c"},"HOLDING_COMPANY_TEMP_LABEL_ADMINS_ONLY__C":{"type":"TEXT","index":249,"name":"HOLDING_COMPANY_TEMP_LABEL_ADMINS_ONLY__C","comment":null,"display_name":"holding_company_temp_label_admins_only__c"},"HOLDING_COMPANY__C":{"type":"BOOLEAN","index":250,"name":"HOLDING_COMPANY__C","comment":null,"display_name":"holding_company__c"},"HOLDOVER_EXPIRATION__C":{"type":"TIMESTAMP_TZ","index":251,"name":"HOLDOVER_EXPIRATION__C","comment":null,"display_name":"holdover_expiration__c"},"ID":{"type":"TEXT","index":252,"name":"ID","comment":null,"display_name":"id"},"INDUSTRY":{"type":"TEXT","index":253,"name":"INDUSTRY","comment":null,"display_name":"industry"},"INITIAL_START_DATE__C":{"type":"TIMESTAMP_TZ","index":254,"name":"INITIAL_START_DATE__C","comment":null,"display_name":"initial_start_date__c"},"INTENT__C":{"type":"TEXT","index":255,"name":"INTENT__C","comment":null,"display_name":"intent__c"},"INVOICE_OWNER__C":{"type":"TEXT","index":256,"name":"INVOICE_OWNER__C","comment":null,"display_name":"invoice_owner__c"},"ISDELETED":{"type":"BOOLEAN","index":257,"name":"ISDELETED","comment":null,"display_name":"isdeleted"},"ISFILELOCKINGCUSTOMER__C":{"type":"FLOAT","index":258,"name":"ISFILELOCKINGCUSTOMER__C","comment":null,"display_name":"isfilelockingcustomer__c"},"ISGITLABEECUSTOMER__C":{"type":"FLOAT","index":259,"name":"ISGITLABEECUSTOMER__C","comment":null,"display_name":"isgitlabeecustomer__c"},"ISGITLABGEOCUSTOMER__C":{"type":"FLOAT","index":260,"name":"ISGITLABGEOCUSTOMER__C","comment":null,"display_name":"isgitlabgeocustomer__c"},"ISIMPLEMENTATIONSUPPORTCUSTOMER__C":{"type":"FLOAT","index":261,"name":"ISIMPLEMENTATIONSUPPORTCUSTOMER__C","comment":null,"display_name":"isimplementationsupportcustomer__c"},"ISPARTNER":{"type":"BOOLEAN","index":262,"name":"ISPARTNER","comment":null,"display_name":"ispartner"},"ISPREMIUMSUPPORTCUSTOMER__C":{"type":"FLOAT","index":263,"name":"ISPREMIUMSUPPORTCUSTOMER__C","comment":null,"display_name":"ispremiumsupportcustomer__c"},"IS_A_CHILD_ACCOUNT__C":{"type":"FLOAT","index":264,"name":"IS_A_CHILD_ACCOUNT__C","comment":null,"display_name":"is_a_child_account__c"},"IS_BRONZE_PLAN_CUSTOMER__C":{"type":"FLOAT","index":265,"name":"IS_BRONZE_PLAN_CUSTOMER__C","comment":null,"display_name":"is_bronze_plan_customer__c"},"IS_GOLD_PLAN_CUSTOMER__C":{"type":"FLOAT","index":266,"name":"IS_GOLD_PLAN_CUSTOMER__C","comment":null,"display_name":"is_gold_plan_customer__c"},"IS_PREMIUM_CUSTOMER__C":{"type":"FLOAT","index":267,"name":"IS_PREMIUM_CUSTOMER__C","comment":null,"display_name":"is_premium_customer__c"},"IS_SILVER_PLAN_CUSTOMER__C":{"type":"FLOAT","index":268,"name":"IS_SILVER_PLAN_CUSTOMER__C","comment":null,"display_name":"is_silver_plan_customer__c"},"IS_STARTER_CUSTOMER__C":{"type":"FLOAT","index":269,"name":"IS_STARTER_CUSTOMER__C","comment":null,"display_name":"is_starter_customer__c"},"IS_ULTIMATE_CUSTOMER__C":{"type":"FLOAT","index":270,"name":"IS_ULTIMATE_CUSTOMER__C","comment":null,"display_name":"is_ultimate_customer__c"},"IS_ULTIMATE_EAP_CUSTOMER__C":{"type":"TEXT","index":271,"name":"IS_ULTIMATE_EAP_CUSTOMER__C","comment":null,"display_name":"is_ultimate_eap_customer__c"},"IT_TEDD__C":{"type":"FLOAT","index":272,"name":"IT_TEDD__C","comment":null,"display_name":"it_tedd__c"},"JB_DEPLOYMENT_TYPE__C":{"type":"TEXT","index":273,"name":"JB_DEPLOYMENT_TYPE__C","comment":null,"display_name":"jb_deployment_type__c"},"JB_MAX_FAMILY_EMPLOYEES__C":{"type":"FLOAT","index":274,"name":"JB_MAX_FAMILY_EMPLOYEES__C","comment":null,"display_name":"jb_max_family_employees__c"},"JB_SALES_SEGMENT_DELTA_STORY__C":{"type":"TEXT","index":275,"name":"JB_SALES_SEGMENT_DELTA_STORY__C","comment":null,"display_name":"jb_sales_segment_delta_story__c"},"JB_SUPPORT_LEVEL__C":{"type":"TEXT","index":276,"name":"JB_SUPPORT_LEVEL__C","comment":null,"display_name":"jb_support_level__c"},"JB_TEST_SALES_SEGMENT__C":{"type":"TEXT","index":277,"name":"JB_TEST_SALES_SEGMENT__C","comment":null,"display_name":"jb_test_sales_segment__c"},"LARGE_ACCOUNT__C":{"type":"BOOLEAN","index":278,"name":"LARGE_ACCOUNT__C","comment":null,"display_name":"large_account__c"},"LASTACTIVITYDATE":{"type":"TIMESTAMP_TZ","index":279,"name":"LASTACTIVITYDATE","comment":null,"display_name":"lastactivitydate"},"LASTMODIFIEDBYID":{"type":"TEXT","index":280,"name":"LASTMODIFIEDBYID","comment":null,"display_name":"lastmodifiedbyid"},"LASTMODIFIEDDATE":{"type":"TIMESTAMP_TZ","index":281,"name":"LASTMODIFIEDDATE","comment":null,"display_name":"lastmodifieddate"},"LASTREFERENCEDDATE":{"type":"TIMESTAMP_TZ","index":282,"name":"LASTREFERENCEDDATE","comment":null,"display_name":"lastreferenceddate"},"LASTVIEWEDDATE":{"type":"TIMESTAMP_TZ","index":283,"name":"LASTVIEWEDDATE","comment":null,"display_name":"lastvieweddate"},"LATEST_BILL_TO_CONTACT__C":{"type":"TEXT","index":284,"name":"LATEST_BILL_TO_CONTACT__C","comment":null,"display_name":"latest_bill_to_contact__c"},"LATEST_COUNT_OF_CHILD_ACCOUNTS_CHANGED__C":{"type":"TIMESTAMP_TZ","index":285,"name":"LATEST_COUNT_OF_CHILD_ACCOUNTS_CHANGED__C","comment":null,"display_name":"latest_count_of_child_accounts_changed__c"},"LATEST_SOLD_TO_CONTACT__C":{"type":"TEXT","index":286,"name":"LATEST_SOLD_TO_CONTACT__C","comment":null,"display_name":"latest_sold_to_contact__c"},"LATEST_TO_CONTACT_QUOTE_STAMP__C":{"type":"TEXT","index":287,"name":"LATEST_TO_CONTACT_QUOTE_STAMP__C","comment":null,"display_name":"latest_to_contact_quote_stamp__c"},"LEANDATA__LD_EMAILDOMAINS__C":{"type":"TEXT","index":288,"name":"LEANDATA__LD_EMAILDOMAINS__C","comment":null,"display_name":"leandata__ld_emaildomains__c"},"LEANDATA__REPORTING_CUSTOMER__C":{"type":"BOOLEAN","index":289,"name":"LEANDATA__REPORTING_CUSTOMER__C","comment":null,"display_name":"leandata__reporting_customer__c"},"LEANDATA__REPORTING_HAS_OPPORTUNITY__C":{"type":"BOOLEAN","index":290,"name":"LEANDATA__REPORTING_HAS_OPPORTUNITY__C","comment":null,"display_name":"leandata__reporting_has_opportunity__c"},"LEANDATA__REPORTING_TARGET_ACCOUNT_NUMBER__C":{"type":"FLOAT","index":291,"name":"LEANDATA__REPORTING_TARGET_ACCOUNT_NUMBER__C","comment":null,"display_name":"leandata__reporting_target_account_number__c"},"LEANDATA__REPORTING_TARGET_ACCOUNT__C":{"type":"BOOLEAN","index":292,"name":"LEANDATA__REPORTING_TARGET_ACCOUNT__C","comment":null,"display_name":"leandata__reporting_target_account__c"},"LEANDATA__ROUTING_ACTION__C":{"type":"TEXT","index":293,"name":"LEANDATA__ROUTING_ACTION__C","comment":null,"display_name":"leandata__routing_action__c"},"LEANDATA__SEARCH__C":{"type":"TEXT","index":294,"name":"LEANDATA__SEARCH__C","comment":null,"display_name":"leandata__search__c"},"LICENSE_USER_COUNT__C":{"type":"FLOAT","index":295,"name":"LICENSE_USER_COUNT__C","comment":null,"display_name":"license_user_count__c"},"LICENSE_UTILIZATION__C":{"type":"FLOAT","index":296,"name":"LICENSE_UTILIZATION__C","comment":null,"display_name":"license_utilization__c"},"LOCALLY_MANAGED__C":{"type":"BOOLEAN","index":297,"name":"LOCALLY_MANAGED__C","comment":null,"display_name":"locally_managed__c"},"LOGO_REFERENCE__C":{"type":"BOOLEAN","index":298,"name":"LOGO_REFERENCE__C","comment":null,"display_name":"logo_reference__c"},"LOGO_WITH_VISION__C":{"type":"BOOLEAN","index":299,"name":"LOGO_WITH_VISION__C","comment":null,"display_name":"logo_with_vision__c"},"MANUAL_SUPPORT_UPGRADE__C":{"type":"BOOLEAN","index":300,"name":"MANUAL_SUPPORT_UPGRADE__C","comment":null,"display_name":"manual_support_upgrade__c"},"MARKETING_COMM_OPT_OUT__C":{"type":"BOOLEAN","index":301,"name":"MARKETING_COMM_OPT_OUT__C","comment":null,"display_name":"marketing_comm_opt_out__c"},"MASTERRECORDID":{"type":"TEXT","index":302,"name":"MASTERRECORDID","comment":null,"display_name":"masterrecordid"},"MAX_FOR_POTENTIAL_EE_USERS__C":{"type":"FLOAT","index":303,"name":"MAX_FOR_POTENTIAL_EE_USERS__C","comment":null,"display_name":"max_for_potential_ee_users__c"},"MAX_NEW_ADD_BUSINESS__C":{"type":"TIMESTAMP_TZ","index":304,"name":"MAX_NEW_ADD_BUSINESS__C","comment":null,"display_name":"max_new_add_business__c"},"MAX_RENEWAL_DATE__C":{"type":"TIMESTAMP_TZ","index":305,"name":"MAX_RENEWAL_DATE__C","comment":null,"display_name":"max_renewal_date__c"},"MKTO_SI__SALES_INSIGHT__C":{"type":"TEXT","index":306,"name":"MKTO_SI__SALES_INSIGHT__C","comment":null,"display_name":"mkto_si__sales_insight__c"},"MOST_RECENT_EXPIRED_SUBSCRIPTION_DATE__C":{"type":"TIMESTAMP_TZ","index":307,"name":"MOST_RECENT_EXPIRED_SUBSCRIPTION_DATE__C","comment":null,"display_name":"most_recent_expired_subscription_date__c"},"MULTIPLE_MULTIYEAR_SUBSCRIPTIONS__C":{"type":"BOOLEAN","index":308,"name":"MULTIPLE_MULTIYEAR_SUBSCRIPTIONS__C","comment":null,"display_name":"multiple_multiyear_subscriptions__c"},"NAME":{"type":"TEXT","index":309,"name":"NAME","comment":null,"display_name":"name"},"NAMED_ACCOUNT__C":{"type":"BOOLEAN","index":310,"name":"NAMED_ACCOUNT__C","comment":null,"display_name":"named_account__c"},"NAMELOCAL":{"type":"TEXT","index":311,"name":"NAMELOCAL","comment":null,"display_name":"namelocal"},"NATURAL_NAME__C":{"type":"TEXT","index":312,"name":"NATURAL_NAME__C","comment":null,"display_name":"natural_name__c"},"NEW_LOGO_TARGET_ACCOUNT_MOST_RECENT__C":{"type":"TIMESTAMP_TZ","index":313,"name":"NEW_LOGO_TARGET_ACCOUNT_MOST_RECENT__C","comment":null,"display_name":"new_logo_target_account_most_recent__c"},"NEW_LOGO_TARGET_ACCOUNT_ORIGINAL__C":{"type":"TIMESTAMP_TZ","index":314,"name":"NEW_LOGO_TARGET_ACCOUNT_ORIGINAL__C","comment":null,"display_name":"new_logo_target_account_original__c"},"NEW_LOGO_TARGET_ACCOUNT__C":{"type":"TEXT","index":315,"name":"NEW_LOGO_TARGET_ACCOUNT__C","comment":null,"display_name":"new_logo_target_account__c"},"NEXT_FY_ACCOUNT_OWNER_TEMP__C":{"type":"TEXT","index":316,"name":"NEXT_FY_ACCOUNT_OWNER_TEMP__C","comment":null,"display_name":"next_fy_account_owner_temp__c"},"NEXT_FY_PLANNING_NOTES_TEMP__C":{"type":"TEXT","index":317,"name":"NEXT_FY_PLANNING_NOTES_TEMP__C","comment":null,"display_name":"next_fy_planning_notes_temp__c"},"NEXT_FY_TSP_TERRITORY_TEMP__C":{"type":"TEXT","index":318,"name":"NEXT_FY_TSP_TERRITORY_TEMP__C","comment":null,"display_name":"next_fy_tsp_territory_temp__c"},"NEXT_FY_USER_AREA_TEMP__C":{"type":"TEXT","index":319,"name":"NEXT_FY_USER_AREA_TEMP__C","comment":null,"display_name":"next_fy_user_area_temp__c"},"NEXT_FY_USER_GEO_TEMP__C":{"type":"TEXT","index":320,"name":"NEXT_FY_USER_GEO_TEMP__C","comment":null,"display_name":"next_fy_user_geo_temp__c"},"NEXT_FY_USER_REGION_TEMP__C":{"type":"TEXT","index":321,"name":"NEXT_FY_USER_REGION_TEMP__C","comment":null,"display_name":"next_fy_user_region_temp__c"},"NEXT_FY_USER_SEGMENT_TEMP__C":{"type":"TEXT","index":322,"name":"NEXT_FY_USER_SEGMENT_TEMP__C","comment":null,"display_name":"next_fy_user_segment_temp__c"},"NEXT_RENEWAL_DATE__C":{"type":"TIMESTAMP_TZ","index":323,"name":"NEXT_RENEWAL_DATE__C","comment":null,"display_name":"next_renewal_date__c"},"NFR_EXPIRATION__C":{"type":"TIMESTAMP_TZ","index":324,"name":"NFR_EXPIRATION__C","comment":null,"display_name":"nfr_expiration__c"},"NO_OF_NFR_LICENSES__C":{"type":"FLOAT","index":325,"name":"NO_OF_NFR_LICENSES__C","comment":null,"display_name":"no_of_nfr_licenses__c"},"NUMBEROFEMPLOYEES":{"type":"NUMBER","index":326,"name":"NUMBEROFEMPLOYEES","comment":null,"display_name":"numberofemployees"},"NUMBER_OF_EMPLOYEES_DATAFOX__C":{"type":"FLOAT","index":327,"name":"NUMBER_OF_EMPLOYEES_DATAFOX__C","comment":null,"display_name":"number_of_employees_datafox__c"},"NUMBER_OF_EMPLOYEES_DISCOVERORG__C":{"type":"FLOAT","index":328,"name":"NUMBER_OF_EMPLOYEES_DISCOVERORG__C","comment":null,"display_name":"number_of_employees_discoverorg__c"},"NUMBER_OF_EMPLOYEES_MANUAL_ADMIN__C":{"type":"FLOAT","index":329,"name":"NUMBER_OF_EMPLOYEES_MANUAL_ADMIN__C","comment":null,"display_name":"number_of_employees_manual_admin__c"},"NUMBER_OF_EMPLOYEES_MANUAL_SOURCE_ADMIN__C":{"type":"TEXT","index":330,"name":"NUMBER_OF_EMPLOYEES_MANUAL_SOURCE_ADMIN__C","comment":null,"display_name":"number_of_employees_manual_source_admin__c"},"NUMBER_OF_LICENSES_ALL_CHILD_ACCOUNTS__C":{"type":"FLOAT","index":331,"name":"NUMBER_OF_LICENSES_ALL_CHILD_ACCOUNTS__C","comment":null,"display_name":"number_of_licenses_all_child_accounts__c"},"NUMBER_OF_LICENSES_THIS_ACCOUNT__C":{"type":"FLOAT","index":332,"name":"NUMBER_OF_LICENSES_THIS_ACCOUNT__C","comment":null,"display_name":"number_of_licenses_this_account__c"},"NUMBER_OF_LICENSES_TOTAL__C":{"type":"FLOAT","index":333,"name":"NUMBER_OF_LICENSES_TOTAL__C","comment":null,"display_name":"number_of_licenses_total__c"},"NUMBER_OF_OPEN_OPPORTUNITIES__C":{"type":"FLOAT","index":334,"name":"NUMBER_OF_OPEN_OPPORTUNITIES__C","comment":null,"display_name":"number_of_open_opportunities__c"},"OF_CARR__C":{"type":"FLOAT","index":335,"name":"OF_CARR__C","comment":null,"display_name":"of_carr__c"},"OF_LICENSES__C":{"type":"FLOAT","index":336,"name":"OF_LICENSES__C","comment":null,"display_name":"of_licenses__c"},"OLDEST_OUTSTANDING_INVOICE_DATE__C":{"type":"TIMESTAMP_TZ","index":337,"name":"OLDEST_OUTSTANDING_INVOICE_DATE__C","comment":null,"display_name":"oldest_outstanding_invoice_date__c"},"ONE__C":{"type":"FLOAT","index":338,"name":"ONE__C","comment":null,"display_name":"one__c"},"OPT_OUT_FILE_LOCKING__C":{"type":"BOOLEAN","index":339,"name":"OPT_OUT_FILE_LOCKING__C","comment":null,"display_name":"opt_out_file_locking__c"},"OPT_OUT_GEO__C":{"type":"BOOLEAN","index":340,"name":"OPT_OUT_GEO__C","comment":null,"display_name":"opt_out_geo__c"},"OWNERID":{"type":"TEXT","index":341,"name":"OWNERID","comment":null,"display_name":"ownerid"},"OWNERSHIP":{"type":"TEXT","index":342,"name":"OWNERSHIP","comment":null,"display_name":"ownership"},"OWNER_PROFILE__C":{"type":"TEXT","index":343,"name":"OWNER_PROFILE__C","comment":null,"display_name":"owner_profile__c"},"PAGE_VIEWS__C":{"type":"FLOAT","index":344,"name":"PAGE_VIEWS__C","comment":null,"display_name":"page_views__c"},"PARENTID":{"type":"TEXT","index":345,"name":"PARENTID","comment":null,"display_name":"parentid"},"PARENT_ACCOUNT_NAMED__C":{"type":"BOOLEAN","index":346,"name":"PARENT_ACCOUNT_NAMED__C","comment":null,"display_name":"parent_account_named__c"},"PARENT_ACCOUNT_TYPE__C":{"type":"TEXT","index":347,"name":"PARENT_ACCOUNT_TYPE__C","comment":null,"display_name":"parent_account_type__c"},"PARTNERS_GITLAB_SERVICES_OFFERED__C":{"type":"TEXT","index":348,"name":"PARTNERS_GITLAB_SERVICES_OFFERED__C","comment":null,"display_name":"partners_gitlab_services_offered__c"},"PARTNERS_IS_ACTIVE_IN_PORTAL__C":{"type":"BOOLEAN","index":349,"name":"PARTNERS_IS_ACTIVE_IN_PORTAL__C","comment":null,"display_name":"partners_is_active_in_portal__c"},"PARTNERS_PARTNER_DISCOUNT__C":{"type":"TEXT","index":350,"name":"PARTNERS_PARTNER_DISCOUNT__C","comment":null,"display_name":"partners_partner_discount__c"},"PARTNERS_PARTNER_STATUS__C":{"type":"TEXT","index":351,"name":"PARTNERS_PARTNER_STATUS__C","comment":null,"display_name":"partners_partner_status__c"},"PARTNERS_PARTNER_TYPE__C":{"type":"TEXT","index":352,"name":"PARTNERS_PARTNER_TYPE__C","comment":null,"display_name":"partners_partner_type__c"},"PARTNERS_PUBLIC_SECTOR_PARTNER__C":{"type":"BOOLEAN","index":353,"name":"PARTNERS_PUBLIC_SECTOR_PARTNER__C","comment":null,"display_name":"partners_public_sector_partner__c"},"PARTNERS_SIGNED_CONTRACT_DATE__C":{"type":"TIMESTAMP_TZ","index":354,"name":"PARTNERS_SIGNED_CONTRACT_DATE__C","comment":null,"display_name":"partners_signed_contract_date__c"},"PARTNERS_SIGNED_CONTRACT_URL__C":{"type":"TEXT","index":355,"name":"PARTNERS_SIGNED_CONTRACT_URL__C","comment":null,"display_name":"partners_signed_contract_url__c"},"PARTNERS_TECHNOLOGY_SOLUTIONS__C":{"type":"TEXT","index":356,"name":"PARTNERS_TECHNOLOGY_SOLUTIONS__C","comment":null,"display_name":"partners_technology_solutions__c"},"PARTNER_ACCOUNT_IBAN_NUMBER__C":{"type":"TEXT","index":357,"name":"PARTNER_ACCOUNT_IBAN_NUMBER__C","comment":null,"display_name":"partner_account_iban_number__c"},"PARTNER_BANK_ADDRESS__C":{"type":"TEXT","index":358,"name":"PARTNER_BANK_ADDRESS__C","comment":null,"display_name":"partner_bank_address__c"},"PARTNER_BANK_NAME__C":{"type":"TEXT","index":359,"name":"PARTNER_BANK_NAME__C","comment":null,"display_name":"partner_bank_name__c"},"PARTNER_BENEFICIARY_NAME__C":{"type":"TEXT","index":360,"name":"PARTNER_BENEFICIARY_NAME__C","comment":null,"display_name":"partner_beneficiary_name__c"},"PARTNER_BUSINESS_MODEL_S__C":{"type":"TEXT","index":361,"name":"PARTNER_BUSINESS_MODEL_S__C","comment":null,"display_name":"partner_business_model_s__c"},"PARTNER_FOCUSED_MARKETS__C":{"type":"TEXT","index":362,"name":"PARTNER_FOCUSED_MARKETS__C","comment":null,"display_name":"partner_focused_markets__c"},"PARTNER_NAME_AND_TYPE__C":{"type":"TEXT","index":363,"name":"PARTNER_NAME_AND_TYPE__C","comment":null,"display_name":"partner_name_and_type__c"},"PARTNER_PROGRAM_STATUS__C":{"type":"TEXT","index":364,"name":"PARTNER_PROGRAM_STATUS__C","comment":null,"display_name":"partner_program_status__c"},"PARTNER_ROUTING__C":{"type":"TEXT","index":365,"name":"PARTNER_ROUTING__C","comment":null,"display_name":"partner_routing__c"},"PARTNER_TRACK__C":{"type":"TEXT","index":366,"name":"PARTNER_TRACK__C","comment":null,"display_name":"partner_track__c"},"PARTNER_VAT_TAX_ID__C":{"type":"TEXT","index":367,"name":"PARTNER_VAT_TAX_ID__C","comment":null,"display_name":"partner_vat_tax_id__c"},"PAYMENTTERMNUMERIC__C":{"type":"TEXT","index":368,"name":"PAYMENTTERMNUMERIC__C","comment":null,"display_name":"paymenttermnumeric__c"},"PENETRATION_RATE_BUCKET_LAM__C":{"type":"TEXT","index":369,"name":"PENETRATION_RATE_BUCKET_LAM__C","comment":null,"display_name":"penetration_rate_bucket_lam__c"},"PENETRATION_RATE_LAM__C":{"type":"FLOAT","index":370,"name":"PENETRATION_RATE_LAM__C","comment":null,"display_name":"penetration_rate_lam__c"},"PHONE":{"type":"TEXT","index":371,"name":"PHONE","comment":null,"display_name":"phone"},"PHOTOURL":{"type":"TEXT","index":372,"name":"PHOTOURL","comment":null,"display_name":"photourl"},"POTENTIAL_ARR_LAM__C":{"type":"FLOAT","index":373,"name":"POTENTIAL_ARR_LAM__C","comment":null,"display_name":"potential_arr_lam__c"},"POTENTIAL_CARR_THIS_ACCOUNT__C":{"type":"FLOAT","index":374,"name":"POTENTIAL_CARR_THIS_ACCOUNT__C","comment":null,"display_name":"potential_carr_this_account__c"},"POTENTIAL_EE_SUBSCRIPTION_AMOUNT__C":{"type":"FLOAT","index":375,"name":"POTENTIAL_EE_SUBSCRIPTION_AMOUNT__C","comment":null,"display_name":"potential_ee_subscription_amount__c"},"POTENTIAL_EE_USERS_TOTAL__C":{"type":"FLOAT","index":376,"name":"POTENTIAL_EE_USERS_TOTAL__C","comment":null,"display_name":"potential_ee_users_total__c"},"POTENTIAL_USERS_CHECK_LAM__C":{"type":"FLOAT","index":377,"name":"POTENTIAL_USERS_CHECK_LAM__C","comment":null,"display_name":"potential_users_check_lam__c"},"POTENTIAL_USERS_VERIFY__C":{"type":"FLOAT","index":378,"name":"POTENTIAL_USERS_VERIFY__C","comment":null,"display_name":"potential_users_verify__c"},"POTENTIAL_USERS__C":{"type":"FLOAT","index":379,"name":"POTENTIAL_USERS__C","comment":null,"display_name":"potential_users__c"},"PRESS_QUOTE_REFERENCE__C":{"type":"BOOLEAN","index":380,"name":"PRESS_QUOTE_REFERENCE__C","comment":null,"display_name":"press_quote_reference__c"},"PREVIOUS_ACCOUNT_NAME__C":{"type":"TEXT","index":381,"name":"PREVIOUS_ACCOUNT_NAME__C","comment":null,"display_name":"previous_account_name__c"},"PREVIOUS_ACCOUNT_OWNER_EMAIL__C":{"type":"TEXT","index":382,"name":"PREVIOUS_ACCOUNT_OWNER_EMAIL__C","comment":null,"display_name":"previous_account_owner_email__c"},"PREVIOUS_ACCOUNT_OWNER__C":{"type":"TEXT","index":383,"name":"PREVIOUS_ACCOUNT_OWNER__C","comment":null,"display_name":"previous_account_owner__c"},"PRIMARY_CONTACT_EMAIL__C":{"type":"TEXT","index":384,"name":"PRIMARY_CONTACT_EMAIL__C","comment":null,"display_name":"primary_contact_email__c"},"PRIMARY_CONTACT_FIRST_NAME__C":{"type":"TEXT","index":385,"name":"PRIMARY_CONTACT_FIRST_NAME__C","comment":null,"display_name":"primary_contact_first_name__c"},"PRIMARY_CONTACT_ID__C":{"type":"TEXT","index":386,"name":"PRIMARY_CONTACT_ID__C","comment":null,"display_name":"primary_contact_id__c"},"PRODUCTS_PURCHASED__C":{"type":"TEXT","index":387,"name":"PRODUCTS_PURCHASED__C","comment":null,"display_name":"products_purchased__c"},"PUBLIC_PRIVATE_UNIVERSITY__C":{"type":"TEXT","index":388,"name":"PUBLIC_PRIVATE_UNIVERSITY__C","comment":null,"display_name":"public_private_university__c"},"PUBLIC_SECTOR_PARTNER__C":{"type":"TEXT","index":389,"name":"PUBLIC_SECTOR_PARTNER__C","comment":null,"display_name":"public_sector_partner__c"},"PUB_SEC_OWNER_TEXT__C":{"type":"TEXT","index":390,"name":"PUB_SEC_OWNER_TEXT__C","comment":null,"display_name":"pub_sec_owner_text__c"},"PUB_SEC_OWNER__C":{"type":"TEXT","index":391,"name":"PUB_SEC_OWNER__C","comment":null,"display_name":"pub_sec_owner__c"},"Q3_IACV__C":{"type":"FLOAT","index":392,"name":"Q3_IACV__C","comment":null,"display_name":"q3_iacv__c"},"Q4_IACV__C":{"type":"FLOAT","index":393,"name":"Q4_IACV__C","comment":null,"display_name":"q4_iacv__c"},"QUOTE_REFERENCE__C":{"type":"BOOLEAN","index":394,"name":"QUOTE_REFERENCE__C","comment":null,"display_name":"quote_reference__c"},"RECORDTYPEID":{"type":"TEXT","index":395,"name":"RECORDTYPEID","comment":null,"display_name":"recordtypeid"},"REFERENCEABLE_CUSTOMER_NOTES__C":{"type":"TEXT","index":396,"name":"REFERENCEABLE_CUSTOMER_NOTES__C","comment":null,"display_name":"referenceable_customer_notes__c"},"REFERENCEABLE_CUSTOMER__C":{"type":"TEXT","index":397,"name":"REFERENCEABLE_CUSTOMER__C","comment":null,"display_name":"referenceable_customer__c"},"REFERENCE_TYPE__C":{"type":"TEXT","index":398,"name":"REFERENCE_TYPE__C","comment":null,"display_name":"reference_type__c"},"REGION_SUB_REGION__C":{"type":"TEXT","index":399,"name":"REGION_SUB_REGION__C","comment":null,"display_name":"region_sub_region__c"},"REGION__C":{"type":"TEXT","index":400,"name":"REGION__C","comment":null,"display_name":"region__c"},"RESELLER_DISCOUNT__C":{"type":"TEXT","index":401,"name":"RESELLER_DISCOUNT__C","comment":null,"display_name":"reseller_discount__c"},"RESELLER_PO_STATUS__C":{"type":"TEXT","index":402,"name":"RESELLER_PO_STATUS__C","comment":null,"display_name":"reseller_po_status__c"},"RESELLER_TYPE__C":{"type":"TEXT","index":403,"name":"RESELLER_TYPE__C","comment":null,"display_name":"reseller_type__c"},"REVENUE__C":{"type":"FLOAT","index":404,"name":"REVENUE__C","comment":null,"display_name":"revenue__c"},"SALES_REFERENCE__C":{"type":"BOOLEAN","index":405,"name":"SALES_REFERENCE__C","comment":null,"display_name":"sales_reference__c"},"SALES_SEGMENTATION_NEW__C":{"type":"TEXT","index":406,"name":"SALES_SEGMENTATION_NEW__C","comment":null,"display_name":"sales_segmentation_new__c"},"SA_TABOVER__MERGE_ACTION__C":{"type":"TEXT","index":407,"name":"SA_TABOVER__MERGE_ACTION__C","comment":null,"display_name":"sa_tabover__merge_action__c"},"SA_TEAM__C":{"type":"TEXT","index":408,"name":"SA_TEAM__C","comment":null,"display_name":"sa_team__c"},"SCORE__C":{"type":"TEXT","index":409,"name":"SCORE__C","comment":null,"display_name":"score__c"},"SDR_ACCOUNT_TEAM__C":{"type":"TEXT","index":410,"name":"SDR_ACCOUNT_TEAM__C","comment":null,"display_name":"sdr_account_team__c"},"SDR_ASSIGNED_ROLE__C":{"type":"TEXT","index":411,"name":"SDR_ASSIGNED_ROLE__C","comment":null,"display_name":"sdr_assigned_role__c"},"SDR_ASSIGNED__C":{"type":"TEXT","index":412,"name":"SDR_ASSIGNED__C","comment":null,"display_name":"sdr_assigned__c"},"SDR_TARGET_ACCOUNT__C":{"type":"BOOLEAN","index":413,"name":"SDR_TARGET_ACCOUNT__C","comment":null,"display_name":"sdr_target_account__c"},"SDR__C":{"type":"TEXT","index":414,"name":"SDR__C","comment":null,"display_name":"sdr__c"},"SESSIONS__C":{"type":"FLOAT","index":415,"name":"SESSIONS__C","comment":null,"display_name":"sessions__c"},"SHIPPINGCITY":{"type":"TEXT","index":416,"name":"SHIPPINGCITY","comment":null,"display_name":"shippingcity"},"SHIPPINGCOUNTRY":{"type":"TEXT","index":417,"name":"SHIPPINGCOUNTRY","comment":null,"display_name":"shippingcountry"},"SHIPPINGCOUNTRYCODE":{"type":"TEXT","index":418,"name":"SHIPPINGCOUNTRYCODE","comment":null,"display_name":"shippingcountrycode"},"SHIPPINGCOUNTRYCODE__C":{"type":"TEXT","index":419,"name":"SHIPPINGCOUNTRYCODE__C","comment":null,"display_name":"shippingcountrycode__c"},"SHIPPINGLATITUDE":{"type":"FLOAT","index":420,"name":"SHIPPINGLATITUDE","comment":null,"display_name":"shippinglatitude"},"SHIPPINGLONGITUDE":{"type":"FLOAT","index":421,"name":"SHIPPINGLONGITUDE","comment":null,"display_name":"shippinglongitude"},"SHIPPINGPOSTALCODE":{"type":"TEXT","index":422,"name":"SHIPPINGPOSTALCODE","comment":null,"display_name":"shippingpostalcode"},"SHIPPINGSTATE":{"type":"TEXT","index":423,"name":"SHIPPINGSTATE","comment":null,"display_name":"shippingstate"},"SHIPPINGSTATECODE":{"type":"TEXT","index":424,"name":"SHIPPINGSTATECODE","comment":null,"display_name":"shippingstatecode"},"SHIPPINGSTREET":{"type":"TEXT","index":425,"name":"SHIPPINGSTREET","comment":null,"display_name":"shippingstreet"},"SIC":{"type":"TEXT","index":426,"name":"SIC","comment":null,"display_name":"sic"},"SIG_REFERENCE__C":{"type":"BOOLEAN","index":427,"name":"SIG_REFERENCE__C","comment":null,"display_name":"sig_reference__c"},"SOLUTIONS_ARCHITECT_LOOKUP__C":{"type":"TEXT","index":428,"name":"SOLUTIONS_ARCHITECT_LOOKUP__C","comment":null,"display_name":"solutions_architect_lookup__c"},"SPECIAL_TERMS__C":{"type":"TEXT","index":429,"name":"SPECIAL_TERMS__C","comment":null,"display_name":"special_terms__c"},"STRATEGIC__C":{"type":"BOOLEAN","index":430,"name":"STRATEGIC__C","comment":null,"display_name":"strategic__c"},"ST_CONFIGURE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":431,"name":"ST_CONFIGURE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_configure_appetite_for_replacement__c"},"ST_CONFIGURE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":432,"name":"ST_CONFIGURE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_configure_contract_end_date__c"},"ST_CONFIGURE_TECH__C":{"type":"TEXT","index":433,"name":"ST_CONFIGURE_TECH__C","comment":null,"display_name":"st_configure_tech__c"},"ST_CREATE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":434,"name":"ST_CREATE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_create_appetite_for_replacement__c"},"ST_CREATE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":435,"name":"ST_CREATE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_create_contract_end_date__c"},"ST_CREATE_TECH__C":{"type":"TEXT","index":436,"name":"ST_CREATE_TECH__C","comment":null,"display_name":"st_create_tech__c"},"ST_DEFEND_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":437,"name":"ST_DEFEND_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_defend_appetite_for_replacement__c"},"ST_DEFEND_TECH__C":{"type":"TEXT","index":438,"name":"ST_DEFEND_TECH__C","comment":null,"display_name":"st_defend_tech__c"},"ST_MANAGE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":439,"name":"ST_MANAGE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_manage_appetite_for_replacement__c"},"ST_MANAGE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":440,"name":"ST_MANAGE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_manage_contract_end_date__c"},"ST_MANAGE_TECH__C":{"type":"TEXT","index":441,"name":"ST_MANAGE_TECH__C","comment":null,"display_name":"st_manage_tech__c"},"ST_MONITOR_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":442,"name":"ST_MONITOR_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_monitor_appetite_for_replacement__c"},"ST_MONITOR_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":443,"name":"ST_MONITOR_CONTRACT_END_DATE__C","comment":null,"display_name":"st_monitor_contract_end_date__c"},"ST_MONITOR_TECH__C":{"type":"TEXT","index":444,"name":"ST_MONITOR_TECH__C","comment":null,"display_name":"st_monitor_tech__c"},"ST_PACKAGE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":445,"name":"ST_PACKAGE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_package_appetite_for_replacement__c"},"ST_PACKAGE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":446,"name":"ST_PACKAGE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_package_contract_end_date__c"},"ST_PACKAGE_TECH__C":{"type":"TEXT","index":447,"name":"ST_PACKAGE_TECH__C","comment":null,"display_name":"st_package_tech__c"},"ST_PLAN_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":448,"name":"ST_PLAN_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_plan_appetite_for_replacement__c"},"ST_PLAN_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":449,"name":"ST_PLAN_CONTRACT_END_DATE__C","comment":null,"display_name":"st_plan_contract_end_date__c"},"ST_PLAN_TECH__C":{"type":"TEXT","index":450,"name":"ST_PLAN_TECH__C","comment":null,"display_name":"st_plan_tech__c"},"ST_RELEASE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":451,"name":"ST_RELEASE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_release_appetite_for_replacement__c"},"ST_RELEASE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":452,"name":"ST_RELEASE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_release_contract_end_date__c"},"ST_RELEASE_TECH__C":{"type":"TEXT","index":453,"name":"ST_RELEASE_TECH__C","comment":null,"display_name":"st_release_tech__c"},"ST_SECURE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":454,"name":"ST_SECURE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_secure_appetite_for_replacement__c"},"ST_SECURE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":455,"name":"ST_SECURE_CONTRACT_END_DATE__C","comment":null,"display_name":"st_secure_contract_end_date__c"},"ST_SECURE_TECH__C":{"type":"TEXT","index":456,"name":"ST_SECURE_TECH__C","comment":null,"display_name":"st_secure_tech__c"},"ST_VERIFY_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":457,"name":"ST_VERIFY_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"st_verify_appetite_for_replacement__c"},"ST_VERIFY_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":458,"name":"ST_VERIFY_CONTRACT_END_DATE__C","comment":null,"display_name":"st_verify_contract_end_date__c"},"ST_VERIFY_TECH__C":{"type":"TEXT","index":459,"name":"ST_VERIFY_TECH__C","comment":null,"display_name":"st_verify_tech__c"},"SUBSCRIPTION_AMOUNT__C":{"type":"FLOAT","index":460,"name":"SUBSCRIPTION_AMOUNT__C","comment":null,"display_name":"subscription_amount__c"},"SUB_INDUSTRY__C":{"type":"TEXT","index":461,"name":"SUB_INDUSTRY__C","comment":null,"display_name":"sub_industry__c"},"SUB_REGION__C":{"type":"TEXT","index":462,"name":"SUB_REGION__C","comment":null,"display_name":"sub_region__c"},"SUM_OF_OPEN_RENEWAL_OPPORTUNITIES__C":{"type":"FLOAT","index":463,"name":"SUM_OF_OPEN_RENEWAL_OPPORTUNITIES__C","comment":null,"display_name":"sum_of_open_renewal_opportunities__c"},"SUM_OPEN_NEW_ADD_ON_IACV_OPPORTUNITIES__C":{"type":"FLOAT","index":464,"name":"SUM_OPEN_NEW_ADD_ON_IACV_OPPORTUNITIES__C","comment":null,"display_name":"sum_open_new_add_on_iacv_opportunities__c"},"SUPPORT_HOLD__C":{"type":"BOOLEAN","index":465,"name":"SUPPORT_HOLD__C","comment":null,"display_name":"support_hold__c"},"SUPPORT_LEVEL_DEPRECATED__C":{"type":"FLOAT","index":466,"name":"SUPPORT_LEVEL_DEPRECATED__C","comment":null,"display_name":"support_level_deprecated__c"},"SUPPORT_LEVEL_NEW__C":{"type":"TEXT","index":467,"name":"SUPPORT_LEVEL_NEW__C","comment":null,"display_name":"support_level_new__c"},"SUPPORT_LEVEL__C":{"type":"TEXT","index":468,"name":"SUPPORT_LEVEL__C","comment":null,"display_name":"support_level__c"},"SYSTEMMODSTAMP":{"type":"TIMESTAMP_TZ","index":469,"name":"SYSTEMMODSTAMP","comment":null,"display_name":"systemmodstamp"},"TAM_PRIORITIZATION__C":{"type":"TEXT","index":470,"name":"TAM_PRIORITIZATION__C","comment":null,"display_name":"tam_prioritization__c"},"TAM_TEAM__C":{"type":"TEXT","index":471,"name":"TAM_TEAM__C","comment":null,"display_name":"tam_team__c"},"TECHNICAL_ACCOUNT_MANAGER_DATE__C":{"type":"TIMESTAMP_TZ","index":472,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE__C","comment":null,"display_name":"technical_account_manager_date__c"},"TECHNICAL_ACCOUNT_MANAGER_LU__C":{"type":"TEXT","index":473,"name":"TECHNICAL_ACCOUNT_MANAGER_LU__C","comment":null,"display_name":"technical_account_manager_lu__c"},"TECHNICAL_ACCOUNT_MANAGER_NAME__C":{"type":"TEXT","index":474,"name":"TECHNICAL_ACCOUNT_MANAGER_NAME__C","comment":null,"display_name":"technical_account_manager_name__c"},"TECHNOLOGY_STACK__C":{"type":"TEXT","index":475,"name":"TECHNOLOGY_STACK__C","comment":null,"display_name":"technology_stack__c"},"TEDD_EMPLOYEES__C":{"type":"FLOAT","index":476,"name":"TEDD_EMPLOYEES__C","comment":null,"display_name":"tedd_employees__c"},"TEMPORARY_NAMED_TERRITORY_FIELD__C":{"type":"TEXT","index":477,"name":"TEMPORARY_NAMED_TERRITORY_FIELD__C","comment":null,"display_name":"temporary_named_territory_field__c"},"TERRITORIES_COVERED__C":{"type":"TEXT","index":478,"name":"TERRITORIES_COVERED__C","comment":null,"display_name":"territories_covered__c"},"TERRITORY__C":{"type":"TEXT","index":479,"name":"TERRITORY__C","comment":null,"display_name":"territory__c"},"TESTIMONIAL_REFERENCE__C":{"type":"BOOLEAN","index":480,"name":"TESTIMONIAL_REFERENCE__C","comment":null,"display_name":"testimonial_reference__c"},"TICKERSYMBOL":{"type":"TEXT","index":481,"name":"TICKERSYMBOL","comment":null,"display_name":"tickersymbol"},"TOP_LIST__C":{"type":"TEXT","index":482,"name":"TOP_LIST__C","comment":null,"display_name":"top_list__c"},"TOP_RENEWAL__C":{"type":"BOOLEAN","index":483,"name":"TOP_RENEWAL__C","comment":null,"display_name":"top_renewal__c"},"TOTAL_INVOICED_OUTSTANDING__C":{"type":"FLOAT","index":484,"name":"TOTAL_INVOICED_OUTSTANDING__C","comment":null,"display_name":"total_invoiced_outstanding__c"},"TOTAL_INVOICED_PAID__C":{"type":"FLOAT","index":485,"name":"TOTAL_INVOICED_PAID__C","comment":null,"display_name":"total_invoiced_paid__c"},"TOTAL_INVOICED__C":{"type":"FLOAT","index":486,"name":"TOTAL_INVOICED__C","comment":null,"display_name":"total_invoiced__c"},"TRANSFER_DATE__C":{"type":"TIMESTAMP_TZ","index":487,"name":"TRANSFER_DATE__C","comment":null,"display_name":"transfer_date__c"},"TRENDING_OFFSITE_INTENT__C":{"type":"BOOLEAN","index":488,"name":"TRENDING_OFFSITE_INTENT__C","comment":null,"display_name":"trending_offsite_intent__c"},"TRENDING_ONSITE_ENGAGEMENT__C":{"type":"BOOLEAN","index":489,"name":"TRENDING_ONSITE_ENGAGEMENT__C","comment":null,"display_name":"trending_onsite_engagement__c"},"TRIGGER_WORKFLOW__C":{"type":"BOOLEAN","index":490,"name":"TRIGGER_WORKFLOW__C","comment":null,"display_name":"trigger_workflow__c"},"TSP_LAST_CHANGE_DATE__C":{"type":"TIMESTAMP_TZ","index":491,"name":"TSP_LAST_CHANGE_DATE__C","comment":null,"display_name":"tsp_last_change_date__c"},"TSP_MANAGER_DIFFERENCE__C":{"type":"BOOLEAN","index":492,"name":"TSP_MANAGER_DIFFERENCE__C","comment":null,"display_name":"tsp_manager_difference__c"},"TSP_OVERRIDE_STATUS__C":{"type":"TEXT","index":493,"name":"TSP_OVERRIDE_STATUS__C","comment":null,"display_name":"tsp_override_status__c"},"TSP_UNIQUE_TERRITORY_NAME__C":{"type":"TEXT","index":494,"name":"TSP_UNIQUE_TERRITORY_NAME__C","comment":null,"display_name":"tsp_unique_territory_name__c"},"TYPE":{"type":"TEXT","index":495,"name":"TYPE","comment":null,"display_name":"type"},"TYPE_AMOUNT_CLOSE_DATE__C":{"type":"TEXT","index":496,"name":"TYPE_AMOUNT_CLOSE_DATE__C","comment":null,"display_name":"type_amount_close_date__c"},"ULTIMATE_PARENT_ACCOUNT_BILLING_COUNTRY__C":{"type":"TEXT","index":497,"name":"ULTIMATE_PARENT_ACCOUNT_BILLING_COUNTRY__C","comment":null,"display_name":"ultimate_parent_account_billing_country__c"},"ULTIMATE_PARENT_ACCOUNT_ID__C":{"type":"TEXT","index":498,"name":"ULTIMATE_PARENT_ACCOUNT_ID__C","comment":null,"display_name":"ultimate_parent_account_id__c"},"ULTIMATE_PARENT_ACCOUNT_TEXT__C":{"type":"TEXT","index":499,"name":"ULTIMATE_PARENT_ACCOUNT_TEXT__C","comment":null,"display_name":"ultimate_parent_account_text__c"},"ULTIMATE_PARENT_ACCOUNT__C":{"type":"TEXT","index":500,"name":"ULTIMATE_PARENT_ACCOUNT__C","comment":null,"display_name":"ultimate_parent_account__c"},"ULTIMATE_PARENT_SALES_SEGMENT_EMPLOYEES__C":{"type":"TEXT","index":501,"name":"ULTIMATE_PARENT_SALES_SEGMENT_EMPLOYEES__C","comment":null,"display_name":"ultimate_parent_sales_segment_employees__c"},"UPA_ACCOUNT_TERRITORY__C":{"type":"TEXT","index":502,"name":"UPA_ACCOUNT_TERRITORY__C","comment":null,"display_name":"upa_account_territory__c"},"UPA_IS_HOLDING_COMPANY__C":{"type":"BOOLEAN","index":503,"name":"UPA_IS_HOLDING_COMPANY__C","comment":null,"display_name":"upa_is_holding_company__c"},"USAGE_STATISTICS_ACTIVE_USER_COUNT__C":{"type":"FLOAT","index":504,"name":"USAGE_STATISTICS_ACTIVE_USER_COUNT__C","comment":null,"display_name":"usage_statistics_active_user_count__c"},"USAGE_STATISTICS_SUM_OF_LICENSE_USER_C__C":{"type":"FLOAT","index":505,"name":"USAGE_STATISTICS_SUM_OF_LICENSE_USER_C__C","comment":null,"display_name":"usage_statistics_sum_of_license_user_c__c"},"USER_IS_ACCOUNT_OWNER__C":{"type":"BOOLEAN","index":506,"name":"USER_IS_ACCOUNT_OWNER__C","comment":null,"display_name":"user_is_account_owner__c"},"USING_CE__C":{"type":"BOOLEAN","index":507,"name":"USING_CE__C","comment":null,"display_name":"using_ce__c"},"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS__C":{"type":"FLOAT","index":508,"name":"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__closed_lost_registrations__c"},"VARTOPIADRS__CLOSED_WON_REGISTRATIONS__C":{"type":"FLOAT","index":509,"name":"VARTOPIADRS__CLOSED_WON_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__closed_won_registrations__c"},"VARTOPIADRS__CREATED_FROM_REGISTRATION__C":{"type":"BOOLEAN","index":510,"name":"VARTOPIADRS__CREATED_FROM_REGISTRATION__C","comment":null,"display_name":"vartopiadrs__created_from_registration__c"},"VARTOPIADRS__DEAL_REG_PROGRAM_NAME__C":{"type":"TEXT","index":511,"name":"VARTOPIADRS__DEAL_REG_PROGRAM_NAME__C","comment":null,"display_name":"vartopiadrs__deal_reg_program_name__c"},"VARTOPIADRS__DENIED_REGISTRATIONS__C":{"type":"FLOAT","index":512,"name":"VARTOPIADRS__DENIED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__denied_registrations__c"},"VARTOPIADRS__EXPIRED_REGISTRATIONS__C":{"type":"FLOAT","index":513,"name":"VARTOPIADRS__EXPIRED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__expired_registrations__c"},"VARTOPIADRS__NUMBER_OF_ACTIVE_REGISTRATIONS__C":{"type":"FLOAT","index":514,"name":"VARTOPIADRS__NUMBER_OF_ACTIVE_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_active_registrations__c"},"VARTOPIADRS__NUMBER_OF_APPROVED_REGISTRATIONS__C":{"type":"FLOAT","index":515,"name":"VARTOPIADRS__NUMBER_OF_APPROVED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_approved_registrations__c"},"VARTOPIADRS__NUMBER_OF_CLOSED_LOST_REGISTRATIONS__C":{"type":"FLOAT","index":516,"name":"VARTOPIADRS__NUMBER_OF_CLOSED_LOST_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_closed_lost_registrations__c"},"VARTOPIADRS__NUMBER_OF_CLOSED_WON_REGISTRATIONS__C":{"type":"FLOAT","index":517,"name":"VARTOPIADRS__NUMBER_OF_CLOSED_WON_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_closed_won_registrations__c"},"VARTOPIADRS__NUMBER_OF_DENIED_REGISTRATIONS__C":{"type":"FLOAT","index":518,"name":"VARTOPIADRS__NUMBER_OF_DENIED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_denied_registrations__c"},"VARTOPIADRS__NUMBER_OF_EXPIRED_REGISTRATIONS__C":{"type":"FLOAT","index":519,"name":"VARTOPIADRS__NUMBER_OF_EXPIRED_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__number_of_expired_registrations__c"},"VARTOPIADRS__PERCENTAGE_OF_REGISTRATIONS_APPROVED__C":{"type":"FLOAT","index":520,"name":"VARTOPIADRS__PERCENTAGE_OF_REGISTRATIONS_APPROVED__C","comment":null,"display_name":"vartopiadrs__percentage_of_registrations_approved__c"},"VARTOPIADRS__RECENT_REGISTRATION_DATE__C":{"type":"TIMESTAMP_TZ","index":521,"name":"VARTOPIADRS__RECENT_REGISTRATION_DATE__C","comment":null,"display_name":"vartopiadrs__recent_registration_date__c"},"VARTOPIADRS__TOTAL_NUMBER_OF_REGISTRATIONS__C":{"type":"FLOAT","index":522,"name":"VARTOPIADRS__TOTAL_NUMBER_OF_REGISTRATIONS__C","comment":null,"display_name":"vartopiadrs__total_number_of_registrations__c"},"VARTOPIADRS__VARTOPIAPARTNERTRANSACTIONID__C":{"type":"TEXT","index":523,"name":"VARTOPIADRS__VARTOPIAPARTNERTRANSACTIONID__C","comment":null,"display_name":"vartopiadrs__vartopiapartnertransactionid__c"},"VARTOPIADRS__VARTOPIA_ACCESS__C":{"type":"TEXT","index":524,"name":"VARTOPIADRS__VARTOPIA_ACCESS__C","comment":null,"display_name":"vartopiadrs__vartopia_access__c"},"VAT_ID__C":{"type":"TEXT","index":525,"name":"VAT_ID__C","comment":null,"display_name":"vat_id__c"},"WEBCAST_SPEAKER_REFERENCE__C":{"type":"BOOLEAN","index":526,"name":"WEBCAST_SPEAKER_REFERENCE__C","comment":null,"display_name":"webcast_speaker_reference__c"},"WEBSITE":{"type":"TEXT","index":527,"name":"WEBSITE","comment":null,"display_name":"website"},"WEB_DIRECT_COMPANY_SIZE__C":{"type":"TEXT","index":528,"name":"WEB_DIRECT_COMPANY_SIZE__C","comment":null,"display_name":"web_direct_company_size__c"},"WEB_PORTAL_SIGN_UP_COMPANY_SIZE__C":{"type":"TEXT","index":529,"name":"WEB_PORTAL_SIGN_UP_COMPANY_SIZE__C","comment":null,"display_name":"web_portal_sign_up_company_size__c"},"X_ADMIN_IDENTIFIER__C":{"type":"TEXT","index":530,"name":"X_ADMIN_IDENTIFIER__C","comment":null,"display_name":"x_admin_identifier__c"},"ZENDESK_ORGANIZATION_ID__C":{"type":"TEXT","index":531,"name":"ZENDESK_ORGANIZATION_ID__C","comment":null,"display_name":"zendesk_organization_id__c"},"ZI_ACCOUNT_NAME__C":{"type":"TEXT","index":532,"name":"ZI_ACCOUNT_NAME__C","comment":null,"display_name":"zi_account_name__c"},"ZI_CITY__C":{"type":"TEXT","index":533,"name":"ZI_CITY__C","comment":null,"display_name":"zi_city__c"},"ZI_COMPANY_ISDEFUNCT__C":{"type":"TEXT","index":534,"name":"ZI_COMPANY_ISDEFUNCT__C","comment":null,"display_name":"zi_company_isdefunct__c"},"ZI_COMPANY_LINKEDIN_URL__C":{"type":"TEXT","index":535,"name":"ZI_COMPANY_LINKEDIN_URL__C","comment":null,"display_name":"zi_company_linkedin_url__c"},"ZI_COMPANY_OTHER_DOMAINS__C":{"type":"TEXT","index":536,"name":"ZI_COMPANY_OTHER_DOMAINS__C","comment":null,"display_name":"zi_company_other_domains__c"},"ZI_COUNTRY__C":{"type":"TEXT","index":537,"name":"ZI_COUNTRY__C","comment":null,"display_name":"zi_country__c"},"ZI_DESCRIPTION__C":{"type":"TEXT","index":538,"name":"ZI_DESCRIPTION__C","comment":null,"display_name":"zi_description__c"},"ZI_EMPLOYEES__C":{"type":"FLOAT","index":539,"name":"ZI_EMPLOYEES__C","comment":null,"display_name":"zi_employees__c"},"ZI_FAX__C":{"type":"TEXT","index":540,"name":"ZI_FAX__C","comment":null,"display_name":"zi_fax__c"},"ZI_INDUSTRY__C":{"type":"TEXT","index":541,"name":"ZI_INDUSTRY__C","comment":null,"display_name":"zi_industry__c"},"ZI_NAICS_CODE__C":{"type":"TEXT","index":542,"name":"ZI_NAICS_CODE__C","comment":null,"display_name":"zi_naics_code__c"},"ZI_NUMBER_OF_DEVELOPERS__C":{"type":"FLOAT","index":543,"name":"ZI_NUMBER_OF_DEVELOPERS__C","comment":null,"display_name":"zi_number_of_developers__c"},"ZI_PARENT_COMPANY_NAME__C":{"type":"TEXT","index":544,"name":"ZI_PARENT_COMPANY_NAME__C","comment":null,"display_name":"zi_parent_company_name__c"},"ZI_PARENT_COMPANY_ZOOMINFO_ID__C":{"type":"TEXT","index":545,"name":"ZI_PARENT_COMPANY_ZOOMINFO_ID__C","comment":null,"display_name":"zi_parent_company_zoominfo_id__c"},"ZI_PHONE__C":{"type":"TEXT","index":546,"name":"ZI_PHONE__C","comment":null,"display_name":"zi_phone__c"},"ZI_PRODUCTS_AND_SERVICES__C":{"type":"TEXT","index":547,"name":"ZI_PRODUCTS_AND_SERVICES__C","comment":null,"display_name":"zi_products_and_services__c"},"ZI_REVENUE__C":{"type":"FLOAT","index":548,"name":"ZI_REVENUE__C","comment":null,"display_name":"zi_revenue__c"},"ZI_SIC_CODE__C":{"type":"TEXT","index":549,"name":"ZI_SIC_CODE__C","comment":null,"display_name":"zi_sic_code__c"},"ZI_STATE_PROVINCE__C":{"type":"TEXT","index":550,"name":"ZI_STATE_PROVINCE__C","comment":null,"display_name":"zi_state_province__c"},"ZI_STREET__C":{"type":"TEXT","index":551,"name":"ZI_STREET__C","comment":null,"display_name":"zi_street__c"},"ZI_TECHNOLOGIES__C":{"type":"TEXT","index":552,"name":"ZI_TECHNOLOGIES__C","comment":null,"display_name":"zi_technologies__c"},"ZI_TICKER_SYMBOL__C":{"type":"TEXT","index":553,"name":"ZI_TICKER_SYMBOL__C","comment":null,"display_name":"zi_ticker_symbol__c"},"ZI_TOTAL_FUNDING__C":{"type":"TEXT","index":554,"name":"ZI_TOTAL_FUNDING__C","comment":null,"display_name":"zi_total_funding__c"},"ZI_ULTIMATE_PARENT_COMPANY_NAME__C":{"type":"TEXT","index":555,"name":"ZI_ULTIMATE_PARENT_COMPANY_NAME__C","comment":null,"display_name":"zi_ultimate_parent_company_name__c"},"ZI_ULTIMATE_PARENT_COMPANY_ZOOMINFO_ID__C":{"type":"TEXT","index":556,"name":"ZI_ULTIMATE_PARENT_COMPANY_ZOOMINFO_ID__C","comment":null,"display_name":"zi_ultimate_parent_company_zoominfo_id__c"},"ZI_WEBSITE__C":{"type":"TEXT","index":557,"name":"ZI_WEBSITE__C","comment":null,"display_name":"zi_website__c"},"ZI_ZIP_POSTAL_CODE__C":{"type":"TEXT","index":558,"name":"ZI_ZIP_POSTAL_CODE__C","comment":null,"display_name":"zi_zip_postal_code__c"},"_SDC_BATCHED_AT":{"type":"TIMESTAMP_TZ","index":559,"name":"_SDC_BATCHED_AT","comment":null,"display_name":"_sdc_batched_at"},"_SDC_EXTRACTED_AT":{"type":"TIMESTAMP_TZ","index":560,"name":"_SDC_EXTRACTED_AT","comment":null,"display_name":"_sdc_extracted_at"},"_SDC_RECEIVED_AT":{"type":"TIMESTAMP_TZ","index":561,"name":"_SDC_RECEIVED_AT","comment":null,"display_name":"_sdc_received_at"},"_SDC_SEQUENCE":{"type":"NUMBER","index":562,"name":"_SDC_SEQUENCE","comment":null,"display_name":"_sdc_sequence"},"_SDC_TABLE_VERSION":{"type":"NUMBER","index":563,"name":"_SDC_TABLE_VERSION","comment":null,"display_name":"_sdc_table_version"},"ENGAGIO__QUALIFICATION_SCORE__C":{"type":"FLOAT","index":564,"name":"ENGAGIO__QUALIFICATION_SCORE__C","comment":null,"display_name":"engagio__qualification_score__c"},"ENGAGIO__PIPELINE_PREDICT_SCORE__C":{"type":"FLOAT","index":565,"name":"ENGAGIO__PIPELINE_PREDICT_SCORE__C","comment":null,"display_name":"engagio__pipeline_predict_score__c"},"ENGAGIO__MQADATE__C":{"type":"TIMESTAMP_TZ","index":566,"name":"ENGAGIO__MQADATE__C","comment":null,"display_name":"engagio__mqadate__c"},"ENGAGIO__WEBVISITSLAST3MONTHS__C":{"type":"FLOAT","index":567,"name":"ENGAGIO__WEBVISITSLAST3MONTHS__C","comment":null,"display_name":"engagio__webvisitslast3months__c"},"ENGAGIO__TOPURLS__C":{"type":"TEXT","index":568,"name":"ENGAGIO__TOPURLS__C","comment":null,"display_name":"engagio__topurls__c"},"ENGAGIO__INTENTMINUTESLAST30DAYS__C":{"type":"FLOAT","index":569,"name":"ENGAGIO__INTENTMINUTESLAST30DAYS__C","comment":null,"display_name":"engagio__intentminuteslast30days__c"},"ALLIANCES_DISCOUNT__C":{"type":"FLOAT","index":570,"name":"ALLIANCES_DISCOUNT__C","comment":null,"display_name":"alliances_discount__c"},"LAST_SALE_VIA_PARTNER__C":{"type":"BOOLEAN","index":571,"name":"LAST_SALE_VIA_PARTNER__C","comment":null,"display_name":"last_sale_via_partner__c"},"FY22_ON_BRONZE_STARTER__C":{"type":"BOOLEAN","index":572,"name":"FY22_ON_BRONZE_STARTER__C","comment":null,"display_name":"fy22_on_bronze_starter__c"},"HOLD_OVER_NEXT_APPROVED_OWNER__C":{"type":"TEXT","index":573,"name":"HOLD_OVER_NEXT_APPROVED_OWNER__C","comment":null,"display_name":"hold_over_next_approved_owner__c"},"JIHU_ACCOUNT__C":{"type":"BOOLEAN","index":574,"name":"JIHU_ACCOUNT__C","comment":null,"display_name":"jihu_account__c"},"FY22_NEW_LOGO_TARGET_LIST__C":{"type":"BOOLEAN","index":575,"name":"FY22_NEW_LOGO_TARGET_LIST__C","comment":null,"display_name":"fy22_new_logo_target_list__c"},"EOA_SENTIMENT__C":{"type":"TEXT","index":576,"name":"EOA_SENTIMENT__C","comment":null,"display_name":"eoa_sentiment__c"},"CI_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":577,"name":"CI_CONTRACT_END_DATE__C","comment":null,"display_name":"ci_contract_end_date__c"},"CD_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":578,"name":"CD_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"cd_appetite_for_replacement__c"},"GITOPS_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":579,"name":"GITOPS_CONTRACT_END_DATE__C","comment":null,"display_name":"gitops_contract_end_date__c"},"CD_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":580,"name":"CD_CONTRACT_END_DATE__C","comment":null,"display_name":"cd_contract_end_date__c"},"AGILE_MGMT_APPETITIE_FOR_REPLACMENT__C":{"type":"TEXT","index":581,"name":"AGILE_MGMT_APPETITIE_FOR_REPLACMENT__C","comment":null,"display_name":"agile_mgmt_appetitie_for_replacment__c"},"AGILE_MANAGEMENT_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":582,"name":"AGILE_MANAGEMENT_CONTRACT_END_DATE__C","comment":null,"display_name":"agile_management_contract_end_date__c"},"GITOPS_TECH__C":{"type":"TEXT","index":583,"name":"GITOPS_TECH__C","comment":null,"display_name":"gitops_tech__c"},"GITOPS_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":584,"name":"GITOPS_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"gitops_appetite_for_replacement__c"},"AGILE_MANAGEMENT_TECH__C":{"type":"TEXT","index":585,"name":"AGILE_MANAGEMENT_TECH__C","comment":null,"display_name":"agile_management_tech__c"},"CD_TECH__C":{"type":"TEXT","index":586,"name":"CD_TECH__C","comment":null,"display_name":"cd_tech__c"},"DEVOPS_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":587,"name":"DEVOPS_CONTRACT_END_DATE__C","comment":null,"display_name":"devops_contract_end_date__c"},"DEVOPS_TECH__C":{"type":"TEXT","index":588,"name":"DEVOPS_TECH__C","comment":null,"display_name":"devops_tech__c"},"CI_TECH__C":{"type":"TEXT","index":589,"name":"CI_TECH__C","comment":null,"display_name":"ci_tech__c"},"DEVOPS_PLATFORM_APPETITE_REPLACEMENT__C":{"type":"TEXT","index":590,"name":"DEVOPS_PLATFORM_APPETITE_REPLACEMENT__C","comment":null,"display_name":"devops_platform_appetite_replacement__c"},"CI_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":591,"name":"CI_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"ci_appetite_for_replacement__c"},"CLOUD_NATIVE_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":592,"name":"CLOUD_NATIVE_CONTRACT_END_DATE__C","comment":null,"display_name":"cloud_native_contract_end_date__c"},"DEVSECOPS_TECH__C":{"type":"TEXT","index":593,"name":"DEVSECOPS_TECH__C","comment":null,"display_name":"devsecops_tech__c"},"DEVSECOPS_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":594,"name":"DEVSECOPS_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"devsecops_appetite_for_replacement__c"},"CLOUD_NATIVE_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":595,"name":"CLOUD_NATIVE_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"cloud_native_appetite_for_replacement__c"},"CLOUD_NATIVE_TECH__C":{"type":"TEXT","index":596,"name":"CLOUD_NATIVE_TECH__C","comment":null,"display_name":"cloud_native_tech__c"},"LAST_PHD_REVIEW__C":{"type":"TIMESTAMP_TZ","index":597,"name":"LAST_PHD_REVIEW__C","comment":null,"display_name":"last_phd_review__c"},"LAST_TSP_UPDATE_REASON__C":{"type":"TEXT","index":598,"name":"LAST_TSP_UPDATE_REASON__C","comment":null,"display_name":"last_tsp_update_reason__c"},"COMMUNITY_PROGRAM_OWNER__C":{"type":"TEXT","index":599,"name":"COMMUNITY_PROGRAM_OWNER__C","comment":null,"display_name":"community_program_owner__c"},"TEMP_WEBSTORE_RENEWAL_ISSUE_STATUS__C":{"type":"TEXT","index":600,"name":"TEMP_WEBSTORE_RENEWAL_ISSUE_STATUS__C","comment":null,"display_name":"temp_webstore_renewal_issue_status__c"},"FIRST_ORDER_OPPORTUNITY__C":{"type":"TEXT","index":601,"name":"FIRST_ORDER_OPPORTUNITY__C","comment":null,"display_name":"first_order_opportunity__c"},"SINGLE_TRAINING_COMPLETED__C":{"type":"BOOLEAN","index":602,"name":"SINGLE_TRAINING_COMPLETED__C","comment":null,"display_name":"single_training_completed__c"},"VC_C_TECH__C":{"type":"TEXT","index":603,"name":"VC_C_TECH__C","comment":null,"display_name":"vc_c_tech__c"},"VC_C_APPETITE_FOR_REPLACEMENT__C":{"type":"TEXT","index":604,"name":"VC_C_APPETITE_FOR_REPLACEMENT__C","comment":null,"display_name":"vc_c_appetite_for_replacement__c"},"DEVSECOPS_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":605,"name":"DEVSECOPS_CONTRACT_END_DATE__C","comment":null,"display_name":"devsecops_contract_end_date__c"},"VC_C_CONTRACT_END_DATE__C":{"type":"TIMESTAMP_TZ","index":606,"name":"VC_C_CONTRACT_END_DATE__C","comment":null,"display_name":"vc_c_contract_end_date__c"},"INVESTOR_INTRO_TOP_ACCOUNT__C":{"type":"BOOLEAN","index":607,"name":"INVESTOR_INTRO_TOP_ACCOUNT__C","comment":null,"display_name":"investor_intro_top_account__c"},"TSP_DECISION_RATIONALE__C":{"type":"TEXT","index":608,"name":"TSP_DECISION_RATIONALE__C","comment":null,"display_name":"tsp_decision_rationale__c"},"GITOPS_SALES_PLAY__C":{"type":"BOOLEAN","index":609,"name":"GITOPS_SALES_PLAY__C","comment":null,"display_name":"gitops_sales_play__c"},"ACCOUNT_OWNER_USER_SEGMENT__C":{"type":"TEXT","index":610,"name":"ACCOUNT_OWNER_USER_SEGMENT__C","comment":null,"display_name":"account_owner_user_segment__c"},"CUSTOMER_MSA__C":{"type":"TEXT","index":611,"name":"CUSTOMER_MSA__C","comment":null,"display_name":"customer_msa__c"},"FIRST_ORDER_DATE__C":{"type":"TIMESTAMP_TZ","index":612,"name":"FIRST_ORDER_DATE__C","comment":null,"display_name":"first_order_date__c"},"RECORD_TYPE_ID__C":{"type":"TEXT","index":613,"name":"RECORD_TYPE_ID__C","comment":null,"display_name":"record_type_id__c"},"LINKEDIN_SI__COMPANY_PROFILE__C":{"type":"TEXT","index":614,"name":"LINKEDIN_SI__COMPANY_PROFILE__C","comment":null,"display_name":"linkedin_si__company_profile__c"},"DECISION_MAKER_COUNT_LINKEDIN__C":{"type":"FLOAT","index":615,"name":"DECISION_MAKER_COUNT_LINKEDIN__C","comment":null,"display_name":"decision_maker_count_linkedin__c"},"ORDER_TYPE_2_3_OPPS__C":{"type":"FLOAT","index":616,"name":"ORDER_TYPE_2_3_OPPS__C","comment":null,"display_name":"order_type_2_3_opps__c"},"ACCT_QUARTERLY_REVIEW_COMMENTS__C":{"type":"TEXT","index":617,"name":"ACCT_QUARTERLY_REVIEW_COMMENTS__C","comment":null,"display_name":"acct_quarterly_review_comments__c"},"ZI_SUB_INDUSTRY__C":{"type":"TEXT","index":618,"name":"ZI_SUB_INDUSTRY__C","comment":null,"display_name":"zi_sub_industry__c"},"IMPARTNER_SYNC__C":{"type":"BOOLEAN","index":619,"name":"IMPARTNER_SYNC__C","comment":null,"display_name":"impartner_sync__c"},"AGGREGATE_DEVELOPER_COUNT__C":{"type":"FLOAT","index":620,"name":"AGGREGATE_DEVELOPER_COUNT__C","comment":null,"display_name":"aggregate_developer_count__c"},"ZI_FORTUNE_RANKING__C":{"type":"TEXT","index":621,"name":"ZI_FORTUNE_RANKING__C","comment":null,"display_name":"zi_fortune_ranking__c"},"VARTOPIADRS__PARTNER_PROSPECT_ADMIN__C":{"type":"TEXT","index":622,"name":"VARTOPIADRS__PARTNER_PROSPECT_ADMIN__C","comment":null,"display_name":"vartopiadrs__partner_prospect_admin__c"},"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT__C":{"type":"TEXT","index":623,"name":"ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT__C","comment":null,"display_name":"account_demographics_sales_segment__c"},"ACCOUNT_DEMOGRAPHICS_HQ_STREET__C":{"type":"TEXT","index":624,"name":"ACCOUNT_DEMOGRAPHICS_HQ_STREET__C","comment":null,"display_name":"account_demographics_hq_street__c"},"ACCOUNT_DEMOGRAPHIC_MAX_FAMILY_EMPLOYEES__C":{"type":"FLOAT","index":625,"name":"ACCOUNT_DEMOGRAPHIC_MAX_FAMILY_EMPLOYEES__C","comment":null,"display_name":"account_demographic_max_family_employees__c"},"ACCOUNT_DEMOGRAPHICS_HQ_STATE__C":{"type":"TEXT","index":626,"name":"ACCOUNT_DEMOGRAPHICS_HQ_STATE__C","comment":null,"display_name":"account_demographics_hq_state__c"},"ACCOUNT_DEMOGRAPHICS_HQ_POSTAL_CODE__C":{"type":"TEXT","index":627,"name":"ACCOUNT_DEMOGRAPHICS_HQ_POSTAL_CODE__C","comment":null,"display_name":"account_demographics_hq_postal_code__c"},"ACCOUNT_DEMOGRAPHICS_HQ_CITY__C":{"type":"TEXT","index":628,"name":"ACCOUNT_DEMOGRAPHICS_HQ_CITY__C","comment":null,"display_name":"account_demographics_hq_city__c"},"ACCOUNT_DEMOGRAPHICS_HQ_COUNTRY__C":{"type":"TEXT","index":629,"name":"ACCOUNT_DEMOGRAPHICS_HQ_COUNTRY__C","comment":null,"display_name":"account_demographics_hq_country__c"},"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT__C":{"type":"FLOAT","index":630,"name":"ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT__C","comment":null,"display_name":"account_demographics_employee_count__c"},"ACCOUNT_DEMOGRAPHICS_GEO__C":{"type":"TEXT","index":631,"name":"ACCOUNT_DEMOGRAPHICS_GEO__C","comment":null,"display_name":"account_demographics_geo__c"},"ACCOUNT_DEMOGRAPHICS_REGION__C":{"type":"TEXT","index":632,"name":"ACCOUNT_DEMOGRAPHICS_REGION__C","comment":null,"display_name":"account_demographics_region__c"},"ACCOUNT_DEMOGRAPHICS_AREA__C":{"type":"TEXT","index":633,"name":"ACCOUNT_DEMOGRAPHICS_AREA__C","comment":null,"display_name":"account_demographics_area__c"},"ACCOUNT_DEMOGRAPHICS_TERRITORY__C":{"type":"TEXT","index":634,"name":"ACCOUNT_DEMOGRAPHICS_TERRITORY__C","comment":null,"display_name":"account_demographics_territory__c"},"ACCOUNT_DEMOGRAPHICS_UPA_CITY__C":{"type":"TEXT","index":635,"name":"ACCOUNT_DEMOGRAPHICS_UPA_CITY__C","comment":null,"display_name":"account_demographics_upa_city__c"},"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE__C":{"type":"TEXT","index":636,"name":"ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE__C","comment":null,"display_name":"account_demographics_upa_postal_code__c"},"ACCOUNT_DEMOGRAPHICS_UPA_STREET__C":{"type":"TEXT","index":637,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STREET__C","comment":null,"display_name":"account_demographics_upa_street__c"},"ACCOUNT_DEMOGRAPHICS_UPA_STATE__C":{"type":"TEXT","index":638,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STATE__C","comment":null,"display_name":"account_demographics_upa_state__c"},"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY__C":{"type":"TEXT","index":639,"name":"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY__C","comment":null,"display_name":"account_demographics_upa_country__c"},"BILLINGGEOCODEACCURACY":{"type":"TEXT","index":640,"name":"BILLINGGEOCODEACCURACY","comment":null,"display_name":"billinggeocodeaccuracy"},"GS_HEALTH_CD__C":{"type":"TEXT","index":641,"name":"GS_HEALTH_CD__C","comment":null,"display_name":"gs_health_cd__c"},"GS_HEALTH_LICENSE_UTILIZATION__C":{"type":"TEXT","index":642,"name":"GS_HEALTH_LICENSE_UTILIZATION__C","comment":null,"display_name":"gs_health_license_utilization__c"},"GS_HEALTH_OVERALL_PRODUCT_USAGE__C":{"type":"TEXT","index":643,"name":"GS_HEALTH_OVERALL_PRODUCT_USAGE__C","comment":null,"display_name":"gs_health_overall_product_usage__c"},"GS_HEALTH_DEVSECOPS__C":{"type":"TEXT","index":644,"name":"GS_HEALTH_DEVSECOPS__C","comment":null,"display_name":"gs_health_devsecops__c"},"GS_HEALTH_CI__C":{"type":"TEXT","index":645,"name":"GS_HEALTH_CI__C","comment":null,"display_name":"gs_health_ci__c"},"GS_HEALTH_SCM__C":{"type":"TEXT","index":646,"name":"GS_HEALTH_SCM__C","comment":null,"display_name":"gs_health_scm__c"},"PROPOSED_ACCOUNT_OWNER__C":{"type":"TEXT","index":647,"name":"PROPOSED_ACCOUNT_OWNER__C","comment":null,"display_name":"proposed_account_owner__c"},"PROPOSED_ISR__C":{"type":"TEXT","index":648,"name":"PROPOSED_ISR__C","comment":null,"display_name":"proposed_isr__c"},"INDUSTRY_OVERRIDE__C":{"type":"TEXT","index":649,"name":"INDUSTRY_OVERRIDE__C","comment":null,"display_name":"industry_override__c"},"SUB_INDUSTRY_OVERRIDE__C":{"type":"TEXT","index":650,"name":"SUB_INDUSTRY_OVERRIDE__C","comment":null,"display_name":"sub_industry_override__c"},"GS_FIRST_VALUE_DATE__C":{"type":"TIMESTAMP_TZ","index":651,"name":"GS_FIRST_VALUE_DATE__C","comment":null,"display_name":"gs_first_value_date__c"},"LATEST_OPEN_RENEWAL_CLOSE_DATE__C":{"type":"TIMESTAMP_TZ","index":652,"name":"LATEST_OPEN_RENEWAL_CLOSE_DATE__C","comment":null,"display_name":"latest_open_renewal_close_date__c"},"ATR_FY23_PLANNING__C":{"type":"TEXT","index":653,"name":"ATR_FY23_PLANNING__C","comment":null,"display_name":"atr_fy23_planning__c"},"EXCLUDE_FROM_ZOOMINFO_ENRICH__C":{"type":"BOOLEAN","index":654,"name":"EXCLUDE_FROM_ZOOMINFO_ENRICH__C","comment":null,"display_name":"exclude_from_zoominfo_enrich__c"},"CUSTOMER_SCORE__C":{"type":"FLOAT","index":655,"name":"CUSTOMER_SCORE__C","comment":null,"display_name":"customer_score__c"},"FIRST_ORDER_AVAILABLE_OT2_3__C":{"type":"BOOLEAN","index":656,"name":"FIRST_ORDER_AVAILABLE_OT2_3__C","comment":null,"display_name":"first_order_available_ot2_3__c"},"PREVALENT_TIER_HIERARCHY__C":{"type":"TEXT","index":657,"name":"PREVALENT_TIER_HIERARCHY__C","comment":null,"display_name":"prevalent_tier_hierarchy__c"},"FIRST_ORDER_OPPORTUNITY_OT2_3__C":{"type":"TEXT","index":658,"name":"FIRST_ORDER_OPPORTUNITY_OT2_3__C","comment":null,"display_name":"first_order_opportunity_ot2_3__c"},"ESTIMATED_DEVELOPER_COUNT__C":{"type":"FLOAT","index":659,"name":"ESTIMATED_DEVELOPER_COUNT__C","comment":null,"display_name":"estimated_developer_count__c"},"LAM_DEV_COUNT__C":{"type":"FLOAT","index":660,"name":"LAM_DEV_COUNT__C","comment":null,"display_name":"lam_dev_count__c"},"GS_LAST_TAM_ACTIVITY_DATE__C":{"type":"TIMESTAMP_TZ","index":661,"name":"GS_LAST_TAM_ACTIVITY_DATE__C","comment":null,"display_name":"gs_last_tam_activity_date__c"},"PUBLIC_SECTOR_ACCOUNT__C":{"type":"BOOLEAN","index":662,"name":"PUBLIC_SECTOR_ACCOUNT__C","comment":null,"display_name":"public_sector_account__c"},"KEY_ACCOUNT__C":{"type":"BOOLEAN","index":663,"name":"KEY_ACCOUNT__C","comment":null,"display_name":"key_account__c"},"LAM__C":{"type":"FLOAT","index":664,"name":"LAM__C","comment":null,"display_name":"lam__c"},"SALES_TERRITORY__C":{"type":"TEXT","index":665,"name":"SALES_TERRITORY__C","comment":null,"display_name":"sales_territory__c"},"PARENT_LAM_INDUSTRY_ACCT_HEIRARCHY__C":{"type":"TEXT","index":666,"name":"PARENT_LAM_INDUSTRY_ACCT_HEIRARCHY__C","comment":null,"display_name":"parent_lam_industry_acct_heirarchy__c"},"ACCOUNT_DEMOGRAPHICS_LAST_UPDATED_DATE__C":{"type":"TIMESTAMP_TZ","index":667,"name":"ACCOUNT_DEMOGRAPHICS_LAST_UPDATED_DATE__C","comment":null,"display_name":"account_demographics_last_updated_date__c"},"BDR_ACCOUNT_STRATEGY__C":{"type":"TEXT","index":668,"name":"BDR_ACCOUNT_STRATEGY__C","comment":null,"display_name":"bdr_account_strategy__c"},"ACTIVELY_WORKING_START_DATE__C":{"type":"TIMESTAMP_TZ","index":669,"name":"ACTIVELY_WORKING_START_DATE__C","comment":null,"display_name":"actively_working_start_date__c"},"BDR_ACCOUNT_RESEARCH__C":{"type":"TEXT","index":670,"name":"BDR_ACCOUNT_RESEARCH__C","comment":null,"display_name":"bdr_account_research__c"},"BDR_PROSPECTING_STATUS__C":{"type":"TEXT","index":671,"name":"BDR_PROSPECTING_STATUS__C","comment":null,"display_name":"bdr_prospecting_status__c"},"PREMIUM_LICENSE_COUNT__C":{"type":"FLOAT","index":672,"name":"PREMIUM_LICENSE_COUNT__C","comment":null,"display_name":"premium_license_count__c"},"LAM_COUNT_OF_STARTER_SUBSCRIPTIONS__C":{"type":"FLOAT","index":673,"name":"LAM_COUNT_OF_STARTER_SUBSCRIPTIONS__C","comment":null,"display_name":"lam_count_of_starter_subscriptions__c"},"PARENT_LAM_MAX_ZI_NUMBER_OF_DEVELOPERS__C":{"type":"FLOAT","index":674,"name":"PARENT_LAM_MAX_ZI_NUMBER_OF_DEVELOPERS__C","comment":null,"display_name":"parent_lam_max_zi_number_of_developers__c"},"PREVALENT_TIER__C":{"type":"TEXT","index":675,"name":"PREVALENT_TIER__C","comment":null,"display_name":"prevalent_tier__c"},"LAM_COUNT_OF_PREMIUM_SUBS_ACCT_FAMILY__C":{"type":"FLOAT","index":676,"name":"LAM_COUNT_OF_PREMIUM_SUBS_ACCT_FAMILY__C","comment":null,"display_name":"lam_count_of_premium_subs_acct_family__c"},"LAM_STARTER_ANNUALIZED_SEAT_PRICE__C":{"type":"FLOAT","index":677,"name":"LAM_STARTER_ANNUALIZED_SEAT_PRICE__C","comment":null,"display_name":"lam_starter_annualized_seat_price__c"},"BDR_NEXT_STEP_DATE__C":{"type":"TIMESTAMP_TZ","index":678,"name":"BDR_NEXT_STEP_DATE__C","comment":null,"display_name":"bdr_next_step_date__c"},"LAM_COUNT_OF_STARTER_SUBS_ACCT_FAMILY__C":{"type":"FLOAT","index":679,"name":"LAM_COUNT_OF_STARTER_SUBS_ACCT_FAMILY__C","comment":null,"display_name":"lam_count_of_starter_subs_acct_family__c"},"STARTER_LICENSE_COUNT__C":{"type":"FLOAT","index":680,"name":"STARTER_LICENSE_COUNT__C","comment":null,"display_name":"starter_license_count__c"},"LAM_ULTIMATE_ANNUALIZED_SEAT_PRICE__C":{"type":"FLOAT","index":681,"name":"LAM_ULTIMATE_ANNUALIZED_SEAT_PRICE__C","comment":null,"display_name":"lam_ultimate_annualized_seat_price__c"},"LAM_COUNT_OF_ULTIMATE_SUBSCRIPTIONS__C":{"type":"FLOAT","index":682,"name":"LAM_COUNT_OF_ULTIMATE_SUBSCRIPTIONS__C","comment":null,"display_name":"lam_count_of_ultimate_subscriptions__c"},"PARENT_LAM_SUM_OF_NUM_OF_LICENSES__C":{"type":"FLOAT","index":683,"name":"PARENT_LAM_SUM_OF_NUM_OF_LICENSES__C","comment":null,"display_name":"parent_lam_sum_of_num_of_licenses__c"},"LAM_PREVALENT_TIER_AVG_PRICE_ACCT_FAM__C":{"type":"FLOAT","index":684,"name":"LAM_PREVALENT_TIER_AVG_PRICE_ACCT_FAM__C","comment":null,"display_name":"lam_prevalent_tier_avg_price_acct_fam__c"},"LAM_PREMIUM_ANNUALIZED_SEAT_PRICE__C":{"type":"FLOAT","index":685,"name":"LAM_PREMIUM_ANNUALIZED_SEAT_PRICE__C","comment":null,"display_name":"lam_premium_annualized_seat_price__c"},"PARENT_LAM_MAX_DECISION_MAKERS_LINKEDIN__C":{"type":"FLOAT","index":686,"name":"PARENT_LAM_MAX_DECISION_MAKERS_LINKEDIN__C","comment":null,"display_name":"parent_lam_max_decision_makers_linkedin__c"},"PARENT_LAM_MAX_POTENTIAL_USERS__C":{"type":"FLOAT","index":687,"name":"PARENT_LAM_MAX_POTENTIAL_USERS__C","comment":null,"display_name":"parent_lam_max_potential_users__c"},"ULTIMATE_LICENSE_COUNT__C":{"type":"FLOAT","index":688,"name":"ULTIMATE_LICENSE_COUNT__C","comment":null,"display_name":"ultimate_license_count__c"},"LAM_COUNT_OF_ULTIMATE_SUBS_ACCT_FAMILY__C":{"type":"FLOAT","index":689,"name":"LAM_COUNT_OF_ULTIMATE_SUBS_ACCT_FAMILY__C","comment":null,"display_name":"lam_count_of_ultimate_subs_acct_family__c"},"LAM_COUNT_OF_PREMIUM_SUBSCRIPTIONS__C":{"type":"FLOAT","index":690,"name":"LAM_COUNT_OF_PREMIUM_SUBSCRIPTIONS__C","comment":null,"display_name":"lam_count_of_premium_subscriptions__c"},"BDR_NEXT_STEPS__C":{"type":"TEXT","index":691,"name":"BDR_NEXT_STEPS__C","comment":null,"display_name":"bdr_next_steps__c"},"LEANDATA_LAST_UPDATE__C":{"type":"TIMESTAMP_TZ","index":692,"name":"LEANDATA_LAST_UPDATE__C","comment":null,"display_name":"leandata_last_update__c"},"REFERENCE_NOTES__C":{"type":"TEXT","index":693,"name":"REFERENCE_NOTES__C","comment":null,"display_name":"reference_notes__c"},"GS_TOTAL_NUMBER_OF_SUCCESS_PLANS__C":{"type":"FLOAT","index":694,"name":"GS_TOTAL_NUMBER_OF_SUCCESS_PLANS__C","comment":null,"display_name":"gs_total_number_of_success_plans__c"},"GS_TOTAL_NUMBER_OF_ACCOUNT_PLANS__C":{"type":"FLOAT","index":695,"name":"GS_TOTAL_NUMBER_OF_ACCOUNT_PLANS__C","comment":null,"display_name":"gs_total_number_of_account_plans__c"},"GSI_ACCOUNT__C":{"type":"BOOLEAN","index":696,"name":"GSI_ACCOUNT__C","comment":null,"display_name":"gsi_account__c"},"CARR_ACCT_FAMILY__C":{"type":"FLOAT","index":697,"name":"CARR_ACCT_FAMILY__C","comment":null,"display_name":"carr_acct_family__c"},"ACCOUNT_TRANSITION_ELIGIBLE__C":{"type":"BOOLEAN","index":698,"name":"ACCOUNT_TRANSITION_ELIGIBLE__C","comment":null,"display_name":"account_transition_eligible__c"},"SALES_SEGMENT_STAMP__C":{"type":"TEXT","index":699,"name":"SALES_SEGMENT_STAMP__C","comment":null,"display_name":"sales_segment_stamp__c"},"LEANDATA_REFRESH_DATE__C":{"type":"TIMESTAMP_TZ","index":700,"name":"LEANDATA_REFRESH_DATE__C","comment":null,"display_name":"leandata_refresh_date__c"},"RESTRICTED_ACCOUNT__C":{"type":"TEXT","index":701,"name":"RESTRICTED_ACCOUNT__C","comment":null,"display_name":"restricted_account__c"},"PUBSEC_TYPE__C":{"type":"TEXT","index":702,"name":"PUBSEC_TYPE__C","comment":null,"display_name":"pubsec_type__c"},"COUNT_OF_GITLAB_ADMINS__C":{"type":"FLOAT","index":703,"name":"COUNT_OF_GITLAB_ADMINS__C","comment":null,"display_name":"count_of_gitlab_admins__c"},"LAST_UPDATED_DATE_USAGE_DATA__C":{"type":"TIMESTAMP_TZ","index":704,"name":"LAST_UPDATED_DATE_USAGE_DATA__C","comment":null,"display_name":"last_updated_date_usage_data__c"},"ACCOUNT_COUNT__C":{"type":"FLOAT","index":705,"name":"ACCOUNT_COUNT__C","comment":null,"display_name":"account_count__c"},"CI_BUILDS_COUNT_ALL_TIME__C":{"type":"FLOAT","index":706,"name":"CI_BUILDS_COUNT_ALL_TIME__C","comment":null,"display_name":"ci_builds_count_all_time__c"},"ACTIVITY_LEVEL__C":{"type":"TEXT","index":707,"name":"ACTIVITY_LEVEL__C","comment":null,"display_name":"activity_level__c"},"GIT_OPERATION_USERS__C":{"type":"FLOAT","index":708,"name":"GIT_OPERATION_USERS__C","comment":null,"display_name":"git_operation_users__c"},"NUMBER_OF_ACTIVE_NAMESPACE__C":{"type":"FLOAT","index":709,"name":"NUMBER_OF_ACTIVE_NAMESPACE__C","comment":null,"display_name":"number_of_active_namespace__c"},"TOTAL_BILLABLE_USERS__C":{"type":"FLOAT","index":710,"name":"TOTAL_BILLABLE_USERS__C","comment":null,"display_name":"total_billable_users__c"},"HAS_TRIAL_EXPERIENCE__C":{"type":"TEXT","index":711,"name":"HAS_TRIAL_EXPERIENCE__C","comment":null,"display_name":"has_trial_experience__c"},"SECURE_SCANNERS_USERS__C":{"type":"FLOAT","index":712,"name":"SECURE_SCANNERS_USERS__C","comment":null,"display_name":"secure_scanners_users__c"},"CI_PIPELINE_USERS__C":{"type":"FLOAT","index":713,"name":"CI_PIPELINE_USERS__C","comment":null,"display_name":"ci_pipeline_users__c"},"LIST_OF_SHARED_ACCOUNTS__C":{"type":"TEXT","index":714,"name":"LIST_OF_SHARED_ACCOUNTS__C","comment":null,"display_name":"list_of_shared_accounts__c"},"MERGE_REQUESTS_USERS__C":{"type":"FLOAT","index":715,"name":"MERGE_REQUESTS_USERS__C","comment":null,"display_name":"merge_requests_users__c"},"DEPLOYMENTS_USERS__C":{"type":"FLOAT","index":716,"name":"DEPLOYMENTS_USERS__C","comment":null,"display_name":"deployments_users__c"},"LIST_OF_NAMESPACES__C":{"type":"TEXT","index":717,"name":"LIST_OF_NAMESPACES__C","comment":null,"display_name":"list_of_namespaces__c"},"NUMBER_OF_ACTIVE_USERS_IN_COMPANY__C":{"type":"FLOAT","index":718,"name":"NUMBER_OF_ACTIVE_USERS_IN_COMPANY__C","comment":null,"display_name":"number_of_active_users_in_company__c"},"NUMBER_OF_ACTIVE_STAGES_IN_COMPANY__C":{"type":"FLOAT","index":719,"name":"NUMBER_OF_ACTIVE_STAGES_IN_COMPANY__C","comment":null,"display_name":"number_of_active_stages_in_company__c"},"VARTOPIADRS__FIELDS_UPDATED_ON__C":{"type":"TIMESTAMP_TZ","index":720,"name":"VARTOPIADRS__FIELDS_UPDATED_ON__C","comment":null,"display_name":"vartopiadrs__fields_updated_on__c"},"DOZISF__ZOOMINFO_ENRICH_STATUS__C":{"type":"TEXT","index":721,"name":"DOZISF__ZOOMINFO_ENRICH_STATUS__C","comment":null,"display_name":"dozisf__zoominfo_enrich_status__c"},"NUM_ACTIVE_NAMESPACE_EXCEEDING_STORAGE__C":{"type":"FLOAT","index":722,"name":"NUM_ACTIVE_NAMESPACE_EXCEEDING_STORAGE__C","comment":null,"display_name":"num_active_namespace_exceeding_storage__c"},"NUMBER_OF_ACTIVE_PUBLIC_NAMESPACES__C":{"type":"FLOAT","index":723,"name":"NUMBER_OF_ACTIVE_PUBLIC_NAMESPACES__C","comment":null,"display_name":"number_of_active_public_namespaces__c"},"NUMBER_OF_ACTIVE_NAMESPACES_WITH_6_USER__C":{"type":"FLOAT","index":724,"name":"NUMBER_OF_ACTIVE_NAMESPACES_WITH_6_USER__C","comment":null,"display_name":"number_of_active_namespaces_with_6_user__c"},"PARTNER_CERTIFICATION__C":{"type":"TEXT","index":725,"name":"PARTNER_CERTIFICATION__C","comment":null,"display_name":"partner_certification__c"},"LAM_TIER__C":{"type":"FLOAT","index":726,"name":"LAM_TIER__C","comment":null,"display_name":"lam_tier__c"},"PTC_PERCENT__C":{"type":"FLOAT","index":727,"name":"PTC_PERCENT__C","comment":null,"display_name":"ptc_percent__c"},"PTE_SCORE_VALUE__C":{"type":"TEXT","index":728,"name":"PTE_SCORE_VALUE__C","comment":null,"display_name":"pte_score_value__c"},"PTC_SCORE_VALUE__C":{"type":"TEXT","index":729,"name":"PTC_SCORE_VALUE__C","comment":null,"display_name":"ptc_score_value__c"},"PTC_INSIGHTS__C":{"type":"TEXT","index":730,"name":"PTC_INSIGHTS__C","comment":null,"display_name":"ptc_insights__c"},"PTE_SCORE__C":{"type":"TEXT","index":731,"name":"PTE_SCORE__C","comment":null,"display_name":"pte_score__c"},"PTE_INSIGHTS__C":{"type":"TEXT","index":732,"name":"PTE_INSIGHTS__C","comment":null,"display_name":"pte_insights__c"},"PTC_SCORE__C":{"type":"TEXT","index":733,"name":"PTC_SCORE__C","comment":null,"display_name":"ptc_score__c"},"PTE_PERCENT__C":{"type":"FLOAT","index":734,"name":"PTE_PERCENT__C","comment":null,"display_name":"pte_percent__c"},"PERSONAL_DOMAIN__C":{"type":"BOOLEAN","index":735,"name":"PERSONAL_DOMAIN__C","comment":null,"display_name":"personal_domain__c"},"ZI_COMPANY_ATTRIBUTE_HOSPITAL__C":{"type":"TEXT","index":736,"name":"ZI_COMPANY_ATTRIBUTE_HOSPITAL__C","comment":null,"display_name":"zi_company_attribute_hospital__c"},"ZI_COMPANY_TYPE__C":{"type":"TEXT","index":737,"name":"ZI_COMPANY_TYPE__C","comment":null,"display_name":"zi_company_type__c"},"ACCOUNT_FAMILY_HIGHEST_ZSUB_END_DATE__C":{"type":"TIMESTAMP_TZ","index":738,"name":"ACCOUNT_FAMILY_HIGHEST_ZSUB_END_DATE__C","comment":null,"display_name":"account_family_highest_zsub_end_date__c"},"PTE_LIKELY_TO_UPTIER__C":{"type":"BOOLEAN","index":739,"name":"PTE_LIKELY_TO_UPTIER__C","comment":null,"display_name":"pte_likely_to_uptier__c"},"PUBSEC_TYPE_OVERRIDE__C":{"type":"TEXT","index":740,"name":"PUBSEC_TYPE_OVERRIDE__C","comment":null,"display_name":"pubsec_type_override__c"},"END_OF_AVAILABILITY_EOA__C":{"type":"TEXT","index":741,"name":"END_OF_AVAILABILITY_EOA__C","comment":null,"display_name":"end_of_availability_eoa__c"},"SCALE_TAM__C":{"type":"TEXT","index":742,"name":"SCALE_TAM__C","comment":null,"display_name":"scale_tam__c"},"SICDESC":{"type":"TEXT","index":743,"name":"SICDESC","comment":null,"display_name":"sicdesc"},"VARTOPIA_ADDRESS_STATE__C":{"type":"TEXT","index":744,"name":"VARTOPIA_ADDRESS_STATE__C","comment":null,"display_name":"vartopia_address_state__c"},"VARTOPIA_ADDRESS_COUNTRY__C":{"type":"TEXT","index":745,"name":"VARTOPIA_ADDRESS_COUNTRY__C","comment":null,"display_name":"vartopia_address_country__c"},"VARTOPIA_ADDRESS_STREET__C":{"type":"TEXT","index":746,"name":"VARTOPIA_ADDRESS_STREET__C","comment":null,"display_name":"vartopia_address_street__c"},"VARTOPIA_ADDRESS_POST_CODE__C":{"type":"TEXT","index":747,"name":"VARTOPIA_ADDRESS_POST_CODE__C","comment":null,"display_name":"vartopia_address_post_code__c"},"VARTOPIA_ADDRESS_CITY__C":{"type":"TEXT","index":748,"name":"VARTOPIA_ADDRESS_CITY__C","comment":null,"display_name":"vartopia_address_city__c"},"AUTHENTICATION__C":{"type":"TEXT","index":749,"name":"AUTHENTICATION__C","comment":null,"display_name":"authentication__c"},"CSM_CSE_INTRO__C":{"type":"BOOLEAN","index":750,"name":"CSM_CSE_INTRO__C","comment":null,"display_name":"csm_cse_intro__c"},"STAMPED_GEO__C":{"type":"TEXT","index":751,"name":"STAMPED_GEO__C","comment":null,"display_name":"stamped_geo__c"},"STAMPED_TERRITORY__C":{"type":"TEXT","index":752,"name":"STAMPED_TERRITORY__C","comment":null,"display_name":"stamped_territory__c"},"STAMPED_SEGMENT__C":{"type":"TEXT","index":753,"name":"STAMPED_SEGMENT__C","comment":null,"display_name":"stamped_segment__c"},"DEVELOPMENT_LANGUAGES__C":{"type":"TEXT","index":754,"name":"DEVELOPMENT_LANGUAGES__C","comment":null,"display_name":"development_languages__c"},"AIR_GAPPED_REQUIRED__C":{"type":"TEXT","index":755,"name":"AIR_GAPPED_REQUIRED__C","comment":null,"display_name":"air_gapped_required__c"},"SCALE_PROGRAM_OPT_OUT__C":{"type":"TEXT","index":756,"name":"SCALE_PROGRAM_OPT_OUT__C","comment":null,"display_name":"scale_program_opt_out__c"},"ATR_FY23_PLANNING__C__FL":{"type":"FLOAT","index":757,"name":"ATR_FY23_PLANNING__C__FL","comment":null,"display_name":"atr_fy23_planning__c__fl"},"GS_HEALTH_USER_ENGAGEMENT__C":{"type":"TEXT","index":758,"name":"GS_HEALTH_USER_ENGAGEMENT__C","comment":null,"display_name":"gs_health_user_engagement__c"},"DEPRECATE_BDR_ACCOUNT_STRATEGY__C":{"type":"TEXT","index":759,"name":"DEPRECATE_BDR_ACCOUNT_STRATEGY__C","comment":null,"display_name":"deprecate_bdr_account_strategy__c"},"MAJOR_ACCOUNT__C":{"type":"BOOLEAN","index":760,"name":"MAJOR_ACCOUNT__C","comment":null,"display_name":"major_account__c"},"NEXT_FY_NAMED_ACCOUNT__C":{"type":"BOOLEAN","index":761,"name":"NEXT_FY_NAMED_ACCOUNT__C","comment":null,"display_name":"next_fy_named_account__c"},"STAMPED_AREA__C":{"type":"TEXT","index":762,"name":"STAMPED_AREA__C","comment":null,"display_name":"stamped_area__c"},"STAMPED_REGION__C":{"type":"TEXT","index":763,"name":"STAMPED_REGION__C","comment":null,"display_name":"stamped_region__c"},"PROPOSED_ACCOUNT_FIELD_MARKETING_MANAGER__C":{"type":"TEXT","index":764,"name":"PROPOSED_ACCOUNT_FIELD_MARKETING_MANAGER__C","comment":null,"display_name":"proposed_account_field_marketing_manager__c"},"PTC_LIKELY_TO_DOWNTIER__C":{"type":"BOOLEAN","index":765,"name":"PTC_LIKELY_TO_DOWNTIER__C","comment":null,"display_name":"ptc_likely_to_downtier__c"},"ABM_MANAGER__C":{"type":"TEXT","index":766,"name":"ABM_MANAGER__C","comment":null,"display_name":"abm_manager__c"},"PTE_LAST_UPDATED_DATE__C":{"type":"TIMESTAMP_TZ","index":767,"name":"PTE_LAST_UPDATED_DATE__C","comment":null,"display_name":"pte_last_updated_date__c"},"PTC_LAST_UPDATED_DATE__C":{"type":"TIMESTAMP_TZ","index":768,"name":"PTC_LAST_UPDATED_DATE__C","comment":null,"display_name":"ptc_last_updated_date__c"},"STAMPED_BUSINESS_UNIT__C":{"type":"TEXT","index":769,"name":"STAMPED_BUSINESS_UNIT__C","comment":null,"display_name":"stamped_business_unit__c"},"ACCOUNT_DEMOGRAPHICS_ROLE_TYPE__C":{"type":"TEXT","index":770,"name":"ACCOUNT_DEMOGRAPHICS_ROLE_TYPE__C","comment":null,"display_name":"account_demographics_role_type__c"},"ACCOUNT_DEMOGRAPHICS_BUSINESS_UNIT__C":{"type":"TEXT","index":771,"name":"ACCOUNT_DEMOGRAPHICS_BUSINESS_UNIT__C","comment":null,"display_name":"account_demographics_business_unit__c"},"STAMPED_ACCOUNT_DEMO_SEGMENT__C":{"type":"TEXT","index":772,"name":"STAMPED_ACCOUNT_DEMO_SEGMENT__C","comment":null,"display_name":"stamped_account_demo_segment__c"},"ACCOUNT_BDR_ASSIGNED_USER_ROLE__C":{"type":"TEXT","index":773,"name":"ACCOUNT_BDR_ASSIGNED_USER_ROLE__C","comment":null,"display_name":"account_bdr_assigned_user_role__c"},"FOCUS_PARTNER__C":{"type":"BOOLEAN","index":774,"name":"FOCUS_PARTNER__C","comment":null,"display_name":"focus_partner__c"},"STAMPED_CARR__C":{"type":"FLOAT","index":775,"name":"STAMPED_CARR__C","comment":null,"display_name":"stamped_carr__c"},"RISK_IMPACT__C":{"type":"TEXT","index":776,"name":"RISK_IMPACT__C","comment":null,"display_name":"risk_impact__c"},"RISK_REASON__C":{"type":"TEXT","index":777,"name":"RISK_REASON__C","comment":null,"display_name":"risk_reason__c"},"LAST_TIMELINE_AT_RISK_UPDATE__C":{"type":"TIMESTAMP_TZ","index":778,"name":"LAST_TIMELINE_AT_RISK_UPDATE__C","comment":null,"display_name":"last_timeline_at_risk_update__c"},"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS_PERCENTAGE__C":{"type":"FLOAT","index":779,"name":"VARTOPIADRS__CLOSED_LOST_REGISTRATIONS_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__closed_lost_registrations_percentage__c"},"VARTOPIADRS__NUMBER_OF_REGISTRATIONS_APPROVED_STATUS__C":{"type":"FLOAT","index":780,"name":"VARTOPIADRS__NUMBER_OF_REGISTRATIONS_APPROVED_STATUS__C","comment":null,"display_name":"vartopiadrs__number_of_registrations_approved_status__c"},"VARTOPIADRS__APPROVED_REGISTRATION_PERCENTAGE__C":{"type":"FLOAT","index":781,"name":"VARTOPIADRS__APPROVED_REGISTRATION_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__approved_registration_percentage__c"},"VARTOPIADRS__DENIED_REGISTRATIONS_PECENTAGE__C":{"type":"FLOAT","index":782,"name":"VARTOPIADRS__DENIED_REGISTRATIONS_PECENTAGE__C","comment":null,"display_name":"vartopiadrs__denied_registrations_pecentage__c"},"VARTOPIADRS__EXPIRED_REGISTRATIONS_PERCENTAGE__C":{"type":"FLOAT","index":783,"name":"VARTOPIADRS__EXPIRED_REGISTRATIONS_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__expired_registrations_percentage__c"},"VARTOPIADRS__CLOSED_WON_REGISTRATIONS_PERCENTAGE__C":{"type":"FLOAT","index":784,"name":"VARTOPIADRS__CLOSED_WON_REGISTRATIONS_PERCENTAGE__C","comment":null,"display_name":"vartopiadrs__closed_won_registrations_percentage__c"},"ACCOUNT_DEMOGRAPHICS_STAMP_DATE__C":{"type":"TIMESTAMP_TZ","index":785,"name":"ACCOUNT_DEMOGRAPHICS_STAMP_DATE__C","comment":null,"display_name":"account_demographics_stamp_date__c"},"SUPPORT_INSTANCE__C":{"type":"TEXT","index":786,"name":"SUPPORT_INSTANCE__C","comment":null,"display_name":"support_instance__c"},"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY_NAME__C":{"type":"TEXT","index":787,"name":"ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY_NAME__C","comment":null,"display_name":"account_demographics_upa_country_name__c"},"ACCOUNT_DEMOGRAPHICS_UPA_STATE_NAME__C":{"type":"TEXT","index":788,"name":"ACCOUNT_DEMOGRAPHICS_UPA_STATE_NAME__C","comment":null,"display_name":"account_demographics_upa_state_name__c"},"LAST_AT_RISK_UPDATE_COMMENTS__C":{"type":"TEXT","index":789,"name":"LAST_AT_RISK_UPDATE_COMMENTS__C","comment":null,"display_name":"last_at_risk_update_comments__c"},"RISKRATE_THIRD_PARTY_STATUS__C":{"type":"TEXT","index":790,"name":"RISKRATE_THIRD_PARTY_STATUS__C","comment":null,"display_name":"riskrate_third_party_status__c"},"TRACHIER__GLOBAL_ULTIMATE_GROUPING_ID__C":{"type":"TEXT","index":791,"name":"TRACHIER__GLOBAL_ULTIMATE_GROUPING_ID__C","comment":null,"display_name":"trachier__global_ultimate_grouping_id__c"},"TRACHIER__DISABLE_HIERARCHIES__C":{"type":"BOOLEAN","index":792,"name":"TRACHIER__DISABLE_HIERARCHIES__C","comment":null,"display_name":"trachier__disable_hierarchies__c"},"TRACHIER__RE_RUN_TRACTION_HIERARCHIES__C":{"type":"BOOLEAN","index":793,"name":"TRACHIER__RE_RUN_TRACTION_HIERARCHIES__C","comment":null,"display_name":"trachier__re_run_traction_hierarchies__c"},"TRACHIER__DOMAIN__C":{"type":"TEXT","index":794,"name":"TRACHIER__DOMAIN__C","comment":null,"display_name":"trachier__domain__c"},"TRACHIER__EXCLUDED_FROM_ACCOUNT_HIERARCHIES__C":{"type":"BOOLEAN","index":795,"name":"TRACHIER__EXCLUDED_FROM_ACCOUNT_HIERARCHIES__C","comment":null,"display_name":"trachier__excluded_from_account_hierarchies__c"},"TRACHIER__OWNER__C":{"type":"TEXT","index":796,"name":"TRACHIER__OWNER__C","comment":null,"display_name":"trachier__owner__c"},"TRACHIER__HIERARCHY_ID__C":{"type":"TEXT","index":797,"name":"TRACHIER__HIERARCHY_ID__C","comment":null,"display_name":"trachier__hierarchy_id__c"},"TAM_MANAGER_NOTIFICATION_SENT__C":{"type":"BOOLEAN","index":798,"name":"TAM_MANAGER_NOTIFICATION_SENT__C","comment":null,"display_name":"tam_manager_notification_sent__c"},"TRACHIER__DUNS_GLOBAL_ULTIMATE_PARENT__C":{"type":"TEXT","index":799,"name":"TRACHIER__DUNS_GLOBAL_ULTIMATE_PARENT__C","comment":null,"display_name":"trachier__duns_global_ultimate_parent__c"},"TRACHIER__PARENT_COMPANY__C":{"type":"TEXT","index":800,"name":"TRACHIER__PARENT_COMPANY__C","comment":null,"display_name":"trachier__parent_company__c"},"TRACRTC__REALTIME_CLEAN_PROCESSED__C":{"type":"BOOLEAN","index":801,"name":"TRACRTC__REALTIME_CLEAN_PROCESSED__C","comment":null,"display_name":"tracrtc__realtime_clean_processed__c"},"TRACRTC__TRACTION_COMPLETE_DOMAIN__C":{"type":"TEXT","index":802,"name":"TRACRTC__TRACTION_COMPLETE_DOMAIN__C","comment":null,"display_name":"tracrtc__traction_complete_domain__c"},"TRACRTC__REALTIME_CLEAN_FAILED__C":{"type":"BOOLEAN","index":803,"name":"TRACRTC__REALTIME_CLEAN_FAILED__C","comment":null,"display_name":"tracrtc__realtime_clean_failed__c"},"TRACRTC__RE_RUN_REALTIME_CLEAN__C":{"type":"BOOLEAN","index":804,"name":"TRACRTC__RE_RUN_REALTIME_CLEAN__C","comment":null,"display_name":"tracrtc__re_run_realtime_clean__c"},"TRACRTC__WEBSITE_DOMAIN__C":{"type":"TEXT","index":805,"name":"TRACRTC__WEBSITE_DOMAIN__C","comment":null,"display_name":"tracrtc__website_domain__c"},"TRACRTC__TIME_DELAY_PROCESSED__C":{"type":"BOOLEAN","index":806,"name":"TRACRTC__TIME_DELAY_PROCESSED__C","comment":null,"display_name":"tracrtc__time_delay_processed__c"},"TRACRTC__DISABLE_COMPLETE__C":{"type":"BOOLEAN","index":807,"name":"TRACRTC__DISABLE_COMPLETE__C","comment":null,"display_name":"tracrtc__disable_complete__c"},"TERRITORYASSIGNQUEUED__C":{"type":"TIMESTAMP_TZ","index":808,"name":"TERRITORYASSIGNQUEUED__C","comment":null,"display_name":"territoryassignqueued__c"},"TRACRTC__TRACTION_COMPLETE_MATCH_KEY__C":{"type":"TEXT","index":809,"name":"TRACRTC__TRACTION_COMPLETE_MATCH_KEY__C","comment":null,"display_name":"tracrtc__traction_complete_match_key__c"},"TRACRTC__DATE_OF_LAST_COMPLETION__C":{"type":"TIMESTAMP_TZ","index":810,"name":"TRACRTC__DATE_OF_LAST_COMPLETION__C","comment":null,"display_name":"tracrtc__date_of_last_completion__c"},"TRACRTC__ORIGINAL_COMPLETION_DATE__C":{"type":"TIMESTAMP_TZ","index":811,"name":"TRACRTC__ORIGINAL_COMPLETION_DATE__C","comment":null,"display_name":"tracrtc__original_completion_date__c"},"TRACRTC__REALTIME_CLEAN_ERROR_MESSAGE__C":{"type":"TEXT","index":812,"name":"TRACRTC__REALTIME_CLEAN_ERROR_MESSAGE__C","comment":null,"display_name":"tracrtc__realtime_clean_error_message__c"},"TRACHIER__PRIMARY_MASTER_ACCOUNT__C":{"type":"TEXT","index":813,"name":"TRACHIER__PRIMARY_MASTER_ACCOUNT__C","comment":null,"display_name":"trachier__primary_master_account__c"},"ENGAGEMENT_MANAGER__C":{"type":"TEXT","index":814,"name":"ENGAGEMENT_MANAGER__C","comment":null,"display_name":"engagement_manager__c"},"RISKRATE_INTEGRATION_ERRORS__C":{"type":"TEXT","index":815,"name":"RISKRATE_INTEGRATION_ERRORS__C","comment":null,"display_name":"riskrate_integration_errors__c"},"TIME_TO_FIRST_ADD_ON__C":{"type":"FLOAT","index":816,"name":"TIME_TO_FIRST_ADD_ON__C","comment":null,"display_name":"time_to_first_add_on__c"},"TRACHIER__LAST_BUILD_HIERARCHY_DATE__C":{"type":"TIMESTAMP_TZ","index":817,"name":"TRACHIER__LAST_BUILD_HIERARCHY_DATE__C","comment":null,"display_name":"trachier__last_build_hierarchy_date__c"},"X6SENSE_6QA__C":{"type":"BOOLEAN","index":818,"name":"X6SENSE_6QA__C","comment":null,"display_name":"x6sense_6qa__c"},"RISKRATE_THIRD_PARTY_GUID__C":{"type":"TEXT","index":819,"name":"RISKRATE_THIRD_PARTY_GUID__C","comment":null,"display_name":"riskrate_third_party_guid__c"},"X6SENSE_ACCOUNT_PROFILE_FIT__C":{"type":"TEXT","index":820,"name":"X6SENSE_ACCOUNT_PROFILE_FIT__C","comment":null,"display_name":"x6sense_account_profile_fit__c"},"X6SENSE_ACCOUNT_REACH_SCORE__C":{"type":"TEXT","index":821,"name":"X6SENSE_ACCOUNT_REACH_SCORE__C","comment":null,"display_name":"x6sense_account_reach_score__c"},"X6SENSE_ACCOUNT_PROFILE_SCORE__C":{"type":"FLOAT","index":822,"name":"X6SENSE_ACCOUNT_PROFILE_SCORE__C","comment":null,"display_name":"x6sense_account_profile_score__c"},"X6SENSE_ACCOUNT_BUYING_STAGE__C":{"type":"TEXT","index":823,"name":"X6SENSE_ACCOUNT_BUYING_STAGE__C","comment":null,"display_name":"x6sense_account_buying_stage__c"},"X6SENSE_ACCOUNT_NUMERICAL_REACH_SCORE__C":{"type":"FLOAT","index":824,"name":"X6SENSE_ACCOUNT_NUMERICAL_REACH_SCORE__C","comment":null,"display_name":"x6sense_account_numerical_reach_score__c"},"X6SENSE_ACCOUNT_UPDATE_DATE__C":{"type":"TIMESTAMP_TZ","index":825,"name":"X6SENSE_ACCOUNT_UPDATE_DATE__C","comment":null,"display_name":"x6sense_account_update_date__c"},"X6SENSE_ACCOUNT_6QA_END_DATE__C":{"type":"TIMESTAMP_TZ","index":826,"name":"X6SENSE_ACCOUNT_6QA_END_DATE__C","comment":null,"display_name":"x6sense_account_6qa_end_date__c"},"X6SENSE_ACCOUNT_6QA_AGE_IN_DAYS__C":{"type":"FLOAT","index":827,"name":"X6SENSE_ACCOUNT_6QA_AGE_IN_DAYS__C","comment":null,"display_name":"x6sense_account_6qa_age_in_days__c"},"X6SENSE_ACCOUNT_6QA_START_DATE__C":{"type":"TIMESTAMP_TZ","index":828,"name":"X6SENSE_ACCOUNT_6QA_START_DATE__C","comment":null,"display_name":"x6sense_account_6qa_start_date__c"},"X6SENSE_ACCOUNT_INTENT_SCORE__C":{"type":"FLOAT","index":829,"name":"X6SENSE_ACCOUNT_INTENT_SCORE__C","comment":null,"display_name":"x6sense_account_intent_score__c"},"EXCLUDE_TERRITORY_ASSIGNMENT__C":{"type":"TEXT","index":830,"name":"EXCLUDE_TERRITORY_ASSIGNMENT__C","comment":null,"display_name":"exclude_territory_assignment__c"},"X6SENSE_SEGMENTS__C":{"type":"TEXT","index":831,"name":"X6SENSE_SEGMENTS__C","comment":null,"display_name":"x6sense_segments__c"},"SUPPLEMENTARY_COMPANY_SOURCE__C":{"type":"TEXT","index":832,"name":"SUPPLEMENTARY_COMPANY_SOURCE__C","comment":null,"display_name":"supplementary_company_source__c"},"DATA_ENRICHMENT_SOURCE__C":{"type":"TEXT","index":833,"name":"DATA_ENRICHMENT_SOURCE__C","comment":null,"display_name":"data_enrichment_source__c"},"PRIMARY_CONTACT__C":{"type":"TEXT","index":834,"name":"PRIMARY_CONTACT__C","comment":null,"display_name":"primary_contact__c"},"TSP_LAST_UPDATE_TIMESTAMP__C":{"type":"TIMESTAMP_TZ","index":835,"name":"TSP_LAST_UPDATE_TIMESTAMP__C","comment":null,"display_name":"tsp_last_update_timestamp__c"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 23:25UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":199675392,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"source.gitlab_snowflake.salesforce.account","fqn":["gitlab_snowflake","sources","sfdc","salesforce","account"],"database":"RAW","schema":"salesforce_stitch","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"models/sources/sfdc/sources.yml","original_file_path":"models/sources/sfdc/sources.yml","name":"account","source_name":"salesforce","source_description":"","loader":"Stitch","identifier":"account","resource_type":"source","quoting":{"database":true,"schema":false,"identifier":false,"column":null},"loaded_at_field":"_sdc_batched_at","freshness":{"warn_after":{"count":8,"period":"hour"},"error_after":{"count":24,"period":"hour"},"filter":null},"external":null,"description":"The account source table contains info about the individual accounts (organizations and persons) involved with your business. This could be a customer, a competitor, a partner, and so on. [Link to Documentation](https://www.stitchdata.com/docs/integrations/saas/salesforce/#account)\n\nNote: A number of fields prefixed with JB_ and ATAM_ are pulled in as part of [Territory Success Planning](https://about.gitlab.com/handbook/sales/field-operations/sales-operations/go-to-market/#territory-success-planning-tsp). These are cast as fields prefixed with TSP_ in downstream models to distinguish from equivalent \"Actual\" fields reflecting the current Go-To-Market approach.","meta":{},"source_meta":{},"tags":["sfdc","tdf"],"config":{"enabled":true},"patch_path":null,"unrendered_config":{},"relation_name":"\"RAW\".salesforce_stitch.account","created_at":1689033767.2521532,"label":"salesforce.account"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.sales_segment_cleaning","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/sfdc/sales_segment_cleaning.sql","original_file_path":"macros/sfdc/sales_segment_cleaning.sql","name":"sales_segment_cleaning","macro_sql":"{%- macro sales_segment_cleaning(column_1) -%}\n\nCASE WHEN LOWER({{ column_1 }}) = 'smb' THEN 'SMB'\n     WHEN LOWER({{ column_1 }}) LIKE ('mid%market') THEN 'Mid-Market'\n     WHEN LOWER({{ column_1 }}) = 'unknown' THEN 'SMB'\n     WHEN LOWER({{ column_1 }}) IS NULL THEN 'SMB'\n     WHEN LOWER({{ column_1 }}) = 'pubsec' THEN 'PubSec'\n     WHEN LOWER({{ column_1 }}) = 'mm' THEN 'Mid-Market'\n     WHEN LOWER({{ column_1 }}) = 'lrg' THEN 'Large'\n     WHEN LOWER({{ column_1 }}) = 'jihu' THEN 'JiHu'\n     WHEN {{ column_1 }} IS NOT NULL THEN initcap({{ column_1 }})\nEND\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":[]},"description":"This macro applies proper formatting to sales segment data with the end result being one of SMB, Mid-Market, Strategic, Large or Unknown.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/sfdc/macros.yml","arguments":[],"created_at":1689033766.0945475}]},"node":{"resource_type":"model","name":"sfdc_account_source","unique_id":"model.gitlab_snowflake.sfdc_account_source"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L2e",null,{"versions":{"Source":"$2f","Compiled":"$30"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
