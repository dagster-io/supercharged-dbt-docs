1:HL["/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/67011378c759fca7.css",{"as":"style"}]
0:["UXH5preSpvs-I3nPBe5RL",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.mart_available_to_renew","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.mart_available_to_renew\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/67011378c759fca7.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","185:static/chunks/app/layout-37793ad3571953e0.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-7bf5c4b4325e2618.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-14adc0d2c014a317.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-7bf5c4b4325e2618.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-14adc0d2c014a317.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_20951f","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.mart_available_to_renew","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.mart_available_to_renew\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.mart_available_to_renew","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","185:static/chunks/app/layout-37793ad3571953e0.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"SetActive","async":false}
f:I{"id":2201,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"ColumnDetails","async":false}
12:I{"id":9941,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"ReferenceListClient","async":false}
2b:I{"id":4431,"chunks":["795:static/chunks/795-8e5a0df3b2a56a21.js","300:static/chunks/300-ee6112810bf33ad7.js","258:static/chunks/258-ce9da1e76dd2abbf.js","57:static/chunks/57-6476d2e1f2b52093.js","845:static/chunks/app/model/[id]/page-8973389506e0169b.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
10:Tba06,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{% set renewal_fiscal_years = dbt_utils.get_column_values(
        table=ref('prep_renewal_fiscal_years'),
        where="fiscal_year >= 2019",
        column='fiscal_year',
        order_by='fiscal_year' )%}

{{ simple_cte([
    ('dim_date','dim_date'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_subscription', 'dim_subscription'),
    ('dim_crm_opportunity', 'dim_crm_opportunity'),
    ('fct_crm_opportunity', 'fct_crm_opportunity'),
    ('dim_charge', 'dim_charge'),
    ('fct_charge', 'fct_charge'),
    ('dim_billing_account', 'dim_billing_account'),
    ('dim_product_detail', 'dim_product_detail'),
    ('dim_amendment', 'dim_amendment')
]) }}

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

{% for renewal_fiscal_year in renewal_fiscal_years -%}
), renewal_subscriptions_{{renewal_fiscal_year}} AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_{{renewal_fiscal_year}} AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON mart_charge.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '{{renewal_fiscal_year}}'
        )

), agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term <= 12
    {{ dbt_utils.group_by(n=23) }}

), agg_charge_term_greater_than_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term > 12
    {{ dbt_utils.group_by(n=23) }}

), twenty_four_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

), thirty_six_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), forty_eight_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), sixty_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), combined_{{renewal_fiscal_year}} AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM sixty_mth_term_{{renewal_fiscal_year}}

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_{{renewal_fiscal_year}} AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_{{renewal_fiscal_year}}.term_end_month, base_{{renewal_fiscal_year}}.dim_charge_id)      AS concat_primary_key,
      {{ dbt_utils.surrogate_key(['concat_primary_key' ]) }}                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_{{renewal_fiscal_year}}.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_{{renewal_fiscal_year}}.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_{{renewal_fiscal_year}}.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_{{renewal_fiscal_year}}.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_{{renewal_fiscal_year}}.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_{{renewal_fiscal_year}}.subscription_name                                                                                        AS subscription_name,
      base_{{renewal_fiscal_year}}.subscription_start_month                                                                                 AS subscription_start_month,
      base_{{renewal_fiscal_year}}.subscription_end_month                                                                                   AS subscription_end_month,
      base_{{renewal_fiscal_year}}.term_start_month                                                                                         AS term_start_month,
      base_{{renewal_fiscal_year}}.term_end_month                                                                                           AS renewal_month,
      combined_{{renewal_fiscal_year}}.term_end_month                                                                                       AS bookings_term_end_month,
      base_{{renewal_fiscal_year}}.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_{{renewal_fiscal_year}}.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS current_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_{{renewal_fiscal_year}}.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_{{renewal_fiscal_year}}.crm_account_name                                                                                         AS crm_account_name,
      base_{{renewal_fiscal_year}}.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_{{renewal_fiscal_year}}.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_{{renewal_fiscal_year}}.user_name                                                                                                AS user_name,
      base_{{renewal_fiscal_year}}.user_role_id                                                                                             AS user_role_id,
      base_{{renewal_fiscal_year}}.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_{{renewal_fiscal_year}}.crm_user_geo                                                                                             AS crm_user_geo,
      base_{{renewal_fiscal_year}}.crm_user_region                                                                                          AS crm_user_region,
      base_{{renewal_fiscal_year}}.crm_user_area                                                                                            AS crm_user_area,
      base_{{renewal_fiscal_year}}.product_tier_name                                                                                        AS product_tier_name,
      base_{{renewal_fiscal_year}}.product_delivery_type                                                                                    AS product_delivery_type,
      combined_{{renewal_fiscal_year}}.renewal_type                                                                                         AS renewal_type,
      base_{{renewal_fiscal_year}}.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_{{renewal_fiscal_year}}.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS subscription_term,
      base_{{renewal_fiscal_year}}.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
          AND CONCAT('{{renewal_fiscal_year}}','-01-01')
            AND base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_{{renewal_fiscal_year}}.arr                                                                                                      AS arr
    FROM combined_{{renewal_fiscal_year}}
    LEFT JOIN dim_date
      ON combined_{{renewal_fiscal_year}}.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_{{renewal_fiscal_year}}
      ON combined_{{renewal_fiscal_year}}.dim_charge_id = base_{{renewal_fiscal_year}}.dim_charge_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON base_{{renewal_fiscal_year}}.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_{{renewal_fiscal_year}}.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
      AND CONCAT('{{renewal_fiscal_year}}','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

{% endfor -%}
), unioned as (

{% for renewal_fiscal_year in renewal_fiscal_years-%}

    SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_{{renewal_fiscal_year}}
    {%- if not loop.last %} UNION ALL {%- endif %}

{% endfor -%}

)

{{ dbt_audit(
    cte_ref="unioned",
    created_by="@michellecooper",
    updated_by="@nmcavinue",
    created_date="2021-12-06",
    updated_date="2023-05-30"
) }}11:T4f7ad,





WITH dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_opportunity

), fct_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_opportunity

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_charge

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_amendment AS (

    SELECT * 
    FROM "PROD".common.dim_amendment

)

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

), renewal_subscriptions_2019 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2019 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2019.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2019
      ON mart_charge.subscription_name = renewal_subscriptions_2019.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2019'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2019'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2019'
        )

), agg_charge_term_less_than_equal_12_2019 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2019
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2019 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2019
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2019 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2019 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2019

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2019

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2019

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2019

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2019

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2019

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2019 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2019.term_end_month, base_2019.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2019.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2019.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2019.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2019.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2019.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2019.subscription_name                                                                                        AS subscription_name,
      base_2019.subscription_start_month                                                                                 AS subscription_start_month,
      base_2019.subscription_end_month                                                                                   AS subscription_end_month,
      base_2019.term_start_month                                                                                         AS term_start_month,
      base_2019.term_end_month                                                                                           AS renewal_month,
      combined_2019.term_end_month                                                                                       AS bookings_term_end_month,
      base_2019.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2019.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2019.current_term                                                                                             AS current_term,
      renewal_subscriptions_2019.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2019.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2019.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2019.crm_account_name                                                                                         AS crm_account_name,
      base_2019.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2019.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2019.user_name                                                                                                AS user_name,
      base_2019.user_role_id                                                                                             AS user_role_id,
      base_2019.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2019.crm_user_geo                                                                                             AS crm_user_geo,
      base_2019.crm_user_region                                                                                          AS crm_user_region,
      base_2019.crm_user_area                                                                                            AS crm_user_area,
      base_2019.product_tier_name                                                                                        AS product_tier_name,
      base_2019.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2019.renewal_type                                                                                         AS renewal_type,
      base_2019.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2019.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2019.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2019.current_term                                                                                             AS subscription_term,
      base_2019.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
          AND CONCAT('2019','-01-01')
            AND base_2019.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2019.arr                                                                                                      AS arr
    FROM combined_2019
    LEFT JOIN dim_date
      ON combined_2019.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2019
      ON combined_2019.dim_charge_id = base_2019.dim_charge_id
    LEFT JOIN renewal_subscriptions_2019
      ON base_2019.subscription_name = renewal_subscriptions_2019.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2019.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
      AND CONCAT('2019','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2020 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2020 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2020.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2020
      ON mart_charge.subscription_name = renewal_subscriptions_2020.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2020'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2020'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2020'
        )

), agg_charge_term_less_than_equal_12_2020 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2020
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2020 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2020
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2020 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2020 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2020

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2020

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2020

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2020

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2020

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2020

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2020 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2020.term_end_month, base_2020.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2020.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2020.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2020.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2020.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2020.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2020.subscription_name                                                                                        AS subscription_name,
      base_2020.subscription_start_month                                                                                 AS subscription_start_month,
      base_2020.subscription_end_month                                                                                   AS subscription_end_month,
      base_2020.term_start_month                                                                                         AS term_start_month,
      base_2020.term_end_month                                                                                           AS renewal_month,
      combined_2020.term_end_month                                                                                       AS bookings_term_end_month,
      base_2020.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2020.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2020.current_term                                                                                             AS current_term,
      renewal_subscriptions_2020.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2020.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2020.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2020.crm_account_name                                                                                         AS crm_account_name,
      base_2020.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2020.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2020.user_name                                                                                                AS user_name,
      base_2020.user_role_id                                                                                             AS user_role_id,
      base_2020.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2020.crm_user_geo                                                                                             AS crm_user_geo,
      base_2020.crm_user_region                                                                                          AS crm_user_region,
      base_2020.crm_user_area                                                                                            AS crm_user_area,
      base_2020.product_tier_name                                                                                        AS product_tier_name,
      base_2020.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2020.renewal_type                                                                                         AS renewal_type,
      base_2020.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2020.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2020.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2020.current_term                                                                                             AS subscription_term,
      base_2020.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
          AND CONCAT('2020','-01-01')
            AND base_2020.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2020.arr                                                                                                      AS arr
    FROM combined_2020
    LEFT JOIN dim_date
      ON combined_2020.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2020
      ON combined_2020.dim_charge_id = base_2020.dim_charge_id
    LEFT JOIN renewal_subscriptions_2020
      ON base_2020.subscription_name = renewal_subscriptions_2020.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2020.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
      AND CONCAT('2020','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2021 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2021 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2021.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2021
      ON mart_charge.subscription_name = renewal_subscriptions_2021.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2021'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2021'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2021'
        )

), agg_charge_term_less_than_equal_12_2021 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2021
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2021 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2021
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2021 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2021 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2021

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2021

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2021

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2021

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2021

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2021

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2021 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2021.term_end_month, base_2021.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2021.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2021.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2021.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2021.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2021.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2021.subscription_name                                                                                        AS subscription_name,
      base_2021.subscription_start_month                                                                                 AS subscription_start_month,
      base_2021.subscription_end_month                                                                                   AS subscription_end_month,
      base_2021.term_start_month                                                                                         AS term_start_month,
      base_2021.term_end_month                                                                                           AS renewal_month,
      combined_2021.term_end_month                                                                                       AS bookings_term_end_month,
      base_2021.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2021.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2021.current_term                                                                                             AS current_term,
      renewal_subscriptions_2021.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2021.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2021.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2021.crm_account_name                                                                                         AS crm_account_name,
      base_2021.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2021.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2021.user_name                                                                                                AS user_name,
      base_2021.user_role_id                                                                                             AS user_role_id,
      base_2021.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2021.crm_user_geo                                                                                             AS crm_user_geo,
      base_2021.crm_user_region                                                                                          AS crm_user_region,
      base_2021.crm_user_area                                                                                            AS crm_user_area,
      base_2021.product_tier_name                                                                                        AS product_tier_name,
      base_2021.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2021.renewal_type                                                                                         AS renewal_type,
      base_2021.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2021.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2021.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2021.current_term                                                                                             AS subscription_term,
      base_2021.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
          AND CONCAT('2021','-01-01')
            AND base_2021.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2021.arr                                                                                                      AS arr
    FROM combined_2021
    LEFT JOIN dim_date
      ON combined_2021.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2021
      ON combined_2021.dim_charge_id = base_2021.dim_charge_id
    LEFT JOIN renewal_subscriptions_2021
      ON base_2021.subscription_name = renewal_subscriptions_2021.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2021.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
      AND CONCAT('2021','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2022 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2022 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2022.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2022
      ON mart_charge.subscription_name = renewal_subscriptions_2022.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2022'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2022'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2022'
        )

), agg_charge_term_less_than_equal_12_2022 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2022
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2022 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2022
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2022 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2022 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2022

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2022

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2022

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2022

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2022

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2022

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2022 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2022.term_end_month, base_2022.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2022.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2022.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2022.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2022.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2022.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2022.subscription_name                                                                                        AS subscription_name,
      base_2022.subscription_start_month                                                                                 AS subscription_start_month,
      base_2022.subscription_end_month                                                                                   AS subscription_end_month,
      base_2022.term_start_month                                                                                         AS term_start_month,
      base_2022.term_end_month                                                                                           AS renewal_month,
      combined_2022.term_end_month                                                                                       AS bookings_term_end_month,
      base_2022.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2022.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2022.current_term                                                                                             AS current_term,
      renewal_subscriptions_2022.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2022.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2022.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2022.crm_account_name                                                                                         AS crm_account_name,
      base_2022.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2022.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2022.user_name                                                                                                AS user_name,
      base_2022.user_role_id                                                                                             AS user_role_id,
      base_2022.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2022.crm_user_geo                                                                                             AS crm_user_geo,
      base_2022.crm_user_region                                                                                          AS crm_user_region,
      base_2022.crm_user_area                                                                                            AS crm_user_area,
      base_2022.product_tier_name                                                                                        AS product_tier_name,
      base_2022.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2022.renewal_type                                                                                         AS renewal_type,
      base_2022.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2022.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2022.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2022.current_term                                                                                             AS subscription_term,
      base_2022.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
          AND CONCAT('2022','-01-01')
            AND base_2022.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2022.arr                                                                                                      AS arr
    FROM combined_2022
    LEFT JOIN dim_date
      ON combined_2022.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2022
      ON combined_2022.dim_charge_id = base_2022.dim_charge_id
    LEFT JOIN renewal_subscriptions_2022
      ON base_2022.subscription_name = renewal_subscriptions_2022.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2022.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
      AND CONCAT('2022','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2023 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2023 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2023.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2023
      ON mart_charge.subscription_name = renewal_subscriptions_2023.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2023'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2023'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2023'
        )

), agg_charge_term_less_than_equal_12_2023 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2023
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2023 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2023
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2023 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2023 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2023

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2023

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2023

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2023

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2023

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2023

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2023 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2023.term_end_month, base_2023.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2023.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2023.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2023.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2023.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2023.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2023.subscription_name                                                                                        AS subscription_name,
      base_2023.subscription_start_month                                                                                 AS subscription_start_month,
      base_2023.subscription_end_month                                                                                   AS subscription_end_month,
      base_2023.term_start_month                                                                                         AS term_start_month,
      base_2023.term_end_month                                                                                           AS renewal_month,
      combined_2023.term_end_month                                                                                       AS bookings_term_end_month,
      base_2023.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2023.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2023.current_term                                                                                             AS current_term,
      renewal_subscriptions_2023.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2023.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2023.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2023.crm_account_name                                                                                         AS crm_account_name,
      base_2023.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2023.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2023.user_name                                                                                                AS user_name,
      base_2023.user_role_id                                                                                             AS user_role_id,
      base_2023.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2023.crm_user_geo                                                                                             AS crm_user_geo,
      base_2023.crm_user_region                                                                                          AS crm_user_region,
      base_2023.crm_user_area                                                                                            AS crm_user_area,
      base_2023.product_tier_name                                                                                        AS product_tier_name,
      base_2023.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2023.renewal_type                                                                                         AS renewal_type,
      base_2023.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2023.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2023.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2023.current_term                                                                                             AS subscription_term,
      base_2023.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
          AND CONCAT('2023','-01-01')
            AND base_2023.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2023.arr                                                                                                      AS arr
    FROM combined_2023
    LEFT JOIN dim_date
      ON combined_2023.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2023
      ON combined_2023.dim_charge_id = base_2023.dim_charge_id
    LEFT JOIN renewal_subscriptions_2023
      ON base_2023.subscription_name = renewal_subscriptions_2023.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2023.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
      AND CONCAT('2023','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2024 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2024 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2024.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2024
      ON mart_charge.subscription_name = renewal_subscriptions_2024.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2024'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2024'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2024'
        )

), agg_charge_term_less_than_equal_12_2024 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2024
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2024 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2024
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2024 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2024 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2024

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2024

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2024

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2024

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2024

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2024

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2024 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2024.term_end_month, base_2024.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2024.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2024.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2024.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2024.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2024.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2024.subscription_name                                                                                        AS subscription_name,
      base_2024.subscription_start_month                                                                                 AS subscription_start_month,
      base_2024.subscription_end_month                                                                                   AS subscription_end_month,
      base_2024.term_start_month                                                                                         AS term_start_month,
      base_2024.term_end_month                                                                                           AS renewal_month,
      combined_2024.term_end_month                                                                                       AS bookings_term_end_month,
      base_2024.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2024.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2024.current_term                                                                                             AS current_term,
      renewal_subscriptions_2024.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2024.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2024.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2024.crm_account_name                                                                                         AS crm_account_name,
      base_2024.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2024.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2024.user_name                                                                                                AS user_name,
      base_2024.user_role_id                                                                                             AS user_role_id,
      base_2024.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2024.crm_user_geo                                                                                             AS crm_user_geo,
      base_2024.crm_user_region                                                                                          AS crm_user_region,
      base_2024.crm_user_area                                                                                            AS crm_user_area,
      base_2024.product_tier_name                                                                                        AS product_tier_name,
      base_2024.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2024.renewal_type                                                                                         AS renewal_type,
      base_2024.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2024.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2024.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2024.current_term                                                                                             AS subscription_term,
      base_2024.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
          AND CONCAT('2024','-01-01')
            AND base_2024.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2024.arr                                                                                                      AS arr
    FROM combined_2024
    LEFT JOIN dim_date
      ON combined_2024.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2024
      ON combined_2024.dim_charge_id = base_2024.dim_charge_id
    LEFT JOIN renewal_subscriptions_2024
      ON base_2024.subscription_name = renewal_subscriptions_2024.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2024.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
      AND CONCAT('2024','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2025 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2025 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2025.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2025
      ON mart_charge.subscription_name = renewal_subscriptions_2025.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2025'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2025'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2025'
        )

), agg_charge_term_less_than_equal_12_2025 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2025
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2025 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2025
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2025 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2025 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2025

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2025

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2025

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2025

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2025

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2025

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2025 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2025.term_end_month, base_2025.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2025.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2025.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2025.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2025.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2025.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2025.subscription_name                                                                                        AS subscription_name,
      base_2025.subscription_start_month                                                                                 AS subscription_start_month,
      base_2025.subscription_end_month                                                                                   AS subscription_end_month,
      base_2025.term_start_month                                                                                         AS term_start_month,
      base_2025.term_end_month                                                                                           AS renewal_month,
      combined_2025.term_end_month                                                                                       AS bookings_term_end_month,
      base_2025.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2025.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2025.current_term                                                                                             AS current_term,
      renewal_subscriptions_2025.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2025.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2025.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2025.crm_account_name                                                                                         AS crm_account_name,
      base_2025.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2025.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2025.user_name                                                                                                AS user_name,
      base_2025.user_role_id                                                                                             AS user_role_id,
      base_2025.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2025.crm_user_geo                                                                                             AS crm_user_geo,
      base_2025.crm_user_region                                                                                          AS crm_user_region,
      base_2025.crm_user_area                                                                                            AS crm_user_area,
      base_2025.product_tier_name                                                                                        AS product_tier_name,
      base_2025.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2025.renewal_type                                                                                         AS renewal_type,
      base_2025.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2025.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2025.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2025.current_term                                                                                             AS subscription_term,
      base_2025.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
          AND CONCAT('2025','-01-01')
            AND base_2025.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2025.arr                                                                                                      AS arr
    FROM combined_2025
    LEFT JOIN dim_date
      ON combined_2025.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2025
      ON combined_2025.dim_charge_id = base_2025.dim_charge_id
    LEFT JOIN renewal_subscriptions_2025
      ON base_2025.subscription_name = renewal_subscriptions_2025.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2025.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
      AND CONCAT('2025','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2026 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2026 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2026.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2026
      ON mart_charge.subscription_name = renewal_subscriptions_2026.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2026'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2026'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2026'
        )

), agg_charge_term_less_than_equal_12_2026 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2026
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2026 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2026
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2026 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2026 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2026

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2026

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2026

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2026

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2026

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2026

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2026 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2026.term_end_month, base_2026.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2026.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2026.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2026.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2026.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2026.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2026.subscription_name                                                                                        AS subscription_name,
      base_2026.subscription_start_month                                                                                 AS subscription_start_month,
      base_2026.subscription_end_month                                                                                   AS subscription_end_month,
      base_2026.term_start_month                                                                                         AS term_start_month,
      base_2026.term_end_month                                                                                           AS renewal_month,
      combined_2026.term_end_month                                                                                       AS bookings_term_end_month,
      base_2026.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2026.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2026.current_term                                                                                             AS current_term,
      renewal_subscriptions_2026.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2026.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2026.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2026.crm_account_name                                                                                         AS crm_account_name,
      base_2026.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2026.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2026.user_name                                                                                                AS user_name,
      base_2026.user_role_id                                                                                             AS user_role_id,
      base_2026.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2026.crm_user_geo                                                                                             AS crm_user_geo,
      base_2026.crm_user_region                                                                                          AS crm_user_region,
      base_2026.crm_user_area                                                                                            AS crm_user_area,
      base_2026.product_tier_name                                                                                        AS product_tier_name,
      base_2026.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2026.renewal_type                                                                                         AS renewal_type,
      base_2026.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2026.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2026.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2026.current_term                                                                                             AS subscription_term,
      base_2026.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
          AND CONCAT('2026','-01-01')
            AND base_2026.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2026.arr                                                                                                      AS arr
    FROM combined_2026
    LEFT JOIN dim_date
      ON combined_2026.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2026
      ON combined_2026.dim_charge_id = base_2026.dim_charge_id
    LEFT JOIN renewal_subscriptions_2026
      ON base_2026.subscription_name = renewal_subscriptions_2026.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2026.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
      AND CONCAT('2026','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2027 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2027 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2027.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2027
      ON mart_charge.subscription_name = renewal_subscriptions_2027.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2027'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2027'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2027'
        )

), agg_charge_term_less_than_equal_12_2027 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2027
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2027 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2027
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2027 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2027 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2027

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2027

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2027

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2027

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2027

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2027

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2027 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2027.term_end_month, base_2027.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2027.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2027.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2027.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2027.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2027.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2027.subscription_name                                                                                        AS subscription_name,
      base_2027.subscription_start_month                                                                                 AS subscription_start_month,
      base_2027.subscription_end_month                                                                                   AS subscription_end_month,
      base_2027.term_start_month                                                                                         AS term_start_month,
      base_2027.term_end_month                                                                                           AS renewal_month,
      combined_2027.term_end_month                                                                                       AS bookings_term_end_month,
      base_2027.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2027.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2027.current_term                                                                                             AS current_term,
      renewal_subscriptions_2027.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2027.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2027.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2027.crm_account_name                                                                                         AS crm_account_name,
      base_2027.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2027.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2027.user_name                                                                                                AS user_name,
      base_2027.user_role_id                                                                                             AS user_role_id,
      base_2027.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2027.crm_user_geo                                                                                             AS crm_user_geo,
      base_2027.crm_user_region                                                                                          AS crm_user_region,
      base_2027.crm_user_area                                                                                            AS crm_user_area,
      base_2027.product_tier_name                                                                                        AS product_tier_name,
      base_2027.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2027.renewal_type                                                                                         AS renewal_type,
      base_2027.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2027.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2027.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2027.current_term                                                                                             AS subscription_term,
      base_2027.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
          AND CONCAT('2027','-01-01')
            AND base_2027.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2027.arr                                                                                                      AS arr
    FROM combined_2027
    LEFT JOIN dim_date
      ON combined_2027.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2027
      ON combined_2027.dim_charge_id = base_2027.dim_charge_id
    LEFT JOIN renewal_subscriptions_2027
      ON base_2027.subscription_name = renewal_subscriptions_2027.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2027.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
      AND CONCAT('2027','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2028 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2028 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2028.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2028
      ON mart_charge.subscription_name = renewal_subscriptions_2028.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2028'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2028'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2028'
        )

), agg_charge_term_less_than_equal_12_2028 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2028
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2028 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2028
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2028 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2028 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2028

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2028

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2028

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2028

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2028

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2028

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2028 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2028.term_end_month, base_2028.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2028.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2028.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2028.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2028.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2028.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2028.subscription_name                                                                                        AS subscription_name,
      base_2028.subscription_start_month                                                                                 AS subscription_start_month,
      base_2028.subscription_end_month                                                                                   AS subscription_end_month,
      base_2028.term_start_month                                                                                         AS term_start_month,
      base_2028.term_end_month                                                                                           AS renewal_month,
      combined_2028.term_end_month                                                                                       AS bookings_term_end_month,
      base_2028.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2028.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2028.current_term                                                                                             AS current_term,
      renewal_subscriptions_2028.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2028.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2028.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2028.crm_account_name                                                                                         AS crm_account_name,
      base_2028.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2028.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2028.user_name                                                                                                AS user_name,
      base_2028.user_role_id                                                                                             AS user_role_id,
      base_2028.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2028.crm_user_geo                                                                                             AS crm_user_geo,
      base_2028.crm_user_region                                                                                          AS crm_user_region,
      base_2028.crm_user_area                                                                                            AS crm_user_area,
      base_2028.product_tier_name                                                                                        AS product_tier_name,
      base_2028.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2028.renewal_type                                                                                         AS renewal_type,
      base_2028.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2028.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2028.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2028.current_term                                                                                             AS subscription_term,
      base_2028.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
          AND CONCAT('2028','-01-01')
            AND base_2028.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2028.arr                                                                                                      AS arr
    FROM combined_2028
    LEFT JOIN dim_date
      ON combined_2028.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2028
      ON combined_2028.dim_charge_id = base_2028.dim_charge_id
    LEFT JOIN renewal_subscriptions_2028
      ON base_2028.subscription_name = renewal_subscriptions_2028.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2028.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
      AND CONCAT('2028','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2029 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2029 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2029.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2029
      ON mart_charge.subscription_name = renewal_subscriptions_2029.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2029'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2029'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2029'
        )

), agg_charge_term_less_than_equal_12_2029 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2029
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2029 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2029
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2029 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2029 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2029

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2029

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2029

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2029

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2029

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2029

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2029 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2029.term_end_month, base_2029.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2029.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2029.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2029.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2029.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2029.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2029.subscription_name                                                                                        AS subscription_name,
      base_2029.subscription_start_month                                                                                 AS subscription_start_month,
      base_2029.subscription_end_month                                                                                   AS subscription_end_month,
      base_2029.term_start_month                                                                                         AS term_start_month,
      base_2029.term_end_month                                                                                           AS renewal_month,
      combined_2029.term_end_month                                                                                       AS bookings_term_end_month,
      base_2029.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2029.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2029.current_term                                                                                             AS current_term,
      renewal_subscriptions_2029.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2029.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2029.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2029.crm_account_name                                                                                         AS crm_account_name,
      base_2029.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2029.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2029.user_name                                                                                                AS user_name,
      base_2029.user_role_id                                                                                             AS user_role_id,
      base_2029.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2029.crm_user_geo                                                                                             AS crm_user_geo,
      base_2029.crm_user_region                                                                                          AS crm_user_region,
      base_2029.crm_user_area                                                                                            AS crm_user_area,
      base_2029.product_tier_name                                                                                        AS product_tier_name,
      base_2029.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2029.renewal_type                                                                                         AS renewal_type,
      base_2029.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2029.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2029.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2029.current_term                                                                                             AS subscription_term,
      base_2029.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
          AND CONCAT('2029','-01-01')
            AND base_2029.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2029.arr                                                                                                      AS arr
    FROM combined_2029
    LEFT JOIN dim_date
      ON combined_2029.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2029
      ON combined_2029.dim_charge_id = base_2029.dim_charge_id
    LEFT JOIN renewal_subscriptions_2029
      ON base_2029.subscription_name = renewal_subscriptions_2029.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2029.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
      AND CONCAT('2029','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), unioned as (

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2019 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2020 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2021 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2022 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2023 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2024 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2025 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2026 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2027 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2028 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2029

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2021-12-06'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM unioned13:Tf40e,{{ config(alias='report_metrics_summary_account_year') }}

-- TODO: 20221208 TAM fields need to refactored as they are not called TAM anymore

WITH date_details AS (

    SELECT *
    --FROM  prod.workspace_sales.date_details
    FROM {{ ref('wk_sales_date_details') }}

 ), sfdc_opportunity_xf AS (

    SELECT *
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_xf
    FROM {{ref('wk_sales_sfdc_opportunity_xf')}}
    WHERE is_deleted = 0
      AND is_edu_oss = 0
      AND is_jihu_account = 0

 ), sfdc_opportunity_snapshot_xf AS (

    SELECT h.*
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf AS h
    FROM {{ref('wk_sales_sfdc_opportunity_snapshot_history_xf')}} h
    INNER JOIN date_details snapshot_date
      ON snapshot_date.date_actual = h.snapshot_date
    WHERE h.is_deleted = 0
      AND h.is_edu_oss = 0
      AND h.is_jihu_account = 0
      -- same day of FY across years
      AND snapshot_date.day_of_fiscal_year_normalised = (SELECT DISTINCT day_of_fiscal_year_normalised
                                                          FROM date_details
                                                          WHERE date_actual = DATEADD(day, -2, CURRENT_DATE))
 ), mart_available_to_renew AS (

    SELECT renew.*,
        renew_date.first_day_of_fiscal_quarter  AS renew_fiscal_quarter_date,
        renew_date.fiscal_quarter_name_fy       AS renew_fiscal_quarter_name,
        renew_date.fiscal_quarter               AS renew_fiscal_quarter_number
    FROM {{ref('mart_available_to_renew')}} renew
    --FROM prod.restricted_safe_common_mart_finance.mart_available_to_renew
    LEFT JOIN date_details renew_date
        ON renew_date.date_actual = renew.renewal_month
    
 ), dim_subscription AS (

    SELECT
      dim_subscription_id,
      CASE
          WHEN dim_billing_account_id_invoice_owner_account != dim_billing_account_id
              THEN 1
          ELSE 0
      END AS is_channel_arr_flag
    --FROM prod.common.dim_subscription
    FROM {{ ref('dim_subscription') }}

 ), mart_arr AS (

    SELECT *
    --FROM prod.restricted_safe_common_mart_sales.mart_arr
    FROM {{ref('mart_arr')}}   

  ), raw_account AS (
  
    SELECT *
    FROM {{ source('salesforce', 'account') }}
    --FROM raw.salesforce_stitch.account 

  -- missing fields in mart crm account so adding dim_crm_account cte here on top of the mart below
  ), dim_crm_account AS (

    SELECT *
    --FROM prod.restricted_safe_common.dim_crm_account
    FROM {{ref('dim_crm_account')}}

    -- missing fields in dim_crm_account so adding raw account here
  -- has_tam__c
  -- PUBLIC_SECTOR_ACCOUNT__C,
  -- PUBSEC_TYPE__C,
  -- POTENTIAL_ARR_LAM__C
  -- BILLINGSTATE
  -- customer_score__c
  ), mart_crm_account AS (

    SELECT acc.*,
        raw.has_tam__c                              AS has_tam_flag,
        raw.public_sector_account__c                AS public_sector_account_flag,
        raw.pubsec_type__c                          AS pubsec_type,
        raw.lam_tier__c                             AS potential_lam_arr,
        raw.billingstatecode                        AS account_billing_state,
        raw.customer_score__c                       AS customer_score,
        raw.account_demographics_territory__c       AS account_demographics_territory,
        raw.account_demographics_upa_state__c       AS account_demographics_upa_state_code,
        raw.account_demographics_upa_state_name__c  AS account_demographics_upa_state_name
    --FROM prod.restricted_safe_common_mart_sales.mart_crm_account acc
    FROM {{ref('mart_crm_account')}} acc
    LEFT JOIN raw_account raw
      ON raw.id = acc.dim_crm_account_id
    
  ), sfdc_accounts_xf AS (

    SELECT *
    --FROM prod.restricted_safe_legacy.sfdc_accounts_xf
    FROM {{ref('sfdc_accounts_xf')}}

  ), sfdc_users_xf AS (

    SELECT *,
       CASE
            WHEN lower(title) like '%strategic account%'
                OR lower(title) like '%account executive%'
                OR lower(title) like '%country manager%'
                OR lower(title) like '%public sector channel manager%'
                THEN 'Rep'
            WHEN lower(title) like '%area sales manager%'
                THEN 'ASM'
            ELSE 'Other'
      END                                       AS title_category
    --FROM prod.workspace_sales.sfdc_users_xf
    FROM {{ref('wk_sales_sfdc_users_xf')}}

  ), report_dates AS (

    SELECT DISTINCT fiscal_year         AS report_fiscal_year,
                    first_day_of_month  AS report_month_date
    FROM prod.workspace_sales.date_details
    CROSS JOIN (SELECT current_date AS today_date)
    WHERE fiscal_year > 2021
        AND month_actual = MONTH(today_date)
        AND date_actual < today_date

  ), account_year_key AS (

    SELECT DISTINCT
      a.dim_crm_account_id AS account_id,
      d.report_fiscal_year,
      d.report_month_date
  FROM dim_crm_account AS a
  CROSS JOIN report_dates AS d

  ), nfy_atr_base AS (

    SELECT 
        dim_crm_account_id      AS account_id,
        report_dates.report_fiscal_year,
        SUM(arr)                AS nfy_atr,
         SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 1
            THEN arr
          ELSE 0
        END)                    AS nfy_q1_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 2
            THEN arr
          ELSE 0
        END)                    AS nfy_q2_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 3
            THEN arr
          ELSE 0
        END)                    AS nfy_q3_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 4
            THEN arr
          ELSE 0
        END)                    AS nfy_q4_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    AND atr.fiscal_year = report_dates.report_fiscal_year + 1
    GROUP BY 1,2
    
), last_12m_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
    
        SUM(arr)                AS last_12m_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.renewal_month < report_dates.report_month_date
    AND atr.renewal_month >= DATEADD(month,-12,report_dates.report_month_date)
    GROUP BY 1,2
    
), fy_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
        SUM(arr)                AS fy_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.fiscal_year = report_dates.report_fiscal_year
    GROUP BY 1,2


-- Rolling 1 year Net ARR
), net_arr_last_12m AS (
  -- net_arr_ttm

    SELECT
      o.account_id,
      d.report_fiscal_year          AS report_fiscal_year,
      SUM(o.net_arr)                AS last_12m_booked_net_arr,   -- ttm_net_arr
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.net_arr
            ELSE 0
          END)          AS last_12m_booked_non_web_net_arr,  -- ttm_non_web_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_web_direct_sourced_net_arr,  --ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_sourced_net_arr,  -- ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_sdr_sourced_net_arr,  -- ttm_sdr_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_ae_sourced_net_arr,  -- ttm_ae_sourced_net_arr
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
               THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_churn_contraction_net_arr,  -- ttm_churn_contraction_net_arr

       -- FO year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_fo_net_arr,  -- ttm_fo_net_arr

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_new_connected_net_arr, -- ttm_new_connected_net_arr

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_growth_net_arr,   --ttm_growth_net_arr

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_direct_net_arr,   --ttm_direct_net_arr

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_net_arr,   --ttm_channel_net_arr

        SUM (CASE
            WHEN o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_deal_count,  --ttm_deal_count

         SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_count,  -- ttm_trx_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 5000)
                        OR o.net_arr > 5000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_5k_count,   -- ttm_trx_over_5k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 10000)
                        OR o.net_arr > 10000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_10k_count,  -- ttm_trx_over_10k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 50000)
                        OR o.net_arr > 50000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_50k_count,  -- ttm_trx_over_50k_count

          SUM (CASE
            WHEN o.is_renewal = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_renewal_deal_count,   -- ttm_renewal_deal_count

        SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
                AND o.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Contract Reset','Contract Reset/Ramp Deal')
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_churn_contraction_deal_count,  -- ttm_churn_contraction_deal_count

          -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_direct_deal_count,  -- ttm_direct_deal_count

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_channel_deal_count  -- ttm_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    CROSS JOIN report_dates AS d
    WHERE o.close_date BETWEEN DATEADD(month, -12,DATE_TRUNC('month',d.report_month_date)) and DATE_TRUNC('month',d.report_month_date)
        AND o.booked_net_arr <> 0
    GROUP BY 1, 2
    
  -- total booked net arr in fy
  ), fy_net_arr AS (

    SELECT
      o.account_id,
      o.close_fiscal_year   AS report_fiscal_year,
      SUM(o.booked_net_arr) AS fy_booked_net_arr,
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.booked_net_arr
            ELSE 0
          END)          AS fy_booked_non_web_booked_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_sdr_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_ae_sourced_net_arr,
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_churn_contraction_net_arr,

        -- First Order year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_fo_net_arr,

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_new_connected_net_arr,

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_growth_net_arr,

        SUM(o.calculated_deal_count)   AS fy_booked_deal_count,

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_direct_net_arr,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_net_arr,

         -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_direct_deal_count,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    WHERE o.booked_net_arr <> 0
    GROUP BY 1,2

  -- Total open pipeline at the same point in previous fiscal years (total open pipe)
  ), op_forward_one_year AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year        AS report_fiscal_year,
      -- net arr pipeline
      SUM(h.net_arr)                AS total_open_pipe,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_open_pipeline,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_open_pipeline,
      
      -- deal count pipeline
      SUM(h.calculated_deal_count)   AS total_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_count_open_deals
      
    FROM sfdc_opportunity_snapshot_xf AS h
    WHERE h.close_date > h.snapshot_date
      AND h.forecast_category_name NOT IN  ('Omitted','Closed')
      AND h.order_type_stamped != '7. PS / Other'
      AND h.net_arr != 0
      AND h.is_eligible_open_pipeline_flag = 1
      GROUP BY 1,2

  -- Last 12 months pipe gen at same point of time in the year
  ), pg_last_12_months AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_last_12m_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_ae_sourced_net_arr,

      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_deal_count,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_channel_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_ae_sourced_deal_count

    FROM sfdc_opportunity_snapshot_xf AS h

    -- pipeline created within the last 12 months
    WHERE
        h.pipeline_created_date > dateadd(month,-12,h.snapshot_date)
      AND h.pipeline_created_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
    GROUP BY 1,2

  -- Pipe generation at the same point in time in the fiscal year
  ), pg_ytd AS (

    SELECT
      h.account_id,
      h.net_arr_created_fiscal_year  AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_ytd_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_ae_sourced_net_arr
    FROM sfdc_opportunity_snapshot_xf AS h
      -- pipeline created within the fiscal year
    WHERE h.snapshot_fiscal_year = h.net_arr_created_fiscal_year
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
      AND h.net_arr > 0
      GROUP BY 1,2

  -- ARR at the same point in time in Fiscal Year
  ), arr_at_same_month AS (

    SELECT
      mrr.dim_crm_account_id AS account_id,
      mrr_date.fiscal_year   AS report_fiscal_year,
  --    ultimate_parent_account_id,
      SUM(mrr.mrr)      AS mrr,
      SUM(mrr.arr)      AS arr,
      SUM(CASE
              WHEN sub.is_channel_arr_flag = 1
                  THEN mrr.arr
              ELSE 0
          END)          AS reseller_arr,
      SUM(CASE
              WHEN  sub.is_channel_arr_flag = 0
                  THEN mrr.arr
              ELSE 0
          END)          AS direct_arr,


      SUM(CASE
              WHEN  (mrr.product_tier_name LIKE '%Starter%'
                      OR mrr.product_tier_name LIKE '%Bronze%')
                  THEN mrr.arr
              ELSE 0
          END)          AS product_starter_arr,


      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Premium%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_premium_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Ultimate%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_ultimate_arr,

      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Self-Managed%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_self_managed_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%SaaS%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_saas_arr

    FROM mart_arr AS mrr
    INNER JOIN date_details AS mrr_date
      ON mrr.arr_month = mrr_date.date_actual
    INNER JOIN dim_subscription AS sub
      ON sub.dim_subscription_id = mrr.dim_subscription_id
    WHERE mrr_date.month_actual =  (SELECT DISTINCT month_actual
                                      FROM date_details
                                      WHERE date_actual = DATE_TRUNC('month', DATEADD(month, -1, CURRENT_DATE)))
    GROUP BY 1,2

), sao_last_12_month AS (
   
  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS last_12m_sao_deal_count,
        SUM(h.net_arr)                  AS last_12m_sao_net_arr,
        SUM(h.booked_net_arr)           AS last_12m_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
        h.sales_accepted_date > dateadd(month,-12,h.snapshot_date)
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), sao_fy AS (      

  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS fy_sao_deal_count,
        SUM(h.net_arr)                  AS fy_sao_net_arr,
        SUM(h.booked_net_arr)           AS fy_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
       h.snapshot_fiscal_year = h.sales_accepted_fiscal_year
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), consolidated_accounts AS (

  SELECT
    ak.report_fiscal_year,
    a.account_id                      AS account_id,
    a.account_name                    AS account_name,
    a.ultimate_parent_account_id      AS upa_id,
    a.ultimate_parent_account_name    AS upa_name,
    a.is_key_account,
    a.abm_tier,
    a.ultimate_parent_account_id,
    u.name                              AS account_owner_name,
    a.owner_id                          AS account_owner_id,
    trim(u.employee_number)             AS account_owner_employee_number,
    upa_owner.name                      AS upa_owner_name,
    upa_owner.user_id                   AS upa_owner_id,
    upa_owner.title_category            AS upa_owner_title_category,
    trim(upa_owner.employee_number)     AS upa_owner_employee_number,
    a.billing_country                   AS account_country,
    a.billing_postal_code               AS account_zip_code,
    mart_crm_account.account_billing_state AS account_state,

    
    -- Account demographics fields
    upa_account.parent_crm_account_sales_segment                    AS parent_crm_account_sales_segment,
    upa_account.parent_crm_account_geo                              AS parent_crm_account_geo,
    upa_account.parent_crm_account_region                           AS parent_crm_account_region,
    upa_account.parent_crm_account_area                             AS parent_crm_account_area,
    upa_account.crm_account_billing_country                         AS crm_account_billing_country,  
    upa_account.parent_crm_account_upa_state                        AS parent_crm_account_upa_state,
    upa_account.parent_crm_account_upa_city                         AS parent_crm_account_upa_city,
    upa_account.parent_crm_account_upa_postal_code                  AS parent_crm_account_upa_postal_code,
    upa_account.parent_crm_account_territory                        AS parent_crm_account_territory,

    
    -- substitute this by key segment
    u.user_geo                                    AS account_user_geo,
    u.user_region                                 AS account_user_region,
    u.user_segment                                AS account_user_segment,
    u.user_area                                   AS account_user_area,
    u.role_name                                   AS account_owner_role,
    u.title_category                              AS account_owner_title_category,
    a.industry                                    AS account_industry,
    upa_owner.user_geo                            AS upa_user_geo,
    upa_owner.user_region                         AS upa_user_region,
    upa_owner.user_segment                        AS upa_user_segment,
    upa_owner.user_area                           AS upa_user_area,
    upa_owner.role_name                           AS upa_user_role,
    upa.industry                                  AS upa_industry,
    
    -- NF: These fields are only useful to calculate LAM Dev Count which is already calculated
    coalesce(mart_crm_account.potential_users, 0)                               AS potential_users,
    coalesce(mart_crm_account.number_of_licenses_this_account, 0)               AS licenses,
    coalesce(mart_crm_account.decision_maker_count_linkedin, 0)                 AS linkedin_developer,
    coalesce(mart_crm_account.crm_account_zoom_info_number_of_developers, 0)    AS zi_developers,
    coalesce(mart_crm_account.zoom_info_company_revenue, 0)                     AS zi_revenue,


    -- LAM Dev count calculated at the UPA level
    upa_account.parent_crm_account_lam_dev_count                       AS upa_lam_dev_count,
    mart_crm_account.public_sector_account_flag,
    mart_crm_account.pubsec_type,
    mart_crm_account.potential_lam_arr,
    coalesce(mart_crm_account.crm_account_employee_count, 0)   AS employees,
    
    COALESCE(mart_crm_account.carr_account_family, 0)                       AS account_family_arr,
    LEAST(50000,GREATEST(coalesce(mart_crm_account.number_of_licenses_this_account,0),COALESCE(mart_crm_account.potential_users, mart_crm_account.decision_maker_count_linkedin, mart_crm_account.crm_account_zoom_info_number_of_developers, 0)))           AS calculated_developer_count,

    -- Account score used to balance patches in maps
    mart_crm_account.customer_score,


    -- TODO: 20221208 They are not called TAMs anymore, this part needs to be refactored
    a.technical_account_manager_date,
    a.technical_account_manager                                             AS technical_account_manager_name,
    CASE
      WHEN mart_crm_account.has_tam_flag
          THEN 1
      ELSE 0
    END                                           AS has_technical_account_manager_flag,

    a.health_score_color                          AS account_health_score_color,
    a.health_number                               AS account_health_number,

    -- atr for current fy
    COALESCE(fy_atr_base.fy_atr,0)           AS fy_atr,
    -- next fiscal year atr base reported at fy
    COALESCE(nfy_atr_base.nfy_atr,0)         AS nfy_atr,
    COALESCE(nfy_atr_base.nfy_q1_atr,0)      AS nfy_q1_atr,
    COALESCE(nfy_atr_base.nfy_q2_atr,0)      AS nfy_q2_atr,
    COALESCE(nfy_atr_base.nfy_q3_atr,0)      AS nfy_q3_atr,
    COALESCE(nfy_atr_base.nfy_q4_atr,0)      AS nfy_q4_atr,
    -- last 12 months ATR
    COALESCE(last_12m_atr_base.last_12m_atr,0)    AS last_12m_atr,

    -- arr by fy
    COALESCE(arr.arr,0)                           AS arr,

    COALESCE(arr.reseller_arr,0)                  AS arr_channel,
    COALESCE(arr.direct_arr,0)                    AS arr_direct,

    COALESCE(arr.product_starter_arr,0)           AS product_starter_arr,
    COALESCE(arr.product_premium_arr,0)           AS product_premium_arr,
    COALESCE(arr.product_ultimate_arr,0)          AS product_ultimate_arr,


    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) > COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_ultimate_customer_flag,

    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) < COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_premium_customer_flag,

    COALESCE(arr.delivery_self_managed_arr,0)     AS delivery_self_managed_arr,
    COALESCE(arr.delivery_saas_arr,0)             AS delivery_saas_arr,

    -- accounts counts
    CASE
      WHEN COALESCE(arr.arr,0) = 0
      THEN 1
      ELSE 0
    END                                           AS is_prospect_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
      THEN 1
      ELSE 0
    END                                           AS is_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 5000
      THEN 1
      ELSE 0
    END                                           AS is_over_5k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 10000
      THEN 1
      ELSE 0
    END                                           AS is_over_10k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 50000
      THEN 1
      ELSE 0
    END                                           AS is_over_50k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 100000
      THEN 1
      ELSE 0
    END                                           AS is_over_100k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 500000
      THEN 1
      ELSE 0
    END                                           AS is_over_500k_customer_flag,

    -- rolling last 12 months booked net arr
    COALESCE(net_arr_last_12m.last_12m_booked_net_arr,0)                       AS last_12m_booked_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_non_web_net_arr,0)               AS last_12m_booked_non_web_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_web_direct_sourced_net_arr,0)    AS last_12m_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)       AS last_12m_booked_channel_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_sdr_sourced_net_arr,0)           AS last_12m_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_ae_sourced_net_arr,0)            AS last_12m_booked_ae_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_net_arr,0)     AS last_12m_booked_churn_contraction_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_fo_net_arr,0)                    AS last_12m_booked_fo_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_new_connected_net_arr,0)         AS last_12m_booked_new_connected_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_growth_net_arr,0)                AS last_12m_booked_growth_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_deal_count,0)                    AS last_12m_booked_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_net_arr,0)                AS last_12m_booked_direct_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)               AS last_12m_booked_channel_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)  - COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)   AS last_12m_booked_channel_co_sell_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_deal_count,0)             AS last_12m_booked_direct_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_deal_count,0)            AS last_12m_booked_channel_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_deal_count,0)  AS last_12m_booked_churn_contraction_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_renewal_deal_count,0)            AS last_12m_booked_renewal_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_count,0)                     AS last_12m_booked_trx_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_5k_count,0)             AS last_12m_booked_trx_over_5k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_10k_count,0)            AS last_12m_booked_trx_over_10k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_50k_count,0)            AS last_12m_booked_trx_over_50k_count,

    -- fy booked net arr
    COALESCE(net_arr_fiscal.fy_booked_net_arr,0)                     AS fy_booked_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_web_direct_sourced_net_arr,0)  AS fy_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_sourced_net_arr,0)     AS fy_booked_channel_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_sdr_sourced_net_arr,0)         AS fy_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_ae_sourced_net_arr,0)          AS fy_booked_ae_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_churn_contraction_net_arr,0)   AS fy_booked_churn_contraction_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_fo_net_arr,0)                  AS fy_booked_fo_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_new_connected_net_arr,0)       AS fy_booked_new_connected_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_growth_net_arr,0)              AS fy_booked_growth_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_deal_count,0)                  AS fy_booked_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_direct_net_arr,0)              AS fy_booked_direct_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_net_arr,0)             AS fy_booked_channel_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_direct_deal_count,0)           AS fy_booked_direct_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_channel_deal_count,0)          AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    COALESCE(op.total_open_pipe,0)                  AS total_open_pipe,
    COALESCE(op.total_count_open_deals,0)           AS total_count_open_deals_pipe,
    COALESCE(op.nfy_open_pipeline,0)                AS nfy_open_pipeline,
    COALESCE(op.fy_open_pipeline,0)                 AS fy_open_pipeline,
    COALESCE(op.nfy_count_open_deals,0)             AS nfy_count_open_deals,
    COALESCE(op.fy_count_open_deals,0)              AS fy_count_open_deals,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS customer_has_open_pipe_flag,

    CASE
      WHEN COALESCE(arr.arr,0) = 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS prospect_has_open_pipe_flag,

    -- pipe generation
    COALESCE(pg.pg_ytd_net_arr,0)                             AS pg_ytd_net_arr,
    COALESCE(pg.pg_ytd_web_direct_sourced_net_arr,0)          AS pg_ytd_web_direct_sourced_net_arr,
    COALESCE(pg.pg_ytd_channel_sourced_net_arr,0)             AS pg_ytd_channel_sourced_net_arr,
    COALESCE(pg.pg_ytd_sdr_sourced_net_arr,0)                 AS pg_ytd_sdr_sourced_net_arr,
    COALESCE(pg.pg_ytd_ae_sourced_net_arr,0)                  AS pg_ytd_ae_sourced_net_arr,

    COALESCE(pg_ly.pg_last_12m_net_arr,0)                     AS pg_last_12m_net_arr,
    COALESCE(pg_ly.pg_last_12m_web_direct_sourced_net_arr,0)  AS pg_last_12m_web_direct_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_channel_sourced_net_arr,0)     AS pg_last_12m_channel_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_sdr_sourced_net_arr,0)         AS pg_last_12m_sdr_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_ae_sourced_net_arr,0)          AS pg_last_12m_ae_sourced_net_arr,

    COALESCE(pg_last_12m_web_direct_sourced_deal_count,0)     AS pg_last_12m_web_direct_sourced_deal_count,
    COALESCE(pg_last_12m_channel_sourced_deal_count,0)        AS pg_last_12m_channel_sourced_deal_count,
    COALESCE(pg_last_12m_sdr_sourced_deal_count,0)            AS pg_last_12m_sdr_sourced_deal_count,
    COALESCE(pg_last_12m_ae_sourced_deal_count,0)             AS pg_last_12m_ae_sourced_deal_count,
    
    -- SAO metrics
    COALESCE(sao_last_12_month.last_12m_sao_deal_count,0)       AS last_12m_sao_deal_count,
    COALESCE(sao_last_12_month.last_12m_sao_net_arr,0)          AS last_12m_sao_net_arr,
    COALESCE(sao_last_12_month.last_12m_sao_booked_net_arr,0)   AS last_12m_sao_booked_net_arr, 
    COALESCE(sao_fy.fy_sao_deal_count,0)                        AS fy_sao_deal_count,
    COALESCE(sao_fy.fy_sao_net_arr,0)                           AS fy_sao_net_arr,
    COALESCE(sao_fy.fy_sao_booked_net_arr,0)                    AS fy_sao_booked_net_arr,
    
     -- LAM Dev Count Category
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN '0. <100'    
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN '1. [100-250)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN '2. [250-500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN '3. [500-1500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN '4. [1500-2500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN '5. [2500-3500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN '6. [3500-5000)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN '7. >5000'
    END AS lam_dev_count_bin_name,
    
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN 0
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN 100
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN 250
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN 500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN 1500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN 2500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN 3500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN 5000
    END AS lam_dev_count_bin_rank,      
    
    -- Public Sector
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 'Public'
        ELSE 'Private'
    END                     AS sector_type,
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 1
        ELSE 0
    END                     AS is_public_sector_flag

  FROM account_year_key AS ak
  INNER JOIN sfdc_accounts_xf AS a
    ON ak.account_id = a.account_id
  LEFT JOIN mart_crm_account AS upa_account
    ON a.ultimate_parent_account_id = upa_account.dim_crm_account_id
  LEFT JOIN sfdc_accounts_xf AS upa
    ON a.ultimate_parent_account_id = upa.account_id
  LEFT JOIN dim_crm_account AS dim_account
    ON ak.account_id = dim_account.dim_crm_account_id
  LEFT JOIN mart_crm_account
    ON ak.account_id = mart_crm_account.dim_crm_account_id
  LEFT JOIN sfdc_users_xf AS u
    ON a.owner_id = u.user_id
  LEFT JOIN sfdc_users_xf AS upa_owner
    ON upa.owner_id = upa_owner.user_id
  LEFT JOIN fy_atr_base
    ON fy_atr_base.account_id = ak.account_id
    AND fy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN last_12m_atr_base AS last_12m_atr_base
    ON last_12m_atr_base.account_id = ak.account_id
    AND last_12m_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN nfy_atr_base
    ON nfy_atr_base.account_id = ak.account_id
    AND nfy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN net_arr_last_12m
    ON net_arr_last_12m.account_id = ak.account_id
    AND net_arr_last_12m.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN op_forward_one_year AS op
    ON op.account_id = ak.account_id
    AND op.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_ytd AS pg
    ON pg.account_id = ak.account_id
    AND pg.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_last_12_months AS pg_ly
    ON pg_ly.account_id = ak.account_id
    AND pg_ly.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN arr_at_same_month AS arr
    ON arr.account_id = ak.account_id
    AND arr.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN fy_net_arr AS net_arr_fiscal
    ON net_arr_fiscal.account_id = ak.account_id
    AND net_arr_fiscal.report_fiscal_year = ak.report_fiscal_year
  -- SAOs
  LEFT JOIN sao_last_12_month 
    ON sao_last_12_month.account_id = ak.account_id
    AND sao_last_12_month.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN sao_fy
    ON sao_fy.account_id = ak.account_id
    AND sao_fy.report_fiscal_year = ak.report_fiscal_year

    -----------------------
-- Adjust for hierarchies split between different geos
), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    parent_crm_account_upa_state              AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM consolidated_accounts
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM consolidated_accounts child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM consolidated_accounts final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final
------------------------

), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_state 
        ELSE acc.parent_crm_account_upa_state
    END                                     AS upa_ad_state,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,
    
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,

    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    
    -- Customer score used in maps for account visualization
    MAX(acc.customer_score) AS customer_score,
    
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM consolidated_accounts acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)
, final AS (

  SELECT
      
    acc.*, 
    
    CASE 
      WHEN upa.arr > 0 AND upa.arr < 5000
        THEN '1. 0-5k ARR'
      WHEN upa.arr >= 5000 AND upa.arr < 10000
        THEN '2. 0-10k ARR'
      WHEN upa.arr >= 10000 AND upa.arr < 50000
        THEN '3. 10k-50k ARR'
      WHEN upa.arr >= 50000 AND upa.arr < 100000
        THEN '4. 50K-100k ARR'
      WHEN upa.arr >= 100000 AND upa.arr < 500000
        THEN '5. 100k-500k ARR'
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '6. 500k-1M ARR'     
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '7. >=1M ARR' 
      ELSE 'n/a'
    END    AS account_family_arr_bin_name,
    
    COALESCE(upa.potential_users,0)                 AS upa_potential_users,
    COALESCE(upa.licenses,0)                        AS upa_licenses,
    COALESCE(upa.linkedin_developer,0)              AS upa_linkedin_developer,
    COALESCE(upa.zi_developers,0)                   AS upa_zi_developers,
    COALESCE(upa.zi_revenue,0)                      AS upa_zi_revenue,
    COALESCE(upa.employees,0)                       AS upa_employees,
    COALESCE(upa.count_of_customers,0)              AS upa_count_of_customers,

    CASE
        WHEN upa.upa_id = acc.account_id
            THEN 1
        ELSE 0
    END                                     AS is_upa_flag,

    upa.is_customer_flag                    AS hierarchy_is_customer_flag,
    
    COALESCE(virtual.virtual_upa_id,acc.upa_id)                             AS virtual_upa_id,
    COALESCE(virtual.virtual_upa_name,acc.upa_name)                         AS virtual_upa_name,
    COALESCE(virtual.virtual_upa_segment,acc.parent_crm_account_sales_segment)                AS virtual_upa_ad_segment,
    COALESCE(virtual.virtual_upa_geo,acc.upa_user_geo)                      AS virtual_upa_geo,
    COALESCE(virtual.virtual_upa_region,acc.upa_user_region)                AS virtual_upa_region,
    COALESCE(virtual.virtual_upa_area,acc.upa_user_area)                    AS virtual_upa_area,
    COALESCE(virtual.virtual_upa_country,acc.crm_account_billing_country)   AS virtual_upa_ad_country,
    COALESCE(virtual.virtual_upa_state,acc.parent_crm_account_upa_state)    AS virtual_upa_ad_state,
    COALESCE(virtual.virtual_upa_zip_code,acc.parent_crm_account_upa_postal_code) AS virtual_upa_ad_zip_code,
    COALESCE(virtual.virtual_upa_industry,acc.upa_industry)                 AS virtual_upa_industry,
    COALESCE(virtual.virtual_upa_owner_name,acc.upa_owner_name)             AS virtual_upa_owner_name,
    COALESCE(virtual.virtual_upa_owner_title_category,acc.upa_owner_title_category)   AS virtual_upa_owner_title_category,
    COALESCE(virtual.virtual_upa_owner_id,acc.upa_owner_id)                 AS virtual_upa_owner_id, 
    CASE 
        WHEN virtual.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                                                     AS virtual_upa_type

  FROM consolidated_accounts acc
    LEFT JOIN consolidated_upa upa
        ON upa.upa_id = acc.upa_id
        AND upa.report_fiscal_year = acc.report_fiscal_year
    LEFT JOIN final_virtual_upa virtual
        ON virtual.account_id = acc.account_id
        AND virtual.report_fiscal_year = acc.report_fiscal_year

)

SELECT *
FROM final14:Tf47c,

-- TODO: 20221208 TAM fields need to refactored as they are not called TAM anymore

WITH date_details AS (

    SELECT *
    --FROM  prod.workspace_sales.date_details
    FROM "PROD".workspace_sales.date_details

 ), sfdc_opportunity_xf AS (

    SELECT *
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_xf
    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_xf
    WHERE is_deleted = 0
      AND is_edu_oss = 0
      AND is_jihu_account = 0

 ), sfdc_opportunity_snapshot_xf AS (

    SELECT h.*
    --FROM prod.restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf AS h
    FROM "PROD".restricted_safe_workspace_sales.sfdc_opportunity_snapshot_history_xf h
    INNER JOIN date_details snapshot_date
      ON snapshot_date.date_actual = h.snapshot_date
    WHERE h.is_deleted = 0
      AND h.is_edu_oss = 0
      AND h.is_jihu_account = 0
      -- same day of FY across years
      AND snapshot_date.day_of_fiscal_year_normalised = (SELECT DISTINCT day_of_fiscal_year_normalised
                                                          FROM date_details
                                                          WHERE date_actual = DATEADD(day, -2, CURRENT_DATE))
 ), mart_available_to_renew AS (

    SELECT renew.*,
        renew_date.first_day_of_fiscal_quarter  AS renew_fiscal_quarter_date,
        renew_date.fiscal_quarter_name_fy       AS renew_fiscal_quarter_name,
        renew_date.fiscal_quarter               AS renew_fiscal_quarter_number
    FROM "PROD".restricted_safe_common_mart_finance.mart_available_to_renew renew
    --FROM prod.restricted_safe_common_mart_finance.mart_available_to_renew
    LEFT JOIN date_details renew_date
        ON renew_date.date_actual = renew.renewal_month
    
 ), dim_subscription AS (

    SELECT
      dim_subscription_id,
      CASE
          WHEN dim_billing_account_id_invoice_owner_account != dim_billing_account_id
              THEN 1
          ELSE 0
      END AS is_channel_arr_flag
    --FROM prod.common.dim_subscription
    FROM "PROD".common.dim_subscription

 ), mart_arr AS (

    SELECT *
    --FROM prod.restricted_safe_common_mart_sales.mart_arr
    FROM "PROD".restricted_safe_common_mart_sales.mart_arr   

  ), raw_account AS (
  
    SELECT *
    FROM "RAW".salesforce_stitch.account
    --FROM raw.salesforce_stitch.account 

  -- missing fields in mart crm account so adding dim_crm_account cte here on top of the mart below
  ), dim_crm_account AS (

    SELECT *
    --FROM prod.restricted_safe_common.dim_crm_account
    FROM "PROD".restricted_safe_common.dim_crm_account

    -- missing fields in dim_crm_account so adding raw account here
  -- has_tam__c
  -- PUBLIC_SECTOR_ACCOUNT__C,
  -- PUBSEC_TYPE__C,
  -- POTENTIAL_ARR_LAM__C
  -- BILLINGSTATE
  -- customer_score__c
  ), mart_crm_account AS (

    SELECT acc.*,
        raw.has_tam__c                              AS has_tam_flag,
        raw.public_sector_account__c                AS public_sector_account_flag,
        raw.pubsec_type__c                          AS pubsec_type,
        raw.lam_tier__c                             AS potential_lam_arr,
        raw.billingstatecode                        AS account_billing_state,
        raw.customer_score__c                       AS customer_score,
        raw.account_demographics_territory__c       AS account_demographics_territory,
        raw.account_demographics_upa_state__c       AS account_demographics_upa_state_code,
        raw.account_demographics_upa_state_name__c  AS account_demographics_upa_state_name
    --FROM prod.restricted_safe_common_mart_sales.mart_crm_account acc
    FROM "PROD".restricted_safe_common_mart_sales.mart_crm_account acc
    LEFT JOIN raw_account raw
      ON raw.id = acc.dim_crm_account_id
    
  ), sfdc_accounts_xf AS (

    SELECT *
    --FROM prod.restricted_safe_legacy.sfdc_accounts_xf
    FROM "PROD".restricted_safe_legacy.sfdc_accounts_xf

  ), sfdc_users_xf AS (

    SELECT *,
       CASE
            WHEN lower(title) like '%strategic account%'
                OR lower(title) like '%account executive%'
                OR lower(title) like '%country manager%'
                OR lower(title) like '%public sector channel manager%'
                THEN 'Rep'
            WHEN lower(title) like '%area sales manager%'
                THEN 'ASM'
            ELSE 'Other'
      END                                       AS title_category
    --FROM prod.workspace_sales.sfdc_users_xf
    FROM "PROD".workspace_sales.sfdc_users_xf

  ), report_dates AS (

    SELECT DISTINCT fiscal_year         AS report_fiscal_year,
                    first_day_of_month  AS report_month_date
    FROM prod.workspace_sales.date_details
    CROSS JOIN (SELECT current_date AS today_date)
    WHERE fiscal_year > 2021
        AND month_actual = MONTH(today_date)
        AND date_actual < today_date

  ), account_year_key AS (

    SELECT DISTINCT
      a.dim_crm_account_id AS account_id,
      d.report_fiscal_year,
      d.report_month_date
  FROM dim_crm_account AS a
  CROSS JOIN report_dates AS d

  ), nfy_atr_base AS (

    SELECT 
        dim_crm_account_id      AS account_id,
        report_dates.report_fiscal_year,
        SUM(arr)                AS nfy_atr,
         SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 1
            THEN arr
          ELSE 0
        END)                    AS nfy_q1_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 2
            THEN arr
          ELSE 0
        END)                    AS nfy_q2_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 3
            THEN arr
          ELSE 0
        END)                    AS nfy_q3_atr,
        SUM(CASE
          WHEN atr.renew_fiscal_quarter_number = 4
            THEN arr
          ELSE 0
        END)                    AS nfy_q4_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    AND atr.fiscal_year = report_dates.report_fiscal_year + 1
    GROUP BY 1,2
    
), last_12m_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
    
        SUM(arr)                AS last_12m_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.renewal_month < report_dates.report_month_date
    AND atr.renewal_month >= DATEADD(month,-12,report_dates.report_month_date)
    GROUP BY 1,2
    
), fy_atr_base AS (

    SELECT dim_crm_account_id   AS account_id,
        report_dates.report_fiscal_year,
        COUNT(DISTINCT atr.renewal_month) AS count_unique_months,
        SUM(arr)                AS fy_atr
    FROM mart_available_to_renew atr
    CROSS JOIN report_dates
    WHERE is_available_to_renew = 1
    --AND renewal_type = 'Non-MYB'
    AND atr.fiscal_year = report_dates.report_fiscal_year
    GROUP BY 1,2


-- Rolling 1 year Net ARR
), net_arr_last_12m AS (
  -- net_arr_ttm

    SELECT
      o.account_id,
      d.report_fiscal_year          AS report_fiscal_year,
      SUM(o.net_arr)                AS last_12m_booked_net_arr,   -- ttm_net_arr
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.net_arr
            ELSE 0
          END)          AS last_12m_booked_non_web_net_arr,  -- ttm_non_web_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_web_direct_sourced_net_arr,  --ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_sourced_net_arr,  -- ttm_web_direct_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_sdr_sourced_net_arr,  -- ttm_sdr_sourced_net_arr
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_ae_sourced_net_arr,  -- ttm_ae_sourced_net_arr
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
               THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_churn_contraction_net_arr,  -- ttm_churn_contraction_net_arr

       -- FO year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_fo_net_arr,  -- ttm_fo_net_arr

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_new_connected_net_arr, -- ttm_new_connected_net_arr

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_growth_net_arr,   --ttm_growth_net_arr

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_direct_net_arr,   --ttm_direct_net_arr

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.net_arr
            ELSE 0 END) AS last_12m_booked_channel_net_arr,   --ttm_channel_net_arr

        SUM (CASE
            WHEN o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_deal_count,  --ttm_deal_count

         SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_count,  -- ttm_trx_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 5000)
                        OR o.net_arr > 5000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_5k_count,   -- ttm_trx_over_5k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 10000)
                        OR o.net_arr > 10000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_10k_count,  -- ttm_trx_over_10k_count

          SUM (CASE
            WHEN (o.is_won = 1
                  OR (o.is_renewal = 1 AND o.is_lost = 1))
                AND ((o.is_renewal = 1 AND o.arr_basis > 50000)
                        OR o.net_arr > 50000)
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_trx_over_50k_count,  -- ttm_trx_over_50k_count

          SUM (CASE
            WHEN o.is_renewal = 1
            THEN o.calculated_deal_count
            ELSE 0 END )   AS last_12m_booked_renewal_deal_count,   -- ttm_renewal_deal_count

        SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
                AND o.opportunity_category IN ('Standard','Internal Correction','Ramp Deal','Contract Reset','Contract Reset/Ramp Deal')
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_churn_contraction_deal_count,  -- ttm_churn_contraction_deal_count

          -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_direct_deal_count,  -- ttm_direct_deal_count

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
                AND o.is_won = 1
            THEN o.calculated_deal_count
            ELSE 0 END) AS last_12m_booked_channel_deal_count  -- ttm_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    CROSS JOIN report_dates AS d
    WHERE o.close_date BETWEEN DATEADD(month, -12,DATE_TRUNC('month',d.report_month_date)) and DATE_TRUNC('month',d.report_month_date)
        AND o.booked_net_arr <> 0
    GROUP BY 1, 2
    
  -- total booked net arr in fy
  ), fy_net_arr AS (

    SELECT
      o.account_id,
      o.close_fiscal_year   AS report_fiscal_year,
      SUM(o.booked_net_arr) AS fy_booked_net_arr,
      SUM(CASE
            WHEN  o.sales_qualified_source != 'Web Direct Generated'
              THEN o.booked_net_arr
            ELSE 0
          END)          AS fy_booked_non_web_booked_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'Web Direct Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (o.sales_qualified_source = 'Partner Generated' OR o.sales_qualified_source = 'Partner Generated')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'SDR Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_sdr_sourced_net_arr,
      SUM(CASE
            WHEN o.sales_qualified_source = 'AE Generated'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_ae_sourced_net_arr,
      SUM(CASE
            WHEN o.is_eligible_churn_contraction_flag = 1
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_churn_contraction_net_arr,

        -- First Order year
        SUM(CASE
            WHEN o.order_type_stamped = '1. New - First Order'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_fo_net_arr,

        -- New Connected year
        SUM(CASE
            WHEN o.order_type_stamped = '2. New - Connected'
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_new_connected_net_arr,

        -- Growth year
        SUM(CASE
            WHEN o.order_type_stamped NOT IN ('2. New - Connected','1. New - First Order')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_growth_net_arr,

        SUM(o.calculated_deal_count)   AS fy_booked_deal_count,

        -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_direct_net_arr,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.booked_net_arr
            ELSE 0 END) AS fy_booked_channel_net_arr,

         -- deal path direct year
        SUM(CASE
            WHEN (o.deal_path != 'Channel' AND o.deal_path != 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_direct_deal_count,

        -- deal path channel year
        SUM(CASE
            WHEN (o.deal_path = 'Channel' OR o.deal_path = 'Partner')
            THEN o.calculated_deal_count
            ELSE 0 END) AS fy_booked_channel_deal_count

    FROM sfdc_opportunity_xf AS o
    WHERE o.booked_net_arr <> 0
    GROUP BY 1,2

  -- Total open pipeline at the same point in previous fiscal years (total open pipe)
  ), op_forward_one_year AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year        AS report_fiscal_year,
      -- net arr pipeline
      SUM(h.net_arr)                AS total_open_pipe,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_open_pipeline,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_open_pipeline,
      
      -- deal count pipeline
      SUM(h.calculated_deal_count)   AS total_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year + 1
                  THEN h.net_arr
              ELSE 0
          END)                      AS nfy_count_open_deals,
      SUM(CASE 
              WHEN h.close_fiscal_year = h.snapshot_fiscal_year
                  THEN h.net_arr
              ELSE 0
          END)                       AS fy_count_open_deals
      
    FROM sfdc_opportunity_snapshot_xf AS h
    WHERE h.close_date > h.snapshot_date
      AND h.forecast_category_name NOT IN  ('Omitted','Closed')
      AND h.order_type_stamped != '7. PS / Other'
      AND h.net_arr != 0
      AND h.is_eligible_open_pipeline_flag = 1
      GROUP BY 1,2

  -- Last 12 months pipe gen at same point of time in the year
  ), pg_last_12_months AS (

    SELECT
      h.account_id,
      h.snapshot_fiscal_year AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_last_12m_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END)              AS pg_last_12m_ae_sourced_net_arr,

      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_web_direct_sourced_deal_count,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_channel_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_sdr_sourced_deal_count,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.calculated_deal_count
            ELSE 0 END)              AS pg_last_12m_ae_sourced_deal_count

    FROM sfdc_opportunity_snapshot_xf AS h

    -- pipeline created within the last 12 months
    WHERE
        h.pipeline_created_date > dateadd(month,-12,h.snapshot_date)
      AND h.pipeline_created_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
    GROUP BY 1,2

  -- Pipe generation at the same point in time in the fiscal year
  ), pg_ytd AS (

    SELECT
      h.account_id,
      h.net_arr_created_fiscal_year  AS report_fiscal_year,
      SUM(h.net_arr)                 AS pg_ytd_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'Web Direct Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_web_direct_sourced_net_arr,
      SUM(CASE
            WHEN (h.sales_qualified_source = 'Partner Generated' OR h.sales_qualified_source = 'Partner Generated')
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_channel_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'SDR Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_sdr_sourced_net_arr,
      SUM(CASE
            WHEN h.sales_qualified_source = 'AE Generated'
            THEN h.net_arr
            ELSE 0 END) AS pg_ytd_ae_sourced_net_arr
    FROM sfdc_opportunity_snapshot_xf AS h
      -- pipeline created within the fiscal year
    WHERE h.snapshot_fiscal_year = h.net_arr_created_fiscal_year
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_created_pipeline_flag = 1
      AND h.net_arr > 0
      GROUP BY 1,2

  -- ARR at the same point in time in Fiscal Year
  ), arr_at_same_month AS (

    SELECT
      mrr.dim_crm_account_id AS account_id,
      mrr_date.fiscal_year   AS report_fiscal_year,
  --    ultimate_parent_account_id,
      SUM(mrr.mrr)      AS mrr,
      SUM(mrr.arr)      AS arr,
      SUM(CASE
              WHEN sub.is_channel_arr_flag = 1
                  THEN mrr.arr
              ELSE 0
          END)          AS reseller_arr,
      SUM(CASE
              WHEN  sub.is_channel_arr_flag = 0
                  THEN mrr.arr
              ELSE 0
          END)          AS direct_arr,


      SUM(CASE
              WHEN  (mrr.product_tier_name LIKE '%Starter%'
                      OR mrr.product_tier_name LIKE '%Bronze%')
                  THEN mrr.arr
              ELSE 0
          END)          AS product_starter_arr,


      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Premium%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_premium_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Ultimate%'
                  THEN mrr.arr
              ELSE 0
          END)          AS product_ultimate_arr,

      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%Self-Managed%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_self_managed_arr,
      SUM(CASE
              WHEN  mrr.product_tier_name LIKE '%SaaS%'
                  THEN mrr.arr
              ELSE 0
          END)          AS delivery_saas_arr

    FROM mart_arr AS mrr
    INNER JOIN date_details AS mrr_date
      ON mrr.arr_month = mrr_date.date_actual
    INNER JOIN dim_subscription AS sub
      ON sub.dim_subscription_id = mrr.dim_subscription_id
    WHERE mrr_date.month_actual =  (SELECT DISTINCT month_actual
                                      FROM date_details
                                      WHERE date_actual = DATE_TRUNC('month', DATEADD(month, -1, CURRENT_DATE)))
    GROUP BY 1,2

), sao_last_12_month AS (
   
  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS last_12m_sao_deal_count,
        SUM(h.net_arr)                  AS last_12m_sao_net_arr,
        SUM(h.booked_net_arr)           AS last_12m_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
        h.sales_accepted_date > dateadd(month,-12,h.snapshot_date)
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), sao_fy AS (      

  SELECT 
        h.sales_accepted_fiscal_year   AS report_fiscal_year,
        h.account_id,
        SUM(h.calculated_deal_count)    AS fy_sao_deal_count,
        SUM(h.net_arr)                  AS fy_sao_net_arr,
        SUM(h.booked_net_arr)           AS fy_sao_booked_net_arr       
        
  FROM sfdc_opportunity_snapshot_xf AS h
    WHERE
       h.snapshot_fiscal_year = h.sales_accepted_fiscal_year
      AND h.sales_accepted_date <= h.snapshot_date
      AND h.order_type_stamped != '7. PS / Other'
      AND h.is_eligible_sao_flag = 1
      AND h.is_renewal = 0
    GROUP BY 1,2
    
), consolidated_accounts AS (

  SELECT
    ak.report_fiscal_year,
    a.account_id                      AS account_id,
    a.account_name                    AS account_name,
    a.ultimate_parent_account_id      AS upa_id,
    a.ultimate_parent_account_name    AS upa_name,
    a.is_key_account,
    a.abm_tier,
    a.ultimate_parent_account_id,
    u.name                              AS account_owner_name,
    a.owner_id                          AS account_owner_id,
    trim(u.employee_number)             AS account_owner_employee_number,
    upa_owner.name                      AS upa_owner_name,
    upa_owner.user_id                   AS upa_owner_id,
    upa_owner.title_category            AS upa_owner_title_category,
    trim(upa_owner.employee_number)     AS upa_owner_employee_number,
    a.billing_country                   AS account_country,
    a.billing_postal_code               AS account_zip_code,
    mart_crm_account.account_billing_state AS account_state,

    
    -- Account demographics fields
    upa_account.parent_crm_account_sales_segment                    AS parent_crm_account_sales_segment,
    upa_account.parent_crm_account_geo                              AS parent_crm_account_geo,
    upa_account.parent_crm_account_region                           AS parent_crm_account_region,
    upa_account.parent_crm_account_area                             AS parent_crm_account_area,
    upa_account.crm_account_billing_country                         AS crm_account_billing_country,  
    upa_account.parent_crm_account_upa_state                        AS parent_crm_account_upa_state,
    upa_account.parent_crm_account_upa_city                         AS parent_crm_account_upa_city,
    upa_account.parent_crm_account_upa_postal_code                  AS parent_crm_account_upa_postal_code,
    upa_account.parent_crm_account_territory                        AS parent_crm_account_territory,

    
    -- substitute this by key segment
    u.user_geo                                    AS account_user_geo,
    u.user_region                                 AS account_user_region,
    u.user_segment                                AS account_user_segment,
    u.user_area                                   AS account_user_area,
    u.role_name                                   AS account_owner_role,
    u.title_category                              AS account_owner_title_category,
    a.industry                                    AS account_industry,
    upa_owner.user_geo                            AS upa_user_geo,
    upa_owner.user_region                         AS upa_user_region,
    upa_owner.user_segment                        AS upa_user_segment,
    upa_owner.user_area                           AS upa_user_area,
    upa_owner.role_name                           AS upa_user_role,
    upa.industry                                  AS upa_industry,
    
    -- NF: These fields are only useful to calculate LAM Dev Count which is already calculated
    coalesce(mart_crm_account.potential_users, 0)                               AS potential_users,
    coalesce(mart_crm_account.number_of_licenses_this_account, 0)               AS licenses,
    coalesce(mart_crm_account.decision_maker_count_linkedin, 0)                 AS linkedin_developer,
    coalesce(mart_crm_account.crm_account_zoom_info_number_of_developers, 0)    AS zi_developers,
    coalesce(mart_crm_account.zoom_info_company_revenue, 0)                     AS zi_revenue,


    -- LAM Dev count calculated at the UPA level
    upa_account.parent_crm_account_lam_dev_count                       AS upa_lam_dev_count,
    mart_crm_account.public_sector_account_flag,
    mart_crm_account.pubsec_type,
    mart_crm_account.potential_lam_arr,
    coalesce(mart_crm_account.crm_account_employee_count, 0)   AS employees,
    
    COALESCE(mart_crm_account.carr_account_family, 0)                       AS account_family_arr,
    LEAST(50000,GREATEST(coalesce(mart_crm_account.number_of_licenses_this_account,0),COALESCE(mart_crm_account.potential_users, mart_crm_account.decision_maker_count_linkedin, mart_crm_account.crm_account_zoom_info_number_of_developers, 0)))           AS calculated_developer_count,

    -- Account score used to balance patches in maps
    mart_crm_account.customer_score,


    -- TODO: 20221208 They are not called TAMs anymore, this part needs to be refactored
    a.technical_account_manager_date,
    a.technical_account_manager                                             AS technical_account_manager_name,
    CASE
      WHEN mart_crm_account.has_tam_flag
          THEN 1
      ELSE 0
    END                                           AS has_technical_account_manager_flag,

    a.health_score_color                          AS account_health_score_color,
    a.health_number                               AS account_health_number,

    -- atr for current fy
    COALESCE(fy_atr_base.fy_atr,0)           AS fy_atr,
    -- next fiscal year atr base reported at fy
    COALESCE(nfy_atr_base.nfy_atr,0)         AS nfy_atr,
    COALESCE(nfy_atr_base.nfy_q1_atr,0)      AS nfy_q1_atr,
    COALESCE(nfy_atr_base.nfy_q2_atr,0)      AS nfy_q2_atr,
    COALESCE(nfy_atr_base.nfy_q3_atr,0)      AS nfy_q3_atr,
    COALESCE(nfy_atr_base.nfy_q4_atr,0)      AS nfy_q4_atr,
    -- last 12 months ATR
    COALESCE(last_12m_atr_base.last_12m_atr,0)    AS last_12m_atr,

    -- arr by fy
    COALESCE(arr.arr,0)                           AS arr,

    COALESCE(arr.reseller_arr,0)                  AS arr_channel,
    COALESCE(arr.direct_arr,0)                    AS arr_direct,

    COALESCE(arr.product_starter_arr,0)           AS product_starter_arr,
    COALESCE(arr.product_premium_arr,0)           AS product_premium_arr,
    COALESCE(arr.product_ultimate_arr,0)          AS product_ultimate_arr,


    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) > COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_ultimate_customer_flag,

    CASE
      WHEN COALESCE(arr.product_ultimate_arr,0) < COALESCE(arr.product_starter_arr,0) + COALESCE(arr.product_premium_arr,0)
          THEN 1
      ELSE 0
    END                                           AS is_premium_customer_flag,

    COALESCE(arr.delivery_self_managed_arr,0)     AS delivery_self_managed_arr,
    COALESCE(arr.delivery_saas_arr,0)             AS delivery_saas_arr,

    -- accounts counts
    CASE
      WHEN COALESCE(arr.arr,0) = 0
      THEN 1
      ELSE 0
    END                                           AS is_prospect_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
      THEN 1
      ELSE 0
    END                                           AS is_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 5000
      THEN 1
      ELSE 0
    END                                           AS is_over_5k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 10000
      THEN 1
      ELSE 0
    END                                           AS is_over_10k_customer_flag,
    CASE
      WHEN COALESCE(arr.arr,0) > 50000
      THEN 1
      ELSE 0
    END                                           AS is_over_50k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 100000
      THEN 1
      ELSE 0
    END                                           AS is_over_100k_customer_flag,

    CASE
      WHEN COALESCE(arr.arr,0) > 500000
      THEN 1
      ELSE 0
    END                                           AS is_over_500k_customer_flag,

    -- rolling last 12 months booked net arr
    COALESCE(net_arr_last_12m.last_12m_booked_net_arr,0)                       AS last_12m_booked_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_non_web_net_arr,0)               AS last_12m_booked_non_web_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_web_direct_sourced_net_arr,0)    AS last_12m_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)       AS last_12m_booked_channel_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_sdr_sourced_net_arr,0)           AS last_12m_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_ae_sourced_net_arr,0)            AS last_12m_booked_ae_sourced_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_net_arr,0)     AS last_12m_booked_churn_contraction_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_fo_net_arr,0)                    AS last_12m_booked_fo_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_new_connected_net_arr,0)         AS last_12m_booked_new_connected_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_growth_net_arr,0)                AS last_12m_booked_growth_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_deal_count,0)                    AS last_12m_booked_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_net_arr,0)                AS last_12m_booked_direct_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)               AS last_12m_booked_channel_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_net_arr,0)  - COALESCE(net_arr_last_12m.last_12m_booked_channel_sourced_net_arr,0)   AS last_12m_booked_channel_co_sell_net_arr,
    COALESCE(net_arr_last_12m.last_12m_booked_direct_deal_count,0)             AS last_12m_booked_direct_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_channel_deal_count,0)            AS last_12m_booked_channel_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_churn_contraction_deal_count,0)  AS last_12m_booked_churn_contraction_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_renewal_deal_count,0)            AS last_12m_booked_renewal_deal_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_count,0)                     AS last_12m_booked_trx_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_5k_count,0)             AS last_12m_booked_trx_over_5k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_10k_count,0)            AS last_12m_booked_trx_over_10k_count,
    COALESCE(net_arr_last_12m.last_12m_booked_trx_over_50k_count,0)            AS last_12m_booked_trx_over_50k_count,

    -- fy booked net arr
    COALESCE(net_arr_fiscal.fy_booked_net_arr,0)                     AS fy_booked_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_web_direct_sourced_net_arr,0)  AS fy_booked_web_direct_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_sourced_net_arr,0)     AS fy_booked_channel_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_sdr_sourced_net_arr,0)         AS fy_booked_sdr_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_ae_sourced_net_arr,0)          AS fy_booked_ae_sourced_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_churn_contraction_net_arr,0)   AS fy_booked_churn_contraction_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_fo_net_arr,0)                  AS fy_booked_fo_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_new_connected_net_arr,0)       AS fy_booked_new_connected_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_growth_net_arr,0)              AS fy_booked_growth_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_deal_count,0)                  AS fy_booked_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_direct_net_arr,0)              AS fy_booked_direct_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_channel_net_arr,0)             AS fy_booked_channel_net_arr,
    COALESCE(net_arr_fiscal.fy_booked_direct_deal_count,0)           AS fy_booked_direct_deal_count,
    COALESCE(net_arr_fiscal.fy_booked_channel_deal_count,0)          AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    COALESCE(op.total_open_pipe,0)                  AS total_open_pipe,
    COALESCE(op.total_count_open_deals,0)           AS total_count_open_deals_pipe,
    COALESCE(op.nfy_open_pipeline,0)                AS nfy_open_pipeline,
    COALESCE(op.fy_open_pipeline,0)                 AS fy_open_pipeline,
    COALESCE(op.nfy_count_open_deals,0)             AS nfy_count_open_deals,
    COALESCE(op.fy_count_open_deals,0)              AS fy_count_open_deals,

    CASE
      WHEN COALESCE(arr.arr,0) > 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS customer_has_open_pipe_flag,

    CASE
      WHEN COALESCE(arr.arr,0) = 0
          AND COALESCE(op.total_open_pipe,0) > 0
              THEN 1
          ELSE 0
    END                                                       AS prospect_has_open_pipe_flag,

    -- pipe generation
    COALESCE(pg.pg_ytd_net_arr,0)                             AS pg_ytd_net_arr,
    COALESCE(pg.pg_ytd_web_direct_sourced_net_arr,0)          AS pg_ytd_web_direct_sourced_net_arr,
    COALESCE(pg.pg_ytd_channel_sourced_net_arr,0)             AS pg_ytd_channel_sourced_net_arr,
    COALESCE(pg.pg_ytd_sdr_sourced_net_arr,0)                 AS pg_ytd_sdr_sourced_net_arr,
    COALESCE(pg.pg_ytd_ae_sourced_net_arr,0)                  AS pg_ytd_ae_sourced_net_arr,

    COALESCE(pg_ly.pg_last_12m_net_arr,0)                     AS pg_last_12m_net_arr,
    COALESCE(pg_ly.pg_last_12m_web_direct_sourced_net_arr,0)  AS pg_last_12m_web_direct_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_channel_sourced_net_arr,0)     AS pg_last_12m_channel_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_sdr_sourced_net_arr,0)         AS pg_last_12m_sdr_sourced_net_arr,
    COALESCE(pg_ly.pg_last_12m_ae_sourced_net_arr,0)          AS pg_last_12m_ae_sourced_net_arr,

    COALESCE(pg_last_12m_web_direct_sourced_deal_count,0)     AS pg_last_12m_web_direct_sourced_deal_count,
    COALESCE(pg_last_12m_channel_sourced_deal_count,0)        AS pg_last_12m_channel_sourced_deal_count,
    COALESCE(pg_last_12m_sdr_sourced_deal_count,0)            AS pg_last_12m_sdr_sourced_deal_count,
    COALESCE(pg_last_12m_ae_sourced_deal_count,0)             AS pg_last_12m_ae_sourced_deal_count,
    
    -- SAO metrics
    COALESCE(sao_last_12_month.last_12m_sao_deal_count,0)       AS last_12m_sao_deal_count,
    COALESCE(sao_last_12_month.last_12m_sao_net_arr,0)          AS last_12m_sao_net_arr,
    COALESCE(sao_last_12_month.last_12m_sao_booked_net_arr,0)   AS last_12m_sao_booked_net_arr, 
    COALESCE(sao_fy.fy_sao_deal_count,0)                        AS fy_sao_deal_count,
    COALESCE(sao_fy.fy_sao_net_arr,0)                           AS fy_sao_net_arr,
    COALESCE(sao_fy.fy_sao_booked_net_arr,0)                    AS fy_sao_booked_net_arr,
    
     -- LAM Dev Count Category
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN '0. <100'    
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN '1. [100-250)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN '2. [250-500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN '3. [500-1500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN '4. [1500-2500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN '5. [2500-3500)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN '6. [3500-5000)'
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN '7. >5000'
    END AS lam_dev_count_bin_name,
    
    CASE 
        WHEN upa_account.parent_crm_account_lam_dev_count < 100
            THEN 0
        WHEN upa_account.parent_crm_account_lam_dev_count >= 100
            AND upa_account.parent_crm_account_lam_dev_count < 250
            THEN 100
        WHEN upa_account.parent_crm_account_lam_dev_count >= 250
            AND upa_account.parent_crm_account_lam_dev_count < 500
            THEN 250
        WHEN upa_account.parent_crm_account_lam_dev_count >= 500
            AND upa_account.parent_crm_account_lam_dev_count < 1500
            THEN 500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 1500
            AND upa_account.parent_crm_account_lam_dev_count < 2500
            THEN 1500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 2500
            AND upa_account.parent_crm_account_lam_dev_count < 3500
            THEN 2500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 3500
            AND upa_account.parent_crm_account_lam_dev_count < 5000
            THEN 3500
        WHEN upa_account.parent_crm_account_lam_dev_count >= 5000
            THEN 5000
    END AS lam_dev_count_bin_rank,      
    
    -- Public Sector
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 'Public'
        ELSE 'Private'
    END                     AS sector_type,
    CASE
        WHEN mart_crm_account.pubsec_type ='ROW-PubSec'
            THEN 1
        ELSE 0
    END                     AS is_public_sector_flag

  FROM account_year_key AS ak
  INNER JOIN sfdc_accounts_xf AS a
    ON ak.account_id = a.account_id
  LEFT JOIN mart_crm_account AS upa_account
    ON a.ultimate_parent_account_id = upa_account.dim_crm_account_id
  LEFT JOIN sfdc_accounts_xf AS upa
    ON a.ultimate_parent_account_id = upa.account_id
  LEFT JOIN dim_crm_account AS dim_account
    ON ak.account_id = dim_account.dim_crm_account_id
  LEFT JOIN mart_crm_account
    ON ak.account_id = mart_crm_account.dim_crm_account_id
  LEFT JOIN sfdc_users_xf AS u
    ON a.owner_id = u.user_id
  LEFT JOIN sfdc_users_xf AS upa_owner
    ON upa.owner_id = upa_owner.user_id
  LEFT JOIN fy_atr_base
    ON fy_atr_base.account_id = ak.account_id
    AND fy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN last_12m_atr_base AS last_12m_atr_base
    ON last_12m_atr_base.account_id = ak.account_id
    AND last_12m_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN nfy_atr_base
    ON nfy_atr_base.account_id = ak.account_id
    AND nfy_atr_base.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN net_arr_last_12m
    ON net_arr_last_12m.account_id = ak.account_id
    AND net_arr_last_12m.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN op_forward_one_year AS op
    ON op.account_id = ak.account_id
    AND op.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_ytd AS pg
    ON pg.account_id = ak.account_id
    AND pg.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN pg_last_12_months AS pg_ly
    ON pg_ly.account_id = ak.account_id
    AND pg_ly.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN arr_at_same_month AS arr
    ON arr.account_id = ak.account_id
    AND arr.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN fy_net_arr AS net_arr_fiscal
    ON net_arr_fiscal.account_id = ak.account_id
    AND net_arr_fiscal.report_fiscal_year = ak.report_fiscal_year
  -- SAOs
  LEFT JOIN sao_last_12_month 
    ON sao_last_12_month.account_id = ak.account_id
    AND sao_last_12_month.report_fiscal_year = ak.report_fiscal_year
  LEFT JOIN sao_fy
    ON sao_fy.account_id = ak.account_id
    AND sao_fy.report_fiscal_year = ak.report_fiscal_year

    -----------------------
-- Adjust for hierarchies split between different geos
), upa_virtual_cte AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    upa_user_geo,
    account_id                                AS virtual_upa_id,
    account_name                              AS virtual_upa_name,
    parent_crm_account_sales_segment          AS virtual_upa_segment,
    parent_crm_account_geo                    AS virtual_upa_geo,
    parent_crm_account_region                 AS virtual_upa_region,
    parent_crm_account_area                   AS virtual_upa_area,
    crm_account_billing_country               AS virtual_upa_country,
    parent_crm_account_upa_postal_code        AS virtual_upa_zip_code,
    account_industry                          AS virtual_upa_industry,
    parent_crm_account_upa_state              AS virtual_upa_state,
    account_owner_name                        AS virtual_upa_owner_name,
    account_owner_title_category              AS virtual_upa_owner_title_category,
    account_owner_id                          AS virtual_upa_owner_id,
    account_id,
    account_name,
    account_owner_name,
    arr AS account_arr,
    1 AS level
FROM consolidated_accounts
WHERE upa_user_geo != account_user_geo
    AND arr > 5000
   -- AND upa_user_geo = 'EMEA'
UNION ALL 
SELECT 
    upa.report_fiscal_year,
    upa.upa_id,
    upa.upa_name,
    upa.upa_user_geo,
    upa.virtual_upa_id,
    upa.virtual_upa_name,
    upa.virtual_upa_segment,
    upa.virtual_upa_geo,
    upa.virtual_upa_region,
    upa.virtual_upa_area,
    upa.virtual_upa_country,
    upa.virtual_upa_zip_code,
    upa.virtual_upa_industry,
    upa.virtual_upa_state,
    upa.virtual_upa_owner_name,
    upa.virtual_upa_owner_title_category,
    upa.virtual_upa_owner_id,
    child.account_id,
    child.account_name,
    child.account_owner_name,
    child.arr AS account_arr,
    level + 1 AS level
FROM consolidated_accounts child
INNER JOIN upa_virtual_cte upa
    ON child.ultimate_parent_account_id = upa.account_id
    AND child.report_fiscal_year = upa.report_fiscal_year

), max_virtual_upa_depth AS (

    SELECT 
        report_fiscal_year,
        upa_id,
        upa_name,
        virtual_upa_segment,
        virtual_upa_geo,
        virtual_upa_id, 
        virtual_upa_name, 
        MAX(level) AS max_depth
    FROM upa_virtual_cte
    GROUP BY 1,2,3,4,5,6,7
    
), selected_virtual_upa_head AS (

SELECT 
    report_fiscal_year,
    upa_id,
    upa_name,
    virtual_upa_segment,
    virtual_upa_geo,
    virtual_upa_id,
    virtual_upa_name,
    max_depth,
    ROW_NUMBER() OVER (PARTITION BY upa_id, report_fiscal_year ORDER BY max_depth DESC) AS level
FROM max_virtual_upa_depth
QUALIFY level = 1

        
-- selects the longest hierarchy from the virtual UPAs options
), selected_hierarchy_virtual_upa AS (

    
    SELECT total.*
    FROM upa_virtual_cte total
    INNER JOIN selected_virtual_upa_head selected
        ON total.virtual_upa_id = selected.virtual_upa_id
        AND total.report_fiscal_year = selected.report_fiscal_year


-- identify unique virtual upas
), select_unique_virtual_upa AS (

SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id
FROM selected_hierarchy_virtual_upa final
    

-- identify accounts that belong to the same owner of a virtual upa within the hierarchy
), final_virtual_upa AS (
    
SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    extra.virtual_upa_id,
    extra.virtual_upa_name,
    extra.virtual_upa_segment,
    extra.virtual_upa_geo,
    extra.virtual_upa_region,
    extra.virtual_upa_area,
    extra.virtual_upa_country,
    extra.virtual_upa_zip_code,
    extra.virtual_upa_industry,
    extra.virtual_upa_state,
    extra.virtual_upa_owner_name,
    extra.virtual_upa_owner_title_category,
    extra.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.arr AS account_arr,
    -1 AS level
FROM consolidated_accounts final
    INNER JOIN select_unique_virtual_upa extra
        ON final.upa_id = extra.upa_id
        AND final.account_owner_name = extra.virtual_upa_owner_name
        AND final.report_fiscal_year = extra.report_fiscal_year
-- Exclude accounts already in the hierarchy table
WHERE final.account_id NOT IN (SELECT DISTINCT account_id FROM selected_hierarchy_virtual_upa)
UNION
  SELECT 
    final.report_fiscal_year,
    final.upa_id,
    final.upa_name,
    final.upa_user_geo,
    final.virtual_upa_id,
    final.virtual_upa_name,
    final.virtual_upa_segment,
    final.virtual_upa_geo,
    final.virtual_upa_region,
    final.virtual_upa_area,
    final.virtual_upa_country,
    final.virtual_upa_zip_code,
    final.virtual_upa_industry,
    final.virtual_upa_state,
    final.virtual_upa_owner_name,
    final.virtual_upa_owner_title_category,
    final.virtual_upa_owner_id,
    final.account_id,
    final.account_name,
    final.account_owner_name,
    final.account_arr,
    final.level
FROM selected_hierarchy_virtual_upa final
------------------------

), consolidated_upa AS (

  SELECT
    acc.report_fiscal_year,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                     AS upa_type,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_id 
        ELSE acc.upa_id
    END                                     AS upa_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_name
        ELSE acc.upa_name
    END                                     AS upa_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_name
        ELSE acc.upa_owner_name
    END                                     AS upa_owner_name,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_id 
        ELSE acc.upa_owner_id
    END                                     AS upa_owner_id,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_owner_title_category
        ELSE acc.upa_owner_title_category
    END                                     AS upa_owner_title_category,
    
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_industry 
        ELSE acc.upa_industry
    END                                     AS upa_industry,
    
    -- Account Demographics
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.parent_crm_account_sales_segment
    END                                     AS upa_ad_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.parent_crm_account_geo
    END                                     AS upa_ad_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.parent_crm_account_region
    END                                     AS upa_ad_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.parent_crm_account_area
    END                                     AS upa_ad_area,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_country 
        ELSE acc.crm_account_billing_country
    END                                     AS upa_ad_country,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_state 
        ELSE acc.parent_crm_account_upa_state
    END                                     AS upa_ad_state,

    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_zip_code 
        ELSE acc.parent_crm_account_upa_postal_code
    END                                     AS upa_ad_zip_code,

    -- Account User Owner fields
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_segment
        ELSE acc.upa_user_segment
    END                                     AS upa_user_segment,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_geo
        ELSE acc.upa_user_geo
    END                                     AS upa_user_geo,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_region 
        ELSE acc.upa_user_region
    END                                     AS upa_user_region,
    CASE 
        WHEN new_upa.upa_id IS NOT NULL 
            THEN new_upa.virtual_upa_area
        ELSE acc.upa_user_area
    END                                     AS upa_user_area,
    
    
    acc.lam_dev_count_bin_rank,
    acc.lam_dev_count_bin_name,

    -- Public Sector
    CASE
        WHEN MAX(acc.is_public_sector_flag) = 1
            THEN 'Public'
        ELSE 'Private'
    END                             AS sector_type,
    
    -- Customer score used in maps for account visualization
    MAX(acc.customer_score) AS customer_score,
    
    MAX(acc.is_public_sector_flag)      AS is_public_sector_flag,
    
    
    -- SUM(CASE WHEN acc.account_forbes_rank IS NOT NULL THEN 1 ELSE 0 END)   AS count_forbes_accounts,
    -- MIN(account_forbes_rank)      AS forbes_rank,
    MAX(acc.potential_users)          AS potential_users,
    MAX(acc.licenses)                 AS licenses,
    MAX(acc.linkedin_developer)       AS linkedin_developer,
    MAX(acc.zi_developers)            AS zi_developers,
    MAX(acc.zi_revenue)               AS zi_revenue,
    MAX(acc.employees)                AS employees,
    MAX(acc.upa_lam_dev_count)        AS upa_lam_dev_count,

    SUM(acc.has_technical_account_manager_flag) AS count_technical_account_managers,

    -- atr for current fy
    SUM(acc.fy_atr)  AS fy_atr,
    -- next fiscal year atr base reported at fy
    SUM(acc.nfy_atr) AS nfy_atr,

    -- arr by fy
    SUM(acc.arr) AS arr,

    CASE 
        WHEN  MAX(acc.is_customer_flag) = 1
        THEN 0
    ELSE 1
    END                                   AS is_prospect_flag,
    MAX(acc.is_customer_flag)             AS is_customer_flag,
    MAX(acc.is_over_5k_customer_flag)     AS is_over_5k_customer_flag,
    MAX(acc.is_over_10k_customer_flag)    AS is_over_10k_customer_flag,
    MAX(acc.is_over_50k_customer_flag)    AS is_over_50k_customer_flag,
    MAX(acc.is_over_500k_customer_flag)   AS is_over_500k_customer_flag,
    SUM(acc.is_over_5k_customer_flag)     AS count_over_5k_customers,
    SUM(acc.is_over_10k_customer_flag)    AS count_over_10k_customers,
    SUM(acc.is_over_50k_customer_flag)    AS count_over_50k_customers,
    SUM(acc.is_over_500k_customer_flag)   AS count_over_500k_customers,
    SUM(acc.is_prospect_flag)             AS count_of_prospects,
    SUM(acc.is_customer_flag)             AS count_of_customers,

    SUM(acc.arr_channel)                  AS arr_channel,
    SUM(acc.arr_direct)                   AS arr_direct,

    SUM(acc.product_starter_arr)          AS product_starter_arr,
    SUM(acc.product_premium_arr)          AS product_premium_arr,
    SUM(acc.product_ultimate_arr)         AS product_ultimate_arr,
    SUM(acc.delivery_self_managed_arr)    AS delivery_self_managed_arr,
    SUM(acc.delivery_saas_arr)            AS delivery_saas_arr,


    -- rolling last 12 months bokked net arr
    SUM(last_12m_booked_net_arr)                      AS last_12m_booked_net_arr,
    SUM(acc.last_12m_booked_non_web_net_arr)              AS last_12m_booked_non_web_net_arr,
    SUM(acc.last_12m_booked_web_direct_sourced_net_arr)   AS last_12m_booked_web_direct_sourced_net_arr,
    SUM(acc.last_12m_booked_channel_sourced_net_arr)      AS last_12m_booked_channel_sourced_net_arr,
    SUM(acc.last_12m_booked_sdr_sourced_net_arr)          AS last_12m_booked_sdr_sourced_net_arr,
    SUM(acc.last_12m_booked_ae_sourced_net_arr)           AS last_12m_booked_ae_sourced_net_arr,
    SUM(acc.last_12m_booked_churn_contraction_net_arr)    AS last_12m_booked_churn_contraction_net_arr,
    SUM(acc.last_12m_booked_fo_net_arr)                   AS last_12m_booked_fo_net_arr,
    SUM(acc.last_12m_booked_new_connected_net_arr)        AS last_12m_booked_new_connected_net_arr,
    SUM(acc.last_12m_booked_growth_net_arr)               AS last_12m_booked_growth_net_arr,
    SUM(acc.last_12m_booked_deal_count)                   AS last_12m_booked_deal_count,
    SUM(acc.last_12m_booked_direct_net_arr)               AS last_12m_booked_direct_net_arr,
    SUM(acc.last_12m_booked_channel_net_arr)              AS last_12m_booked_channel_net_arr,
    SUM(acc.last_12m_atr)                                 AS last_12m_atr,

    -- fy booked net arr
    SUM(acc.fy_booked_net_arr)                   AS fy_booked_net_arr,
    SUM(acc.fy_booked_web_direct_sourced_net_arr) AS fy_booked_web_direct_sourced_net_arr,
    SUM(acc.fy_booked_channel_sourced_net_arr)   AS fy_booked_channel_sourced_net_arr,
    SUM(acc.fy_booked_sdr_sourced_net_arr)       AS fy_booked_sdr_sourced_net_arr,
    SUM(acc.fy_booked_ae_sourced_net_arr)        AS fy_booked_ae_sourced_net_arr,
    SUM(acc.fy_booked_churn_contraction_net_arr) AS fy_booked_churn_contraction_net_arr,
    SUM(acc.fy_booked_fo_net_arr)                AS fy_booked_fo_net_arr,
    SUM(acc.fy_booked_new_connected_net_arr)     AS fy_booked_new_connected_net_arr,
    SUM(acc.fy_booked_growth_net_arr)            AS fy_booked_growth_net_arr,
    SUM(acc.fy_booked_deal_count)                AS fy_booked_deal_count,
    SUM(acc.fy_booked_direct_net_arr)            AS fy_booked_direct_net_arr,
    SUM(acc.fy_booked_channel_net_arr)           AS fy_booked_channel_net_arr,
    SUM(acc.fy_booked_direct_deal_count)         AS fy_booked_direct_deal_count,
    SUM(acc.fy_booked_channel_deal_count)        AS fy_booked_channel_deal_count,

    -- open pipe forward looking
    SUM(acc.total_open_pipe)              AS total_open_pipe,
    SUM(acc.total_count_open_deals_pipe)  AS total_count_open_deals_pipe,
    SUM(acc.customer_has_open_pipe_flag)  AS customer_has_open_pipe_flag,
    SUM(acc.prospect_has_open_pipe_flag)  AS prospect_has_open_pipe_flag,

    -- pipe generation
    SUM(acc.pg_ytd_net_arr) AS pg_ytd_net_arr,
    SUM(acc.pg_ytd_web_direct_sourced_net_arr)    AS pg_ytd_web_direct_sourced_net_arr,
    SUM(acc.pg_ytd_channel_sourced_net_arr)       AS pg_ytd_channel_sourced_net_arr,
    SUM(acc.pg_ytd_sdr_sourced_net_arr)           AS pg_ytd_sdr_sourced_net_arr,
    SUM(acc.pg_ytd_ae_sourced_net_arr)            AS pg_ytd_ae_sourced_net_arr,

    SUM(acc.pg_last_12m_net_arr) AS pg_last_12m_net_arr,
    SUM(acc.pg_last_12m_web_direct_sourced_net_arr)   AS pg_last_12m_web_direct_sourced_net_arr,
    SUM(acc.pg_last_12m_channel_sourced_net_arr)      AS pg_last_12m_channel_sourced_net_arr,
    SUM(acc.pg_last_12m_sdr_sourced_net_arr)          AS pg_last_12m_sdr_sourced_net_arr,
    SUM(acc.pg_last_12m_ae_sourced_net_arr)           AS pg_last_12m_ae_sourced_net_arr,
    
    SUM(acc.last_12m_sao_deal_count)                    AS last_12m_sao_deal_count,
    SUM(acc.last_12m_sao_net_arr)                       AS last_12m_sao_net_arr,
    SUM(acc.last_12m_sao_booked_net_arr)                AS last_12m_sao_booked_net_arr, 
    SUM(acc.fy_sao_deal_count)                          AS fy_sao_deal_count,
    SUM(acc.fy_sao_net_arr)                             AS fy_sao_net_arr,
    SUM(acc.fy_sao_booked_net_arr)                      AS fy_sao_booked_net_arr
    
  FROM consolidated_accounts acc
    LEFT JOIN final_virtual_upa new_upa
        ON new_upa.account_id = acc.account_id
        AND new_upa.report_fiscal_year = acc.report_fiscal_year
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)
, final AS (

  SELECT
      
    acc.*, 
    
    CASE 
      WHEN upa.arr > 0 AND upa.arr < 5000
        THEN '1. 0-5k ARR'
      WHEN upa.arr >= 5000 AND upa.arr < 10000
        THEN '2. 0-10k ARR'
      WHEN upa.arr >= 10000 AND upa.arr < 50000
        THEN '3. 10k-50k ARR'
      WHEN upa.arr >= 50000 AND upa.arr < 100000
        THEN '4. 50K-100k ARR'
      WHEN upa.arr >= 100000 AND upa.arr < 500000
        THEN '5. 100k-500k ARR'
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '6. 500k-1M ARR'     
      WHEN upa.arr >= 500000 AND upa.arr < 1000000
        THEN '7. >=1M ARR' 
      ELSE 'n/a'
    END    AS account_family_arr_bin_name,
    
    COALESCE(upa.potential_users,0)                 AS upa_potential_users,
    COALESCE(upa.licenses,0)                        AS upa_licenses,
    COALESCE(upa.linkedin_developer,0)              AS upa_linkedin_developer,
    COALESCE(upa.zi_developers,0)                   AS upa_zi_developers,
    COALESCE(upa.zi_revenue,0)                      AS upa_zi_revenue,
    COALESCE(upa.employees,0)                       AS upa_employees,
    COALESCE(upa.count_of_customers,0)              AS upa_count_of_customers,

    CASE
        WHEN upa.upa_id = acc.account_id
            THEN 1
        ELSE 0
    END                                     AS is_upa_flag,

    upa.is_customer_flag                    AS hierarchy_is_customer_flag,
    
    COALESCE(virtual.virtual_upa_id,acc.upa_id)                             AS virtual_upa_id,
    COALESCE(virtual.virtual_upa_name,acc.upa_name)                         AS virtual_upa_name,
    COALESCE(virtual.virtual_upa_segment,acc.parent_crm_account_sales_segment)                AS virtual_upa_ad_segment,
    COALESCE(virtual.virtual_upa_geo,acc.upa_user_geo)                      AS virtual_upa_geo,
    COALESCE(virtual.virtual_upa_region,acc.upa_user_region)                AS virtual_upa_region,
    COALESCE(virtual.virtual_upa_area,acc.upa_user_area)                    AS virtual_upa_area,
    COALESCE(virtual.virtual_upa_country,acc.crm_account_billing_country)   AS virtual_upa_ad_country,
    COALESCE(virtual.virtual_upa_state,acc.parent_crm_account_upa_state)    AS virtual_upa_ad_state,
    COALESCE(virtual.virtual_upa_zip_code,acc.parent_crm_account_upa_postal_code) AS virtual_upa_ad_zip_code,
    COALESCE(virtual.virtual_upa_industry,acc.upa_industry)                 AS virtual_upa_industry,
    COALESCE(virtual.virtual_upa_owner_name,acc.upa_owner_name)             AS virtual_upa_owner_name,
    COALESCE(virtual.virtual_upa_owner_title_category,acc.upa_owner_title_category)   AS virtual_upa_owner_title_category,
    COALESCE(virtual.virtual_upa_owner_id,acc.upa_owner_id)                 AS virtual_upa_owner_id, 
    CASE 
        WHEN virtual.upa_id IS NOT NULL 
            THEN 'Virtual'
        ELSE 'Real'
    END                                                                     AS virtual_upa_type

  FROM consolidated_accounts acc
    LEFT JOIN consolidated_upa upa
        ON upa.upa_id = acc.upa_id
        AND upa.report_fiscal_year = acc.report_fiscal_year
    LEFT JOIN final_virtual_upa virtual
        ON virtual.account_id = acc.account_id
        AND virtual.report_fiscal_year = acc.report_fiscal_year

)

SELECT *
FROM final15:T548,
    -- Using dbt updated at field as we want a new set of data everyday.
    

    SELECT
    "PRIMARY_KEY",
  "FISCAL_YEAR",
  "FISCAL_QUARTER_NAME_FY",
  "CLOSE_MONTH",
  "DIM_CHARGE_ID",
  "DIM_CRM_OPPORTUNITY_ID",
  "DIM_CRM_ACCOUNT_ID",
  "DIM_BILLING_ACCOUNT_ID",
  "DIM_SUBSCRIPTION_ID",
  "DIM_PRODUCT_DETAIL_ID",
  "SUBSCRIPTION_NAME",
  "SUBSCRIPTION_START_MONTH",
  "SUBSCRIPTION_END_MONTH",
  "TERM_START_MONTH",
  "RENEWAL_MONTH",
  "BOOKINGS_TERM_END_MONTH",
  "MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH",
  "LAST_PAID_MONTH_IN_TERM",
  "CURRENT_TERM",
  "ZUORA_RENEWAL_SUBSCRIPTION_NAME",
  "RENEWAL_SUBSCRIPTION_END_MONTH",
  "PARENT_CRM_ACCOUNT_NAME",
  "CRM_ACCOUNT_NAME",
  "PARENT_CRM_ACCOUNT_SALES_SEGMENT",
  "DIM_CRM_USER_ID",
  "USER_NAME",
  "USER_ROLE_ID",
  "CRM_USER_SALES_SEGMENT",
  "CRM_USER_GEO",
  "CRM_USER_REGION",
  "CRM_USER_AREA",
  "PRODUCT_TIER_NAME",
  "PRODUCT_DELIVERY_TYPE",
  "RENEWAL_TYPE",
  "IS_MULTI_YEAR_BOOKING",
  "IS_MULTI_YEAR_BOOKING_WITH_MULTI_SUBS",
  "IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION",
  "SUBSCRIPTION_TERM",
  "ESTIMATED_TOTAL_FUTURE_BILLINGS",
  "IS_AVAILABLE_TO_RENEW",
  "OPPORTUNITY_TERM_GROUP",
  "ARR",
  "CREATED_BY",
  "UPDATED_BY",
  "MODEL_CREATED_DATE",
  "MODEL_UPDATED_DATE",
  "DBT_CREATED_AT"
    FROM "PROD".restricted_safe_common_mart_finance.mart_available_to_renew
16:T570,-- depends_on: "PROD".common_prep.prep_crm_user


WITH final AS (

    SELECT 
      "DIM_CRM_USER_ID",
  "EMPLOYEE_NUMBER",
  "USER_NAME",
  "TITLE",
  "DEPARTMENT",
  "TEAM",
  "MANAGER_ID",
  "MANAGER_NAME",
  "USER_EMAIL",
  "IS_ACTIVE",
  "START_DATE",
  "RAMPING_QUOTA",
  "USER_TIMEZONE",
  "USER_ROLE_ID",
  "USER_ROLE_NAME",
  "DIM_CRM_USER_SALES_SEGMENT_ID",
  "CRM_USER_SALES_SEGMENT",
  "CRM_USER_SALES_SEGMENT_GROUPED",
  "DIM_CRM_USER_GEO_ID",
  "CRM_USER_GEO",
  "DIM_CRM_USER_REGION_ID",
  "CRM_USER_REGION",
  "DIM_CRM_USER_AREA_ID",
  "CRM_USER_AREA",
  "DIM_CRM_USER_BUSINESS_UNIT_ID",
  "CRM_USER_BUSINESS_UNIT",
  "DIM_CRM_USER_ROLE_TYPE_ID",
  "CRM_USER_ROLE_TYPE",
  "IS_HYBRID_USER",
  "DIM_CRM_USER_HIERARCHY_SK",
  "CRM_USER_SALES_SEGMENT_GEO_REGION_AREA",
  "CRM_USER_SALES_SEGMENT_REGION_GROUPED",
  "SDR_SALES_SEGMENT",
  "SDR_REGION",
  "CREATED_DATE",
  "CRM_USER_SUB_BUSINESS_UNIT",
  "CRM_USER_DIVISION",
  "ASM"
    FROM "PROD".common_prep.prep_crm_user

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2020-11-20'::DATE        AS model_created_date,
      '2023-05-04'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final17:T57f,WITH prep_charge AS (

    SELECT *
    FROM {{ ref('prep_charge') }}

), final AS (

    SELECT
      --Surrogate Key
      prep_charge.dim_charge_id,

      --Natural Key
      prep_charge.subscription_name,
      prep_charge.subscription_version,
      prep_charge.rate_plan_charge_number,
      prep_charge.rate_plan_charge_version,
      prep_charge.rate_plan_charge_segment,

      --Dates
      prep_charge.effective_start_date,
      prep_charge.effective_end_date,
      prep_charge.effective_start_month,
      prep_charge.effective_end_month,
      prep_charge.charged_through_date,
      prep_charge.charge_created_date,
      prep_charge.charge_updated_date,
      prep_charge.charge_term,

      --ARR Analysis Framework
      prep_charge.type_of_arr_change,

      --Information
      prep_charge.rate_plan_name,
      prep_charge.rate_plan_charge_name,
      prep_charge.rate_plan_charge_description,
      prep_charge.is_last_segment,
      prep_charge.discount_level,
      prep_charge.charge_type,
      prep_charge.rate_plan_charge_amendement_type,
      prep_charge.unit_of_measure,
      prep_charge.is_paid_in_full,
      prep_charge.is_included_in_arr_calc,
      prep_charge.months_of_future_billings

    FROM prep_charge

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@iweeks",
    updated_by="@nmcavinue",
    created_date="2021-05-10",
    updated_date="2023-05-30"
) }}18:T686,WITH prep_charge AS (

    SELECT *
    FROM "PROD".restricted_safe_common_prep.prep_charge

), final AS (

    SELECT
      --Surrogate Key
      prep_charge.dim_charge_id,

      --Natural Key
      prep_charge.subscription_name,
      prep_charge.subscription_version,
      prep_charge.rate_plan_charge_number,
      prep_charge.rate_plan_charge_version,
      prep_charge.rate_plan_charge_segment,

      --Dates
      prep_charge.effective_start_date,
      prep_charge.effective_end_date,
      prep_charge.effective_start_month,
      prep_charge.effective_end_month,
      prep_charge.charged_through_date,
      prep_charge.charge_created_date,
      prep_charge.charge_updated_date,
      prep_charge.charge_term,

      --ARR Analysis Framework
      prep_charge.type_of_arr_change,

      --Information
      prep_charge.rate_plan_name,
      prep_charge.rate_plan_charge_name,
      prep_charge.rate_plan_charge_description,
      prep_charge.is_last_segment,
      prep_charge.discount_level,
      prep_charge.charge_type,
      prep_charge.rate_plan_charge_amendement_type,
      prep_charge.unit_of_measure,
      prep_charge.is_paid_in_full,
      prep_charge.is_included_in_arr_calc,
      prep_charge.months_of_future_billings

    FROM prep_charge

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2021-05-10'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final19:T2816,{{ config(
    tags=["six_hourly"]
) }}

WITH prep_crm_opportunity AS (

    SELECT *
    FROM {{ref('prep_crm_opportunity')}}
    WHERE is_live = 1

), layered AS (

    SELECT
      -- keys
      prep_crm_opportunity.dim_crm_account_id,
      prep_crm_opportunity.dim_crm_opportunity_id,
      prep_crm_opportunity.opportunity_name,
      prep_crm_opportunity.dim_crm_user_id,
      prep_crm_opportunity.dim_parent_crm_opportunity_id,

      -- logistical information
      prep_crm_opportunity.generated_source,
      prep_crm_opportunity.lead_source,
      prep_crm_opportunity.merged_opportunity_id,
      prep_crm_opportunity.duplicate_opportunity_id,
      prep_crm_opportunity.net_new_source_categories,
      prep_crm_opportunity.account_owner_team_stamped,
      prep_crm_opportunity.primary_campaign_source_id,
      prep_crm_opportunity.sales_path,
      prep_crm_opportunity.sales_type,
      prep_crm_opportunity.source_buckets,
      prep_crm_opportunity.opportunity_sales_development_representative,
      prep_crm_opportunity.opportunity_business_development_representative,
      prep_crm_opportunity.opportunity_development_representative,
      prep_crm_opportunity.sdr_or_bdr,
      prep_crm_opportunity.iqm_submitted_by_role,
      prep_crm_opportunity.sdr_pipeline_contribution,
      prep_crm_opportunity.stage_name,
      prep_crm_opportunity.sa_tech_evaluation_close_status,
      prep_crm_opportunity.deal_path,

      -- opportunity information
      prep_crm_opportunity.product_category,
      prep_crm_opportunity.product_details,
      prep_crm_opportunity.products_purchased,
      prep_crm_opportunity.critical_deal_flag,
      prep_crm_opportunity.forecast_category_name,
      prep_crm_opportunity.invoice_number,
      prep_crm_opportunity.is_refund,
      prep_crm_opportunity.is_downgrade,
      prep_crm_opportunity.is_risky,
      prep_crm_opportunity.is_swing_deal,
      prep_crm_opportunity.is_edu_oss,
      prep_crm_opportunity.is_won,
      prep_crm_opportunity.is_ps_opp,
      prep_crm_opportunity.probability,
      prep_crm_opportunity.professional_services_value,
      prep_crm_opportunity.reason_for_loss,
      prep_crm_opportunity.reason_for_loss_details,
      prep_crm_opportunity.reason_for_loss_staged,
      prep_crm_opportunity.reason_for_loss_calc,
      prep_crm_opportunity.sales_qualified_source,
      prep_crm_opportunity.sales_qualified_source_grouped,
      prep_crm_opportunity.solutions_to_be_replaced,
      prep_crm_opportunity.is_web_portal_purchase,
      prep_crm_opportunity.partner_initiated_opportunity,
      prep_crm_opportunity.user_segment,
      prep_crm_opportunity.order_type,
      prep_crm_opportunity.order_type_live,
      prep_crm_opportunity.opportunity_category,
      prep_crm_opportunity.opportunity_health,
      prep_crm_opportunity.risk_type,
      prep_crm_opportunity.risk_reasons,
      prep_crm_opportunity.downgrade_reason,
      prep_crm_opportunity.tam_notes,
      prep_crm_opportunity.churn_contraction_type,
      prep_crm_opportunity.churn_contraction_net_arr_bucket,
      prep_crm_opportunity.payment_schedule,
      prep_crm_opportunity.comp_y2_iacv,
      prep_crm_opportunity.opportunity_term,
      prep_crm_opportunity.primary_solution_architect,
      prep_crm_opportunity.growth_type,
      prep_crm_opportunity.opportunity_deal_size,
      prep_crm_opportunity.deployment_preference,
      prep_crm_opportunity.stage_name_3plus,
      prep_crm_opportunity.stage_name_4plus,
      prep_crm_opportunity.stage_category,
      prep_crm_opportunity.deal_category,
      prep_crm_opportunity.deal_group,
      prep_crm_opportunity.deal_size,
      prep_crm_opportunity.calculated_deal_size,
      prep_crm_opportunity.deal_path_engagement,
      prep_crm_opportunity.opportunity_owner,
      prep_crm_opportunity.opportunity_owner_manager,
      prep_crm_opportunity.opportunity_owner_department,
      prep_crm_opportunity.opportunity_owner_role,
      prep_crm_opportunity.opportunity_owner_title,
      prep_crm_opportunity.sqs_bucket_engagement,
      prep_crm_opportunity.sa_tech_evaluation_end_date,
      prep_crm_opportunity.sa_tech_evaluation_start_date,
      prep_crm_opportunity.calculated_partner_track,
      prep_crm_opportunity.quote_start_date,
      prep_crm_opportunity.subscription_start_date,
      prep_crm_opportunity.subscription_end_date,
      prep_crm_opportunity.resale_partner_name,
      prep_crm_opportunity.record_type_name,

      --account people attributes
      prep_crm_opportunity.crm_account_owner_sales_segment,
      prep_crm_opportunity.crm_account_owner_geo,
      prep_crm_opportunity.crm_account_owner_region,
      prep_crm_opportunity.crm_account_owner_area,
      prep_crm_opportunity.crm_account_owner_sales_segment_geo_region_area,

      -- Competitors
      prep_crm_opportunity.competitors,
      prep_crm_opportunity.competitors_other_flag,
      prep_crm_opportunity.competitors_gitlab_core_flag,
      prep_crm_opportunity.competitors_none_flag,
      prep_crm_opportunity.competitors_github_enterprise_flag,
      prep_crm_opportunity.competitors_bitbucket_server_flag,
      prep_crm_opportunity.competitors_unknown_flag,
      prep_crm_opportunity.competitors_github_flag,
      prep_crm_opportunity.competitors_gitlab_flag,
      prep_crm_opportunity.competitors_jenkins_flag,
      prep_crm_opportunity.competitors_azure_devops_flag,
      prep_crm_opportunity.competitors_svn_flag,
      prep_crm_opportunity.competitors_bitbucket_flag,
      prep_crm_opportunity.competitors_atlassian_flag,
      prep_crm_opportunity.competitors_perforce_flag,
      prep_crm_opportunity.competitors_visual_studio_flag,
      prep_crm_opportunity.competitors_azure_flag,
      prep_crm_opportunity.competitors_amazon_code_commit_flag,
      prep_crm_opportunity.competitors_circleci_flag,
      prep_crm_opportunity.competitors_bamboo_flag,
      prep_crm_opportunity.competitors_aws_flag,

      -- Command Plan fields
      prep_crm_opportunity.cp_partner,
      prep_crm_opportunity.cp_paper_process,
      prep_crm_opportunity.cp_help,
      prep_crm_opportunity.cp_review_notes,
      prep_crm_opportunity.cp_use_cases,
      prep_crm_opportunity.cp_champion,
      prep_crm_opportunity.cp_close_plan,
      prep_crm_opportunity.cp_competition,
      prep_crm_opportunity.cp_decision_criteria,
      prep_crm_opportunity.cp_decision_process,
      prep_crm_opportunity.cp_economic_buyer,
      prep_crm_opportunity.cp_identify_pain,
      prep_crm_opportunity.cp_metrics,
      prep_crm_opportunity.cp_risks,
      prep_crm_opportunity.cp_value_driver,
      prep_crm_opportunity.cp_why_do_anything_at_all,
      prep_crm_opportunity.cp_why_gitlab,
      prep_crm_opportunity.cp_why_now,
      prep_crm_opportunity.cp_score,

      -- stamped fields
      prep_crm_opportunity.crm_opp_owner_stamped_name,
      prep_crm_opportunity.crm_account_owner_stamped_name,
      prep_crm_opportunity.sao_crm_opp_owner_stamped_name,
      prep_crm_opportunity.sao_crm_account_owner_stamped_name,
      prep_crm_opportunity.sao_crm_opp_owner_sales_segment_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_sales_segment_stamped_grouped,
      prep_crm_opportunity.sao_crm_opp_owner_geo_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_region_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_area_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_segment_region_stamped_grouped,
      prep_crm_opportunity.sao_crm_opp_owner_sales_segment_geo_region_area_stamped,
      prep_crm_opportunity.crm_opp_owner_user_role_type_stamped,
      prep_crm_opportunity.crm_opp_owner_sales_segment_geo_region_area_stamped,

      -- Pipeline Velocity Account and Opp Owner Fields and Key Reporting Fields
      prep_crm_opportunity.opportunity_owner_user_segment,
      prep_crm_opportunity.opportunity_owner_user_geo,
      prep_crm_opportunity.opportunity_owner_user_region,
      prep_crm_opportunity.opportunity_owner_user_area,
      prep_crm_opportunity.report_opportunity_user_segment,
      prep_crm_opportunity.report_opportunity_user_geo,
      prep_crm_opportunity.report_opportunity_user_region,
      prep_crm_opportunity.report_opportunity_user_area,
      prep_crm_opportunity.report_user_segment_geo_region_area,
      prep_crm_opportunity.report_user_segment_geo_region_area_sqs_ot,
      prep_crm_opportunity.key_segment,
      prep_crm_opportunity.key_sqs,
      prep_crm_opportunity.key_ot,
      prep_crm_opportunity.key_segment_sqs,
      prep_crm_opportunity.key_segment_ot,
      prep_crm_opportunity.key_segment_geo,
      prep_crm_opportunity.key_segment_geo_sqs,
      prep_crm_opportunity.key_segment_geo_ot,
      prep_crm_opportunity.key_segment_geo_region,
      prep_crm_opportunity.key_segment_geo_region_sqs,
      prep_crm_opportunity.key_segment_geo_region_ot,
      prep_crm_opportunity.key_segment_geo_region_area,
      prep_crm_opportunity.key_segment_geo_region_area_sqs,
      prep_crm_opportunity.key_segment_geo_region_area_ot,
      prep_crm_opportunity.key_segment_geo_area,
      prep_crm_opportunity.sales_team_cro_level,
      prep_crm_opportunity.sales_team_rd_asm_level,
      prep_crm_opportunity.sales_team_vp_level,
      prep_crm_opportunity.sales_team_avp_rd_level,
      prep_crm_opportunity.sales_team_asm_level,
      prep_crm_opportunity.account_owner_team_stamped_cro_level,

      -- channel reporting
      prep_crm_opportunity.dr_partner_deal_type,
      prep_crm_opportunity.dr_partner_engagement,

      -- vsa reporting
      prep_crm_opportunity.vsa_readout,
      prep_crm_opportunity.vsa_start_date,
      prep_crm_opportunity.vsa_url,
      prep_crm_opportunity.vsa_status,
      prep_crm_opportunity.vsa_end_date,

      -- military invasion information
      prep_crm_opportunity.military_invasion_comments,
      prep_crm_opportunity.military_invasion_risk_scale,

      -- PS related
      prep_crm_opportunity.intended_product_tier,

      prep_crm_opportunity.downgrade_details,

      -- metadata
      prep_crm_opportunity._last_dbt_run

    FROM prep_crm_opportunity

)

{{ dbt_audit(
    cte_ref="layered",
    created_by="@iweeks",
    updated_by="@jngCES",
    created_date="2020-11-20",
    updated_date="2023-04-06"
) }}1a:T28f8,

WITH prep_crm_opportunity AS (

    SELECT *
    FROM "PROD".restricted_safe_common_prep.prep_crm_opportunity
    WHERE is_live = 1

), layered AS (

    SELECT
      -- keys
      prep_crm_opportunity.dim_crm_account_id,
      prep_crm_opportunity.dim_crm_opportunity_id,
      prep_crm_opportunity.opportunity_name,
      prep_crm_opportunity.dim_crm_user_id,
      prep_crm_opportunity.dim_parent_crm_opportunity_id,

      -- logistical information
      prep_crm_opportunity.generated_source,
      prep_crm_opportunity.lead_source,
      prep_crm_opportunity.merged_opportunity_id,
      prep_crm_opportunity.duplicate_opportunity_id,
      prep_crm_opportunity.net_new_source_categories,
      prep_crm_opportunity.account_owner_team_stamped,
      prep_crm_opportunity.primary_campaign_source_id,
      prep_crm_opportunity.sales_path,
      prep_crm_opportunity.sales_type,
      prep_crm_opportunity.source_buckets,
      prep_crm_opportunity.opportunity_sales_development_representative,
      prep_crm_opportunity.opportunity_business_development_representative,
      prep_crm_opportunity.opportunity_development_representative,
      prep_crm_opportunity.sdr_or_bdr,
      prep_crm_opportunity.iqm_submitted_by_role,
      prep_crm_opportunity.sdr_pipeline_contribution,
      prep_crm_opportunity.stage_name,
      prep_crm_opportunity.sa_tech_evaluation_close_status,
      prep_crm_opportunity.deal_path,

      -- opportunity information
      prep_crm_opportunity.product_category,
      prep_crm_opportunity.product_details,
      prep_crm_opportunity.products_purchased,
      prep_crm_opportunity.critical_deal_flag,
      prep_crm_opportunity.forecast_category_name,
      prep_crm_opportunity.invoice_number,
      prep_crm_opportunity.is_refund,
      prep_crm_opportunity.is_downgrade,
      prep_crm_opportunity.is_risky,
      prep_crm_opportunity.is_swing_deal,
      prep_crm_opportunity.is_edu_oss,
      prep_crm_opportunity.is_won,
      prep_crm_opportunity.is_ps_opp,
      prep_crm_opportunity.probability,
      prep_crm_opportunity.professional_services_value,
      prep_crm_opportunity.reason_for_loss,
      prep_crm_opportunity.reason_for_loss_details,
      prep_crm_opportunity.reason_for_loss_staged,
      prep_crm_opportunity.reason_for_loss_calc,
      prep_crm_opportunity.sales_qualified_source,
      prep_crm_opportunity.sales_qualified_source_grouped,
      prep_crm_opportunity.solutions_to_be_replaced,
      prep_crm_opportunity.is_web_portal_purchase,
      prep_crm_opportunity.partner_initiated_opportunity,
      prep_crm_opportunity.user_segment,
      prep_crm_opportunity.order_type,
      prep_crm_opportunity.order_type_live,
      prep_crm_opportunity.opportunity_category,
      prep_crm_opportunity.opportunity_health,
      prep_crm_opportunity.risk_type,
      prep_crm_opportunity.risk_reasons,
      prep_crm_opportunity.downgrade_reason,
      prep_crm_opportunity.tam_notes,
      prep_crm_opportunity.churn_contraction_type,
      prep_crm_opportunity.churn_contraction_net_arr_bucket,
      prep_crm_opportunity.payment_schedule,
      prep_crm_opportunity.comp_y2_iacv,
      prep_crm_opportunity.opportunity_term,
      prep_crm_opportunity.primary_solution_architect,
      prep_crm_opportunity.growth_type,
      prep_crm_opportunity.opportunity_deal_size,
      prep_crm_opportunity.deployment_preference,
      prep_crm_opportunity.stage_name_3plus,
      prep_crm_opportunity.stage_name_4plus,
      prep_crm_opportunity.stage_category,
      prep_crm_opportunity.deal_category,
      prep_crm_opportunity.deal_group,
      prep_crm_opportunity.deal_size,
      prep_crm_opportunity.calculated_deal_size,
      prep_crm_opportunity.deal_path_engagement,
      prep_crm_opportunity.opportunity_owner,
      prep_crm_opportunity.opportunity_owner_manager,
      prep_crm_opportunity.opportunity_owner_department,
      prep_crm_opportunity.opportunity_owner_role,
      prep_crm_opportunity.opportunity_owner_title,
      prep_crm_opportunity.sqs_bucket_engagement,
      prep_crm_opportunity.sa_tech_evaluation_end_date,
      prep_crm_opportunity.sa_tech_evaluation_start_date,
      prep_crm_opportunity.calculated_partner_track,
      prep_crm_opportunity.quote_start_date,
      prep_crm_opportunity.subscription_start_date,
      prep_crm_opportunity.subscription_end_date,
      prep_crm_opportunity.resale_partner_name,
      prep_crm_opportunity.record_type_name,

      --account people attributes
      prep_crm_opportunity.crm_account_owner_sales_segment,
      prep_crm_opportunity.crm_account_owner_geo,
      prep_crm_opportunity.crm_account_owner_region,
      prep_crm_opportunity.crm_account_owner_area,
      prep_crm_opportunity.crm_account_owner_sales_segment_geo_region_area,

      -- Competitors
      prep_crm_opportunity.competitors,
      prep_crm_opportunity.competitors_other_flag,
      prep_crm_opportunity.competitors_gitlab_core_flag,
      prep_crm_opportunity.competitors_none_flag,
      prep_crm_opportunity.competitors_github_enterprise_flag,
      prep_crm_opportunity.competitors_bitbucket_server_flag,
      prep_crm_opportunity.competitors_unknown_flag,
      prep_crm_opportunity.competitors_github_flag,
      prep_crm_opportunity.competitors_gitlab_flag,
      prep_crm_opportunity.competitors_jenkins_flag,
      prep_crm_opportunity.competitors_azure_devops_flag,
      prep_crm_opportunity.competitors_svn_flag,
      prep_crm_opportunity.competitors_bitbucket_flag,
      prep_crm_opportunity.competitors_atlassian_flag,
      prep_crm_opportunity.competitors_perforce_flag,
      prep_crm_opportunity.competitors_visual_studio_flag,
      prep_crm_opportunity.competitors_azure_flag,
      prep_crm_opportunity.competitors_amazon_code_commit_flag,
      prep_crm_opportunity.competitors_circleci_flag,
      prep_crm_opportunity.competitors_bamboo_flag,
      prep_crm_opportunity.competitors_aws_flag,

      -- Command Plan fields
      prep_crm_opportunity.cp_partner,
      prep_crm_opportunity.cp_paper_process,
      prep_crm_opportunity.cp_help,
      prep_crm_opportunity.cp_review_notes,
      prep_crm_opportunity.cp_use_cases,
      prep_crm_opportunity.cp_champion,
      prep_crm_opportunity.cp_close_plan,
      prep_crm_opportunity.cp_competition,
      prep_crm_opportunity.cp_decision_criteria,
      prep_crm_opportunity.cp_decision_process,
      prep_crm_opportunity.cp_economic_buyer,
      prep_crm_opportunity.cp_identify_pain,
      prep_crm_opportunity.cp_metrics,
      prep_crm_opportunity.cp_risks,
      prep_crm_opportunity.cp_value_driver,
      prep_crm_opportunity.cp_why_do_anything_at_all,
      prep_crm_opportunity.cp_why_gitlab,
      prep_crm_opportunity.cp_why_now,
      prep_crm_opportunity.cp_score,

      -- stamped fields
      prep_crm_opportunity.crm_opp_owner_stamped_name,
      prep_crm_opportunity.crm_account_owner_stamped_name,
      prep_crm_opportunity.sao_crm_opp_owner_stamped_name,
      prep_crm_opportunity.sao_crm_account_owner_stamped_name,
      prep_crm_opportunity.sao_crm_opp_owner_sales_segment_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_sales_segment_stamped_grouped,
      prep_crm_opportunity.sao_crm_opp_owner_geo_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_region_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_area_stamped,
      prep_crm_opportunity.sao_crm_opp_owner_segment_region_stamped_grouped,
      prep_crm_opportunity.sao_crm_opp_owner_sales_segment_geo_region_area_stamped,
      prep_crm_opportunity.crm_opp_owner_user_role_type_stamped,
      prep_crm_opportunity.crm_opp_owner_sales_segment_geo_region_area_stamped,

      -- Pipeline Velocity Account and Opp Owner Fields and Key Reporting Fields
      prep_crm_opportunity.opportunity_owner_user_segment,
      prep_crm_opportunity.opportunity_owner_user_geo,
      prep_crm_opportunity.opportunity_owner_user_region,
      prep_crm_opportunity.opportunity_owner_user_area,
      prep_crm_opportunity.report_opportunity_user_segment,
      prep_crm_opportunity.report_opportunity_user_geo,
      prep_crm_opportunity.report_opportunity_user_region,
      prep_crm_opportunity.report_opportunity_user_area,
      prep_crm_opportunity.report_user_segment_geo_region_area,
      prep_crm_opportunity.report_user_segment_geo_region_area_sqs_ot,
      prep_crm_opportunity.key_segment,
      prep_crm_opportunity.key_sqs,
      prep_crm_opportunity.key_ot,
      prep_crm_opportunity.key_segment_sqs,
      prep_crm_opportunity.key_segment_ot,
      prep_crm_opportunity.key_segment_geo,
      prep_crm_opportunity.key_segment_geo_sqs,
      prep_crm_opportunity.key_segment_geo_ot,
      prep_crm_opportunity.key_segment_geo_region,
      prep_crm_opportunity.key_segment_geo_region_sqs,
      prep_crm_opportunity.key_segment_geo_region_ot,
      prep_crm_opportunity.key_segment_geo_region_area,
      prep_crm_opportunity.key_segment_geo_region_area_sqs,
      prep_crm_opportunity.key_segment_geo_region_area_ot,
      prep_crm_opportunity.key_segment_geo_area,
      prep_crm_opportunity.sales_team_cro_level,
      prep_crm_opportunity.sales_team_rd_asm_level,
      prep_crm_opportunity.sales_team_vp_level,
      prep_crm_opportunity.sales_team_avp_rd_level,
      prep_crm_opportunity.sales_team_asm_level,
      prep_crm_opportunity.account_owner_team_stamped_cro_level,

      -- channel reporting
      prep_crm_opportunity.dr_partner_deal_type,
      prep_crm_opportunity.dr_partner_engagement,

      -- vsa reporting
      prep_crm_opportunity.vsa_readout,
      prep_crm_opportunity.vsa_start_date,
      prep_crm_opportunity.vsa_url,
      prep_crm_opportunity.vsa_status,
      prep_crm_opportunity.vsa_end_date,

      -- military invasion information
      prep_crm_opportunity.military_invasion_comments,
      prep_crm_opportunity.military_invasion_risk_scale,

      -- PS related
      prep_crm_opportunity.intended_product_tier,

      prep_crm_opportunity.downgrade_details,

      -- metadata
      prep_crm_opportunity._last_dbt_run

    FROM prep_crm_opportunity

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@jngCES'::VARCHAR       AS updated_by,
      '2020-11-20'::DATE        AS model_created_date,
      '2023-04-06'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM layered1b:T111c,{{ config({
    "tags": ["mnpi_exception"],
    "alias": "dim_subscription"
}) }}

WITH prep_amendment AS (

  SELECT *
  FROM {{ ref('prep_amendment') }}

), subscription AS (

    SELECT *
    FROM {{ ref('prep_subscription') }}

), subscription_opportunity_mapping AS (

    SELECT *
    FROM {{ ref('map_subscription_opportunity') }}

), subscription_lineage AS (

    SELECT DISTINCT
      subscription_name_slugify,
      subscription_lineage,
      oldest_subscription_in_cohort,
      subscription_cohort_month,
      subscription_cohort_quarter,
      subscription_cohort_year
    FROM {{ ref('map_subscription_lineage') }}

), final AS (

  SELECT
    --Surrogate Key
    subscription.dim_subscription_id,

    --Natural Key
    subscription.subscription_name,
    subscription.subscription_version,

    --Common Dimension Keys
    subscription.dim_crm_account_id,
    subscription.dim_billing_account_id,
    subscription.dim_billing_account_id_invoice_owner_account,
    subscription.dim_billing_account_id_creator_account,
    CASE
       WHEN subscription.subscription_created_date < '2019-02-01'
         THEN NULL
       ELSE subscription_opportunity_mapping.dim_crm_opportunity_id
    END                                                                             AS dim_crm_opportunity_id,
    subscription.dim_crm_opportunity_id_current_open_renewal,
    subscription.dim_crm_opportunity_id_closed_lost_renewal,
    {{ get_keyed_nulls('prep_amendment.dim_amendment_id') }}                        AS dim_amendment_id_subscription,

    --Subscription Information
    subscription.created_by_id,
    subscription.updated_by_id,
    subscription.dim_subscription_id_original,
    subscription.dim_subscription_id_previous,
    subscription.subscription_name_slugify,
    subscription.subscription_status,
    subscription.namespace_id,
    subscription.namespace_name,
    subscription.zuora_renewal_subscription_name,
    subscription.zuora_renewal_subscription_name_slugify,
    subscription.current_term,
    subscription.renewal_term,
    subscription.renewal_term_period_type,
    subscription.eoa_starter_bronze_offer_accepted,
    subscription.subscription_sales_type,
    subscription.auto_renew_native_hist,
    subscription.auto_renew_customerdot_hist,
    subscription.turn_on_cloud_licensing,
    subscription.turn_on_operational_metrics,
    subscription.contract_operational_metrics,
    subscription.contract_auto_renewal,
    subscription.turn_on_auto_renewal,
    subscription.contract_seat_reconciliation,
    subscription.turn_on_seat_reconciliation,
    subscription_opportunity_mapping.is_questionable_opportunity_mapping,
    subscription.invoice_owner_account,
    subscription.creator_account,
    subscription.was_purchased_through_reseller,
    subscription.multi_year_deal_subscription_linkage,

    --Date Information
    subscription.subscription_start_date,
    subscription.subscription_end_date,
    subscription.subscription_start_month,
    subscription.subscription_end_month,
    subscription.subscription_end_fiscal_year,
    subscription.subscription_created_date,
    subscription.subscription_updated_date,
    subscription.term_start_date,
    subscription.term_end_date,
    subscription.term_start_month,
    subscription.term_end_month,
    subscription.term_start_fiscal_year,
    subscription.term_end_fiscal_year,
    subscription.is_single_fiscal_year_term_subscription,
    subscription.second_active_renewal_month,
    subscription.cancelled_date,

    --Lineage and Cohort Information
    subscription_lineage.subscription_lineage,
    subscription_lineage.oldest_subscription_in_cohort,
    subscription_lineage.subscription_cohort_month,
    subscription_lineage.subscription_cohort_quarter,
    subscription_lineage.subscription_cohort_year

  FROM subscription
  LEFT JOIN subscription_lineage
    ON subscription_lineage.subscription_name_slugify = subscription.subscription_name_slugify
  LEFT JOIN prep_amendment
    ON subscription.dim_amendment_id_subscription = prep_amendment.dim_amendment_id
  LEFT JOIN subscription_opportunity_mapping
    ON subscription.dim_subscription_id = subscription_opportunity_mapping.dim_subscription_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@snalamaru",
    updated_by="@michellecooper",
    created_date="2020-12-16",
    updated_date="2023-04-12"
) }}1c:T11db,

WITH prep_amendment AS (

  SELECT *
  FROM "PROD".common_prep.prep_amendment

), subscription AS (

    SELECT *
    FROM "PROD".common_prep.prep_subscription

), subscription_opportunity_mapping AS (

    SELECT *
    FROM "PROD".common_mapping.map_subscription_opportunity

), subscription_lineage AS (

    SELECT DISTINCT
      subscription_name_slugify,
      subscription_lineage,
      oldest_subscription_in_cohort,
      subscription_cohort_month,
      subscription_cohort_quarter,
      subscription_cohort_year
    FROM "PROD".common_mapping.map_subscription_lineage

), final AS (

  SELECT
    --Surrogate Key
    subscription.dim_subscription_id,

    --Natural Key
    subscription.subscription_name,
    subscription.subscription_version,

    --Common Dimension Keys
    subscription.dim_crm_account_id,
    subscription.dim_billing_account_id,
    subscription.dim_billing_account_id_invoice_owner_account,
    subscription.dim_billing_account_id_creator_account,
    CASE
       WHEN subscription.subscription_created_date < '2019-02-01'
         THEN NULL
       ELSE subscription_opportunity_mapping.dim_crm_opportunity_id
    END                                                                             AS dim_crm_opportunity_id,
    subscription.dim_crm_opportunity_id_current_open_renewal,
    subscription.dim_crm_opportunity_id_closed_lost_renewal,
    

  COALESCE(prep_amendment.dim_amendment_id, MD5(-1)) 

                        AS dim_amendment_id_subscription,

    --Subscription Information
    subscription.created_by_id,
    subscription.updated_by_id,
    subscription.dim_subscription_id_original,
    subscription.dim_subscription_id_previous,
    subscription.subscription_name_slugify,
    subscription.subscription_status,
    subscription.namespace_id,
    subscription.namespace_name,
    subscription.zuora_renewal_subscription_name,
    subscription.zuora_renewal_subscription_name_slugify,
    subscription.current_term,
    subscription.renewal_term,
    subscription.renewal_term_period_type,
    subscription.eoa_starter_bronze_offer_accepted,
    subscription.subscription_sales_type,
    subscription.auto_renew_native_hist,
    subscription.auto_renew_customerdot_hist,
    subscription.turn_on_cloud_licensing,
    subscription.turn_on_operational_metrics,
    subscription.contract_operational_metrics,
    subscription.contract_auto_renewal,
    subscription.turn_on_auto_renewal,
    subscription.contract_seat_reconciliation,
    subscription.turn_on_seat_reconciliation,
    subscription_opportunity_mapping.is_questionable_opportunity_mapping,
    subscription.invoice_owner_account,
    subscription.creator_account,
    subscription.was_purchased_through_reseller,
    subscription.multi_year_deal_subscription_linkage,

    --Date Information
    subscription.subscription_start_date,
    subscription.subscription_end_date,
    subscription.subscription_start_month,
    subscription.subscription_end_month,
    subscription.subscription_end_fiscal_year,
    subscription.subscription_created_date,
    subscription.subscription_updated_date,
    subscription.term_start_date,
    subscription.term_end_date,
    subscription.term_start_month,
    subscription.term_end_month,
    subscription.term_start_fiscal_year,
    subscription.term_end_fiscal_year,
    subscription.is_single_fiscal_year_term_subscription,
    subscription.second_active_renewal_month,
    subscription.cancelled_date,

    --Lineage and Cohort Information
    subscription_lineage.subscription_lineage,
    subscription_lineage.oldest_subscription_in_cohort,
    subscription_lineage.subscription_cohort_month,
    subscription_lineage.subscription_cohort_quarter,
    subscription_lineage.subscription_cohort_year

  FROM subscription
  LEFT JOIN subscription_lineage
    ON subscription_lineage.subscription_name_slugify = subscription.subscription_name_slugify
  LEFT JOIN prep_amendment
    ON subscription.dim_amendment_id_subscription = prep_amendment.dim_amendment_id
  LEFT JOIN subscription_opportunity_mapping
    ON subscription.dim_subscription_id = subscription_opportunity_mapping.dim_subscription_id

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2020-12-16'::DATE        AS model_created_date,
      '2023-04-12'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1d:T459,WITH prep_amendment AS (

    SELECT *
    FROM "PROD".common_prep.prep_amendment

), base AS (

    SELECT
      --Surrogate Key
      dim_amendment_id,

      --Common Dimension keys
      dim_subscription_id,

      --Information
      amendment_name,
      amendment_type,
      amendment_description,
      auto_renew,
      amendment_code,
      amendment_status,

      --Term information
      term_type,
      current_term,
      current_term_period_type,
      renewal_term,
      renewal_term_period_type,
      renewal_setting,

      --Dates
      term_start_date,
      effective_date,
      service_activation_date,
      customer_acceptance_date,
      contract_effective_date
    FROM prep_amendment

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@iweeks'::VARCHAR       AS updated_by,
      '2021-05-10'::DATE        AS model_created_date,
      '2021-05-10'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM base1e:T3be1,{{ config(
    tags=["six_hourly"]
) }}

{{ simple_cte([
    ('crm_account_dimensions', 'map_crm_account'),
    ('prep_crm_account', 'prep_crm_account'),
    ('order_type', 'prep_order_type'),
    ('sales_qualified_source', 'prep_sales_qualified_source'),
    ('deal_path', 'prep_deal_path'),
    ('sales_rep', 'prep_crm_user'),
    ('sales_segment', 'prep_sales_segment'),
    ('sfdc_campaigns', 'prep_campaign'),
    ('dr_partner_engagement', 'prep_dr_partner_engagement'),
    ('alliance_type', 'prep_alliance_type_scd'),
    ('channel_type', 'prep_channel_type'),
    ('prep_crm_opportunity', 'prep_crm_opportunity'),
    ('prep_crm_user_hierarchy', 'prep_crm_user_hierarchy')

]) }}

, sfdc_opportunity AS (

    SELECT *
    FROM prep_crm_opportunity
    WHERE is_live = 1

), final_opportunities AS (

    SELECT

      -- opportunity and person ids
      sfdc_opportunity.dim_crm_opportunity_id,
      sfdc_opportunity.merged_opportunity_id                                                                              AS merged_crm_opportunity_id,
      sfdc_opportunity.dim_crm_account_id,
      crm_account_dimensions.dim_parent_crm_account_id,
      sfdc_opportunity.dim_crm_person_id,
      sfdc_opportunity.sfdc_contact_id,
      sfdc_opportunity.record_type_id,

      -- dates
      sfdc_opportunity.created_date,
      sfdc_opportunity.created_date_id,
      sfdc_opportunity.sales_accepted_date,
      sfdc_opportunity.sales_accepted_date_id,
      sfdc_opportunity.close_date,
      sfdc_opportunity.close_date_id,
      sfdc_opportunity.arr_created_date_id,
      sfdc_opportunity.arr_created_date,
      sfdc_opportunity.stage_0_pending_acceptance_date,
      sfdc_opportunity.stage_0_pending_acceptance_date_id,
      sfdc_opportunity.stage_1_discovery_date,
      sfdc_opportunity.stage_1_discovery_date_id,
      sfdc_opportunity.stage_2_scoping_date,
      sfdc_opportunity.stage_2_scoping_date_id,
      sfdc_opportunity.stage_3_technical_evaluation_date,
      sfdc_opportunity.stage_3_technical_evaluation_date_id,
      sfdc_opportunity.stage_4_proposal_date,
      sfdc_opportunity.stage_4_proposal_date_id,
      sfdc_opportunity.stage_5_negotiating_date,
      sfdc_opportunity.stage_5_negotiating_date_id,
      sfdc_opportunity.stage_6_awaiting_signature_date,
      sfdc_opportunity.stage_6_awaiting_signature_date_id,
      sfdc_opportunity.stage_6_closed_won_date,
      sfdc_opportunity.stage_6_closed_won_date_id,
      sfdc_opportunity.stage_6_closed_lost_date,
      sfdc_opportunity.stage_6_closed_lost_date_id,
      sfdc_opportunity.days_in_0_pending_acceptance,
      sfdc_opportunity.days_in_1_discovery,
      sfdc_opportunity.days_in_2_scoping,
      sfdc_opportunity.days_in_3_technical_evaluation,
      sfdc_opportunity.days_in_4_proposal,
      sfdc_opportunity.days_in_5_negotiating,
      sfdc_opportunity.subscription_start_date_id,
      sfdc_opportunity.subscription_end_date_id,
      sfdc_opportunity.sales_qualified_date_id,
      sfdc_opportunity.last_activity_date,
      sfdc_opportunity.last_activity_date_id,
      sfdc_opportunity.sales_last_activity_date,
      sfdc_opportunity.sales_last_activity_date_id,
      sfdc_opportunity.technical_evaluation_date,
      sfdc_opportunity.technical_evaluation_date_id,

      -- common dimension keys
      {{ get_keyed_nulls('sfdc_opportunity.dim_crm_user_id') }}                                                                   AS dim_crm_user_id,
      {{ get_keyed_nulls('prep_crm_account.dim_crm_user_id') }}                                                                   AS dim_crm_account_user_id,
      {{ get_keyed_nulls('order_type.dim_order_type_id') }}                                                                       AS dim_order_type_id,
      {{ get_keyed_nulls('order_type_live.dim_order_type_id') }}                                                                  AS dim_order_type_live_id,
      {{ get_keyed_nulls('dr_partner_engagement.dim_dr_partner_engagement_id') }}                                                 AS dim_dr_partner_engagement_id,
      {{ get_keyed_nulls('alliance_type.dim_alliance_type_id') }}                                                                 AS dim_alliance_type_id,
      {{ get_keyed_nulls('alliance_type_current.dim_alliance_type_id') }}                                                         AS dim_alliance_type_current_id,
      {{ get_keyed_nulls('channel_type.dim_channel_type_id') }}                                                                   AS dim_channel_type_id,
      {{ get_keyed_nulls('sales_qualified_source.dim_sales_qualified_source_id') }}                                               AS dim_sales_qualified_source_id,
      {{ get_keyed_nulls('deal_path.dim_deal_path_id') }}                                                                         AS dim_deal_path_id,
      {{ get_keyed_nulls('crm_account_dimensions.dim_parent_sales_segment_id,sales_segment.dim_sales_segment_id') }}              AS dim_parent_sales_segment_id,
      crm_account_dimensions.dim_parent_sales_territory_id,
      crm_account_dimensions.dim_parent_industry_id,
      {{ get_keyed_nulls('crm_account_dimensions.dim_account_sales_segment_id,sales_segment.dim_sales_segment_id') }}             AS dim_account_sales_segment_id,
      crm_account_dimensions.dim_account_sales_territory_id,
      crm_account_dimensions.dim_account_industry_id,
      crm_account_dimensions.dim_account_location_country_id,
      crm_account_dimensions.dim_account_location_region_id,
      {{ get_keyed_nulls('prep_crm_user_hierarchy.dim_crm_user_hierarchy_id') }}                                                  AS dim_crm_opp_owner_user_hierarchy_id,
      sfdc_opportunity.dim_crm_opp_owner_stamped_hierarchy_sk,
      {{ get_keyed_nulls('prep_crm_user_hierarchy.dim_crm_user_business_unit_id') }}                                              AS dim_crm_opp_owner_business_unit_stamped_id,
      {{ get_keyed_nulls('prep_crm_user_hierarchy.dim_crm_user_sales_segment_id') }}                                              AS dim_crm_opp_owner_sales_segment_stamped_id,
      {{ get_keyed_nulls('prep_crm_user_hierarchy.dim_crm_user_geo_id') }}                                                        AS dim_crm_opp_owner_geo_stamped_id,
      {{ get_keyed_nulls('prep_crm_user_hierarchy.dim_crm_user_region_id') }}                                                     AS dim_crm_opp_owner_region_stamped_id,
      {{ get_keyed_nulls('prep_crm_user_hierarchy.dim_crm_user_area_id') }}                                                       AS dim_crm_opp_owner_area_stamped_id,
      {{ get_keyed_nulls('sales_rep.dim_crm_user_hierarchy_sk') }}                                                                AS dim_crm_user_hierarchy_live_sk,
      {{ get_keyed_nulls('sales_rep.dim_crm_user_business_unit_id') }}                                                            AS dim_crm_user_business_unit_id,
      {{ get_keyed_nulls('sales_rep.dim_crm_user_sales_segment_id') }}                                                            AS dim_crm_user_sales_segment_id,
      {{ get_keyed_nulls('sales_rep.dim_crm_user_geo_id') }}                                                                      AS dim_crm_user_geo_id,
      {{ get_keyed_nulls('sales_rep.dim_crm_user_region_id') }}                                                                   AS dim_crm_user_region_id,
      {{ get_keyed_nulls('sales_rep.dim_crm_user_area_id') }}                                                                     AS dim_crm_user_area_id,
      {{ get_keyed_nulls('sales_rep_account.dim_crm_user_hierarchy_sk') }}                                                        AS dim_crm_user_hierarchy_account_user_sk,
      {{ get_keyed_nulls('sales_rep_account.dim_crm_user_business_unit_id') }}                                                    AS dim_crm_account_user_business_unit_id,
      {{ get_keyed_nulls('sales_rep_account.dim_crm_user_sales_segment_id') }}                                                    AS dim_crm_account_user_sales_segment_id,
      {{ get_keyed_nulls('sales_rep_account.dim_crm_user_geo_id') }}                                                              AS dim_crm_account_user_geo_id,
      {{ get_keyed_nulls('sales_rep_account.dim_crm_user_region_id') }}                                                           AS dim_crm_account_user_region_id,
      {{ get_keyed_nulls('sales_rep_account.dim_crm_user_area_id') }}                                                             AS dim_crm_account_user_area_id,
      sfdc_opportunity.ssp_id,
      sfdc_opportunity.ga_client_id,

      -- flags
      sfdc_opportunity.is_closed,
      sfdc_opportunity.is_won,
      sfdc_opportunity.is_refund,
      sfdc_opportunity.is_downgrade,
      sfdc_opportunity.is_swing_deal,
      sfdc_opportunity.is_edu_oss,
      sfdc_opportunity.is_web_portal_purchase,
      sfdc_opportunity.fpa_master_bookings_flag,
      sfdc_opportunity.is_sao,
      sfdc_opportunity.is_sdr_sao,
      sfdc_opportunity.is_net_arr_closed_deal,
      sfdc_opportunity.is_new_logo_first_order,
      sfdc_opportunity.is_net_arr_pipeline_created,
      sfdc_opportunity.is_win_rate_calc,
      sfdc_opportunity.is_closed_won,
      sfdc_opportunity.is_stage_1_plus,
      sfdc_opportunity.is_stage_3_plus,
      sfdc_opportunity.is_stage_4_plus,
      sfdc_opportunity.is_lost,
      sfdc_opportunity.is_open,
      sfdc_opportunity.is_active,
      sfdc_opportunity.is_credit,
      sfdc_opportunity.is_renewal,
      sfdc_opportunity.is_deleted,
      sfdc_opportunity.is_excluded_from_pipeline_created,
      sfdc_opportunity.is_duplicate,
      sfdc_opportunity.is_contract_reset,
      sfdc_opportunity.is_comp_new_logo_override,
      sfdc_opportunity.is_eligible_open_pipeline,
      sfdc_opportunity.is_eligible_asp_analysis,
      sfdc_opportunity.is_eligible_age_analysis,
      sfdc_opportunity.is_eligible_churn_contraction,
      sfdc_opportunity.is_booked_net_arr,
      sales_rep.is_hybrid_user AS is_hybrid_opp_owner_opp,
      sales_rep_account.is_hybrid_user AS is_hybrid_account_owner_opp,

      sfdc_opportunity.primary_solution_architect,
      sfdc_opportunity.product_details,
      sfdc_opportunity.product_category,
      sfdc_opportunity.products_purchased,
      sfdc_opportunity.growth_type,
      sfdc_opportunity.opportunity_deal_size,
      sfdc_opportunity.closed_buckets,

      -- channel fields
      sfdc_opportunity.lead_source,
      sfdc_opportunity.dr_partner_deal_type,
      sfdc_opportunity.dr_partner_engagement,
      sfdc_opportunity.partner_account,
      sfdc_opportunity.dr_status,
      sfdc_opportunity.dr_deal_id,
      sfdc_opportunity.dr_primary_registration,
      sfdc_opportunity.distributor,
      sfdc_opportunity.influence_partner,
      sfdc_opportunity.fulfillment_partner,
      sfdc_opportunity.platform_partner,
      sfdc_opportunity.partner_track,
      sfdc_opportunity.resale_partner_track,
      sfdc_opportunity.is_public_sector_opp,
      sfdc_opportunity.is_registration_from_portal,
      sfdc_opportunity.calculated_discount,
      sfdc_opportunity.partner_discount,
      sfdc_opportunity.partner_discount_calc,
      sfdc_opportunity.comp_channel_neutral,

      -- additive fields
      sfdc_opportunity.incremental_acv                                                                                      AS iacv,
      sfdc_opportunity.net_incremental_acv                                                                                  AS net_iacv,
      sfdc_opportunity.segment_order_type_iacv_to_net_arr_ratio,
      sfdc_opportunity.calculated_from_ratio_net_arr,
      sfdc_opportunity.net_arr,
      sfdc_opportunity.raw_net_arr,
      sfdc_opportunity.created_and_won_same_quarter_net_arr,
      sfdc_opportunity.new_logo_count,
      sfdc_opportunity.amount,
      sfdc_opportunity.recurring_amount,
      sfdc_opportunity.true_up_amount,
      sfdc_opportunity.proserv_amount,
      sfdc_opportunity.other_non_recurring_amount,
      sfdc_opportunity.arr_basis,
      sfdc_opportunity.arr,
      sfdc_opportunity.count_crm_attribution_touchpoints,
      sfdc_opportunity.weighted_linear_iacv,
      sfdc_opportunity.count_campaigns,
      sfdc_opportunity.probability,
      sfdc_opportunity.days_in_sao,
      sfdc_opportunity.open_1plus_deal_count,
      sfdc_opportunity.open_3plus_deal_count,
      sfdc_opportunity.open_4plus_deal_count,
      sfdc_opportunity.booked_deal_count,
      sfdc_opportunity.churned_contraction_deal_count,
      sfdc_opportunity.open_1plus_net_arr,
      sfdc_opportunity.open_3plus_net_arr,
      sfdc_opportunity.open_4plus_net_arr,
      sfdc_opportunity.booked_net_arr,
      sfdc_opportunity.churned_contraction_net_arr,
      sfdc_opportunity.calculated_deal_count,
      sfdc_opportunity.booked_churned_contraction_deal_count,
      sfdc_opportunity.booked_churned_contraction_net_arr,
      sfdc_opportunity.renewal_amount,
      sfdc_opportunity.total_contract_value,
      sfdc_opportunity.days_in_stage,
      sfdc_opportunity.calculated_age_in_days,
      sfdc_opportunity.days_since_last_activity,
      sfdc_opportunity.pre_military_invasion_arr,
      sfdc_opportunity.won_arr_basis_for_clari,
      sfdc_opportunity.arr_basis_for_clari,
      sfdc_opportunity.forecasted_churn_for_clari,
      sfdc_opportunity.override_arr_basis_clari,
      sfdc_opportunity.vsa_start_date_net_arr

    FROM sfdc_opportunity
    LEFT JOIN crm_account_dimensions
      ON sfdc_opportunity.dim_crm_account_id = crm_account_dimensions.dim_crm_account_id
    LEFT JOIN prep_crm_account
      ON sfdc_opportunity.dim_crm_account_id = prep_crm_account.dim_crm_account_id
    LEFT JOIN sales_qualified_source
      ON sfdc_opportunity.sales_qualified_source = sales_qualified_source.sales_qualified_source_name
    LEFT JOIN order_type
      ON sfdc_opportunity.order_type = order_type.order_type_name
    LEFT JOIN order_type AS order_type_live
      ON sfdc_opportunity.order_type_live = order_type_live.order_type_name
    LEFT JOIN deal_path
      ON sfdc_opportunity.deal_path = deal_path.deal_path_name
    LEFT JOIN sales_segment
      ON sfdc_opportunity.sales_segment = sales_segment.sales_segment_name
        LEFT JOIN prep_crm_user_hierarchy
      ON sfdc_opportunity.dim_crm_opp_owner_stamped_hierarchy_sk = prep_crm_user_hierarchy.dim_crm_user_hierarchy_sk
    LEFT JOIN dr_partner_engagement
      ON sfdc_opportunity.dr_partner_engagement = dr_partner_engagement.dr_partner_engagement_name
    LEFT JOIN alliance_type
      ON sfdc_opportunity.alliance_type = alliance_type.alliance_type_name
    LEFT JOIN alliance_type AS alliance_type_current
      ON sfdc_opportunity.alliance_type_current = alliance_type_current.alliance_type_name
    LEFT JOIN channel_type
      ON sfdc_opportunity.channel_type = channel_type.channel_type_name
    LEFT JOIN sales_rep
      ON sfdc_opportunity.dim_crm_user_id = sales_rep.dim_crm_user_id
    LEFT JOIN sales_rep AS sales_rep_account
      ON prep_crm_account.dim_crm_user_id = sales_rep_account.dim_crm_user_id

)

{{ dbt_audit(
    cte_ref="final_opportunities",
    created_by="@mcooperDD",
    updated_by="@lisvinueza",
    created_date="2020-11-30",
    updated_date="2023-05-21"
) }}1f:T3ef4,



WITH crm_account_dimensions AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mapping.map_crm_account

), prep_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_prep.prep_crm_account

), order_type AS (

    SELECT * 
    FROM "PROD".common_prep.prep_order_type

), sales_qualified_source AS (

    SELECT * 
    FROM "PROD".common_prep.prep_sales_qualified_source

), deal_path AS (

    SELECT * 
    FROM "PROD".common_prep.prep_deal_path

), sales_rep AS (

    SELECT * 
    FROM "PROD".common_prep.prep_crm_user

), sales_segment AS (

    SELECT * 
    FROM "PROD".common_prep.prep_sales_segment

), sfdc_campaigns AS (

    SELECT * 
    FROM "PROD".common_prep.prep_campaign

), dr_partner_engagement AS (

    SELECT * 
    FROM "PROD".common_prep.prep_dr_partner_engagement

), alliance_type AS (

    SELECT * 
    FROM "PROD".common_prep.prep_alliance_type_scd

), channel_type AS (

    SELECT * 
    FROM "PROD".common_prep.prep_channel_type

), prep_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_prep.prep_crm_opportunity

), prep_crm_user_hierarchy AS (

    SELECT * 
    FROM "PROD".common_prep.prep_crm_user_hierarchy

)

, sfdc_opportunity AS (

    SELECT *
    FROM prep_crm_opportunity
    WHERE is_live = 1

), final_opportunities AS (

    SELECT

      -- opportunity and person ids
      sfdc_opportunity.dim_crm_opportunity_id,
      sfdc_opportunity.merged_opportunity_id                                                                              AS merged_crm_opportunity_id,
      sfdc_opportunity.dim_crm_account_id,
      crm_account_dimensions.dim_parent_crm_account_id,
      sfdc_opportunity.dim_crm_person_id,
      sfdc_opportunity.sfdc_contact_id,
      sfdc_opportunity.record_type_id,

      -- dates
      sfdc_opportunity.created_date,
      sfdc_opportunity.created_date_id,
      sfdc_opportunity.sales_accepted_date,
      sfdc_opportunity.sales_accepted_date_id,
      sfdc_opportunity.close_date,
      sfdc_opportunity.close_date_id,
      sfdc_opportunity.arr_created_date_id,
      sfdc_opportunity.arr_created_date,
      sfdc_opportunity.stage_0_pending_acceptance_date,
      sfdc_opportunity.stage_0_pending_acceptance_date_id,
      sfdc_opportunity.stage_1_discovery_date,
      sfdc_opportunity.stage_1_discovery_date_id,
      sfdc_opportunity.stage_2_scoping_date,
      sfdc_opportunity.stage_2_scoping_date_id,
      sfdc_opportunity.stage_3_technical_evaluation_date,
      sfdc_opportunity.stage_3_technical_evaluation_date_id,
      sfdc_opportunity.stage_4_proposal_date,
      sfdc_opportunity.stage_4_proposal_date_id,
      sfdc_opportunity.stage_5_negotiating_date,
      sfdc_opportunity.stage_5_negotiating_date_id,
      sfdc_opportunity.stage_6_awaiting_signature_date,
      sfdc_opportunity.stage_6_awaiting_signature_date_id,
      sfdc_opportunity.stage_6_closed_won_date,
      sfdc_opportunity.stage_6_closed_won_date_id,
      sfdc_opportunity.stage_6_closed_lost_date,
      sfdc_opportunity.stage_6_closed_lost_date_id,
      sfdc_opportunity.days_in_0_pending_acceptance,
      sfdc_opportunity.days_in_1_discovery,
      sfdc_opportunity.days_in_2_scoping,
      sfdc_opportunity.days_in_3_technical_evaluation,
      sfdc_opportunity.days_in_4_proposal,
      sfdc_opportunity.days_in_5_negotiating,
      sfdc_opportunity.subscription_start_date_id,
      sfdc_opportunity.subscription_end_date_id,
      sfdc_opportunity.sales_qualified_date_id,
      sfdc_opportunity.last_activity_date,
      sfdc_opportunity.last_activity_date_id,
      sfdc_opportunity.sales_last_activity_date,
      sfdc_opportunity.sales_last_activity_date_id,
      sfdc_opportunity.technical_evaluation_date,
      sfdc_opportunity.technical_evaluation_date_id,

      -- common dimension keys
      

  COALESCE(sfdc_opportunity.dim_crm_user_id, MD5(-1)) 

                                                                   AS dim_crm_user_id,
      

  COALESCE(prep_crm_account.dim_crm_user_id, MD5(-1)) 

                                                                   AS dim_crm_account_user_id,
      

  COALESCE(order_type.dim_order_type_id, MD5(-1)) 

                                                                       AS dim_order_type_id,
      

  COALESCE(order_type_live.dim_order_type_id, MD5(-1)) 

                                                                  AS dim_order_type_live_id,
      

  COALESCE(dr_partner_engagement.dim_dr_partner_engagement_id, MD5(-1)) 

                                                 AS dim_dr_partner_engagement_id,
      

  COALESCE(alliance_type.dim_alliance_type_id, MD5(-1)) 

                                                                 AS dim_alliance_type_id,
      

  COALESCE(alliance_type_current.dim_alliance_type_id, MD5(-1)) 

                                                         AS dim_alliance_type_current_id,
      

  COALESCE(channel_type.dim_channel_type_id, MD5(-1)) 

                                                                   AS dim_channel_type_id,
      

  COALESCE(sales_qualified_source.dim_sales_qualified_source_id, MD5(-1)) 

                                               AS dim_sales_qualified_source_id,
      

  COALESCE(deal_path.dim_deal_path_id, MD5(-1)) 

                                                                         AS dim_deal_path_id,
      

  COALESCE(crm_account_dimensions.dim_parent_sales_segment_id,sales_segment.dim_sales_segment_id, MD5(-1)) 

              AS dim_parent_sales_segment_id,
      crm_account_dimensions.dim_parent_sales_territory_id,
      crm_account_dimensions.dim_parent_industry_id,
      

  COALESCE(crm_account_dimensions.dim_account_sales_segment_id,sales_segment.dim_sales_segment_id, MD5(-1)) 

             AS dim_account_sales_segment_id,
      crm_account_dimensions.dim_account_sales_territory_id,
      crm_account_dimensions.dim_account_industry_id,
      crm_account_dimensions.dim_account_location_country_id,
      crm_account_dimensions.dim_account_location_region_id,
      

  COALESCE(prep_crm_user_hierarchy.dim_crm_user_hierarchy_id, MD5(-1)) 

                                                  AS dim_crm_opp_owner_user_hierarchy_id,
      sfdc_opportunity.dim_crm_opp_owner_stamped_hierarchy_sk,
      

  COALESCE(prep_crm_user_hierarchy.dim_crm_user_business_unit_id, MD5(-1)) 

                                              AS dim_crm_opp_owner_business_unit_stamped_id,
      

  COALESCE(prep_crm_user_hierarchy.dim_crm_user_sales_segment_id, MD5(-1)) 

                                              AS dim_crm_opp_owner_sales_segment_stamped_id,
      

  COALESCE(prep_crm_user_hierarchy.dim_crm_user_geo_id, MD5(-1)) 

                                                        AS dim_crm_opp_owner_geo_stamped_id,
      

  COALESCE(prep_crm_user_hierarchy.dim_crm_user_region_id, MD5(-1)) 

                                                     AS dim_crm_opp_owner_region_stamped_id,
      

  COALESCE(prep_crm_user_hierarchy.dim_crm_user_area_id, MD5(-1)) 

                                                       AS dim_crm_opp_owner_area_stamped_id,
      

  COALESCE(sales_rep.dim_crm_user_hierarchy_sk, MD5(-1)) 

                                                                AS dim_crm_user_hierarchy_live_sk,
      

  COALESCE(sales_rep.dim_crm_user_business_unit_id, MD5(-1)) 

                                                            AS dim_crm_user_business_unit_id,
      

  COALESCE(sales_rep.dim_crm_user_sales_segment_id, MD5(-1)) 

                                                            AS dim_crm_user_sales_segment_id,
      

  COALESCE(sales_rep.dim_crm_user_geo_id, MD5(-1)) 

                                                                      AS dim_crm_user_geo_id,
      

  COALESCE(sales_rep.dim_crm_user_region_id, MD5(-1)) 

                                                                   AS dim_crm_user_region_id,
      

  COALESCE(sales_rep.dim_crm_user_area_id, MD5(-1)) 

                                                                     AS dim_crm_user_area_id,
      

  COALESCE(sales_rep_account.dim_crm_user_hierarchy_sk, MD5(-1)) 

                                                        AS dim_crm_user_hierarchy_account_user_sk,
      

  COALESCE(sales_rep_account.dim_crm_user_business_unit_id, MD5(-1)) 

                                                    AS dim_crm_account_user_business_unit_id,
      

  COALESCE(sales_rep_account.dim_crm_user_sales_segment_id, MD5(-1)) 

                                                    AS dim_crm_account_user_sales_segment_id,
      

  COALESCE(sales_rep_account.dim_crm_user_geo_id, MD5(-1)) 

                                                              AS dim_crm_account_user_geo_id,
      

  COALESCE(sales_rep_account.dim_crm_user_region_id, MD5(-1)) 

                                                           AS dim_crm_account_user_region_id,
      

  COALESCE(sales_rep_account.dim_crm_user_area_id, MD5(-1)) 

                                                             AS dim_crm_account_user_area_id,
      sfdc_opportunity.ssp_id,
      sfdc_opportunity.ga_client_id,

      -- flags
      sfdc_opportunity.is_closed,
      sfdc_opportunity.is_won,
      sfdc_opportunity.is_refund,
      sfdc_opportunity.is_downgrade,
      sfdc_opportunity.is_swing_deal,
      sfdc_opportunity.is_edu_oss,
      sfdc_opportunity.is_web_portal_purchase,
      sfdc_opportunity.fpa_master_bookings_flag,
      sfdc_opportunity.is_sao,
      sfdc_opportunity.is_sdr_sao,
      sfdc_opportunity.is_net_arr_closed_deal,
      sfdc_opportunity.is_new_logo_first_order,
      sfdc_opportunity.is_net_arr_pipeline_created,
      sfdc_opportunity.is_win_rate_calc,
      sfdc_opportunity.is_closed_won,
      sfdc_opportunity.is_stage_1_plus,
      sfdc_opportunity.is_stage_3_plus,
      sfdc_opportunity.is_stage_4_plus,
      sfdc_opportunity.is_lost,
      sfdc_opportunity.is_open,
      sfdc_opportunity.is_active,
      sfdc_opportunity.is_credit,
      sfdc_opportunity.is_renewal,
      sfdc_opportunity.is_deleted,
      sfdc_opportunity.is_excluded_from_pipeline_created,
      sfdc_opportunity.is_duplicate,
      sfdc_opportunity.is_contract_reset,
      sfdc_opportunity.is_comp_new_logo_override,
      sfdc_opportunity.is_eligible_open_pipeline,
      sfdc_opportunity.is_eligible_asp_analysis,
      sfdc_opportunity.is_eligible_age_analysis,
      sfdc_opportunity.is_eligible_churn_contraction,
      sfdc_opportunity.is_booked_net_arr,
      sales_rep.is_hybrid_user AS is_hybrid_opp_owner_opp,
      sales_rep_account.is_hybrid_user AS is_hybrid_account_owner_opp,

      sfdc_opportunity.primary_solution_architect,
      sfdc_opportunity.product_details,
      sfdc_opportunity.product_category,
      sfdc_opportunity.products_purchased,
      sfdc_opportunity.growth_type,
      sfdc_opportunity.opportunity_deal_size,
      sfdc_opportunity.closed_buckets,

      -- channel fields
      sfdc_opportunity.lead_source,
      sfdc_opportunity.dr_partner_deal_type,
      sfdc_opportunity.dr_partner_engagement,
      sfdc_opportunity.partner_account,
      sfdc_opportunity.dr_status,
      sfdc_opportunity.dr_deal_id,
      sfdc_opportunity.dr_primary_registration,
      sfdc_opportunity.distributor,
      sfdc_opportunity.influence_partner,
      sfdc_opportunity.fulfillment_partner,
      sfdc_opportunity.platform_partner,
      sfdc_opportunity.partner_track,
      sfdc_opportunity.resale_partner_track,
      sfdc_opportunity.is_public_sector_opp,
      sfdc_opportunity.is_registration_from_portal,
      sfdc_opportunity.calculated_discount,
      sfdc_opportunity.partner_discount,
      sfdc_opportunity.partner_discount_calc,
      sfdc_opportunity.comp_channel_neutral,

      -- additive fields
      sfdc_opportunity.incremental_acv                                                                                      AS iacv,
      sfdc_opportunity.net_incremental_acv                                                                                  AS net_iacv,
      sfdc_opportunity.segment_order_type_iacv_to_net_arr_ratio,
      sfdc_opportunity.calculated_from_ratio_net_arr,
      sfdc_opportunity.net_arr,
      sfdc_opportunity.raw_net_arr,
      sfdc_opportunity.created_and_won_same_quarter_net_arr,
      sfdc_opportunity.new_logo_count,
      sfdc_opportunity.amount,
      sfdc_opportunity.recurring_amount,
      sfdc_opportunity.true_up_amount,
      sfdc_opportunity.proserv_amount,
      sfdc_opportunity.other_non_recurring_amount,
      sfdc_opportunity.arr_basis,
      sfdc_opportunity.arr,
      sfdc_opportunity.count_crm_attribution_touchpoints,
      sfdc_opportunity.weighted_linear_iacv,
      sfdc_opportunity.count_campaigns,
      sfdc_opportunity.probability,
      sfdc_opportunity.days_in_sao,
      sfdc_opportunity.open_1plus_deal_count,
      sfdc_opportunity.open_3plus_deal_count,
      sfdc_opportunity.open_4plus_deal_count,
      sfdc_opportunity.booked_deal_count,
      sfdc_opportunity.churned_contraction_deal_count,
      sfdc_opportunity.open_1plus_net_arr,
      sfdc_opportunity.open_3plus_net_arr,
      sfdc_opportunity.open_4plus_net_arr,
      sfdc_opportunity.booked_net_arr,
      sfdc_opportunity.churned_contraction_net_arr,
      sfdc_opportunity.calculated_deal_count,
      sfdc_opportunity.booked_churned_contraction_deal_count,
      sfdc_opportunity.booked_churned_contraction_net_arr,
      sfdc_opportunity.renewal_amount,
      sfdc_opportunity.total_contract_value,
      sfdc_opportunity.days_in_stage,
      sfdc_opportunity.calculated_age_in_days,
      sfdc_opportunity.days_since_last_activity,
      sfdc_opportunity.pre_military_invasion_arr,
      sfdc_opportunity.won_arr_basis_for_clari,
      sfdc_opportunity.arr_basis_for_clari,
      sfdc_opportunity.forecasted_churn_for_clari,
      sfdc_opportunity.override_arr_basis_clari,
      sfdc_opportunity.vsa_start_date_net_arr

    FROM sfdc_opportunity
    LEFT JOIN crm_account_dimensions
      ON sfdc_opportunity.dim_crm_account_id = crm_account_dimensions.dim_crm_account_id
    LEFT JOIN prep_crm_account
      ON sfdc_opportunity.dim_crm_account_id = prep_crm_account.dim_crm_account_id
    LEFT JOIN sales_qualified_source
      ON sfdc_opportunity.sales_qualified_source = sales_qualified_source.sales_qualified_source_name
    LEFT JOIN order_type
      ON sfdc_opportunity.order_type = order_type.order_type_name
    LEFT JOIN order_type AS order_type_live
      ON sfdc_opportunity.order_type_live = order_type_live.order_type_name
    LEFT JOIN deal_path
      ON sfdc_opportunity.deal_path = deal_path.deal_path_name
    LEFT JOIN sales_segment
      ON sfdc_opportunity.sales_segment = sales_segment.sales_segment_name
        LEFT JOIN prep_crm_user_hierarchy
      ON sfdc_opportunity.dim_crm_opp_owner_stamped_hierarchy_sk = prep_crm_user_hierarchy.dim_crm_user_hierarchy_sk
    LEFT JOIN dr_partner_engagement
      ON sfdc_opportunity.dr_partner_engagement = dr_partner_engagement.dr_partner_engagement_name
    LEFT JOIN alliance_type
      ON sfdc_opportunity.alliance_type = alliance_type.alliance_type_name
    LEFT JOIN alliance_type AS alliance_type_current
      ON sfdc_opportunity.alliance_type_current = alliance_type_current.alliance_type_name
    LEFT JOIN channel_type
      ON sfdc_opportunity.channel_type = channel_type.channel_type_name
    LEFT JOIN sales_rep
      ON sfdc_opportunity.dim_crm_user_id = sales_rep.dim_crm_user_id
    LEFT JOIN sales_rep AS sales_rep_account
      ON prep_crm_account.dim_crm_user_id = sales_rep_account.dim_crm_user_id

)

SELECT
      *,
      '@mcooperDD'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2020-11-30'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final_opportunities20:T7fd,WITH prep_charge AS (

    SELECT *
    FROM {{ ref('prep_charge') }}

), prep_amendment AS (

  SELECT *
  FROM {{ ref('prep_amendment') }}

), fct_charge AS (

    SELECT
      --Surrogate Key
      prep_charge.dim_charge_id,

      --Natural Key
      prep_charge.subscription_name,
      prep_charge.subscription_version,
      prep_charge.subscription_created_by_id                                AS subscription_created_by_user_id,
      prep_charge.rate_plan_charge_number,
      prep_charge.rate_plan_charge_version,
      prep_charge.rate_plan_charge_segment,

      --Common Dimension Keys
      prep_charge.dim_product_detail_id,
      {{ get_keyed_nulls('prep_amendment.dim_amendment_id') }}              AS dim_amendment_id_charge,
      prep_charge.dim_subscription_id,
      prep_charge.dim_billing_account_id,
      prep_charge.dim_crm_account_id,
      prep_charge.dim_parent_crm_account_id,
      prep_charge.dim_order_id,
      prep_charge.effective_start_date_id,
      prep_charge.effective_end_date_id,

      --Additive Fields
      prep_charge.mrr,
      prep_charge.previous_mrr,
      prep_charge.delta_mrr,
      prep_charge.arr,
      prep_charge.previous_arr,
      prep_charge.delta_arr,
      prep_charge.quantity,
      prep_charge.previous_quantity,
      prep_charge.delta_quantity,
      prep_charge.delta_tcv,
      prep_charge.estimated_total_future_billings,

      prep_charge.unit_of_measure,
      prep_charge.charge_type,
      prep_charge.effective_start_month,
      prep_charge.effective_end_month

    FROM prep_charge
    LEFT JOIN prep_amendment
      ON prep_charge.dim_amendment_id_charge = prep_amendment.dim_amendment_id
    ORDER BY prep_charge.dim_parent_crm_account_id, prep_charge.dim_crm_account_id, subscription_name, subscription_version,
      rate_plan_charge_number, rate_plan_charge_version, rate_plan_charge_segment

)

{{ dbt_audit(
    cte_ref="fct_charge",
    created_by="@iweeks",
    updated_by="@chrissharp",
    created_date="2021-06-07",
    updated_date="2023-02-20"
) }}21:T90b,WITH prep_charge AS (

    SELECT *
    FROM "PROD".restricted_safe_common_prep.prep_charge

), prep_amendment AS (

  SELECT *
  FROM "PROD".common_prep.prep_amendment

), fct_charge AS (

    SELECT
      --Surrogate Key
      prep_charge.dim_charge_id,

      --Natural Key
      prep_charge.subscription_name,
      prep_charge.subscription_version,
      prep_charge.subscription_created_by_id                                AS subscription_created_by_user_id,
      prep_charge.rate_plan_charge_number,
      prep_charge.rate_plan_charge_version,
      prep_charge.rate_plan_charge_segment,

      --Common Dimension Keys
      prep_charge.dim_product_detail_id,
      

  COALESCE(prep_amendment.dim_amendment_id, MD5(-1)) 

              AS dim_amendment_id_charge,
      prep_charge.dim_subscription_id,
      prep_charge.dim_billing_account_id,
      prep_charge.dim_crm_account_id,
      prep_charge.dim_parent_crm_account_id,
      prep_charge.dim_order_id,
      prep_charge.effective_start_date_id,
      prep_charge.effective_end_date_id,

      --Additive Fields
      prep_charge.mrr,
      prep_charge.previous_mrr,
      prep_charge.delta_mrr,
      prep_charge.arr,
      prep_charge.previous_arr,
      prep_charge.delta_arr,
      prep_charge.quantity,
      prep_charge.previous_quantity,
      prep_charge.delta_quantity,
      prep_charge.delta_tcv,
      prep_charge.estimated_total_future_billings,

      prep_charge.unit_of_measure,
      prep_charge.charge_type,
      prep_charge.effective_start_month,
      prep_charge.effective_end_month

    FROM prep_charge
    LEFT JOIN prep_amendment
      ON prep_charge.dim_amendment_id_charge = prep_amendment.dim_amendment_id
    ORDER BY prep_charge.dim_parent_crm_account_id, prep_charge.dim_crm_account_id, subscription_name, subscription_version,
      rate_plan_charge_number, rate_plan_charge_version, rate_plan_charge_segment

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-06-07'::DATE        AS model_created_date,
      '2023-02-20'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM fct_charge22:T1ef1,{{ config({
    "alias": "dim_crm_account",
    "post-hook": "{{ missing_member_column(primary_key = 'dim_crm_account_id', not_null_test_cols = ['is_reseller']) }}"
}) }}

WITH final AS (

    SELECT 
      --primary key
      prep_crm_account.dim_crm_account_id,

      --surrogate keys
      prep_crm_account.dim_parent_crm_account_id,
      prep_crm_account.dim_crm_user_id,
      prep_crm_account.merged_to_account_id,
      prep_crm_account.record_type_id,
      prep_crm_account.master_record_id,
      prep_crm_account.dim_crm_person_primary_contact_id,

      --account people
      prep_crm_account.crm_account_owner,
      prep_crm_account.proposed_crm_account_owner,
      prep_crm_account.account_owner,
      prep_crm_account.technical_account_manager,
      prep_crm_account.owner_role,
      prep_crm_account.user_role_type,

      ----ultimate parent crm account info
      prep_crm_account.parent_crm_account_name,
      prep_crm_account.parent_crm_account_sales_segment,
      prep_crm_account.parent_crm_account_sales_segment_grouped,
      prep_crm_account.parent_crm_account_segment_region_stamped_grouped,
      prep_crm_account.parent_crm_account_industry,
      prep_crm_account.parent_crm_account_business_unit,
      prep_crm_account.parent_crm_account_geo,
      prep_crm_account.parent_crm_account_region,
      prep_crm_account.parent_crm_account_area,
      prep_crm_account.parent_crm_account_territory,
      prep_crm_account.parent_crm_account_role_type,
      prep_crm_account.parent_crm_account_max_family_employee,
      prep_crm_account.parent_crm_account_upa_country,
      prep_crm_account.parent_crm_account_upa_state,
      prep_crm_account.parent_crm_account_upa_city,
      prep_crm_account.parent_crm_account_upa_street,
      prep_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      prep_crm_account.crm_account_name,
      prep_crm_account.crm_account_employee_count,
      prep_crm_account.crm_account_gtm_strategy,
      prep_crm_account.crm_account_focus_account,
      prep_crm_account.crm_account_owner_user_segment,
      prep_crm_account.crm_account_billing_country,
      prep_crm_account.crm_account_billing_country_code,
      prep_crm_account.crm_account_type,
      prep_crm_account.crm_account_industry,
      prep_crm_account.crm_account_sub_industry,
      prep_crm_account.crm_account_employee_count_band,
      prep_crm_account.partner_vat_tax_id,
      prep_crm_account.account_manager,
      prep_crm_account.business_development_rep,
      prep_crm_account.dedicated_service_engineer,
      prep_crm_account.account_tier,
      prep_crm_account.account_tier_notes,
      prep_crm_account.license_utilization,
      prep_crm_account.support_level,
      prep_crm_account.named_account,
      prep_crm_account.billing_postal_code,
      prep_crm_account.partner_type,
      prep_crm_account.partner_status,
      prep_crm_account.gitlab_customer_success_project,
      prep_crm_account.demandbase_account_list,
      prep_crm_account.demandbase_intent,
      prep_crm_account.demandbase_page_views,
      prep_crm_account.demandbase_score,
      prep_crm_account.demandbase_sessions,
      prep_crm_account.demandbase_trending_offsite_intent,
      prep_crm_account.demandbase_trending_onsite_engagement,
      prep_crm_account.is_locally_managed_account,
      prep_crm_account.is_strategic_account,
      prep_crm_account.partner_track,
      prep_crm_account.partners_partner_type,
      prep_crm_account.gitlab_partner_program,
      prep_crm_account.zoom_info_company_name,
      prep_crm_account.zoom_info_company_revenue,
      prep_crm_account.zoom_info_company_employee_count,
      prep_crm_account.zoom_info_company_industry,
      prep_crm_account.zoom_info_company_city,
      prep_crm_account.zoom_info_company_state_province,
      prep_crm_account.zoom_info_company_country,
      prep_crm_account.account_phone,
      prep_crm_account.zoominfo_account_phone,
      prep_crm_account.abm_tier,
      prep_crm_account.health_number,
      prep_crm_account.health_score_color,
      prep_crm_account.partner_account_iban_number,
      prep_crm_account.gitlab_com_user,
      prep_crm_account.crm_account_zi_technologies,
      prep_crm_account.crm_account_zoom_info_website,
      prep_crm_account.crm_account_zoom_info_company_other_domains,
      prep_crm_account.crm_account_zoom_info_dozisf_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_name,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      prep_crm_account.forbes_2000_rank,
      prep_crm_account.sales_development_rep,
      prep_crm_account.admin_manual_source_number_of_employees,
      prep_crm_account.admin_manual_source_account_address,
      prep_crm_account.eoa_sentiment,
      prep_crm_account.gs_health_user_engagement,
      prep_crm_account.gs_health_cd,
      prep_crm_account.gs_health_devsecops,
      prep_crm_account.gs_health_ci,
      prep_crm_account.gs_health_scm,
      prep_crm_account.risk_impact,
      prep_crm_account.risk_reason,
      prep_crm_account.last_timeline_at_risk_update,
      prep_crm_account.last_at_risk_update_comments,
      prep_crm_account.bdr_prospecting_status,

      --measures (maintain for now to not break reporting)
      prep_crm_account.parent_crm_account_lam,
      prep_crm_account.parent_crm_account_lam_dev_count,
      prep_crm_account.carr_account_family,
      prep_crm_account.carr_this_account,

      --degenerative dimensions
      prep_crm_account.is_sdr_target_account,
      prep_crm_account.is_key_account,
      prep_crm_account.is_reseller,
      prep_crm_account.is_jihu_account,
      prep_crm_account.is_first_order_available,
      prep_crm_account.is_zi_jenkins_present,
      prep_crm_account.is_zi_svn_present,
      prep_crm_account.is_zi_tortoise_svn_present,
      prep_crm_account.is_zi_gcp_present,
      prep_crm_account.is_zi_atlassian_present,
      prep_crm_account.is_zi_github_present,
      prep_crm_account.is_zi_github_enterprise_present,
      prep_crm_account.is_zi_aws_present,
      prep_crm_account.is_zi_kubernetes_present,
      prep_crm_account.is_zi_apache_subversion_present,
      prep_crm_account.is_zi_apache_subversion_svn_present,
      prep_crm_account.is_zi_hashicorp_present,
      prep_crm_account.is_zi_aws_cloud_trail_present,
      prep_crm_account.is_zi_circle_ci_present,
      prep_crm_account.is_zi_bit_bucket_present,
      prep_crm_account.is_excluded_from_zoom_info_enrich,

      --dates
      prep_crm_account.crm_account_created_date,
      prep_crm_account.abm_tier_1_date,
      prep_crm_account.abm_tier_2_date,
      prep_crm_account.abm_tier_3_date,
      prep_crm_account.gtm_acceleration_date,
      prep_crm_account.gtm_account_based_date,
      prep_crm_account.gtm_account_centric_date,
      prep_crm_account.partners_signed_contract_date,
      prep_crm_account.technical_account_manager_date,
      prep_crm_account.customer_since_date,
      prep_crm_account.next_renewal_date,
      prep_crm_account.gs_first_value_date,
      prep_crm_account.gs_last_csm_activity_date,

      --metadata
      prep_crm_account.created_by_name,
      prep_crm_account.last_modified_by_name,
      prep_crm_account.last_modified_date,
      prep_crm_account.last_activity_date,
      prep_crm_account.is_deleted,
      prep_crm_account.pte_score,
      prep_crm_account.pte_decile,
      prep_crm_account.pte_score_group,
      prep_crm_account.ptc_score,
      prep_crm_account.ptc_decile,
      prep_crm_account.ptc_score_group
    FROM {{ ref('prep_crm_account') }}

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@msendal",
    updated_by="@lisvinueza",
    created_date="2020-06-01",
    updated_date="2023-05-21"
) }}23:T1f4e,

WITH final AS (

    SELECT 
      --primary key
      prep_crm_account.dim_crm_account_id,

      --surrogate keys
      prep_crm_account.dim_parent_crm_account_id,
      prep_crm_account.dim_crm_user_id,
      prep_crm_account.merged_to_account_id,
      prep_crm_account.record_type_id,
      prep_crm_account.master_record_id,
      prep_crm_account.dim_crm_person_primary_contact_id,

      --account people
      prep_crm_account.crm_account_owner,
      prep_crm_account.proposed_crm_account_owner,
      prep_crm_account.account_owner,
      prep_crm_account.technical_account_manager,
      prep_crm_account.owner_role,
      prep_crm_account.user_role_type,

      ----ultimate parent crm account info
      prep_crm_account.parent_crm_account_name,
      prep_crm_account.parent_crm_account_sales_segment,
      prep_crm_account.parent_crm_account_sales_segment_grouped,
      prep_crm_account.parent_crm_account_segment_region_stamped_grouped,
      prep_crm_account.parent_crm_account_industry,
      prep_crm_account.parent_crm_account_business_unit,
      prep_crm_account.parent_crm_account_geo,
      prep_crm_account.parent_crm_account_region,
      prep_crm_account.parent_crm_account_area,
      prep_crm_account.parent_crm_account_territory,
      prep_crm_account.parent_crm_account_role_type,
      prep_crm_account.parent_crm_account_max_family_employee,
      prep_crm_account.parent_crm_account_upa_country,
      prep_crm_account.parent_crm_account_upa_state,
      prep_crm_account.parent_crm_account_upa_city,
      prep_crm_account.parent_crm_account_upa_street,
      prep_crm_account.parent_crm_account_upa_postal_code,

      --descriptive attributes
      prep_crm_account.crm_account_name,
      prep_crm_account.crm_account_employee_count,
      prep_crm_account.crm_account_gtm_strategy,
      prep_crm_account.crm_account_focus_account,
      prep_crm_account.crm_account_owner_user_segment,
      prep_crm_account.crm_account_billing_country,
      prep_crm_account.crm_account_billing_country_code,
      prep_crm_account.crm_account_type,
      prep_crm_account.crm_account_industry,
      prep_crm_account.crm_account_sub_industry,
      prep_crm_account.crm_account_employee_count_band,
      prep_crm_account.partner_vat_tax_id,
      prep_crm_account.account_manager,
      prep_crm_account.business_development_rep,
      prep_crm_account.dedicated_service_engineer,
      prep_crm_account.account_tier,
      prep_crm_account.account_tier_notes,
      prep_crm_account.license_utilization,
      prep_crm_account.support_level,
      prep_crm_account.named_account,
      prep_crm_account.billing_postal_code,
      prep_crm_account.partner_type,
      prep_crm_account.partner_status,
      prep_crm_account.gitlab_customer_success_project,
      prep_crm_account.demandbase_account_list,
      prep_crm_account.demandbase_intent,
      prep_crm_account.demandbase_page_views,
      prep_crm_account.demandbase_score,
      prep_crm_account.demandbase_sessions,
      prep_crm_account.demandbase_trending_offsite_intent,
      prep_crm_account.demandbase_trending_onsite_engagement,
      prep_crm_account.is_locally_managed_account,
      prep_crm_account.is_strategic_account,
      prep_crm_account.partner_track,
      prep_crm_account.partners_partner_type,
      prep_crm_account.gitlab_partner_program,
      prep_crm_account.zoom_info_company_name,
      prep_crm_account.zoom_info_company_revenue,
      prep_crm_account.zoom_info_company_employee_count,
      prep_crm_account.zoom_info_company_industry,
      prep_crm_account.zoom_info_company_city,
      prep_crm_account.zoom_info_company_state_province,
      prep_crm_account.zoom_info_company_country,
      prep_crm_account.account_phone,
      prep_crm_account.zoominfo_account_phone,
      prep_crm_account.abm_tier,
      prep_crm_account.health_number,
      prep_crm_account.health_score_color,
      prep_crm_account.partner_account_iban_number,
      prep_crm_account.gitlab_com_user,
      prep_crm_account.crm_account_zi_technologies,
      prep_crm_account.crm_account_zoom_info_website,
      prep_crm_account.crm_account_zoom_info_company_other_domains,
      prep_crm_account.crm_account_zoom_info_dozisf_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_parent_company_name,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_zi_id,
      prep_crm_account.crm_account_zoom_info_ultimate_parent_company_name,
      prep_crm_account.forbes_2000_rank,
      prep_crm_account.sales_development_rep,
      prep_crm_account.admin_manual_source_number_of_employees,
      prep_crm_account.admin_manual_source_account_address,
      prep_crm_account.eoa_sentiment,
      prep_crm_account.gs_health_user_engagement,
      prep_crm_account.gs_health_cd,
      prep_crm_account.gs_health_devsecops,
      prep_crm_account.gs_health_ci,
      prep_crm_account.gs_health_scm,
      prep_crm_account.risk_impact,
      prep_crm_account.risk_reason,
      prep_crm_account.last_timeline_at_risk_update,
      prep_crm_account.last_at_risk_update_comments,
      prep_crm_account.bdr_prospecting_status,

      --measures (maintain for now to not break reporting)
      prep_crm_account.parent_crm_account_lam,
      prep_crm_account.parent_crm_account_lam_dev_count,
      prep_crm_account.carr_account_family,
      prep_crm_account.carr_this_account,

      --degenerative dimensions
      prep_crm_account.is_sdr_target_account,
      prep_crm_account.is_key_account,
      prep_crm_account.is_reseller,
      prep_crm_account.is_jihu_account,
      prep_crm_account.is_first_order_available,
      prep_crm_account.is_zi_jenkins_present,
      prep_crm_account.is_zi_svn_present,
      prep_crm_account.is_zi_tortoise_svn_present,
      prep_crm_account.is_zi_gcp_present,
      prep_crm_account.is_zi_atlassian_present,
      prep_crm_account.is_zi_github_present,
      prep_crm_account.is_zi_github_enterprise_present,
      prep_crm_account.is_zi_aws_present,
      prep_crm_account.is_zi_kubernetes_present,
      prep_crm_account.is_zi_apache_subversion_present,
      prep_crm_account.is_zi_apache_subversion_svn_present,
      prep_crm_account.is_zi_hashicorp_present,
      prep_crm_account.is_zi_aws_cloud_trail_present,
      prep_crm_account.is_zi_circle_ci_present,
      prep_crm_account.is_zi_bit_bucket_present,
      prep_crm_account.is_excluded_from_zoom_info_enrich,

      --dates
      prep_crm_account.crm_account_created_date,
      prep_crm_account.abm_tier_1_date,
      prep_crm_account.abm_tier_2_date,
      prep_crm_account.abm_tier_3_date,
      prep_crm_account.gtm_acceleration_date,
      prep_crm_account.gtm_account_based_date,
      prep_crm_account.gtm_account_centric_date,
      prep_crm_account.partners_signed_contract_date,
      prep_crm_account.technical_account_manager_date,
      prep_crm_account.customer_since_date,
      prep_crm_account.next_renewal_date,
      prep_crm_account.gs_first_value_date,
      prep_crm_account.gs_last_csm_activity_date,

      --metadata
      prep_crm_account.created_by_name,
      prep_crm_account.last_modified_by_name,
      prep_crm_account.last_modified_date,
      prep_crm_account.last_activity_date,
      prep_crm_account.is_deleted,
      prep_crm_account.pte_score,
      prep_crm_account.pte_decile,
      prep_crm_account.pte_score_group,
      prep_crm_account.ptc_score,
      prep_crm_account.ptc_decile,
      prep_crm_account.ptc_score_group
    FROM "PROD".restricted_safe_common_prep.prep_crm_account

)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@lisvinueza'::VARCHAR       AS updated_by,
      '2020-06-01'::DATE        AS model_created_date,
      '2023-05-21'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final24:T55d,{{ config({
        "tags": ["mnpi_exception"],
        "alias": "dim_billing_account"
    })
}}

{{ simple_cte([
    ('prep_billing_account','prep_billing_account')
]) }}

, billing_account AS (


    SELECT
    --surrogate key
      prep_billing_account.dim_billing_account_sk,
    
     --natural key
      prep_billing_account.dim_billing_account_id,
 
     --foreign key
      prep_billing_account.dim_crm_account_id,

     --Other attributes
      prep_billing_account.billing_account_number,
      prep_billing_account.billing_account_name,
      prep_billing_account.account_status,
      prep_billing_account.parent_id,
      prep_billing_account.sfdc_account_code                  AS crm_account_code, 
      prep_billing_account.sfdc_entity                        AS crm_entity,
      prep_billing_account.account_currency,
      prep_billing_account.sold_to_country,
      prep_billing_account.ssp_channel,
      prep_billing_account.po_required,
      prep_billing_account.auto_pay,
      prep_billing_account.default_payment_method_type,
      prep_billing_account.is_deleted,
      prep_billing_account.batch,
      prep_billing_account.record_data_source
    FROM prep_billing_account

)

{{ dbt_audit(
    cte_ref="billing_account",
    created_by="@snalamaru",
    updated_by="@snalamaru",
    created_date="2023-04-25",
    updated_date="2023-05-31"
) }}25:T608,



WITH prep_billing_account AS (

    SELECT * 
    FROM "PROD".common_prep.prep_billing_account

)

, billing_account AS (


    SELECT
    --surrogate key
      prep_billing_account.dim_billing_account_sk,
    
     --natural key
      prep_billing_account.dim_billing_account_id,
 
     --foreign key
      prep_billing_account.dim_crm_account_id,

     --Other attributes
      prep_billing_account.billing_account_number,
      prep_billing_account.billing_account_name,
      prep_billing_account.account_status,
      prep_billing_account.parent_id,
      prep_billing_account.sfdc_account_code                  AS crm_account_code, 
      prep_billing_account.sfdc_entity                        AS crm_entity,
      prep_billing_account.account_currency,
      prep_billing_account.sold_to_country,
      prep_billing_account.ssp_channel,
      prep_billing_account.po_required,
      prep_billing_account.auto_pay,
      prep_billing_account.default_payment_method_type,
      prep_billing_account.is_deleted,
      prep_billing_account.batch,
      prep_billing_account.record_data_source
    FROM prep_billing_account

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@snalamaru'::VARCHAR       AS updated_by,
      '2023-04-25'::DATE        AS model_created_date,
      '2023-05-31'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM billing_account26:T77d,{{ config({
        "alias": "dim_product_detail"
    })
}}

WITH base AS (

    SELECT *
    FROM {{ ref('prep_product_detail') }}

), final AS (

    SELECT
      dim_product_detail_id            AS dim_product_detail_id,
      product_id                       AS product_id,
      dim_product_tier_id              AS dim_product_tier_id,
      product_rate_plan_id             AS product_rate_plan_id,
      product_rate_plan_charge_id      AS product_rate_plan_charge_id,
      product_rate_plan_name           AS product_rate_plan_name,
      product_rate_plan_charge_name    AS product_rate_plan_charge_name,
      product_name                     AS product_name,
      product_sku                      AS product_sku,
      product_tier_historical          AS product_tier_historical,
      product_tier_historical_short    AS product_tier_historical_short,
      product_tier_name                AS product_tier_name,
      product_tier_name_short          AS product_tier_name_short,
      product_delivery_type            AS product_delivery_type,
      product_deployment_type          AS product_deployment_type,
      service_type                     AS service_type,
      is_reporter_license              AS is_reporter_license,
      effective_start_date             AS effective_start_date,
      effective_end_date               AS effective_end_date,
      product_ranking                  AS product_ranking,
      is_oss_or_edu_rate_plan          AS is_oss_or_edu_rate_plan,
      billing_list_price               AS billing_list_price,
      annual_billing_list_price        AS annual_billing_list_price,
      is_licensed_user                 AS is_licensed_user,
      is_arpu                          AS is_arpu
    FROM base
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@ischweickartDD",
    updated_by="@jpeguero",
    created_date="2020-12-16",
    updated_date="2023-05-25"
) }}27:T839,

WITH base AS (

    SELECT *
    FROM "PROD".common_prep.prep_product_detail

), final AS (

    SELECT
      dim_product_detail_id            AS dim_product_detail_id,
      product_id                       AS product_id,
      dim_product_tier_id              AS dim_product_tier_id,
      product_rate_plan_id             AS product_rate_plan_id,
      product_rate_plan_charge_id      AS product_rate_plan_charge_id,
      product_rate_plan_name           AS product_rate_plan_name,
      product_rate_plan_charge_name    AS product_rate_plan_charge_name,
      product_name                     AS product_name,
      product_sku                      AS product_sku,
      product_tier_historical          AS product_tier_historical,
      product_tier_historical_short    AS product_tier_historical_short,
      product_tier_name                AS product_tier_name,
      product_tier_name_short          AS product_tier_name_short,
      product_delivery_type            AS product_delivery_type,
      product_deployment_type          AS product_deployment_type,
      service_type                     AS service_type,
      is_reporter_license              AS is_reporter_license,
      effective_start_date             AS effective_start_date,
      effective_end_date               AS effective_end_date,
      product_ranking                  AS product_ranking,
      is_oss_or_edu_rate_plan          AS is_oss_or_edu_rate_plan,
      billing_list_price               AS billing_list_price,
      annual_billing_list_price        AS annual_billing_list_price,
      is_licensed_user                 AS is_licensed_user,
      is_arpu                          AS is_arpu
    FROM base
)

SELECT
      *,
      '@ischweickartDD'::VARCHAR       AS created_by,
      '@jpeguero'::VARCHAR       AS updated_by,
      '2020-12-16'::DATE        AS model_created_date,
      '2023-05-25'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final28:T81e,

WITH dates AS (

  SELECT
    "DATE_DAY",
  "DATE_ACTUAL",
  "DAY_NAME",
  "MONTH_ACTUAL",
  "YEAR_ACTUAL",
  "QUARTER_ACTUAL",
  "DAY_OF_WEEK",
  "FIRST_DAY_OF_WEEK",
  "WEEK_OF_YEAR",
  "DAY_OF_MONTH",
  "DAY_OF_QUARTER",
  "DAY_OF_YEAR",
  "FISCAL_YEAR",
  "FISCAL_QUARTER",
  "DAY_OF_FISCAL_QUARTER",
  "DAY_OF_FISCAL_YEAR",
  "MONTH_NAME",
  "FIRST_DAY_OF_MONTH",
  "LAST_DAY_OF_MONTH",
  "FIRST_DAY_OF_YEAR",
  "LAST_DAY_OF_YEAR",
  "FIRST_DAY_OF_QUARTER",
  "LAST_DAY_OF_QUARTER",
  "FIRST_DAY_OF_FISCAL_QUARTER",
  "LAST_DAY_OF_FISCAL_QUARTER",
  "FIRST_DAY_OF_FISCAL_YEAR",
  "LAST_DAY_OF_FISCAL_YEAR",
  "WEEK_OF_FISCAL_YEAR",
  "MONTH_OF_FISCAL_YEAR",
  "LAST_DAY_OF_WEEK",
  "QUARTER_NAME",
  "FISCAL_QUARTER_NAME",
  "FISCAL_QUARTER_NAME_FY",
  "FISCAL_QUARTER_NUMBER_ABSOLUTE",
  "FISCAL_MONTH_NAME",
  "FISCAL_MONTH_NAME_FY",
  "HOLIDAY_DESC",
  "IS_HOLIDAY",
  "LAST_MONTH_OF_FISCAL_QUARTER",
  "IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER",
  "LAST_MONTH_OF_FISCAL_YEAR",
  "IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR",
  "SNAPSHOT_DATE_FPA",
  "SNAPSHOT_DATE_BILLINGS",
  "DAYS_IN_MONTH_COUNT",
  "WEEK_OF_MONTH_NORMALISED",
  "DAY_OF_FISCAL_QUARTER_NORMALISED",
  "WEEK_OF_FISCAL_QUARTER_NORMALISED",
  "DAY_OF_FISCAL_YEAR_NORMALISED",
  "IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK",
  "DAYS_UNTIL_LAST_DAY_OF_MONTH",
  "CURRENT_DATE_ACTUAL",
  "CURRENT_FISCAL_YEAR",
  "CURRENT_FIRST_DAY_OF_FISCAL_YEAR",
  "CURRENT_FISCAL_QUARTER_NAME_FY",
  "CURRENT_FIRST_DAY_OF_MONTH"
  FROM "PROD".common_prep.prep_date

), final AS (

  SELECT
    

  TO_NUMBER(TO_CHAR(date_actual::DATE,'YYYYMMDD'),'99999999')

                                AS date_id,
    *
  FROM dates

)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@pempey'::VARCHAR       AS updated_by,
      '2020-06-01'::DATE        AS model_created_date,
      '2023-01-09'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final29:T571,{%- macro dbt_audit(cte_ref, created_by, updated_by, created_date, updated_date) -%}

    SELECT
      *,
      '{{ created_by }}'::VARCHAR       AS created_by,
      '{{ updated_by }}'::VARCHAR       AS updated_by,
      '{{ created_date }}'::DATE        AS model_created_date,
      '{{ updated_date }}'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    {% if execute %}

        {% if not flags.FULL_REFRESH and config.get('materialized') == "incremental" %}

            {%- set source_relation = adapter.get_relation(
                database=target.database,
                schema=this.schema,
                identifier=this.table,
                ) -%}      

            {% if source_relation != None %}

                {% set min_created_date %}
                    SELECT LEAST(MIN(dbt_created_at), CURRENT_TIMESTAMP()) AS min_ts 
                    FROM {{ this }}
                {% endset %}

                {% set results = run_query(min_created_date) %}

                '{{results.columns[0].values()[0]}}'::TIMESTAMP AS dbt_created_at

            {% else %}

                CURRENT_TIMESTAMP()               AS dbt_created_at

            {% endif %}

        {% else %}

            CURRENT_TIMESTAMP()               AS dbt_created_at

        {% endif %}
    
    {% endif %}

    FROM {{ cte_ref }}

{%- endmacro -%}2a:T416,Used to simplify CTE imports in a model.

A large portion of import statements in a SQL model are simple `SELECT * FROM table`. Writing pure SQL is verbose and this macro aims to simplify the imports.

The macro accepts once argument which is a list of tuples where each tuple has the alias name and the table reference.

Below is an example and the expected output:

```sql

{{ simple_cte([
    ('map_merged_crm_account','map_merged_crm_account'),
    ('zuora_account','zuora_account_source'),
    ('zuora_contact','zuora_contact_source')
]) }}

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM {{ref('zuora_excluded_accounts')}}

)

```

```sql
WITH map_merged_crm_account AS (

    SELECT * 
    FROM "PROD".common.map_merged_crm_account

), zuora_account AS (

    SELECT * 
    FROM "PREP".zuora.zuora_account_source

), zuora_contact AS (

    SELECT * 
    FROM "PREP".zuora.zuora_contact_source

)

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM "PROD".legacy.zuora_excluded_accounts

)
```2c:Tba06,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{% set renewal_fiscal_years = dbt_utils.get_column_values(
        table=ref('prep_renewal_fiscal_years'),
        where="fiscal_year >= 2019",
        column='fiscal_year',
        order_by='fiscal_year' )%}

{{ simple_cte([
    ('dim_date','dim_date'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_subscription', 'dim_subscription'),
    ('dim_crm_opportunity', 'dim_crm_opportunity'),
    ('fct_crm_opportunity', 'fct_crm_opportunity'),
    ('dim_charge', 'dim_charge'),
    ('fct_charge', 'fct_charge'),
    ('dim_billing_account', 'dim_billing_account'),
    ('dim_product_detail', 'dim_product_detail'),
    ('dim_amendment', 'dim_amendment')
]) }}

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

{% for renewal_fiscal_year in renewal_fiscal_years -%}
), renewal_subscriptions_{{renewal_fiscal_year}} AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_{{renewal_fiscal_year}} AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_{{renewal_fiscal_year}})
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON mart_charge.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('{{renewal_fiscal_year}}'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '{{renewal_fiscal_year}}'
        )

), agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term <= 12
    {{ dbt_utils.group_by(n=23) }}

), agg_charge_term_greater_than_12_{{renewal_fiscal_year}} AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_{{renewal_fiscal_year}}
    WHERE current_term > 12
    {{ dbt_utils.group_by(n=23) }}

), twenty_four_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

), thirty_six_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), forty_eight_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), sixty_mth_term_{{renewal_fiscal_year}} AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('{{renewal_fiscal_year}}','-01-01')
    {{ dbt_utils.group_by(n=23) }}
    ORDER BY 1

), combined_{{renewal_fiscal_year}} AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_{{renewal_fiscal_year}}

    UNION ALL

    SELECT *
    FROM sixty_mth_term_{{renewal_fiscal_year}}

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_{{renewal_fiscal_year}} AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_{{renewal_fiscal_year}}.term_end_month, base_{{renewal_fiscal_year}}.dim_charge_id)      AS concat_primary_key,
      {{ dbt_utils.surrogate_key(['concat_primary_key' ]) }}                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_{{renewal_fiscal_year}}.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_{{renewal_fiscal_year}}.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_{{renewal_fiscal_year}}.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_{{renewal_fiscal_year}}.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_{{renewal_fiscal_year}}.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_{{renewal_fiscal_year}}.subscription_name                                                                                        AS subscription_name,
      base_{{renewal_fiscal_year}}.subscription_start_month                                                                                 AS subscription_start_month,
      base_{{renewal_fiscal_year}}.subscription_end_month                                                                                   AS subscription_end_month,
      base_{{renewal_fiscal_year}}.term_start_month                                                                                         AS term_start_month,
      base_{{renewal_fiscal_year}}.term_end_month                                                                                           AS renewal_month,
      combined_{{renewal_fiscal_year}}.term_end_month                                                                                       AS bookings_term_end_month,
      base_{{renewal_fiscal_year}}.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_{{renewal_fiscal_year}}.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS current_term,
      renewal_subscriptions_{{renewal_fiscal_year}}.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_{{renewal_fiscal_year}}.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_{{renewal_fiscal_year}}.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_{{renewal_fiscal_year}}.crm_account_name                                                                                         AS crm_account_name,
      base_{{renewal_fiscal_year}}.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_{{renewal_fiscal_year}}.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_{{renewal_fiscal_year}}.user_name                                                                                                AS user_name,
      base_{{renewal_fiscal_year}}.user_role_id                                                                                             AS user_role_id,
      base_{{renewal_fiscal_year}}.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_{{renewal_fiscal_year}}.crm_user_geo                                                                                             AS crm_user_geo,
      base_{{renewal_fiscal_year}}.crm_user_region                                                                                          AS crm_user_region,
      base_{{renewal_fiscal_year}}.crm_user_area                                                                                            AS crm_user_area,
      base_{{renewal_fiscal_year}}.product_tier_name                                                                                        AS product_tier_name,
      base_{{renewal_fiscal_year}}.product_delivery_type                                                                                    AS product_delivery_type,
      combined_{{renewal_fiscal_year}}.renewal_type                                                                                         AS renewal_type,
      base_{{renewal_fiscal_year}}.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_{{renewal_fiscal_year}}.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_{{renewal_fiscal_year}}.current_term                                                                                             AS subscription_term,
      base_{{renewal_fiscal_year}}.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
          AND CONCAT('{{renewal_fiscal_year}}','-01-01')
            AND base_{{renewal_fiscal_year}}.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_{{renewal_fiscal_year}}.arr                                                                                                      AS arr
    FROM combined_{{renewal_fiscal_year}}
    LEFT JOIN dim_date
      ON combined_{{renewal_fiscal_year}}.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_{{renewal_fiscal_year}}
      ON combined_{{renewal_fiscal_year}}.dim_charge_id = base_{{renewal_fiscal_year}}.dim_charge_id
    LEFT JOIN renewal_subscriptions_{{renewal_fiscal_year}}
      ON base_{{renewal_fiscal_year}}.subscription_name = renewal_subscriptions_{{renewal_fiscal_year}}.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_{{renewal_fiscal_year}}.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_{{renewal_fiscal_year}}.term_end_month BETWEEN DATEADD('month',1, CONCAT('{{renewal_fiscal_year}}'-1,'-01-01'))
      AND CONCAT('{{renewal_fiscal_year}}','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

{% endfor -%}
), unioned as (

{% for renewal_fiscal_year in renewal_fiscal_years-%}

    SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_{{renewal_fiscal_year}}
    {%- if not loop.last %} UNION ALL {%- endif %}

{% endfor -%}

)

{{ dbt_audit(
    cte_ref="unioned",
    created_by="@michellecooper",
    updated_by="@nmcavinue",
    created_date="2021-12-06",
    updated_date="2023-05-30"
) }}2d:T4f7ad,





WITH dim_date AS (

    SELECT * 
    FROM "PROD".common.dim_date

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_opportunity

), fct_crm_opportunity AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_crm_opportunity

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_charge

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_amendment AS (

    SELECT * 
    FROM "PROD".common.dim_amendment

)

, dim_subscription_source AS (

    SELECT
      dim_subscription.*,
       CASE
         WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
             = term_start_month THEN TRUE
         ELSE FALSE
       END AS is_dup_term
     FROM dim_subscription
     WHERE
       --data quality, last version is expired with no ARR in mart_arr. Should filter it out completely.
       dim_subscription_id NOT IN ('2c92a0ff5e1dcf14015e3bb595f14eef','2c92a0ff5e1dcf14015e3c191d4f7689','2c92a007644967bc01645d54e7df49a8', '2c92a007644967bc01645d54e9b54a4b', '2c92a0ff5e1dcf1a015e3bf7a32475a5')
       --test subscription
       AND subscription_name != 'Test- New Subscription'
       --data quality, last term not entered with same pattern, sub_name = A-S00022101
       AND dim_subscription_id != '2c92a00f7579c362017588a2de19174a'
       --term dates do not align to the subscription term dates, sub_name = A-S00038937
       AND dim_subscription_id != '2c92a01177472c5201774af57f834a43'
       --data quality, last term not entered with same pattern that fits ATR logic. Edge cases that needs to be filtered out to get to the last term version that should count for this subscription.
       --sub_name = A-S00011774
       AND dim_subscription_id NOT IN ('8a1298657dd7f81d017dde1bd9c03fa8','8a128b317dd7e89a017ddd38a74d3037','8a128b317dd7e89a017ddd38a6052ff0',
                                       '8a128b317dc30baa017dc41e5b0932e9','8a128b317dc30baa017dc41e59dd32be','8a128b317dc30baa017dc41e58b43295',
                                       '2c92a0fd7cc1ab13017cc843195f62fb','2c92a0fd7cc1ab13017cc843186f62da','2c92a0fd7cc1ab13017cc843178162b6',
                                       '2c92a0fd7cc1ab13017cc843164d6292')

), dim_subscription_int AS (

    SELECT
      dim_subscription_source.*,
      CASE
        WHEN LEAD(term_end_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(term_end_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_end_month THEN TRUE
        WHEN LEAD(subscription_end_fiscal_year) OVER (PARTITION BY subscription_name ORDER BY
            subscription_version) = subscription_end_fiscal_year THEN TRUE
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            = term_start_month THEN TRUE
        --check for subsequent subscriptiptions that are backed out
        WHEN LEAD(term_start_month) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,2) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,3) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,4) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,5) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,6) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,7) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,8) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,9) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,10) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,11) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,12) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,13) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        WHEN LEAD(term_start_month,14) OVER (PARTITION BY subscription_name ORDER BY subscription_version)
            < term_start_month THEN TRUE
        ELSE FALSE
      END AS exclude_from_term_sorting
    FROM dim_subscription_source
    WHERE is_dup_term = FALSE

), base_subscriptions AS (

    SELECT
      dim_subscription_id,
      RANK() OVER (PARTITION BY subscription_name, term_start_month ORDER BY subscription_version DESC) AS last_term_version,
      RANK() OVER (PARTITION BY subscription_name ORDER BY subscription_version DESC) AS last_version
    FROM dim_subscription_int
    WHERE exclude_from_term_sorting = FALSE

), dim_subscription_last_term AS (

    SELECT
      dim_subscription.*,
      base_subscriptions.last_version
    FROM dim_subscription
    INNER JOIN base_subscriptions
      ON dim_subscription.dim_subscription_id = base_subscriptions.dim_subscription_id
    WHERE last_term_version = 1

), mart_charge_base AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.is_single_fiscal_year_term_subscription,
      dim_subscription.term_start_fiscal_year,
      dim_subscription.term_end_fiscal_year,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings
    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'

), mart_charge AS (

    SELECT mart_charge_base.*
    FROM mart_charge_base
    INNER JOIN dim_subscription_last_term
      ON mart_charge_base.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    WHERE is_included_in_arr_calc = 'TRUE'
      AND mart_charge_base.term_end_month = mart_charge_base.effective_end_month
      AND arr != 0

), renewal_subscriptions_2019 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2019 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2019)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2019.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2019
      ON mart_charge.subscription_name = renewal_subscriptions_2019.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2019'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2019'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2019'
        )

), agg_charge_term_less_than_equal_12_2019 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2019
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2019 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2019
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2019 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2019 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2019
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2019','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2019 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2019

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2019

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2019

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2019

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2019

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2019

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2019 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2019.term_end_month, base_2019.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2019.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2019.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2019.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2019.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2019.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2019.subscription_name                                                                                        AS subscription_name,
      base_2019.subscription_start_month                                                                                 AS subscription_start_month,
      base_2019.subscription_end_month                                                                                   AS subscription_end_month,
      base_2019.term_start_month                                                                                         AS term_start_month,
      base_2019.term_end_month                                                                                           AS renewal_month,
      combined_2019.term_end_month                                                                                       AS bookings_term_end_month,
      base_2019.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2019.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2019.current_term                                                                                             AS current_term,
      renewal_subscriptions_2019.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2019.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2019.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2019.crm_account_name                                                                                         AS crm_account_name,
      base_2019.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2019.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2019.user_name                                                                                                AS user_name,
      base_2019.user_role_id                                                                                             AS user_role_id,
      base_2019.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2019.crm_user_geo                                                                                             AS crm_user_geo,
      base_2019.crm_user_region                                                                                          AS crm_user_region,
      base_2019.crm_user_area                                                                                            AS crm_user_area,
      base_2019.product_tier_name                                                                                        AS product_tier_name,
      base_2019.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2019.renewal_type                                                                                         AS renewal_type,
      base_2019.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2019.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2019.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2019.current_term                                                                                             AS subscription_term,
      base_2019.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
          AND CONCAT('2019','-01-01')
            AND base_2019.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2019.arr                                                                                                      AS arr
    FROM combined_2019
    LEFT JOIN dim_date
      ON combined_2019.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2019
      ON combined_2019.dim_charge_id = base_2019.dim_charge_id
    LEFT JOIN renewal_subscriptions_2019
      ON base_2019.subscription_name = renewal_subscriptions_2019.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2019.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2019.term_end_month BETWEEN DATEADD('month',1, CONCAT('2019'-1,'-01-01'))
      AND CONCAT('2019','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2020 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2020 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2020)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2020.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2020
      ON mart_charge.subscription_name = renewal_subscriptions_2020.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2020'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2020'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2020'
        )

), agg_charge_term_less_than_equal_12_2020 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2020
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2020 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2020
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2020 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2020 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2020
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2020','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2020 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2020

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2020

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2020

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2020

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2020

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2020

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2020 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2020.term_end_month, base_2020.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2020.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2020.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2020.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2020.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2020.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2020.subscription_name                                                                                        AS subscription_name,
      base_2020.subscription_start_month                                                                                 AS subscription_start_month,
      base_2020.subscription_end_month                                                                                   AS subscription_end_month,
      base_2020.term_start_month                                                                                         AS term_start_month,
      base_2020.term_end_month                                                                                           AS renewal_month,
      combined_2020.term_end_month                                                                                       AS bookings_term_end_month,
      base_2020.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2020.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2020.current_term                                                                                             AS current_term,
      renewal_subscriptions_2020.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2020.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2020.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2020.crm_account_name                                                                                         AS crm_account_name,
      base_2020.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2020.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2020.user_name                                                                                                AS user_name,
      base_2020.user_role_id                                                                                             AS user_role_id,
      base_2020.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2020.crm_user_geo                                                                                             AS crm_user_geo,
      base_2020.crm_user_region                                                                                          AS crm_user_region,
      base_2020.crm_user_area                                                                                            AS crm_user_area,
      base_2020.product_tier_name                                                                                        AS product_tier_name,
      base_2020.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2020.renewal_type                                                                                         AS renewal_type,
      base_2020.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2020.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2020.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2020.current_term                                                                                             AS subscription_term,
      base_2020.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
          AND CONCAT('2020','-01-01')
            AND base_2020.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2020.arr                                                                                                      AS arr
    FROM combined_2020
    LEFT JOIN dim_date
      ON combined_2020.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2020
      ON combined_2020.dim_charge_id = base_2020.dim_charge_id
    LEFT JOIN renewal_subscriptions_2020
      ON base_2020.subscription_name = renewal_subscriptions_2020.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2020.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2020.term_end_month BETWEEN DATEADD('month',1, CONCAT('2020'-1,'-01-01'))
      AND CONCAT('2020','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2021 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2021 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2021)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2021.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2021
      ON mart_charge.subscription_name = renewal_subscriptions_2021.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2021'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2021'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2021'
        )

), agg_charge_term_less_than_equal_12_2021 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2021
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2021 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2021
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2021 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2021 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2021
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2021','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2021 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2021

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2021

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2021

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2021

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2021

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2021

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2021 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2021.term_end_month, base_2021.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2021.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2021.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2021.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2021.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2021.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2021.subscription_name                                                                                        AS subscription_name,
      base_2021.subscription_start_month                                                                                 AS subscription_start_month,
      base_2021.subscription_end_month                                                                                   AS subscription_end_month,
      base_2021.term_start_month                                                                                         AS term_start_month,
      base_2021.term_end_month                                                                                           AS renewal_month,
      combined_2021.term_end_month                                                                                       AS bookings_term_end_month,
      base_2021.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2021.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2021.current_term                                                                                             AS current_term,
      renewal_subscriptions_2021.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2021.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2021.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2021.crm_account_name                                                                                         AS crm_account_name,
      base_2021.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2021.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2021.user_name                                                                                                AS user_name,
      base_2021.user_role_id                                                                                             AS user_role_id,
      base_2021.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2021.crm_user_geo                                                                                             AS crm_user_geo,
      base_2021.crm_user_region                                                                                          AS crm_user_region,
      base_2021.crm_user_area                                                                                            AS crm_user_area,
      base_2021.product_tier_name                                                                                        AS product_tier_name,
      base_2021.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2021.renewal_type                                                                                         AS renewal_type,
      base_2021.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2021.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2021.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2021.current_term                                                                                             AS subscription_term,
      base_2021.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
          AND CONCAT('2021','-01-01')
            AND base_2021.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2021.arr                                                                                                      AS arr
    FROM combined_2021
    LEFT JOIN dim_date
      ON combined_2021.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2021
      ON combined_2021.dim_charge_id = base_2021.dim_charge_id
    LEFT JOIN renewal_subscriptions_2021
      ON base_2021.subscription_name = renewal_subscriptions_2021.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2021.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2021.term_end_month BETWEEN DATEADD('month',1, CONCAT('2021'-1,'-01-01'))
      AND CONCAT('2021','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2022 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2022 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2022)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2022.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2022
      ON mart_charge.subscription_name = renewal_subscriptions_2022.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2022'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2022'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2022'
        )

), agg_charge_term_less_than_equal_12_2022 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2022
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2022 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2022
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2022 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2022 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2022
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2022','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2022 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2022

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2022

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2022

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2022

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2022

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2022

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2022 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2022.term_end_month, base_2022.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2022.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2022.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2022.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2022.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2022.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2022.subscription_name                                                                                        AS subscription_name,
      base_2022.subscription_start_month                                                                                 AS subscription_start_month,
      base_2022.subscription_end_month                                                                                   AS subscription_end_month,
      base_2022.term_start_month                                                                                         AS term_start_month,
      base_2022.term_end_month                                                                                           AS renewal_month,
      combined_2022.term_end_month                                                                                       AS bookings_term_end_month,
      base_2022.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2022.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2022.current_term                                                                                             AS current_term,
      renewal_subscriptions_2022.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2022.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2022.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2022.crm_account_name                                                                                         AS crm_account_name,
      base_2022.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2022.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2022.user_name                                                                                                AS user_name,
      base_2022.user_role_id                                                                                             AS user_role_id,
      base_2022.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2022.crm_user_geo                                                                                             AS crm_user_geo,
      base_2022.crm_user_region                                                                                          AS crm_user_region,
      base_2022.crm_user_area                                                                                            AS crm_user_area,
      base_2022.product_tier_name                                                                                        AS product_tier_name,
      base_2022.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2022.renewal_type                                                                                         AS renewal_type,
      base_2022.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2022.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2022.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2022.current_term                                                                                             AS subscription_term,
      base_2022.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
          AND CONCAT('2022','-01-01')
            AND base_2022.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2022.arr                                                                                                      AS arr
    FROM combined_2022
    LEFT JOIN dim_date
      ON combined_2022.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2022
      ON combined_2022.dim_charge_id = base_2022.dim_charge_id
    LEFT JOIN renewal_subscriptions_2022
      ON base_2022.subscription_name = renewal_subscriptions_2022.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2022.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2022.term_end_month BETWEEN DATEADD('month',1, CONCAT('2022'-1,'-01-01'))
      AND CONCAT('2022','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2023 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2023 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2023)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2023.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2023
      ON mart_charge.subscription_name = renewal_subscriptions_2023.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2023'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2023'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2023'
        )

), agg_charge_term_less_than_equal_12_2023 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2023
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2023 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2023
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2023 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2023 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2023
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2023','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2023 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2023

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2023

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2023

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2023

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2023

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2023

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2023 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2023.term_end_month, base_2023.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2023.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2023.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2023.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2023.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2023.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2023.subscription_name                                                                                        AS subscription_name,
      base_2023.subscription_start_month                                                                                 AS subscription_start_month,
      base_2023.subscription_end_month                                                                                   AS subscription_end_month,
      base_2023.term_start_month                                                                                         AS term_start_month,
      base_2023.term_end_month                                                                                           AS renewal_month,
      combined_2023.term_end_month                                                                                       AS bookings_term_end_month,
      base_2023.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2023.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2023.current_term                                                                                             AS current_term,
      renewal_subscriptions_2023.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2023.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2023.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2023.crm_account_name                                                                                         AS crm_account_name,
      base_2023.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2023.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2023.user_name                                                                                                AS user_name,
      base_2023.user_role_id                                                                                             AS user_role_id,
      base_2023.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2023.crm_user_geo                                                                                             AS crm_user_geo,
      base_2023.crm_user_region                                                                                          AS crm_user_region,
      base_2023.crm_user_area                                                                                            AS crm_user_area,
      base_2023.product_tier_name                                                                                        AS product_tier_name,
      base_2023.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2023.renewal_type                                                                                         AS renewal_type,
      base_2023.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2023.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2023.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2023.current_term                                                                                             AS subscription_term,
      base_2023.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
          AND CONCAT('2023','-01-01')
            AND base_2023.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2023.arr                                                                                                      AS arr
    FROM combined_2023
    LEFT JOIN dim_date
      ON combined_2023.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2023
      ON combined_2023.dim_charge_id = base_2023.dim_charge_id
    LEFT JOIN renewal_subscriptions_2023
      ON base_2023.subscription_name = renewal_subscriptions_2023.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2023.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2023.term_end_month BETWEEN DATEADD('month',1, CONCAT('2023'-1,'-01-01'))
      AND CONCAT('2023','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2024 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2024 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2024)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2024.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2024
      ON mart_charge.subscription_name = renewal_subscriptions_2024.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2024'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2024'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2024'
        )

), agg_charge_term_less_than_equal_12_2024 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2024
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2024 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2024
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2024 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2024 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2024
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2024','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2024 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2024

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2024

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2024

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2024

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2024

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2024

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2024 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2024.term_end_month, base_2024.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2024.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2024.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2024.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2024.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2024.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2024.subscription_name                                                                                        AS subscription_name,
      base_2024.subscription_start_month                                                                                 AS subscription_start_month,
      base_2024.subscription_end_month                                                                                   AS subscription_end_month,
      base_2024.term_start_month                                                                                         AS term_start_month,
      base_2024.term_end_month                                                                                           AS renewal_month,
      combined_2024.term_end_month                                                                                       AS bookings_term_end_month,
      base_2024.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2024.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2024.current_term                                                                                             AS current_term,
      renewal_subscriptions_2024.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2024.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2024.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2024.crm_account_name                                                                                         AS crm_account_name,
      base_2024.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2024.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2024.user_name                                                                                                AS user_name,
      base_2024.user_role_id                                                                                             AS user_role_id,
      base_2024.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2024.crm_user_geo                                                                                             AS crm_user_geo,
      base_2024.crm_user_region                                                                                          AS crm_user_region,
      base_2024.crm_user_area                                                                                            AS crm_user_area,
      base_2024.product_tier_name                                                                                        AS product_tier_name,
      base_2024.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2024.renewal_type                                                                                         AS renewal_type,
      base_2024.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2024.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2024.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2024.current_term                                                                                             AS subscription_term,
      base_2024.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
          AND CONCAT('2024','-01-01')
            AND base_2024.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2024.arr                                                                                                      AS arr
    FROM combined_2024
    LEFT JOIN dim_date
      ON combined_2024.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2024
      ON combined_2024.dim_charge_id = base_2024.dim_charge_id
    LEFT JOIN renewal_subscriptions_2024
      ON base_2024.subscription_name = renewal_subscriptions_2024.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2024.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2024.term_end_month BETWEEN DATEADD('month',1, CONCAT('2024'-1,'-01-01'))
      AND CONCAT('2024','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2025 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2025 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2025)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2025.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2025
      ON mart_charge.subscription_name = renewal_subscriptions_2025.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2025'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2025'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2025'
        )

), agg_charge_term_less_than_equal_12_2025 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2025
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2025 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2025
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2025 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2025 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2025
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2025','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2025 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2025

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2025

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2025

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2025

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2025

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2025

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2025 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2025.term_end_month, base_2025.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2025.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2025.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2025.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2025.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2025.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2025.subscription_name                                                                                        AS subscription_name,
      base_2025.subscription_start_month                                                                                 AS subscription_start_month,
      base_2025.subscription_end_month                                                                                   AS subscription_end_month,
      base_2025.term_start_month                                                                                         AS term_start_month,
      base_2025.term_end_month                                                                                           AS renewal_month,
      combined_2025.term_end_month                                                                                       AS bookings_term_end_month,
      base_2025.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2025.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2025.current_term                                                                                             AS current_term,
      renewal_subscriptions_2025.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2025.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2025.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2025.crm_account_name                                                                                         AS crm_account_name,
      base_2025.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2025.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2025.user_name                                                                                                AS user_name,
      base_2025.user_role_id                                                                                             AS user_role_id,
      base_2025.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2025.crm_user_geo                                                                                             AS crm_user_geo,
      base_2025.crm_user_region                                                                                          AS crm_user_region,
      base_2025.crm_user_area                                                                                            AS crm_user_area,
      base_2025.product_tier_name                                                                                        AS product_tier_name,
      base_2025.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2025.renewal_type                                                                                         AS renewal_type,
      base_2025.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2025.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2025.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2025.current_term                                                                                             AS subscription_term,
      base_2025.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
          AND CONCAT('2025','-01-01')
            AND base_2025.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2025.arr                                                                                                      AS arr
    FROM combined_2025
    LEFT JOIN dim_date
      ON combined_2025.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2025
      ON combined_2025.dim_charge_id = base_2025.dim_charge_id
    LEFT JOIN renewal_subscriptions_2025
      ON base_2025.subscription_name = renewal_subscriptions_2025.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2025.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2025.term_end_month BETWEEN DATEADD('month',1, CONCAT('2025'-1,'-01-01'))
      AND CONCAT('2025','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2026 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2026 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2026)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2026.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2026
      ON mart_charge.subscription_name = renewal_subscriptions_2026.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2026'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2026'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2026'
        )

), agg_charge_term_less_than_equal_12_2026 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2026
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2026 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2026
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2026 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2026 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2026
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2026','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2026 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2026

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2026

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2026

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2026

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2026

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2026

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2026 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2026.term_end_month, base_2026.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2026.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2026.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2026.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2026.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2026.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2026.subscription_name                                                                                        AS subscription_name,
      base_2026.subscription_start_month                                                                                 AS subscription_start_month,
      base_2026.subscription_end_month                                                                                   AS subscription_end_month,
      base_2026.term_start_month                                                                                         AS term_start_month,
      base_2026.term_end_month                                                                                           AS renewal_month,
      combined_2026.term_end_month                                                                                       AS bookings_term_end_month,
      base_2026.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2026.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2026.current_term                                                                                             AS current_term,
      renewal_subscriptions_2026.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2026.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2026.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2026.crm_account_name                                                                                         AS crm_account_name,
      base_2026.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2026.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2026.user_name                                                                                                AS user_name,
      base_2026.user_role_id                                                                                             AS user_role_id,
      base_2026.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2026.crm_user_geo                                                                                             AS crm_user_geo,
      base_2026.crm_user_region                                                                                          AS crm_user_region,
      base_2026.crm_user_area                                                                                            AS crm_user_area,
      base_2026.product_tier_name                                                                                        AS product_tier_name,
      base_2026.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2026.renewal_type                                                                                         AS renewal_type,
      base_2026.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2026.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2026.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2026.current_term                                                                                             AS subscription_term,
      base_2026.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
          AND CONCAT('2026','-01-01')
            AND base_2026.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2026.arr                                                                                                      AS arr
    FROM combined_2026
    LEFT JOIN dim_date
      ON combined_2026.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2026
      ON combined_2026.dim_charge_id = base_2026.dim_charge_id
    LEFT JOIN renewal_subscriptions_2026
      ON base_2026.subscription_name = renewal_subscriptions_2026.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2026.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2026.term_end_month BETWEEN DATEADD('month',1, CONCAT('2026'-1,'-01-01'))
      AND CONCAT('2026','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2027 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2027 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2027)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2027.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2027
      ON mart_charge.subscription_name = renewal_subscriptions_2027.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2027'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2027'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2027'
        )

), agg_charge_term_less_than_equal_12_2027 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2027
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2027 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2027
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2027 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2027 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2027
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2027','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2027 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2027

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2027

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2027

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2027

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2027

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2027

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2027 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2027.term_end_month, base_2027.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2027.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2027.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2027.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2027.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2027.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2027.subscription_name                                                                                        AS subscription_name,
      base_2027.subscription_start_month                                                                                 AS subscription_start_month,
      base_2027.subscription_end_month                                                                                   AS subscription_end_month,
      base_2027.term_start_month                                                                                         AS term_start_month,
      base_2027.term_end_month                                                                                           AS renewal_month,
      combined_2027.term_end_month                                                                                       AS bookings_term_end_month,
      base_2027.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2027.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2027.current_term                                                                                             AS current_term,
      renewal_subscriptions_2027.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2027.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2027.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2027.crm_account_name                                                                                         AS crm_account_name,
      base_2027.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2027.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2027.user_name                                                                                                AS user_name,
      base_2027.user_role_id                                                                                             AS user_role_id,
      base_2027.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2027.crm_user_geo                                                                                             AS crm_user_geo,
      base_2027.crm_user_region                                                                                          AS crm_user_region,
      base_2027.crm_user_area                                                                                            AS crm_user_area,
      base_2027.product_tier_name                                                                                        AS product_tier_name,
      base_2027.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2027.renewal_type                                                                                         AS renewal_type,
      base_2027.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2027.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2027.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2027.current_term                                                                                             AS subscription_term,
      base_2027.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
          AND CONCAT('2027','-01-01')
            AND base_2027.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2027.arr                                                                                                      AS arr
    FROM combined_2027
    LEFT JOIN dim_date
      ON combined_2027.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2027
      ON combined_2027.dim_charge_id = base_2027.dim_charge_id
    LEFT JOIN renewal_subscriptions_2027
      ON base_2027.subscription_name = renewal_subscriptions_2027.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2027.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2027.term_end_month BETWEEN DATEADD('month',1, CONCAT('2027'-1,'-01-01'))
      AND CONCAT('2027','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2028 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2028 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2028)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2028.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2028
      ON mart_charge.subscription_name = renewal_subscriptions_2028.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2028'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2028'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2028'
        )

), agg_charge_term_less_than_equal_12_2028 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2028
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2028 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2028
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2028 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2028 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2028
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2028','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2028 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2028

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2028

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2028

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2028

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2028

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2028

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2028 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2028.term_end_month, base_2028.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2028.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2028.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2028.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2028.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2028.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2028.subscription_name                                                                                        AS subscription_name,
      base_2028.subscription_start_month                                                                                 AS subscription_start_month,
      base_2028.subscription_end_month                                                                                   AS subscription_end_month,
      base_2028.term_start_month                                                                                         AS term_start_month,
      base_2028.term_end_month                                                                                           AS renewal_month,
      combined_2028.term_end_month                                                                                       AS bookings_term_end_month,
      base_2028.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2028.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2028.current_term                                                                                             AS current_term,
      renewal_subscriptions_2028.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2028.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2028.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2028.crm_account_name                                                                                         AS crm_account_name,
      base_2028.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2028.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2028.user_name                                                                                                AS user_name,
      base_2028.user_role_id                                                                                             AS user_role_id,
      base_2028.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2028.crm_user_geo                                                                                             AS crm_user_geo,
      base_2028.crm_user_region                                                                                          AS crm_user_region,
      base_2028.crm_user_area                                                                                            AS crm_user_area,
      base_2028.product_tier_name                                                                                        AS product_tier_name,
      base_2028.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2028.renewal_type                                                                                         AS renewal_type,
      base_2028.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2028.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2028.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2028.current_term                                                                                             AS subscription_term,
      base_2028.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
          AND CONCAT('2028','-01-01')
            AND base_2028.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2028.arr                                                                                                      AS arr
    FROM combined_2028
    LEFT JOIN dim_date
      ON combined_2028.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2028
      ON combined_2028.dim_charge_id = base_2028.dim_charge_id
    LEFT JOIN renewal_subscriptions_2028
      ON base_2028.subscription_name = renewal_subscriptions_2028.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2028.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2028.term_end_month BETWEEN DATEADD('month',1, CONCAT('2028'-1,'-01-01'))
      AND CONCAT('2028','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), renewal_subscriptions_2029 AS (

    SELECT DISTINCT
      sub_1.subscription_name,
      sub_1.zuora_renewal_subscription_name,
      DATE_TRUNC('month',sub_2.subscription_end_date) AS subscription_end_month
    FROM dim_subscription_last_term sub_1
    INNER JOIN dim_subscription_last_term sub_2
      ON sub_1.zuora_renewal_subscription_name = sub_2.subscription_name
    WHERE sub_1.zuora_renewal_subscription_name != ''
      AND sub_1.last_version = 1
      AND sub_2.last_version = 1

), base_2029 AS (--get the base data set of recurring charges.

    SELECT
      mart_charge.dim_charge_id,
      mart_charge.dim_crm_account_id,
      mart_charge.dim_billing_account_id,
      mart_charge.dim_subscription_id,
      mart_charge.dim_product_detail_id,
      mart_charge.parent_crm_account_name,
      mart_charge.crm_account_name,
      mart_charge.parent_crm_account_sales_segment,
      dim_crm_user.dim_crm_user_id,
      dim_crm_user.user_name,
      dim_crm_user.user_role_id,
      dim_crm_user.crm_user_sales_segment,
      dim_crm_user.crm_user_geo,
      dim_crm_user.crm_user_region,
      dim_crm_user.crm_user_area,
      mart_charge.product_tier_name,
      mart_charge.product_delivery_type,
      mart_charge.subscription_name,
      dim_subscription_last_term.zuora_renewal_subscription_name,
      dim_subscription_last_term.current_term,
      mart_charge.is_single_fiscal_year_term_subscription,
      CASE
        WHEN dim_subscription_last_term.current_term >= 24
          THEN TRUE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking,
      CASE
        WHEN dim_subscription_last_term.subscription_name IN (SELECT DISTINCT subscription_name FROM renewal_subscriptions_2029)
          THEN TRUE
        ELSE FALSE
      END                                                                                                                                               AS is_multi_year_booking_with_multi_subs,
      mart_charge.is_paid_in_full,
      mart_charge.estimated_total_future_billings,
      mart_charge.effective_start_month,
      mart_charge.effective_end_month,
      mart_charge.subscription_start_month,
      mart_charge.subscription_end_month,
      mart_charge.term_start_month,
      mart_charge.term_end_month,
      DATEADD('month',-1,mart_charge.term_end_month)                                                                                                    AS last_paid_month_in_term,
      renewal_subscriptions_2029.subscription_end_month                                                                              AS multi_year_booking_subscription_end_month,
      DATEDIFF(month,mart_charge.effective_start_month,mart_charge.effective_end_month)                                                                 AS charge_term,
      mart_charge.arr
    FROM mart_charge
    LEFT JOIN dim_subscription_last_term
      ON mart_charge.dim_subscription_id = dim_subscription_last_term.dim_subscription_id
    LEFT JOIN dim_crm_account
      ON mart_charge.dim_crm_account_id = dim_crm_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN renewal_subscriptions_2029
      ON mart_charge.subscription_name = renewal_subscriptions_2029.subscription_name
    WHERE ( mart_charge.term_start_month <= CONCAT('2029'-1,'-01-01')
      AND mart_charge.term_end_month > CONCAT('2029'-1,'-01-01')
      )
      OR (
          mart_charge.is_single_fiscal_year_term_subscription = TRUE
          AND mart_charge.term_start_fiscal_year = '2029'
        )

), agg_charge_term_less_than_equal_12_2029 AS (--get the starting and ending month ARR for charges with current terms <= 12 months. These terms do not need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                             AS renewal_type,
      is_single_fiscal_year_term_subscription,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      current_term,
      --charge_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)   AS arr
    FROM base_2029
    WHERE current_term <= 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), agg_charge_term_greater_than_12_2029 AS (--get the starting and ending month ARR for terms > 12 months. These terms need additional logic.

    SELECT
      CASE
        WHEN is_multi_year_booking = TRUE THEN 'MYB'
        ELSE 'Non-MYB'
      END                                   AS renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      --current_term,
      CASE--the below odd term charges do not behave well in the multi-year bookings logic and end up with duplicate renewals in the fiscal year. This CASE statement smooths out the charges so they only have one renewal entry in the fiscal year.
        WHEN current_term = 25 THEN 24
        WHEN current_term = 26 THEN 24
        WHEN current_term = 27 THEN 36
        WHEN current_term = 28 THEN 36
        WHEN current_term = 29 THEN 36
        WHEN current_term = 30 THEN 36
        WHEN current_term = 31 THEN 36
        WHEN current_term = 32 THEN 36
        WHEN current_term = 35 THEN 36
        WHEN current_term = 37 THEN 36
        WHEN current_term = 38 THEN 36
        WHEN current_term = 41 THEN 36
        WHEN current_term = 42 THEN 48
        WHEN current_term = 49 THEN 48
        WHEN current_term = 57 THEN 60
        ELSE current_term
      END                                   AS current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      term_end_month,
      subscription_end_month,
      SUM(arr)                              AS arr
    FROM base_2029
    WHERE current_term > 12
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), twenty_four_mth_term_2029 AS (--create records for the intermitent renewals for multi-year charges that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/2,term_start_month)  AS term_end_month,
      subscription_end_month,
      SUM(arr)                                          AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 13 AND 24
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

), thirty_six_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_myb for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/3*2,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 25 AND 36
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), forty_eight_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4,term_start_month)      AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/4*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 37 AND 48
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), sixty_mth_term_2029 AS (--create records for the intermitent renewals for multi-year bookings that are not in the Zuora data. The start and end months are in the agg_MYB for multi-year bookings.

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5,term_start_month)          AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*2,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*3,term_start_month)        AS term_end_month,
      subscription_end_month,
      SUM(arr)                                                  AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60
      AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    UNION ALL

    SELECT
      renewal_type,
      is_multi_year_booking,
      is_multi_year_booking_with_multi_subs,
      is_single_fiscal_year_term_subscription,
      current_term,
      dim_charge_id,
      dim_crm_account_id,
      dim_billing_account_id,
      dim_subscription_id,
      dim_crm_user_id,
      user_name,
      user_role_id,
      crm_user_sales_segment,
      crm_user_geo,
      crm_user_region,
      crm_user_area,
      dim_product_detail_id,
      product_tier_name,
      product_delivery_type,
      subscription_name,
      term_start_month,
      DATEADD('month',current_term/5*4,term_start_month)    AS term_end_month,
      subscription_end_month,
      SUM(arr)                                              AS arr
    FROM agg_charge_term_greater_than_12_2029
    WHERE current_term BETWEEN 49 AND 60 AND term_end_month > CONCAT('2029','-01-01')
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
    ORDER BY 1

), combined_2029 AS (--union all of the charges

    SELECT *
    FROM agg_charge_term_less_than_equal_12_2029

    UNION ALL

    SELECT *
    FROM agg_charge_term_greater_than_12_2029

    UNION ALL

    SELECT *
    FROM twenty_four_mth_term_2029

    UNION ALL

    SELECT *
    FROM thirty_six_mth_term_2029

    UNION ALL

    SELECT *
    FROM forty_eight_mth_term_2029

    UNION ALL

    SELECT *
    FROM sixty_mth_term_2029

), opportunity_term_group AS (

    SELECT
      dim_subscription.dim_subscription_id,
      dim_crm_opportunity.dim_crm_opportunity_id,
      CASE
        WHEN close_date IS NULL THEN '1951-01-01'
        ELSE DATE_TRUNC('month',close_date)
      END                                     AS close_month,
      CASE
        WHEN dim_crm_opportunity.opportunity_term = 0
          THEN '0 Years'
        WHEN dim_crm_opportunity.opportunity_term <= 12
          THEN '1 Year'
        WHEN dim_crm_opportunity.opportunity_term > 12
          AND dim_crm_opportunity.opportunity_term <= 24
            THEN '2 Years'
        WHEN dim_crm_opportunity.opportunity_term > 24
          AND dim_crm_opportunity.opportunity_term <= 36
            THEN '3 Years'
        WHEN dim_crm_opportunity.opportunity_term > 36
          THEN '4 Years+'
        WHEN dim_crm_opportunity.opportunity_term IS NULL
          THEN 'No Opportunity Term'
      END                                                                                                               AS opportunity_term_group
    FROM dim_subscription
    LEFT JOIN dim_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = dim_crm_opportunity.dim_crm_opportunity_id
    LEFT JOIN fct_crm_opportunity
      ON dim_subscription.dim_crm_opportunity_id = fct_crm_opportunity.dim_crm_opportunity_id

), renewal_report_2029 AS (--create the renewal report for the applicable fiscal year.

    SELECT
      CONCAT(dim_date.fiscal_quarter_name_fy, base_2029.term_end_month, base_2029.dim_charge_id)      AS concat_primary_key,
      md5(cast(coalesce(cast(concat_primary_key as 
    varchar
), '') as 
    varchar
))                                                                                AS primary_key,
      dim_date.fiscal_year                                                                                                                  AS fiscal_year,
      dim_date.fiscal_quarter_name_fy                                                                                                       AS fiscal_quarter_name_fy,
      opportunity_term_group.close_month                                                                                                    AS close_month,
      base_2029.dim_charge_id                                                                                            AS dim_charge_id,
      opportunity_term_group.dim_crm_opportunity_id                                                                                         AS dim_crm_opportunity_id,
      base_2029.dim_crm_account_id                                                                                       AS dim_crm_account_id,
      base_2029.dim_billing_account_id                                                                                   AS dim_billing_account_id,
      base_2029.dim_subscription_id                                                                                      AS dim_subscription_id,
      base_2029.dim_product_detail_id                                                                                    AS dim_product_detail_id,
      base_2029.subscription_name                                                                                        AS subscription_name,
      base_2029.subscription_start_month                                                                                 AS subscription_start_month,
      base_2029.subscription_end_month                                                                                   AS subscription_end_month,
      base_2029.term_start_month                                                                                         AS term_start_month,
      base_2029.term_end_month                                                                                           AS renewal_month,
      combined_2029.term_end_month                                                                                       AS bookings_term_end_month,
      base_2029.multi_year_booking_subscription_end_month                                                                AS multi_year_booking_subscription_end_month,
      base_2029.last_paid_month_in_term                                                                                  AS last_paid_month_in_term,
      base_2029.current_term                                                                                             AS current_term,
      renewal_subscriptions_2029.zuora_renewal_subscription_name                                                         AS zuora_renewal_subscription_name,
      renewal_subscriptions_2029.subscription_end_month                                                                  AS renewal_subscription_end_month,
      base_2029.parent_crm_account_name                                                                                  AS parent_crm_account_name,
      base_2029.crm_account_name                                                                                         AS crm_account_name,
      base_2029.parent_crm_account_sales_segment                                                                         AS parent_crm_account_sales_segment,
      base_2029.dim_crm_user_id                                                                                          AS dim_crm_user_id,
      base_2029.user_name                                                                                                AS user_name,
      base_2029.user_role_id                                                                                             AS user_role_id,
      base_2029.crm_user_sales_segment                                                                                   AS crm_user_sales_segment,
      base_2029.crm_user_geo                                                                                             AS crm_user_geo,
      base_2029.crm_user_region                                                                                          AS crm_user_region,
      base_2029.crm_user_area                                                                                            AS crm_user_area,
      base_2029.product_tier_name                                                                                        AS product_tier_name,
      base_2029.product_delivery_type                                                                                    AS product_delivery_type,
      combined_2029.renewal_type                                                                                         AS renewal_type,
      base_2029.is_multi_year_booking                                                                                    AS is_multi_year_booking,
      base_2029.is_multi_year_booking_with_multi_subs                                                                    AS is_multi_year_booking_with_multi_subs,
      base_2029.is_single_fiscal_year_term_subscription                                                                  AS is_single_fiscal_year_term_subscription,
      base_2029.current_term                                                                                             AS subscription_term,
      base_2029.estimated_total_future_billings                                                                          AS estimated_total_future_billings,
      CASE
        WHEN base_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
          AND CONCAT('2029','-01-01')
            AND base_2029.is_multi_year_booking_with_multi_subs = FALSE
            THEN TRUE
        ELSE FALSE
      END                                                                                                                                   AS is_available_to_renew,
      CASE
        WHEN opportunity_term_group.opportunity_term_group IS NULL
          THEN 'No Opportunity Term'
        ELSE opportunity_term_group.opportunity_term_group
      END                                                                                                                                   AS opportunity_term_group,
      base_2029.arr                                                                                                      AS arr
    FROM combined_2029
    LEFT JOIN dim_date
      ON combined_2029.term_end_month = dim_date.first_day_of_month
    LEFT JOIN base_2029
      ON combined_2029.dim_charge_id = base_2029.dim_charge_id
    LEFT JOIN renewal_subscriptions_2029
      ON base_2029.subscription_name = renewal_subscriptions_2029.subscription_name
    LEFT JOIN opportunity_term_group
      ON base_2029.dim_subscription_id = opportunity_term_group.dim_subscription_id
    WHERE combined_2029.term_end_month BETWEEN DATEADD('month',1, CONCAT('2029'-1,'-01-01'))
      AND CONCAT('2029','-01-01')
        AND day_of_month = 1
    ORDER BY fiscal_quarter_name_fy

), unioned as (

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2019 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2020 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2021 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2022 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2023 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2024 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2025 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2026 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2027 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2028 UNION ALL

SELECT
    primary_key,
    fiscal_year,
    fiscal_quarter_name_fy,
    close_month,
    dim_charge_id,
    dim_crm_opportunity_id,
    dim_crm_account_id,
    dim_billing_account_id,
    dim_subscription_id,
    dim_product_detail_id,
    subscription_name,
    subscription_start_month,
    subscription_end_month,
    term_start_month,
    renewal_month,
    bookings_term_end_month,
    multi_year_booking_subscription_end_month,
    last_paid_month_in_term,
    current_term,
    zuora_renewal_subscription_name,
    renewal_subscription_end_month,
    parent_crm_account_name,
    crm_account_name,
    parent_crm_account_sales_segment,
    dim_crm_user_id,
    user_name,
    user_role_id,
    crm_user_sales_segment,
    crm_user_geo,
    crm_user_region,
    crm_user_area,
    product_tier_name,
    product_delivery_type,
    renewal_type,
    is_multi_year_booking,
    is_multi_year_booking_with_multi_subs,
    is_single_fiscal_year_term_subscription,
    subscription_term,
    estimated_total_future_billings,
    is_available_to_renew,
    opportunity_term_group,
    arr
    FROM renewal_report_2029

)

SELECT
      *,
      '@michellecooper'::VARCHAR       AS created_by,
      '@nmcavinue'::VARCHAR       AS updated_by,
      '2021-12-06'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM unionedc:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.mart_available_to_renew"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"mart_available_to_renew"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","safe",{"children":[["$","code",null,{"children":["$","a",null,{"children":"safe"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PROD.restricted_safe_common_mart_finance.mart_available_to_renew"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"20 MB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-10 09:28UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"This model generates a list of subscriptions which will be available to renew in a given time period based on existing charges and term dates. It also has logic built in to identify multi-year bookings which is not yet avilable in the source data."}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$Lf",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_FINANCE","name":"MART_AVAILABLE_TO_RENEW","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"PRIMARY_KEY":{"type":"TEXT","index":1,"name":"primary_key","comment":null,"description":"Composite key for the model combining the unique identifier of the charge as well as the month the charge is effective in the term.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"primary_key"},"FISCAL_YEAR":{"type":"NUMBER","index":2,"name":"fiscal_year","comment":null,"description":"Fiscal year when the subscription will be available to renew.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"fiscal_year"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":3,"name":"fiscal_quarter_name_fy","comment":null,"description":"Fiscal quarter when the subscription will be available to renew.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name_fy"},"CLOSE_MONTH":{"type":"DATE","index":4,"name":"close_month","comment":null,"description":"Month when the opportunity associated with the subscription closed based on its `close_date`.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"close_month"},"DIM_CHARGE_ID":{"type":"TEXT","index":5,"name":"dim_charge_id","comment":null,"description":"Unique identifier of a rate plan charge associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_charge_id"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":6,"name":"dim_crm_opportunity_id","comment":null,"description":"Unique identifier of the crm opportunity associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":7,"name":"dim_crm_account_id","comment":null,"description":"Unique identifier of the crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":8,"name":"dim_billing_account_id","comment":null,"description":"Unique identifier of the billing account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":9,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a subscription.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":10,"name":"dim_product_detail_id","comment":null,"description":"Unique identifier of a product rate plan charge associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_detail_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":11,"name":"subscription_name","comment":null,"description":"Name applied to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_name"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":12,"name":"subscription_start_month","comment":null,"description":"Month when the subscription is set to begin.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":13,"name":"subscription_end_month","comment":null,"description":"Month when the subscription is set to end.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_month"},"TERM_START_MONTH":{"type":"DATE","index":14,"name":"term_start_month","comment":null,"description":"Month when a subscription term begins.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"term_start_month"},"RENEWAL_MONTH":{"type":"DATE","index":15,"name":"renewal_month","comment":null,"description":"Month when a subscription term ends.","meta":{},"data_type":null,"quote":null,"tags":["tdf","mart","atr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"renewal_month"},"BOOKINGS_TERM_END_MONTH":{"type":"DATE","index":16,"name":"bookings_term_end_month","comment":null,"description":"Similar to the term end month but calculates intermediate term end months for multi year subscriptions with terms greater than 12 months. These end months do not exist in the Zuora billing system. This allows us to get a view of all subscriptions renewing on a yearly basis.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"bookings_term_end_month"},"MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH":{"type":"DATE","index":17,"name":"MULTI_YEAR_BOOKING_SUBSCRIPTION_END_MONTH","comment":null,"display_name":"multi_year_booking_subscription_end_month"},"LAST_PAID_MONTH_IN_TERM":{"type":"DATE","index":18,"name":"last_paid_month_in_term","comment":null,"description":"Last month charge is applied for a charge's term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_paid_month_in_term"},"CURRENT_TERM":{"type":"NUMBER","index":19,"name":"current_term","comment":null,"description":"Duration of the subscription's current term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_term"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME":{"type":"TEXT","index":20,"name":"zuora_renewal_subscription_name","comment":null,"description":"Name of a renewal subscription associated with the current subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name"},"RENEWAL_SUBSCRIPTION_END_MONTH":{"type":"DATE","index":21,"name":"renewal_subscription_end_month","comment":null,"description":"End month of the renewal subscription associated with the current subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_subscription_end_month"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":22,"name":"parent_crm_account_name","comment":null,"description":"Name of the ultimate parent crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_name"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":23,"name":"crm_account_name","comment":null,"description":"Name of the crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":24,"name":"parent_crm_account_sales_segment","comment":null,"description":"Segment of the ultimate parent crm account associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment"},"DIM_CRM_USER_ID":{"type":"TEXT","index":25,"name":"dim_crm_user_id","comment":null,"description":"Unique identifier of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_user_id"},"USER_NAME":{"type":"TEXT","index":26,"name":"user_name","comment":null,"description":"Name of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_name"},"USER_ROLE_ID":{"type":"TEXT","index":27,"name":"user_role_id","comment":null,"description":"Unique identifier of the role of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_role_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":28,"name":"crm_user_sales_segment","comment":null,"description":"Segment of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_sales_segment"},"CRM_USER_GEO":{"type":"TEXT","index":29,"name":"crm_user_geo","comment":null,"description":"Geo of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_geo"},"CRM_USER_REGION":{"type":"TEXT","index":30,"name":"crm_user_region","comment":null,"description":"Region of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_region"},"CRM_USER_AREA":{"type":"TEXT","index":31,"name":"crm_user_area","comment":null,"description":"Area of the account owner associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_user_area"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":32,"name":"product_tier_name","comment":null,"description":"Tier of the product on the charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":33,"name":"product_delivery_type","comment":null,"description":"Delivery type of the product on the charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_delivery_type"},"RENEWAL_TYPE":{"type":"TEXT","index":34,"name":"renewal_type","comment":null,"description":"Type of renewal (multi-year_booking or not)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_type"},"IS_MULTI_YEAR_BOOKING":{"type":"BOOLEAN","index":35,"name":"is_multi_year_booking","comment":null,"description":"Flag indicating if a subscription is multi-year or not.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_multi_year_booking"},"IS_MULTI_YEAR_BOOKING_WITH_MULTI_SUBS":{"type":"BOOLEAN","index":36,"name":"is_multi_year_booking_with_multi_subs","comment":null,"description":"Flag indicating if a subscription is multi-year with multiple associated subscriptions.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_multi_year_booking_with_multi_subs"},"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION":{"type":"BOOLEAN","index":37,"name":"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION","comment":null,"display_name":"is_single_fiscal_year_term_subscription"},"SUBSCRIPTION_TERM":{"type":"NUMBER","index":38,"name":"subscription_term","comment":null,"description":"Current term of the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_term"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":39,"name":"estimated_total_future_billings","comment":null,"description":"Estimate of total amount to be billed in the future for a given charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"estimated_total_future_billings"},"IS_AVAILABLE_TO_RENEW":{"type":"BOOLEAN","index":40,"name":"is_available_to_renew","comment":null,"description":"Flag indicating if the subscription is available to renew in the period.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_available_to_renew"},"OPPORTUNITY_TERM_GROUP":{"type":"TEXT","index":41,"name":"opportunity_term_group","comment":null,"description":"Duration of the opportunity in years based on the opportunity's term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opportunity_term_group"},"ARR":{"type":"FLOAT","index":42,"name":"arr","comment":null,"description":"Annual recurring revenue associated with the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr"},"CREATED_BY":{"type":"TEXT","index":43,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":44,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":45,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":46,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":47,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":48,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"first_day_of_fiscal_quarter":{"name":"first_day_of_fiscal_quarter","description":"Calendar date of first day of fiscal quarter.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_quarter"},"multi-year_booking_subscription_end_month":{"name":"multi-year_booking_subscription_end_month","description":"Month when the final subscription in a multi-year booking is set to end.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"multi-year_booking_subscription_end_month"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:28UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":20987904,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_available_to_renew","raw_sql":"$10","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.get_column_values","macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model","macro.dbt_utils.group_by","macro.dbt_utils.surrogate_key"],"nodes":["model.gitlab_snowflake.prep_renewal_fiscal_years","model.gitlab_snowflake.prep_renewal_fiscal_years","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.dim_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.fct_crm_opportunity","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_amendment"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_finance","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_finance","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","mart_available_to_renew"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_finance/restricted_safe/mart_available_to_renew.sql","original_file_path":"models/common_mart_finance/restricted_safe/mart_available_to_renew.sql","name":"mart_available_to_renew","alias":"mart_available_to_renew","checksum":{"name":"sha256","checksum":"6dd3908c5a38f46b542960aa77253c796b50b8d99fe83b3dbef14b665bc77461"},"tags":["safe"],"refs":[["prep_renewal_fiscal_years"],["prep_renewal_fiscal_years"],["dim_date"],["dim_date"],["dim_crm_account"],["dim_crm_account"],["dim_crm_user"],["dim_crm_user"],["dim_subscription"],["dim_subscription"],["dim_crm_opportunity"],["dim_crm_opportunity"],["fct_crm_opportunity"],["fct_crm_opportunity"],["dim_charge"],["dim_charge"],["fct_charge"],["fct_charge"],["dim_billing_account"],["dim_billing_account"],["dim_product_detail"],["dim_product_detail"],["dim_amendment"],["dim_amendment"]],"sources":[],"metrics":[],"description":"This model generates a list of subscriptions which will be available to renew in a given time period based on existing charges and term dates. It also has logic built in to identify multi-year bookings which is not yet avilable in the source data.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_finance/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/mart_available_to_renew.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_finance","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false},"created_at":1689033735.1840882,"compiled_sql":"$11","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew","label":"mart_available_to_renew"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_WORKSPACE_SALES","name":"REPORT_METRICS_SUMMARY_ACCOUNT_YEAR","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"REPORT_FISCAL_YEAR":{"type":"NUMBER","index":1,"name":"REPORT_FISCAL_YEAR","comment":null,"display_name":"report_fiscal_year"},"ACCOUNT_ID":{"type":"TEXT","index":2,"name":"ACCOUNT_ID","comment":null,"display_name":"account_id"},"ACCOUNT_NAME":{"type":"TEXT","index":3,"name":"ACCOUNT_NAME","comment":null,"display_name":"account_name"},"UPA_ID":{"type":"TEXT","index":4,"name":"UPA_ID","comment":null,"display_name":"upa_id"},"UPA_NAME":{"type":"TEXT","index":5,"name":"UPA_NAME","comment":null,"display_name":"upa_name"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":6,"name":"IS_KEY_ACCOUNT","comment":null,"display_name":"is_key_account"},"ABM_TIER":{"type":"TEXT","index":7,"name":"ABM_TIER","comment":null,"display_name":"abm_tier"},"ULTIMATE_PARENT_ACCOUNT_ID":{"type":"TEXT","index":8,"name":"ULTIMATE_PARENT_ACCOUNT_ID","comment":null,"display_name":"ultimate_parent_account_id"},"ACCOUNT_OWNER_NAME":{"type":"TEXT","index":9,"name":"ACCOUNT_OWNER_NAME","comment":null,"display_name":"account_owner_name"},"ACCOUNT_OWNER_ID":{"type":"TEXT","index":10,"name":"ACCOUNT_OWNER_ID","comment":null,"display_name":"account_owner_id"},"ACCOUNT_OWNER_EMPLOYEE_NUMBER":{"type":"TEXT","index":11,"name":"ACCOUNT_OWNER_EMPLOYEE_NUMBER","comment":null,"display_name":"account_owner_employee_number"},"UPA_OWNER_NAME":{"type":"TEXT","index":12,"name":"UPA_OWNER_NAME","comment":null,"display_name":"upa_owner_name"},"UPA_OWNER_ID":{"type":"TEXT","index":13,"name":"UPA_OWNER_ID","comment":null,"display_name":"upa_owner_id"},"UPA_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":14,"name":"UPA_OWNER_TITLE_CATEGORY","comment":null,"display_name":"upa_owner_title_category"},"UPA_OWNER_EMPLOYEE_NUMBER":{"type":"TEXT","index":15,"name":"UPA_OWNER_EMPLOYEE_NUMBER","comment":null,"display_name":"upa_owner_employee_number"},"ACCOUNT_COUNTRY":{"type":"TEXT","index":16,"name":"ACCOUNT_COUNTRY","comment":null,"display_name":"account_country"},"ACCOUNT_ZIP_CODE":{"type":"TEXT","index":17,"name":"ACCOUNT_ZIP_CODE","comment":null,"display_name":"account_zip_code"},"ACCOUNT_STATE":{"type":"TEXT","index":18,"name":"ACCOUNT_STATE","comment":null,"display_name":"account_state"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":19,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":20,"name":"PARENT_CRM_ACCOUNT_GEO","comment":null,"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":21,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":22,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":23,"name":"CRM_ACCOUNT_BILLING_COUNTRY","comment":null,"display_name":"crm_account_billing_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":24,"name":"PARENT_CRM_ACCOUNT_UPA_STATE","comment":null,"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":25,"name":"PARENT_CRM_ACCOUNT_UPA_CITY","comment":null,"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":26,"name":"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE","comment":null,"display_name":"parent_crm_account_upa_postal_code"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":27,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"ACCOUNT_USER_GEO":{"type":"TEXT","index":28,"name":"ACCOUNT_USER_GEO","comment":null,"display_name":"account_user_geo"},"ACCOUNT_USER_REGION":{"type":"TEXT","index":29,"name":"ACCOUNT_USER_REGION","comment":null,"display_name":"account_user_region"},"ACCOUNT_USER_SEGMENT":{"type":"TEXT","index":30,"name":"ACCOUNT_USER_SEGMENT","comment":null,"display_name":"account_user_segment"},"ACCOUNT_USER_AREA":{"type":"TEXT","index":31,"name":"ACCOUNT_USER_AREA","comment":null,"display_name":"account_user_area"},"ACCOUNT_OWNER_ROLE":{"type":"TEXT","index":32,"name":"ACCOUNT_OWNER_ROLE","comment":null,"display_name":"account_owner_role"},"ACCOUNT_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":33,"name":"ACCOUNT_OWNER_TITLE_CATEGORY","comment":null,"display_name":"account_owner_title_category"},"ACCOUNT_INDUSTRY":{"type":"TEXT","index":34,"name":"ACCOUNT_INDUSTRY","comment":null,"display_name":"account_industry"},"UPA_USER_GEO":{"type":"TEXT","index":35,"name":"UPA_USER_GEO","comment":null,"display_name":"upa_user_geo"},"UPA_USER_REGION":{"type":"TEXT","index":36,"name":"UPA_USER_REGION","comment":null,"display_name":"upa_user_region"},"UPA_USER_SEGMENT":{"type":"TEXT","index":37,"name":"UPA_USER_SEGMENT","comment":null,"display_name":"upa_user_segment"},"UPA_USER_AREA":{"type":"TEXT","index":38,"name":"UPA_USER_AREA","comment":null,"display_name":"upa_user_area"},"UPA_USER_ROLE":{"type":"TEXT","index":39,"name":"UPA_USER_ROLE","comment":null,"display_name":"upa_user_role"},"UPA_INDUSTRY":{"type":"TEXT","index":40,"name":"UPA_INDUSTRY","comment":null,"display_name":"upa_industry"},"POTENTIAL_USERS":{"type":"FLOAT","index":41,"name":"POTENTIAL_USERS","comment":null,"display_name":"potential_users"},"LICENSES":{"type":"FLOAT","index":42,"name":"LICENSES","comment":null,"display_name":"licenses"},"LINKEDIN_DEVELOPER":{"type":"FLOAT","index":43,"name":"LINKEDIN_DEVELOPER","comment":null,"display_name":"linkedin_developer"},"ZI_DEVELOPERS":{"type":"FLOAT","index":44,"name":"ZI_DEVELOPERS","comment":null,"display_name":"zi_developers"},"ZI_REVENUE":{"type":"FLOAT","index":45,"name":"ZI_REVENUE","comment":null,"display_name":"zi_revenue"},"UPA_LAM_DEV_COUNT":{"type":"FLOAT","index":46,"name":"UPA_LAM_DEV_COUNT","comment":null,"display_name":"upa_lam_dev_count"},"PUBLIC_SECTOR_ACCOUNT_FLAG":{"type":"BOOLEAN","index":47,"name":"PUBLIC_SECTOR_ACCOUNT_FLAG","comment":null,"display_name":"public_sector_account_flag"},"PUBSEC_TYPE":{"type":"TEXT","index":48,"name":"PUBSEC_TYPE","comment":null,"display_name":"pubsec_type"},"POTENTIAL_LAM_ARR":{"type":"FLOAT","index":49,"name":"POTENTIAL_LAM_ARR","comment":null,"display_name":"potential_lam_arr"},"EMPLOYEES":{"type":"FLOAT","index":50,"name":"EMPLOYEES","comment":null,"display_name":"employees"},"ACCOUNT_FAMILY_ARR":{"type":"FLOAT","index":51,"name":"ACCOUNT_FAMILY_ARR","comment":null,"display_name":"account_family_arr"},"CALCULATED_DEVELOPER_COUNT":{"type":"FLOAT","index":52,"name":"CALCULATED_DEVELOPER_COUNT","comment":null,"display_name":"calculated_developer_count"},"CUSTOMER_SCORE":{"type":"FLOAT","index":53,"name":"CUSTOMER_SCORE","comment":null,"display_name":"customer_score"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":54,"name":"TECHNICAL_ACCOUNT_MANAGER_DATE","comment":null,"display_name":"technical_account_manager_date"},"TECHNICAL_ACCOUNT_MANAGER_NAME":{"type":"TEXT","index":55,"name":"TECHNICAL_ACCOUNT_MANAGER_NAME","comment":null,"display_name":"technical_account_manager_name"},"HAS_TECHNICAL_ACCOUNT_MANAGER_FLAG":{"type":"NUMBER","index":56,"name":"HAS_TECHNICAL_ACCOUNT_MANAGER_FLAG","comment":null,"display_name":"has_technical_account_manager_flag"},"ACCOUNT_HEALTH_SCORE_COLOR":{"type":"TEXT","index":57,"name":"ACCOUNT_HEALTH_SCORE_COLOR","comment":null,"display_name":"account_health_score_color"},"ACCOUNT_HEALTH_NUMBER":{"type":"FLOAT","index":58,"name":"ACCOUNT_HEALTH_NUMBER","comment":null,"display_name":"account_health_number"},"FY_ATR":{"type":"FLOAT","index":59,"name":"FY_ATR","comment":null,"display_name":"fy_atr"},"NFY_ATR":{"type":"FLOAT","index":60,"name":"NFY_ATR","comment":null,"display_name":"nfy_atr"},"NFY_Q1_ATR":{"type":"FLOAT","index":61,"name":"NFY_Q1_ATR","comment":null,"display_name":"nfy_q1_atr"},"NFY_Q2_ATR":{"type":"FLOAT","index":62,"name":"NFY_Q2_ATR","comment":null,"display_name":"nfy_q2_atr"},"NFY_Q3_ATR":{"type":"FLOAT","index":63,"name":"NFY_Q3_ATR","comment":null,"display_name":"nfy_q3_atr"},"NFY_Q4_ATR":{"type":"FLOAT","index":64,"name":"NFY_Q4_ATR","comment":null,"display_name":"nfy_q4_atr"},"LAST_12M_ATR":{"type":"FLOAT","index":65,"name":"LAST_12M_ATR","comment":null,"display_name":"last_12m_atr"},"ARR":{"type":"FLOAT","index":66,"name":"ARR","comment":null,"display_name":"arr"},"ARR_CHANNEL":{"type":"FLOAT","index":67,"name":"ARR_CHANNEL","comment":null,"display_name":"arr_channel"},"ARR_DIRECT":{"type":"FLOAT","index":68,"name":"ARR_DIRECT","comment":null,"display_name":"arr_direct"},"PRODUCT_STARTER_ARR":{"type":"FLOAT","index":69,"name":"PRODUCT_STARTER_ARR","comment":null,"display_name":"product_starter_arr"},"PRODUCT_PREMIUM_ARR":{"type":"FLOAT","index":70,"name":"PRODUCT_PREMIUM_ARR","comment":null,"display_name":"product_premium_arr"},"PRODUCT_ULTIMATE_ARR":{"type":"FLOAT","index":71,"name":"PRODUCT_ULTIMATE_ARR","comment":null,"display_name":"product_ultimate_arr"},"IS_ULTIMATE_CUSTOMER_FLAG":{"type":"NUMBER","index":72,"name":"IS_ULTIMATE_CUSTOMER_FLAG","comment":null,"display_name":"is_ultimate_customer_flag"},"IS_PREMIUM_CUSTOMER_FLAG":{"type":"NUMBER","index":73,"name":"IS_PREMIUM_CUSTOMER_FLAG","comment":null,"display_name":"is_premium_customer_flag"},"DELIVERY_SELF_MANAGED_ARR":{"type":"FLOAT","index":74,"name":"DELIVERY_SELF_MANAGED_ARR","comment":null,"display_name":"delivery_self_managed_arr"},"DELIVERY_SAAS_ARR":{"type":"FLOAT","index":75,"name":"DELIVERY_SAAS_ARR","comment":null,"display_name":"delivery_saas_arr"},"IS_PROSPECT_FLAG":{"type":"NUMBER","index":76,"name":"IS_PROSPECT_FLAG","comment":null,"display_name":"is_prospect_flag"},"IS_CUSTOMER_FLAG":{"type":"NUMBER","index":77,"name":"IS_CUSTOMER_FLAG","comment":null,"display_name":"is_customer_flag"},"IS_OVER_5K_CUSTOMER_FLAG":{"type":"NUMBER","index":78,"name":"IS_OVER_5K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_5k_customer_flag"},"IS_OVER_10K_CUSTOMER_FLAG":{"type":"NUMBER","index":79,"name":"IS_OVER_10K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_10k_customer_flag"},"IS_OVER_50K_CUSTOMER_FLAG":{"type":"NUMBER","index":80,"name":"IS_OVER_50K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_50k_customer_flag"},"IS_OVER_100K_CUSTOMER_FLAG":{"type":"NUMBER","index":81,"name":"IS_OVER_100K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_100k_customer_flag"},"IS_OVER_500K_CUSTOMER_FLAG":{"type":"NUMBER","index":82,"name":"IS_OVER_500K_CUSTOMER_FLAG","comment":null,"display_name":"is_over_500k_customer_flag"},"LAST_12M_BOOKED_NET_ARR":{"type":"FLOAT","index":83,"name":"LAST_12M_BOOKED_NET_ARR","comment":null,"display_name":"last_12m_booked_net_arr"},"LAST_12M_BOOKED_NON_WEB_NET_ARR":{"type":"FLOAT","index":84,"name":"LAST_12M_BOOKED_NON_WEB_NET_ARR","comment":null,"display_name":"last_12m_booked_non_web_net_arr"},"LAST_12M_BOOKED_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":85,"name":"LAST_12M_BOOKED_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_web_direct_sourced_net_arr"},"LAST_12M_BOOKED_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":86,"name":"LAST_12M_BOOKED_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_sourced_net_arr"},"LAST_12M_BOOKED_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":87,"name":"LAST_12M_BOOKED_SDR_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_sdr_sourced_net_arr"},"LAST_12M_BOOKED_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":88,"name":"LAST_12M_BOOKED_AE_SOURCED_NET_ARR","comment":null,"display_name":"last_12m_booked_ae_sourced_net_arr"},"LAST_12M_BOOKED_CHURN_CONTRACTION_NET_ARR":{"type":"FLOAT","index":89,"name":"LAST_12M_BOOKED_CHURN_CONTRACTION_NET_ARR","comment":null,"display_name":"last_12m_booked_churn_contraction_net_arr"},"LAST_12M_BOOKED_FO_NET_ARR":{"type":"FLOAT","index":90,"name":"LAST_12M_BOOKED_FO_NET_ARR","comment":null,"display_name":"last_12m_booked_fo_net_arr"},"LAST_12M_BOOKED_NEW_CONNECTED_NET_ARR":{"type":"FLOAT","index":91,"name":"LAST_12M_BOOKED_NEW_CONNECTED_NET_ARR","comment":null,"display_name":"last_12m_booked_new_connected_net_arr"},"LAST_12M_BOOKED_GROWTH_NET_ARR":{"type":"FLOAT","index":92,"name":"LAST_12M_BOOKED_GROWTH_NET_ARR","comment":null,"display_name":"last_12m_booked_growth_net_arr"},"LAST_12M_BOOKED_DEAL_COUNT":{"type":"NUMBER","index":93,"name":"LAST_12M_BOOKED_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_deal_count"},"LAST_12M_BOOKED_DIRECT_NET_ARR":{"type":"FLOAT","index":94,"name":"LAST_12M_BOOKED_DIRECT_NET_ARR","comment":null,"display_name":"last_12m_booked_direct_net_arr"},"LAST_12M_BOOKED_CHANNEL_NET_ARR":{"type":"FLOAT","index":95,"name":"LAST_12M_BOOKED_CHANNEL_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_net_arr"},"LAST_12M_BOOKED_CHANNEL_CO_SELL_NET_ARR":{"type":"FLOAT","index":96,"name":"LAST_12M_BOOKED_CHANNEL_CO_SELL_NET_ARR","comment":null,"display_name":"last_12m_booked_channel_co_sell_net_arr"},"LAST_12M_BOOKED_DIRECT_DEAL_COUNT":{"type":"NUMBER","index":97,"name":"LAST_12M_BOOKED_DIRECT_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_direct_deal_count"},"LAST_12M_BOOKED_CHANNEL_DEAL_COUNT":{"type":"NUMBER","index":98,"name":"LAST_12M_BOOKED_CHANNEL_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_channel_deal_count"},"LAST_12M_BOOKED_CHURN_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":99,"name":"LAST_12M_BOOKED_CHURN_CONTRACTION_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_churn_contraction_deal_count"},"LAST_12M_BOOKED_RENEWAL_DEAL_COUNT":{"type":"NUMBER","index":100,"name":"LAST_12M_BOOKED_RENEWAL_DEAL_COUNT","comment":null,"display_name":"last_12m_booked_renewal_deal_count"},"LAST_12M_BOOKED_TRX_COUNT":{"type":"NUMBER","index":101,"name":"LAST_12M_BOOKED_TRX_COUNT","comment":null,"display_name":"last_12m_booked_trx_count"},"LAST_12M_BOOKED_TRX_OVER_5K_COUNT":{"type":"NUMBER","index":102,"name":"LAST_12M_BOOKED_TRX_OVER_5K_COUNT","comment":null,"display_name":"last_12m_booked_trx_over_5k_count"},"LAST_12M_BOOKED_TRX_OVER_10K_COUNT":{"type":"NUMBER","index":103,"name":"LAST_12M_BOOKED_TRX_OVER_10K_COUNT","comment":null,"display_name":"last_12m_booked_trx_over_10k_count"},"LAST_12M_BOOKED_TRX_OVER_50K_COUNT":{"type":"NUMBER","index":104,"name":"LAST_12M_BOOKED_TRX_OVER_50K_COUNT","comment":null,"display_name":"last_12m_booked_trx_over_50k_count"},"FY_BOOKED_NET_ARR":{"type":"FLOAT","index":105,"name":"FY_BOOKED_NET_ARR","comment":null,"display_name":"fy_booked_net_arr"},"FY_BOOKED_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":106,"name":"FY_BOOKED_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_web_direct_sourced_net_arr"},"FY_BOOKED_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":107,"name":"FY_BOOKED_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_channel_sourced_net_arr"},"FY_BOOKED_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":108,"name":"FY_BOOKED_SDR_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_sdr_sourced_net_arr"},"FY_BOOKED_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":109,"name":"FY_BOOKED_AE_SOURCED_NET_ARR","comment":null,"display_name":"fy_booked_ae_sourced_net_arr"},"FY_BOOKED_CHURN_CONTRACTION_NET_ARR":{"type":"FLOAT","index":110,"name":"FY_BOOKED_CHURN_CONTRACTION_NET_ARR","comment":null,"display_name":"fy_booked_churn_contraction_net_arr"},"FY_BOOKED_FO_NET_ARR":{"type":"FLOAT","index":111,"name":"FY_BOOKED_FO_NET_ARR","comment":null,"display_name":"fy_booked_fo_net_arr"},"FY_BOOKED_NEW_CONNECTED_NET_ARR":{"type":"FLOAT","index":112,"name":"FY_BOOKED_NEW_CONNECTED_NET_ARR","comment":null,"display_name":"fy_booked_new_connected_net_arr"},"FY_BOOKED_GROWTH_NET_ARR":{"type":"FLOAT","index":113,"name":"FY_BOOKED_GROWTH_NET_ARR","comment":null,"display_name":"fy_booked_growth_net_arr"},"FY_BOOKED_DEAL_COUNT":{"type":"NUMBER","index":114,"name":"FY_BOOKED_DEAL_COUNT","comment":null,"display_name":"fy_booked_deal_count"},"FY_BOOKED_DIRECT_NET_ARR":{"type":"FLOAT","index":115,"name":"FY_BOOKED_DIRECT_NET_ARR","comment":null,"display_name":"fy_booked_direct_net_arr"},"FY_BOOKED_CHANNEL_NET_ARR":{"type":"FLOAT","index":116,"name":"FY_BOOKED_CHANNEL_NET_ARR","comment":null,"display_name":"fy_booked_channel_net_arr"},"FY_BOOKED_DIRECT_DEAL_COUNT":{"type":"NUMBER","index":117,"name":"FY_BOOKED_DIRECT_DEAL_COUNT","comment":null,"display_name":"fy_booked_direct_deal_count"},"FY_BOOKED_CHANNEL_DEAL_COUNT":{"type":"NUMBER","index":118,"name":"FY_BOOKED_CHANNEL_DEAL_COUNT","comment":null,"display_name":"fy_booked_channel_deal_count"},"TOTAL_OPEN_PIPE":{"type":"FLOAT","index":119,"name":"TOTAL_OPEN_PIPE","comment":null,"display_name":"total_open_pipe"},"TOTAL_COUNT_OPEN_DEALS_PIPE":{"type":"NUMBER","index":120,"name":"TOTAL_COUNT_OPEN_DEALS_PIPE","comment":null,"display_name":"total_count_open_deals_pipe"},"NFY_OPEN_PIPELINE":{"type":"FLOAT","index":121,"name":"NFY_OPEN_PIPELINE","comment":null,"display_name":"nfy_open_pipeline"},"FY_OPEN_PIPELINE":{"type":"FLOAT","index":122,"name":"FY_OPEN_PIPELINE","comment":null,"display_name":"fy_open_pipeline"},"NFY_COUNT_OPEN_DEALS":{"type":"FLOAT","index":123,"name":"NFY_COUNT_OPEN_DEALS","comment":null,"display_name":"nfy_count_open_deals"},"FY_COUNT_OPEN_DEALS":{"type":"FLOAT","index":124,"name":"FY_COUNT_OPEN_DEALS","comment":null,"display_name":"fy_count_open_deals"},"CUSTOMER_HAS_OPEN_PIPE_FLAG":{"type":"NUMBER","index":125,"name":"CUSTOMER_HAS_OPEN_PIPE_FLAG","comment":null,"display_name":"customer_has_open_pipe_flag"},"PROSPECT_HAS_OPEN_PIPE_FLAG":{"type":"NUMBER","index":126,"name":"PROSPECT_HAS_OPEN_PIPE_FLAG","comment":null,"display_name":"prospect_has_open_pipe_flag"},"PG_YTD_NET_ARR":{"type":"FLOAT","index":127,"name":"PG_YTD_NET_ARR","comment":null,"display_name":"pg_ytd_net_arr"},"PG_YTD_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":128,"name":"PG_YTD_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_web_direct_sourced_net_arr"},"PG_YTD_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":129,"name":"PG_YTD_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_channel_sourced_net_arr"},"PG_YTD_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":130,"name":"PG_YTD_SDR_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_sdr_sourced_net_arr"},"PG_YTD_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":131,"name":"PG_YTD_AE_SOURCED_NET_ARR","comment":null,"display_name":"pg_ytd_ae_sourced_net_arr"},"PG_LAST_12M_NET_ARR":{"type":"FLOAT","index":132,"name":"PG_LAST_12M_NET_ARR","comment":null,"display_name":"pg_last_12m_net_arr"},"PG_LAST_12M_WEB_DIRECT_SOURCED_NET_ARR":{"type":"FLOAT","index":133,"name":"PG_LAST_12M_WEB_DIRECT_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_web_direct_sourced_net_arr"},"PG_LAST_12M_CHANNEL_SOURCED_NET_ARR":{"type":"FLOAT","index":134,"name":"PG_LAST_12M_CHANNEL_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_channel_sourced_net_arr"},"PG_LAST_12M_SDR_SOURCED_NET_ARR":{"type":"FLOAT","index":135,"name":"PG_LAST_12M_SDR_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_sdr_sourced_net_arr"},"PG_LAST_12M_AE_SOURCED_NET_ARR":{"type":"FLOAT","index":136,"name":"PG_LAST_12M_AE_SOURCED_NET_ARR","comment":null,"display_name":"pg_last_12m_ae_sourced_net_arr"},"PG_LAST_12M_WEB_DIRECT_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":137,"name":"PG_LAST_12M_WEB_DIRECT_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_web_direct_sourced_deal_count"},"PG_LAST_12M_CHANNEL_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":138,"name":"PG_LAST_12M_CHANNEL_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_channel_sourced_deal_count"},"PG_LAST_12M_SDR_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":139,"name":"PG_LAST_12M_SDR_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_sdr_sourced_deal_count"},"PG_LAST_12M_AE_SOURCED_DEAL_COUNT":{"type":"NUMBER","index":140,"name":"PG_LAST_12M_AE_SOURCED_DEAL_COUNT","comment":null,"display_name":"pg_last_12m_ae_sourced_deal_count"},"LAST_12M_SAO_DEAL_COUNT":{"type":"NUMBER","index":141,"name":"LAST_12M_SAO_DEAL_COUNT","comment":null,"display_name":"last_12m_sao_deal_count"},"LAST_12M_SAO_NET_ARR":{"type":"FLOAT","index":142,"name":"LAST_12M_SAO_NET_ARR","comment":null,"display_name":"last_12m_sao_net_arr"},"LAST_12M_SAO_BOOKED_NET_ARR":{"type":"FLOAT","index":143,"name":"LAST_12M_SAO_BOOKED_NET_ARR","comment":null,"display_name":"last_12m_sao_booked_net_arr"},"FY_SAO_DEAL_COUNT":{"type":"NUMBER","index":144,"name":"FY_SAO_DEAL_COUNT","comment":null,"display_name":"fy_sao_deal_count"},"FY_SAO_NET_ARR":{"type":"FLOAT","index":145,"name":"FY_SAO_NET_ARR","comment":null,"display_name":"fy_sao_net_arr"},"FY_SAO_BOOKED_NET_ARR":{"type":"FLOAT","index":146,"name":"FY_SAO_BOOKED_NET_ARR","comment":null,"display_name":"fy_sao_booked_net_arr"},"LAM_DEV_COUNT_BIN_NAME":{"type":"TEXT","index":147,"name":"LAM_DEV_COUNT_BIN_NAME","comment":null,"display_name":"lam_dev_count_bin_name"},"LAM_DEV_COUNT_BIN_RANK":{"type":"NUMBER","index":148,"name":"LAM_DEV_COUNT_BIN_RANK","comment":null,"display_name":"lam_dev_count_bin_rank"},"SECTOR_TYPE":{"type":"TEXT","index":149,"name":"SECTOR_TYPE","comment":null,"display_name":"sector_type"},"IS_PUBLIC_SECTOR_FLAG":{"type":"NUMBER","index":150,"name":"IS_PUBLIC_SECTOR_FLAG","comment":null,"display_name":"is_public_sector_flag"},"ACCOUNT_FAMILY_ARR_BIN_NAME":{"type":"TEXT","index":151,"name":"ACCOUNT_FAMILY_ARR_BIN_NAME","comment":null,"display_name":"account_family_arr_bin_name"},"UPA_POTENTIAL_USERS":{"type":"FLOAT","index":152,"name":"UPA_POTENTIAL_USERS","comment":null,"display_name":"upa_potential_users"},"UPA_LICENSES":{"type":"FLOAT","index":153,"name":"UPA_LICENSES","comment":null,"display_name":"upa_licenses"},"UPA_LINKEDIN_DEVELOPER":{"type":"FLOAT","index":154,"name":"UPA_LINKEDIN_DEVELOPER","comment":null,"display_name":"upa_linkedin_developer"},"UPA_ZI_DEVELOPERS":{"type":"FLOAT","index":155,"name":"UPA_ZI_DEVELOPERS","comment":null,"display_name":"upa_zi_developers"},"UPA_ZI_REVENUE":{"type":"FLOAT","index":156,"name":"UPA_ZI_REVENUE","comment":null,"display_name":"upa_zi_revenue"},"UPA_EMPLOYEES":{"type":"FLOAT","index":157,"name":"UPA_EMPLOYEES","comment":null,"display_name":"upa_employees"},"UPA_COUNT_OF_CUSTOMERS":{"type":"NUMBER","index":158,"name":"UPA_COUNT_OF_CUSTOMERS","comment":null,"display_name":"upa_count_of_customers"},"IS_UPA_FLAG":{"type":"NUMBER","index":159,"name":"IS_UPA_FLAG","comment":null,"display_name":"is_upa_flag"},"HIERARCHY_IS_CUSTOMER_FLAG":{"type":"NUMBER","index":160,"name":"HIERARCHY_IS_CUSTOMER_FLAG","comment":null,"display_name":"hierarchy_is_customer_flag"},"VIRTUAL_UPA_ID":{"type":"TEXT","index":161,"name":"VIRTUAL_UPA_ID","comment":null,"display_name":"virtual_upa_id"},"VIRTUAL_UPA_NAME":{"type":"TEXT","index":162,"name":"VIRTUAL_UPA_NAME","comment":null,"display_name":"virtual_upa_name"},"VIRTUAL_UPA_AD_SEGMENT":{"type":"TEXT","index":163,"name":"VIRTUAL_UPA_AD_SEGMENT","comment":null,"display_name":"virtual_upa_ad_segment"},"VIRTUAL_UPA_GEO":{"type":"TEXT","index":164,"name":"VIRTUAL_UPA_GEO","comment":null,"display_name":"virtual_upa_geo"},"VIRTUAL_UPA_REGION":{"type":"TEXT","index":165,"name":"VIRTUAL_UPA_REGION","comment":null,"display_name":"virtual_upa_region"},"VIRTUAL_UPA_AREA":{"type":"TEXT","index":166,"name":"VIRTUAL_UPA_AREA","comment":null,"display_name":"virtual_upa_area"},"VIRTUAL_UPA_AD_COUNTRY":{"type":"TEXT","index":167,"name":"VIRTUAL_UPA_AD_COUNTRY","comment":null,"display_name":"virtual_upa_ad_country"},"VIRTUAL_UPA_AD_STATE":{"type":"TEXT","index":168,"name":"VIRTUAL_UPA_AD_STATE","comment":null,"display_name":"virtual_upa_ad_state"},"VIRTUAL_UPA_AD_ZIP_CODE":{"type":"TEXT","index":169,"name":"VIRTUAL_UPA_AD_ZIP_CODE","comment":null,"display_name":"virtual_upa_ad_zip_code"},"VIRTUAL_UPA_INDUSTRY":{"type":"TEXT","index":170,"name":"VIRTUAL_UPA_INDUSTRY","comment":null,"display_name":"virtual_upa_industry"},"VIRTUAL_UPA_OWNER_NAME":{"type":"TEXT","index":171,"name":"VIRTUAL_UPA_OWNER_NAME","comment":null,"display_name":"virtual_upa_owner_name"},"VIRTUAL_UPA_OWNER_TITLE_CATEGORY":{"type":"TEXT","index":172,"name":"VIRTUAL_UPA_OWNER_TITLE_CATEGORY","comment":null,"display_name":"virtual_upa_owner_title_category"},"VIRTUAL_UPA_OWNER_ID":{"type":"TEXT","index":173,"name":"VIRTUAL_UPA_OWNER_ID","comment":null,"display_name":"virtual_upa_owner_id"},"VIRTUAL_UPA_TYPE":{"type":"TEXT","index":174,"name":"VIRTUAL_UPA_TYPE","comment":null,"display_name":"virtual_upa_type"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-05 19:19UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":150163456,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_sales_report_metrics_summary_account_year","raw_sql":"$13","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.mask_model"],"nodes":["source.gitlab_snowflake.salesforce.account","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_date_details","model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_snapshot_history_xf","model.gitlab_snowflake.wk_sales_sfdc_opportunity_snapshot_history_xf","model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.mart_arr","model.gitlab_snowflake.mart_arr","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.mart_crm_account","model.gitlab_snowflake.mart_crm_account","model.gitlab_snowflake.sfdc_accounts_xf","model.gitlab_snowflake.sfdc_accounts_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf","model.gitlab_snowflake.wk_sales_sfdc_users_xf"]},"config":{"enabled":true,"alias":"report_metrics_summary_account_year","schema":"restricted_safe_workspace_sales","database":"PROD","tags":["workspace","safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_workspace_sales","fqn":["gitlab_snowflake","workspaces","workspace_sales","restricted_safe","wk_sales_report_metrics_summary_account_year"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_account_year.sql","original_file_path":"models/workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_account_year.sql","name":"wk_sales_report_metrics_summary_account_year","alias":"report_metrics_summary_account_year","checksum":{"name":"sha256","checksum":"6812345d70a8e300218d27de43e9fa9c567384a17a6f3141cfdf156c749035c0"},"tags":["workspace","safe"],"refs":[["wk_sales_date_details"],["wk_sales_date_details"],["wk_sales_sfdc_opportunity_xf"],["wk_sales_sfdc_opportunity_xf"],["wk_sales_sfdc_opportunity_snapshot_history_xf"],["wk_sales_sfdc_opportunity_snapshot_history_xf"],["mart_available_to_renew"],["mart_available_to_renew"],["dim_subscription"],["dim_subscription"],["mart_arr"],["mart_arr"],["dim_crm_account"],["dim_crm_account"],["mart_crm_account"],["mart_crm_account"],["sfdc_accounts_xf"],["sfdc_accounts_xf"],["wk_sales_sfdc_users_xf"],["wk_sales_sfdc_users_xf"]],"sources":[["salesforce","account"]],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_sales_report_metrics_summary_account_year.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_workspace_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"report_metrics_summary_account_year"},"created_at":1689033679.6211755,"compiled_sql":"$14","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_workspace_sales.report_metrics_summary_account_year","label":"wk_sales_report_metrics_summary_account_year"}],"snapshot":[{"raw_sql":"\n    -- Using dbt updated at field as we want a new set of data everyday.\n    {{\n        config(\n          unique_key='primary_key',\n          strategy='timestamp',\n          updated_at='dbt_created_at',\n          invalidate_hard_deletes=True\n\n         )\n    }}\n\n    SELECT\n    {{\n          dbt_utils.star(\n            from=ref('mart_available_to_renew'),\n            except=['DBT_UPDATED_AT']\n            )\n      }}\n    FROM {{ ref('mart_available_to_renew') }}\n\n","compiled":true,"resource_type":"snapshot","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.mart_available_to_renew","model.gitlab_snowflake.mart_available_to_renew"]},"config":{"enabled":true,"alias":null,"schema":null,"database":null,"tags":["edm_snapshot"],"meta":{},"materialized":"snapshot","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":"primary_key","on_schema_change":"ignore","grants":{},"strategy":"timestamp","target_schema":"snapshots","target_database":"SNOWFLAKE","updated_at":"dbt_created_at","query_tag":"dbt","transient":false,"invalidate_hard_deletes":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null},{"sql":"alter table {{ this }} set DATA_RETENTION_TIME_IN_DAYS = 30","transaction":true,"index":null}],"pre-hook":[]},"database":"SNOWFLAKE","schema":"snapshots","fqn":["gitlab_snowflake","marts","mart_available_to_renew_snapshot","mart_available_to_renew_snapshot"],"unique_id":"snapshot.gitlab_snowflake.mart_available_to_renew_snapshot","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"marts/mart_available_to_renew_snapshot.sql","original_file_path":"snapshots/marts/mart_available_to_renew_snapshot.sql","name":"mart_available_to_renew_snapshot","alias":"mart_available_to_renew_snapshot","checksum":{"name":"sha256","checksum":"850e4851a842ff4d975a56995c1097c7b7cbcd69995b7c7759080a8f696fa694"},"tags":["edm_snapshot"],"refs":[["mart_available_to_renew"],["mart_available_to_renew"],["mart_available_to_renew"],["mart_available_to_renew"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":null,"build_path":null,"deferred":false,"unrendered_config":{"post-hook":["{{ mask_model() }}","alter table {{ this }} set DATA_RETENTION_TIME_IN_DAYS = 30"],"query_tag":"dbt","target_database":"{{ env_var('SNOWFLAKE_SNAPSHOT_DATABASE') }}","target_schema":"snapshots","transient":false,"tags":["edm_snapshot"],"unique_key":"primary_key","strategy":"timestamp","updated_at":"dbt_created_at","invalidate_hard_deletes":true},"created_at":1689033724.2810466,"compiled_sql":"$15","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"SNOWFLAKE\".snapshots.mart_available_to_renew_snapshot","label":"mart_available_to_renew_snapshot"}],"test":[{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"primary_key","model":"{{ get_where_subquery(ref('mart_available_to_renew')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.mart_available_to_renew"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","not_null_mart_available_to_renew_primary_key"],"unique_id":"test.gitlab_snowflake.not_null_mart_available_to_renew_primary_key.949a84b618","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_mart_available_to_renew_primary_key.sql","original_file_path":"models/common_mart_finance/restricted_safe/schema.yml","name":"not_null_mart_available_to_renew_primary_key","alias":"not_null_mart_available_to_renew_primary_key","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["mart_available_to_renew"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/schema.yml/not_null_mart_available_to_renew_primary_key.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033735.1888678,"compiled_sql":"\n    \n    \n\n\n\nselect primary_key\nfrom \"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew\nwhere primary_key is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"primary_key","file_key_name":"models.mart_available_to_renew","label":"not_null_mart_available_to_renew_primary_key"},{"raw_sql":"{{ test_unique(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"unique","kwargs":{"column_name":"primary_key","model":"{{ get_where_subquery(ref('mart_available_to_renew')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_unique","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.mart_available_to_renew"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","unique_mart_available_to_renew_primary_key"],"unique_id":"test.gitlab_snowflake.unique_mart_available_to_renew_primary_key.c15c1bb5ca","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"unique_mart_available_to_renew_primary_key.sql","original_file_path":"models/common_mart_finance/restricted_safe/schema.yml","name":"unique_mart_available_to_renew_primary_key","alias":"unique_mart_available_to_renew_primary_key","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["mart_available_to_renew"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/schema.yml/unique_mart_available_to_renew_primary_key.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033735.1933875,"compiled_sql":"\n    \n    \n\nselect\n    primary_key as unique_field,\n    count(*) as n_records\n\nfrom \"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew\nwhere primary_key is not null\ngroup by primary_key\nhaving count(*) > 1\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"primary_key","file_key_name":"models.mart_available_to_renew","label":"unique_mart_available_to_renew_primary_key"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"fiscal_year","model":"{{ get_where_subquery(ref('mart_available_to_renew')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.mart_available_to_renew"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","not_null_mart_available_to_renew_fiscal_year"],"unique_id":"test.gitlab_snowflake.not_null_mart_available_to_renew_fiscal_year.3c232a12b7","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_mart_available_to_renew_fiscal_year.sql","original_file_path":"models/common_mart_finance/restricted_safe/schema.yml","name":"not_null_mart_available_to_renew_fiscal_year","alias":"not_null_mart_available_to_renew_fiscal_year","checksum":{"name":"none","checksum":""},"tags":["atr","mart","tdf"],"refs":[["mart_available_to_renew"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/schema.yml/not_null_mart_available_to_renew_fiscal_year.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033735.19783,"compiled_sql":"\n    \n    \n\n\n\nselect fiscal_year\nfrom \"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew\nwhere fiscal_year is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"fiscal_year","file_key_name":"models.mart_available_to_renew","label":"not_null_mart_available_to_renew_fiscal_year"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_subscription_id","model":"{{ get_where_subquery(ref('mart_available_to_renew')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.mart_available_to_renew"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","not_null_mart_available_to_renew_dim_subscription_id"],"unique_id":"test.gitlab_snowflake.not_null_mart_available_to_renew_dim_subscription_id.51b3c610a2","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_mart_available_to_renew_dim_subscription_id.sql","original_file_path":"models/common_mart_finance/restricted_safe/schema.yml","name":"not_null_mart_available_to_renew_dim_subscription_id","alias":"not_null_mart_available_to_renew_dim_subscription_id","checksum":{"name":"none","checksum":""},"tags":["atr","mart","tdf"],"refs":[["mart_available_to_renew"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/schema.yml/not_null_mart_available_to_renew_dim_subscription_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033735.201995,"compiled_sql":"\n    \n    \n\n\n\nselect dim_subscription_id\nfrom \"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew\nwhere dim_subscription_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_subscription_id","file_key_name":"models.mart_available_to_renew","label":"not_null_mart_available_to_renew_dim_subscription_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"renewal_month","model":"{{ get_where_subquery(ref('mart_available_to_renew')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.mart_available_to_renew"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","common_mart_finance","restricted_safe","not_null_mart_available_to_renew_renewal_month"],"unique_id":"test.gitlab_snowflake.not_null_mart_available_to_renew_renewal_month.067f3f1d25","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_mart_available_to_renew_renewal_month.sql","original_file_path":"models/common_mart_finance/restricted_safe/schema.yml","name":"not_null_mart_available_to_renew_renewal_month","alias":"not_null_mart_available_to_renew_renewal_month","checksum":{"name":"none","checksum":""},"tags":["atr","mart","tdf"],"refs":[["mart_available_to_renew"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_finance/restricted_safe/schema.yml/not_null_mart_available_to_renew_renewal_month.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033735.205789,"compiled_sql":"\n    \n    \n\n\n\nselect renewal_month\nfrom \"PROD\".restricted_safe_common_mart_finance.mart_available_to_renew\nwhere renewal_month is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"renewal_month","file_key_name":"models.mart_available_to_renew","label":"not_null_mart_available_to_renew_renewal_month"}]},"node":{"resource_type":"model","name":"mart_available_to_renew","unique_id":"model.gitlab_snowflake.mart_available_to_renew"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L12",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_CRM_USER","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_USER_ID":{"type":"TEXT","index":1,"name":"dim_crm_user_id","comment":null,"description":"Primary key for Salesforce users and the primary key for this dimension","meta":{},"data_type":null,"quote":null,"tags":["tdf","common"],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_user_id"},"EMPLOYEE_NUMBER":{"type":"TEXT","index":2,"name":"EMPLOYEE_NUMBER","comment":null,"display_name":"employee_number"},"USER_NAME":{"type":"TEXT","index":3,"name":"USER_NAME","comment":null,"display_name":"user_name"},"TITLE":{"type":"TEXT","index":4,"name":"TITLE","comment":null,"display_name":"title"},"DEPARTMENT":{"type":"TEXT","index":5,"name":"DEPARTMENT","comment":null,"display_name":"department"},"TEAM":{"type":"TEXT","index":6,"name":"TEAM","comment":null,"display_name":"team"},"MANAGER_ID":{"type":"TEXT","index":7,"name":"MANAGER_ID","comment":null,"display_name":"manager_id"},"MANAGER_NAME":{"type":"TEXT","index":8,"name":"MANAGER_NAME","comment":null,"display_name":"manager_name"},"USER_EMAIL":{"type":"TEXT","index":9,"name":"USER_EMAIL","comment":null,"display_name":"user_email"},"IS_ACTIVE":{"type":"BOOLEAN","index":10,"name":"is_active","comment":null,"description":"A boolean column that flags if the user is active in salesforce, which means that the user can login and use salesforce.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common"],"display_name":"is_active"},"START_DATE":{"type":"TIMESTAMP_TZ","index":11,"name":"START_DATE","comment":null,"display_name":"start_date"},"RAMPING_QUOTA":{"type":"FLOAT","index":12,"name":"RAMPING_QUOTA","comment":null,"display_name":"ramping_quota"},"USER_TIMEZONE":{"type":"TEXT","index":13,"name":"USER_TIMEZONE","comment":null,"display_name":"user_timezone"},"USER_ROLE_ID":{"type":"TEXT","index":14,"name":"USER_ROLE_ID","comment":null,"display_name":"user_role_id"},"USER_ROLE_NAME":{"type":"TEXT","index":15,"name":"USER_ROLE_NAME","comment":null,"display_name":"user_role_name"},"DIM_CRM_USER_SALES_SEGMENT_ID":{"type":"TEXT","index":16,"name":"DIM_CRM_USER_SALES_SEGMENT_ID","comment":null,"display_name":"dim_crm_user_sales_segment_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":17,"name":"CRM_USER_SALES_SEGMENT","comment":null,"display_name":"crm_user_sales_segment"},"CRM_USER_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":18,"name":"CRM_USER_SALES_SEGMENT_GROUPED","comment":null,"display_name":"crm_user_sales_segment_grouped"},"DIM_CRM_USER_GEO_ID":{"type":"TEXT","index":19,"name":"DIM_CRM_USER_GEO_ID","comment":null,"display_name":"dim_crm_user_geo_id"},"CRM_USER_GEO":{"type":"TEXT","index":20,"name":"CRM_USER_GEO","comment":null,"display_name":"crm_user_geo"},"DIM_CRM_USER_REGION_ID":{"type":"TEXT","index":21,"name":"DIM_CRM_USER_REGION_ID","comment":null,"display_name":"dim_crm_user_region_id"},"CRM_USER_REGION":{"type":"TEXT","index":22,"name":"CRM_USER_REGION","comment":null,"display_name":"crm_user_region"},"DIM_CRM_USER_AREA_ID":{"type":"TEXT","index":23,"name":"DIM_CRM_USER_AREA_ID","comment":null,"display_name":"dim_crm_user_area_id"},"CRM_USER_AREA":{"type":"TEXT","index":24,"name":"CRM_USER_AREA","comment":null,"display_name":"crm_user_area"},"DIM_CRM_USER_BUSINESS_UNIT_ID":{"type":"TEXT","index":25,"name":"DIM_CRM_USER_BUSINESS_UNIT_ID","comment":null,"display_name":"dim_crm_user_business_unit_id"},"CRM_USER_BUSINESS_UNIT":{"type":"TEXT","index":26,"name":"CRM_USER_BUSINESS_UNIT","comment":null,"display_name":"crm_user_business_unit"},"DIM_CRM_USER_ROLE_TYPE_ID":{"type":"TEXT","index":27,"name":"DIM_CRM_USER_ROLE_TYPE_ID","comment":null,"display_name":"dim_crm_user_role_type_id"},"CRM_USER_ROLE_TYPE":{"type":"TEXT","index":28,"name":"CRM_USER_ROLE_TYPE","comment":null,"display_name":"crm_user_role_type"},"IS_HYBRID_USER":{"type":"NUMBER","index":29,"name":"IS_HYBRID_USER","comment":null,"display_name":"is_hybrid_user"},"DIM_CRM_USER_HIERARCHY_SK":{"type":"TEXT","index":30,"name":"DIM_CRM_USER_HIERARCHY_SK","comment":null,"display_name":"dim_crm_user_hierarchy_sk"},"CRM_USER_SALES_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":31,"name":"CRM_USER_SALES_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"crm_user_sales_segment_geo_region_area"},"CRM_USER_SALES_SEGMENT_REGION_GROUPED":{"type":"TEXT","index":32,"name":"CRM_USER_SALES_SEGMENT_REGION_GROUPED","comment":null,"display_name":"crm_user_sales_segment_region_grouped"},"SDR_SALES_SEGMENT":{"type":"TEXT","index":33,"name":"sdr_sales_segment","comment":null,"description":"Sales segment of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_sales_segment"},"SDR_REGION":{"type":"TEXT","index":34,"name":"sdr_region","comment":null,"description":"Region of the SDR maintained in a [sheetload](https://docs.google.com/spreadsheets/d/17Uhk8yan3C93eKDSznXOEUCYTX9cTbLwWD2klRVykHI/edit#gid=0)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sdr_region"},"CREATED_DATE":{"type":"TIMESTAMP_TZ","index":35,"name":"CREATED_DATE","comment":null,"display_name":"created_date"},"CRM_USER_SUB_BUSINESS_UNIT":{"type":"TEXT","index":36,"name":"CRM_USER_SUB_BUSINESS_UNIT","comment":null,"display_name":"crm_user_sub_business_unit"},"CRM_USER_DIVISION":{"type":"TEXT","index":37,"name":"CRM_USER_DIVISION","comment":null,"display_name":"crm_user_division"},"ASM":{"type":"TEXT","index":38,"name":"ASM","comment":null,"display_name":"asm"},"CREATED_BY":{"type":"TEXT","index":39,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":40,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":41,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":42,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":43,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":44,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:59UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":307200,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_crm_user","raw_sql":"-- depends_on: {{ ref('prep_crm_user') }}\n{{ config(\n    tags=[\"six_hourly\"]\n) }}\n\nWITH final AS (\n\n    SELECT \n      {{ dbt_utils.star(\n           from=ref('prep_crm_user'), \n           except=['CREATED_BY','UPDATED_BY','MODEL_CREATED_DATE','MODEL_UPDATED_DATE','DBT_UPDATED_AT','DBT_CREATED_AT']\n           ) \n      }}\n    FROM {{ ref('prep_crm_user') }}\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@mcooperDD\",\n    updated_by=\"@chrissharp\",\n    created_date=\"2020-11-20\",\n    updated_date=\"2023-05-04\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":["six_hourly"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_crm_user"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_crm_user.sql","original_file_path":"models/common/dimensions_shared/dim_crm_user.sql","name":"dim_crm_user","alias":"dim_crm_user","checksum":{"name":"sha256","checksum":"588a33a50f090b966eb62b2fbd241c6c8d23d28fc321a104487f13099eed5795"},"tags":["six_hourly"],"refs":[["prep_crm_user"],["prep_crm_user"],["prep_crm_user"],["prep_crm_user"],["prep_crm_user"],["prep_crm_user"]],"sources":[],"metrics":[],"description":"Dimension representing the associated user from salesforce. Most often this will be the record owner, which is a ubiquitous field in salesforce.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_crm_user.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["six_hourly"]},"created_at":1689033750.59549,"compiled_sql":"$16","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_crm_user","label":"dim_crm_user"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON","name":"DIM_CHARGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CHARGE_ID":{"type":"TEXT","index":1,"name":"dim_charge_id","comment":null,"description":"Unique identifier for a rate plan charge in Zuora. These are transactions in Zuora Billing.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","arr"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_charge_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"EFFECTIVE_START_DATE":{"type":"DATE","index":7,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":8,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":9,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":10,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGED_THROUGH_DATE":{"type":"DATE","index":11,"name":"CHARGED_THROUGH_DATE","comment":null,"display_name":"charged_through_date"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":12,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":13,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"CHARGE_TERM":{"type":"NUMBER","index":14,"name":"CHARGE_TERM","comment":null,"display_name":"charge_term"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":15,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"RATE_PLAN_NAME":{"type":"TEXT","index":16,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":17,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"RATE_PLAN_CHARGE_DESCRIPTION":{"type":"TEXT","index":18,"name":"rate_plan_charge_description","comment":null,"description":"Description for a rate plan charge in Zuora. This can be used to identify orders that received transition pricing in FY24. Note, the description field will not show a transition pricing tag for sales-assisted orders.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","arr"],"display_name":"rate_plan_charge_description"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":19,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"DISCOUNT_LEVEL":{"type":"TEXT","index":20,"name":"DISCOUNT_LEVEL","comment":null,"display_name":"discount_level"},"CHARGE_TYPE":{"type":"TEXT","index":21,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"RATE_PLAN_CHARGE_AMENDEMENT_TYPE":{"type":"TEXT","index":22,"name":"RATE_PLAN_CHARGE_AMENDEMENT_TYPE","comment":null,"display_name":"rate_plan_charge_amendement_type"},"UNIT_OF_MEASURE":{"type":"TEXT","index":23,"name":"UNIT_OF_MEASURE","comment":null,"display_name":"unit_of_measure"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":24,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":25,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"MONTHS_OF_FUTURE_BILLINGS":{"type":"NUMBER","index":26,"name":"MONTHS_OF_FUTURE_BILLINGS","comment":null,"display_name":"months_of_future_billings"},"CREATED_BY":{"type":"TEXT","index":27,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":28,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":29,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":30,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":31,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":32,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:03UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":77006336,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_charge","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_charge","model.gitlab_snowflake.prep_charge"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common","fqn":["gitlab_snowflake","common","dimensions_shared","restricted_safe","dim_charge"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/restricted_safe/dim_charge.sql","original_file_path":"models/common/dimensions_shared/restricted_safe/dim_charge.sql","name":"dim_charge","alias":"dim_charge","checksum":{"name":"sha256","checksum":"13e5dc3e03e7fe3b6dad02cb7c8f2ff212492d3f0f2b4f2d25bf1eb692730084"},"tags":["safe"],"refs":[["prep_charge"],["prep_charge"]],"sources":[],"metrics":[],"description":"Dimension table for unique transactions in Zuora Billing. The table only includes recurring charges at this time. Non-recurring charges will be added in a future iteration.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/restricted_safe/dim_charge.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033751.9166045,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common.dim_charge","label":"dim_charge"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON","name":"DIM_CRM_OPPORTUNITY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"Key for joining on dim_crm_account, which is the primary key for Salesforce Accounts","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":2,"name":"dim_crm_opportunity_id","comment":null,"description":"primary key for Salesforce Opportunities","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_opportunity_id"},"OPPORTUNITY_NAME":{"type":"TEXT","index":3,"name":"opportunity_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opportunity_name"},"DIM_CRM_USER_ID":{"type":"TEXT","index":4,"name":"dim_crm_user_id","comment":null,"description":"Sourced from the opportunity owner_id this key is for joining to dim_crm_user","meta":{},"data_type":null,"quote":null,"tags":["tdf","opportunity","common","sales_funnel"],"tests":[{"test_name":"relationships","fk_field":"dim_crm_user_id","fk_model":{"unique_id":"model.gitlab_snowflake.dim_crm_user","name":"dim_crm_user"},"short":"F","label":"Foreign Key"}],"display_name":"dim_crm_user_id"},"DIM_PARENT_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":5,"name":"dim_parent_crm_opportunity_id","comment":null,"description":"The Salesforce opportunity ID for the parent opportunity of this opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_crm_opportunity_id"},"GENERATED_SOURCE":{"type":"TEXT","index":6,"name":"GENERATED_SOURCE","comment":null,"display_name":"generated_source"},"LEAD_SOURCE":{"type":"TEXT","index":7,"name":"lead_source","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lead_source"},"MERGED_OPPORTUNITY_ID":{"type":"TEXT","index":8,"name":"MERGED_OPPORTUNITY_ID","comment":null,"display_name":"merged_opportunity_id"},"DUPLICATE_OPPORTUNITY_ID":{"type":"TEXT","index":9,"name":"DUPLICATE_OPPORTUNITY_ID","comment":null,"display_name":"duplicate_opportunity_id"},"NET_NEW_SOURCE_CATEGORIES":{"type":"TEXT","index":10,"name":"net_new_source_categories","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"net_new_source_categories"},"ACCOUNT_OWNER_TEAM_STAMPED":{"type":"TEXT","index":11,"name":"account_owner_team_stamped","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner_team_stamped"},"PRIMARY_CAMPAIGN_SOURCE_ID":{"type":"TEXT","index":12,"name":"primary_campaign_source_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"primary_campaign_source_id"},"SALES_PATH":{"type":"TEXT","index":13,"name":"sales_path","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_path"},"SALES_TYPE":{"type":"TEXT","index":14,"name":"sales_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_type"},"SOURCE_BUCKETS":{"type":"TEXT","index":15,"name":"source_buckets","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_buckets"},"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":16,"name":"OPPORTUNITY_SALES_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_sales_development_representative"},"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":17,"name":"OPPORTUNITY_BUSINESS_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_business_development_representative"},"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE":{"type":"TEXT","index":18,"name":"OPPORTUNITY_DEVELOPMENT_REPRESENTATIVE","comment":null,"display_name":"opportunity_development_representative"},"SDR_OR_BDR":{"type":"TEXT","index":19,"name":"SDR_OR_BDR","comment":null,"display_name":"sdr_or_bdr"},"IQM_SUBMITTED_BY_ROLE":{"type":"TEXT","index":20,"name":"IQM_SUBMITTED_BY_ROLE","comment":null,"display_name":"iqm_submitted_by_role"},"SDR_PIPELINE_CONTRIBUTION":{"type":"FLOAT","index":21,"name":"SDR_PIPELINE_CONTRIBUTION","comment":null,"display_name":"sdr_pipeline_contribution"},"STAGE_NAME":{"type":"TEXT","index":22,"name":"stage_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_name"},"SA_TECH_EVALUATION_CLOSE_STATUS":{"type":"TEXT","index":23,"name":"SA_TECH_EVALUATION_CLOSE_STATUS","comment":null,"display_name":"sa_tech_evaluation_close_status"},"DEAL_PATH":{"type":"TEXT","index":24,"name":"deal_path","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deal_path"},"PRODUCT_CATEGORY":{"type":"TEXT","index":25,"name":"PRODUCT_CATEGORY","comment":null,"display_name":"product_category"},"PRODUCT_DETAILS":{"type":"TEXT","index":26,"name":"PRODUCT_DETAILS","comment":null,"display_name":"product_details"},"PRODUCTS_PURCHASED":{"type":"TEXT","index":27,"name":"PRODUCTS_PURCHASED","comment":null,"display_name":"products_purchased"},"CRITICAL_DEAL_FLAG":{"type":"TEXT","index":28,"name":"critical_deal_flag","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"critical_deal_flag"},"FORECAST_CATEGORY_NAME":{"type":"TEXT","index":29,"name":"forecast_category_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"forecast_category_name"},"INVOICE_NUMBER":{"type":"TEXT","index":30,"name":"invoice_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"invoice_number"},"IS_REFUND":{"type":"FLOAT","index":31,"name":"is_refund","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_refund"},"IS_DOWNGRADE":{"type":"FLOAT","index":32,"name":"is_downgrade","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_downgrade"},"IS_RISKY":{"type":"BOOLEAN","index":33,"name":"is_risky","comment":null,"description":"risk assessment based on a case statement (See SQL)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_risky"},"IS_SWING_DEAL":{"type":"BOOLEAN","index":34,"name":"is_swing_deal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_swing_deal"},"IS_EDU_OSS":{"type":"FLOAT","index":35,"name":"is_edu_oss","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_edu_oss"},"IS_WON":{"type":"BOOLEAN","index":36,"name":"is_won","comment":null,"description":"Salesforce standard field which will be true if an opportunity is in any 'won' stage_is_active","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_won"},"IS_PS_OPP":{"type":"FLOAT","index":37,"name":"IS_PS_OPP","comment":null,"display_name":"is_ps_opp"},"PROBABILITY":{"type":"FLOAT","index":38,"name":"probability","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"probability"},"PROFESSIONAL_SERVICES_VALUE":{"type":"FLOAT","index":39,"name":"PROFESSIONAL_SERVICES_VALUE","comment":null,"display_name":"professional_services_value"},"REASON_FOR_LOSS":{"type":"TEXT","index":40,"name":"reason_for_loss","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"reason_for_loss"},"REASON_FOR_LOSS_DETAILS":{"type":"TEXT","index":41,"name":"reason_for_loss_details","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"reason_for_loss_details"},"REASON_FOR_LOSS_STAGED":{"type":"TEXT","index":42,"name":"reason_for_loss_staged","comment":null,"description":"Combination of reason for loss and reason for downgrade.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"reason_for_loss_staged"},"REASON_FOR_LOSS_CALC":{"type":"TEXT","index":43,"name":"reason_for_loss_calc","comment":null,"description":"Grouping of reason for loss and reason for downgrade to broader categories.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"reason_for_loss_calc"},"SALES_QUALIFIED_SOURCE":{"type":"TEXT","index":44,"name":"sales_qualified_source","comment":null,"description":"sourced from salesforce with 'BDR' being replaced by 'SDR' for this table","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_qualified_source"},"SALES_QUALIFIED_SOURCE_GROUPED":{"type":"TEXT","index":45,"name":"SALES_QUALIFIED_SOURCE_GROUPED","comment":null,"display_name":"sales_qualified_source_grouped"},"SOLUTIONS_TO_BE_REPLACED":{"type":"TEXT","index":46,"name":"solutions_to_be_replaced","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"solutions_to_be_replaced"},"IS_WEB_PORTAL_PURCHASE":{"type":"BOOLEAN","index":47,"name":"is_web_portal_purchase","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_web_portal_purchase"},"PARTNER_INITIATED_OPPORTUNITY":{"type":"BOOLEAN","index":48,"name":"partner_initiated_opportunity","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_initiated_opportunity"},"USER_SEGMENT":{"type":"TEXT","index":49,"name":"user_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_segment"},"ORDER_TYPE":{"type":"TEXT","index":50,"name":"order_type","comment":null,"description":"An attribute of an opportunity to designate what type or order it is. This is stamped on the close date of the opportunity. In its latest version, Order Type has logic incorporated to filter out additional CI Minutes and credits as First Order, per the [Salesforce Documentation](https://gitlab.my.salesforce.com/00N4M00000Ib7ly?setupid=OpportunityFields).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"order_type"},"ORDER_TYPE_LIVE":{"type":"TEXT","index":51,"name":"order_type_live","comment":null,"description":"The current Order Type of an opportunity, potentially after it has been stamped on its close date. Per the [documentation in Salesforce](https://gitlab.my.salesforce.com/00N4M00000Ib8Ok?setupid=OpportunityFields), This field is used to track movement of values post deal close and is for analysis purposes only.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"order_type_live"},"OPPORTUNITY_CATEGORY":{"type":"TEXT","index":52,"name":"OPPORTUNITY_CATEGORY","comment":null,"display_name":"opportunity_category"},"OPPORTUNITY_HEALTH":{"type":"TEXT","index":53,"name":"opportunity_health","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"opportunity_health"},"RISK_TYPE":{"type":"TEXT","index":54,"name":"risk_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_type"},"RISK_REASONS":{"type":"TEXT","index":55,"name":"risk_reasons","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_reasons"},"DOWNGRADE_REASON":{"type":"TEXT","index":56,"name":"DOWNGRADE_REASON","comment":null,"display_name":"downgrade_reason"},"TAM_NOTES":{"type":"TEXT","index":57,"name":"tam_notes","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"tam_notes"},"CHURN_CONTRACTION_TYPE":{"type":"TEXT","index":58,"name":"CHURN_CONTRACTION_TYPE","comment":null,"display_name":"churn_contraction_type"},"CHURN_CONTRACTION_NET_ARR_BUCKET":{"type":"TEXT","index":59,"name":"CHURN_CONTRACTION_NET_ARR_BUCKET","comment":null,"display_name":"churn_contraction_net_arr_bucket"},"PAYMENT_SCHEDULE":{"type":"TEXT","index":60,"name":"PAYMENT_SCHEDULE","comment":null,"display_name":"payment_schedule"},"COMP_Y2_IACV":{"type":"FLOAT","index":61,"name":"COMP_Y2_IACV","comment":null,"display_name":"comp_y2_iacv"},"OPPORTUNITY_TERM":{"type":"FLOAT","index":62,"name":"OPPORTUNITY_TERM","comment":null,"display_name":"opportunity_term"},"PRIMARY_SOLUTION_ARCHITECT":{"type":"TEXT","index":63,"name":"PRIMARY_SOLUTION_ARCHITECT","comment":null,"display_name":"primary_solution_architect"},"GROWTH_TYPE":{"type":"TEXT","index":64,"name":"GROWTH_TYPE","comment":null,"display_name":"growth_type"},"OPPORTUNITY_DEAL_SIZE":{"type":"TEXT","index":65,"name":"OPPORTUNITY_DEAL_SIZE","comment":null,"display_name":"opportunity_deal_size"},"DEPLOYMENT_PREFERENCE":{"type":"TEXT","index":66,"name":"DEPLOYMENT_PREFERENCE","comment":null,"display_name":"deployment_preference"},"STAGE_NAME_3PLUS":{"type":"TEXT","index":67,"name":"stage_name_3plus","comment":null,"description":"Grouping of stage names where all stages with numbers <=2 are in Pipeline and all above are +3 Pipeline.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_name_3plus"},"STAGE_NAME_4PLUS":{"type":"TEXT","index":68,"name":"stage_name_4plus","comment":null,"description":"Grouping of stage names where all stages with numbers <=3 are in Pipeline and all above are +4 Pipeline.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_name_4plus"},"STAGE_CATEGORY":{"type":"TEXT","index":69,"name":"STAGE_CATEGORY","comment":null,"display_name":"stage_category"},"DEAL_CATEGORY":{"type":"TEXT","index":70,"name":"DEAL_CATEGORY","comment":null,"display_name":"deal_category"},"DEAL_GROUP":{"type":"TEXT","index":71,"name":"DEAL_GROUP","comment":null,"display_name":"deal_group"},"DEAL_SIZE":{"type":"TEXT","index":72,"name":"DEAL_SIZE","comment":null,"display_name":"deal_size"},"CALCULATED_DEAL_SIZE":{"type":"TEXT","index":73,"name":"calculated_deal_size","comment":null,"description":"Banded groupings of net ARR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"calculated_deal_size"},"DEAL_PATH_ENGAGEMENT":{"type":"TEXT","index":74,"name":"DEAL_PATH_ENGAGEMENT","comment":null,"display_name":"deal_path_engagement"},"OPPORTUNITY_OWNER":{"type":"TEXT","index":75,"name":"OPPORTUNITY_OWNER","comment":null,"display_name":"opportunity_owner"},"OPPORTUNITY_OWNER_MANAGER":{"type":"TEXT","index":76,"name":"OPPORTUNITY_OWNER_MANAGER","comment":null,"display_name":"opportunity_owner_manager"},"OPPORTUNITY_OWNER_DEPARTMENT":{"type":"TEXT","index":77,"name":"OPPORTUNITY_OWNER_DEPARTMENT","comment":null,"display_name":"opportunity_owner_department"},"OPPORTUNITY_OWNER_ROLE":{"type":"TEXT","index":78,"name":"OPPORTUNITY_OWNER_ROLE","comment":null,"display_name":"opportunity_owner_role"},"OPPORTUNITY_OWNER_TITLE":{"type":"TEXT","index":79,"name":"OPPORTUNITY_OWNER_TITLE","comment":null,"display_name":"opportunity_owner_title"},"SQS_BUCKET_ENGAGEMENT":{"type":"TEXT","index":80,"name":"SQS_BUCKET_ENGAGEMENT","comment":null,"display_name":"sqs_bucket_engagement"},"SA_TECH_EVALUATION_END_DATE":{"type":"TIMESTAMP_TZ","index":81,"name":"SA_TECH_EVALUATION_END_DATE","comment":null,"display_name":"sa_tech_evaluation_end_date"},"SA_TECH_EVALUATION_START_DATE":{"type":"TIMESTAMP_TZ","index":82,"name":"SA_TECH_EVALUATION_START_DATE","comment":null,"display_name":"sa_tech_evaluation_start_date"},"CALCULATED_PARTNER_TRACK":{"type":"TEXT","index":83,"name":"CALCULATED_PARTNER_TRACK","comment":null,"display_name":"calculated_partner_track"},"QUOTE_START_DATE":{"type":"DATE","index":84,"name":"QUOTE_START_DATE","comment":null,"display_name":"quote_start_date"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":85,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":86,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"RESALE_PARTNER_NAME":{"type":"TEXT","index":87,"name":"RESALE_PARTNER_NAME","comment":null,"display_name":"resale_partner_name"},"RECORD_TYPE_NAME":{"type":"TEXT","index":88,"name":"RECORD_TYPE_NAME","comment":null,"display_name":"record_type_name"},"CRM_ACCOUNT_OWNER_SALES_SEGMENT":{"type":"TEXT","index":89,"name":"CRM_ACCOUNT_OWNER_SALES_SEGMENT","comment":null,"display_name":"crm_account_owner_sales_segment"},"CRM_ACCOUNT_OWNER_GEO":{"type":"TEXT","index":90,"name":"CRM_ACCOUNT_OWNER_GEO","comment":null,"display_name":"crm_account_owner_geo"},"CRM_ACCOUNT_OWNER_REGION":{"type":"TEXT","index":91,"name":"CRM_ACCOUNT_OWNER_REGION","comment":null,"display_name":"crm_account_owner_region"},"CRM_ACCOUNT_OWNER_AREA":{"type":"TEXT","index":92,"name":"CRM_ACCOUNT_OWNER_AREA","comment":null,"display_name":"crm_account_owner_area"},"CRM_ACCOUNT_OWNER_SALES_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":93,"name":"CRM_ACCOUNT_OWNER_SALES_SEGMENT_GEO_REGION_AREA","comment":null,"display_name":"crm_account_owner_sales_segment_geo_region_area"},"COMPETITORS":{"type":"TEXT","index":94,"name":"competitors","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors"},"COMPETITORS_OTHER_FLAG":{"type":"NUMBER","index":95,"name":"competitors_other_flag","comment":null,"description":"One of the listed competitors is Other.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_other_flag"},"COMPETITORS_GITLAB_CORE_FLAG":{"type":"NUMBER","index":96,"name":"competitors_gitlab_core_flag","comment":null,"description":"One of the listed competitors is Gitlab Core.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_gitlab_core_flag"},"COMPETITORS_NONE_FLAG":{"type":"NUMBER","index":97,"name":"competitors_none_flag","comment":null,"description":"One of the listed competitors is none.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_none_flag"},"COMPETITORS_GITHUB_ENTERPRISE_FLAG":{"type":"NUMBER","index":98,"name":"competitors_github_enterprise_flag","comment":null,"description":"One of the listed competitors is Github Gnterprise.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_github_enterprise_flag"},"COMPETITORS_BITBUCKET_SERVER_FLAG":{"type":"NUMBER","index":99,"name":"competitors_bitbucket_server_flag","comment":null,"description":"One of the listed competitors is Bitbucket Server.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_bitbucket_server_flag"},"COMPETITORS_UNKNOWN_FLAG":{"type":"NUMBER","index":100,"name":"competitors_unknown_flag","comment":null,"description":"One of the listed competitors is Unknown.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_unknown_flag"},"COMPETITORS_GITHUB_FLAG":{"type":"NUMBER","index":101,"name":"competitors_github_flag","comment":null,"description":"One of the listed competitors is Github.com.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_github_flag"},"COMPETITORS_GITLAB_FLAG":{"type":"NUMBER","index":102,"name":"competitors_gitlab_flag","comment":null,"description":"One of the listed competitors is Gitlab.com.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_gitlab_flag"},"COMPETITORS_JENKINS_FLAG":{"type":"NUMBER","index":103,"name":"competitors_jenkins_flag","comment":null,"description":"One of the listed competitors is Jenkins.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_jenkins_flag"},"COMPETITORS_AZURE_DEVOPS_FLAG":{"type":"NUMBER","index":104,"name":"competitors_azure_devops_flag","comment":null,"description":"One of the listed competitors is Azure DevOps.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_azure_devops_flag"},"COMPETITORS_SVN_FLAG":{"type":"NUMBER","index":105,"name":"competitors_svn_flag","comment":null,"description":"One of the listed competitors is SVN.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_svn_flag"},"COMPETITORS_BITBUCKET_FLAG":{"type":"NUMBER","index":106,"name":"competitors_bitbucket_flag","comment":null,"description":"One of the listed competitors is Bitbucket.org.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_bitbucket_flag"},"COMPETITORS_ATLASSIAN_FLAG":{"type":"NUMBER","index":107,"name":"competitors_atlassian_flag","comment":null,"description":"One of the listed competitors is Atlassian.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_atlassian_flag"},"COMPETITORS_PERFORCE_FLAG":{"type":"NUMBER","index":108,"name":"competitors_perforce_flag","comment":null,"description":"One of the listed competitors is Perforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_perforce_flag"},"COMPETITORS_VISUAL_STUDIO_FLAG":{"type":"NUMBER","index":109,"name":"competitors_visual_studio_flag","comment":null,"description":"One of the listed competitors is Visual Studio Team Services.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_visual_studio_flag"},"COMPETITORS_AZURE_FLAG":{"type":"NUMBER","index":110,"name":"competitors_azure_flag","comment":null,"description":"One of the listed competitors is Azure.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_azure_flag"},"COMPETITORS_AMAZON_CODE_COMMIT_FLAG":{"type":"NUMBER","index":111,"name":"competitors_amazon_code_commit_flag","comment":null,"description":"One of the listed competitors is Amazon Code Commit.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_amazon_code_commit_flag"},"COMPETITORS_CIRCLECI_FLAG":{"type":"NUMBER","index":112,"name":"competitors_circleci_flag","comment":null,"description":"One of the listed competitors is GircleCI.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_circleci_flag"},"COMPETITORS_BAMBOO_FLAG":{"type":"NUMBER","index":113,"name":"competitors_bamboo_flag","comment":null,"description":"One of the listed competitors is Bamboo.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_bamboo_flag"},"COMPETITORS_AWS_FLAG":{"type":"NUMBER","index":114,"name":"competitors_aws_flag","comment":null,"description":"one of the listed competitors is AWS.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"competitors_aws_flag"},"CP_PARTNER":{"type":"TEXT","index":115,"name":"CP_PARTNER","comment":null,"display_name":"cp_partner"},"CP_PAPER_PROCESS":{"type":"TEXT","index":116,"name":"CP_PAPER_PROCESS","comment":null,"display_name":"cp_paper_process"},"CP_HELP":{"type":"TEXT","index":117,"name":"CP_HELP","comment":null,"display_name":"cp_help"},"CP_REVIEW_NOTES":{"type":"TEXT","index":118,"name":"CP_REVIEW_NOTES","comment":null,"display_name":"cp_review_notes"},"CP_USE_CASES":{"type":"TEXT","index":119,"name":"CP_USE_CASES","comment":null,"display_name":"cp_use_cases"},"CP_CHAMPION":{"type":"TEXT","index":120,"name":"CP_CHAMPION","comment":null,"display_name":"cp_champion"},"CP_CLOSE_PLAN":{"type":"TEXT","index":121,"name":"CP_CLOSE_PLAN","comment":null,"display_name":"cp_close_plan"},"CP_COMPETITION":{"type":"TEXT","index":122,"name":"CP_COMPETITION","comment":null,"display_name":"cp_competition"},"CP_DECISION_CRITERIA":{"type":"TEXT","index":123,"name":"CP_DECISION_CRITERIA","comment":null,"display_name":"cp_decision_criteria"},"CP_DECISION_PROCESS":{"type":"TEXT","index":124,"name":"CP_DECISION_PROCESS","comment":null,"display_name":"cp_decision_process"},"CP_ECONOMIC_BUYER":{"type":"TEXT","index":125,"name":"CP_ECONOMIC_BUYER","comment":null,"display_name":"cp_economic_buyer"},"CP_IDENTIFY_PAIN":{"type":"TEXT","index":126,"name":"CP_IDENTIFY_PAIN","comment":null,"display_name":"cp_identify_pain"},"CP_METRICS":{"type":"TEXT","index":127,"name":"CP_METRICS","comment":null,"display_name":"cp_metrics"},"CP_RISKS":{"type":"TEXT","index":128,"name":"CP_RISKS","comment":null,"display_name":"cp_risks"},"CP_VALUE_DRIVER":{"type":"TEXT","index":129,"name":"CP_VALUE_DRIVER","comment":null,"display_name":"cp_value_driver"},"CP_WHY_DO_ANYTHING_AT_ALL":{"type":"TEXT","index":130,"name":"CP_WHY_DO_ANYTHING_AT_ALL","comment":null,"display_name":"cp_why_do_anything_at_all"},"CP_WHY_GITLAB":{"type":"TEXT","index":131,"name":"CP_WHY_GITLAB","comment":null,"display_name":"cp_why_gitlab"},"CP_WHY_NOW":{"type":"TEXT","index":132,"name":"CP_WHY_NOW","comment":null,"display_name":"cp_why_now"},"CP_SCORE":{"type":"FLOAT","index":133,"name":"CP_SCORE","comment":null,"display_name":"cp_score"},"CRM_OPP_OWNER_STAMPED_NAME":{"type":"TEXT","index":134,"name":"CRM_OPP_OWNER_STAMPED_NAME","comment":null,"display_name":"crm_opp_owner_stamped_name"},"CRM_ACCOUNT_OWNER_STAMPED_NAME":{"type":"TEXT","index":135,"name":"CRM_ACCOUNT_OWNER_STAMPED_NAME","comment":null,"display_name":"crm_account_owner_stamped_name"},"SAO_CRM_OPP_OWNER_STAMPED_NAME":{"type":"TEXT","index":136,"name":"SAO_CRM_OPP_OWNER_STAMPED_NAME","comment":null,"display_name":"sao_crm_opp_owner_stamped_name"},"SAO_CRM_ACCOUNT_OWNER_STAMPED_NAME":{"type":"TEXT","index":137,"name":"SAO_CRM_ACCOUNT_OWNER_STAMPED_NAME","comment":null,"display_name":"sao_crm_account_owner_stamped_name"},"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED":{"type":"TEXT","index":138,"name":"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_sales_segment_stamped"},"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_GROUPED":{"type":"TEXT","index":139,"name":"SAO_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_GROUPED","comment":null,"display_name":"sao_crm_opp_owner_sales_segment_stamped_grouped"},"SAO_CRM_OPP_OWNER_GEO_STAMPED":{"type":"TEXT","index":140,"name":"SAO_CRM_OPP_OWNER_GEO_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_geo_stamped"},"SAO_CRM_OPP_OWNER_REGION_STAMPED":{"type":"TEXT","index":141,"name":"SAO_CRM_OPP_OWNER_REGION_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_region_stamped"},"SAO_CRM_OPP_OWNER_AREA_STAMPED":{"type":"TEXT","index":142,"name":"SAO_CRM_OPP_OWNER_AREA_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_area_stamped"},"SAO_CRM_OPP_OWNER_SEGMENT_REGION_STAMPED_GROUPED":{"type":"TEXT","index":143,"name":"SAO_CRM_OPP_OWNER_SEGMENT_REGION_STAMPED_GROUPED","comment":null,"display_name":"sao_crm_opp_owner_segment_region_stamped_grouped"},"SAO_CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED":{"type":"TEXT","index":144,"name":"SAO_CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED","comment":null,"display_name":"sao_crm_opp_owner_sales_segment_geo_region_area_stamped"},"CRM_OPP_OWNER_USER_ROLE_TYPE_STAMPED":{"type":"TEXT","index":145,"name":"CRM_OPP_OWNER_USER_ROLE_TYPE_STAMPED","comment":null,"display_name":"crm_opp_owner_user_role_type_stamped"},"CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED":{"type":"TEXT","index":146,"name":"CRM_OPP_OWNER_SALES_SEGMENT_GEO_REGION_AREA_STAMPED","comment":null,"display_name":"crm_opp_owner_sales_segment_geo_region_area_stamped"},"OPPORTUNITY_OWNER_USER_SEGMENT":{"type":"TEXT","index":147,"name":"OPPORTUNITY_OWNER_USER_SEGMENT","comment":null,"display_name":"opportunity_owner_user_segment"},"OPPORTUNITY_OWNER_USER_GEO":{"type":"TEXT","index":148,"name":"OPPORTUNITY_OWNER_USER_GEO","comment":null,"display_name":"opportunity_owner_user_geo"},"OPPORTUNITY_OWNER_USER_REGION":{"type":"TEXT","index":149,"name":"OPPORTUNITY_OWNER_USER_REGION","comment":null,"display_name":"opportunity_owner_user_region"},"OPPORTUNITY_OWNER_USER_AREA":{"type":"TEXT","index":150,"name":"OPPORTUNITY_OWNER_USER_AREA","comment":null,"display_name":"opportunity_owner_user_area"},"REPORT_OPPORTUNITY_USER_SEGMENT":{"type":"TEXT","index":151,"name":"report_opportunity_user_segment","comment":null,"description":"Lower case stamped user segment.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"report_opportunity_user_segment"},"REPORT_OPPORTUNITY_USER_GEO":{"type":"TEXT","index":152,"name":"report_opportunity_user_geo","comment":null,"description":"Lower case stamped user geo.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"report_opportunity_user_geo"},"REPORT_OPPORTUNITY_USER_REGION":{"type":"TEXT","index":153,"name":"report_opportunity_user_region","comment":null,"description":"Lower case stamped user region.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"report_opportunity_user_region"},"REPORT_OPPORTUNITY_USER_AREA":{"type":"TEXT","index":154,"name":"report_opportunity_user_area","comment":null,"description":"Lower case stamped user area.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"report_opportunity_user_area"},"REPORT_USER_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":155,"name":"report_user_segment_geo_region_area","comment":null,"description":"Lower case stamped user segment geo region area.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"report_user_segment_geo_region_area"},"REPORT_USER_SEGMENT_GEO_REGION_AREA_SQS_OT":{"type":"TEXT","index":156,"name":"report_user_segment_geo_region_area_sqs_ot","comment":null,"description":"Lower case concatenated user segment geo region area, sales qualified source, and order type.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"report_user_segment_geo_region_area_sqs_ot"},"KEY_SEGMENT":{"type":"TEXT","index":157,"name":"key_segment","comment":null,"description":"Stamped user segment","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment"},"KEY_SQS":{"type":"TEXT","index":158,"name":"key_sqs","comment":null,"description":"Sales qualified source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_sqs"},"KEY_OT":{"type":"TEXT","index":159,"name":"key_ot","comment":null,"description":"Order type","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_ot"},"KEY_SEGMENT_SQS":{"type":"TEXT","index":160,"name":"key_segment_sqs","comment":null,"description":"Concatenated stamped user segment and sales qualified source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_sqs"},"KEY_SEGMENT_OT":{"type":"TEXT","index":161,"name":"key_segment_ot","comment":null,"description":"Concatenated stamped user segment and stamped order type","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_ot"},"KEY_SEGMENT_GEO":{"type":"TEXT","index":162,"name":"key_segment_geo","comment":null,"description":"Concatenated stamped user segment and stamped user geo","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo"},"KEY_SEGMENT_GEO_SQS":{"type":"TEXT","index":163,"name":"key_segment_geo_sqs","comment":null,"description":"Concatenated stamped user segment, stamped user geo, and sales qualified source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_sqs"},"KEY_SEGMENT_GEO_OT":{"type":"TEXT","index":164,"name":"key_segment_geo_ot","comment":null,"description":"Concatenated stamped user segment, stamped user geo and stamped order type","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_ot"},"KEY_SEGMENT_GEO_REGION":{"type":"TEXT","index":165,"name":"key_segment_geo_region","comment":null,"description":"Concatenated stamped user segment, stamped user geo, and stamped user region","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_region"},"KEY_SEGMENT_GEO_REGION_SQS":{"type":"TEXT","index":166,"name":"key_segment_geo_region_sqs","comment":null,"description":"Concatenated stamped user segment, stamped user geo, stamped user region, and sales qualified source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_region_sqs"},"KEY_SEGMENT_GEO_REGION_OT":{"type":"TEXT","index":167,"name":"key_segment_geo_region_ot","comment":null,"description":"Concatenated stamped user segment, stamped user geo, stamped user region, and stamped order type","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_region_ot"},"KEY_SEGMENT_GEO_REGION_AREA":{"type":"TEXT","index":168,"name":"key_segment_geo_region_area","comment":null,"description":"Concatenated stamped user segment, stamped user geo, stamped user region, and stamped user area","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_region_area"},"KEY_SEGMENT_GEO_REGION_AREA_SQS":{"type":"TEXT","index":169,"name":"key_segment_geo_region_area_sqs","comment":null,"description":"Concatenated stamped user segment, stamped user geo, stamped user region, stamped user area, and sales qualified source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_region_area_sqs"},"KEY_SEGMENT_GEO_REGION_AREA_OT":{"type":"TEXT","index":170,"name":"key_segment_geo_region_area_ot","comment":null,"description":"Concatenated stamped user segment, stamped user geo, stamped user region, stamped user area, and stamped order type","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_region_area_ot"},"KEY_SEGMENT_GEO_AREA":{"type":"TEXT","index":171,"name":"key_segment_geo_area","comment":null,"description":"Concatenated stamped user segment, stamped user geo, and stamped user area","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"key_segment_geo_area"},"SALES_TEAM_CRO_LEVEL":{"type":"TEXT","index":172,"name":"sales_team_cro_level","comment":null,"description":"Sales team structure at the CRO level (segment)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_team_cro_level"},"SALES_TEAM_RD_ASM_LEVEL":{"type":"TEXT","index":173,"name":"sales_team_rd_asm_level","comment":null,"description":"This code replicates the reporting structured of FY22.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_team_rd_asm_level"},"SALES_TEAM_VP_LEVEL":{"type":"TEXT","index":174,"name":"sales_team_vp_level","comment":null,"description":"Sales team structure at the team VP level (segment-geo)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_team_vp_level"},"SALES_TEAM_AVP_RD_LEVEL":{"type":"TEXT","index":175,"name":"sales_team_avp_rd_level","comment":null,"description":"Sales team structure at the AVP RD level (segment-geo-region)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_team_avp_rd_level"},"SALES_TEAM_ASM_LEVEL":{"type":"TEXT","index":176,"name":"sales_team_asm_level","comment":null,"description":"Sales team structure at the ASM level (segment-geo-region-area)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_team_asm_level"},"ACCOUNT_OWNER_TEAM_STAMPED_CRO_LEVEL":{"type":"TEXT","index":177,"name":"account_owner_team_stamped_cro_level","comment":null,"description":"Assigns opportunities to Large, Mid-Market, and SMB by stamped account owner teams.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner_team_stamped_cro_level"},"DR_PARTNER_DEAL_TYPE":{"type":"TEXT","index":178,"name":"DR_PARTNER_DEAL_TYPE","comment":null,"display_name":"dr_partner_deal_type"},"DR_PARTNER_ENGAGEMENT":{"type":"TEXT","index":179,"name":"DR_PARTNER_ENGAGEMENT","comment":null,"display_name":"dr_partner_engagement"},"VSA_READOUT":{"type":"TEXT","index":180,"name":"vsa_readout","comment":null,"description":"The sentiment from the Value Stream Assessment readout meeting.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"vsa_readout"},"VSA_START_DATE":{"type":"TIMESTAMP_TZ","index":181,"name":"vsa_start_date","comment":null,"description":"Date of the Value Stream Assessment kickoff call with the prospect/customer.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"vsa_start_date"},"VSA_URL":{"type":"TEXT","index":182,"name":"vsa_url","comment":null,"description":"The URL to the Value Stream Assesment readout presentation.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"vsa_url"},"VSA_STATUS":{"type":"TEXT","index":183,"name":"vsa_status","comment":null,"description":"The status of the Value Stream Assessment.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"vsa_status"},"VSA_END_DATE":{"type":"TIMESTAMP_TZ","index":184,"name":"vsa_end_date","comment":null,"description":"The date the Value Stream Assessment readout is presented to the prospect/customer.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"vsa_end_date"},"MILITARY_INVASION_COMMENTS":{"type":"TEXT","index":185,"name":"military_invasion_comments","comment":null,"description":"Field where rep can add in more details as to why and how ARR was impacted by military invasions.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"military_invasion_comments"},"MILITARY_INVASION_RISK_SCALE":{"type":"TEXT","index":186,"name":"military_invasion_risk_scale","comment":null,"description":"This field is for tracking the risk of this deal being impacted by military invasions.  Definitions can be found in the Internal Sales HB under \"Sales Forecasting.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"military_invasion_risk_scale"},"INTENDED_PRODUCT_TIER":{"type":"TEXT","index":187,"name":"intended_product_tier","comment":null,"description":"The intended product tier looking to be purchased for this opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"intended_product_tier"},"DOWNGRADE_DETAILS":{"type":"TEXT","index":188,"name":"downgrade_details","comment":null,"description":"Field where rep can add in more details as to why the customer has downgraded.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"downgrade_details"},"_LAST_DBT_RUN":{"type":"TIMESTAMP_TZ","index":189,"name":"_LAST_DBT_RUN","comment":null,"display_name":"_last_dbt_run"},"CREATED_BY":{"type":"TEXT","index":190,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":191,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":192,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":193,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":194,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":195,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"merged_crm_opportunity_id":{"name":"merged_crm_opportunity_id","description":"If the closed lost reason is that the Opp was merged into another opportunity than this field will be the id for that opportunity record.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merged_crm_opportunity_id"},"sales_accepted_date":{"name":"sales_accepted_date","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_accepted_date"},"technical_evaluation_date":{"name":"technical_evaluation_date","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_evaluation_date"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 19:00UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":67810816,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_crm_opportunity","raw_sql":"$19","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_crm_opportunity","model.gitlab_snowflake.prep_crm_opportunity"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common","database":"PROD","tags":["safe","six_hourly"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common","fqn":["gitlab_snowflake","common","dimensions_shared","restricted_safe","dim_crm_opportunity"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/restricted_safe/dim_crm_opportunity.sql","original_file_path":"models/common/dimensions_shared/restricted_safe/dim_crm_opportunity.sql","name":"dim_crm_opportunity","alias":"dim_crm_opportunity","checksum":{"name":"sha256","checksum":"fdf8e7f37b81b676ed871dc8597e9a12acfe120133edbfa1dd71694dd8a8b0e7"},"tags":["safe","six_hourly"],"refs":[["prep_crm_opportunity"],["prep_crm_opportunity"]],"sources":[],"metrics":[],"description":"Model for all dimensional opportunity columns from salesforce opportunity object. This model is refreshed on a six hourly schedule using the `dbt_six_hourly` airflow DAG.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/restricted_safe/dim_crm_opportunity.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["six_hourly"],"secure":true},"created_at":1689033752.1723607,"compiled_sql":"$1a","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common.dim_crm_opportunity","label":"dim_crm_opportunity"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_SUBSCRIPTION","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":1,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a version of a subscription","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_subscription_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"subscription_version","comment":null,"description":"The version number of the subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_version"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"dim_crm_account_id","comment":null,"description":"account id from SFDC identifing the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":5,"name":"dim_billing_account_id","comment":null,"description":"The id of the Zuora account the subscription is associated with the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_BILLING_ACCOUNT_ID_INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":6,"name":"DIM_BILLING_ACCOUNT_ID_INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"dim_billing_account_id_invoice_owner_account"},"DIM_BILLING_ACCOUNT_ID_CREATOR_ACCOUNT":{"type":"TEXT","index":7,"name":"DIM_BILLING_ACCOUNT_ID_CREATOR_ACCOUNT","comment":null,"display_name":"dim_billing_account_id_creator_account"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":8,"name":"dim_crm_opportunity_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id"},"DIM_CRM_OPPORTUNITY_ID_CURRENT_OPEN_RENEWAL":{"type":"TEXT","index":9,"name":"dim_crm_opportunity_id_current_open_renewal","comment":null,"description":"The current open renewal opportunity mapped to a subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id_current_open_renewal"},"DIM_CRM_OPPORTUNITY_ID_CLOSED_LOST_RENEWAL":{"type":"TEXT","index":10,"name":"dim_crm_opportunity_id_closed_lost_renewal","comment":null,"description":"The closed lost renewal opportunity, where applicable, mapped mapped to a subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id_closed_lost_renewal"},"DIM_AMENDMENT_ID_SUBSCRIPTION":{"type":"TEXT","index":11,"name":"DIM_AMENDMENT_ID_SUBSCRIPTION","comment":null,"display_name":"dim_amendment_id_subscription"},"CREATED_BY_ID":{"type":"TEXT","index":12,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"UPDATED_BY_ID":{"type":"TEXT","index":13,"name":"UPDATED_BY_ID","comment":null,"display_name":"updated_by_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":14,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"DIM_SUBSCRIPTION_ID_PREVIOUS":{"type":"TEXT","index":15,"name":"dim_subscription_id_previous","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_subscription_id_previous"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":16,"name":"subscription_name_slugify","comment":null,"description":"The unique identifier of the subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_name_slugify"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":17,"name":"subscription_status","comment":null,"description":"The status of the subscription","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"accepted_values","short":"A","label":"Accepted Values: Active, Cancelled, Draft, Expired"}],"display_name":"subscription_status"},"NAMESPACE_ID":{"type":"TEXT","index":18,"name":"namespace_id","comment":null,"description":"The id of the namespace related to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":19,"name":"namespace_name","comment":null,"description":"The namespace related to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME":{"type":"TEXT","index":20,"name":"zuora_renewal_subscription_name","comment":null,"description":"name of the linked subscription that renews the prior subscription in a lineage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME_SLUGIFY":{"type":"ARRAY","index":21,"name":"zuora_renewal_subscription_name_slugify","comment":null,"description":"name of the linked subscription that renews the prior subscription in a lineage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name_slugify"},"CURRENT_TERM":{"type":"NUMBER","index":22,"name":"CURRENT_TERM","comment":null,"display_name":"current_term"},"RENEWAL_TERM":{"type":"NUMBER","index":23,"name":"renewal_term","comment":null,"description":"The length of the period for the subscription renewal term","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_term"},"RENEWAL_TERM_PERIOD_TYPE":{"type":"TEXT","index":24,"name":"renewal_term_period_type","comment":null,"description":"The period type for the subscription renewal term. This field is used with the renewal term field to specify the subscription renewal term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_term_period_type"},"EOA_STARTER_BRONZE_OFFER_ACCEPTED":{"type":"TEXT","index":25,"name":"EOA_STARTER_BRONZE_OFFER_ACCEPTED","comment":null,"display_name":"eoa_starter_bronze_offer_accepted"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":26,"name":"subscription_sales_type","comment":null,"description":"Identifies whether a subscription is Sales-Assisted or Self-Service / Web Direct.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"accepted_values","short":"A","label":"Accepted Values: Sales-Assisted, Self-Service"}],"display_name":"subscription_sales_type"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":27,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":28,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":29,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":30,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":31,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":32,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":33,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":34,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":35,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"IS_QUESTIONABLE_OPPORTUNITY_MAPPING":{"type":"NUMBER","index":36,"name":"IS_QUESTIONABLE_OPPORTUNITY_MAPPING","comment":null,"display_name":"is_questionable_opportunity_mapping"},"INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":37,"name":"INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"invoice_owner_account"},"CREATOR_ACCOUNT":{"type":"TEXT","index":38,"name":"CREATOR_ACCOUNT","comment":null,"display_name":"creator_account"},"WAS_PURCHASED_THROUGH_RESELLER":{"type":"BOOLEAN","index":39,"name":"was_purchased_through_reseller","comment":null,"description":"Boolean field that indicates whether the subscription was purchased through a reseller. If TRUE, the `invoice_owner_account` will contain the name of the reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"was_purchased_through_reseller"},"MULTI_YEAR_DEAL_SUBSCRIPTION_LINKAGE":{"type":"TEXT","index":40,"name":"MULTI_YEAR_DEAL_SUBSCRIPTION_LINKAGE","comment":null,"display_name":"multi_year_deal_subscription_linkage"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":41,"name":"subscription_start_date","comment":null,"description":"The date when the subscription term starts. This date is the same as the start date of the original term, which isn't necessarily the start date of the current or new term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":42,"name":"subscription_end_date","comment":null,"description":"The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the SubscriptionEndDate is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":43,"name":"subscription_start_month","comment":null,"description":"The month when the subscription term starts. This month is the same as the start month of the original term, which isn't necessarily the start month of the current or new term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":44,"name":"subscription_end_month","comment":null,"description":"The month when the subscription term ends. This month is the same as the term end month or the cancelation month, as appropriate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_month"},"SUBSCRIPTION_END_FISCAL_YEAR":{"type":"NUMBER","index":45,"name":"SUBSCRIPTION_END_FISCAL_YEAR","comment":null,"display_name":"subscription_end_fiscal_year"},"SUBSCRIPTION_CREATED_DATE":{"type":"DATE","index":46,"name":"SUBSCRIPTION_CREATED_DATE","comment":null,"display_name":"subscription_created_date"},"SUBSCRIPTION_UPDATED_DATE":{"type":"DATE","index":47,"name":"SUBSCRIPTION_UPDATED_DATE","comment":null,"display_name":"subscription_updated_date"},"TERM_START_DATE":{"type":"DATE","index":48,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":49,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"TERM_START_MONTH":{"type":"DATE","index":50,"name":"TERM_START_MONTH","comment":null,"display_name":"term_start_month"},"TERM_END_MONTH":{"type":"DATE","index":51,"name":"TERM_END_MONTH","comment":null,"display_name":"term_end_month"},"TERM_START_FISCAL_YEAR":{"type":"NUMBER","index":52,"name":"TERM_START_FISCAL_YEAR","comment":null,"display_name":"term_start_fiscal_year"},"TERM_END_FISCAL_YEAR":{"type":"NUMBER","index":53,"name":"TERM_END_FISCAL_YEAR","comment":null,"display_name":"term_end_fiscal_year"},"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION":{"type":"BOOLEAN","index":54,"name":"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION","comment":null,"display_name":"is_single_fiscal_year_term_subscription"},"SECOND_ACTIVE_RENEWAL_MONTH":{"type":"DATE","index":55,"name":"SECOND_ACTIVE_RENEWAL_MONTH","comment":null,"display_name":"second_active_renewal_month"},"CANCELLED_DATE":{"type":"TIMESTAMP_TZ","index":56,"name":"CANCELLED_DATE","comment":null,"display_name":"cancelled_date"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":57,"name":"SUBSCRIPTION_LINEAGE","comment":null,"display_name":"subscription_lineage"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":58,"name":"OLDEST_SUBSCRIPTION_IN_COHORT","comment":null,"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":59,"name":"SUBSCRIPTION_COHORT_MONTH","comment":null,"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":60,"name":"SUBSCRIPTION_COHORT_QUARTER","comment":null,"display_name":"subscription_cohort_quarter"},"SUBSCRIPTION_COHORT_YEAR":{"type":"DATE","index":61,"name":"SUBSCRIPTION_COHORT_YEAR","comment":null,"display_name":"subscription_cohort_year"},"CREATED_BY":{"type":"TEXT","index":62,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":63,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":64,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":65,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":66,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":67,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dim_billing_account_id_invoice_owner":{"name":"dim_billing_account_id_invoice_owner","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id_invoice_owner"},"amendment_id":{"name":"amendment_id","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"amendment_id"},"is_auto_renew":{"name":"is_auto_renew","description":"Boolean field, if true, this subscription automatically renews at the end of the subscription term","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_auto_renew"},"lineage":{"name":"lineage","description":"All the subscriptions subsquent to the primary subscription, separated by commas.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lineage"},"cohort_month":{"name":"cohort_month","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_month"},"cohort_quarter":{"name":"cohort_quarter","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_quarter"},"cohort_year":{"name":"cohort_year","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_year"},"is_myb":{"name":"is_myb","description":"MYB = Multi-Year Booking. This boolean flag identifies if a subscription is booked for more than one year. This can either be by having a term greater than 12 months or having a linked subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_myb"},"is_myb_with_multi_subs":{"name":"is_myb_with_multi_subs","description":"MYB = Multi-Year Booking. This boolean flag identifies if a subscription is booked for more than one year by using multiple linked subscriptions only. A subscription with a term greater than 12 but does not have linked subscriptions has a value of FALSE.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_myb_with_multi_subs"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:26UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":36424192,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_subscription","raw_sql":"$1b","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_subscription","model.gitlab_snowflake.prep_subscription","model.gitlab_snowflake.map_subscription_opportunity","model.gitlab_snowflake.map_subscription_opportunity","model.gitlab_snowflake.map_subscription_lineage","model.gitlab_snowflake.map_subscription_lineage"]},"config":{"enabled":true,"alias":"dim_subscription","schema":"common","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_subscription"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_subscription.sql","original_file_path":"models/common/dimensions_shared/dim_subscription.sql","name":"dim_subscription","alias":"dim_subscription","checksum":{"name":"sha256","checksum":"44a135462088f0caceab046c41bf8e7354f2c148c50ecbee98d6658fddfeda60"},"tags":["mnpi_exception"],"refs":[["prep_amendment"],["prep_amendment"],["prep_subscription"],["prep_subscription"],["map_subscription_opportunity"],["map_subscription_opportunity"],["map_subscription_lineage"],["map_subscription_lineage"]],"sources":[],"metrics":[],"description":"Dimension table representing subscription details. The Zuora subscription is created and maintained as part of the broader Quote Creation business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#3-quote-creation).\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Subscriptions).\n\nThe grain of the table is the version of a Zuora subscription.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_subscription.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"],"alias":"dim_subscription"},"created_at":1689033750.8111765,"compiled_sql":"$1c","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_subscription","label":"dim_subscription"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_AMENDMENT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_AMENDMENT_ID":{"type":"TEXT","index":1,"name":"dim_amendment_id","comment":null,"description":"Unique identifier of an Amendment in Zuora Billing.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","arr"],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_amendment_id"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":2,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"AMENDMENT_NAME":{"type":"TEXT","index":3,"name":"AMENDMENT_NAME","comment":null,"display_name":"amendment_name"},"AMENDMENT_TYPE":{"type":"TEXT","index":4,"name":"AMENDMENT_TYPE","comment":null,"display_name":"amendment_type"},"AMENDMENT_DESCRIPTION":{"type":"TEXT","index":5,"name":"AMENDMENT_DESCRIPTION","comment":null,"display_name":"amendment_description"},"AUTO_RENEW":{"type":"BOOLEAN","index":6,"name":"AUTO_RENEW","comment":null,"display_name":"auto_renew"},"AMENDMENT_CODE":{"type":"TEXT","index":7,"name":"AMENDMENT_CODE","comment":null,"display_name":"amendment_code"},"AMENDMENT_STATUS":{"type":"TEXT","index":8,"name":"AMENDMENT_STATUS","comment":null,"display_name":"amendment_status"},"TERM_TYPE":{"type":"TEXT","index":9,"name":"TERM_TYPE","comment":null,"display_name":"term_type"},"CURRENT_TERM":{"type":"NUMBER","index":10,"name":"CURRENT_TERM","comment":null,"display_name":"current_term"},"CURRENT_TERM_PERIOD_TYPE":{"type":"TEXT","index":11,"name":"CURRENT_TERM_PERIOD_TYPE","comment":null,"display_name":"current_term_period_type"},"RENEWAL_TERM":{"type":"NUMBER","index":12,"name":"RENEWAL_TERM","comment":null,"display_name":"renewal_term"},"RENEWAL_TERM_PERIOD_TYPE":{"type":"TEXT","index":13,"name":"RENEWAL_TERM_PERIOD_TYPE","comment":null,"display_name":"renewal_term_period_type"},"RENEWAL_SETTING":{"type":"TEXT","index":14,"name":"RENEWAL_SETTING","comment":null,"display_name":"renewal_setting"},"TERM_START_DATE":{"type":"TIMESTAMP_TZ","index":15,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"EFFECTIVE_DATE":{"type":"TIMESTAMP_TZ","index":16,"name":"EFFECTIVE_DATE","comment":null,"display_name":"effective_date"},"SERVICE_ACTIVATION_DATE":{"type":"TIMESTAMP_TZ","index":17,"name":"SERVICE_ACTIVATION_DATE","comment":null,"display_name":"service_activation_date"},"CUSTOMER_ACCEPTANCE_DATE":{"type":"TIMESTAMP_TZ","index":18,"name":"CUSTOMER_ACCEPTANCE_DATE","comment":null,"display_name":"customer_acceptance_date"},"CONTRACT_EFFECTIVE_DATE":{"type":"TIMESTAMP_TZ","index":19,"name":"CONTRACT_EFFECTIVE_DATE","comment":null,"display_name":"contract_effective_date"},"CREATED_BY":{"type":"TEXT","index":20,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":21,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":22,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":23,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":24,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":25,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 08:59UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":14109184,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_amendment","raw_sql":"WITH prep_amendment AS (\n\n    SELECT *\n    FROM {{ ref('prep_amendment')}}\n\n), base AS (\n\n    SELECT\n      --Surrogate Key\n      dim_amendment_id,\n\n      --Common Dimension keys\n      dim_subscription_id,\n\n      --Information\n      amendment_name,\n      amendment_type,\n      amendment_description,\n      auto_renew,\n      amendment_code,\n      amendment_status,\n\n      --Term information\n      term_type,\n      current_term,\n      current_term_period_type,\n      renewal_term,\n      renewal_term_period_type,\n      renewal_setting,\n\n      --Dates\n      term_start_date,\n      effective_date,\n      service_activation_date,\n      customer_acceptance_date,\n      contract_effective_date\n    FROM prep_amendment\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"base\",\n    created_by=\"@iweeks\",\n    updated_by=\"@iweeks\",\n    created_date=\"2021-05-10\",\n    updated_date=\"2021-05-10\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_amendment"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_amendment"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_amendment.sql","original_file_path":"models/common/dimensions_shared/dim_amendment.sql","name":"dim_amendment","alias":"dim_amendment","checksum":{"name":"sha256","checksum":"ecb7de4876eeb3f0d473a9e65bfcedd1d38cdc03086f65a87ec04da8980cfeaa"},"tags":[],"refs":[["prep_amendment"],["prep_amendment"]],"sources":[],"metrics":[],"description":"Dimension for Zuora Amendments that increment subscription versions.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_amendment.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033750.5502858,"compiled_sql":"$1d","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_amendment","label":"dim_amendment"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON","name":"FCT_CRM_OPPORTUNITY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":1,"name":"dim_crm_opportunity_id","comment":null,"description":"A dbt generated surrogate key combining the sfdc_record_id and the sales_accepted_date.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_opportunity_id"},"MERGED_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":2,"name":"MERGED_CRM_OPPORTUNITY_ID","comment":null,"display_name":"merged_crm_opportunity_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"dim_crm_account_id","comment":null,"description":"join key for dim_crm_account from the accountid field in Salesforce","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"DIM_CRM_PERSON_ID":{"type":"TEXT","index":5,"name":"dim_crm_person_id","comment":null,"description":"A surrogate key for use when joining to `dim_crm_person`. Created from the contact_id where there is a contact and a lead_id where there isn't.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_person_id"},"SFDC_CONTACT_ID":{"type":"TEXT","index":6,"name":"sfdc_contact_id","comment":null,"description":"the contact id from the fist contact by opportunity contact role created date for the given opportunity record","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sfdc_contact_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":7,"name":"RECORD_TYPE_ID","comment":null,"display_name":"record_type_id"},"CREATED_DATE":{"type":"DATE","index":8,"name":"created_date","comment":null,"description":"timestamp for the opportunity record creation in Salesforce","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_date"},"CREATED_DATE_ID":{"type":"NUMBER","index":9,"name":"created_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with created_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_date_id"},"SALES_ACCEPTED_DATE":{"type":"DATE","index":10,"name":"sales_accepted_date","comment":null,"description":"The sales_accepted_date from the sfdc_opportunity. Note that there can be opportunities with sales accepted dates that aren't sales accepted opportunities. This is indicated with the is_sao and is_sdr_sao booleans","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_accepted_date"},"SALES_ACCEPTED_DATE_ID":{"type":"NUMBER","index":11,"name":"sales_accepted_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with sales_accepted_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_accepted_date_id"},"CLOSE_DATE":{"type":"DATE","index":12,"name":"close_date","comment":null,"description":"a date entered by the sales team that is the expected close date for open opportunities and the actual close date for closed opportunities.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"close_date"},"CLOSE_DATE_ID":{"type":"NUMBER","index":13,"name":"close_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with close_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"close_date_id"},"ARR_CREATED_DATE_ID":{"type":"NUMBER","index":14,"name":"ARR_CREATED_DATE_ID","comment":null,"display_name":"arr_created_date_id"},"ARR_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":15,"name":"arr_created_date","comment":null,"description":"A Salesforce [formula field](https://gitlab.my.salesforce.com/00N4M00000ISAEK) that tracks the date that the ARR was added to an opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr_created_date"},"STAGE_0_PENDING_ACCEPTANCE_DATE":{"type":"TIMESTAMP_TZ","index":16,"name":"stage_0_pending_acceptance_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/04Y4M000000g0GE) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_0_pending_acceptance_date"},"STAGE_0_PENDING_ACCEPTANCE_DATE_ID":{"type":"NUMBER","index":17,"name":"stage_0_pending_acceptance_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_0_pending_acceptance_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_0_pending_acceptance_date_id"},"STAGE_1_DISCOVERY_DATE":{"type":"TIMESTAMP_TZ","index":18,"name":"stage_1_discovery_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSb5) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_1_discovery_date"},"STAGE_1_DISCOVERY_DATE_ID":{"type":"NUMBER","index":19,"name":"stage_1_discovery_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with D the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_1_discovery_date_id"},"STAGE_2_SCOPING_DATE":{"type":"TIMESTAMP_TZ","index":20,"name":"stage_2_scoping_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSb6) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_2_scoping_date"},"STAGE_2_SCOPING_DATE_ID":{"type":"NUMBER","index":21,"name":"stage_2_scoping_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_1_discovery_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_2_scoping_date_id"},"STAGE_3_TECHNICAL_EVALUATION_DATE":{"type":"TIMESTAMP_TZ","index":22,"name":"stage_3_technical_evaluation_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSb7) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_3_technical_evaluation_date"},"STAGE_3_TECHNICAL_EVALUATION_DATE_ID":{"type":"NUMBER","index":23,"name":"stage_3_technical_evaluation_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_3_technical_evaluation_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_3_technical_evaluation_date_id"},"STAGE_4_PROPOSAL_DATE":{"type":"TIMESTAMP_TZ","index":24,"name":"stage_4_proposal_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSb8) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_4_proposal_date"},"STAGE_4_PROPOSAL_DATE_ID":{"type":"NUMBER","index":25,"name":"stage_4_proposal_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_4_proposal_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_4_proposal_date_id"},"STAGE_5_NEGOTIATING_DATE":{"type":"TIMESTAMP_TZ","index":26,"name":"stage_5_negotiating_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSb9) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_5_negotiating_date"},"STAGE_5_NEGOTIATING_DATE_ID":{"type":"NUMBER","index":27,"name":"stage_5_negotiating_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_5_negotiating_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_5_negotiating_date_id"},"STAGE_6_AWAITING_SIGNATURE_DATE":{"type":"TIMESTAMP_TZ","index":28,"name":"STAGE_6_AWAITING_SIGNATURE_DATE","comment":null,"display_name":"stage_6_awaiting_signature_date"},"STAGE_6_AWAITING_SIGNATURE_DATE_ID":{"type":"NUMBER","index":29,"name":"STAGE_6_AWAITING_SIGNATURE_DATE_ID","comment":null,"display_name":"stage_6_awaiting_signature_date_id"},"STAGE_6_CLOSED_WON_DATE":{"type":"TIMESTAMP_TZ","index":30,"name":"stage_6_closed_won_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSbE) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_6_closed_won_date"},"STAGE_6_CLOSED_WON_DATE_ID":{"type":"NUMBER","index":31,"name":"stage_6_closed_won_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_6_closed_won_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_6_closed_won_date_id"},"STAGE_6_CLOSED_LOST_DATE":{"type":"TIMESTAMP_TZ","index":32,"name":"stage_6_closed_lost_date","comment":null,"description":"a Salesforce [workflow generated](https://gitlab.my.salesforce.com/01Q4M000000kSbD) date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_6_closed_lost_date"},"STAGE_6_CLOSED_LOST_DATE_ID":{"type":"NUMBER","index":33,"name":"stage_6_closed_lost_date_id","comment":null,"description":"a foreign key generated from `get_date_id` macro with stage_6_closed_lost_date the for use with dim_date","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"stage_6_closed_lost_date_id"},"DAYS_IN_0_PENDING_ACCEPTANCE":{"type":"FLOAT","index":34,"name":"days_in_0_pending_acceptance","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HlNEI)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_0_pending_acceptance"},"DAYS_IN_1_DISCOVERY":{"type":"FLOAT","index":35,"name":"days_in_1_discovery","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HlNES)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_1_discovery"},"DAYS_IN_2_SCOPING":{"type":"FLOAT","index":36,"name":"days_in_2_scoping","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HlNEX)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_2_scoping"},"DAYS_IN_3_TECHNICAL_EVALUATION":{"type":"FLOAT","index":37,"name":"days_in_3_technical_evaluation","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HlNEc)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_3_technical_evaluation"},"DAYS_IN_4_PROPOSAL":{"type":"FLOAT","index":38,"name":"days_in_4_proposal","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HlNEh)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_4_proposal"},"DAYS_IN_5_NEGOTIATING":{"type":"FLOAT","index":39,"name":"days_in_5_negotiating","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HlNEm)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_5_negotiating"},"SUBSCRIPTION_START_DATE_ID":{"type":"NUMBER","index":40,"name":"SUBSCRIPTION_START_DATE_ID","comment":null,"display_name":"subscription_start_date_id"},"SUBSCRIPTION_END_DATE_ID":{"type":"NUMBER","index":41,"name":"SUBSCRIPTION_END_DATE_ID","comment":null,"display_name":"subscription_end_date_id"},"SALES_QUALIFIED_DATE_ID":{"type":"NUMBER","index":42,"name":"SALES_QUALIFIED_DATE_ID","comment":null,"display_name":"sales_qualified_date_id"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":43,"name":"LAST_ACTIVITY_DATE","comment":null,"display_name":"last_activity_date"},"LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":44,"name":"LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"last_activity_date_id"},"SALES_LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":45,"name":"SALES_LAST_ACTIVITY_DATE","comment":null,"display_name":"sales_last_activity_date"},"SALES_LAST_ACTIVITY_DATE_ID":{"type":"NUMBER","index":46,"name":"SALES_LAST_ACTIVITY_DATE_ID","comment":null,"display_name":"sales_last_activity_date_id"},"TECHNICAL_EVALUATION_DATE":{"type":"TIMESTAMP_TZ","index":47,"name":"TECHNICAL_EVALUATION_DATE","comment":null,"display_name":"technical_evaluation_date"},"TECHNICAL_EVALUATION_DATE_ID":{"type":"NUMBER","index":48,"name":"TECHNICAL_EVALUATION_DATE_ID","comment":null,"display_name":"technical_evaluation_date_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":49,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"DIM_CRM_ACCOUNT_USER_ID":{"type":"TEXT","index":50,"name":"DIM_CRM_ACCOUNT_USER_ID","comment":null,"display_name":"dim_crm_account_user_id"},"DIM_ORDER_TYPE_ID":{"type":"TEXT","index":51,"name":"dim_order_type_id","comment":null,"description":"An attribute of an opportunity to designate what type or order it is. This is stamped on the close date of the opportunity. In its latest version, Order Type has logic incorporated to filter out additional CI Minutes and credits as First Order, per the [Salesforce Documentation](https://gitlab.my.salesforce.com/00N4M00000Ib7ly?setupid=OpportunityFields).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_order_type_id"},"DIM_ORDER_TYPE_LIVE_ID":{"type":"TEXT","index":52,"name":"dim_order_type_live_id","comment":null,"description":"The current Order Type of an opportunity, potentially after it has been stamped on its close date. Per the [documentation in Salesforce](https://gitlab.my.salesforce.com/00N4M00000Ib8Ok?setupid=OpportunityFields), This field is used to track movement of values post deal close and is for analysis purposes only.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_order_type_live_id"},"DIM_DR_PARTNER_ENGAGEMENT_ID":{"type":"TEXT","index":53,"name":"dim_dr_partner_engagement_id","comment":null,"description":"join key for dim_dr_partner_engagement","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"relationships","fk_field":"dim_dr_partner_engagement_id","fk_model":{"unique_id":"model.gitlab_snowflake.dim_dr_partner_engagement","name":"dim_dr_partner_engagement"},"short":"F","label":"Foreign Key"}],"display_name":"dim_dr_partner_engagement_id"},"DIM_ALLIANCE_TYPE_ID":{"type":"TEXT","index":54,"name":"dim_alliance_type_id","comment":null,"description":"join key for dim_alliance_type_scd.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"relationships","fk_field":"dim_alliance_type_id","fk_model":{"unique_id":"model.gitlab_snowflake.dim_alliance_type_scd","name":"dim_alliance_type_scd"},"short":"F","label":"Foreign Key"}],"display_name":"dim_alliance_type_id"},"DIM_ALLIANCE_TYPE_CURRENT_ID":{"type":"TEXT","index":55,"name":"dim_alliance_type_current_id","comment":null,"description":"join key for dim_alliance_type_scd. It contains current state id for the alliance type dimension.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"relationships","fk_field":"dim_alliance_type_id","fk_model":{"unique_id":"model.gitlab_snowflake.dim_alliance_type_scd","name":"dim_alliance_type_scd"},"short":"F","label":"Foreign Key"}],"display_name":"dim_alliance_type_current_id"},"DIM_CHANNEL_TYPE_ID":{"type":"TEXT","index":56,"name":"dim_channel_type_id","comment":null,"description":"join key for dim_channel_type","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"relationships","fk_field":"dim_channel_type_id","fk_model":{"unique_id":"model.gitlab_snowflake.dim_channel_type","name":"dim_channel_type"},"short":"F","label":"Foreign Key"}],"display_name":"dim_channel_type_id"},"DIM_SALES_QUALIFIED_SOURCE_ID":{"type":"TEXT","index":57,"name":"DIM_SALES_QUALIFIED_SOURCE_ID","comment":null,"display_name":"dim_sales_qualified_source_id"},"DIM_DEAL_PATH_ID":{"type":"TEXT","index":58,"name":"DIM_DEAL_PATH_ID","comment":null,"display_name":"dim_deal_path_id"},"DIM_PARENT_SALES_SEGMENT_ID":{"type":"TEXT","index":59,"name":"DIM_PARENT_SALES_SEGMENT_ID","comment":null,"display_name":"dim_parent_sales_segment_id"},"DIM_PARENT_SALES_TERRITORY_ID":{"type":"TEXT","index":60,"name":"DIM_PARENT_SALES_TERRITORY_ID","comment":null,"display_name":"dim_parent_sales_territory_id"},"DIM_PARENT_INDUSTRY_ID":{"type":"TEXT","index":61,"name":"DIM_PARENT_INDUSTRY_ID","comment":null,"display_name":"dim_parent_industry_id"},"DIM_ACCOUNT_SALES_SEGMENT_ID":{"type":"TEXT","index":62,"name":"DIM_ACCOUNT_SALES_SEGMENT_ID","comment":null,"display_name":"dim_account_sales_segment_id"},"DIM_ACCOUNT_SALES_TERRITORY_ID":{"type":"TEXT","index":63,"name":"DIM_ACCOUNT_SALES_TERRITORY_ID","comment":null,"display_name":"dim_account_sales_territory_id"},"DIM_ACCOUNT_INDUSTRY_ID":{"type":"TEXT","index":64,"name":"DIM_ACCOUNT_INDUSTRY_ID","comment":null,"display_name":"dim_account_industry_id"},"DIM_ACCOUNT_LOCATION_COUNTRY_ID":{"type":"TEXT","index":65,"name":"DIM_ACCOUNT_LOCATION_COUNTRY_ID","comment":null,"display_name":"dim_account_location_country_id"},"DIM_ACCOUNT_LOCATION_REGION_ID":{"type":"TEXT","index":66,"name":"DIM_ACCOUNT_LOCATION_REGION_ID","comment":null,"display_name":"dim_account_location_region_id"},"DIM_CRM_OPP_OWNER_USER_HIERARCHY_ID":{"type":"TEXT","index":67,"name":"DIM_CRM_OPP_OWNER_USER_HIERARCHY_ID","comment":null,"display_name":"dim_crm_opp_owner_user_hierarchy_id"},"DIM_CRM_OPP_OWNER_STAMPED_HIERARCHY_SK":{"type":"TEXT","index":68,"name":"DIM_CRM_OPP_OWNER_STAMPED_HIERARCHY_SK","comment":null,"display_name":"dim_crm_opp_owner_stamped_hierarchy_sk"},"DIM_CRM_OPP_OWNER_BUSINESS_UNIT_STAMPED_ID":{"type":"TEXT","index":69,"name":"DIM_CRM_OPP_OWNER_BUSINESS_UNIT_STAMPED_ID","comment":null,"display_name":"dim_crm_opp_owner_business_unit_stamped_id"},"DIM_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_ID":{"type":"TEXT","index":70,"name":"DIM_CRM_OPP_OWNER_SALES_SEGMENT_STAMPED_ID","comment":null,"display_name":"dim_crm_opp_owner_sales_segment_stamped_id"},"DIM_CRM_OPP_OWNER_GEO_STAMPED_ID":{"type":"TEXT","index":71,"name":"DIM_CRM_OPP_OWNER_GEO_STAMPED_ID","comment":null,"display_name":"dim_crm_opp_owner_geo_stamped_id"},"DIM_CRM_OPP_OWNER_REGION_STAMPED_ID":{"type":"TEXT","index":72,"name":"DIM_CRM_OPP_OWNER_REGION_STAMPED_ID","comment":null,"display_name":"dim_crm_opp_owner_region_stamped_id"},"DIM_CRM_OPP_OWNER_AREA_STAMPED_ID":{"type":"TEXT","index":73,"name":"DIM_CRM_OPP_OWNER_AREA_STAMPED_ID","comment":null,"display_name":"dim_crm_opp_owner_area_stamped_id"},"DIM_CRM_USER_HIERARCHY_LIVE_SK":{"type":"TEXT","index":74,"name":"DIM_CRM_USER_HIERARCHY_LIVE_SK","comment":null,"display_name":"dim_crm_user_hierarchy_live_sk"},"DIM_CRM_USER_BUSINESS_UNIT_ID":{"type":"TEXT","index":75,"name":"DIM_CRM_USER_BUSINESS_UNIT_ID","comment":null,"display_name":"dim_crm_user_business_unit_id"},"DIM_CRM_USER_SALES_SEGMENT_ID":{"type":"TEXT","index":76,"name":"DIM_CRM_USER_SALES_SEGMENT_ID","comment":null,"display_name":"dim_crm_user_sales_segment_id"},"DIM_CRM_USER_GEO_ID":{"type":"TEXT","index":77,"name":"DIM_CRM_USER_GEO_ID","comment":null,"display_name":"dim_crm_user_geo_id"},"DIM_CRM_USER_REGION_ID":{"type":"TEXT","index":78,"name":"DIM_CRM_USER_REGION_ID","comment":null,"display_name":"dim_crm_user_region_id"},"DIM_CRM_USER_AREA_ID":{"type":"TEXT","index":79,"name":"DIM_CRM_USER_AREA_ID","comment":null,"display_name":"dim_crm_user_area_id"},"DIM_CRM_USER_HIERARCHY_ACCOUNT_USER_SK":{"type":"TEXT","index":80,"name":"DIM_CRM_USER_HIERARCHY_ACCOUNT_USER_SK","comment":null,"display_name":"dim_crm_user_hierarchy_account_user_sk"},"DIM_CRM_ACCOUNT_USER_BUSINESS_UNIT_ID":{"type":"TEXT","index":81,"name":"DIM_CRM_ACCOUNT_USER_BUSINESS_UNIT_ID","comment":null,"display_name":"dim_crm_account_user_business_unit_id"},"DIM_CRM_ACCOUNT_USER_SALES_SEGMENT_ID":{"type":"TEXT","index":82,"name":"DIM_CRM_ACCOUNT_USER_SALES_SEGMENT_ID","comment":null,"display_name":"dim_crm_account_user_sales_segment_id"},"DIM_CRM_ACCOUNT_USER_GEO_ID":{"type":"TEXT","index":83,"name":"DIM_CRM_ACCOUNT_USER_GEO_ID","comment":null,"display_name":"dim_crm_account_user_geo_id"},"DIM_CRM_ACCOUNT_USER_REGION_ID":{"type":"TEXT","index":84,"name":"DIM_CRM_ACCOUNT_USER_REGION_ID","comment":null,"display_name":"dim_crm_account_user_region_id"},"DIM_CRM_ACCOUNT_USER_AREA_ID":{"type":"TEXT","index":85,"name":"DIM_CRM_ACCOUNT_USER_AREA_ID","comment":null,"display_name":"dim_crm_account_user_area_id"},"SSP_ID":{"type":"TEXT","index":86,"name":"SSP_ID","comment":null,"display_name":"ssp_id"},"GA_CLIENT_ID":{"type":"TEXT","index":87,"name":"GA_CLIENT_ID","comment":null,"display_name":"ga_client_id"},"IS_CLOSED":{"type":"BOOLEAN","index":88,"name":"is_closed","comment":null,"description":"a Salesforce boolean field which is true when the Opportunity stage is a closed stage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_closed"},"IS_WON":{"type":"BOOLEAN","index":89,"name":"is_won","comment":null,"description":"a Salesforce boolean field which is true when the Opportunity stage is a won stage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_won"},"IS_REFUND":{"type":"FLOAT","index":90,"name":"is_refund","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000IOu5u)  with the help text \"Counts the number of refund opps.\"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_refund"},"IS_DOWNGRADE":{"type":"FLOAT","index":91,"name":"is_downgrade","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000IOu5y) with the help text \"Counts of the number of downgrade opps.\"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_downgrade"},"IS_SWING_DEAL":{"type":"BOOLEAN","index":92,"name":"is_swing_deal","comment":null,"description":"a [checkbox used in salesforce](https://gitlab.my.salesforce.com/00N6100000IJEOZ) with the help text \"A swing deal is an opportunity with a Close Date in a future period that has the potential to be pulled into the current period.\"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_swing_deal"},"IS_EDU_OSS":{"type":"FLOAT","index":93,"name":"is_edu_oss","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000IOu68). 1 if [Product_Category__c](https://gitlab.my.salesforce.com/00N6100000IJBtv) contains `EDU/OSS` else 0.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_edu_oss"},"IS_WEB_PORTAL_PURCHASE":{"type":"BOOLEAN","index":94,"name":"is_web_portal_purchase","comment":null,"description":"a [salesforce boolean field](https://gitlab.my.salesforce.com/00N6100000HJmTK)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_web_portal_purchase"},"FPA_MASTER_BOOKINGS_FLAG":{"type":"BOOLEAN","index":95,"name":"FPA_MASTER_BOOKINGS_FLAG","comment":null,"display_name":"fpa_master_bookings_flag"},"IS_SAO":{"type":"BOOLEAN","index":96,"name":"is_sao","comment":null,"description":"a [salesforce boolean field](https://gitlab.my.salesforce.com/00N4M00000Ib8xa) field created in the warehouse to flag Sales Accepted Opportunities. This field should be deprecated once sales accepted is in a more stable and consistent state in salesforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sao"},"IS_SDR_SAO":{"type":"BOOLEAN","index":97,"name":"is_sdr_sao","comment":null,"description":"a boolean field created in the warehouse to flag Sales Accepted Opportunities from [Sales Development Reps](https://about.gitlab.com/handbook/marketing/revenue-marketing/sdr/). This field should be deprecated once sales accepted is in a more stable and consistent state in salesforce.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sdr_sao"},"IS_NET_ARR_CLOSED_DEAL":{"type":"BOOLEAN","index":98,"name":"is_net_arr_closed_deal","comment":null,"description":"a boolean field created in the warehouse to flag Closed Deals and will help determine the Net ARR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_net_arr_closed_deal"},"IS_NEW_LOGO_FIRST_ORDER":{"type":"BOOLEAN","index":99,"name":"is_new_logo_first_order","comment":null,"description":"a boolean field created in the warehouse to flag New Logos.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_new_logo_first_order"},"IS_NET_ARR_PIPELINE_CREATED":{"type":"BOOLEAN","index":100,"name":"is_net_arr_pipeline_created","comment":null,"description":"a boolean field created in the warehouse to flag Net ARR Pipeline Created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_net_arr_pipeline_created"},"IS_WIN_RATE_CALC":{"type":"BOOLEAN","index":101,"name":"is_win_rate_calc","comment":null,"description":"a boolean field created in the warehouse to flag Win Rate. This field determines opportunities that will be included in calculating Win Rate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_win_rate_calc"},"IS_CLOSED_WON":{"type":"BOOLEAN","index":102,"name":"IS_CLOSED_WON","comment":null,"display_name":"is_closed_won"},"IS_STAGE_1_PLUS":{"type":"NUMBER","index":103,"name":"is_stage_1_plus","comment":null,"description":"Flag indicating the opportunity is in in Stage 1 or greater.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_stage_1_plus"},"IS_STAGE_3_PLUS":{"type":"NUMBER","index":104,"name":"is_stage_3_plus","comment":null,"description":"Flag indicating the opportunity is in in Stage 3 or greater.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_stage_3_plus"},"IS_STAGE_4_PLUS":{"type":"NUMBER","index":105,"name":"is_stage_4_plus","comment":null,"description":"Flag indicating the opportunity is in in Stage 4 or greater.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_stage_4_plus"},"IS_LOST":{"type":"NUMBER","index":106,"name":"is_lost","comment":null,"description":"Flag indicating an opportunity is in a closed lost stage.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_lost"},"IS_OPEN":{"type":"NUMBER","index":107,"name":"is_open","comment":null,"description":"Flag indicating an opportunity is in any open stage (not closed lost, closed won, unqualified, or duplicate).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_open"},"IS_ACTIVE":{"type":"BOOLEAN","index":108,"name":"is_active","comment":null,"description":"Flag indicating the opportunity is in an active stage.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_active"},"IS_CREDIT":{"type":"NUMBER","index":109,"name":"is_credit","comment":null,"description":"Flag indicating the opportunity is categorized as a credit.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_credit"},"IS_RENEWAL":{"type":"NUMBER","index":110,"name":"is_renewal","comment":null,"description":"Flag indicating the opportunity is categorized as a renewal by its sales type.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_renewal"},"IS_DELETED":{"type":"BOOLEAN","index":111,"name":"IS_DELETED","comment":null,"display_name":"is_deleted"},"IS_EXCLUDED_FROM_PIPELINE_CREATED":{"type":"NUMBER","index":112,"name":"is_excluded_from_pipeline_created","comment":null,"description":"Records which are not included in pipeline generated analysis due to data quality errors.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_excluded_from_pipeline_created"},"IS_DUPLICATE":{"type":"NUMBER","index":113,"name":"is_duplicate","comment":null,"description":"Flag indicating the opportunity is a duplicate of another opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_duplicate"},"IS_CONTRACT_RESET":{"type":"NUMBER","index":114,"name":"is_contract_reset","comment":null,"description":"Flag indicating the opportunity is categorized as a contract reset.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_contract_reset"},"IS_COMP_NEW_LOGO_OVERRIDE":{"type":"NUMBER","index":115,"name":"IS_COMP_NEW_LOGO_OVERRIDE","comment":null,"display_name":"is_comp_new_logo_override"},"IS_ELIGIBLE_OPEN_PIPELINE":{"type":"NUMBER","index":116,"name":"is_eligible_open_pipeline","comment":null,"description":"Flag indicating the opportunity is considered open pipeline based on its order type, stage, forecast category, and whether or not it is an EDU/OSS deal.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_eligible_open_pipeline"},"IS_ELIGIBLE_ASP_ANALYSIS":{"type":"NUMBER","index":117,"name":"is_eligible_asp_analysis","comment":null,"description":"Flag indicating an opporutnity is eligible for ASP analysis.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_eligible_asp_analysis"},"IS_ELIGIBLE_AGE_ANALYSIS":{"type":"NUMBER","index":118,"name":"is_eligible_age_analysis","comment":null,"description":"Flag indicating an opportunity is eligible for age analysis.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_eligible_age_analysis"},"IS_ELIGIBLE_CHURN_CONTRACTION":{"type":"NUMBER","index":119,"name":"is_eligible_churn_contraction","comment":null,"description":"Flag indicating the opportunity has either churned or contracted, is not deleted, and is not an EDU/OSS deal.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_eligible_churn_contraction"},"IS_BOOKED_NET_ARR":{"type":"NUMBER","index":120,"name":"is_booked_net_arr","comment":null,"description":"Flag indicating the opportunity has booked net ARR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_booked_net_arr"},"IS_HYBRID_OPP_OWNER_OPP":{"type":"NUMBER","index":121,"name":"IS_HYBRID_OPP_OWNER_OPP","comment":null,"display_name":"is_hybrid_opp_owner_opp"},"IS_HYBRID_ACCOUNT_OWNER_OPP":{"type":"NUMBER","index":122,"name":"IS_HYBRID_ACCOUNT_OWNER_OPP","comment":null,"display_name":"is_hybrid_account_owner_opp"},"PRIMARY_SOLUTION_ARCHITECT":{"type":"TEXT","index":123,"name":"PRIMARY_SOLUTION_ARCHITECT","comment":null,"display_name":"primary_solution_architect"},"PRODUCT_DETAILS":{"type":"TEXT","index":124,"name":"PRODUCT_DETAILS","comment":null,"display_name":"product_details"},"PRODUCT_CATEGORY":{"type":"TEXT","index":125,"name":"PRODUCT_CATEGORY","comment":null,"display_name":"product_category"},"PRODUCTS_PURCHASED":{"type":"TEXT","index":126,"name":"PRODUCTS_PURCHASED","comment":null,"display_name":"products_purchased"},"GROWTH_TYPE":{"type":"TEXT","index":127,"name":"GROWTH_TYPE","comment":null,"display_name":"growth_type"},"OPPORTUNITY_DEAL_SIZE":{"type":"TEXT","index":128,"name":"OPPORTUNITY_DEAL_SIZE","comment":null,"display_name":"opportunity_deal_size"},"CLOSED_BUCKETS":{"type":"TEXT","index":129,"name":"closed_buckets","comment":null,"description":"a case generated column that uses the days_in_sao column. See SQL for this model.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"closed_buckets"},"LEAD_SOURCE":{"type":"TEXT","index":130,"name":"LEAD_SOURCE","comment":null,"display_name":"lead_source"},"DR_PARTNER_DEAL_TYPE":{"type":"TEXT","index":131,"name":"DR_PARTNER_DEAL_TYPE","comment":null,"display_name":"dr_partner_deal_type"},"DR_PARTNER_ENGAGEMENT":{"type":"TEXT","index":132,"name":"DR_PARTNER_ENGAGEMENT","comment":null,"display_name":"dr_partner_engagement"},"PARTNER_ACCOUNT":{"type":"TEXT","index":133,"name":"PARTNER_ACCOUNT","comment":null,"display_name":"partner_account"},"DR_STATUS":{"type":"TEXT","index":134,"name":"DR_STATUS","comment":null,"display_name":"dr_status"},"DR_DEAL_ID":{"type":"TEXT","index":135,"name":"DR_DEAL_ID","comment":null,"display_name":"dr_deal_id"},"DR_PRIMARY_REGISTRATION":{"type":"TEXT","index":136,"name":"DR_PRIMARY_REGISTRATION","comment":null,"display_name":"dr_primary_registration"},"DISTRIBUTOR":{"type":"TEXT","index":137,"name":"DISTRIBUTOR","comment":null,"display_name":"distributor"},"INFLUENCE_PARTNER":{"type":"TEXT","index":138,"name":"INFLUENCE_PARTNER","comment":null,"display_name":"influence_partner"},"FULFILLMENT_PARTNER":{"type":"TEXT","index":139,"name":"FULFILLMENT_PARTNER","comment":null,"display_name":"fulfillment_partner"},"PLATFORM_PARTNER":{"type":"TEXT","index":140,"name":"PLATFORM_PARTNER","comment":null,"display_name":"platform_partner"},"PARTNER_TRACK":{"type":"TEXT","index":141,"name":"PARTNER_TRACK","comment":null,"display_name":"partner_track"},"RESALE_PARTNER_TRACK":{"type":"TEXT","index":142,"name":"RESALE_PARTNER_TRACK","comment":null,"display_name":"resale_partner_track"},"IS_PUBLIC_SECTOR_OPP":{"type":"BOOLEAN","index":143,"name":"IS_PUBLIC_SECTOR_OPP","comment":null,"display_name":"is_public_sector_opp"},"IS_REGISTRATION_FROM_PORTAL":{"type":"BOOLEAN","index":144,"name":"IS_REGISTRATION_FROM_PORTAL","comment":null,"display_name":"is_registration_from_portal"},"CALCULATED_DISCOUNT":{"type":"FLOAT","index":145,"name":"CALCULATED_DISCOUNT","comment":null,"display_name":"calculated_discount"},"PARTNER_DISCOUNT":{"type":"FLOAT","index":146,"name":"PARTNER_DISCOUNT","comment":null,"display_name":"partner_discount"},"PARTNER_DISCOUNT_CALC":{"type":"FLOAT","index":147,"name":"PARTNER_DISCOUNT_CALC","comment":null,"display_name":"partner_discount_calc"},"COMP_CHANNEL_NEUTRAL":{"type":"FLOAT","index":148,"name":"COMP_CHANNEL_NEUTRAL","comment":null,"display_name":"comp_channel_neutral"},"IACV":{"type":"FLOAT","index":149,"name":"iacv","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N6100000HJpyB) with the help text \"For New Business or Add On, takes all first year recurring revenue + true ups. If Renewal, the recurring revenue + true ups minus the Renewal ACV. If the Renewal ACV is null, then the Incremental ACV is null\"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iacv"},"NET_IACV":{"type":"FLOAT","index":150,"name":"NET_IACV","comment":null,"display_name":"net_iacv"},"SEGMENT_ORDER_TYPE_IACV_TO_NET_ARR_RATIO":{"type":"FLOAT","index":151,"name":"segment_order_type_iacv_to_net_arr_ratio","comment":null,"description":"The ratio of incremental annual contract value to net ARR assigned to this opportunity based on its segment and order type. This field is a helper used to map old IACV values to new net ARR values, which were updated for all opportunities closed prior to 2021-02-01.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"segment_order_type_iacv_to_net_arr_ratio"},"CALCULATED_FROM_RATIO_NET_ARR":{"type":"FLOAT","index":152,"name":"calculated_from_ratio_net_arr","comment":null,"description":"Net ARR assigned to an opportunity based on its stage, segment, and net incremental annual contract value.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"calculated_from_ratio_net_arr"},"NET_ARR":{"type":"FLOAT","index":153,"name":"net_arr","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N4M00000Ib5n8) with the net change to ARR of an opportunity","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"net_arr"},"RAW_NET_ARR":{"type":"FLOAT","index":154,"name":"RAW_NET_ARR","comment":null,"display_name":"raw_net_arr"},"CREATED_AND_WON_SAME_QUARTER_NET_ARR":{"type":"FLOAT","index":155,"name":"created_and_won_same_quarter_net_arr","comment":null,"description":"Net ARR from opportunities which were created and won in the same fiscal quarter.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_and_won_same_quarter_net_arr"},"NEW_LOGO_COUNT":{"type":"FLOAT","index":156,"name":"NEW_LOGO_COUNT","comment":null,"display_name":"new_logo_count"},"AMOUNT":{"type":"FLOAT","index":157,"name":"amount","comment":null,"description":"from [salesforce ui](https://gitlab.my.salesforce.com/_ui/common/config/field/StandardFieldAttributes/d?id=Amount&type=Opportunity&retURL=%2Fp%2Fsetup%2Flayout%2FLayoutFieldList%3Ftype%3DOpportunity%26setupid%3DOpportunityFields&_CONFIRMATIONTOKEN=VmpFPSxNakF5TVMwd09TMHdOVlF5TVRveE1UbzFNQzQzTmpWYSx5UXdBZFY3d0NtN21rekRFcUttcVVtLFl6UTNNekF5&setupid=OpportunityFields) \"This is the same as Total Contract Value. It takes the value of the entire agreement\"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"amount"},"RECURRING_AMOUNT":{"type":"FLOAT","index":158,"name":"recurring_amount","comment":null,"description":"a [salesforce currency field](https://gitlab.my.salesforce.com/00N4M00000IbIDn) with all Recurring dollars (Gitlab Seats, Storage).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"recurring_amount"},"TRUE_UP_AMOUNT":{"type":"FLOAT","index":159,"name":"true_up_amount","comment":null,"description":"a [salesforce currency field](https://gitlab.my.salesforce.com/00N4M00000IbCVy) with One-time True Up dollars for renewals.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"true_up_amount"},"PROSERV_AMOUNT":{"type":"FLOAT","index":160,"name":"proserv_amount","comment":null,"description":"a [salesforce currency field](https://gitlab.my.salesforce.com/00N4M00000IbIDi) with all professional services dollars in the opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"proserv_amount"},"OTHER_NON_RECURRING_AMOUNT":{"type":"FLOAT","index":161,"name":"other_non_recurring_amount","comment":null,"description":"a [salesforce currency field](https://gitlab.my.salesforce.com/00N4M00000IbIDs) with all other one-time fee products (Additional CI Minutes).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"other_non_recurring_amount"},"ARR_BASIS":{"type":"FLOAT","index":162,"name":"arr_basis","comment":null,"description":"a [salesforce formula field](https://gitlab.my.salesforce.com/00N4M00000IbIDx) for renewals only current subscription ARR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr_basis"},"ARR":{"type":"FLOAT","index":163,"name":"arr","comment":null,"description":"a WIP Salesforce [formula field](https://gitlab.my.salesforce.com/00N4M00000IbIE2) that returns 0","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr"},"COUNT_CRM_ATTRIBUTION_TOUCHPOINTS":{"type":"NUMBER","index":164,"name":"COUNT_CRM_ATTRIBUTION_TOUCHPOINTS","comment":null,"display_name":"count_crm_attribution_touchpoints"},"WEIGHTED_LINEAR_IACV":{"type":"FLOAT","index":165,"name":"WEIGHTED_LINEAR_IACV","comment":null,"display_name":"weighted_linear_iacv"},"COUNT_CAMPAIGNS":{"type":"NUMBER","index":166,"name":"COUNT_CAMPAIGNS","comment":null,"display_name":"count_campaigns"},"PROBABILITY":{"type":"FLOAT","index":167,"name":"PROBABILITY","comment":null,"display_name":"probability"},"DAYS_IN_SAO":{"type":"FLOAT","index":168,"name":"days_in_sao","comment":null,"description":"a Salesforce [formula field](https://gitlab.my.salesforce.com/00N4M00000Ib8xV)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_sao"},"OPEN_1PLUS_DEAL_COUNT":{"type":"NUMBER","index":169,"name":"open_1plus_deal_count","comment":null,"description":"Total pipeline deal count in stage 1 or later.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"open_1plus_deal_count"},"OPEN_3PLUS_DEAL_COUNT":{"type":"NUMBER","index":170,"name":"open_3plus_deal_count","comment":null,"description":"Total pipeline deal count in stage 3 or later.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"open_3plus_deal_count"},"OPEN_4PLUS_DEAL_COUNT":{"type":"NUMBER","index":171,"name":"open_4plus_deal_count","comment":null,"description":"Total pipeline deal count in stage 4 or later.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"open_4plus_deal_count"},"BOOKED_DEAL_COUNT":{"type":"NUMBER","index":172,"name":"booked_deal_count","comment":null,"description":"Count of won deals.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"booked_deal_count"},"CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":173,"name":"churned_contraction_deal_count","comment":null,"description":"Count of churn or contraction deals.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"churned_contraction_deal_count"},"OPEN_1PLUS_NET_ARR":{"type":"FLOAT","index":174,"name":"open_1plus_net_arr","comment":null,"description":"Total net ARR in the pipeline in stage 1 or later.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"open_1plus_net_arr"},"OPEN_3PLUS_NET_ARR":{"type":"FLOAT","index":175,"name":"open_3plus_net_arr","comment":null,"description":"Total net ARR in the pipeline in stage 3 or later.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"open_3plus_net_arr"},"OPEN_4PLUS_NET_ARR":{"type":"FLOAT","index":176,"name":"open_4plus_net_arr","comment":null,"description":"Total net ARR in the pipeline in stage 4 or later.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"open_4plus_net_arr"},"BOOKED_NET_ARR":{"type":"FLOAT","index":177,"name":"booked_net_arr","comment":null,"description":"Total booked net ARR associated with the opportunity.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"booked_net_arr"},"CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":178,"name":"churned_contraction_net_arr","comment":null,"description":"Net ARR from churned or contraction opportunities.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"churned_contraction_net_arr"},"CALCULATED_DEAL_COUNT":{"type":"NUMBER","index":179,"name":"calculated_deal_count","comment":null,"description":"Count of deals that are not credits, subtracting out decommissions.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"calculated_deal_count"},"BOOKED_CHURNED_CONTRACTION_DEAL_COUNT":{"type":"NUMBER","index":180,"name":"booked_churned_contraction_deal_count","comment":null,"description":"Count of booked churn or contraction deals.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"booked_churned_contraction_deal_count"},"BOOKED_CHURNED_CONTRACTION_NET_ARR":{"type":"FLOAT","index":181,"name":"booked_churned_contraction_net_arr","comment":null,"description":"Total churned or contraction net ARR.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"booked_churned_contraction_net_arr"},"RENEWAL_AMOUNT":{"type":"FLOAT","index":182,"name":"RENEWAL_AMOUNT","comment":null,"display_name":"renewal_amount"},"TOTAL_CONTRACT_VALUE":{"type":"FLOAT","index":183,"name":"TOTAL_CONTRACT_VALUE","comment":null,"display_name":"total_contract_value"},"DAYS_IN_STAGE":{"type":"NUMBER","index":184,"name":"DAYS_IN_STAGE","comment":null,"display_name":"days_in_stage"},"CALCULATED_AGE_IN_DAYS":{"type":"NUMBER","index":185,"name":"calculated_age_in_days","comment":null,"description":"Age of the opportunity between opportunity created date and opportunity closed date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"calculated_age_in_days"},"DAYS_SINCE_LAST_ACTIVITY":{"type":"NUMBER","index":186,"name":"DAYS_SINCE_LAST_ACTIVITY","comment":null,"display_name":"days_since_last_activity"},"PRE_MILITARY_INVASION_ARR":{"type":"FLOAT","index":187,"name":"pre_military_invasion_arr","comment":null,"description":"The original amount prior to impact of military invasion(s).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pre_military_invasion_arr"},"WON_ARR_BASIS_FOR_CLARI":{"type":"FLOAT","index":188,"name":"won_arr_basis_for_clari","comment":null,"description":"This will be used for forecasting, and depending on the Renewal Forecast field would calculate the Won ARR Basis portion for a given opp. For example, reduce ARR Basis being booked if Net ARR is negative in contractions.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"won_arr_basis_for_clari"},"ARR_BASIS_FOR_CLARI":{"type":"FLOAT","index":189,"name":"arr_basis_for_clari","comment":null,"description":"This is the ARR Basis of the opportunity, except for contract resets where we are taking it from the subscription. In some cases where we have more than 1 credit opp, we would require a manual override of this value in order to capture the ARR Basis for all the subscriptions being consolidated.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"arr_basis_for_clari"},"FORECASTED_CHURN_FOR_CLARI":{"type":"FLOAT","index":190,"name":"forecasted_churn_for_clari","comment":null,"description":"This field forecasts churn before the opportunity is closed as lost or won if it is contraction.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"forecasted_churn_for_clari"},"OVERRIDE_ARR_BASIS_CLARI":{"type":"FLOAT","index":191,"name":"override_arr_basis_clari","comment":null,"description":"Field that allows for manual overrides in the event when the reset is a consolidation of more than 1 subscription.  This field allows us to manually override the ARR Basis (for Clari) value since we would need to take into account all of the subscriptions consolidated.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"override_arr_basis_clari"},"VSA_START_DATE_NET_ARR":{"type":"FLOAT","index":192,"name":"vsa_start_date_net_arr","comment":null,"description":"The stamped Opportunity Net ARR when Value Stream Assessment start date is populated and is after the opportunity created date. Otherwise, will stamp $0.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"vsa_start_date_net_arr"},"CREATED_BY":{"type":"TEXT","index":193,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":194,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":195,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":196,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":197,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":198,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"subscription_start_date":{"name":"subscription_start_date","description":"The Start Date from the Zuora quote that is either Primary or was Sent to Zuora.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"subscription_end_date":{"name":"subscription_end_date","description":"The End Date from the Zuora quote that is either Primary or was Sent to Zuora.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 19:00UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":72577536,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.fct_crm_opportunity","raw_sql":"$1e","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.map_crm_account","model.gitlab_snowflake.map_crm_account","model.gitlab_snowflake.prep_crm_account","model.gitlab_snowflake.prep_crm_account","model.gitlab_snowflake.prep_order_type","model.gitlab_snowflake.prep_order_type","model.gitlab_snowflake.prep_sales_qualified_source","model.gitlab_snowflake.prep_sales_qualified_source","model.gitlab_snowflake.prep_deal_path","model.gitlab_snowflake.prep_deal_path","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_crm_user","model.gitlab_snowflake.prep_sales_segment","model.gitlab_snowflake.prep_sales_segment","model.gitlab_snowflake.prep_campaign","model.gitlab_snowflake.prep_campaign","model.gitlab_snowflake.prep_dr_partner_engagement","model.gitlab_snowflake.prep_dr_partner_engagement","model.gitlab_snowflake.prep_alliance_type_scd","model.gitlab_snowflake.prep_alliance_type_scd","model.gitlab_snowflake.prep_channel_type","model.gitlab_snowflake.prep_channel_type","model.gitlab_snowflake.prep_crm_opportunity","model.gitlab_snowflake.prep_crm_opportunity","model.gitlab_snowflake.prep_crm_user_hierarchy","model.gitlab_snowflake.prep_crm_user_hierarchy"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common","database":"PROD","tags":["safe","six_hourly"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common","fqn":["gitlab_snowflake","common","facts_sales_and_marketing","restricted_safe","fct_crm_opportunity"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/facts_sales_and_marketing/restricted_safe/fct_crm_opportunity.sql","original_file_path":"models/common/facts_sales_and_marketing/restricted_safe/fct_crm_opportunity.sql","name":"fct_crm_opportunity","alias":"fct_crm_opportunity","checksum":{"name":"sha256","checksum":"c0474383f8751fd790f5507fb5e26717561c168f97596ab9a83f4cb955242ecd"},"tags":["safe","six_hourly"],"refs":[["map_crm_account"],["map_crm_account"],["prep_crm_account"],["prep_crm_account"],["prep_order_type"],["prep_order_type"],["prep_sales_qualified_source"],["prep_sales_qualified_source"],["prep_deal_path"],["prep_deal_path"],["prep_crm_user"],["prep_crm_user"],["prep_sales_segment"],["prep_sales_segment"],["prep_campaign"],["prep_campaign"],["prep_dr_partner_engagement"],["prep_dr_partner_engagement"],["prep_alliance_type_scd"],["prep_alliance_type_scd"],["prep_channel_type"],["prep_channel_type"],["prep_crm_opportunity"],["prep_crm_opportunity"],["prep_crm_user_hierarchy"],["prep_crm_user_hierarchy"]],"sources":[],"metrics":[],"description":"A fact table for salesforce opportunities with keys to connect opportunities to shared dimensions through the attributes of the crm account. This model is refreshed on a six hourly schedule using the `dbt_six_hourly` airflow DAG.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/facts_sales_and_marketing/restricted_safe/fct_crm_opportunity.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["six_hourly"],"secure":true},"created_at":1689033752.2499447,"compiled_sql":"$1f","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common.fct_crm_opportunity","label":"fct_crm_opportunity"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON","name":"FCT_CHARGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CHARGE_ID":{"type":"TEXT","index":1,"name":"dim_charge_id","comment":null,"description":"The unique identifier of a verion of a rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_charge_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"SUBSCRIPTION_CREATED_BY_USER_ID":{"type":"TEXT","index":4,"name":"SUBSCRIPTION_CREATED_BY_USER_ID","comment":null,"display_name":"subscription_created_by_user_id"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":5,"name":"rate_plan_charge_number","comment":null,"description":"A unique number that identifies the charge","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":6,"name":"rate_plan_charge_version","comment":null,"description":"The version of the rate plan charge. Each time a charge is amended, Zuora creates a new version of the rate plan charge.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":7,"name":"rate_plan_charge_segment","comment":null,"description":"The identifying number of the subscription rate plan segment. Segments are numbered sequentially, starting with 1.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"rate_plan_charge_segment"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":8,"name":"dim_product_detail_id","comment":null,"description":"The unique ID of a product rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_detail_id"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":9,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":10,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a version of a subscription","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":11,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":12,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":13,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"DIM_ORDER_ID":{"type":"TEXT","index":14,"name":"dim_order_id","comment":null,"description":"Unique identifier for each order which groups all order actions within an order","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_order_id"},"EFFECTIVE_START_DATE_ID":{"type":"NUMBER","index":15,"name":"effective_start_date_id","comment":null,"description":"Id of the date when the segmented charge starts or started. Use this field to join to dim_date on id.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"effective_start_date_id"},"EFFECTIVE_END_DATE_ID":{"type":"NUMBER","index":16,"name":"effective_end_date_id","comment":null,"description":"Id of the date when the segmented charge ends or ended. Use this field to join to dim_date on id.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"effective_end_date_id"},"MRR":{"type":"FLOAT","index":17,"name":"mrr","comment":null,"description":"Monthly recurring revenue (MRR) is the amount of recurring charges in a given month. The MRR calculation doesn't include one-time charges nor usage charges.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"mrr"},"PREVIOUS_MRR":{"type":"FLOAT","index":18,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR":{"type":"FLOAT","index":19,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"ARR":{"type":"FLOAT","index":20,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":21,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARR":{"type":"FLOAT","index":22,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":23,"name":"quantity","comment":null,"description":"The default quantity of units","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quantity"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":24,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY":{"type":"FLOAT","index":25,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"DELTA_TCV":{"type":"FLOAT","index":26,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":27,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"UNIT_OF_MEASURE":{"type":"TEXT","index":28,"name":"UNIT_OF_MEASURE","comment":null,"display_name":"unit_of_measure"},"CHARGE_TYPE":{"type":"TEXT","index":29,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":30,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":31,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CREATED_BY":{"type":"TEXT","index":32,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":33,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":34,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":35,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":36,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":37,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"subscription_created_by_id":{"name":"subscription_created_by_id","description":"The id of the Zuora user who created the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_created_by_id"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:03UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":70376448,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.fct_charge","raw_sql":"$20","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_charge","model.gitlab_snowflake.prep_charge","model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_amendment"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common","fqn":["gitlab_snowflake","common","facts_financial","restricted_safe","fct_charge"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/facts_financial/restricted_safe/fct_charge.sql","original_file_path":"models/common/facts_financial/restricted_safe/fct_charge.sql","name":"fct_charge","alias":"fct_charge","checksum":{"name":"sha256","checksum":"d89ec90222390d940f970caca04af25743db2bb13b3c089a0c3b472502cc76f3"},"tags":["safe"],"refs":[["prep_charge"],["prep_charge"],["prep_amendment"],["prep_amendment"]],"sources":[],"metrics":[],"description":"Factual table with all rate plan charges coming from subscriptions or an amendment to a subscription.\n\nRate Plan Charges are created as part of the Quote Creation business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#6-invoicing-to-customers).\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Rate-Plan-Charges).\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/facts_financial/restricted_safe/fct_charge.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033752.180198,"compiled_sql":"$21","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common.fct_charge","label":"fct_charge"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON","name":"DIM_CRM_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":1,"name":"dim_crm_account_id","comment":null,"description":"Account ID from SFDC identifing the customer","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"dbt_utils.relationships_where","short":"+","label":"dbt_utils.relationships_where({\"to\":\"ref('dim_crm_account')\",\"field\":\"dim_crm_account_id\",\"from_condition\":\"GREATEST(IFNULL(lead_created_date, '1999-01-01'), IFNULL(contact_created_date, '1999-01-01')) <= DATEADD('day', -2, CURRENT_DATE)::DATE\",\"model\":\"{{ get_where_subquery(ref('fct_crm_person')) }}\"})"},{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"dbt_utils.relationships_where","short":"+","label":"dbt_utils.relationships_where({\"to\":\"ref('dim_crm_account')\",\"field\":\"dim_crm_account_id\",\"from_condition\":\"created_date <= DATEADD('day', -3, CURRENT_DATE)::DATE\",\"model\":\"{{ get_where_subquery(ref('fct_crm_opportunity')) }}\"})"}],"display_name":"dim_crm_account_id"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_parent_crm_account_id","comment":null,"description":"Ultimate parent account 18 character Salesforce ID","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_parent_crm_account_id"},"DIM_CRM_USER_ID":{"type":"TEXT","index":3,"name":"dim_crm_user_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_user_id"},"MERGED_TO_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"merged_to_account_id","comment":null,"description":"For deleted accounts, this is the SFDC account they were merged into","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merged_to_account_id"},"RECORD_TYPE_ID":{"type":"TEXT","index":5,"name":"record_type_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"record_type_id"},"MASTER_RECORD_ID":{"type":"TEXT","index":6,"name":"master_record_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"master_record_id"},"DIM_CRM_PERSON_PRIMARY_CONTACT_ID":{"type":"TEXT","index":7,"name":"dim_crm_person_primary_contact_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_person_primary_contact_id"},"CRM_ACCOUNT_OWNER":{"type":"TEXT","index":8,"name":"crm_account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_owner"},"PROPOSED_CRM_ACCOUNT_OWNER":{"type":"TEXT","index":9,"name":"proposed_crm_account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"proposed_crm_account_owner"},"ACCOUNT_OWNER":{"type":"TEXT","index":10,"name":"account_owner","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_owner"},"TECHNICAL_ACCOUNT_MANAGER":{"type":"TEXT","index":11,"name":"technical_account_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager"},"OWNER_ROLE":{"type":"TEXT","index":12,"name":"owner_role","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"owner_role"},"USER_ROLE_TYPE":{"type":"TEXT","index":13,"name":"user_role_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_role_type"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":14,"name":"parent_crm_account_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":15,"name":"parent_crm_account_sales_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT_GROUPED":{"type":"TEXT","index":16,"name":"parent_crm_account_sales_segment_grouped","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_sales_segment_grouped"},"PARENT_CRM_ACCOUNT_SEGMENT_REGION_STAMPED_GROUPED":{"type":"TEXT","index":17,"name":"parent_crm_account_segment_region_stamped_grouped","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_segment_region_stamped_grouped"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":18,"name":"parent_crm_account_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_BUSINESS_UNIT":{"type":"TEXT","index":19,"name":"parent_crm_account_business_unit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_business_unit"},"PARENT_CRM_ACCOUNT_GEO":{"type":"TEXT","index":20,"name":"parent_crm_account_geo","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_geo"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":21,"name":"parent_crm_account_region","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":22,"name":"parent_crm_account_area","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_area"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":23,"name":"parent_crm_account_territory","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_ROLE_TYPE":{"type":"TEXT","index":24,"name":"parent_crm_account_role_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_role_type"},"PARENT_CRM_ACCOUNT_MAX_FAMILY_EMPLOYEE":{"type":"FLOAT","index":25,"name":"parent_crm_account_max_family_employee","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_max_family_employee"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":26,"name":"parent_crm_account_upa_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_UPA_STATE":{"type":"TEXT","index":27,"name":"parent_crm_account_upa_state","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_state"},"PARENT_CRM_ACCOUNT_UPA_CITY":{"type":"TEXT","index":28,"name":"parent_crm_account_upa_city","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_city"},"PARENT_CRM_ACCOUNT_UPA_STREET":{"type":"TEXT","index":29,"name":"parent_crm_account_upa_street","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_street"},"PARENT_CRM_ACCOUNT_UPA_POSTAL_CODE":{"type":"TEXT","index":30,"name":"parent_crm_account_upa_postal_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_upa_postal_code"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":31,"name":"crm_account_name","comment":null,"description":"Account name from SFDC","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_name"},"CRM_ACCOUNT_EMPLOYEE_COUNT":{"type":"FLOAT","index":32,"name":"crm_account_employee_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_employee_count"},"CRM_ACCOUNT_GTM_STRATEGY":{"type":"TEXT","index":33,"name":"crm_account_gtm_strategy","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_gtm_strategy"},"CRM_ACCOUNT_FOCUS_ACCOUNT":{"type":"TEXT","index":34,"name":"crm_account_focus_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_focus_account"},"CRM_ACCOUNT_OWNER_USER_SEGMENT":{"type":"TEXT","index":35,"name":"crm_account_owner_user_segment","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_owner_user_segment"},"CRM_ACCOUNT_BILLING_COUNTRY":{"type":"TEXT","index":36,"name":"crm_account_billing_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_billing_country"},"CRM_ACCOUNT_BILLING_COUNTRY_CODE":{"type":"TEXT","index":37,"name":"crm_account_billing_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_billing_country_code"},"CRM_ACCOUNT_TYPE":{"type":"TEXT","index":38,"name":"crm_account_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_type"},"CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":39,"name":"crm_account_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_industry"},"CRM_ACCOUNT_SUB_INDUSTRY":{"type":"TEXT","index":40,"name":"crm_account_sub_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_sub_industry"},"CRM_ACCOUNT_EMPLOYEE_COUNT_BAND":{"type":"TEXT","index":41,"name":"crm_account_employee_count_band","comment":null,"description":"Employee count band the account belongs to based on the account_max_family_employee. Bands include \"> 2K\", \"> 1.5K\", \"> 1K\".","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_employee_count_band"},"PARTNER_VAT_TAX_ID":{"type":"TEXT","index":42,"name":"partner_vat_tax_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_vat_tax_id"},"ACCOUNT_MANAGER":{"type":"TEXT","index":43,"name":"account_manager","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_manager"},"BUSINESS_DEVELOPMENT_REP":{"type":"TEXT","index":44,"name":"business_development_rep","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"business_development_rep"},"DEDICATED_SERVICE_ENGINEER":{"type":"TEXT","index":45,"name":"dedicated_service_engineer","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dedicated_service_engineer"},"ACCOUNT_TIER":{"type":"TEXT","index":46,"name":"account_tier","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_tier"},"ACCOUNT_TIER_NOTES":{"type":"TEXT","index":47,"name":"account_tier_notes","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_tier_notes"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":48,"name":"license_utilization","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_utilization"},"SUPPORT_LEVEL":{"type":"TEXT","index":49,"name":"support_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"support_level"},"NAMED_ACCOUNT":{"type":"BOOLEAN","index":50,"name":"named_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"named_account"},"BILLING_POSTAL_CODE":{"type":"TEXT","index":51,"name":"billing_postal_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_postal_code"},"PARTNER_TYPE":{"type":"TEXT","index":52,"name":"partner_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_type"},"PARTNER_STATUS":{"type":"TEXT","index":53,"name":"partner_status","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_status"},"GITLAB_CUSTOMER_SUCCESS_PROJECT":{"type":"TEXT","index":54,"name":"gitlab_customer_success_project","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_customer_success_project"},"DEMANDBASE_ACCOUNT_LIST":{"type":"TEXT","index":55,"name":"demandbase_account_list","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_account_list"},"DEMANDBASE_INTENT":{"type":"TEXT","index":56,"name":"demandbase_intent","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_intent"},"DEMANDBASE_PAGE_VIEWS":{"type":"FLOAT","index":57,"name":"demandbase_page_views","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_page_views"},"DEMANDBASE_SCORE":{"type":"TEXT","index":58,"name":"demandbase_score","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_score"},"DEMANDBASE_SESSIONS":{"type":"FLOAT","index":59,"name":"demandbase_sessions","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_sessions"},"DEMANDBASE_TRENDING_OFFSITE_INTENT":{"type":"BOOLEAN","index":60,"name":"demandbase_trending_offsite_intent","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_trending_offsite_intent"},"DEMANDBASE_TRENDING_ONSITE_ENGAGEMENT":{"type":"BOOLEAN","index":61,"name":"demandbase_trending_onsite_engagement","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"demandbase_trending_onsite_engagement"},"IS_LOCALLY_MANAGED_ACCOUNT":{"type":"BOOLEAN","index":62,"name":"is_locally_managed_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_locally_managed_account"},"IS_STRATEGIC_ACCOUNT":{"type":"BOOLEAN","index":63,"name":"is_strategic_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_strategic_account"},"PARTNER_TRACK":{"type":"TEXT","index":64,"name":"partner_track","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_track"},"PARTNERS_PARTNER_TYPE":{"type":"TEXT","index":65,"name":"partners_partner_type","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partners_partner_type"},"GITLAB_PARTNER_PROGRAM":{"type":"TEXT","index":66,"name":"gitlab_partner_program","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_partner_program"},"ZOOM_INFO_COMPANY_NAME":{"type":"TEXT","index":67,"name":"zoom_info_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_name"},"ZOOM_INFO_COMPANY_REVENUE":{"type":"FLOAT","index":68,"name":"zoom_info_company_revenue","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_revenue"},"ZOOM_INFO_COMPANY_EMPLOYEE_COUNT":{"type":"FLOAT","index":69,"name":"zoom_info_company_employee_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_employee_count"},"ZOOM_INFO_COMPANY_INDUSTRY":{"type":"TEXT","index":70,"name":"zoom_info_company_industry","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_industry"},"ZOOM_INFO_COMPANY_CITY":{"type":"TEXT","index":71,"name":"zoom_info_company_city","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_city"},"ZOOM_INFO_COMPANY_STATE_PROVINCE":{"type":"TEXT","index":72,"name":"zoom_info_company_state_province","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_state_province"},"ZOOM_INFO_COMPANY_COUNTRY":{"type":"TEXT","index":73,"name":"zoom_info_company_country","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoom_info_company_country"},"ACCOUNT_PHONE":{"type":"TEXT","index":74,"name":"account_phone","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_phone"},"ZOOMINFO_ACCOUNT_PHONE":{"type":"TEXT","index":75,"name":"zoominfo_account_phone","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zoominfo_account_phone"},"ABM_TIER":{"type":"TEXT","index":76,"name":"abm_tier","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier"},"HEALTH_NUMBER":{"type":"FLOAT","index":77,"name":"health_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"health_number"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":78,"name":"health_score_color","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"health_score_color"},"PARTNER_ACCOUNT_IBAN_NUMBER":{"type":"TEXT","index":79,"name":"partner_account_iban_number","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partner_account_iban_number"},"GITLAB_COM_USER":{"type":"BOOLEAN","index":80,"name":"gitlab_com_user","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_com_user"},"CRM_ACCOUNT_ZI_TECHNOLOGIES":{"type":"TEXT","index":81,"name":"crm_account_zi_technologies","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zi_technologies"},"CRM_ACCOUNT_ZOOM_INFO_WEBSITE":{"type":"TEXT","index":82,"name":"crm_account_zoom_info_website","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_website"},"CRM_ACCOUNT_ZOOM_INFO_COMPANY_OTHER_DOMAINS":{"type":"TEXT","index":83,"name":"crm_account_zoom_info_company_other_domains","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_company_other_domains"},"CRM_ACCOUNT_ZOOM_INFO_DOZISF_ZI_ID":{"type":"TEXT","index":84,"name":"crm_account_zoom_info_dozisf_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_dozisf_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":85,"name":"crm_account_zoom_info_parent_company_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_PARENT_COMPANY_NAME":{"type":"TEXT","index":86,"name":"crm_account_zoom_info_parent_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_parent_company_name"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_ZI_ID":{"type":"TEXT","index":87,"name":"crm_account_zoom_info_ultimate_parent_company_zi_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_ultimate_parent_company_zi_id"},"CRM_ACCOUNT_ZOOM_INFO_ULTIMATE_PARENT_COMPANY_NAME":{"type":"TEXT","index":88,"name":"crm_account_zoom_info_ultimate_parent_company_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_zoom_info_ultimate_parent_company_name"},"FORBES_2000_RANK":{"type":"TEXT","index":89,"name":"forbes_2000_rank","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"forbes_2000_rank"},"SALES_DEVELOPMENT_REP":{"type":"TEXT","index":90,"name":"sales_development_rep","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sales_development_rep"},"ADMIN_MANUAL_SOURCE_NUMBER_OF_EMPLOYEES":{"type":"TEXT","index":91,"name":"admin_manual_source_number_of_employees","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"admin_manual_source_number_of_employees"},"ADMIN_MANUAL_SOURCE_ACCOUNT_ADDRESS":{"type":"TEXT","index":92,"name":"admin_manual_source_account_address","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"admin_manual_source_account_address"},"EOA_SENTIMENT":{"type":"TEXT","index":93,"name":"eoa_sentiment","comment":null,"description":" Red - customer was unhappy with the announcement and there's potential risk of churn\nYellow - customer exhibited some dissatisfaction with the announcement but likely won't churn\nGreen - customer responded favourably to the announcement and is a strong candidate to uptier ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"eoa_sentiment"},"GS_HEALTH_USER_ENGAGEMENT":{"type":"TEXT","index":94,"name":"gs_health_user_engagement","comment":null,"description":" [Customer health score for engaging in meetings, cadence calls, or EBRs](https://about.gitlab.com/handbook/customer-success/customer-health-scoring/#customer-engagement). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_user_engagement"},"GS_HEALTH_CD":{"type":"TEXT","index":95,"name":"gs_health_cd","comment":null,"description":" Customer [health score for CD use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#cd-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_cd"},"GS_HEALTH_DEVSECOPS":{"type":"TEXT","index":96,"name":"gs_health_devsecops","comment":null,"description":" Customer [health score for DevSecOps use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#devsecops-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_devsecops"},"GS_HEALTH_CI":{"type":"TEXT","index":97,"name":"gs_health_ci","comment":null,"description":" Customer [health score for CI use case adoption](https://about.gitlab.com/handbook/customer-success/product-usage-data/maturity-scoring/#ci-adoption-scoring). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_ci"},"GS_HEALTH_SCM":{"type":"TEXT","index":98,"name":"gs_health_scm","comment":null,"description":" [Customer health score for source code management (SCM) use case adoption](https://about.gitlab.com/handbook/marketing/brand-and-product-marketing/product-and-solution-marketing/usecase-gtm/version-control-collaboration/#adoption-guide). ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_health_scm"},"RISK_IMPACT":{"type":"TEXT","index":99,"name":"risk_impact","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_impact"},"RISK_REASON":{"type":"TEXT","index":100,"name":"risk_reason","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"risk_reason"},"LAST_TIMELINE_AT_RISK_UPDATE":{"type":"TIMESTAMP_TZ","index":101,"name":"last_timeline_at_risk_update","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_timeline_at_risk_update"},"LAST_AT_RISK_UPDATE_COMMENTS":{"type":"TEXT","index":102,"name":"last_at_risk_update_comments","comment":null,"description":" The most recent Account-level At-Risk Update timeline activity in Gainsight, synced to Salesforce. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_at_risk_update_comments"},"BDR_PROSPECTING_STATUS":{"type":"TEXT","index":103,"name":"BDR_PROSPECTING_STATUS","comment":null,"display_name":"bdr_prospecting_status"},"PARENT_CRM_ACCOUNT_LAM":{"type":"FLOAT","index":104,"name":"parent_crm_account_lam","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_lam"},"PARENT_CRM_ACCOUNT_LAM_DEV_COUNT":{"type":"FLOAT","index":105,"name":"parent_crm_account_lam_dev_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_crm_account_lam_dev_count"},"CARR_ACCOUNT_FAMILY":{"type":"FLOAT","index":106,"name":"carr_account_family","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"carr_account_family"},"CARR_THIS_ACCOUNT":{"type":"FLOAT","index":107,"name":"carr_this_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"carr_this_account"},"IS_SDR_TARGET_ACCOUNT":{"type":"BOOLEAN","index":108,"name":"is_sdr_target_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_sdr_target_account"},"IS_KEY_ACCOUNT":{"type":"BOOLEAN","index":109,"name":"is_key_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_key_account"},"IS_RESELLER":{"type":"BOOLEAN","index":110,"name":"is_reseller","comment":null,"description":"Identify whether a crm_account is a reseller.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","sales_funnel"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"is_reseller"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":111,"name":"is_jihu_account","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_jihu_account"},"IS_FIRST_ORDER_AVAILABLE":{"type":"BOOLEAN","index":112,"name":"is_first_order_available","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_order_available"},"IS_ZI_JENKINS_PRESENT":{"type":"NUMBER","index":113,"name":"is_zi_jenkins_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_jenkins_present"},"IS_ZI_SVN_PRESENT":{"type":"NUMBER","index":114,"name":"is_zi_svn_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_svn_present"},"IS_ZI_TORTOISE_SVN_PRESENT":{"type":"NUMBER","index":115,"name":"is_zi_tortoise_svn_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_tortoise_svn_present"},"IS_ZI_GCP_PRESENT":{"type":"NUMBER","index":116,"name":"is_zi_gcp_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_gcp_present"},"IS_ZI_ATLASSIAN_PRESENT":{"type":"NUMBER","index":117,"name":"is_zi_atlassian_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_atlassian_present"},"IS_ZI_GITHUB_PRESENT":{"type":"NUMBER","index":118,"name":"is_zi_github_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_github_present"},"IS_ZI_GITHUB_ENTERPRISE_PRESENT":{"type":"NUMBER","index":119,"name":"is_zi_github_enterprise_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_github_enterprise_present"},"IS_ZI_AWS_PRESENT":{"type":"NUMBER","index":120,"name":"is_zi_aws_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_aws_present"},"IS_ZI_KUBERNETES_PRESENT":{"type":"NUMBER","index":121,"name":"is_zi_kubernetes_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_kubernetes_present"},"IS_ZI_APACHE_SUBVERSION_PRESENT":{"type":"NUMBER","index":122,"name":"is_zi_apache_subversion_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_apache_subversion_present"},"IS_ZI_APACHE_SUBVERSION_SVN_PRESENT":{"type":"NUMBER","index":123,"name":"is_zi_apache_subversion_svn_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_apache_subversion_svn_present"},"IS_ZI_HASHICORP_PRESENT":{"type":"NUMBER","index":124,"name":"is_zi_hashicorp_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_hashicorp_present"},"IS_ZI_AWS_CLOUD_TRAIL_PRESENT":{"type":"NUMBER","index":125,"name":"is_zi_aws_cloud_trail_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_aws_cloud_trail_present"},"IS_ZI_CIRCLE_CI_PRESENT":{"type":"NUMBER","index":126,"name":"is_zi_circle_ci_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_circle_ci_present"},"IS_ZI_BIT_BUCKET_PRESENT":{"type":"NUMBER","index":127,"name":"is_zi_bit_bucket_present","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_zi_bit_bucket_present"},"IS_EXCLUDED_FROM_ZOOM_INFO_ENRICH":{"type":"BOOLEAN","index":128,"name":"is_excluded_from_zoom_info_enrich","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_excluded_from_zoom_info_enrich"},"CRM_ACCOUNT_CREATED_DATE":{"type":"TIMESTAMP_TZ","index":129,"name":"crm_account_created_date","comment":null,"description":"The date on which the CRM account was created in SFDC","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_created_date"},"ABM_TIER_1_DATE":{"type":"TIMESTAMP_TZ","index":130,"name":"abm_tier_1_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_1_date"},"ABM_TIER_2_DATE":{"type":"TIMESTAMP_TZ","index":131,"name":"abm_tier_2_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_2_date"},"ABM_TIER_3_DATE":{"type":"TIMESTAMP_TZ","index":132,"name":"abm_tier_3_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"abm_tier_3_date"},"GTM_ACCELERATION_DATE":{"type":"TIMESTAMP_TZ","index":133,"name":"gtm_acceleration_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_acceleration_date"},"GTM_ACCOUNT_BASED_DATE":{"type":"TIMESTAMP_TZ","index":134,"name":"gtm_account_based_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_account_based_date"},"GTM_ACCOUNT_CENTRIC_DATE":{"type":"TIMESTAMP_TZ","index":135,"name":"gtm_account_centric_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gtm_account_centric_date"},"PARTNERS_SIGNED_CONTRACT_DATE":{"type":"DATE","index":136,"name":"partners_signed_contract_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"partners_signed_contract_date"},"TECHNICAL_ACCOUNT_MANAGER_DATE":{"type":"DATE","index":137,"name":"technical_account_manager_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"technical_account_manager_date"},"CUSTOMER_SINCE_DATE":{"type":"DATE","index":138,"name":"customer_since_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"customer_since_date"},"NEXT_RENEWAL_DATE":{"type":"TIMESTAMP_TZ","index":139,"name":"next_renewal_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"next_renewal_date"},"GS_FIRST_VALUE_DATE":{"type":"TIMESTAMP_TZ","index":140,"name":"gs_first_value_date","comment":null,"description":" Date when the account reached 10% of license utiliztion. The goal is to reach this within 30 days. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_first_value_date"},"GS_LAST_CSM_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":141,"name":"gs_last_csm_activity_date","comment":null,"description":" Last time the CSM had contact with the customer. ","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gs_last_csm_activity_date"},"CREATED_BY_NAME":{"type":"TEXT","index":142,"name":"created_by_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by_name"},"LAST_MODIFIED_BY_NAME":{"type":"TEXT","index":143,"name":"last_modified_by_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_modified_by_name"},"LAST_MODIFIED_DATE":{"type":"TIMESTAMP_TZ","index":144,"name":"last_modified_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_modified_date"},"LAST_ACTIVITY_DATE":{"type":"TIMESTAMP_TZ","index":145,"name":"last_activity_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_activity_date"},"IS_DELETED":{"type":"BOOLEAN","index":146,"name":"is_deleted","comment":null,"description":"Flag indicating if account has been deleted","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_deleted"},"PTE_SCORE":{"type":"NUMBER","index":147,"name":"pte_score","comment":null,"description":"Propensity to expand scores from pte_scores_source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pte_score"},"PTE_DECILE":{"type":"NUMBER","index":148,"name":"pte_decile","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pte_decile"},"PTE_SCORE_GROUP":{"type":"NUMBER","index":149,"name":"pte_score_group","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"pte_score_group"},"PTC_SCORE":{"type":"NUMBER","index":150,"name":"ptc_score","comment":null,"description":"Propensity to contract and churn scores from ptc_scores_source","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptc_score"},"PTC_DECILE":{"type":"NUMBER","index":151,"name":"ptc_decile","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptc_decile"},"PTC_SCORE_GROUP":{"type":"NUMBER","index":152,"name":"ptc_score_group","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ptc_score_group"},"CREATED_BY":{"type":"TEXT","index":153,"name":"created_by","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":154,"name":"updated_by","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":155,"name":"model_created_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":156,"name":"model_updated_date","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":157,"name":"dbt_updated_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":158,"name":"dbt_created_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:07UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":69577728,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_crm_account","raw_sql":"$22","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model","macro.gitlab_snowflake.missing_member_column"],"nodes":["model.gitlab_snowflake.prep_crm_account","model.gitlab_snowflake.prep_crm_account"]},"config":{"enabled":true,"alias":"dim_crm_account","schema":"restricted_safe_common","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null},{"sql":"{{ missing_member_column(primary_key = 'dim_crm_account_id', not_null_test_cols = ['is_reseller']) }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common","fqn":["gitlab_snowflake","common","dimensions_shared","restricted_safe","dim_crm_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/restricted_safe/dim_crm_account.sql","original_file_path":"models/common/dimensions_shared/restricted_safe/dim_crm_account.sql","name":"dim_crm_account","alias":"dim_crm_account","checksum":{"name":"sha256","checksum":"826460cc404a35e0194800d84ecc908ea8b1d4280f9a6190fe0fab28bb7e3456"},"tags":["safe"],"refs":[["prep_crm_account"],["prep_crm_account"]],"sources":[],"metrics":[],"description":"Dimensional customer table representing all existing and historical customers from SalesForce. There are customer definitions for external reporting and additional customer definitions for internal reporting defined in the [handbook](https://about.gitlab.com/handbook/sales/#customer).\n\nThe Customer Account Management business process can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#1-customer-account-management-and-conversion-of-lead-to-opportunity).\n\nThe grain of the table is the SalesForce Account, also referred to as `DIM_CRM_ACCOUNT_ID`.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/restricted_safe/dim_crm_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common","copy_grants":true,"post-hook":["{{ missing_member_column(primary_key = 'dim_crm_account_id', not_null_test_cols = ['is_reseller']) }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"alias":"dim_crm_account"},"created_at":1689033752.0030825,"compiled_sql":"$23","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common.dim_crm_account","label":"dim_crm_account"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_BILLING_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_BILLING_ACCOUNT_SK":{"type":"TEXT","index":1,"name":"dim_billing_account_sk","comment":null,"description":"A surrogate key that uniquely identifes each row of the billing account table.  It is currently formed by hashing the billing account IDs from Zuora that uniquely identify a Zuora account associated with a given Subscription ID. This is built as a conceptual [dimension](https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/kimball-techniques/dimensional-modeling-techniques/dimension-table-structure/) and can be used to build a dimension table to limit the number of columns on a fact table.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_billing_account_sk"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_billing_account_id","comment":null,"description":"The unique identifier of the Zuora account associated with a given Subscription ID","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"dim_crm_account_id","comment":null,"description":"The customer account ID for the account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"BILLING_ACCOUNT_NUMBER":{"type":"TEXT","index":4,"name":"billing_account_number","comment":null,"description":"A unique Zuora account number","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_account_number"},"BILLING_ACCOUNT_NAME":{"type":"TEXT","index":5,"name":"billing_account_name","comment":null,"description":"The name of the Zuora account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_account_name"},"ACCOUNT_STATUS":{"type":"TEXT","index":6,"name":"account_status","comment":null,"description":"The status of the account in the system. Can be draft, active, cancelled.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_status"},"PARENT_ID":{"type":"TEXT","index":7,"name":"parent_id","comment":null,"description":"The identifier of the parent customer account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"CRM_ACCOUNT_CODE":{"type":"TEXT","index":8,"name":"crm_account_code","comment":null,"description":"The code for the sfdc account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_code"},"CRM_ENTITY":{"type":"TEXT","index":9,"name":"crm_entity","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_entity"},"ACCOUNT_CURRENCY":{"type":"TEXT","index":10,"name":"account_currency","comment":null,"description":"A currency as defined in Billing Settings in the Zuora UI","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_currency"},"SOLD_TO_COUNTRY":{"type":"TEXT","index":11,"name":"sold_to_country","comment":null,"description":"The country of the sold to contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sold_to_country"},"SSP_CHANNEL":{"type":"TEXT","index":12,"name":"ssp_channel","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ssp_channel"},"PO_REQUIRED":{"type":"TEXT","index":13,"name":"po_required","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"po_required"},"AUTO_PAY":{"type":"BOOLEAN","index":14,"name":"auto_pay","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_pay"},"DEFAULT_PAYMENT_METHOD_TYPE":{"type":"TEXT","index":15,"name":"DEFAULT_PAYMENT_METHOD_TYPE","comment":null,"display_name":"default_payment_method_type"},"IS_DELETED":{"type":"BOOLEAN","index":16,"name":"is_deleted","comment":null,"description":"The flag indicating if account has been deleted","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_deleted"},"BATCH":{"type":"TEXT","index":17,"name":"batch","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"batch"},"RECORD_DATA_SOURCE":{"type":"TEXT","index":18,"name":"record_data_source","comment":null,"description":"An indicator flag to identify if the record exists in Zuora or CDot or in both the sources. This column can be used to identify any missing records or data sync issues in both the sources","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"record_data_source"},"CREATED_BY":{"type":"TEXT","index":19,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":20,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":21,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":22,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":23,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":24,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:03UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":6400512,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_billing_account","raw_sql":"$24","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_billing_account","model.gitlab_snowflake.prep_billing_account"]},"config":{"enabled":true,"alias":"dim_billing_account","schema":"common","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_billing_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_billing_account.sql","original_file_path":"models/common/dimensions_shared/dim_billing_account.sql","name":"dim_billing_account","alias":"dim_billing_account","checksum":{"name":"sha256","checksum":"4ad3fe77e658a786a78f08bca51c1da7f0bd485da110df64f9faa656183a5487"},"tags":["mnpi_exception"],"refs":[["prep_billing_account"],["prep_billing_account"]],"sources":[],"metrics":[],"description":"Dimensional table representing each individual Zuora account with details of person to bill for the account.\n\nThe Zuora account creation and maintenance is part of the broader Quote Creation business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#3-quote-creation).\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Accounts).\n\nThe grain of the table is the Zuora Account.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_billing_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"],"alias":"dim_billing_account"},"created_at":1689033750.5598338,"compiled_sql":"$25","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_billing_account","label":"dim_billing_account"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_PRODUCT_DETAIL","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":1,"name":"dim_product_detail_id","comment":null,"description":"The unique ID of each row in dim_product_detail, based on product rate plan charge ID.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_product_detail_id"},"PRODUCT_ID":{"type":"TEXT","index":2,"name":"product_id","comment":null,"description":"The ID of the product that contains the product rate plan.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"product_id"},"DIM_PRODUCT_TIER_ID":{"type":"TEXT","index":3,"name":"dim_product_tier_id","comment":null,"description":"The unique ID of a product tier determined in dim_product_tier.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_product_tier_id"},"PRODUCT_RATE_PLAN_ID":{"type":"TEXT","index":4,"name":"PRODUCT_RATE_PLAN_ID","comment":null,"display_name":"product_rate_plan_id"},"PRODUCT_RATE_PLAN_CHARGE_ID":{"type":"TEXT","index":5,"name":"product_rate_plan_charge_id","comment":null,"description":"The unique ID of a product rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_rate_plan_charge_id"},"PRODUCT_RATE_PLAN_NAME":{"type":"TEXT","index":6,"name":"product_rate_plan_name","comment":null,"description":"The name of the product rate plan. The name doesn't have to be unique in a Product Catalog, but the name has to be unique within a product.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_rate_plan_name"},"PRODUCT_RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":7,"name":"product_rate_plan_charge_name","comment":null,"description":"The name of the product rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_rate_plan_charge_name"},"PRODUCT_NAME":{"type":"TEXT","index":8,"name":"product_name","comment":null,"description":"The name of the product","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_name"},"PRODUCT_SKU":{"type":"TEXT","index":9,"name":"product_sku","comment":null,"description":"The unique SKU for the product","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_sku"},"PRODUCT_TIER_HISTORICAL":{"type":"TEXT","index":10,"name":"product_tier_historical","comment":null,"description":"Product pricing tiers prior to [tier renaming](https://gitlab-com.gitlab.io/packaging-and-pricing/pricing-handbook/handbook/renaming_tiers/) (early 2021).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_historical"},"PRODUCT_TIER_HISTORICAL_SHORT":{"type":"TEXT","index":11,"name":"product_tier_historical_short","comment":null,"description":"Pulls the product tier from `product_tier_historical` with the delivery type removed","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_historical_short"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":12,"name":"product_tier_name","comment":null,"description":"Product [pricing tiers](https://about.gitlab.com/handbook/marketing/strategic-marketing/tiers/) for both SaaS and Self-Managed customers. Includes the mapping from SaaS - Silver to SaaS - Premium, and from SaaS - Gold to SaaS - Ultimate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_name"},"PRODUCT_TIER_NAME_SHORT":{"type":"TEXT","index":13,"name":"product_tier_name_short","comment":null,"description":"Pulls the product tier from `product_tier_name` with the delivery type removed","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_tier_name_short"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":14,"name":"PRODUCT_DELIVERY_TYPE","comment":null,"display_name":"product_delivery_type"},"PRODUCT_DEPLOYMENT_TYPE":{"type":"TEXT","index":15,"name":"product_deployment_type","comment":null,"description":"How a product is deployed to the customer; Self-Managed, GitLab.com or Dedicated (or Other).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"product_deployment_type"},"SERVICE_TYPE":{"type":"TEXT","index":16,"name":"SERVICE_TYPE","comment":null,"display_name":"service_type"},"IS_REPORTER_LICENSE":{"type":"BOOLEAN","index":17,"name":"is_reporter_license","comment":null,"description":"Reporter licenses are in the Products with 'Additional Permission Types' in the name.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_reporter_license"},"EFFECTIVE_START_DATE":{"type":"TIMESTAMP_TZ","index":18,"name":"effective_start_date","comment":null,"description":"The date when the product becomes available and can be subscribed to","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"TIMESTAMP_TZ","index":19,"name":"effective_end_date","comment":null,"description":"The date when the product expires and can't be subscribed to anymore","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"effective_end_date"},"PRODUCT_RANKING":{"type":"NUMBER","index":20,"name":"PRODUCT_RANKING","comment":null,"display_name":"product_ranking"},"IS_OSS_OR_EDU_RATE_PLAN":{"type":"BOOLEAN","index":21,"name":"is_oss_or_edu_rate_plan","comment":null,"description":"Flag for rate plans containing OSS or EDU","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_oss_or_edu_rate_plan"},"BILLING_LIST_PRICE":{"type":"FLOAT","index":22,"name":"billing_list_price","comment":null,"description":"The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the charge model is tiered pricing.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_list_price"},"ANNUAL_BILLING_LIST_PRICE":{"type":"FLOAT","index":23,"name":"ANNUAL_BILLING_LIST_PRICE","comment":null,"display_name":"annual_billing_list_price"},"IS_LICENSED_USER":{"type":"BOOLEAN","index":24,"name":"is_licensed_user","comment":null,"description":"Flag to identify licensed users. It works by excluding `Storage` product_tier.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_licensed_user"},"IS_ARPU":{"type":"BOOLEAN","index":25,"name":"is_arpu","comment":null,"description":"Flag to identify what counts towards Annual Revenue Per User (ARPU). It works by excluding `Storage` product_tier and `EDU` product_rate_plan.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_arpu"},"CREATED_BY":{"type":"TEXT","index":26,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":27,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":28,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":29,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":30,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":31,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:05UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":347136,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_product_detail","raw_sql":"$26","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_product_detail","model.gitlab_snowflake.prep_product_detail"]},"config":{"enabled":true,"alias":"dim_product_detail","schema":"common","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_product_detail"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_product_detail.sql","original_file_path":"models/common/dimensions_shared/dim_product_detail.sql","name":"dim_product_detail","alias":"dim_product_detail","checksum":{"name":"sha256","checksum":"c4afb46ac4541417a2f36b846de561132d635911b6a6d00f61935820dc83a64b"},"tags":[],"refs":[["prep_product_detail"],["prep_product_detail"]],"sources":[],"metrics":[],"description":"Dimensional table representing GitLab's Product Catalog. The Product Catalog is created and maintained through the Price Master Management business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#2-price-master-management).\n\nThe Rate Plan Charge that is created on a customer account and subscription inherits its value from the Product Catalog.\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Product-Rate-Plan-Charges).\n\nThe grain of the table is the Product Rate Plan Charge.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_product_detail.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","alias":"dim_product_detail"},"created_at":1689033750.7488418,"compiled_sql":"$27","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_product_detail","label":"dim_product_detail"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_PREP","name":"PREP_RENEWAL_FISCAL_YEARS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"FISCAL_YEAR":{"type":"NUMBER","index":1,"name":"FISCAL_YEAR","comment":null,"display_name":"fiscal_year"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:04UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":13312,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.prep_renewal_fiscal_years","raw_sql":"{{ simple_cte([\n    ('dim_date','dim_date'),\n    ('prep_charge', 'prep_charge')\n]) }}\n\n, renewal_fiscal_years AS (\n\n    SELECT DISTINCT dim_date.fiscal_year\n    FROM prep_charge\n    INNER JOIN dim_date\n      ON prep_charge.effective_start_month <= dim_date.date_actual\n      AND (prep_charge.effective_end_month > dim_date.date_actual\n        OR prep_charge.effective_end_month IS NULL)\n      AND dim_date.day_of_month = 1\n    WHERE subscription_status IN ('Active', 'Cancelled')\n      AND charge_type = 'Recurring'\n      AND mrr != 0\n\n)\n\nSELECT *\nFROM renewal_fiscal_years","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.prep_charge","model.gitlab_snowflake.prep_charge"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_prep","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_prep","fqn":["gitlab_snowflake","common_prep","restricted_safe","prep_renewal_fiscal_years"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_prep/restricted_safe/prep_renewal_fiscal_years.sql","original_file_path":"models/common_prep/restricted_safe/prep_renewal_fiscal_years.sql","name":"prep_renewal_fiscal_years","alias":"prep_renewal_fiscal_years","checksum":{"name":"sha256","checksum":"8865216682040447463b9a4060c8c433053c043e0e9453749bc9c9104b41ce60"},"tags":["safe"],"refs":[["dim_date"],["dim_date"],["prep_charge"],["prep_charge"]],"sources":[],"metrics":[],"description":"This model is used in mart_available_to_renew to calculate which years are to be processed.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_prep/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_prep/restricted_safe/prep_renewal_fiscal_years.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_prep","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true},"created_at":1689033758.086265,"compiled_sql":"\n\nWITH dim_date AS (\n\n    SELECT * \n    FROM \"PROD\".common.dim_date\n\n), prep_charge AS (\n\n    SELECT * \n    FROM \"PROD\".restricted_safe_common_prep.prep_charge\n\n)\n\n, renewal_fiscal_years AS (\n\n    SELECT DISTINCT dim_date.fiscal_year\n    FROM prep_charge\n    INNER JOIN dim_date\n      ON prep_charge.effective_start_month <= dim_date.date_actual\n      AND (prep_charge.effective_end_month > dim_date.date_actual\n        OR prep_charge.effective_end_month IS NULL)\n      AND dim_date.day_of_month = 1\n    WHERE subscription_status IN ('Active', 'Cancelled')\n      AND charge_type = 'Recurring'\n      AND mrr != 0\n\n)\n\nSELECT *\nFROM renewal_fiscal_years","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_prep.prep_renewal_fiscal_years","label":"prep_renewal_fiscal_years"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_DATE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_ID":{"type":"NUMBER","index":1,"name":"date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"date_id"},"DATE_DAY":{"type":"DATE","index":2,"name":"date_day","comment":null,"description":"Calendar date, e.g. '2019-02-02'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"date_day"},"DATE_ACTUAL":{"type":"DATE","index":3,"name":"date_actual","comment":null,"description":"Matches `date_day`, duplicated for ease of use","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"date_actual"},"DAY_NAME":{"type":"TEXT","index":4,"name":"day_name","comment":null,"description":"Abbreviated name of the day of the week, e.g. 'Sat' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_name"},"MONTH_ACTUAL":{"type":"NUMBER","index":5,"name":"month_actual","comment":null,"description":"Number for the calendar month of the year, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_actual"},"YEAR_ACTUAL":{"type":"NUMBER","index":6,"name":"year_actual","comment":null,"description":"Calendar year, e.g. '2019' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"year_actual"},"QUARTER_ACTUAL":{"type":"NUMBER","index":7,"name":"quarter_actual","comment":null,"description":"Calendar quarter, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarter_actual"},"DAY_OF_WEEK":{"type":"NUMBER","index":8,"name":"day_of_week","comment":null,"description":"Number of the day of the week, with Sunday = 1 and Saturday = 7","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_week"},"FIRST_DAY_OF_WEEK":{"type":"DATE","index":9,"name":"first_day_of_week","comment":null,"description":"Calendar date of the first Sunday of that week, e.g. '2019-01-27' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_week"},"WEEK_OF_YEAR":{"type":"NUMBER","index":10,"name":"week_of_year","comment":null,"description":"Calendar week of year, e.g. '5' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"week_of_year"},"DAY_OF_MONTH":{"type":"NUMBER","index":11,"name":"day_of_month","comment":null,"description":"Day Number of the month, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_month"},"DAY_OF_QUARTER":{"type":"NUMBER","index":12,"name":"day_of_quarter","comment":null,"description":"Day Number from the start of the calendar quarter, e.g. '33' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_quarter"},"DAY_OF_YEAR":{"type":"NUMBER","index":13,"name":"day_of_year","comment":null,"description":"Day Number from the start of the calendar year, e.g. '33' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_year"},"FISCAL_YEAR":{"type":"NUMBER","index":14,"name":"fiscal_year","comment":null,"description":"Fiscal year for the date, e.g. '2020' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_year"},"FISCAL_QUARTER":{"type":"TEXT","index":15,"name":"fiscal_quarter","comment":null,"description":"Fiscal quarter for the date, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter"},"DAY_OF_FISCAL_QUARTER":{"type":"NUMBER","index":16,"name":"day_of_fiscal_quarter","comment":null,"description":"Day Number from the start of the fiscal quarter, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_fiscal_quarter"},"DAY_OF_FISCAL_YEAR":{"type":"NUMBER","index":17,"name":"day_of_fiscal_year","comment":null,"description":"Day Number from the start of the fiscal year, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_fiscal_year"},"MONTH_NAME":{"type":"TEXT","index":18,"name":"month_name","comment":null,"description":"The full month name for any calendar month, e.g. 'February' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_name"},"FIRST_DAY_OF_MONTH":{"type":"DATE","index":19,"name":"first_day_of_month","comment":null,"description":"The first day of a calendar month, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_month"},"LAST_DAY_OF_MONTH":{"type":"DATE","index":20,"name":"last_day_of_month","comment":null,"description":"The last day of a calendar month, e.g. '2019-02-28' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_month"},"FIRST_DAY_OF_YEAR":{"type":"DATE","index":21,"name":"first_day_of_year","comment":null,"description":"The first day of a calendar year, e.g. '2019-01-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_year"},"LAST_DAY_OF_YEAR":{"type":"DATE","index":22,"name":"last_day_of_year","comment":null,"description":"The last day of a calendar year, e.g. '2019-12-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_year"},"FIRST_DAY_OF_QUARTER":{"type":"DATE","index":23,"name":"first_day_of_quarter","comment":null,"description":"The first day of a calendar quarter, e.g. '2019-01-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_quarter"},"LAST_DAY_OF_QUARTER":{"type":"DATE","index":24,"name":"last_day_of_quarter","comment":null,"description":"The last day of a calendar quarter, e.g. '2019-03-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_quarter"},"FIRST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":25,"name":"first_day_of_fiscal_quarter","comment":null,"description":"The first day of the fiscal quarter, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_quarter"},"LAST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":26,"name":"last_day_of_fiscal_quarter","comment":null,"description":"The last day of the fiscal quarter, e.g. '2019-04-30' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_fiscal_quarter"},"FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":27,"name":"first_day_of_fiscal_year","comment":null,"description":"The first day of the fiscal year, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_year"},"LAST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":28,"name":"last_day_of_fiscal_year","comment":null,"description":"The last day of the fiscal year, e.g. '2020-01-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_fiscal_year"},"WEEK_OF_FISCAL_YEAR":{"type":"NUMBER","index":29,"name":"week_of_fiscal_year","comment":null,"description":"The week number for the fiscal year, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"week_of_fiscal_year"},"MONTH_OF_FISCAL_YEAR":{"type":"NUMBER","index":30,"name":"month_of_fiscal_year","comment":null,"description":"The month number for the fiscal year, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_of_fiscal_year"},"LAST_DAY_OF_WEEK":{"type":"DATE","index":31,"name":"last_day_of_week","comment":null,"description":"The Saturday of the week, e.g. '2019-02-02' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_week"},"QUARTER_NAME":{"type":"TEXT","index":32,"name":"quarter_name","comment":null,"description":"The name of the calendar quarter, e.g. '2019-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarter_name"},"FISCAL_QUARTER_NAME":{"type":"TEXT","index":33,"name":"fiscal_quarter_name","comment":null,"description":"The name of the fiscal quarter, e.g '2020-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":34,"name":"fiscal_quarter_name_fy","comment":null,"description":"The name of the fiscal quarter, e.g 'FY20-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name_fy"},"FISCAL_QUARTER_NUMBER_ABSOLUTE":{"type":"NUMBER","index":35,"name":"fiscal_quarter_number_absolute","comment":null,"description":"Monotonically increasing integer for each fiscal quarter. This allows for comparing the relative order of fiscal quarters.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_number_absolute"},"FISCAL_MONTH_NAME":{"type":"TEXT","index":36,"name":"fiscal_month_name","comment":null,"description":"The name of the fiscal month, e.g '2020-Feb' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_month_name"},"FISCAL_MONTH_NAME_FY":{"type":"TEXT","index":37,"name":"fiscal_month_name_fy","comment":null,"description":"The name of the fiscal month, e.g 'FY20-Feb' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_month_name_fy"},"HOLIDAY_DESC":{"type":"TEXT","index":38,"name":"holiday_desc","comment":null,"description":"The name of the holiday, if applicable","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"holiday_desc"},"IS_HOLIDAY":{"type":"BOOLEAN","index":39,"name":"is_holiday","comment":null,"description":"Whether or not it is a holiday","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_holiday"},"LAST_MONTH_OF_FISCAL_QUARTER":{"type":"DATE","index":40,"name":"last_month_of_fiscal_quarter","comment":null,"description":"Date indicating last month of fiscal quarter e.g '2020-04-01' for 2020-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_month_of_fiscal_quarter"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER":{"type":"BOOLEAN","index":41,"name":"is_first_day_of_last_month_of_fiscal_quarter","comment":null,"description":"Flag indicating date that is the first day of last month of fiscal quarter. E.g TRUE for '2020-04-01'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_day_of_last_month_of_fiscal_quarter"},"LAST_MONTH_OF_FISCAL_YEAR":{"type":"DATE","index":42,"name":"last_month_of_fiscal_year","comment":null,"description":"Date indicating last month of fiscal year e.g '2021-01-01' for 2020-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_month_of_fiscal_year"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR":{"type":"BOOLEAN","index":43,"name":"is_first_day_of_last_month_of_fiscal_year","comment":null,"description":"Flag indicating date that is the first day of last month of fiscal year. E.g TRUE for '2021-01-01'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_day_of_last_month_of_fiscal_year"},"SNAPSHOT_DATE_FPA":{"type":"DATE","index":44,"name":"snapshot_date_fpa","comment":null,"description":"8th calendar day of a month used for FP&A snapshots","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"snapshot_date_fpa"},"SNAPSHOT_DATE_BILLINGS":{"type":"DATE","index":45,"name":"snapshot_date_billings","comment":null,"description":"45 calendar day after a month begins used for Billings snapshots","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"snapshot_date_billings"},"DAYS_IN_MONTH_COUNT":{"type":"NUMBER","index":46,"name":"days_in_month_count","comment":null,"description":"Number of calendar days in the given month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_month_count"},"WEEK_OF_MONTH_NORMALISED":{"type":"NUMBER","index":47,"name":"WEEK_OF_MONTH_NORMALISED","comment":null,"display_name":"week_of_month_normalised"},"DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":48,"name":"DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"day_of_fiscal_quarter_normalised"},"WEEK_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":49,"name":"WEEK_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"week_of_fiscal_quarter_normalised"},"DAY_OF_FISCAL_YEAR_NORMALISED":{"type":"NUMBER","index":50,"name":"DAY_OF_FISCAL_YEAR_NORMALISED","comment":null,"display_name":"day_of_fiscal_year_normalised"},"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK":{"type":"NUMBER","index":51,"name":"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK","comment":null,"display_name":"is_first_day_of_fiscal_quarter_week"},"DAYS_UNTIL_LAST_DAY_OF_MONTH":{"type":"NUMBER","index":52,"name":"DAYS_UNTIL_LAST_DAY_OF_MONTH","comment":null,"display_name":"days_until_last_day_of_month"},"CURRENT_DATE_ACTUAL":{"type":"DATE","index":53,"name":"CURRENT_DATE_ACTUAL","comment":null,"display_name":"current_date_actual"},"CURRENT_FISCAL_YEAR":{"type":"NUMBER","index":54,"name":"CURRENT_FISCAL_YEAR","comment":null,"display_name":"current_fiscal_year"},"CURRENT_FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":55,"name":"CURRENT_FIRST_DAY_OF_FISCAL_YEAR","comment":null,"display_name":"current_first_day_of_fiscal_year"},"CURRENT_FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":56,"name":"CURRENT_FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"current_fiscal_quarter_name_fy"},"CURRENT_FIRST_DAY_OF_MONTH":{"type":"DATE","index":57,"name":"CURRENT_FIRST_DAY_OF_MONTH","comment":null,"display_name":"current_first_day_of_month"},"CREATED_BY":{"type":"TEXT","index":58,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":59,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":60,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":61,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":62,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":63,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 23:06UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":837632,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_date","raw_sql":"{{ config({\n    \"alias\": \"dim_date\"\n}) }}\n\nWITH dates AS (\n\n  SELECT\n    {{ dbt_utils.star(\n           from=ref('prep_date'), \n           except=['CREATED_BY','UPDATED_BY','MODEL_CREATED_DATE','MODEL_UPDATED_DATE','DBT_UPDATED_AT','DBT_CREATED_AT']\n           ) \n      }}\n  FROM {{ ref('prep_date') }}\n\n), final AS (\n\n  SELECT\n    {{ get_date_id('date_actual') }}                                AS date_id,\n    *\n  FROM dates\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@msendal\",\n    updated_by=\"@pempey\",\n    created_date=\"2020-06-01\",\n    updated_date=\"2023-01-09\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date"]},"config":{"enabled":true,"alias":"dim_date","schema":"common","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_date"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_date.sql","original_file_path":"models/common/dimensions_shared/dim_date.sql","name":"dim_date","alias":"dim_date","checksum":{"name":"sha256","checksum":"d2d82ff12c2a5541fc719664fdbab66bec108395c3e6b2549434b0f07c9bd080"},"tags":[],"refs":[["prep_date"],["prep_date"],["prep_date"],["prep_date"]],"sources":[],"metrics":[],"description":"Dimensional table representing both calendar year and fiscal year date details.\n\nThe grain of the table is a calendar day.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_date.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","alias":"dim_date"},"created_at":1689033750.6328864,"compiled_sql":"$28","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_date","label":"dim_date"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.dbt_audit","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/dbt_audit.sql","original_file_path":"macros/utils/dbt_audit.sql","name":"dbt_audit","macro_sql":"$29","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt.run_query"]},"description":"Used to append audit columns to a model.\n\nThis model assumes that the final statement in your model is a `SELECT *` from a CTE. The final SQL will still be a `SELECT *` just with 6 additional columns added to it. Further SQL DML can be added after the macro call, such as ORDER BY and GROUP BY.\n\nThere are two internally calculated date values based on when the table is created and, for an incremental model, when data was inserted.\n\n```sql\nWITH my_cte AS (...)\n\n{{ dbt_audit(\n    cte_ref=\"my_cte\", \n    created_by=\"@gitlab_user1\", \n    updated_by=\"@gitlab_user2\", \n    created_date=\"2019-02-12\", \n    updated_date=\"2020-08-20\"\n) }}\n\nORDER BY updated_at\n```","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"cte_ref","type":"string","description":"The CTE immediately preceding the macro call"},{"name":"created_by","type":"string","description":"The GitLab handle of the original model creator"},{"name":"updated_by","type":"string","description":"The GitLab handle of the model editor"},{"name":"created_date","type":"date","description":"Manually input ISO date of when model was original created"},{"name":"updated_date","type":"date","description":"Manually input ISO date of when model was updated"}],"created_at":1689033766.0350642},{"unique_id":"macro.gitlab_snowflake.simple_cte","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/simple_cte.sql","original_file_path":"macros/utils/simple_cte.sql","name":"simple_cte","macro_sql":"{% macro simple_cte(tuple_list) %}\n\nWITH{% for cte_ref in tuple_list %} {{cte_ref[0]}} AS (\n\n    SELECT * \n    FROM {{ ref(cte_ref[1]) }}\n\n)\n    {%- if not loop.last -%}\n    ,\n    {%- endif -%}\n    \n    {%- endfor -%}\n\n{%- endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":[]},"description":"$2a","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"tuple_list","type":"list","description":"List of tuples with the alias as the first item and the dbt table reference as the second item."}],"created_at":1689033766.0494742},{"unique_id":"macro.gitlab_snowflake.ref","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/override/ref.sql","original_file_path":"macros/utils/override/ref.sql","name":"ref","macro_sql":"{% macro ref(model_name) %}\n\n  {% set relation = builtins.ref(model_name) %}\n\n  {% if is_table_sampled(model_name) %}\n    {% set new_relation = get_sample_relation(relation) %}\n  {% else %}\n    {% set new_relation = relation %}\n  {% endif %}\n  \n  {% do return(new_relation) %}\n\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.is_table_sampled","macro.gitlab_snowflake.get_sample_relation"]},"description":"This macro will return a the normal relation unless one of the following conditions are met:\n- The table is configured to be sampled, will return relation with the sample_suffix variable appended to the table name","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/override/override.yml","arguments":[],"created_at":1689033766.060527},{"unique_id":"macro.dbt_utils.get_column_values","package_name":"dbt_utils","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt/dbt_packages/dbt_utils","path":"macros/sql/get_column_values.sql","original_file_path":"macros/sql/get_column_values.sql","name":"get_column_values","macro_sql":"{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt_utils.default__get_column_values"]},"description":"","meta":{},"docs":{"show":true},"patch_path":null,"arguments":[],"created_at":1689033675.9857414},{"unique_id":"macro.dbt_utils.group_by","package_name":"dbt_utils","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt/dbt_packages/dbt_utils","path":"macros/sql/groupby.sql","original_file_path":"macros/sql/groupby.sql","name":"group_by","macro_sql":"{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt_utils.default__group_by"]},"description":"","meta":{},"docs":{"show":true},"patch_path":null,"arguments":[],"created_at":1689033675.9973366},{"unique_id":"macro.dbt_utils.surrogate_key","package_name":"dbt_utils","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt/dbt_packages/dbt_utils","path":"macros/sql/surrogate_key.sql","original_file_path":"macros/sql/surrogate_key.sql","name":"surrogate_key","macro_sql":"{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt_utils.default__surrogate_key"]},"description":"","meta":{},"docs":{"show":true},"patch_path":null,"arguments":[],"created_at":1689033676.082154}]},"node":{"resource_type":"model","name":"mart_available_to_renew","unique_id":"model.gitlab_snowflake.mart_available_to_renew"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L2b",null,{"versions":{"Source":"$2c","Compiled":"$2d"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
