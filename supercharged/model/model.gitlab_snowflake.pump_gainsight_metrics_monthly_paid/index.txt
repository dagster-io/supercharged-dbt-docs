1:HL["/supercharged-dbt-docs/supercharged/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css",{"as":"style"}]
0:["3_N3LAWgtmWGg2et9V1N1",[[["",{"children":["model",{"children":[["id","model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid","d"],{"children":["__PAGE__?{\"id\":\"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/supercharged-dbt-docs/supercharged/_next/static/css/26b34a05c1bebf2f.css","precedence":"next"}]],"$L4"]]]]
3:["$L5",null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Modern DBT Docs"}],["$","meta","2",{"name":"description","content":"built using React Server Components"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/supercharged-dbt-docs/supercharged/favicon.ico","type":"image/x-icon","sizes":"any"}],["$","meta","5",{"name":"next-size-adjust"}]]
7:"$Sreact.suspense"
9:I{"id":9265,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"SearchBar","async":false}
a:I{"id":7767,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
b:I{"id":7920,"chunks":["272:static/chunks/webpack-1cf6fcb2bee1c154.js","971:static/chunks/fd9d1056-e2bf51eba929fbd7.js","596:static/chunks/596-802dfd4ebffb6644.js"],"name":"default","async":false}
6:T7b2,M36.9843 63.4334C36.9851 63.7184 37.0447 64.0001 37.1592 64.261C37.2738 64.5219 37.4409 64.7564 37.65 64.9498C37.8592 65.1432 38.106 65.2913 38.375 65.3851C38.644 65.4788 38.9294 65.516 39.2134 65.4944C50.0091 64.7216 60.2053 57.0815 63.4605 45.1484C63.6315 44.4621 64.1465 44.1179 64.8326 44.1179C65.1843 44.1321 65.5162 44.2843 65.7565 44.5416C65.9967 44.7989 66.126 45.1406 66.1161 45.4926C66.1161 48.1533 62.696 55.1071 57.8051 59.1425C57.5559 59.3522 57.3571 59.6155 57.2237 59.9127C57.0903 60.21 57.0256 60.5335 57.0346 60.8593C57.0395 61.1241 57.0967 61.3854 57.2028 61.628C57.3089 61.8707 57.4619 62.0901 57.6529 62.2735C57.8439 62.4569 58.0693 62.6008 58.316 62.697C58.5627 62.7931 58.826 62.8395 59.0907 62.8337C59.5192 62.8337 60.2053 62.5761 61.0623 61.8032C64.4825 58.7117 71.001 50.0412 71.001 40.5112C71.001 26.5393 60.1992 14.4996 45.1243 14.4996C31.6729 14.4996 20.0202 25.4887 20.0202 38.1947C20.0202 46.6076 26.7036 52.9595 35.5277 52.9595C42.2976 52.9595 48.5525 48.1533 50.2666 41.5417C50.4377 40.8554 50.9507 40.5112 51.6367 40.5112C51.9886 40.5254 52.3207 40.6776 52.5613 40.9348C52.8019 41.1921 52.9316 41.5337 52.9223 41.8859C52.9223 44.8908 47.2669 55.3707 35.7852 55.3707C33.043 55.3707 29.6168 54.5979 27.2167 53.2232C26.8953 53.0675 26.5454 52.9798 26.1886 52.9656C25.9154 52.9551 25.643 53.0013 25.3886 53.1012C25.1341 53.2011 24.903 53.3526 24.7099 53.5462C24.5168 53.7397 24.3658 53.9712 24.2664 54.2259C24.167 54.4807 24.1214 54.7533 24.1325 55.0266C24.1436 55.3766 24.2438 55.718 24.4237 56.0185C24.6036 56.3189 24.8572 56.5684 25.1605 56.7434C28.3312 58.5548 32.1015 59.4906 35.9562 59.4906C45.5528 59.4906 54.2924 52.9656 56.8636 43.3511C57.0346 42.6648 57.5496 42.3206 58.2336 42.3206C58.5855 42.3348 58.9177 42.4869 59.1582 42.7442C59.3988 43.0014 59.5285 43.3431 59.5192 43.6953C59.5192 47.6441 52.4938 60.3501 38.9559 61.3805C38.4321 61.4194 37.9411 61.6505 37.5772 62.0294C37.2134 62.4083 37.0022 62.9083 36.9843 63.4334V63.4334Z5:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]}],["$","body",null,{"className":"__className_5f725a","children":[["$","main",null,{"className":"mx-8","children":["$","div",null,{"children":[["$","div",null,{}],["$","div",null,{"className":"app app-row","children":[["$","div",null,{"className":"app-menu app-column","children":[["$","div",null,{"className":"app-overlay","data-toggle":".app-menu"}],["$","div",null,{"className":"app-header app-navbar app-shadow app-pad","children":["$","div",null,{"className":"app-row app-middle","children":["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"logo","style":{"display":"flex","flexDirection":"row","alignItems":"center"},"children":[["$","span",null,{"style":{"color":"#FF694A","fontWeight":"bold"},"children":"Supercharged"}],"Â by",["$","a",null,{"href":"https://dagster.io","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","style":{"height":"46px","width":"168"},"viewBox":"0 0 280 80","fill":"none","children":[["$","path",null,{"d":"M107.498 15.2865H111.999V55.5398H107.498V51.9894H107.386C105.697 54.1852 102.996 56.3247 98.3791 56.3247C91.1738 56.3247 85.4316 50.6389 85.4316 41.1814C85.4316 31.7239 91.1738 26.0381 98.3791 26.0381C102.996 26.0381 105.697 28.0649 107.386 30.5425H107.498V15.2865ZM107.498 41.1814C107.498 34.4269 104.178 29.9789 98.8299 29.9789C92.9187 29.9789 89.934 35.552 89.934 41.1814C89.934 46.8108 92.9187 52.3839 98.8299 52.3839C104.178 52.3839 107.498 47.9359 107.498 41.1814Z","fill":"#163B36"}],["$","path",null,{"d":"M128.807 29.9789C123.346 29.9789 121.543 31.5549 121.263 35.7211H116.759C117.041 30.2044 120.474 26.0381 128.807 26.0381C134.267 26.0381 139.164 28.1776 139.164 35.0951V49.057C139.164 51.3091 139.566 52.5469 142.428 52.2088V55.3626C141.582 55.6758 140.685 55.8281 139.784 55.8115C137.081 55.8115 135.448 55.0809 134.661 51.927H134.541C132.739 54.63 129.531 56.3187 124.803 56.3187C119.005 56.3187 115.344 52.9978 115.344 48.1553C115.344 41.6262 120.184 39.9376 127.621 38.5307C132.464 37.6291 134.665 37.0092 134.665 34.1391C134.661 31.893 133.422 29.9789 128.807 29.9789ZM134.661 44.446V39.6619C133.816 40.5052 131.057 41.2941 128.02 41.914C122.445 43.0955 119.848 44.5023 119.848 47.9359C119.848 50.7536 121.537 52.3839 125.254 52.3839C130.608 52.3839 134.661 49.9627 134.661 44.446Z","fill":"#163B36"}],["$","path",null,{"d":"M165.133 26.8271H169.638V53.9598C169.638 61.6079 164.797 65.5004 156.915 65.5004C149.034 65.5004 144.36 61.3342 143.912 56.4434H148.428C148.992 59.3699 151.357 61.5657 156.704 61.5657C162.052 61.5657 165.147 59.2571 165.147 53.9176V49.5702H165.035C163.346 52.0458 160.645 54.0725 155.915 54.0725C148.823 54.0725 143.08 49.5138 143.08 40.0563C143.08 30.5988 148.823 26.0381 155.915 26.0381C160.645 26.0381 163.346 28.1776 165.035 30.3734H165.147L165.133 26.8271ZM165.133 40.0563C165.133 33.2998 161.812 29.9789 156.465 29.9789C150.553 29.9789 147.571 34.4269 147.571 40.0563C147.571 45.6858 150.553 50.1317 156.465 50.1317C161.82 50.1317 165.133 46.8108 165.133 40.0563V40.0563Z","fill":"#163B36"}],["$","path",null,{"d":"M197.314 47.6562C197.314 52.8891 192.529 56.3247 185.998 56.3247C177.217 56.3247 173.164 52.1585 172.882 45.9675H177.386C177.666 49.1757 178.795 52.3839 185.998 52.3839C190.895 52.3839 192.809 49.85 192.809 47.9359C192.809 43.7717 189.037 43.5463 184.93 42.5319C180.538 41.4632 174.007 40.956 174.007 34.2015C174.007 29.6972 178.004 26.0381 184.761 26.0381C191.91 26.0381 195.738 30.0916 196.186 35.0448H191.684C191.233 32.851 190.165 29.9789 184.761 29.9789C180.707 29.9789 178.521 31.6112 178.521 33.8634C178.521 37.2406 182.406 37.5224 186.403 38.4804C191.515 39.7182 197.314 40.5615 197.314 47.6562Z","fill":"#163B36"}],["$","path",null,{"d":"M212.535 30.7678H206.9V48.0486C206.9 51.3151 208.711 51.8726 212.535 51.5969V55.5397C211.425 55.7721 210.293 55.8854 209.158 55.8778C205.334 55.8778 202.402 54.3583 202.402 48.5034V30.7719H198.175V26.827H202.402V17.2568H206.906V26.827H212.541L212.535 30.7678Z","fill":"#163B36"}],["$","path",null,{"d":"M236.47 46.6981H240.974C239.509 52.0458 235.401 56.3247 228.252 56.3247C219.525 56.3247 214.234 50.1881 214.234 41.1814C214.234 31.6112 219.638 26.0381 228.027 26.0381C237.033 26.0381 241.425 32.1748 241.425 42.3629H218.738C218.738 47.5435 221.834 52.3839 228.083 52.3839C233.825 52.3839 235.963 48.6685 236.47 46.6981ZM218.738 38.4321H236.921C236.921 33.8151 233.431 29.9789 228.027 29.9789C222.623 29.9789 218.738 33.803 218.738 38.4321Z","fill":"#163B36"}],["$","path",null,{"d":"M260 26.2071V30.7115H259.887C253.648 29.7052 249.305 34.0887 249.305 40.2253V55.5397H244.8V26.827H249.305V32.5128H249.417C250.937 28.7411 253.242 26.0381 257.355 26.0381C258.24 26.0289 259.124 26.0854 260 26.2071V26.2071Z","fill":"#163B36"}],["$","path",null,{"d":"$6","fill":"#4F43DD"}],["$","path",null,{"d":"M50.3993 30.5546C52.2472 30.5408 54.061 31.0517 55.6302 32.0279C55.7888 31.1596 55.8762 30.2798 55.8917 29.3973C55.8917 25.3217 52.7854 21.6707 49.0031 21.6707C46.0618 21.6707 44.2229 24.1081 44.2229 27.119C44.2089 28.7455 44.7802 30.3229 45.8324 31.563C47.258 30.883 48.8201 30.5381 50.3993 30.5546V30.5546Z","fill":"white"}],["$","path",null,{"d":"M59.2616 45.3195C59.7867 43.5242 60.0181 42.2784 60.0181 41.4693C60.0021 41.1199 59.8524 40.79 59.6 40.548C59.3475 40.306 59.0117 40.1703 58.6621 40.1691C58.3364 40.1752 58.022 40.29 57.7691 40.4953C57.5161 40.7006 57.339 40.9847 57.2659 41.3023C57.123 41.892 56.8172 43.49 56.5154 44.5044C56.6402 44.1247 56.7542 43.7389 56.8575 43.3471C57.0285 42.6588 57.5435 42.3166 58.2275 42.3166C58.5792 42.3303 58.9114 42.482 59.152 42.7389C59.3926 42.9959 59.5224 43.3373 59.5131 43.6893C59.497 44.2426 59.4084 44.7913 59.2496 45.3215L59.2616 45.3195Z","fill":"#352D8E"}],["$","path",null,{"d":"M66.5446 43.4437C66.5282 43.0948 66.3786 42.7655 66.1267 42.5237C65.8748 42.2818 65.5398 42.1457 65.1907 42.1436C64.8653 42.1501 64.5514 42.2651 64.2988 42.4704C64.0463 42.6756 63.8694 42.9594 63.7964 43.2767C63.6516 43.8805 63.3397 45.5027 63.0339 46.5151H63.048C63.1969 46.0642 63.3357 45.6074 63.4504 45.1424C63.6214 44.4541 64.1364 44.1119 64.8225 44.1119C65.174 44.1256 65.5059 44.2774 65.7463 44.5344C65.9866 44.7914 66.1159 45.1328 66.1061 45.4846C66.0962 45.9119 66.0375 46.3366 65.931 46.7505C66.3575 45.2531 66.5446 44.1703 66.5446 43.4437Z","fill":"#352D8E"}],["$","path",null,{"d":"M50.3993 30.5546C51.3176 30.5527 52.232 30.6753 53.1174 30.9189C53.5822 30.2847 53.8145 29.5097 53.7752 28.7243C53.7358 27.9389 53.4272 27.191 52.9013 26.6065C52.3754 26.022 51.6642 25.6366 50.8876 25.5151C50.1109 25.3937 49.3161 25.5435 48.637 25.9396L50.0453 28.2582L47.4077 27.117C47.0504 27.6937 46.8713 28.3631 46.8928 29.0412C46.9143 29.7193 47.1354 30.376 47.5284 30.929C48.4644 30.6766 49.43 30.5507 50.3993 30.5546V30.5546Z","fill":"#163B36"}],["$","path",null,{"d":"M30.0794 45.4765C31.1906 45.4765 32.0913 44.5754 32.0913 43.4638C32.0913 42.3523 31.1906 41.4512 30.0794 41.4512C28.9683 41.4512 28.0676 42.3523 28.0676 43.4638C28.0676 44.5754 28.9683 45.4765 30.0794 45.4765Z","fill":"#352D8E"}],["$","path",null,{"d":"M30.0794 37.4259C31.1906 37.4259 32.0913 36.5248 32.0913 35.4132C32.0913 34.3017 31.1906 33.4006 30.0794 33.4006C28.9683 33.4006 28.0676 34.3017 28.0676 35.4132C28.0676 36.5248 28.9683 37.4259 30.0794 37.4259Z","fill":"#352D8E"}],["$","path",null,{"d":"M26.0558 41.4512C27.1669 41.4512 28.0676 40.5501 28.0676 39.4385C28.0676 38.3269 27.1669 37.4258 26.0558 37.4258C24.9446 37.4258 24.0439 38.3269 24.0439 39.4385C24.0439 40.5501 24.9446 41.4512 26.0558 41.4512Z","fill":"#352D8E"}],["$","path",null,{"d":"M35.1091 52.9556H35.5115C42.2815 52.9556 48.5364 48.1493 50.2505 41.5377C50.4215 40.8514 50.9345 40.5072 51.6205 40.5072C51.9724 40.5214 52.3046 40.6736 52.5451 40.9308C52.7857 41.1881 52.9154 41.5297 52.9061 41.8819C52.8754 42.5844 52.7166 43.2754 52.4374 43.9207C52.4859 43.8458 52.5283 43.767 52.5641 43.6852C53.0732 42.5212 53.3362 41.2645 53.3367 39.994C53.3367 38.0196 51.9646 36.7315 49.995 36.7315C46.5607 36.7315 45.8726 39.7304 44.4241 42.9365C42.9212 46.2655 40.1609 49.8661 33.1999 49.8661C25.9672 49.8661 18.5354 44.8003 20.3481 34.4994C20.3702 34.3706 20.3883 34.2559 20.4024 34.1492C20.1368 35.48 20.002 36.8336 20 38.1907C20.0201 46.4828 26.4963 52.7623 35.1091 52.9556Z","fill":"#352D8E"}]]}]}]]}]}]}]}],["$","div",null,{"className":"app-body","children":["$","div",null,{"className":"app-scroll app-pad app-flush-right no-x-overflow","children":["$","$7",null,{"children":"$L8"}]}]}]]}],["$","div",null,{"className":"app-content app-column","children":[["$","div",null,{"className":"app-header app-navbar app-shadow","children":["$","div",null,{"className":"app-frame app-pad app-row app-middle","children":["$","$L9",null,{}]}]}],["$","div",null,{"className":"app-body","children":["$","$7",null,{"fallback":["$","div",null,{"style":{"width":"100%","display":"grid","height":"100%","placeItems":"center"},"children":["$","div",null,{"className":"spinner spinner--active","role":"progressbar","aria-busy":"true"}]}],"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","model","children",["id","model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",null],"segment":"__PAGE__?{\"id\":\"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid\"}"},"styles":[]}],"segment":["id","model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid","d"]},"styles":[]}],"segment":"model"},"styles":[]}]}]}]]}]]}]]}]}],["$","div",null,{"style":{"display":"none"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 16 16","children":[["$","title",null,{"children":"icons"}],["$","g",null,{"id":"icn","children":["$","rect",null,{"width":"16","height":"16","fill":"none"}]}],["$","g",null,{"id":"icn-menu","children":["$","path",null,{"d":"M14.5,8a.5.5,0,0,1-.5.5H2a.5.5,0,0,1,0-1H14A.5.5,0,0,1,14.5,8ZM2,3H14a.5.5,0,0,0,0-1H2A.5.5,0,0,0,2,3ZM14,13H2a.5.5,0,0,0,0,1H14a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dbt","children":["$","path",null,{"d":"M12.6,9.26h0L10.9,6.33a3.48,3.48,0,0,0-.53-.7h0A3.35,3.35,0,0,0,8,4.65a3.76,3.76,0,0,0-.82.11A4,4,0,0,1,12,6.53l.38.66a2.4,2.4,0,0,1,.21-.46l2.22-3.86a1.2,1.2,0,0,0-.2-1.5,1.21,1.21,0,0,0-1.5-.19h0L9.27,3.4a2.51,2.51,0,0,1-2.54,0L2.88,1.18a1.19,1.19,0,0,0-1.5.2,1.19,1.19,0,0,0-.2,1.49L3.4,6.73a2.49,2.49,0,0,1,0,2.53L1.18,13.12a1.2,1.2,0,0,0,.2,1.5,1.2,1.2,0,0,0,1.5.19l3.85-2.22a2.29,2.29,0,0,1,.46-.2L6.54,12a3.89,3.89,0,0,1-1.46-1.47,4.12,4.12,0,0,1-.29-3.37,3.47,3.47,0,0,0,.33,2.51,3.13,3.13,0,0,0,1.21,1.21l2.94,1.7h0l3.85,2.22a1.24,1.24,0,0,0,1.7-1.69Zm.81-7.35a.48.48,0,0,1,.68.68.5.5,0,0,1-.68,0A.48.48,0,0,1,13.41,1.91ZM2.59,2.59a.48.48,0,0,1-.68-.68.5.5,0,0,1,.68,0A.48.48,0,0,1,2.59,2.59Zm0,11.49a.48.48,0,0,1-.68,0,.48.48,0,0,1,.68-.68A.48.48,0,0,1,2.59,14.08Zm6.83-5.9a1,1,0,0,0-.27-.48A1,1,0,0,0,7.7,9.14a1,1,0,0,0,.49.27A1.39,1.39,0,0,1,7,9a1.43,1.43,0,1,1,2.43-.83Zm4.67,5.9a.48.48,0,0,1-.68-.68.48.48,0,0,1,.68.68Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc-on","children":["$","path",null,{"d":"M13.71,4.71,10.29,1.29A1,1,0,0,0,9.59,1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41A1,1,0,0,0,13.71,4.71ZM5,4H9V5H5Zm6,8H5V11h6Zm0-2H5V9h6Zm0-2H5V7h6Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-doc","children":[["$","path",null,{"d":"M9.59,2h0L13,5.41V14H3V2H9.59m0-1H3A1,1,0,0,0,2,2V14a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V5.41a1,1,0,0,0-.29-.7L10.29,1.29A1,1,0,0,0,9.59,1Z","transform":"translate(0 0)"}],["$","rect",null,{"x":"5","y":"11","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 11 5 11 5 12 11 12 11 11 11 11"}],["$","rect",null,{"x":"5","y":"9","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 9 5 9 5 10 11 10 11 9 11 9"}],["$","rect",null,{"x":"5","y":"7","width":"6","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"11 7 5 7 5 8 11 8 11 7 11 7"}],["$","rect",null,{"x":"5","y":"4","width":"4","height":"1","fill":"#fff"}],["$","polygon",null,{"points":"9 4 5 4 5 5 9 5 9 4 9 4"}]]}],["$","g",null,{"id":"icn-down","children":["$","path",null,{"d":"M8,10.5a.47.47,0,0,1-.35-.15l-3-3a.49.49,0,0,1,.7-.7L8,9.29l2.65-2.64a.49.49,0,0,1,.7.7l-3,3A.47.47,0,0,1,8,10.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-up","children":["$","path",null,{"d":"M11,9.5a.47.47,0,0,1-.35-.15L8,6.71,5.35,9.35a.49.49,0,0,1-.7-.7l3-3a.48.48,0,0,1,.7,0l3,3a.48.48,0,0,1,0,.7A.47.47,0,0,1,11,9.5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-left","children":["$","path",null,{"d":"M9.5,5a.47.47,0,0,1-.15.35L6.71,8l2.64,2.65a.49.49,0,0,1-.7.7l-3-3a.48.48,0,0,1,0-.7l3-3a.48.48,0,0,1,.7,0A.47.47,0,0,1,9.5,5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-right","children":["$","path",null,{"d":"M10.5,8a.47.47,0,0,1-.15.35l-3,3a.49.49,0,0,1-.7-.7L9.29,8,6.65,5.35a.49.49,0,0,1,.7-.7l3,3A.47.47,0,0,1,10.5,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir","children":["$","path",null,{"d":"M14,4H8.41a1,1,0,0,1-.7-.29L6.29,2.29A1,1,0,0,0,5.59,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V5A1,1,0,0,0,14,4ZM2,3H5.59l1,1H2ZM14,13H2V5H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5ZM3,4H2V3H3Zm9,9h1v1H12Zm0-5h1V9H12Zm0-5h1V4H12Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-tree-on","children":["$","path",null,{"d":"M14,5V2H11V3H4V2H1V5H4V4H7V14h4v1h3V12H11v1H8V9h3v1h3V7H11V8H8V4h3V5Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-dir-on","children":["$","path",null,{"d":"M14.88,7H14V5a1,1,0,0,0-1-1H7.41a1,1,0,0,1-.7-.29L5.29,2.29A1,1,0,0,0,4.59,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H13.27a1,1,0,0,0,1-.69l1.61-5A1,1,0,0,0,14.88,7ZM4.59,3,6,4.41A2,2,0,0,0,7.41,5H13V7H3a1,1,0,0,0-1,.69l-1,3.2V3Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db-on","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1Zm5,10.48c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3c0,.83-2.24,1.5-5,1.5S3,9.33,3,8.5V8c1.51.91,4.28,1,5,1s3.49-.07,5-1Zm0-3C13,6.33,10.76,7,8,7S3,6.33,3,5.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-db","children":["$","path",null,{"d":"M8,1C7,1,2,1.12,2,3.5v9C2,14.88,7,15,8,15s6-.12,6-2.5v-9C14,1.12,9,1,8,1ZM3,8c1.51.91,4.28,1,5,1s3.49-.07,5-1V9.5c0,.83-2.24,1.5-5,1.5s-5-.67-5-1.5ZM8,8C5.24,8,3,7.33,3,6.5V5c1.51.91,4.28,1,5,1s3.49-.07,5-1V6.5C13,7.33,10.76,8,8,8ZM8,2c2.76,0,5,.67,5,1.5S10.76,5,8,5,3,4.33,3,3.5,5.24,2,8,2ZM8,14c-2.76,0-5-.67-5-1.5V11c1.51.91,4.28,1,5,1s3.49-.07,5-1V12.5C13,13.33,10.76,14,8,14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-close","children":["$","path",null,{"d":"M12.35,11.65a.48.48,0,0,1,0,.7.48.48,0,0,1-.7,0L8,8.71,4.35,12.35a.48.48,0,0,1-.7,0,.48.48,0,0,1,0-.7L7.29,8,3.65,4.35a.49.49,0,0,1,.7-.7L8,7.29l3.65-3.64a.49.49,0,0,1,.7.7L8.71,8Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-search","children":["$","path",null,{"d":"M6.5,1A5.5,5.5,0,1,0,12,6.5,5.5,5.5,0,0,0,6.5,1Zm0,10A4.5,4.5,0,1,1,11,6.5,4.51,4.51,0,0,1,6.5,11Zm8.85,4.35a.48.48,0,0,1-.7,0l-3-3a.49.49,0,0,1,.7-.7l3,3A.48.48,0,0,1,15.35,15.35Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-more","children":["$","path",null,{"d":"M8,6a2,2,0,1,0,2,2A2,2,0,0,0,8,6ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,6A2,2,0,1,0,4,8,2,2,0,0,0,2,6ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9ZM14,6a2,2,0,1,0,2,2A2,2,0,0,0,14,6Zm0,3a1,1,0,1,1,1-1A1,1,0,0,1,14,9Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-flow","children":[["$","path",null,{"d":"M4,3V2H1V5H4V4H7v9a1,1,0,0,0,1,1h5V13H8V9h5V8H8V4h5V3H4ZM3,4H2V3H3Z","transform":"translate(0 0)"}],["$","polygon",null,{"points":"13 1.5 13 5.5 15 3.5 13 1.5"}],["$","polygon",null,{"points":"13 6.5 13 10.5 15 8.5 13 6.5"}],["$","polygon",null,{"points":"13 11.5 13 15.5 15 13.5 13 11.5"}]]}],["$","g",null,{"id":"icn-expand","children":["$","path",null,{"d":"M6,2.5a.5.5,0,0,1-.5.5H3V5.5a.5.5,0,0,1-1,0v-3A.5.5,0,0,1,2.5,2h3A.5.5,0,0,1,6,2.5ZM13.5,2h-3a.5.5,0,0,0,0,1H13V5.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,13.5,2Zm0,8a.5.5,0,0,0-.5.5V13H10.5a.5.5,0,0,0,0,1h3a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,13.5,10Zm-8,3H3V10.5a.5.5,0,0,0-1,0v3a.5.5,0,0,0,.5.5h3a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-contract","children":["$","path",null,{"d":"M6,2.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1,0-1H5V2.5a.5.5,0,0,1,1,0ZM10.5,6h3a.5.5,0,0,0,0-1H11V2.5a.5.5,0,0,0-1,0v3A.5.5,0,0,0,10.5,6Zm3,4h-3a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,1,0V11h2.5a.5.5,0,0,0,0-1Zm-8,0h-3a.5.5,0,0,0,0,1H5v2.5a.5.5,0,0,0,1,0v-3A.5.5,0,0,0,5.5,10Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-filter","children":["$","path",null,{"d":"M14.5,4.5A.5.5,0,0,1,14,5H2A.5.5,0,0,1,2,4H14A.5.5,0,0,1,14.5,4.5ZM12,8H4A.5.5,0,0,0,4,9h8a.5.5,0,0,0,0-1Zm-2,4H6a.5.5,0,0,0,0,1h4a.5.5,0,0,0,0-1Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-v","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2Zm0,6H2V3H14Z","transform":"translate(0 0)"}]}],["$","g",null,{"id":"icn-split-h","children":["$","path",null,{"d":"M14,2H2A1,1,0,0,0,1,3V13a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V3A1,1,0,0,0,14,2ZM2,13V3H8V13Z","transform":"translate(0 0)"}]}]]}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","children":[["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-activity","children":["$","polyline",null,{"points":"22 12 18 12 15 21 9 3 6 12 2 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-airplay","children":[["$","path",null,{"d":"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"}],["$","polygon",null,{"points":"12 15 17 21 7 21 12 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-octagon","children":[["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-alert-triangle","children":[["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"13"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-center","children":[["$","line",null,{"x1":"18","y1":"10","x2":"6","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"18","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-justify","children":[["$","line",null,{"x1":"21","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-left","children":[["$","line",null,{"x1":"17","y1":"10","x2":"3","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"17","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-align-right","children":[["$","line",null,{"x1":"21","y1":"10","x2":"7","y2":"10"}],["$","line",null,{"x1":"21","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"21","y1":"14","x2":"3","y2":"14"}],["$","line",null,{"x1":"21","y1":"18","x2":"7","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-anchor","children":[["$","circle",null,{"cx":"12","cy":"5","r":"3"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"8"}],["$","path",null,{"d":"M5 12H2a10 10 0 0 0 20 0h-3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-aperture","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"14.31","y1":"8","x2":"20","y2":"17.94"}],["$","line",null,{"x1":"9.69","y1":"8","x2":"21.17","y2":"8"}],["$","line",null,{"x1":"7.38","y1":"12","x2":"13.12","y2":"2"}],["$","line",null,{"x1":"9.69","y1":"16","x2":"4","y2":"6"}],["$","line",null,{"x1":"14.31","y1":"16","x2":"2.83","y2":"16"}],["$","line",null,{"x1":"16.62","y1":"12","x2":"10.88","y2":"21.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-archive","children":[["$","polyline",null,{"points":"21 8 21 21 3 21 3 8"}],["$","rect",null,{"x":"1","y":"3","width":"22","height":"5"}],["$","line",null,{"x1":"10","y1":"12","x2":"14","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"8 12 12 16 16 12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-left","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","polyline",null,{"points":"17 17 7 17 7 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down-right","children":[["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}],["$","polyline",null,{"points":"17 7 17 17 7 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-down","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","polyline",null,{"points":"19 12 12 19 5 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 8 8 12 12 16"}],["$","line",null,{"x1":"16","y1":"12","x2":"8","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-left","children":[["$","line",null,{"x1":"19","y1":"12","x2":"5","y2":"12"}],["$","polyline",null,{"points":"12 19 5 12 12 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 16 16 12 12 8"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-right","children":[["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}],["$","polyline",null,{"points":"12 5 19 12 12 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"16 12 12 8 8 12"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-left","children":[["$","line",null,{"x1":"17","y1":"17","x2":"7","y2":"7"}],["$","polyline",null,{"points":"7 17 7 7 17 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up-right","children":[["$","line",null,{"x1":"7","y1":"17","x2":"17","y2":"7"}],["$","polyline",null,{"points":"7 7 17 7 17 17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-arrow-up","children":[["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"5"}],["$","polyline",null,{"points":"5 12 12 5 19 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-at-sign","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","path",null,{"d":"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-award","children":[["$","circle",null,{"cx":"12","cy":"8","r":"7"}],["$","polyline",null,{"points":"8.21 13.89 7 23 12 20 17 23 15.79 13.88"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gauge","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","line",null,{"x1":"13.414","y1":"10.586","x2":"21","y2":"3"}],["$","path",null,{"d":"M4.929,19.071a10,10,0,0,1,10.692-16.4"}],["$","line",null,{"x1":"19","y1":"19","x2":"19","y2":"19"}],["$","line",null,{"x1":"22","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"21.239","y1":"15.827","x2":"21.239","y2":"15.827"}],["$","line",null,{"x1":"21.239","y1":"8.173","x2":"21.239","y2":"8.173"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-2","children":[["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"10"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart","children":[["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"10"}],["$","line",null,{"x1":"18","y1":"20","x2":"18","y2":"4"}],["$","line",null,{"x1":"6","y1":"20","x2":"6","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bar-chart-alt","children":[["$","line",null,{"x1":"3","y1":"20","x2":"3","y2":"15"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"9"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"11"}],["$","line",null,{"x1":"21","y1":"20","x2":"21","y2":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery-charging","children":[["$","path",null,{"d":"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}],["$","polyline",null,{"points":"11 6 7 12 13 12 9 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-battery","children":[["$","rect",null,{"x":"1","y":"6","width":"18","height":"12","rx":"2","ry":"2"}],["$","line",null,{"x1":"23","y1":"13","x2":"23","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell-off","children":[["$","path",null,{"d":"M8.56 2.9A7 7 0 0 1 19 9v4m-2 4H2a3 3 0 0 0 3-3V9a7 7 0 0 1 .78-3.22M13.73 21a2 2 0 0 1-3.46 0"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bell","children":["$","path",null,{"d":"M22 17H2a3 3 0 0 0 3-3V9a7 7 0 0 1 14 0v5a3 3 0 0 0 3 3zm-8.27 4a2 2 0 0 1-3.46 0"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bluetooth","children":["$","polyline",null,{"points":"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bold","children":[["$","path",null,{"d":"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}],["$","path",null,{"d":"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book-open","children":[["$","path",null,{"d":"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"}],["$","path",null,{"d":"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-book","children":[["$","path",null,{"d":"M4 19.5A2.5 2.5 0 0 1 6.5 17H20"}],["$","path",null,{"d":"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-bookmark","children":["$","path",null,{"d":"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-box","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-briefcase","children":[["$","rect",null,{"x":"2","y":"7","width":"20","height":"14","rx":"2","ry":"2"}],["$","path",null,{"d":"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-calendar","children":[["$","rect",null,{"x":"3","y":"4","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"16","y1":"2","x2":"16","y2":"6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"6"}],["$","line",null,{"x1":"3","y1":"10","x2":"21","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-camera","children":[["$","path",null,{"d":"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"}],["$","circle",null,{"cx":"12","cy":"13","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cast","children":[["$","path",null,{"d":"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"}],["$","line",null,{"x1":"2","y1":"20","x2":"2","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-circle","children":[["$","path",null,{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","polyline",null,{"points":"22 4 12 14 9 11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check-square","children":[["$","polyline",null,{"points":"9 11 12 14 22 4"}],["$","path",null,{"d":"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-check","children":["$","polyline",null,{"points":"20 6 9 17 4 12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-down","children":["$","polyline",null,{"points":"6 10 12 16 18 10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-left","children":["$","polyline",null,{"points":"14 18 8 12 14 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-right","children":["$","polyline",null,{"points":"11 18 17 12 11 6"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevron-up","children":["$","polyline",null,{"points":"18 14 12 8 6 14"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-down","children":[["$","polyline",null,{"points":"7 13 12 18 17 13"}],["$","polyline",null,{"points":"7 6 12 11 17 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-left","children":[["$","polyline",null,{"points":"11 17 6 12 11 7"}],["$","polyline",null,{"points":"18 17 13 12 18 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-right","children":[["$","polyline",null,{"points":"13 17 18 12 13 7"}],["$","polyline",null,{"points":"6 17 11 12 6 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chevrons-up","children":[["$","polyline",null,{"points":"17 11 12 6 7 11"}],["$","polyline",null,{"points":"17 18 12 13 7 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-chrome","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"21.17","y1":"8","x2":"12","y2":"8"}],["$","line",null,{"x1":"4","y1":"6","x2":"8.54","y2":"14"}],["$","line",null,{"x1":"10.88","y1":"22","x2":"15.46","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-circle","children":["$","circle",null,{"cx":"12","cy":"12","r":"10"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clipboard","children":[["$","path",null,{"d":"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}],["$","rect",null,{"x":"8","y":"2","width":"8","height":"4","rx":"1","ry":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-clock","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polyline",null,{"points":"12 6 12 12 16 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-drizzle","children":[["$","line",null,{"x1":"8","y1":"19","x2":"8","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"15"}],["$","line",null,{"x1":"16","y1":"19","x2":"16","y2":"21"}],["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"15"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"17"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-lightning","children":[["$","path",null,{"d":"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"}],["$","polyline",null,{"points":"13 11 9 17 15 17 11 23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-off","children":[["$","path",null,{"d":"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-rain","children":[["$","line",null,{"x1":"16","y1":"13","x2":"16","y2":"21"}],["$","line",null,{"x1":"8","y1":"13","x2":"8","y2":"21"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"23"}],["$","path",null,{"d":"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud-snow","children":[["$","path",null,{"d":"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"}],["$","line",null,{"x1":"8","y1":"16","x2":"8","y2":"16"}],["$","line",null,{"x1":"8","y1":"20","x2":"8","y2":"20"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"22"}],["$","line",null,{"x1":"16","y1":"16","x2":"16","y2":"16"}],["$","line",null,{"x1":"16","y1":"20","x2":"16","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cloud","children":["$","path",null,{"d":"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-code","children":[["$","polyline",null,{"points":"16 18 22 12 16 6"}],["$","polyline",null,{"points":"8 6 2 12 8 18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-codepen","children":[["$","polygon",null,{"points":"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"15.5"}],["$","polyline",null,{"points":"22 8.5 12 15.5 2 8.5"}],["$","polyline",null,{"points":"2 15.5 12 8.5 22 15.5"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-command","children":["$","path",null,{"d":"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-compass","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-copy","children":[["$","rect",null,{"x":"9","y":"9","width":"13","height":"13","rx":"2","ry":"2"}],["$","path",null,{"d":"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-left","children":[["$","polyline",null,{"points":"9 10 4 15 9 20"}],["$","path",null,{"d":"M20 4v7a4 4 0 0 1-4 4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-down-right","children":[["$","polyline",null,{"points":"15 10 20 15 15 20"}],["$","path",null,{"d":"M4 4v7a4 4 0 0 0 4 4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-down","children":[["$","polyline",null,{"points":"14 15 9 20 4 15"}],["$","path",null,{"d":"M20 4h-7a4 4 0 0 0-4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-left-up","children":[["$","polyline",null,{"points":"14 9 9 4 4 9"}],["$","path",null,{"d":"M20 20h-7a4 4 0 0 1-4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-down","children":[["$","polyline",null,{"points":"10 15 15 20 20 15"}],["$","path",null,{"d":"M4 4h7a4 4 0 0 1 4 4v12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-right-up","children":[["$","polyline",null,{"points":"10 9 15 4 20 9"}],["$","path",null,{"d":"M4 20h7a4 4 0 0 0 4-4V4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-left","children":[["$","polyline",null,{"points":"9 14 4 9 9 4"}],["$","path",null,{"d":"M20 20v-7a4 4 0 0 0-4-4H4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-corner-up-right","children":[["$","polyline",null,{"points":"15 14 20 9 15 4"}],["$","path",null,{"d":"M4 20v-7a4 4 0 0 1 4-4h12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-cpu","children":[["$","rect",null,{"x":"4","y":"4","width":"16","height":"16","rx":"2","ry":"2"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}],["$","line",null,{"x1":"9","y1":"1","x2":"9","y2":"4"}],["$","line",null,{"x1":"15","y1":"1","x2":"15","y2":"4"}],["$","line",null,{"x1":"9","y1":"20","x2":"9","y2":"23"}],["$","line",null,{"x1":"15","y1":"20","x2":"15","y2":"23"}],["$","line",null,{"x1":"20","y1":"9","x2":"23","y2":"9"}],["$","line",null,{"x1":"20","y1":"14","x2":"23","y2":"14"}],["$","line",null,{"x1":"1","y1":"9","x2":"4","y2":"9"}],["$","line",null,{"x1":"1","y1":"14","x2":"4","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-credit-card","children":[["$","rect",null,{"x":"1","y":"4","width":"22","height":"16","rx":"2","ry":"2"}],["$","line",null,{"x1":"1","y1":"10","x2":"23","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crop","children":[["$","path",null,{"d":"M6.13 1L6 16a2 2 0 0 0 2 2h15"}],["$","path",null,{"d":"M1 6.13L16 6a2 2 0 0 1 2 2v15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-crosshair","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"22","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"6","y1":"12","x2":"2","y2":"12"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"2"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-database","children":[["$","ellipse",null,{"cx":"12","cy":"5","rx":"9","ry":"3"}],["$","path",null,{"d":"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"}],["$","path",null,{"d":"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-delete","children":[["$","path",null,{"d":"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"}],["$","line",null,{"x1":"18","y1":"9","x2":"12","y2":"15"}],["$","line",null,{"x1":"12","y1":"9","x2":"18","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-disc","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-dollar-sign","children":[["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"23"}],["$","path",null,{"d":"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download-cloud","children":[["$","polyline",null,{"points":"8 17 12 21 16 17"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-download","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"7 10 12 15 17 10"}],["$","line",null,{"x1":"12","y1":"15","x2":"12","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-droplet","children":["$","path",null,{"d":"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-2","children":["$","polygon",null,{"points":"16 3 21 8 8 21 3 21 3 16 16 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit-3","children":[["$","polygon",null,{"points":"14 2 18 6 7 17 3 17 3 13 14 2"}],["$","line",null,{"x1":"3","y1":"22","x2":"21","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-edit","children":[["$","path",null,{"d":"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34"}],["$","polygon",null,{"points":"18 2 22 6 12 16 8 16 8 12 18 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-external-link","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye-off","children":[["$","path",null,{"d":"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-eye","children":[["$","path",null,{"d":"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"}],["$","circle",null,{"cx":"12","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-facebook","children":["$","path",null,{"d":"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-fast-forward","children":[["$","polygon",null,{"points":"13 19 22 12 13 5 13 19"}],["$","polygon",null,{"points":"2 19 11 12 2 5 2 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-feather","children":[["$","path",null,{"d":"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"}],["$","line",null,{"x1":"16","y1":"8","x2":"2","y2":"22"}],["$","line",null,{"x1":"17","y1":"15","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-minus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-plus","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"12"}],["$","line",null,{"x1":"9","y1":"15","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file-text","children":[["$","path",null,{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"}],["$","polyline",null,{"points":"14 2 14 8 20 8"}],["$","line",null,{"x1":"16","y1":"13","x2":"8","y2":"13"}],["$","line",null,{"x1":"16","y1":"17","x2":"8","y2":"17"}],["$","polyline",null,{"points":"10 9 9 9 8 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-file","children":[["$","path",null,{"d":"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}],["$","polyline",null,{"points":"13 2 13 9 20 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-film","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"2.18","ry":"2.18"}],["$","line",null,{"x1":"7","y1":"2","x2":"7","y2":"22"}],["$","line",null,{"x1":"17","y1":"2","x2":"17","y2":"22"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"2","y1":"7","x2":"7","y2":"7"}],["$","line",null,{"x1":"2","y1":"17","x2":"7","y2":"17"}],["$","line",null,{"x1":"17","y1":"17","x2":"22","y2":"17"}],["$","line",null,{"x1":"17","y1":"7","x2":"22","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter","children":["$","polygon",null,{"points":"22 4 2 4 10 13.5 10 19 14 21 14 13.5 22 4"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-filter-alt","children":[["$","line",null,{"x1":"2","y1":"6","x2":"22","y2":"6"}],["$","line",null,{"x1":"6","y1":"12","x2":"18","y2":"12"}],["$","line",null,{"x1":"10","y1":"18","x2":"14","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-flag","children":[["$","path",null,{"d":"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"}],["$","line",null,{"x1":"4","y1":"22","x2":"4","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-minus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder-plus","children":[["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}],["$","line",null,{"x1":"12","y1":"11","x2":"12","y2":"17"}],["$","line",null,{"x1":"9","y1":"14","x2":"15","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-folder","children":["$","path",null,{"d":"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gift","children":[["$","polyline",null,{"points":"20 12 20 22 4 22 4 12"}],["$","rect",null,{"x":"2","y":"7","width":"20","height":"5"}],["$","line",null,{"x1":"12","y1":"22","x2":"12","y2":"7"}],["$","path",null,{"d":"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"}],["$","path",null,{"d":"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tree","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"20","cy":"13","r":"1"}],["$","circle",null,{"cx":"20","cy":"6","r":"1"}],["$","circle",null,{"cx":"20","cy":"20","r":"1"}],["$","line",null,{"x1":"9","y1":"6","x2":"19","y2":"6"}],["$","path",null,{"d":"M14,6V18a2,2,0,0,0,2,2h3"}],["$","line",null,{"x1":"14","y1":"13","x2":"19","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-branch","children":[["$","line",null,{"x1":"6","y1":"3","x2":"6","y2":"15"}],["$","circle",null,{"cx":"18","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","path",null,{"d":"M18 9a9 9 0 0 1-9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-commit","children":[["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"1","y1":"12","x2":"7","y2":"12"}],["$","line",null,{"x1":"17","y1":"12","x2":"23","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-merge","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M6 21V9a9 9 0 0 0 9 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-git-pull-request","children":[["$","circle",null,{"cx":"18","cy":"18","r":"3"}],["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","path",null,{"d":"M13 6h3a2 2 0 0 1 2 2v7"}],["$","line",null,{"x1":"6","y1":"9","x2":"6","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-github","children":["$","path",null,{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-gitlab","children":["$","path",null,{"d":"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-globe","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","path",null,{"d":"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-grid","children":[["$","rect",null,{"x":"3","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"3","width":"7","height":"7"}],["$","rect",null,{"x":"14","y":"14","width":"7","height":"7"}],["$","rect",null,{"x":"3","y":"14","width":"7","height":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hard-drive","children":[["$","line",null,{"x1":"22","y1":"12","x2":"2","y2":"12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}],["$","line",null,{"x1":"6","y1":"16","x2":"6","y2":"16"}],["$","line",null,{"x1":"10","y1":"16","x2":"10","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-hash","children":[["$","line",null,{"x1":"4","y1":"9","x2":"20","y2":"9"}],["$","line",null,{"x1":"4","y1":"15","x2":"20","y2":"15"}],["$","line",null,{"x1":"10","y1":"3","x2":"8","y2":"21"}],["$","line",null,{"x1":"16","y1":"3","x2":"14","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-headphones","children":[["$","path",null,{"d":"M3 18v-6a9 9 0 0 1 18 0v6"}],["$","path",null,{"d":"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-heart","children":["$","path",null,{"d":"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-help-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","path",null,{"d":"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"}],["$","line",null,{"x1":"12","y1":"17","x2":"12","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-home","children":["$","path",null,{"d":"M3,9.489V20a1,1,0,0,0,1,1H8a1,1,0,0,0,1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V9.489a1,1,0,0,0-.386-.789l-8-6.222a1,1,0,0,0-1.228,0l-8,6.222A1,1,0,0,0,3,9.489Z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-image","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","circle",null,{"cx":"8.5","cy":"8.5","r":"1.5"}],["$","polyline",null,{"points":"21 15 16 10 5 21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-inbox","children":[["$","polyline",null,{"points":"22 12 16 12 14 15 10 15 8 12 2 12"}],["$","path",null,{"d":"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-info","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"16","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-instagram","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"20","rx":"5","ry":"5"}],["$","path",null,{"d":"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"}],["$","line",null,{"x1":"17.5","y1":"6.5","x2":"17.5","y2":"6.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-italic","children":[["$","line",null,{"x1":"19","y1":"4","x2":"10","y2":"4"}],["$","line",null,{"x1":"14","y1":"20","x2":"5","y2":"20"}],["$","line",null,{"x1":"15","y1":"4","x2":"9","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layers","children":[["$","polygon",null,{"points":"12 2 2 7 12 12 22 7 12 2"}],["$","polyline",null,{"points":"2 17 12 22 22 17"}],["$","polyline",null,{"points":"2 12 12 17 22 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-layout","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"3","y1":"9","x2":"21","y2":"9"}],["$","line",null,{"x1":"9","y1":"21","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-life-buoy","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"4"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"9.17","y2":"9.17"}],["$","line",null,{"x1":"14.83","y1":"14.83","x2":"19","y2":"19"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"19","y2":"4.93"}],["$","line",null,{"x1":"14.83","y1":"9.17","x2":"18.36","y2":"5.64"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"9.17","y2":"14.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link-2","children":[["$","path",null,{"d":"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-link","children":[["$","path",null,{"d":"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"}],["$","path",null,{"d":"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-linkedin","children":[["$","path",null,{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect",null,{"x":"2","y":"9","width":"4","height":"12"}],["$","circle",null,{"cx":"4","cy":"4","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-list","children":[["$","line",null,{"x1":"8","y1":"6","x2":"21","y2":"6"}],["$","line",null,{"x1":"8","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"8","y1":"18","x2":"21","y2":"18"}],["$","line",null,{"x1":"3","y1":"6","x2":"3","y2":"6"}],["$","line",null,{"x1":"3","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"3","y1":"18","x2":"3","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-loader","children":[["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"6"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"22"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"7.76","y2":"7.76"}],["$","line",null,{"x1":"16.24","y1":"16.24","x2":"19","y2":"19"}],["$","line",null,{"x1":"2","y1":"12","x2":"6","y2":"12"}],["$","line",null,{"x1":"18","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"4.93","y1":"19","x2":"7.76","y2":"16.24"}],["$","line",null,{"x1":"16.24","y1":"7.76","x2":"19","y2":"4.93"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-lock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6A5,5,0,0,1,17,6V9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-in","children":[["$","path",null,{"d":"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"}],["$","polyline",null,{"points":"10 17 15 12 10 7"}],["$","line",null,{"x1":"15","y1":"12","x2":"3","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-log-out","children":[["$","path",null,{"d":"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"}],["$","polyline",null,{"points":"16 17 21 12 16 7"}],["$","line",null,{"x1":"21","y1":"12","x2":"9","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mail","children":[["$","path",null,{"d":"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}],["$","polyline",null,{"points":"22,6 12,13 2,6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map-pin","children":[["$","path",null,{"d":"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"}],["$","circle",null,{"cx":"12","cy":"10","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-map","children":[["$","polygon",null,{"points":"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"}],["$","line",null,{"x1":"8","y1":"2","x2":"8","y2":"18"}],["$","line",null,{"x1":"16","y1":"6","x2":"16","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize-2","children":[["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","polyline",null,{"points":"9 21 3 21 3 15"}],["$","line",null,{"x1":"21","y1":"3","x2":"14","y2":"10"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-maximize","children":["$","path",null,{"d":"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-menu","children":[["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}],["$","line",null,{"x1":"3","y1":"5","x2":"21","y2":"5"}],["$","line",null,{"x1":"3","y1":"19","x2":"21","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-circle","children":["$","path",null,{"d":"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-message-square","children":["$","path",null,{"d":"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"}],["$","path",null,{"d":"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-mic","children":[["$","path",null,{"d":"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"}],["$","path",null,{"d":"M19 10v2a7 7 0 0 1-14 0v-2"}],["$","line",null,{"x1":"12","y1":"19","x2":"12","y2":"23"}],["$","line",null,{"x1":"8","y1":"23","x2":"16","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize-2","children":[["$","polyline",null,{"points":"4 14 10 14 10 20"}],["$","polyline",null,{"points":"20 10 14 10 14 4"}],["$","line",null,{"x1":"14","y1":"10","x2":"21","y2":"3"}],["$","line",null,{"x1":"3","y1":"21","x2":"10","y2":"14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minimize","children":["$","path",null,{"d":"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-minus","children":["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-monitor","children":[["$","rect",null,{"x":"2","y":"3","width":"20","height":"14","rx":"2","ry":"2"}],["$","line",null,{"x1":"8","y1":"21","x2":"16","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-moon","children":["$","path",null,{"d":"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-horizontal","children":[["$","line",null,{"x1":"4","y1":"12","x2":"4","y2":"12"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-more-vertical","children":[["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"4"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-move","children":[["$","polyline",null,{"points":"5 9 2 12 5 15"}],["$","polyline",null,{"points":"9 5 12 2 15 5"}],["$","polyline",null,{"points":"15 19 12 22 9 19"}],["$","polyline",null,{"points":"19 9 22 12 19 15"}],["$","line",null,{"x1":"2","y1":"12","x2":"22","y2":"12"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-music","children":[["$","path",null,{"d":"M9 17H5a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2zm12-2h-4a2 2 0 0 0-2 2 2 2 0 0 0 2 2h2a2 2 0 0 0 2-2z"}],["$","polyline",null,{"points":"9 17 9 5 21 3 21 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation-2","children":["$","polygon",null,{"points":"12 2 19 21 12 17 5 21 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-navigation","children":["$","polygon",null,{"points":"3 11 22 2 13 21 11 13 3 11"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-octagon","children":["$","polygon",null,{"points":"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-package","children":[["$","path",null,{"d":"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z"}],["$","polyline",null,{"points":"2.32 6.16 12 11 21.68 6.16"}],["$","line",null,{"x1":"12","y1":"22.76","x2":"12","y2":"11"}],["$","line",null,{"x1":"7","y1":"3.5","x2":"17","y2":"8.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-paperclip","children":["$","path",null,{"d":"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"10","y1":"15","x2":"10","y2":"9"}],["$","line",null,{"x1":"14","y1":"15","x2":"14","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pause","children":[["$","rect",null,{"x":"6","y":"4","width":"4","height":"16"}],["$","rect",null,{"x":"14","y":"4","width":"4","height":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-percent","children":[["$","line",null,{"x1":"19","y1":"5","x2":"5","y2":"19"}],["$","circle",null,{"cx":"6.5","cy":"6.5","r":"2.5"}],["$","circle",null,{"cx":"17.5","cy":"17.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-call","children":["$","path",null,{"d":"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-forwarded","children":[["$","polyline",null,{"points":"19 1 23 5 19 9"}],["$","line",null,{"x1":"15","y1":"5","x2":"23","y2":"5"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-incoming","children":[["$","polyline",null,{"points":"16 2 16 8 22 8"}],["$","line",null,{"x1":"23","y1":"1","x2":"16","y2":"8"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-missed","children":[["$","line",null,{"x1":"23","y1":"1","x2":"17","y2":"7"}],["$","line",null,{"x1":"17","y1":"1","x2":"23","y2":"7"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-off","children":[["$","path",null,{"d":"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"}],["$","line",null,{"x1":"23","y1":"1","x2":"1","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone-outgoing","children":[["$","polyline",null,{"points":"23 7 23 1 17 1"}],["$","line",null,{"x1":"16","y1":"8","x2":"23","y2":"1"}],["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-phone","children":["$","path",null,{"d":"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pie-chart","children":[["$","path",null,{"d":"M21.21 15.89A10 10 0 1 1 8 2.83"}],["$","path",null,{"d":"M22 12A10 10 0 0 0 12 2v10z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","polygon",null,{"points":"10 8 16 12 10 16 10 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-play","children":["$","polygon",null,{"points":"7 3 21 12 7 21 7 3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"16"}],["$","line",null,{"x1":"8","y1":"12","x2":"16","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-plus","children":[["$","line",null,{"x1":"12","y1":"5","x2":"12","y2":"19"}],["$","line",null,{"x1":"5","y1":"12","x2":"19","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-pocket","children":[["$","path",null,{"d":"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"}],["$","polyline",null,{"points":"8 10 12 14 16 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-power","children":[["$","path",null,{"d":"M18.36 6.64a9 9 0 1 1-12.73 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-printer","children":[["$","polyline",null,{"points":"6 9 6 2 18 2 18 9"}],["$","path",null,{"d":"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"}],["$","rect",null,{"x":"6","y":"14","width":"12","height":"8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-radio","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh","children":[["$","path",null,{"d":"M21,13v3a3,3,0,0,1-3,3H5"}],["$","path",null,{"d":"M3,11V8A3,3,0,0,1,6,5H19"}],["$","polyline",null,{"points":"9 23 5 19 9 15"}],["$","polyline",null,{"points":"15 1 19 5 15 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","polyline",null,{"points":"23 20 23 14 17 14"}],["$","path",null,{"d":"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-refresh-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","polyline",null,{"points":"1 20 1 14 7 14"}],["$","path",null,{"d":"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-repeat","children":[["$","polyline",null,{"points":"17 1 21 5 17 9"}],["$","path",null,{"d":"M3 11V9a4 4 0 0 1 4-4h14"}],["$","polyline",null,{"points":"7 23 3 19 7 15"}],["$","path",null,{"d":"M21 13v2a4 4 0 0 1-4 4H3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rewind","children":[["$","polygon",null,{"points":"11 19 2 12 11 5 11 19"}],["$","polygon",null,{"points":"22 19 13 12 22 5 22 19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-ccw","children":[["$","polyline",null,{"points":"1 4 1 10 7 10"}],["$","path",null,{"d":"M3.51 15a9 9 0 1 0 2.13-9.36L1 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rotate-cw","children":[["$","polyline",null,{"points":"23 4 23 10 17 10"}],["$","path",null,{"d":"M20.49 15a9 9 0 1 1-2.12-9.36L23 10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-rss","children":[["$","path",null,{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path",null,{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle",null,{"cx":"5","cy":"19","r":"1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-save","children":[["$","path",null,{"d":"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}],["$","polyline",null,{"points":"17 21 17 13 7 13 7 21"}],["$","polyline",null,{"points":"7 3 7 8 15 8"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-scissors","children":[["$","circle",null,{"cx":"6","cy":"6","r":"3"}],["$","circle",null,{"cx":"6","cy":"18","r":"3"}],["$","line",null,{"x1":"20","y1":"4","x2":"8.12","y2":"15.88"}],["$","line",null,{"x1":"14.47","y1":"14.48","x2":"20","y2":"20"}],["$","line",null,{"x1":"8.12","y1":"8.12","x2":"12","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-search","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-send","children":[["$","line",null,{"x1":"22","y1":"2","x2":"11","y2":"13"}],["$","polygon",null,{"points":"22 2 15 22 11 13 2 9 22 2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-server","children":[["$","rect",null,{"x":"2","y":"2","width":"20","height":"8","rx":"2","ry":"2"}],["$","rect",null,{"x":"2","y":"14","width":"20","height":"8","rx":"2","ry":"2"}],["$","line",null,{"x1":"6","y1":"6","x2":"6","y2":"6"}],["$","line",null,{"x1":"6","y1":"18","x2":"6","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-settings","children":[["$","circle",null,{"cx":"12","cy":"12","r":"2"}],["$","path",null,{"d":"M18.56,14.45c-.06.16-.12.31-.19.46a1,1,0,0,0,0,.86l1.07,2a.94.94,0,0,1-.17,1.11l-.42.42a.94.94,0,0,1-1.11.17l-2-1.07a1,1,0,0,0-.86,0l-.46.19a.91.91,0,0,0-.6.62l-.65,2.15a.93.93,0,0,1-.9.67h-.6a.93.93,0,0,1-.9-.67l-.65-2.15a.91.91,0,0,0-.6-.62l-.46-.19a1,1,0,0,0-.86,0l-2,1.07a.94.94,0,0,1-1.11-.17l-.42-.42a.94.94,0,0,1-.17-1.11l1.07-2a1,1,0,0,0,0-.86c-.07-.15-.13-.3-.19-.46a.91.91,0,0,0-.62-.6L2.67,13.2A.93.93,0,0,1,2,12.3v-.6a.93.93,0,0,1,.67-.9l2.15-.65a.91.91,0,0,0,.62-.6c.06-.16.12-.31.19-.46a1,1,0,0,0,0-.86l-1.07-2a.94.94,0,0,1,.17-1.11l.42-.42a.94.94,0,0,1,1.11-.17l2,1.07a1,1,0,0,0,.86,0l.46-.19a.91.91,0,0,0,.6-.62l.65-2.15A.93.93,0,0,1,11.7,2h.6a.93.93,0,0,1,.9.67l.65,2.15a.91.91,0,0,0,.6.62l.46.19a1,1,0,0,0,.86,0l2-1.07a.94.94,0,0,1,1.11.17l.42.42a.94.94,0,0,1,.17,1.11l-1.07,2a1,1,0,0,0,0,.86c.07.15.13.3.19.46a.91.91,0,0,0,.62.6l2.15.65a.93.93,0,0,1,.67.9v.6a.93.93,0,0,1-.67.9l-2.15.65A.91.91,0,0,0,18.56,14.45Z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share-2","children":[["$","circle",null,{"cx":"18","cy":"5","r":"3"}],["$","circle",null,{"cx":"6","cy":"12","r":"3"}],["$","circle",null,{"cx":"18","cy":"19","r":"3"}],["$","line",null,{"x1":"8.59","y1":"13.51","x2":"15.42","y2":"17.49"}],["$","line",null,{"x1":"15.41","y1":"6.51","x2":"8.59","y2":"10.49"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-share","children":[["$","path",null,{"d":"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"}],["$","polyline",null,{"points":"16 6 12 2 8 6"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield-off","children":[["$","path",null,{"d":"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"}],["$","path",null,{"d":"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shield","children":["$","path",null,{"d":"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-bag","children":[["$","path",null,{"d":"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"}],["$","line",null,{"x1":"3","y1":"6","x2":"21","y2":"6"}],["$","path",null,{"d":"M16 10a4 4 0 0 1-8 0"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart","children":[["$","circle",null,{"cx":"9","cy":"21","r":"1"}],["$","circle",null,{"cx":"20","cy":"21","r":"1"}],["$","path",null,{"d":"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shopping-cart-alt","children":[["$","circle",null,{"cx":"6","cy":"21","r":"1"}],["$","circle",null,{"cx":"18","cy":"21","r":"1"}],["$","polyline",null,{"points":"3 9 5 15 19 15 22 4 2 4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-shuffle","children":[["$","polyline",null,{"points":"16 3 21 3 21 8"}],["$","line",null,{"x1":"4","y1":"20","x2":"21","y2":"3"}],["$","polyline",null,{"points":"21 16 21 21 16 21"}],["$","line",null,{"x1":"15","y1":"15","x2":"21","y2":"21"}],["$","line",null,{"x1":"4","y1":"4","x2":"9","y2":"9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sidebar","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"3","x2":"9","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-back","children":[["$","polygon",null,{"points":"19 20 9 12 19 4 19 20"}],["$","line",null,{"x1":"5","y1":"19","x2":"5","y2":"5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-skip-forward","children":[["$","polygon",null,{"points":"5 4 15 12 5 20 5 4"}],["$","line",null,{"x1":"19","y1":"5","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slack","children":[["$","path",null,{"d":"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}],["$","path",null,{"d":"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"}],["$","path",null,{"d":"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"}],["$","path",null,{"d":"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"}],["$","path",null,{"d":"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}],["$","path",null,{"d":"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"}],["$","path",null,{"d":"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-slash","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"4.93","y1":"4.93","x2":"19","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sliders","children":[["$","line",null,{"x1":"4","y1":"21","x2":"4","y2":"14"}],["$","line",null,{"x1":"4","y1":"10","x2":"4","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"12"}],["$","line",null,{"x1":"12","y1":"8","x2":"12","y2":"3"}],["$","line",null,{"x1":"20","y1":"21","x2":"20","y2":"16"}],["$","line",null,{"x1":"20","y1":"12","x2":"20","y2":"3"}],["$","line",null,{"x1":"1","y1":"14","x2":"7","y2":"14"}],["$","line",null,{"x1":"9","y1":"8","x2":"15","y2":"8"}],["$","line",null,{"x1":"17","y1":"16","x2":"23","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-smartphone","children":[["$","rect",null,{"x":"6","y":"2","width":"12","height":"20","rx":"2","ry":"2"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-laptop","children":[["$","path",null,{"d":"M5,3H19a2,2,0,0,1,2,2V15a0,0,0,0,1,0,0H3a0,0,0,0,1,0,0V5A2,2,0,0,1,5,3Z"}],["$","path",null,{"d":"M21,15l1.8,3.4A1,1,0,0,1,22,20H2a1,1,0,0,1-.8-1.6L3,15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-speaker","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2"}],["$","circle",null,{"cx":"12","cy":"14","r":"4"}],["$","line",null,{"x1":"12","y1":"6","x2":"12","y2":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-square","children":["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-star","children":["$","polygon",null,{"points":"12 2 15 8.26 22 9.27 17 14.14 18.18 21 12 17.77 5.82 21 7 14.14 2 9.27 8.91 8.26 12 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-stop-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","rect",null,{"x":"9","y":"9","width":"6","height":"6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sun","children":[["$","circle",null,{"cx":"12","cy":"12","r":"5"}],["$","line",null,{"x1":"12","y1":"1","x2":"12","y2":"3"}],["$","line",null,{"x1":"12","y1":"21","x2":"12","y2":"23"}],["$","line",null,{"x1":"4.22","y1":"4.22","x2":"5.64","y2":"5.64"}],["$","line",null,{"x1":"18.36","y1":"18.36","x2":"19.78","y2":"19.78"}],["$","line",null,{"x1":"1","y1":"12","x2":"3","y2":"12"}],["$","line",null,{"x1":"21","y1":"12","x2":"23","y2":"12"}],["$","line",null,{"x1":"4.22","y1":"19.78","x2":"5.64","y2":"18.36"}],["$","line",null,{"x1":"18.36","y1":"5.64","x2":"19.78","y2":"4.22"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunrise","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"2","x2":"12","y2":"9"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"8 6 12 2 16 6"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sunset","children":[["$","path",null,{"d":"M17 18a5 5 0 0 0-10 0"}],["$","line",null,{"x1":"12","y1":"9","x2":"12","y2":"2"}],["$","line",null,{"x1":"4.22","y1":"10.22","x2":"5.64","y2":"11.64"}],["$","line",null,{"x1":"1","y1":"18","x2":"3","y2":"18"}],["$","line",null,{"x1":"21","y1":"18","x2":"23","y2":"18"}],["$","line",null,{"x1":"18.36","y1":"11.64","x2":"19.78","y2":"10.22"}],["$","line",null,{"x1":"23","y1":"22","x2":"1","y2":"22"}],["$","polyline",null,{"points":"16 5 12 9 8 5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tablet","children":[["$","rect",null,{"x":"4","y":"2","width":"16","height":"20","rx":"2","ry":"2","transform":"rotate(180 12 12)"}],["$","line",null,{"x1":"12","y1":"18","x2":"12","y2":"18"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tag","children":[["$","path",null,{"d":"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"}],["$","line",null,{"x1":"7","y1":"7","x2":"7","y2":"7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-target","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","circle",null,{"cx":"12","cy":"12","r":"6"}],["$","circle",null,{"cx":"12","cy":"12","r":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-terminal","children":[["$","polyline",null,{"points":"4 17 10 11 4 5"}],["$","line",null,{"x1":"12","y1":"19","x2":"20","y2":"19"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thermometer","children":["$","path",null,{"d":"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-down","children":["$","path",null,{"d":"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-thumbs-up","children":["$","path",null,{"d":"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-left","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"8","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-toggle-right","children":[["$","rect",null,{"x":"1","y":"5","width":"22","height":"14","rx":"7","ry":"7"}],["$","circle",null,{"cx":"16","cy":"12","r":"3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash-2","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}],["$","line",null,{"x1":"10","y1":"11","x2":"10","y2":"17"}],["$","line",null,{"x1":"14","y1":"11","x2":"14","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trash","children":[["$","polyline",null,{"points":"3 6 5 6 21 6"}],["$","path",null,{"d":"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-down","children":[["$","polyline",null,{"points":"23 18 13.5 8.5 8.5 13.5 1 6"}],["$","polyline",null,{"points":"17 18 23 18 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-trending-up","children":[["$","polyline",null,{"points":"23 6 13.5 15.5 8.5 10.5 1 18"}],["$","polyline",null,{"points":"17 6 23 6 23 12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-triangle","children":["$","path",null,{"d":"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-truck","children":[["$","rect",null,{"x":"1","y":"3","width":"15","height":"13"}],["$","polygon",null,{"points":"16 8 20 8 23 11 23 16 16 16 16 8"}],["$","circle",null,{"cx":"5.5","cy":"18.5","r":"2.5"}],["$","circle",null,{"cx":"18.5","cy":"18.5","r":"2.5"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-tv","children":[["$","rect",null,{"x":"2","y":"6","width":"20","height":"15","rx":"2","ry":"2"}],["$","polyline",null,{"points":"17 1 12 6 7 1"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-twitter","children":["$","path",null,{"d":"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-type","children":[["$","polyline",null,{"points":"4 7 4 4 20 4 20 7"}],["$","line",null,{"x1":"9","y1":"20","x2":"15","y2":"20"}],["$","line",null,{"x1":"12","y1":"4","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-umbrella","children":["$","path",null,{"d":"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-underline","children":[["$","path",null,{"d":"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"}],["$","line",null,{"x1":"4","y1":"21","x2":"20","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-unlock","children":[["$","rect",null,{"x":"3","y":"9","width":"18","height":"13","rx":"1","ry":"1"}],["$","path",null,{"d":"M7,9V6a5,5,0,0,1,9.384-2.406"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload-cloud","children":[["$","polyline",null,{"points":"16 16 12 12 8 16"}],["$","line",null,{"x1":"12","y1":"12","x2":"12","y2":"21"}],["$","path",null,{"d":"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-upload","children":[["$","path",null,{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"}],["$","polyline",null,{"points":"17 8 12 3 7 8"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-check","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","polyline",null,{"points":"17 11 19 13 23 9"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-minus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-plus","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"20","y1":"8","x2":"20","y2":"14"}],["$","line",null,{"x1":"23","y1":"11","x2":"17","y2":"11"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user-x","children":[["$","path",null,{"d":"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"8.5","cy":"7","r":"4"}],["$","line",null,{"x1":"18","y1":"8","x2":"23","y2":"13"}],["$","line",null,{"x1":"23","y1":"8","x2":"18","y2":"13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-user","children":[["$","path",null,{"d":"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"12","cy":"7","r":"4"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-users","children":[["$","path",null,{"d":"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}],["$","circle",null,{"cx":"9","cy":"7","r":"4"}],["$","path",null,{"d":"M23 21v-2a4 4 0 0 0-3-3.87"}],["$","path",null,{"d":"M16 3.13a4 4 0 0 1 0 7.75"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video-off","children":[["$","path",null,{"d":"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-video","children":[["$","polygon",null,{"points":"23 7 16 12 23 17 23 7"}],["$","rect",null,{"x":"1","y":"5","width":"15","height":"14","rx":"2","ry":"2"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-voicemail","children":[["$","circle",null,{"cx":"5.5","cy":"11.5","r":"4.5"}],["$","circle",null,{"cx":"18.5","cy":"11.5","r":"4.5"}],["$","line",null,{"x1":"5.5","y1":"16","x2":"18.5","y2":"16"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-1","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-2","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","path",null,{"d":"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume-x","children":[["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}],["$","line",null,{"x1":"23","y1":"9","x2":"17","y2":"15"}],["$","line",null,{"x1":"17","y1":"9","x2":"23","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-volume","children":["$","polygon",null,{"points":"11 5 6 9 2 9 2 15 6 15 11 19 11 5"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-watch","children":[["$","circle",null,{"cx":"12","cy":"12","r":"7"}],["$","polyline",null,{"points":"12 9 12 12 13.5 13.5"}],["$","path",null,{"d":"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi-off","children":[["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}],["$","path",null,{"d":"M16.72 11.06A10.94 10.94 0 0 1 19 12.55"}],["$","path",null,{"d":"M5 12.55a10.94 10.94 0 0 1 5.17-2.39"}],["$","path",null,{"d":"M10.71 5.05A16 16 0 0 1 22.58 9"}],["$","path",null,{"d":"M1.42 9a15.91 15.91 0 0 1 4.7-2.88"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wifi","children":[["$","path",null,{"d":"M5 12.55a11 11 0 0 1 14.08 0"}],["$","path",null,{"d":"M1.42 9a16 16 0 0 1 21.16 0"}],["$","path",null,{"d":"M8.53 16.11a6 6 0 0 1 6.95 0"}],["$","line",null,{"x1":"12","y1":"20","x2":"12","y2":"20"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-wind","children":["$","path",null,{"d":"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-circle","children":[["$","circle",null,{"cx":"12","cy":"12","r":"10"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x-square","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"2","ry":"2"}],["$","line",null,{"x1":"9","y1":"9","x2":"15","y2":"15"}],["$","line",null,{"x1":"15","y1":"9","x2":"9","y2":"15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-x","children":[["$","line",null,{"x1":"17","y1":"7","x2":"7","y2":"17"}],["$","line",null,{"x1":"7","y1":"7","x2":"17","y2":"17"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-youtube","children":[["$","path",null,{"d":"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"}],["$","polygon",null,{"points":"9.75 15 15.5 11.75 9.75 8.48 9.75 15"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap-off","children":[["$","polyline",null,{"points":"12.41 6.75 13 2 10.57 4.92"}],["$","polyline",null,{"points":"18.57 12.91 21 10 15.66 10"}],["$","polyline",null,{"points":"8 8 3 14 12 14 11 22 16 16"}],["$","line",null,{"x1":"1","y1":"1","x2":"23","y2":"23"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zap","children":["$","polygon",null,{"points":"13 2 3 14 12 14 11 22 21 10 12 10 13 2"}]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-in","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"10","y1":"7","x2":"10","y2":"13"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-zoom-out","children":[["$","circle",null,{"cx":"10","cy":"10","r":"8"}],["$","line",null,{"x1":"21","y1":"21","x2":"15.65","y2":"15.65"}],["$","line",null,{"x1":"7","y1":"10","x2":"13","y2":"10"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-connection","children":[["$","line",null,{"x1":"3","y1":"7","x2":"21","y2":"7"}],["$","polyline",null,{"points":"17 3 21 7 17 11"}],["$","line",null,{"x1":"21","y1":"17","x2":"3","y2":"17"}],["$","polyline",null,{"points":"7 21 3 17 7 13"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-y","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"3","y1":"12","x2":"21","y2":"12"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-split-x","children":[["$","rect",null,{"x":"3","y":"3","width":"18","height":"18","rx":"1","ry":"1"}],["$","line",null,{"x1":"12","y1":"3","x2":"12","y2":"21"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-sync","children":[["$","line",null,{"x1":"6","y1":"7","x2":"19","y2":"7"}],["$","polyline",null,{"points":"16 4 19 7 16 10"}],["$","line",null,{"x1":"18","y1":"17","x2":"5","y2":"17"}],["$","polyline",null,{"points":"8 20 5 17 8 14"}]]}],["$","symbol",null,{"viewBox":"0 0 24 24","id":"glyph-history","children":[["$","polyline",null,{"points":"12 7.5 12 12 15 15"}],["$","polyline",null,{"points":"6 7.5 1.5 7.5 1.5 3"}],["$","path",null,{"d":"M2.52,16.5a10.5,10.5,0,1,0,0-9"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-check","children":[["$","polyline",null,{"points":"2 7 5 10 12 3","fill":"transparent"}],["$","rect",null,{"x":"2","y":"6","width":"10","height":"2","rx":"1","ry":"1","stroke":"transparent"}]]}],["$","symbol",null,{"viewBox":"0 0 14 14","id":"glyph-form-radio","children":["$","circle",null,{"cx":"7","cy":"7","r":"2","fill":"currentColor"}]}]]}]]}]]}]]}]
d:I{"id":4871,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","185:static/chunks/app/layout-8032c1cb404a348f.js"],"name":"ModelTreeClient","async":false}
e:I{"id":3137,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"SetActive","async":false}
10:I{"id":2201,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ColumnDetails","async":false}
14:I{"id":9941,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"ReferenceListClient","async":false}
28:I{"id":4431,"chunks":["795:static/chunks/795-9c49dc1a9d0e070b.js","300:static/chunks/300-2f21f75028d37aac.js","258:static/chunks/258-ce9da1e76dd2abbf.js","832:static/chunks/832-237573527834b74e.js","845:static/chunks/app/model/[id]/page-095c388c6388bd4d.js"],"name":"CodeBlock","async":false}
8:[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n          .menu ul ul {\n                margin-left: 12px;\n          }\n          .unselectable{\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n    "}}],["$","$Ld",null,{}]]
f:T67b,**Description:** This table unions together a select set of Service Ping metrics for both Self-Managed and SaaS **paid users**. The data from this table will be used for customer product insights. Most notably, this data is pumped into Gainsight and aggregated into customer health scores for use by TAMs.

**Data Grain:**
- Subscription (`dim_subscription_id_original`)
- Month (`snapshot_month`)
- Installation/Namespace (For Self-Managed, `uuid`-`hostname`; for SaaS, `namespace_id`)

**Filters:**
Inherits filters from parent models, but most notably:
  - Only includes paid customers.
  - Only includes Service Ping metrics that have been added via the "wave" process.
  - Only includes subscriptions that have a usage ping payload associated with them.

**Other Comments:**
- For Self-Managed customers, this data orgininates in [Service Ping](https://docs.gitlab.com/ee/development/service_ping/), which sends a weekly payload of customer product usage metrics to GitLab. For SaaS customers, we mimic the Service Ping queries using the [SaaS Service Ping process](https://about.gitlab.com/handbook/business-technology/data-team/data-catalog/saas-service-ping-automation/). Specifically, the namespace-level Service Ping queries can be found [here](https://gitlab.com/gitlab-data/analytics/-/blob/master/extract/saas_usage_ping/usage_ping_namespace_queries.json).
- For SaaS customers, not all metrics can be calculated via the namespace-level Service Ping. For metrics that originate from `redis_hll`, Snowplow counters are used to track event-level data. Then, the data team aggregates those counters in Snowflake to mimic the Service Ping calcuation.11:T9149,{{
  config(
    materialized='table',
    tags=["product", "mnpi_exception"]
  )
}}

{{ simple_cte([
    ('monthly_saas_metrics','rpt_gainsight_metrics_monthly_paid_saas'),
    ('monthly_sm_metrics','rpt_gainsight_metrics_monthly_paid_self_managed'),
    ('billing_accounts','dim_billing_account'),
    ('location_country', 'dim_location_country'),
    ('subscriptions', 'dim_subscription'),
    ('namespaces', 'dim_namespace'),
    ('charges', 'mart_charge'),
    ('dates', 'dim_date'),
    ('aggregated_metrics', 'redis_namespace_snowplow_clicks_aggregated_workspace'),
    ('redis_metrics_28d_user', 'wk_rpt_user_based_metric_counts_namespace_monthly'),
    ('redis_metrics_all_time_event', 'wk_rpt_event_based_metric_counts_namespace_all_time')
]) }}


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    {{ dbt_utils.group_by(n = 2) }}
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}             AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      {{ dbt_utils.surrogate_key(
        [
          'snapshot_month',
          'dim_subscription_id_original',
          'uuid',
          'hostname',
          'dim_namespace_id'
        ]
      ) }} AS primary_key
    FROM unioned
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-10-12",
    updated_date="2023-06-05"
) }}12:T67b,**Description:** This table unions together a select set of Service Ping metrics for both Self-Managed and SaaS **paid users**. The data from this table will be used for customer product insights. Most notably, this data is pumped into Gainsight and aggregated into customer health scores for use by TAMs.

**Data Grain:**
- Subscription (`dim_subscription_id_original`)
- Month (`snapshot_month`)
- Installation/Namespace (For Self-Managed, `uuid`-`hostname`; for SaaS, `namespace_id`)

**Filters:**
Inherits filters from parent models, but most notably:
  - Only includes paid customers.
  - Only includes Service Ping metrics that have been added via the "wave" process.
  - Only includes subscriptions that have a usage ping payload associated with them.

**Other Comments:**
- For Self-Managed customers, this data orgininates in [Service Ping](https://docs.gitlab.com/ee/development/service_ping/), which sends a weekly payload of customer product usage metrics to GitLab. For SaaS customers, we mimic the Service Ping queries using the [SaaS Service Ping process](https://about.gitlab.com/handbook/business-technology/data-team/data-catalog/saas-service-ping-automation/). Specifically, the namespace-level Service Ping queries can be found [here](https://gitlab.com/gitlab-data/analytics/-/blob/master/extract/saas_usage_ping/usage_ping_namespace_queries.json).
- For SaaS customers, not all metrics can be calculated via the namespace-level Service Ping. For metrics that originate from `redis_hll`, Snowplow counters are used to track event-level data. Then, the data team aggregates those counters in Snowflake to mimic the Service Ping calcuation.13:T943f,



WITH monthly_saas_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_saas

), monthly_sm_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_self_managed

), billing_accounts AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), location_country AS (

    SELECT * 
    FROM "PROD".common.dim_location_country

), subscriptions AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_charge

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), aggregated_metrics AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace

), redis_metrics_28d_user AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly

), redis_metrics_all_time_event AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time

)


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    group by 1,2
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

             AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      md5(cast(coalesce(cast(snapshot_month as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription_id_original as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') as 
    varchar
)) AS primary_key
    FROM unioned
  
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-10-12'::DATE        AS model_created_date,
      '2023-06-05'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final15:T494,{{
  config(
    materialized='table',
    tags=["mnpi_exception"]
  )
}}

WITH events AS (
  SELECT
    *
  FROM {{ ref('wk_mart_snowplow_events_service_ping_metrics') }}
  -- only include non-aggregated metrics or aggregated metrics of 'OR' aggregate operator.
  -- more details here: https://gitlab.com/gitlab-org/gitlab/-/issues/376244#note_1167575425
  WHERE (aggregate_operator = 'OR'
    OR aggregate_operator IS NULL)
    AND time_frame = '28d'
),

dates AS (
  SELECT
    *
  FROM {{ ref('dim_date') }}
),

final AS (
  SELECT
    DATE_TRUNC('month', events.behavior_at) AS date_month,
    events.ultimate_parent_namespace_id,
    events.metrics_path,
    COUNT(DISTINCT events.gsc_pseudonymized_user_id) AS distinct_users_whole_month,
    COUNT(DISTINCT IFF(dates.days_until_last_day_of_month <= 27, events.gsc_pseudonymized_user_id, NULL)) AS distinct_users_last_28d_month
  FROM events
  LEFT JOIN dates ON dates.date_actual = DATE_TRUNC('day', events.behavior_at)
  {{ dbt_utils.group_by(n = 3) }}
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-12-21",
    updated_date="2023-03-08"
) }}16:T541,

WITH events AS (
  SELECT
    *
  FROM "PROD".workspace_customer_success.wk_mart_snowplow_events_service_ping_metrics
  -- only include non-aggregated metrics or aggregated metrics of 'OR' aggregate operator.
  -- more details here: https://gitlab.com/gitlab-org/gitlab/-/issues/376244#note_1167575425
  WHERE (aggregate_operator = 'OR'
    OR aggregate_operator IS NULL)
    AND time_frame = '28d'
),

dates AS (
  SELECT
    *
  FROM "PROD".common.dim_date
),

final AS (
  SELECT
    DATE_TRUNC('month', events.behavior_at) AS date_month,
    events.ultimate_parent_namespace_id,
    events.metrics_path,
    COUNT(DISTINCT events.gsc_pseudonymized_user_id) AS distinct_users_whole_month,
    COUNT(DISTINCT IFF(dates.days_until_last_day_of_month <= 27, events.gsc_pseudonymized_user_id, NULL)) AS distinct_users_last_28d_month
  FROM events
  LEFT JOIN dates ON dates.date_actual = DATE_TRUNC('day', events.behavior_at)
  group by 1,2,3
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-12-21'::DATE        AS model_created_date,
      '2023-03-08'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final17:T39f2,{{config({
    "materialized": "table",
    "transient": false
  })
}}

{{ simple_cte([
    ('dim_amendment','dim_amendment'),
    ('dim_billing_account','dim_billing_account'),
    ('dim_charge','dim_charge'),
    ('dim_crm_account','dim_crm_account'),
    ('dim_product_detail','dim_product_detail'),
    ('dim_subscription','dim_subscription'),
    ('dim_crm_user','dim_crm_user'),
    ('dim_order', 'dim_order'),
    ('dim_order_action', 'dim_order_action'),
    ('fct_charge','fct_charge'),
    ('prep_billing_account_user', 'prep_billing_account_user')
]) }}

, mart_charge AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.invoice_owner_account,
      dim_subscription.creator_account,
      dim_subscription.was_purchased_through_reseller,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,
      dim_billing_account.auto_pay                                                    AS auto_pay,
      dim_billing_account.default_payment_method_type                                 AS default_payment_method_type,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      -- order info
      fct_charge.dim_order_id                                                         AS dim_order_id,
      CASE
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_name = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_type = 'Composite')
            THEN 'Auto-Renewal'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (prep_billing_account_user.user_name = 'svc_ZuoraSFDC_integration@gitlab.com'
          OR dim_subscription.subscription_sales_type = 'Sales-Assisted')
            THEN 'Sales-Assisted'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description NOT IN 
            ('AutoRenew by CustomersDot', 'Automated seat reconciliation')
            OR dim_order.order_description IS NULL)
          AND prep_billing_account_user.user_name IN (
            'svc_zuora_fulfillment_int@gitlab.com',
            'ruben_APIproduction@gitlab.com')
            THEN 'Customer Portal'
        ELSE NULL
      END                                                                             AS subscription_renewal_type,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.product_ranking                                              AS product_ranking,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,
      dim_product_detail.is_licensed_user                                             AS is_licensed_user,
      dim_product_detail.is_arpu                                                      AS is_arpu,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings

    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    LEFT JOIN dim_order
      ON fct_charge.dim_order_id = dim_order.dim_order_id
    LEFT JOIN dim_order_action
      ON fct_charge.dim_order_id = dim_order_action.dim_order_id
      AND dim_order_action.order_action_type IN ('RenewSubscription', 'CancelSubscription')
    LEFT JOIN prep_billing_account_user
      ON fct_charge.subscription_created_by_user_id = prep_billing_account_user.zuora_user_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'
    ORDER BY dim_crm_account.dim_parent_crm_account_id, dim_crm_account.dim_crm_account_id, fct_charge.subscription_name,
      fct_charge.subscription_version, fct_charge.rate_plan_charge_number, fct_charge.rate_plan_charge_version,
      fct_charge.rate_plan_charge_segment

)

{{ dbt_audit(
    cte_ref="mart_charge",
    created_by="@iweeks",
    updated_by="@chrissharp",
    created_date="2021-06-07",
    updated_date="2023-06-13"
) }}18:T3c5c,



WITH dim_amendment AS (

    SELECT * 
    FROM "PROD".common.dim_amendment

), dim_billing_account AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), dim_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_charge

), dim_crm_account AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.dim_crm_account

), dim_product_detail AS (

    SELECT * 
    FROM "PROD".common.dim_product_detail

), dim_subscription AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), dim_crm_user AS (

    SELECT * 
    FROM "PROD".common.dim_crm_user

), dim_order AS (

    SELECT * 
    FROM "PROD".common.dim_order

), dim_order_action AS (

    SELECT * 
    FROM "PROD".common.dim_order_action

), fct_charge AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

), prep_billing_account_user AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_prep.prep_billing_account_user

)

, mart_charge AS (

    SELECT
      --Surrogate Key
      dim_charge.dim_charge_id                                                        AS dim_charge_id,

      --Natural Key
      dim_charge.subscription_name                                                    AS subscription_name,
      dim_charge.subscription_version                                                 AS subscription_version,
      dim_charge.rate_plan_charge_number                                              AS rate_plan_charge_number,
      dim_charge.rate_plan_charge_version                                             AS rate_plan_charge_version,
      dim_charge.rate_plan_charge_segment                                             AS rate_plan_charge_segment,

      --Charge Information
      dim_charge.rate_plan_name                                                       AS rate_plan_name,
      dim_charge.rate_plan_charge_name                                                AS rate_plan_charge_name,
      dim_charge.rate_plan_charge_description                                         AS rate_plan_charge_description,
      dim_charge.charge_type                                                          AS charge_type,
      dim_charge.is_paid_in_full                                                      AS is_paid_in_full,
      dim_charge.is_last_segment                                                      AS is_last_segment,
      dim_charge.is_included_in_arr_calc                                              AS is_included_in_arr_calc,
      dim_charge.effective_start_date                                                 AS effective_start_date,
      dim_charge.effective_end_date                                                   AS effective_end_date,
      dim_charge.effective_start_month                                                AS effective_start_month,
      dim_charge.effective_end_month                                                  AS effective_end_month,
      dim_charge.charge_created_date                                                  AS charge_created_date,
      dim_charge.charge_updated_date                                                  AS charge_updated_date,

      --Subscription Information
      dim_subscription.dim_subscription_id                                            AS dim_subscription_id,
      dim_subscription.created_by_id                                                  AS subscription_created_by_id,
      dim_subscription.updated_by_id                                                  AS subscription_updated_by_id,
      dim_subscription.subscription_start_date                                        AS subscription_start_date,
      dim_subscription.subscription_end_date                                          AS subscription_end_date,
      dim_subscription.subscription_start_month                                       AS subscription_start_month,
      dim_subscription.subscription_end_month                                         AS subscription_end_month,
      dim_subscription.subscription_end_fiscal_year                                   AS subscription_end_fiscal_year,
      dim_subscription.subscription_created_date                                      AS subscription_created_date,
      dim_subscription.subscription_updated_date                                      AS subscription_updated_date,
      dim_subscription.second_active_renewal_month                                    AS second_active_renewal_month,
      dim_subscription.term_start_date,
      dim_subscription.term_end_date,
      dim_subscription.term_start_month,
      dim_subscription.term_end_month,
      dim_subscription.subscription_status                                            AS subscription_status,
      dim_subscription.subscription_sales_type                                        AS subscription_sales_type,
      dim_subscription.subscription_name_slugify                                      AS subscription_name_slugify,
      dim_subscription.oldest_subscription_in_cohort                                  AS oldest_subscription_in_cohort,
      dim_subscription.subscription_lineage                                           AS subscription_lineage,
      dim_subscription.auto_renew_native_hist,
      dim_subscription.auto_renew_customerdot_hist,
      dim_subscription.turn_on_cloud_licensing,
      dim_subscription.turn_on_operational_metrics,
      dim_subscription.contract_operational_metrics,
      dim_subscription.contract_auto_renewal,
      dim_subscription.turn_on_auto_renewal,
      dim_subscription.contract_seat_reconciliation,
      dim_subscription.turn_on_seat_reconciliation,
      dim_subscription.invoice_owner_account,
      dim_subscription.creator_account,
      dim_subscription.was_purchased_through_reseller,

      --billing account info
      dim_billing_account.dim_billing_account_id                                      AS dim_billing_account_id,
      dim_billing_account.sold_to_country                                             AS sold_to_country,
      dim_billing_account.billing_account_name                                        AS billing_account_name,
      dim_billing_account.billing_account_number                                      AS billing_account_number,
      dim_billing_account.ssp_channel                                                 AS ssp_channel,
      dim_billing_account.po_required                                                 AS po_required,
      dim_billing_account.auto_pay                                                    AS auto_pay,
      dim_billing_account.default_payment_method_type                                 AS default_payment_method_type,

      -- crm account info
      dim_crm_user.dim_crm_user_id                                                    AS dim_crm_user_id,
      dim_crm_user.crm_user_sales_segment                                             AS crm_user_sales_segment,
      dim_crm_account.dim_crm_account_id                                              AS dim_crm_account_id,
      dim_crm_account.crm_account_name                                                AS crm_account_name,
      dim_crm_account.dim_parent_crm_account_id                                       AS dim_parent_crm_account_id,
      dim_crm_account.parent_crm_account_name                                         AS parent_crm_account_name,
      dim_crm_account.parent_crm_account_upa_country                                  AS parent_crm_account_upa_country,
      dim_crm_account.parent_crm_account_sales_segment                                AS parent_crm_account_sales_segment,
      dim_crm_account.parent_crm_account_industry                                     AS parent_crm_account_industry,
      dim_crm_account.parent_crm_account_territory                                    AS parent_crm_account_territory,
      dim_crm_account.parent_crm_account_region                                       AS parent_crm_account_region,
      dim_crm_account.parent_crm_account_area                                         AS parent_crm_account_area,
      dim_crm_account.health_score_color                                              AS health_score_color,
      dim_crm_account.health_number                                                   AS health_number,
      dim_crm_account.is_jihu_account                                                 AS is_jihu_account,

      -- order info
      fct_charge.dim_order_id                                                         AS dim_order_id,
      CASE
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_name = 'AutoRenew by CustomersDot'
          OR dim_amendment_subscription.amendment_type = 'Composite')
            THEN 'Auto-Renewal'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (prep_billing_account_user.user_name = 'svc_ZuoraSFDC_integration@gitlab.com'
          OR dim_subscription.subscription_sales_type = 'Sales-Assisted')
            THEN 'Sales-Assisted'
        WHEN (dim_order_action.dim_order_action_id IS NOT NULL
        OR dim_amendment_subscription.amendment_type = 'Renewal')
          AND (dim_order.order_description NOT IN 
            ('AutoRenew by CustomersDot', 'Automated seat reconciliation')
            OR dim_order.order_description IS NULL)
          AND prep_billing_account_user.user_name IN (
            'svc_zuora_fulfillment_int@gitlab.com',
            'ruben_APIproduction@gitlab.com')
            THEN 'Customer Portal'
        ELSE NULL
      END                                                                             AS subscription_renewal_type,

      --Cohort Information
      dim_subscription.subscription_cohort_month                                      AS subscription_cohort_month,
      dim_subscription.subscription_cohort_quarter                                    AS subscription_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_billing_account.dim_billing_account_id)                    AS billing_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_crm_account_id)                            AS crm_account_cohort_quarter,
      MIN(dim_subscription.subscription_cohort_month) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_month,
      MIN(dim_subscription.subscription_cohort_quarter) OVER (
          PARTITION BY dim_crm_account.dim_parent_crm_account_id)                     AS parent_account_cohort_quarter,

      --product info
      dim_product_detail.dim_product_detail_id,
      dim_product_detail.product_tier_name                                            AS product_tier_name,
      dim_product_detail.product_delivery_type                                        AS product_delivery_type,
      dim_product_detail.product_ranking                                              AS product_ranking,
      dim_product_detail.service_type                                                 AS service_type,
      dim_product_detail.product_rate_plan_name                                       AS product_rate_plan_name,
      dim_product_detail.is_licensed_user                                             AS is_licensed_user,
      dim_product_detail.is_arpu                                                      AS is_arpu,

      --Amendment Information
      dim_subscription.dim_amendment_id_subscription,
      fct_charge.dim_amendment_id_charge,
      dim_amendment_subscription.effective_date                                       AS subscription_amendment_effective_date,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_subscription.amendment_type
      END                                                                             AS subscription_amendment_type,
      dim_amendment_subscription.amendment_name                                       AS subscription_amendment_name,
      CASE
        WHEN dim_charge.subscription_version = 1
          THEN 'NewSubscription'
          ELSE dim_amendment_charge.amendment_type
      END                                                                             AS charge_amendment_type,

      --ARR Analysis Framework
      dim_charge.type_of_arr_change,

      --Additive Fields
      fct_charge.mrr,
      fct_charge.previous_mrr,
      fct_charge.delta_mrr,
      fct_charge.arr,
      fct_charge.previous_arr,
      fct_charge.delta_arr,
      fct_charge.quantity,
      fct_charge.previous_quantity,
      fct_charge.delta_quantity,
      fct_charge.delta_tcv,
      fct_charge.estimated_total_future_billings

    FROM fct_charge
    INNER JOIN dim_charge
      ON fct_charge.dim_charge_id = dim_charge.dim_charge_id
    INNER JOIN dim_subscription
      ON fct_charge.dim_subscription_id = dim_subscription.dim_subscription_id
    INNER JOIN dim_product_detail
      ON fct_charge.dim_product_detail_id = dim_product_detail.dim_product_detail_id
    INNER JOIN dim_billing_account
      ON fct_charge.dim_billing_account_id = dim_billing_account.dim_billing_account_id
    LEFT JOIN dim_crm_account
      ON dim_crm_account.dim_crm_account_id = dim_billing_account.dim_crm_account_id
    LEFT JOIN dim_crm_user
      ON dim_crm_account.dim_crm_user_id = dim_crm_user.dim_crm_user_id
    LEFT JOIN dim_amendment AS dim_amendment_subscription
      ON dim_subscription.dim_amendment_id_subscription = dim_amendment_subscription.dim_amendment_id
    LEFT JOIN dim_amendment AS dim_amendment_charge
      ON fct_charge.dim_amendment_id_charge = dim_amendment_charge.dim_amendment_id
    LEFT JOIN dim_order
      ON fct_charge.dim_order_id = dim_order.dim_order_id
    LEFT JOIN dim_order_action
      ON fct_charge.dim_order_id = dim_order_action.dim_order_id
      AND dim_order_action.order_action_type IN ('RenewSubscription', 'CancelSubscription')
    LEFT JOIN prep_billing_account_user
      ON fct_charge.subscription_created_by_user_id = prep_billing_account_user.zuora_user_id
    WHERE dim_crm_account.is_jihu_account != 'TRUE'
    ORDER BY dim_crm_account.dim_parent_crm_account_id, dim_crm_account.dim_crm_account_id, fct_charge.subscription_name,
      fct_charge.subscription_version, fct_charge.rate_plan_charge_number, fct_charge.rate_plan_charge_version,
      fct_charge.rate_plan_charge_segment

)

SELECT
      *,
      '@iweeks'::VARCHAR       AS created_by,
      '@chrissharp'::VARCHAR       AS updated_by,
      '2021-06-07'::DATE        AS model_created_date,
      '2023-06-13'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM mart_charge19:T111c,{{ config({
    "tags": ["mnpi_exception"],
    "alias": "dim_subscription"
}) }}

WITH prep_amendment AS (

  SELECT *
  FROM {{ ref('prep_amendment') }}

), subscription AS (

    SELECT *
    FROM {{ ref('prep_subscription') }}

), subscription_opportunity_mapping AS (

    SELECT *
    FROM {{ ref('map_subscription_opportunity') }}

), subscription_lineage AS (

    SELECT DISTINCT
      subscription_name_slugify,
      subscription_lineage,
      oldest_subscription_in_cohort,
      subscription_cohort_month,
      subscription_cohort_quarter,
      subscription_cohort_year
    FROM {{ ref('map_subscription_lineage') }}

), final AS (

  SELECT
    --Surrogate Key
    subscription.dim_subscription_id,

    --Natural Key
    subscription.subscription_name,
    subscription.subscription_version,

    --Common Dimension Keys
    subscription.dim_crm_account_id,
    subscription.dim_billing_account_id,
    subscription.dim_billing_account_id_invoice_owner_account,
    subscription.dim_billing_account_id_creator_account,
    CASE
       WHEN subscription.subscription_created_date < '2019-02-01'
         THEN NULL
       ELSE subscription_opportunity_mapping.dim_crm_opportunity_id
    END                                                                             AS dim_crm_opportunity_id,
    subscription.dim_crm_opportunity_id_current_open_renewal,
    subscription.dim_crm_opportunity_id_closed_lost_renewal,
    {{ get_keyed_nulls('prep_amendment.dim_amendment_id') }}                        AS dim_amendment_id_subscription,

    --Subscription Information
    subscription.created_by_id,
    subscription.updated_by_id,
    subscription.dim_subscription_id_original,
    subscription.dim_subscription_id_previous,
    subscription.subscription_name_slugify,
    subscription.subscription_status,
    subscription.namespace_id,
    subscription.namespace_name,
    subscription.zuora_renewal_subscription_name,
    subscription.zuora_renewal_subscription_name_slugify,
    subscription.current_term,
    subscription.renewal_term,
    subscription.renewal_term_period_type,
    subscription.eoa_starter_bronze_offer_accepted,
    subscription.subscription_sales_type,
    subscription.auto_renew_native_hist,
    subscription.auto_renew_customerdot_hist,
    subscription.turn_on_cloud_licensing,
    subscription.turn_on_operational_metrics,
    subscription.contract_operational_metrics,
    subscription.contract_auto_renewal,
    subscription.turn_on_auto_renewal,
    subscription.contract_seat_reconciliation,
    subscription.turn_on_seat_reconciliation,
    subscription_opportunity_mapping.is_questionable_opportunity_mapping,
    subscription.invoice_owner_account,
    subscription.creator_account,
    subscription.was_purchased_through_reseller,
    subscription.multi_year_deal_subscription_linkage,

    --Date Information
    subscription.subscription_start_date,
    subscription.subscription_end_date,
    subscription.subscription_start_month,
    subscription.subscription_end_month,
    subscription.subscription_end_fiscal_year,
    subscription.subscription_created_date,
    subscription.subscription_updated_date,
    subscription.term_start_date,
    subscription.term_end_date,
    subscription.term_start_month,
    subscription.term_end_month,
    subscription.term_start_fiscal_year,
    subscription.term_end_fiscal_year,
    subscription.is_single_fiscal_year_term_subscription,
    subscription.second_active_renewal_month,
    subscription.cancelled_date,

    --Lineage and Cohort Information
    subscription_lineage.subscription_lineage,
    subscription_lineage.oldest_subscription_in_cohort,
    subscription_lineage.subscription_cohort_month,
    subscription_lineage.subscription_cohort_quarter,
    subscription_lineage.subscription_cohort_year

  FROM subscription
  LEFT JOIN subscription_lineage
    ON subscription_lineage.subscription_name_slugify = subscription.subscription_name_slugify
  LEFT JOIN prep_amendment
    ON subscription.dim_amendment_id_subscription = prep_amendment.dim_amendment_id
  LEFT JOIN subscription_opportunity_mapping
    ON subscription.dim_subscription_id = subscription_opportunity_mapping.dim_subscription_id

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@snalamaru",
    updated_by="@michellecooper",
    created_date="2020-12-16",
    updated_date="2023-04-12"
) }}1a:T11db,

WITH prep_amendment AS (

  SELECT *
  FROM "PROD".common_prep.prep_amendment

), subscription AS (

    SELECT *
    FROM "PROD".common_prep.prep_subscription

), subscription_opportunity_mapping AS (

    SELECT *
    FROM "PROD".common_mapping.map_subscription_opportunity

), subscription_lineage AS (

    SELECT DISTINCT
      subscription_name_slugify,
      subscription_lineage,
      oldest_subscription_in_cohort,
      subscription_cohort_month,
      subscription_cohort_quarter,
      subscription_cohort_year
    FROM "PROD".common_mapping.map_subscription_lineage

), final AS (

  SELECT
    --Surrogate Key
    subscription.dim_subscription_id,

    --Natural Key
    subscription.subscription_name,
    subscription.subscription_version,

    --Common Dimension Keys
    subscription.dim_crm_account_id,
    subscription.dim_billing_account_id,
    subscription.dim_billing_account_id_invoice_owner_account,
    subscription.dim_billing_account_id_creator_account,
    CASE
       WHEN subscription.subscription_created_date < '2019-02-01'
         THEN NULL
       ELSE subscription_opportunity_mapping.dim_crm_opportunity_id
    END                                                                             AS dim_crm_opportunity_id,
    subscription.dim_crm_opportunity_id_current_open_renewal,
    subscription.dim_crm_opportunity_id_closed_lost_renewal,
    

  COALESCE(prep_amendment.dim_amendment_id, MD5(-1)) 

                        AS dim_amendment_id_subscription,

    --Subscription Information
    subscription.created_by_id,
    subscription.updated_by_id,
    subscription.dim_subscription_id_original,
    subscription.dim_subscription_id_previous,
    subscription.subscription_name_slugify,
    subscription.subscription_status,
    subscription.namespace_id,
    subscription.namespace_name,
    subscription.zuora_renewal_subscription_name,
    subscription.zuora_renewal_subscription_name_slugify,
    subscription.current_term,
    subscription.renewal_term,
    subscription.renewal_term_period_type,
    subscription.eoa_starter_bronze_offer_accepted,
    subscription.subscription_sales_type,
    subscription.auto_renew_native_hist,
    subscription.auto_renew_customerdot_hist,
    subscription.turn_on_cloud_licensing,
    subscription.turn_on_operational_metrics,
    subscription.contract_operational_metrics,
    subscription.contract_auto_renewal,
    subscription.turn_on_auto_renewal,
    subscription.contract_seat_reconciliation,
    subscription.turn_on_seat_reconciliation,
    subscription_opportunity_mapping.is_questionable_opportunity_mapping,
    subscription.invoice_owner_account,
    subscription.creator_account,
    subscription.was_purchased_through_reseller,
    subscription.multi_year_deal_subscription_linkage,

    --Date Information
    subscription.subscription_start_date,
    subscription.subscription_end_date,
    subscription.subscription_start_month,
    subscription.subscription_end_month,
    subscription.subscription_end_fiscal_year,
    subscription.subscription_created_date,
    subscription.subscription_updated_date,
    subscription.term_start_date,
    subscription.term_end_date,
    subscription.term_start_month,
    subscription.term_end_month,
    subscription.term_start_fiscal_year,
    subscription.term_end_fiscal_year,
    subscription.is_single_fiscal_year_term_subscription,
    subscription.second_active_renewal_month,
    subscription.cancelled_date,

    --Lineage and Cohort Information
    subscription_lineage.subscription_lineage,
    subscription_lineage.oldest_subscription_in_cohort,
    subscription_lineage.subscription_cohort_month,
    subscription_lineage.subscription_cohort_quarter,
    subscription_lineage.subscription_cohort_year

  FROM subscription
  LEFT JOIN subscription_lineage
    ON subscription_lineage.subscription_name_slugify = subscription.subscription_name_slugify
  LEFT JOIN prep_amendment
    ON subscription.dim_amendment_id_subscription = prep_amendment.dim_amendment_id
  LEFT JOIN subscription_opportunity_mapping
    ON subscription.dim_subscription_id = subscription_opportunity_mapping.dim_subscription_id

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@michellecooper'::VARCHAR       AS updated_by,
      '2020-12-16'::DATE        AS model_created_date,
      '2023-04-12'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1b:T5f1,{{
  config(
    materialized='table',
    tags=["mnpi_exception"]
  )
}}

WITH events AS (
  SELECT *
  FROM {{ ref('wk_fct_snowplow_events_service_ping') }}
  /*
  Only include events where `key_path` is not null. When `key_path` is not null,
  this indicates that there is a one-to-one relationship between a metric and a Redis
  event. In these cases, the Service Ping schema is not designed to send the Redis event name,
  it only sends the metric path. Because of this, we use this file to aggregate those events
  correctly. Additionally, because of the aggregation logic in this file, this model should only be
  used to aggregate event-based all-time metrics.
  */
  WHERE key_path IS NOT NULL
),

agg AS (
  SELECT
    DATE_TRUNC('month', events.behavior_at) AS month,
    events.ultimate_parent_namespace_id,
    events.key_path                         AS metrics_path,
    COUNT(*)                                AS monthly_value
  FROM events
  {{ dbt_utils.group_by(n = 3) }}
),

final AS (
  SELECT
    agg.month,
    agg.ultimate_parent_namespace_id,
    agg.metrics_path,
    agg.monthly_value,
    SUM(agg.monthly_value) OVER(
      PARTITION BY
        agg.ultimate_parent_namespace_id,
        agg.metrics_path
      ORDER BY
        agg.month ASC
      ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
    ) AS cum_metric_value
  FROM agg
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2023-01-30",
    updated_date="2023-03-08"
) }}1c:T69d,

WITH events AS (
  SELECT *
  FROM "PROD".workspace_customer_success.wk_fct_snowplow_events_service_ping
  /*
  Only include events where `key_path` is not null. When `key_path` is not null,
  this indicates that there is a one-to-one relationship between a metric and a Redis
  event. In these cases, the Service Ping schema is not designed to send the Redis event name,
  it only sends the metric path. Because of this, we use this file to aggregate those events
  correctly. Additionally, because of the aggregation logic in this file, this model should only be
  used to aggregate event-based all-time metrics.
  */
  WHERE key_path IS NOT NULL
),

agg AS (
  SELECT
    DATE_TRUNC('month', events.behavior_at) AS month,
    events.ultimate_parent_namespace_id,
    events.key_path                         AS metrics_path,
    COUNT(*)                                AS monthly_value
  FROM events
  group by 1,2,3
),

final AS (
  SELECT
    agg.month,
    agg.ultimate_parent_namespace_id,
    agg.metrics_path,
    agg.monthly_value,
    SUM(agg.monthly_value) OVER(
      PARTITION BY
        agg.ultimate_parent_namespace_id,
        agg.metrics_path
      ORDER BY
        agg.month ASC
      ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
    ) AS cum_metric_value
  FROM agg
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2023-01-30'::DATE        AS model_created_date,
      '2023-03-08'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final1d:T6d13,{{ config(
    tags=["product", "mnpi_exception"]
) }}

{{
  config({
    "materialized": "table"
  })
}}

{{ simple_cte([
    ('saas_usage_ping', 'mart_ping_namespace_metric_health_score_saas'),
    ('bdg_subscription_product_rate_plan', 'bdg_subscription_product_rate_plan'),
    ('gitlab_subscriptions', 'gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base'),
    ('dates', 'dim_date'),
    ('charges', 'fct_charge')
]) }}

, saas_subscriptions AS (

    SELECT DISTINCT
      bdg_subscription_product_rate_plan.dim_subscription_id,
      bdg_subscription_product_rate_plan.dim_billing_account_id
    FROM bdg_subscription_product_rate_plan
    LEFT JOIN charges 
      ON charges.dim_subscription_id = bdg_subscription_product_rate_plan.dim_subscription_id
    WHERE bdg_subscription_product_rate_plan.product_delivery_type = 'SaaS'
      AND (
        bdg_subscription_product_rate_plan.product_rate_plan_charge_name NOT IN (
          '1,000 CI Minutes',
          'Gitlab Storage 10GB - 1 Year',
          'Premium Support'
        )
        OR charges.charge_type != 'OneTime'
      )

), gitlab_seats AS (

    SELECT
      gitlab_subscriptions.namespace_id,
      gitlab_subscriptions.seats,
      gitlab_subscriptions.seats_in_use,
      gitlab_subscriptions.max_seats_used,
      dates.first_day_of_month                                                          AS snapshot_month
    FROM gitlab_subscriptions
    INNER JOIN dates
      ON dates.date_actual BETWEEN TO_DATE(gitlab_subscriptions.valid_from)
                            AND IFNULL(gitlab_subscriptions.valid_to, CURRENT_DATE)
    -- Choosing the last subscription of the month
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        gitlab_subscriptions.namespace_id,
        dates.first_day_of_month
      ORDER BY gitlab_subscriptions.valid_from DESC
    ) = 1

), joined AS (

    SELECT
      saas_usage_ping.dim_subscription_id,
      saas_usage_ping.dim_subscription_id_original,
      saas_subscriptions.dim_billing_account_id,
      saas_usage_ping.dim_namespace_id,
      saas_usage_ping.reporting_month                                                   AS snapshot_month,
      {{ get_date_id('saas_usage_ping.reporting_month') }}                              AS snapshot_date_id,
      saas_usage_ping.ping_date                                                         AS ping_created_at,
      {{ get_date_id('saas_usage_ping.ping_date') }}                                    AS ping_created_date_id,
      saas_usage_ping.instance_type,
      saas_usage_ping.included_in_health_measures_str,
      -- Wave 1
      gitlab_seats.seats                                                                AS subscription_seats,
      gitlab_seats.seats_in_use                                                         AS billable_user_count,
      DIV0(gitlab_seats.seats_in_use, gitlab_seats.seats)                               AS license_utilization,
      gitlab_seats.max_seats_used                                                       AS max_historical_user_count,
      -- Wave 2 & 3
      "usage_activity_by_stage_monthly.manage.events"                                           AS umau_28_days_user,
      "usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo"         AS action_monthly_active_users_project_repo_28_days_user,
      "usage_activity_by_stage_monthly.create.merge_requests"                                   AS merge_requests_28_days_user,
      "usage_activity_by_stage_monthly.create.projects_with_repositories_enabled"               AS projects_with_repositories_enabled_28_days_user,
      "counts.commit_comment"                                                                   AS commit_comment_all_time_event,
      "counts.source_code_pushes"                                                               AS source_code_pushes_all_time_event,
      "usage_activity_by_stage_monthly.verify.ci_pipelines"                                     AS ci_pipelines_28_days_user,
      "usage_activity_by_stage_monthly.verify.ci_internal_pipelines"                            AS ci_internal_pipelines_28_days_user,
      "usage_activity_by_stage_monthly.verify.ci_builds"                                        AS ci_builds_28_days_user,
      "usage_activity_by_stage.verify.ci_builds"                                                AS ci_builds_all_time_user,
      "counts.ci_builds"                                                                        AS ci_builds_all_time_event,
      "counts.ci_runners"                                                                       AS ci_runners_all_time_event,
      "counts.auto_devops_enabled"                                                              AS auto_devops_enabled_all_time_event,
      "gitlab_shared_runners_enabled"                                                           AS gitlab_shared_runners_enabled,
      "container_registry_enabled"                                                              AS container_registry_enabled,
      "counts.template_repositories"                                                            AS template_repositories_all_time_event,
      "usage_activity_by_stage_monthly.verify.ci_pipeline_config_repository"                    AS ci_pipeline_config_repository_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_unique_users_all_secure_scanners"            AS user_unique_users_all_secure_scanners_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_sast_jobs"                                   AS user_sast_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_dast_jobs"                                   AS user_dast_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_dependency_scanning_jobs"                    AS user_dependency_scanning_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_license_management_jobs"                     AS user_license_management_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_secret_detection_jobs"                       AS user_secret_detection_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_container_scanning_jobs"                     AS user_container_scanning_jobs_28_days_user,
      "object_store.packages.enabled"                                                           AS object_store_packages_enabled,
      "counts.projects_with_packages"                                                           AS projects_with_packages_all_time_event,
      "usage_activity_by_stage_monthly.package.projects_with_packages"                          AS projects_with_packages_28_days_event,
      "usage_activity_by_stage_monthly.release.deployments"                                     AS deployments_28_days_user,
      "usage_activity_by_stage_monthly.release.releases"                                        AS releases_28_days_user,
      "usage_activity_by_stage_monthly.plan.epics"                                              AS epics_28_days_user,
      "usage_activity_by_stage_monthly.plan.issues"                                             AS issues_28_days_user,
      -- Wave 3.1
      "counts.ci_internal_pipelines"                                                            AS ci_internal_pipelines_all_time_event,
      "counts.ci_external_pipelines"                                                            AS ci_external_pipelines_all_time_event,
      "counts.merge_requests"                                                                   AS merge_requests_all_time_event,
      "counts.todos"                                                                            AS todos_all_time_event,
      "counts.epics"                                                                            AS epics_all_time_event,
      "counts.issues"                                                                           AS issues_all_time_event,
      "counts.projects"                                                                         AS projects_all_time_event,
      "counts_monthly.deployments"                                                              AS deployments_28_days_event,
      "counts_monthly.packages"                                                                 AS packages_28_days_event,
      "counts.sast_jobs"                                                                        AS sast_jobs_all_time_event,
      "counts.dast_jobs"                                                                        AS dast_jobs_all_time_event,
      "counts.dependency_scanning_jobs"                                                         AS dependency_scanning_jobs_all_time_event,
      "counts.license_management_jobs"                                                          AS license_management_jobs_all_time_event,
      "counts.secret_detection_jobs"                                                            AS secret_detection_jobs_all_time_event,
      "counts.container_scanning_jobs"                                                          AS container_scanning_jobs_all_time_event,
      "counts.projects_jenkins_active"                                                          AS projects_jenkins_active_all_time_event,
      "counts.projects_bamboo_active"                                                           AS projects_bamboo_active_all_time_event,
      "counts.projects_jira_active"                                                             AS projects_jira_active_all_time_event,
      "counts.projects_drone_ci_active"                                                         AS projects_drone_ci_active_all_time_event,
      "counts.projects_github_active"                                                           AS projects_github_active_all_time_event,
      "counts.projects_jira_server_active"                                                      AS projects_jira_server_active_all_time_event,
      "counts.projects_jira_dvcs_cloud_active"                                                  AS projects_jira_dvcs_cloud_active_all_time_event,
      "counts.projects_with_repositories_enabled"                                               AS projects_with_repositories_enabled_all_time_event,
      "counts.protected_branches"                                                               AS protected_branches_all_time_event,
      "counts.remote_mirrors"                                                                   AS remote_mirrors_all_time_event,
      "usage_activity_by_stage.create.projects_enforcing_code_owner_approval"                   AS projects_enforcing_code_owner_approval_28_days_user,
      "usage_activity_by_stage_monthly.configure.project_clusters_enabled"                      AS project_clusters_enabled_28_days_user,
      "redis_hll_counters.analytics.analytics_total_unique_counts_monthly"                      AS analytics_28_days_user,
      "redis_hll_counters.issues_edit.issues_edit_total_unique_counts_monthly"                  AS issues_edit_28_days_user,
      "redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly"              AS user_packages_28_days_user,
      "redis_hll_counters.terraform.p_terraform_state_api_unique_users_monthly"                 AS terraform_state_api_28_days_user,
      "redis_hll_counters.incident_management.incident_management_total_unique_counts_monthly"  AS incident_management_28_days_user,
      -- Wave 3.2
      "instance_auto_devops_enabled"                                                            AS auto_devops_enabled,
      "gitaly.clusters"                                                                         AS gitaly_clusters_instance,
      "counts.epics_deepest_relationship_level"                                                 AS epics_deepest_relationship_level_instance,
      "counts.clusters_applications_cilium"                                                     AS clusters_applications_cilium_all_time_event,
      "counts.network_policy_forwards"                                                          AS network_policy_forwards_all_time_event,
      "counts.network_policy_drops"                                                             AS network_policy_drops_all_time_event,
      "counts.requirements_with_test_report"                                                    AS requirements_with_test_report_all_time_event,
      "counts.requirement_test_reports_ci"                                                      AS requirement_test_reports_ci_all_time_event,
      "counts.projects_imported_from_github"                                                    AS projects_imported_from_github_all_time_event,
      "counts.projects_jira_cloud_active"                                                       AS projects_jira_cloud_active_all_time_event,
      "counts.projects_jira_dvcs_server_active"                                                 AS projects_jira_dvcs_server_active_all_time_event,
      "counts.service_desk_issues"                                                              AS service_desk_issues_all_time_event,
      "usage_activity_by_stage.verify.ci_pipelines"                                             AS ci_pipelines_all_time_user,
      "usage_activity_by_stage_monthly.plan.service_desk_issues"                                AS service_desk_issues_28_days_user,
      "usage_activity_by_stage_monthly.plan.projects_jira_active"                               AS projects_jira_active_28_days_user,
      "usage_activity_by_stage_monthly.plan.projects_jira_dvcs_cloud_active"                    AS projects_jira_dvcs_cloud_active_28_days_user,
      "usage_activity_by_stage_monthly.plan.projects_jira_dvcs_server_active"                   AS projects_jira_dvcs_server_active_28_days_user,
      "usage_activity_by_stage_monthly.create.merge_requests_with_required_codeowners"          AS merge_requests_with_required_code_owners_28_days_user,
      "redis_hll_counters.analytics.g_analytics_valuestream_monthly"                            AS analytics_value_stream_28_days_event,
      "redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly"                    AS code_review_user_approve_mr_28_days_user,
      "redis_hll_counters.epics_usage.epics_usage_total_unique_counts_monthly"                  AS epics_usage_28_days_user,
      "redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly"                AS ci_templates_usage_28_days_event,
      "redis_hll_counters.issues_edit.g_project_management_issue_milestone_changed_monthly"     AS project_management_issue_milestone_changed_28_days_user,
      "redis_hll_counters.issues_edit.g_project_management_issue_iteration_changed_monthly"     AS project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      "usage_activity_by_stage_monthly.create.protected_branches"                               AS protected_branches_28_days_user,
      "redis_hll_counters.analytics.p_analytics_ci_cd_lead_time_monthly"                        AS ci_cd_lead_time_usage_28_days_event,
      "redis_hll_counters.analytics.p_analytics_ci_cd_deployment_frequency_monthly"             AS ci_cd_deployment_frequency_usage_28_days_event,
      "usage_activity_by_stage.create.projects_with_repositories_enabled"                       AS projects_with_repositories_enabled_all_time_user,
      "usage_activity_by_stage_monthly.secure.user_api_fuzzing_jobs"                            AS api_fuzzing_jobs_usage_28_days_user,
      "usage_activity_by_stage_monthly.secure.coverage_fuzzing_pipeline"                        AS coverage_fuzzing_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.api_fuzzing_pipeline"                             AS api_fuzzing_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.container_scanning_pipeline"                      AS container_scanning_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.dependency_scanning_pipeline"                     AS dependency_scanning_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.sast_pipeline"                                    AS sast_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.secret_detection_pipeline"                        AS secret_detection_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.dast_pipeline"                                    AS dast_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.user_coverage_fuzzing_jobs"                       AS coverage_fuzzing_jobs_28_days_user,
      "counts.environments"                                                                     AS environments_all_time_event,
      "counts.feature_flags"                                                                    AS feature_flags_all_time_event,
      "counts_monthly.successful_deployments"                                                   AS successful_deployments_28_days_event,
      "counts_monthly.failed_deployments"                                                       AS failed_deployments_28_days_event,
      "usage_activity_by_stage_monthly.manage.projects_with_compliance_framework"               AS projects_compliance_framework_all_time_event,
      "redis_hll_counters.pipeline_authoring.o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly" AS commit_ci_config_file_28_days_user,
      "compliance_unique_visits.g_compliance_audit_events"                                      AS view_audit_all_time_user,
      -- Wave 5.2
      "usage_activity_by_stage.secure.user_dependency_scanning_jobs"                            AS dependency_scanning_jobs_all_time_user,
      "analytics_unique_visits.i_analytics_dev_ops_adoption"                                    AS analytics_devops_adoption_all_time_user,
      "usage_activity_by_stage.manage.project_imports.total"                                    AS projects_imported_all_time_event,
      "usage_activity_by_stage_monthly.secure.user_preferences_group_overview_security_dashboard"  AS preferences_security_dashboard_28_days_user,
      "usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit"             AS web_ide_edit_28_days_user,
      "counts.ci_pipeline_config_auto_devops"                                                   AS auto_devops_pipelines_all_time_event,
      "counts.projects_prometheus_active"                                                       AS projects_prometheus_active_all_time_event,
      "prometheus_enabled"                                                                      AS prometheus_enabled,
      "prometheus_metrics_enabled"                                                              AS prometheus_metrics_enabled,
      "usage_activity_by_stage.manage.group_saml_enabled"                                       AS group_saml_enabled,
      "usage_activity_by_stage.manage.issue_imports.jira"                                       AS jira_issue_imports_all_time_event,
      "usage_activity_by_stage.plan.epics"                                                      AS author_epic_all_time_user,
      "usage_activity_by_stage.plan.issues"                                                     AS author_issue_all_time_user,
      "usage_activity_by_stage_monthly.release.failed_deployments"                              AS failed_deployments_28_days_user,
      "usage_activity_by_stage_monthly.release.successful_deployments"                          AS successful_deployments_28_days_user,
      -- Wave 5.3
      "geo_enabled"                                                                             AS geo_enabled,
      "usage_activity_by_stage_monthly.verify.ci_pipeline_config_auto_devops"                   AS auto_devops_pipelines_28_days_user,
      "counts.ci_runners_instance_type_active"                                                  AS active_instance_runners_all_time_event,
      "counts.ci_runners_group_type_active"                                                     AS active_group_runners_all_time_event,
      "counts.ci_runners_project_type_active"                                                   AS active_project_runners_all_time_event,
      "gitaly.version"::VARCHAR                                                                 AS gitaly_version,
      "gitaly.servers"                                                                          AS gitaly_servers_all_time_event,
      -- Wave 6.0
      "usage_activity_by_stage.secure.api_fuzzing_scans"                                        AS api_fuzzing_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.api_fuzzing_scans"                                AS api_fuzzing_scans_28_days_event,
      "usage_activity_by_stage.secure.coverage_fuzzing_scans"                                   AS coverage_fuzzing_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.coverage_fuzzing_scans"                           AS coverage_fuzzing_scans_28_days_event,
      "usage_activity_by_stage.secure.secret_detection_scans"                                   AS secret_detection_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.secret_detection_scans"                           AS secret_detection_scans_28_days_event,
      "usage_activity_by_stage.secure.dependency_scanning_scans"                                AS dependency_scanning_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.dependency_scanning_scans"                        AS dependency_scanning_scans_28_days_event,
      "usage_activity_by_stage.secure.container_scanning_scans"                                 AS container_scanning_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.container_scanning_scans"                         AS container_scanning_scans_28_days_event,
      "usage_activity_by_stage.secure.dast_scans"                                               AS dast_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.dast_scans"                                       AS dast_scans_28_days_event,
      "usage_activity_by_stage.secure.sast_scans"                                               AS sast_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.sast_scans"                                       AS sast_scans_28_days_event,
      -- Wave 6.1
      "counts.package_events_i_package_push_package_by_deploy_token"                            AS packages_pushed_registry_all_time_event,
      "counts.package_events_i_package_pull_package_by_guest"                                   AS packages_pulled_registry_all_time_event,
      "redis_hll_counters.compliance.g_compliance_dashboard_monthly"                            AS compliance_dashboard_view_28_days_user,
      "redis_hll_counters.compliance.g_compliance_audit_events_monthly"                         AS audit_screen_view_28_days_user,
      "redis_hll_counters.compliance.i_compliance_audit_events_monthly"                         AS instance_audit_screen_view_28_days_user,
      "redis_hll_counters.compliance.i_compliance_credential_inventory_monthly"                 AS credential_inventory_view_28_days_user,
      "usage_activity_by_stage.manage.compliance_frameworks_with_pipeline"                      AS compliance_frameworks_pipeline_all_time_event,
      "usage_activity_by_stage_monthly.manage.compliance_frameworks_with_pipeline"              AS compliance_frameworks_pipeline_28_days_event,
      "usage_activity_by_stage.manage.groups_with_event_streaming_destinations"                 AS groups_streaming_destinations_all_time_event,
      "usage_activity_by_stage_monthly.manage.groups_with_event_streaming_destinations"         AS groups_streaming_destinations_28_days_event,
      "usage_activity_by_stage.manage.audit_event_destinations"                                 AS audit_event_destinations_all_time_event,
      "usage_activity_by_stage_monthly.manage.audit_event_destinations"                         AS audit_event_destinations_28_days_event,
      "counts.projects_with_external_status_checks"                                             AS projects_status_checks_all_time_event,
      "counts.external_status_checks"                                                           AS external_status_checks_all_time_event,
      "redis_hll_counters.search.i_search_paid_monthly"                                         AS paid_license_search_28_days_user,
      "redis_hll_counters.manage.unique_active_users_monthly"                                   AS last_activity_28_days_user,
      -- Wave 7
      "counts_monthly.snippets"                                                                                             AS snippets_28_days_event,
      "redis_hll_counters.ide_edit.g_edit_by_sfe_monthly"                                                                   AS single_file_editor_28_days_user,
      "redis_hll_counters.code_review.i_code_review_create_mr_monthly"                                                      AS merge_requests_created_28_days_event,
      "redis_hll_counters.code_review.i_code_review_user_create_mr_monthly"                                                 AS merge_requests_created_28_days_user,
      "usage_activity_by_stage_monthly.govern.merged_merge_requests_using_approval_rules_distinct"                          AS merge_requests_approval_rules_28_days_event,
      "usage_activity_by_stage_monthly.manage.custom_compliance_frameworks"                                                 AS custom_compliance_frameworks_28_days_event,
      "usage_activity_by_stage_monthly.govern.distinct_count_project_id_from_security_orchestration_policy_configurations"  AS projects_security_policy_28_days_event,
      "usage_activity_by_stage_monthly.govern.user_merge_requests_for_projects_with_assigned_security_policy_project"       AS merge_requests_security_policy_28_days_user,
      "redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly"                                         AS pipelines_implicit_auto_devops_28_days_event,
      "usage_activity_by_stage_monthly.verify.ci_pipeline_schedules"                                                        AS pipeline_schedules_28_days_user,
      -- Wave 8
      "counts_monthly.ci_internal_pipelines"    AS ci_internal_pipelines_28_days_event,
      -- Data Quality Flags
      IFF(license_utilization = 0
            AND billable_user_count > 0,
          TRUE, FALSE)                                                                  AS is_missing_paid_seats,
      IFF(saas_usage_ping.reporting_month IS NOT NULL
            OR gitlab_seats.snapshot_month IS NOT NULL,
          TRUE, FALSE)                                                                  AS is_data_in_subscription_month,
      IFF(is_data_in_subscription_month = TRUE AND
            ROW_NUMBER() OVER (PARTITION BY
                                saas_usage_ping.dim_subscription_id,
                                saas_usage_ping.dim_namespace_id,
                                is_data_in_subscription_month
                               ORDER BY saas_usage_ping.reporting_month DESC
                            ) = 1,
          TRUE, FALSE)                                                                        AS is_latest_data
    FROM saas_usage_ping
    JOIN saas_subscriptions
      ON saas_subscriptions.dim_subscription_id = saas_usage_ping.dim_subscription_id
    LEFT JOIN gitlab_seats
      ON saas_usage_ping.dim_namespace_id = gitlab_seats.namespace_id
      AND saas_usage_ping.reporting_month = gitlab_seats.snapshot_month

)

{{ dbt_audit(
    cte_ref="joined",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-10-12",
    updated_date="2023-05-30"
) }}1e:T6e97,





WITH saas_usage_ping AS (

    SELECT * 
    FROM "PROD".common_mart_product.mart_ping_namespace_metric_health_score_saas

), bdg_subscription_product_rate_plan AS (

    SELECT * 
    FROM "PROD".common.bdg_subscription_product_rate_plan

), gitlab_subscriptions AS (

    SELECT * 
    FROM "PROD".legacy.gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common.fct_charge

)

, saas_subscriptions AS (

    SELECT DISTINCT
      bdg_subscription_product_rate_plan.dim_subscription_id,
      bdg_subscription_product_rate_plan.dim_billing_account_id
    FROM bdg_subscription_product_rate_plan
    LEFT JOIN charges 
      ON charges.dim_subscription_id = bdg_subscription_product_rate_plan.dim_subscription_id
    WHERE bdg_subscription_product_rate_plan.product_delivery_type = 'SaaS'
      AND (
        bdg_subscription_product_rate_plan.product_rate_plan_charge_name NOT IN (
          '1,000 CI Minutes',
          'Gitlab Storage 10GB - 1 Year',
          'Premium Support'
        )
        OR charges.charge_type != 'OneTime'
      )

), gitlab_seats AS (

    SELECT
      gitlab_subscriptions.namespace_id,
      gitlab_subscriptions.seats,
      gitlab_subscriptions.seats_in_use,
      gitlab_subscriptions.max_seats_used,
      dates.first_day_of_month                                                          AS snapshot_month
    FROM gitlab_subscriptions
    INNER JOIN dates
      ON dates.date_actual BETWEEN TO_DATE(gitlab_subscriptions.valid_from)
                            AND IFNULL(gitlab_subscriptions.valid_to, CURRENT_DATE)
    -- Choosing the last subscription of the month
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        gitlab_subscriptions.namespace_id,
        dates.first_day_of_month
      ORDER BY gitlab_subscriptions.valid_from DESC
    ) = 1

), joined AS (

    SELECT
      saas_usage_ping.dim_subscription_id,
      saas_usage_ping.dim_subscription_id_original,
      saas_subscriptions.dim_billing_account_id,
      saas_usage_ping.dim_namespace_id,
      saas_usage_ping.reporting_month                                                   AS snapshot_month,
      

  TO_NUMBER(TO_CHAR(saas_usage_ping.reporting_month::DATE,'YYYYMMDD'),'99999999')

                              AS snapshot_date_id,
      saas_usage_ping.ping_date                                                         AS ping_created_at,
      

  TO_NUMBER(TO_CHAR(saas_usage_ping.ping_date::DATE,'YYYYMMDD'),'99999999')

                                    AS ping_created_date_id,
      saas_usage_ping.instance_type,
      saas_usage_ping.included_in_health_measures_str,
      -- Wave 1
      gitlab_seats.seats                                                                AS subscription_seats,
      gitlab_seats.seats_in_use                                                         AS billable_user_count,
      DIV0(gitlab_seats.seats_in_use, gitlab_seats.seats)                               AS license_utilization,
      gitlab_seats.max_seats_used                                                       AS max_historical_user_count,
      -- Wave 2 & 3
      "usage_activity_by_stage_monthly.manage.events"                                           AS umau_28_days_user,
      "usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo"         AS action_monthly_active_users_project_repo_28_days_user,
      "usage_activity_by_stage_monthly.create.merge_requests"                                   AS merge_requests_28_days_user,
      "usage_activity_by_stage_monthly.create.projects_with_repositories_enabled"               AS projects_with_repositories_enabled_28_days_user,
      "counts.commit_comment"                                                                   AS commit_comment_all_time_event,
      "counts.source_code_pushes"                                                               AS source_code_pushes_all_time_event,
      "usage_activity_by_stage_monthly.verify.ci_pipelines"                                     AS ci_pipelines_28_days_user,
      "usage_activity_by_stage_monthly.verify.ci_internal_pipelines"                            AS ci_internal_pipelines_28_days_user,
      "usage_activity_by_stage_monthly.verify.ci_builds"                                        AS ci_builds_28_days_user,
      "usage_activity_by_stage.verify.ci_builds"                                                AS ci_builds_all_time_user,
      "counts.ci_builds"                                                                        AS ci_builds_all_time_event,
      "counts.ci_runners"                                                                       AS ci_runners_all_time_event,
      "counts.auto_devops_enabled"                                                              AS auto_devops_enabled_all_time_event,
      "gitlab_shared_runners_enabled"                                                           AS gitlab_shared_runners_enabled,
      "container_registry_enabled"                                                              AS container_registry_enabled,
      "counts.template_repositories"                                                            AS template_repositories_all_time_event,
      "usage_activity_by_stage_monthly.verify.ci_pipeline_config_repository"                    AS ci_pipeline_config_repository_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_unique_users_all_secure_scanners"            AS user_unique_users_all_secure_scanners_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_sast_jobs"                                   AS user_sast_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_dast_jobs"                                   AS user_dast_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_dependency_scanning_jobs"                    AS user_dependency_scanning_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_license_management_jobs"                     AS user_license_management_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_secret_detection_jobs"                       AS user_secret_detection_jobs_28_days_user,
      "usage_activity_by_stage_monthly.secure.user_container_scanning_jobs"                     AS user_container_scanning_jobs_28_days_user,
      "object_store.packages.enabled"                                                           AS object_store_packages_enabled,
      "counts.projects_with_packages"                                                           AS projects_with_packages_all_time_event,
      "usage_activity_by_stage_monthly.package.projects_with_packages"                          AS projects_with_packages_28_days_event,
      "usage_activity_by_stage_monthly.release.deployments"                                     AS deployments_28_days_user,
      "usage_activity_by_stage_monthly.release.releases"                                        AS releases_28_days_user,
      "usage_activity_by_stage_monthly.plan.epics"                                              AS epics_28_days_user,
      "usage_activity_by_stage_monthly.plan.issues"                                             AS issues_28_days_user,
      -- Wave 3.1
      "counts.ci_internal_pipelines"                                                            AS ci_internal_pipelines_all_time_event,
      "counts.ci_external_pipelines"                                                            AS ci_external_pipelines_all_time_event,
      "counts.merge_requests"                                                                   AS merge_requests_all_time_event,
      "counts.todos"                                                                            AS todos_all_time_event,
      "counts.epics"                                                                            AS epics_all_time_event,
      "counts.issues"                                                                           AS issues_all_time_event,
      "counts.projects"                                                                         AS projects_all_time_event,
      "counts_monthly.deployments"                                                              AS deployments_28_days_event,
      "counts_monthly.packages"                                                                 AS packages_28_days_event,
      "counts.sast_jobs"                                                                        AS sast_jobs_all_time_event,
      "counts.dast_jobs"                                                                        AS dast_jobs_all_time_event,
      "counts.dependency_scanning_jobs"                                                         AS dependency_scanning_jobs_all_time_event,
      "counts.license_management_jobs"                                                          AS license_management_jobs_all_time_event,
      "counts.secret_detection_jobs"                                                            AS secret_detection_jobs_all_time_event,
      "counts.container_scanning_jobs"                                                          AS container_scanning_jobs_all_time_event,
      "counts.projects_jenkins_active"                                                          AS projects_jenkins_active_all_time_event,
      "counts.projects_bamboo_active"                                                           AS projects_bamboo_active_all_time_event,
      "counts.projects_jira_active"                                                             AS projects_jira_active_all_time_event,
      "counts.projects_drone_ci_active"                                                         AS projects_drone_ci_active_all_time_event,
      "counts.projects_github_active"                                                           AS projects_github_active_all_time_event,
      "counts.projects_jira_server_active"                                                      AS projects_jira_server_active_all_time_event,
      "counts.projects_jira_dvcs_cloud_active"                                                  AS projects_jira_dvcs_cloud_active_all_time_event,
      "counts.projects_with_repositories_enabled"                                               AS projects_with_repositories_enabled_all_time_event,
      "counts.protected_branches"                                                               AS protected_branches_all_time_event,
      "counts.remote_mirrors"                                                                   AS remote_mirrors_all_time_event,
      "usage_activity_by_stage.create.projects_enforcing_code_owner_approval"                   AS projects_enforcing_code_owner_approval_28_days_user,
      "usage_activity_by_stage_monthly.configure.project_clusters_enabled"                      AS project_clusters_enabled_28_days_user,
      "redis_hll_counters.analytics.analytics_total_unique_counts_monthly"                      AS analytics_28_days_user,
      "redis_hll_counters.issues_edit.issues_edit_total_unique_counts_monthly"                  AS issues_edit_28_days_user,
      "redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly"              AS user_packages_28_days_user,
      "redis_hll_counters.terraform.p_terraform_state_api_unique_users_monthly"                 AS terraform_state_api_28_days_user,
      "redis_hll_counters.incident_management.incident_management_total_unique_counts_monthly"  AS incident_management_28_days_user,
      -- Wave 3.2
      "instance_auto_devops_enabled"                                                            AS auto_devops_enabled,
      "gitaly.clusters"                                                                         AS gitaly_clusters_instance,
      "counts.epics_deepest_relationship_level"                                                 AS epics_deepest_relationship_level_instance,
      "counts.clusters_applications_cilium"                                                     AS clusters_applications_cilium_all_time_event,
      "counts.network_policy_forwards"                                                          AS network_policy_forwards_all_time_event,
      "counts.network_policy_drops"                                                             AS network_policy_drops_all_time_event,
      "counts.requirements_with_test_report"                                                    AS requirements_with_test_report_all_time_event,
      "counts.requirement_test_reports_ci"                                                      AS requirement_test_reports_ci_all_time_event,
      "counts.projects_imported_from_github"                                                    AS projects_imported_from_github_all_time_event,
      "counts.projects_jira_cloud_active"                                                       AS projects_jira_cloud_active_all_time_event,
      "counts.projects_jira_dvcs_server_active"                                                 AS projects_jira_dvcs_server_active_all_time_event,
      "counts.service_desk_issues"                                                              AS service_desk_issues_all_time_event,
      "usage_activity_by_stage.verify.ci_pipelines"                                             AS ci_pipelines_all_time_user,
      "usage_activity_by_stage_monthly.plan.service_desk_issues"                                AS service_desk_issues_28_days_user,
      "usage_activity_by_stage_monthly.plan.projects_jira_active"                               AS projects_jira_active_28_days_user,
      "usage_activity_by_stage_monthly.plan.projects_jira_dvcs_cloud_active"                    AS projects_jira_dvcs_cloud_active_28_days_user,
      "usage_activity_by_stage_monthly.plan.projects_jira_dvcs_server_active"                   AS projects_jira_dvcs_server_active_28_days_user,
      "usage_activity_by_stage_monthly.create.merge_requests_with_required_codeowners"          AS merge_requests_with_required_code_owners_28_days_user,
      "redis_hll_counters.analytics.g_analytics_valuestream_monthly"                            AS analytics_value_stream_28_days_event,
      "redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly"                    AS code_review_user_approve_mr_28_days_user,
      "redis_hll_counters.epics_usage.epics_usage_total_unique_counts_monthly"                  AS epics_usage_28_days_user,
      "redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly"                AS ci_templates_usage_28_days_event,
      "redis_hll_counters.issues_edit.g_project_management_issue_milestone_changed_monthly"     AS project_management_issue_milestone_changed_28_days_user,
      "redis_hll_counters.issues_edit.g_project_management_issue_iteration_changed_monthly"     AS project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      "usage_activity_by_stage_monthly.create.protected_branches"                               AS protected_branches_28_days_user,
      "redis_hll_counters.analytics.p_analytics_ci_cd_lead_time_monthly"                        AS ci_cd_lead_time_usage_28_days_event,
      "redis_hll_counters.analytics.p_analytics_ci_cd_deployment_frequency_monthly"             AS ci_cd_deployment_frequency_usage_28_days_event,
      "usage_activity_by_stage.create.projects_with_repositories_enabled"                       AS projects_with_repositories_enabled_all_time_user,
      "usage_activity_by_stage_monthly.secure.user_api_fuzzing_jobs"                            AS api_fuzzing_jobs_usage_28_days_user,
      "usage_activity_by_stage_monthly.secure.coverage_fuzzing_pipeline"                        AS coverage_fuzzing_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.api_fuzzing_pipeline"                             AS api_fuzzing_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.container_scanning_pipeline"                      AS container_scanning_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.dependency_scanning_pipeline"                     AS dependency_scanning_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.sast_pipeline"                                    AS sast_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.secret_detection_pipeline"                        AS secret_detection_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.dast_pipeline"                                    AS dast_pipeline_usage_28_days_event,
      "usage_activity_by_stage_monthly.secure.user_coverage_fuzzing_jobs"                       AS coverage_fuzzing_jobs_28_days_user,
      "counts.environments"                                                                     AS environments_all_time_event,
      "counts.feature_flags"                                                                    AS feature_flags_all_time_event,
      "counts_monthly.successful_deployments"                                                   AS successful_deployments_28_days_event,
      "counts_monthly.failed_deployments"                                                       AS failed_deployments_28_days_event,
      "usage_activity_by_stage_monthly.manage.projects_with_compliance_framework"               AS projects_compliance_framework_all_time_event,
      "redis_hll_counters.pipeline_authoring.o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly" AS commit_ci_config_file_28_days_user,
      "compliance_unique_visits.g_compliance_audit_events"                                      AS view_audit_all_time_user,
      -- Wave 5.2
      "usage_activity_by_stage.secure.user_dependency_scanning_jobs"                            AS dependency_scanning_jobs_all_time_user,
      "analytics_unique_visits.i_analytics_dev_ops_adoption"                                    AS analytics_devops_adoption_all_time_user,
      "usage_activity_by_stage.manage.project_imports.total"                                    AS projects_imported_all_time_event,
      "usage_activity_by_stage_monthly.secure.user_preferences_group_overview_security_dashboard"  AS preferences_security_dashboard_28_days_user,
      "usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit"             AS web_ide_edit_28_days_user,
      "counts.ci_pipeline_config_auto_devops"                                                   AS auto_devops_pipelines_all_time_event,
      "counts.projects_prometheus_active"                                                       AS projects_prometheus_active_all_time_event,
      "prometheus_enabled"                                                                      AS prometheus_enabled,
      "prometheus_metrics_enabled"                                                              AS prometheus_metrics_enabled,
      "usage_activity_by_stage.manage.group_saml_enabled"                                       AS group_saml_enabled,
      "usage_activity_by_stage.manage.issue_imports.jira"                                       AS jira_issue_imports_all_time_event,
      "usage_activity_by_stage.plan.epics"                                                      AS author_epic_all_time_user,
      "usage_activity_by_stage.plan.issues"                                                     AS author_issue_all_time_user,
      "usage_activity_by_stage_monthly.release.failed_deployments"                              AS failed_deployments_28_days_user,
      "usage_activity_by_stage_monthly.release.successful_deployments"                          AS successful_deployments_28_days_user,
      -- Wave 5.3
      "geo_enabled"                                                                             AS geo_enabled,
      "usage_activity_by_stage_monthly.verify.ci_pipeline_config_auto_devops"                   AS auto_devops_pipelines_28_days_user,
      "counts.ci_runners_instance_type_active"                                                  AS active_instance_runners_all_time_event,
      "counts.ci_runners_group_type_active"                                                     AS active_group_runners_all_time_event,
      "counts.ci_runners_project_type_active"                                                   AS active_project_runners_all_time_event,
      "gitaly.version"::VARCHAR                                                                 AS gitaly_version,
      "gitaly.servers"                                                                          AS gitaly_servers_all_time_event,
      -- Wave 6.0
      "usage_activity_by_stage.secure.api_fuzzing_scans"                                        AS api_fuzzing_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.api_fuzzing_scans"                                AS api_fuzzing_scans_28_days_event,
      "usage_activity_by_stage.secure.coverage_fuzzing_scans"                                   AS coverage_fuzzing_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.coverage_fuzzing_scans"                           AS coverage_fuzzing_scans_28_days_event,
      "usage_activity_by_stage.secure.secret_detection_scans"                                   AS secret_detection_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.secret_detection_scans"                           AS secret_detection_scans_28_days_event,
      "usage_activity_by_stage.secure.dependency_scanning_scans"                                AS dependency_scanning_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.dependency_scanning_scans"                        AS dependency_scanning_scans_28_days_event,
      "usage_activity_by_stage.secure.container_scanning_scans"                                 AS container_scanning_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.container_scanning_scans"                         AS container_scanning_scans_28_days_event,
      "usage_activity_by_stage.secure.dast_scans"                                               AS dast_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.dast_scans"                                       AS dast_scans_28_days_event,
      "usage_activity_by_stage.secure.sast_scans"                                               AS sast_scans_all_time_event,
      "usage_activity_by_stage_monthly.secure.sast_scans"                                       AS sast_scans_28_days_event,
      -- Wave 6.1
      "counts.package_events_i_package_push_package_by_deploy_token"                            AS packages_pushed_registry_all_time_event,
      "counts.package_events_i_package_pull_package_by_guest"                                   AS packages_pulled_registry_all_time_event,
      "redis_hll_counters.compliance.g_compliance_dashboard_monthly"                            AS compliance_dashboard_view_28_days_user,
      "redis_hll_counters.compliance.g_compliance_audit_events_monthly"                         AS audit_screen_view_28_days_user,
      "redis_hll_counters.compliance.i_compliance_audit_events_monthly"                         AS instance_audit_screen_view_28_days_user,
      "redis_hll_counters.compliance.i_compliance_credential_inventory_monthly"                 AS credential_inventory_view_28_days_user,
      "usage_activity_by_stage.manage.compliance_frameworks_with_pipeline"                      AS compliance_frameworks_pipeline_all_time_event,
      "usage_activity_by_stage_monthly.manage.compliance_frameworks_with_pipeline"              AS compliance_frameworks_pipeline_28_days_event,
      "usage_activity_by_stage.manage.groups_with_event_streaming_destinations"                 AS groups_streaming_destinations_all_time_event,
      "usage_activity_by_stage_monthly.manage.groups_with_event_streaming_destinations"         AS groups_streaming_destinations_28_days_event,
      "usage_activity_by_stage.manage.audit_event_destinations"                                 AS audit_event_destinations_all_time_event,
      "usage_activity_by_stage_monthly.manage.audit_event_destinations"                         AS audit_event_destinations_28_days_event,
      "counts.projects_with_external_status_checks"                                             AS projects_status_checks_all_time_event,
      "counts.external_status_checks"                                                           AS external_status_checks_all_time_event,
      "redis_hll_counters.search.i_search_paid_monthly"                                         AS paid_license_search_28_days_user,
      "redis_hll_counters.manage.unique_active_users_monthly"                                   AS last_activity_28_days_user,
      -- Wave 7
      "counts_monthly.snippets"                                                                                             AS snippets_28_days_event,
      "redis_hll_counters.ide_edit.g_edit_by_sfe_monthly"                                                                   AS single_file_editor_28_days_user,
      "redis_hll_counters.code_review.i_code_review_create_mr_monthly"                                                      AS merge_requests_created_28_days_event,
      "redis_hll_counters.code_review.i_code_review_user_create_mr_monthly"                                                 AS merge_requests_created_28_days_user,
      "usage_activity_by_stage_monthly.govern.merged_merge_requests_using_approval_rules_distinct"                          AS merge_requests_approval_rules_28_days_event,
      "usage_activity_by_stage_monthly.manage.custom_compliance_frameworks"                                                 AS custom_compliance_frameworks_28_days_event,
      "usage_activity_by_stage_monthly.govern.distinct_count_project_id_from_security_orchestration_policy_configurations"  AS projects_security_policy_28_days_event,
      "usage_activity_by_stage_monthly.govern.user_merge_requests_for_projects_with_assigned_security_policy_project"       AS merge_requests_security_policy_28_days_user,
      "redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly"                                         AS pipelines_implicit_auto_devops_28_days_event,
      "usage_activity_by_stage_monthly.verify.ci_pipeline_schedules"                                                        AS pipeline_schedules_28_days_user,
      -- Wave 8
      "counts_monthly.ci_internal_pipelines"    AS ci_internal_pipelines_28_days_event,
      -- Data Quality Flags
      IFF(license_utilization = 0
            AND billable_user_count > 0,
          TRUE, FALSE)                                                                  AS is_missing_paid_seats,
      IFF(saas_usage_ping.reporting_month IS NOT NULL
            OR gitlab_seats.snapshot_month IS NOT NULL,
          TRUE, FALSE)                                                                  AS is_data_in_subscription_month,
      IFF(is_data_in_subscription_month = TRUE AND
            ROW_NUMBER() OVER (PARTITION BY
                                saas_usage_ping.dim_subscription_id,
                                saas_usage_ping.dim_namespace_id,
                                is_data_in_subscription_month
                               ORDER BY saas_usage_ping.reporting_month DESC
                            ) = 1,
          TRUE, FALSE)                                                                        AS is_latest_data
    FROM saas_usage_ping
    JOIN saas_subscriptions
      ON saas_subscriptions.dim_subscription_id = saas_usage_ping.dim_subscription_id
    LEFT JOIN gitlab_seats
      ON saas_usage_ping.dim_namespace_id = gitlab_seats.namespace_id
      AND saas_usage_ping.reporting_month = gitlab_seats.snapshot_month

)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-10-12'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM joined1f:T55d,{{ config({
        "tags": ["mnpi_exception"],
        "alias": "dim_billing_account"
    })
}}

{{ simple_cte([
    ('prep_billing_account','prep_billing_account')
]) }}

, billing_account AS (


    SELECT
    --surrogate key
      prep_billing_account.dim_billing_account_sk,
    
     --natural key
      prep_billing_account.dim_billing_account_id,
 
     --foreign key
      prep_billing_account.dim_crm_account_id,

     --Other attributes
      prep_billing_account.billing_account_number,
      prep_billing_account.billing_account_name,
      prep_billing_account.account_status,
      prep_billing_account.parent_id,
      prep_billing_account.sfdc_account_code                  AS crm_account_code, 
      prep_billing_account.sfdc_entity                        AS crm_entity,
      prep_billing_account.account_currency,
      prep_billing_account.sold_to_country,
      prep_billing_account.ssp_channel,
      prep_billing_account.po_required,
      prep_billing_account.auto_pay,
      prep_billing_account.default_payment_method_type,
      prep_billing_account.is_deleted,
      prep_billing_account.batch,
      prep_billing_account.record_data_source
    FROM prep_billing_account

)

{{ dbt_audit(
    cte_ref="billing_account",
    created_by="@snalamaru",
    updated_by="@snalamaru",
    created_date="2023-04-25",
    updated_date="2023-05-31"
) }}20:T608,



WITH prep_billing_account AS (

    SELECT * 
    FROM "PROD".common_prep.prep_billing_account

)

, billing_account AS (


    SELECT
    --surrogate key
      prep_billing_account.dim_billing_account_sk,
    
     --natural key
      prep_billing_account.dim_billing_account_id,
 
     --foreign key
      prep_billing_account.dim_crm_account_id,

     --Other attributes
      prep_billing_account.billing_account_number,
      prep_billing_account.billing_account_name,
      prep_billing_account.account_status,
      prep_billing_account.parent_id,
      prep_billing_account.sfdc_account_code                  AS crm_account_code, 
      prep_billing_account.sfdc_entity                        AS crm_entity,
      prep_billing_account.account_currency,
      prep_billing_account.sold_to_country,
      prep_billing_account.ssp_channel,
      prep_billing_account.po_required,
      prep_billing_account.auto_pay,
      prep_billing_account.default_payment_method_type,
      prep_billing_account.is_deleted,
      prep_billing_account.batch,
      prep_billing_account.record_data_source
    FROM prep_billing_account

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@snalamaru'::VARCHAR       AS updated_by,
      '2023-04-25'::DATE        AS model_created_date,
      '2023-05-31'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM billing_account21:T58e,{{ config(
    tags=["product"]
) }}

{{ simple_cte([
    ('prep_namespace', 'prep_namespace')
]) }},

final AS (

  SELECT
    dim_namespace_id,
    namespace_is_internal,
    namespace_is_ultimate_parent,
    namespace_name,
    namespace_path,
    owner_id,
    namespace_type,
    has_avatar,
    created_at,
    updated_at,
    is_membership_locked,
    has_request_access_enabled,
    has_share_with_group_locked,
    is_setup_for_company,
    visibility_level,
    ldap_sync_status,
    ldap_sync_error,
    ldap_sync_last_update_at,
    ldap_sync_last_successful_update_at,
    ldap_sync_last_sync_at,
    lfs_enabled,
    parent_id,
    shared_runners_enabled,
    shared_runners_minutes_limit,
    extra_shared_runners_minutes_limit,
    repository_size_limit,
    does_require_two_factor_authentication,
    two_factor_grace_period,
    project_creation_level,
    push_rule_id,
    creator_id,
    namespace_creator_is_blocked,
    ultimate_parent_namespace_id,
    gitlab_plan_id,
    gitlab_plan_title,
    gitlab_plan_is_paid,
    dim_product_tier_id,
    namespace_member_count  AS current_member_count,
    namespace_project_count AS current_project_count,
    has_code_suggestions_enabled
  FROM prep_namespace
  WHERE is_currently_valid = TRUE

)

{{ dbt_audit(
    cte_ref="final",
    created_by="@snalamaru",
    updated_by="@cbraza",
    created_date="2020-12-29",
    updated_date="2023-05-18"
) }}22:T674,



WITH prep_namespace AS (

    SELECT * 
    FROM "PROD".common_prep.prep_namespace

),

final AS (

  SELECT
    dim_namespace_id,
    namespace_is_internal,
    namespace_is_ultimate_parent,
    namespace_name,
    namespace_path,
    owner_id,
    namespace_type,
    has_avatar,
    created_at,
    updated_at,
    is_membership_locked,
    has_request_access_enabled,
    has_share_with_group_locked,
    is_setup_for_company,
    visibility_level,
    ldap_sync_status,
    ldap_sync_error,
    ldap_sync_last_update_at,
    ldap_sync_last_successful_update_at,
    ldap_sync_last_sync_at,
    lfs_enabled,
    parent_id,
    shared_runners_enabled,
    shared_runners_minutes_limit,
    extra_shared_runners_minutes_limit,
    repository_size_limit,
    does_require_two_factor_authentication,
    two_factor_grace_period,
    project_creation_level,
    push_rule_id,
    creator_id,
    namespace_creator_is_blocked,
    ultimate_parent_namespace_id,
    gitlab_plan_id,
    gitlab_plan_title,
    gitlab_plan_is_paid,
    dim_product_tier_id,
    namespace_member_count  AS current_member_count,
    namespace_project_count AS current_project_count,
    has_code_suggestions_enabled
  FROM prep_namespace
  WHERE is_currently_valid = TRUE

)

SELECT
      *,
      '@snalamaru'::VARCHAR       AS created_by,
      '@cbraza'::VARCHAR       AS updated_by,
      '2020-12-29'::DATE        AS model_created_date,
      '2023-05-18'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final23:T467b,{{ config(
    tags=["product", "mnpi_exception"]
) }}

{{
  config({
    "materialized": "table"
  })
}}

{{ simple_cte([
    ('bdg_subscription_product_rate_plan', 'bdg_subscription_product_rate_plan'),
    ('seat_link', 'fct_usage_self_managed_seat_link'),
    ('ping_instance_wave', 'mart_ping_instance_metric_health_score_self_managed'),
    ('dim_host_instance_type','dim_host_instance_type')
]) }}

, instance_type_ordering AS (

    SELECT
      *,
      CASE
        WHEN instance_type = 'Production' THEN 1
        WHEN instance_type = 'Non-Production' THEN 2
        WHEN instance_type = 'Unknown' THEN 3
        ELSE 4
      END AS ordering_field
    FROM dim_host_instance_type

)

, sm_subscriptions AS (

    SELECT DISTINCT
      dim_subscription_id,
      dim_subscription_id_original,
      dim_billing_account_id
    FROM bdg_subscription_product_rate_plan
    WHERE product_delivery_type = 'Self-Managed'

), ping_instance_wave_sm AS (

    SELECT *
    FROM ping_instance_wave
    WHERE dim_subscription_id IS NOT NULL
      AND ping_delivery_type = 'Self-Managed'
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        dim_subscription_id,
        dim_instance_id,
        hostname,
        ping_created_date_month
      ORDER BY ping_created_at DESC
      ) = 1

), joined AS (

    SELECT 
      ping_instance_wave_sm.dim_subscription_id,
      sm_subscriptions.dim_subscription_id_original,
      sm_subscriptions.dim_billing_account_id,
      ping_instance_wave_sm.ping_created_date_month                                                      AS snapshot_month,
      {{ get_date_id('ping_instance_wave_sm.ping_created_date_month') }}                                 AS snapshot_date_id,
      seat_link.report_date                                                                              AS seat_link_report_date,
      {{ get_date_id('seat_link.report_date') }}                                                         AS seat_link_report_date_id,
      ping_instance_wave_sm.dim_ping_instance_id,
      ping_instance_wave_sm.ping_created_at,
      {{ get_date_id('ping_instance_wave_sm.ping_created_at') }}                                         AS ping_created_date_id,
      ping_instance_wave_sm.dim_instance_id,
      instance_type_ordering.instance_type,
      instance_type_ordering.included_in_health_measures_str,
      ping_instance_wave_sm.hostname,
      ping_instance_wave_sm.dim_license_id,
      ping_instance_wave_sm.license_md5,
      ping_instance_wave_sm.cleaned_version,
      ping_instance_wave_sm.dim_location_country_id,
      ping_instance_wave_sm.installation_creation_date,
      ping_instance_wave_sm.dim_installation_id,
      -- Wave 1
      DIV0(
          ping_instance_wave_sm.license_billable_users,
          IFNULL(ping_instance_wave_sm.license_user_count, seat_link.license_user_count)
          )                                                                                              AS license_utilization,
      ping_instance_wave_sm.license_billable_users                                                       AS billable_user_count,
      ping_instance_wave_sm.instance_user_count                                                          AS active_user_count,
      IFNULL(ping_instance_wave_sm.historical_max_user_count, seat_link.max_historical_user_count)       AS max_historical_user_count,
      IFNULL(ping_instance_wave_sm.license_user_count, seat_link.license_user_count)                     AS license_user_count,
      -- Wave 2 & 3
      ping_instance_wave_sm.umau_28_days_user,
      ping_instance_wave_sm.action_monthly_active_users_project_repo_28_days_user,
      ping_instance_wave_sm.merge_requests_28_days_user,
      ping_instance_wave_sm.projects_with_repositories_enabled_28_days_user,
      ping_instance_wave_sm.commit_comment_all_time_event,
      ping_instance_wave_sm.source_code_pushes_all_time_event,
      ping_instance_wave_sm.ci_pipelines_28_days_user,
      ping_instance_wave_sm.ci_internal_pipelines_28_days_user,
      ping_instance_wave_sm.ci_builds_28_days_user,
      ping_instance_wave_sm.ci_builds_all_time_user,
      ping_instance_wave_sm.ci_builds_all_time_event,
      ping_instance_wave_sm.ci_runners_all_time_event,
      ping_instance_wave_sm.auto_devops_enabled_all_time_event,
      ping_instance_wave_sm.gitlab_shared_runners_enabled,
      ping_instance_wave_sm.container_registry_enabled,
      ping_instance_wave_sm.template_repositories_all_time_event,
      ping_instance_wave_sm.ci_pipeline_config_repository_28_days_user,
      ping_instance_wave_sm.user_unique_users_all_secure_scanners_28_days_user,
      ping_instance_wave_sm.user_sast_jobs_28_days_user,
      ping_instance_wave_sm.user_dast_jobs_28_days_user,
      ping_instance_wave_sm.user_dependency_scanning_jobs_28_days_user,
      ping_instance_wave_sm.user_license_management_jobs_28_days_user,
      ping_instance_wave_sm.user_secret_detection_jobs_28_days_user,
      ping_instance_wave_sm.user_container_scanning_jobs_28_days_user,
      ping_instance_wave_sm.object_store_packages_enabled,
      ping_instance_wave_sm.projects_with_packages_all_time_event,
      ping_instance_wave_sm.projects_with_packages_28_days_event,
      ping_instance_wave_sm.deployments_28_days_user,
      ping_instance_wave_sm.releases_28_days_user,
      ping_instance_wave_sm.epics_28_days_user,
      ping_instance_wave_sm.issues_28_days_user,
      -- Wave 3.1
      ping_instance_wave_sm.ci_internal_pipelines_all_time_event,
      ping_instance_wave_sm.ci_external_pipelines_all_time_event,
      ping_instance_wave_sm.merge_requests_all_time_event,
      ping_instance_wave_sm.todos_all_time_event,
      ping_instance_wave_sm.epics_all_time_event,
      ping_instance_wave_sm.issues_all_time_event,
      ping_instance_wave_sm.projects_all_time_event,
      ping_instance_wave_sm.deployments_28_days_event,
      ping_instance_wave_sm.packages_28_days_event,
      ping_instance_wave_sm.sast_jobs_all_time_event,
      ping_instance_wave_sm.dast_jobs_all_time_event,
      ping_instance_wave_sm.dependency_scanning_jobs_all_time_event,
      ping_instance_wave_sm.license_management_jobs_all_time_event,
      ping_instance_wave_sm.secret_detection_jobs_all_time_event,
      ping_instance_wave_sm.container_scanning_jobs_all_time_event,
      ping_instance_wave_sm.projects_jenkins_active_all_time_event,
      ping_instance_wave_sm.projects_bamboo_active_all_time_event,
      ping_instance_wave_sm.projects_jira_active_all_time_event,
      ping_instance_wave_sm.projects_drone_ci_active_all_time_event,
      ping_instance_wave_sm.projects_github_active_all_time_event,
      ping_instance_wave_sm.projects_jira_server_active_all_time_event,
      ping_instance_wave_sm.projects_jira_dvcs_cloud_active_all_time_event,
      ping_instance_wave_sm.projects_with_repositories_enabled_all_time_event,
      ping_instance_wave_sm.protected_branches_all_time_event,
      ping_instance_wave_sm.remote_mirrors_all_time_event,
      ping_instance_wave_sm.projects_enforcing_code_owner_approval_28_days_user,
      ping_instance_wave_sm.project_clusters_enabled_28_days_user,
      ping_instance_wave_sm.analytics_28_days_user,                           
      ping_instance_wave_sm.issues_edit_28_days_user,                         
      ping_instance_wave_sm.user_packages_28_days_user,                            
      ping_instance_wave_sm.terraform_state_api_28_days_user,                          
      ping_instance_wave_sm.incident_management_28_days_user,                            
      -- Wave 3.2
      ping_instance_wave_sm.auto_devops_enabled,
      ping_instance_wave_sm.gitaly_clusters_instance,
      ping_instance_wave_sm.epics_deepest_relationship_level_instance,
      ping_instance_wave_sm.clusters_applications_cilium_all_time_event,
      ping_instance_wave_sm.network_policy_forwards_all_time_event,
      ping_instance_wave_sm.network_policy_drops_all_time_event,
      ping_instance_wave_sm.requirements_with_test_report_all_time_event,
      ping_instance_wave_sm.requirement_test_reports_ci_all_time_event,
      ping_instance_wave_sm.projects_imported_from_github_all_time_event,
      ping_instance_wave_sm.projects_jira_cloud_active_all_time_event,
      ping_instance_wave_sm.projects_jira_dvcs_server_active_all_time_event,
      ping_instance_wave_sm.service_desk_issues_all_time_event,
      ping_instance_wave_sm.ci_pipelines_all_time_user,
      ping_instance_wave_sm.service_desk_issues_28_days_user,
      ping_instance_wave_sm.projects_jira_active_28_days_user,
      ping_instance_wave_sm.projects_jira_dvcs_cloud_active_28_days_user,
      ping_instance_wave_sm.projects_jira_dvcs_server_active_28_days_user,
      ping_instance_wave_sm.merge_requests_with_required_code_owners_28_days_user,
      ping_instance_wave_sm.analytics_value_stream_28_days_event,
      ping_instance_wave_sm.code_review_user_approve_mr_28_days_user,
      ping_instance_wave_sm.epics_usage_28_days_user,
      ping_instance_wave_sm.ci_templates_usage_28_days_event,
      ping_instance_wave_sm.project_management_issue_milestone_changed_28_days_user,
      ping_instance_wave_sm.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      ping_instance_wave_sm.protected_branches_28_days_user,
      ping_instance_wave_sm.ci_cd_lead_time_usage_28_days_event,
      ping_instance_wave_sm.ci_cd_deployment_frequency_usage_28_days_event,
      ping_instance_wave_sm.projects_with_repositories_enabled_all_time_user,
      ping_instance_wave_sm.api_fuzzing_jobs_usage_28_days_user,
      ping_instance_wave_sm.coverage_fuzzing_pipeline_usage_28_days_event,
      ping_instance_wave_sm.api_fuzzing_pipeline_usage_28_days_event,
      ping_instance_wave_sm.container_scanning_pipeline_usage_28_days_event,
      ping_instance_wave_sm.dependency_scanning_pipeline_usage_28_days_event,
      ping_instance_wave_sm.sast_pipeline_usage_28_days_event,
      ping_instance_wave_sm.secret_detection_pipeline_usage_28_days_event,
      ping_instance_wave_sm.dast_pipeline_usage_28_days_event,
      ping_instance_wave_sm.coverage_fuzzing_jobs_28_days_user,
      ping_instance_wave_sm.environments_all_time_event,
      ping_instance_wave_sm.feature_flags_all_time_event,
      ping_instance_wave_sm.successful_deployments_28_days_event,
      ping_instance_wave_sm.failed_deployments_28_days_event,
      ping_instance_wave_sm.projects_compliance_framework_all_time_event,
      ping_instance_wave_sm.commit_ci_config_file_28_days_user,
      ping_instance_wave_sm.view_audit_all_time_user,
      --Wave 5.2
      ping_instance_wave_sm.dependency_scanning_jobs_all_time_user,
      ping_instance_wave_sm.analytics_devops_adoption_all_time_user,
      ping_instance_wave_sm.projects_imported_all_time_event,
      ping_instance_wave_sm.preferences_security_dashboard_28_days_user,
      ping_instance_wave_sm.web_ide_edit_28_days_user,
      ping_instance_wave_sm.auto_devops_pipelines_all_time_event,
      ping_instance_wave_sm.projects_prometheus_active_all_time_event,
      ping_instance_wave_sm.prometheus_enabled,
      ping_instance_wave_sm.prometheus_metrics_enabled,
      ping_instance_wave_sm.group_saml_enabled,
      ping_instance_wave_sm.jira_issue_imports_all_time_event,
      ping_instance_wave_sm.author_epic_all_time_user,
      ping_instance_wave_sm.author_issue_all_time_user,
      ping_instance_wave_sm.failed_deployments_28_days_user,
      ping_instance_wave_sm.successful_deployments_28_days_user,
      -- Wave 5.3
      ping_instance_wave_sm.geo_enabled,
      ping_instance_wave_sm.auto_devops_pipelines_28_days_user,
      ping_instance_wave_sm.active_instance_runners_all_time_event,
      ping_instance_wave_sm.active_group_runners_all_time_event,
      ping_instance_wave_sm.active_project_runners_all_time_event,
      TO_VARCHAR(ping_instance_wave_sm.gitaly_version)                                                   AS gitaly_version,
      ping_instance_wave_sm.gitaly_servers_all_time_event,
      -- Wave 6
      ping_instance_wave_sm.api_fuzzing_scans_all_time_event,
      ping_instance_wave_sm.api_fuzzing_scans_28_days_event,
      ping_instance_wave_sm.coverage_fuzzing_scans_all_time_event,
      ping_instance_wave_sm.coverage_fuzzing_scans_28_days_event,
      ping_instance_wave_sm.secret_detection_scans_all_time_event,
      ping_instance_wave_sm.secret_detection_scans_28_days_event,
      ping_instance_wave_sm.dependency_scanning_scans_all_time_event,
      ping_instance_wave_sm.dependency_scanning_scans_28_days_event,
      ping_instance_wave_sm.container_scanning_scans_all_time_event,
      ping_instance_wave_sm.container_scanning_scans_28_days_event,
      ping_instance_wave_sm.dast_scans_all_time_event,
      ping_instance_wave_sm.dast_scans_28_days_event,
      ping_instance_wave_sm.sast_scans_all_time_event,
      ping_instance_wave_sm.sast_scans_28_days_event,
      -- Wave 6.1
      ping_instance_wave_sm.packages_pushed_registry_all_time_event,
      ping_instance_wave_sm.packages_pulled_registry_all_time_event,
      ping_instance_wave_sm.compliance_dashboard_view_28_days_user,
      ping_instance_wave_sm.audit_screen_view_28_days_user,
      ping_instance_wave_sm.instance_audit_screen_view_28_days_user,
      ping_instance_wave_sm.credential_inventory_view_28_days_user,
      ping_instance_wave_sm.compliance_frameworks_pipeline_all_time_event,
      ping_instance_wave_sm.compliance_frameworks_pipeline_28_days_event,
      ping_instance_wave_sm.groups_streaming_destinations_all_time_event,
      ping_instance_wave_sm.groups_streaming_destinations_28_days_event,
      ping_instance_wave_sm.audit_event_destinations_all_time_event,
      ping_instance_wave_sm.audit_event_destinations_28_days_event,
      ping_instance_wave_sm.projects_status_checks_all_time_event,
      ping_instance_wave_sm.external_status_checks_all_time_event,
      ping_instance_wave_sm.paid_license_search_28_days_user,
      ping_instance_wave_sm.last_activity_28_days_user,
      -- Wave 7
      ping_instance_wave_sm.snippets_28_days_event,
      ping_instance_wave_sm.single_file_editor_28_days_user,
      ping_instance_wave_sm.merge_requests_created_28_days_event,
      ping_instance_wave_sm.merge_requests_created_28_days_user,
      ping_instance_wave_sm.merge_requests_approval_rules_28_days_event,
      ping_instance_wave_sm.custom_compliance_frameworks_28_days_event,
      ping_instance_wave_sm.projects_security_policy_28_days_event,
      ping_instance_wave_sm.merge_requests_security_policy_28_days_user,
      ping_instance_wave_sm.pipelines_implicit_auto_devops_28_days_event,
      ping_instance_wave_sm.pipeline_schedules_28_days_user,
      -- Wave 8
      ping_instance_wave_sm.ci_internal_pipelines_28_days_event,
      -- Data Quality Flags
      IFF(ping_instance_wave_sm.instance_user_count != seat_link.active_user_count,
          ping_instance_wave_sm.instance_user_count, NULL)                                               AS instance_user_count_not_aligned,
      IFF(ping_instance_wave_sm.historical_max_user_count != seat_link.max_historical_user_count,
          ping_instance_wave_sm.historical_max_user_count, NULL)                                         AS historical_max_users_not_aligned,
      seat_link.is_subscription_in_zuora                                                                 AS is_seat_link_subscription_in_zuora,
      seat_link.is_rate_plan_in_zuora                                                                    AS is_seat_link_rate_plan_in_zuora,
      seat_link.is_active_user_count_available                                                           AS is_seat_link_active_user_count_available,
      ping_instance_wave_sm.is_license_mapped_to_subscription                                            AS is_usage_ping_license_mapped_to_subscription,
      ping_instance_wave_sm.is_license_subscription_id_valid                                             AS is_usage_ping_license_subscription_id_valid,
      IFF(ping_instance_wave_sm.ping_created_at IS NOT NULL
            OR seat_link.report_date IS NOT NULL,
          TRUE, FALSE)                                                                                   AS is_data_in_subscription_month,
      IFF(is_data_in_subscription_month = TRUE AND
            ROW_NUMBER() OVER (PARTITION BY
                                sm_subscriptions.dim_subscription_id,
                                ping_instance_wave_sm.dim_instance_id,
                                ping_instance_wave_sm.hostname,
                                is_data_in_subscription_month
                               ORDER BY ping_instance_wave_sm.ping_created_date_month DESC
                            ) = 1,
          TRUE, FALSE)                                                                                   AS is_latest_data
    FROM ping_instance_wave_sm
    JOIN sm_subscriptions
      ON sm_subscriptions.dim_subscription_id = ping_instance_wave_sm.dim_subscription_id 
    LEFT JOIN seat_link
      ON ping_instance_wave_sm.dim_subscription_id = seat_link.dim_subscription_id
      AND ping_instance_wave_sm.ping_created_date_month = seat_link.snapshot_month
    LEFT JOIN instance_type_ordering 
      ON ping_instance_wave_sm.dim_instance_id = instance_type_ordering.instance_uuid
      AND ping_instance_wave_sm.hostname = instance_type_ordering.instance_hostname
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY 
        ping_instance_wave_sm.ping_created_date_month,
        sm_subscriptions.dim_subscription_id_original,
        ping_instance_wave_sm.dim_instance_id,
        ping_instance_wave_sm.hostname
        ORDER BY 
          ping_instance_wave_sm.ping_created_at DESC,
          instance_type_ordering.ordering_field ASC --prioritizing Production instances
    ) = 1

)   

{{ dbt_audit(
    cte_ref="joined",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-10-12",
    updated_date="2023-05-30"
) }}24:T47f3,





WITH bdg_subscription_product_rate_plan AS (

    SELECT * 
    FROM "PROD".common.bdg_subscription_product_rate_plan

), seat_link AS (

    SELECT * 
    FROM "PROD".common.fct_usage_self_managed_seat_link

), ping_instance_wave AS (

    SELECT * 
    FROM "PROD".common_mart_product.mart_ping_instance_metric_health_score_self_managed

), dim_host_instance_type AS (

    SELECT * 
    FROM "PROD".common.dim_host_instance_type

)

, instance_type_ordering AS (

    SELECT
      *,
      CASE
        WHEN instance_type = 'Production' THEN 1
        WHEN instance_type = 'Non-Production' THEN 2
        WHEN instance_type = 'Unknown' THEN 3
        ELSE 4
      END AS ordering_field
    FROM dim_host_instance_type

)

, sm_subscriptions AS (

    SELECT DISTINCT
      dim_subscription_id,
      dim_subscription_id_original,
      dim_billing_account_id
    FROM bdg_subscription_product_rate_plan
    WHERE product_delivery_type = 'Self-Managed'

), ping_instance_wave_sm AS (

    SELECT *
    FROM ping_instance_wave
    WHERE dim_subscription_id IS NOT NULL
      AND ping_delivery_type = 'Self-Managed'
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY
        dim_subscription_id,
        dim_instance_id,
        hostname,
        ping_created_date_month
      ORDER BY ping_created_at DESC
      ) = 1

), joined AS (

    SELECT 
      ping_instance_wave_sm.dim_subscription_id,
      sm_subscriptions.dim_subscription_id_original,
      sm_subscriptions.dim_billing_account_id,
      ping_instance_wave_sm.ping_created_date_month                                                      AS snapshot_month,
      

  TO_NUMBER(TO_CHAR(ping_instance_wave_sm.ping_created_date_month::DATE,'YYYYMMDD'),'99999999')

                                 AS snapshot_date_id,
      seat_link.report_date                                                                              AS seat_link_report_date,
      

  TO_NUMBER(TO_CHAR(seat_link.report_date::DATE,'YYYYMMDD'),'99999999')

                                                         AS seat_link_report_date_id,
      ping_instance_wave_sm.dim_ping_instance_id,
      ping_instance_wave_sm.ping_created_at,
      

  TO_NUMBER(TO_CHAR(ping_instance_wave_sm.ping_created_at::DATE,'YYYYMMDD'),'99999999')

                                         AS ping_created_date_id,
      ping_instance_wave_sm.dim_instance_id,
      instance_type_ordering.instance_type,
      instance_type_ordering.included_in_health_measures_str,
      ping_instance_wave_sm.hostname,
      ping_instance_wave_sm.dim_license_id,
      ping_instance_wave_sm.license_md5,
      ping_instance_wave_sm.cleaned_version,
      ping_instance_wave_sm.dim_location_country_id,
      ping_instance_wave_sm.installation_creation_date,
      ping_instance_wave_sm.dim_installation_id,
      -- Wave 1
      DIV0(
          ping_instance_wave_sm.license_billable_users,
          IFNULL(ping_instance_wave_sm.license_user_count, seat_link.license_user_count)
          )                                                                                              AS license_utilization,
      ping_instance_wave_sm.license_billable_users                                                       AS billable_user_count,
      ping_instance_wave_sm.instance_user_count                                                          AS active_user_count,
      IFNULL(ping_instance_wave_sm.historical_max_user_count, seat_link.max_historical_user_count)       AS max_historical_user_count,
      IFNULL(ping_instance_wave_sm.license_user_count, seat_link.license_user_count)                     AS license_user_count,
      -- Wave 2 & 3
      ping_instance_wave_sm.umau_28_days_user,
      ping_instance_wave_sm.action_monthly_active_users_project_repo_28_days_user,
      ping_instance_wave_sm.merge_requests_28_days_user,
      ping_instance_wave_sm.projects_with_repositories_enabled_28_days_user,
      ping_instance_wave_sm.commit_comment_all_time_event,
      ping_instance_wave_sm.source_code_pushes_all_time_event,
      ping_instance_wave_sm.ci_pipelines_28_days_user,
      ping_instance_wave_sm.ci_internal_pipelines_28_days_user,
      ping_instance_wave_sm.ci_builds_28_days_user,
      ping_instance_wave_sm.ci_builds_all_time_user,
      ping_instance_wave_sm.ci_builds_all_time_event,
      ping_instance_wave_sm.ci_runners_all_time_event,
      ping_instance_wave_sm.auto_devops_enabled_all_time_event,
      ping_instance_wave_sm.gitlab_shared_runners_enabled,
      ping_instance_wave_sm.container_registry_enabled,
      ping_instance_wave_sm.template_repositories_all_time_event,
      ping_instance_wave_sm.ci_pipeline_config_repository_28_days_user,
      ping_instance_wave_sm.user_unique_users_all_secure_scanners_28_days_user,
      ping_instance_wave_sm.user_sast_jobs_28_days_user,
      ping_instance_wave_sm.user_dast_jobs_28_days_user,
      ping_instance_wave_sm.user_dependency_scanning_jobs_28_days_user,
      ping_instance_wave_sm.user_license_management_jobs_28_days_user,
      ping_instance_wave_sm.user_secret_detection_jobs_28_days_user,
      ping_instance_wave_sm.user_container_scanning_jobs_28_days_user,
      ping_instance_wave_sm.object_store_packages_enabled,
      ping_instance_wave_sm.projects_with_packages_all_time_event,
      ping_instance_wave_sm.projects_with_packages_28_days_event,
      ping_instance_wave_sm.deployments_28_days_user,
      ping_instance_wave_sm.releases_28_days_user,
      ping_instance_wave_sm.epics_28_days_user,
      ping_instance_wave_sm.issues_28_days_user,
      -- Wave 3.1
      ping_instance_wave_sm.ci_internal_pipelines_all_time_event,
      ping_instance_wave_sm.ci_external_pipelines_all_time_event,
      ping_instance_wave_sm.merge_requests_all_time_event,
      ping_instance_wave_sm.todos_all_time_event,
      ping_instance_wave_sm.epics_all_time_event,
      ping_instance_wave_sm.issues_all_time_event,
      ping_instance_wave_sm.projects_all_time_event,
      ping_instance_wave_sm.deployments_28_days_event,
      ping_instance_wave_sm.packages_28_days_event,
      ping_instance_wave_sm.sast_jobs_all_time_event,
      ping_instance_wave_sm.dast_jobs_all_time_event,
      ping_instance_wave_sm.dependency_scanning_jobs_all_time_event,
      ping_instance_wave_sm.license_management_jobs_all_time_event,
      ping_instance_wave_sm.secret_detection_jobs_all_time_event,
      ping_instance_wave_sm.container_scanning_jobs_all_time_event,
      ping_instance_wave_sm.projects_jenkins_active_all_time_event,
      ping_instance_wave_sm.projects_bamboo_active_all_time_event,
      ping_instance_wave_sm.projects_jira_active_all_time_event,
      ping_instance_wave_sm.projects_drone_ci_active_all_time_event,
      ping_instance_wave_sm.projects_github_active_all_time_event,
      ping_instance_wave_sm.projects_jira_server_active_all_time_event,
      ping_instance_wave_sm.projects_jira_dvcs_cloud_active_all_time_event,
      ping_instance_wave_sm.projects_with_repositories_enabled_all_time_event,
      ping_instance_wave_sm.protected_branches_all_time_event,
      ping_instance_wave_sm.remote_mirrors_all_time_event,
      ping_instance_wave_sm.projects_enforcing_code_owner_approval_28_days_user,
      ping_instance_wave_sm.project_clusters_enabled_28_days_user,
      ping_instance_wave_sm.analytics_28_days_user,                           
      ping_instance_wave_sm.issues_edit_28_days_user,                         
      ping_instance_wave_sm.user_packages_28_days_user,                            
      ping_instance_wave_sm.terraform_state_api_28_days_user,                          
      ping_instance_wave_sm.incident_management_28_days_user,                            
      -- Wave 3.2
      ping_instance_wave_sm.auto_devops_enabled,
      ping_instance_wave_sm.gitaly_clusters_instance,
      ping_instance_wave_sm.epics_deepest_relationship_level_instance,
      ping_instance_wave_sm.clusters_applications_cilium_all_time_event,
      ping_instance_wave_sm.network_policy_forwards_all_time_event,
      ping_instance_wave_sm.network_policy_drops_all_time_event,
      ping_instance_wave_sm.requirements_with_test_report_all_time_event,
      ping_instance_wave_sm.requirement_test_reports_ci_all_time_event,
      ping_instance_wave_sm.projects_imported_from_github_all_time_event,
      ping_instance_wave_sm.projects_jira_cloud_active_all_time_event,
      ping_instance_wave_sm.projects_jira_dvcs_server_active_all_time_event,
      ping_instance_wave_sm.service_desk_issues_all_time_event,
      ping_instance_wave_sm.ci_pipelines_all_time_user,
      ping_instance_wave_sm.service_desk_issues_28_days_user,
      ping_instance_wave_sm.projects_jira_active_28_days_user,
      ping_instance_wave_sm.projects_jira_dvcs_cloud_active_28_days_user,
      ping_instance_wave_sm.projects_jira_dvcs_server_active_28_days_user,
      ping_instance_wave_sm.merge_requests_with_required_code_owners_28_days_user,
      ping_instance_wave_sm.analytics_value_stream_28_days_event,
      ping_instance_wave_sm.code_review_user_approve_mr_28_days_user,
      ping_instance_wave_sm.epics_usage_28_days_user,
      ping_instance_wave_sm.ci_templates_usage_28_days_event,
      ping_instance_wave_sm.project_management_issue_milestone_changed_28_days_user,
      ping_instance_wave_sm.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      ping_instance_wave_sm.protected_branches_28_days_user,
      ping_instance_wave_sm.ci_cd_lead_time_usage_28_days_event,
      ping_instance_wave_sm.ci_cd_deployment_frequency_usage_28_days_event,
      ping_instance_wave_sm.projects_with_repositories_enabled_all_time_user,
      ping_instance_wave_sm.api_fuzzing_jobs_usage_28_days_user,
      ping_instance_wave_sm.coverage_fuzzing_pipeline_usage_28_days_event,
      ping_instance_wave_sm.api_fuzzing_pipeline_usage_28_days_event,
      ping_instance_wave_sm.container_scanning_pipeline_usage_28_days_event,
      ping_instance_wave_sm.dependency_scanning_pipeline_usage_28_days_event,
      ping_instance_wave_sm.sast_pipeline_usage_28_days_event,
      ping_instance_wave_sm.secret_detection_pipeline_usage_28_days_event,
      ping_instance_wave_sm.dast_pipeline_usage_28_days_event,
      ping_instance_wave_sm.coverage_fuzzing_jobs_28_days_user,
      ping_instance_wave_sm.environments_all_time_event,
      ping_instance_wave_sm.feature_flags_all_time_event,
      ping_instance_wave_sm.successful_deployments_28_days_event,
      ping_instance_wave_sm.failed_deployments_28_days_event,
      ping_instance_wave_sm.projects_compliance_framework_all_time_event,
      ping_instance_wave_sm.commit_ci_config_file_28_days_user,
      ping_instance_wave_sm.view_audit_all_time_user,
      --Wave 5.2
      ping_instance_wave_sm.dependency_scanning_jobs_all_time_user,
      ping_instance_wave_sm.analytics_devops_adoption_all_time_user,
      ping_instance_wave_sm.projects_imported_all_time_event,
      ping_instance_wave_sm.preferences_security_dashboard_28_days_user,
      ping_instance_wave_sm.web_ide_edit_28_days_user,
      ping_instance_wave_sm.auto_devops_pipelines_all_time_event,
      ping_instance_wave_sm.projects_prometheus_active_all_time_event,
      ping_instance_wave_sm.prometheus_enabled,
      ping_instance_wave_sm.prometheus_metrics_enabled,
      ping_instance_wave_sm.group_saml_enabled,
      ping_instance_wave_sm.jira_issue_imports_all_time_event,
      ping_instance_wave_sm.author_epic_all_time_user,
      ping_instance_wave_sm.author_issue_all_time_user,
      ping_instance_wave_sm.failed_deployments_28_days_user,
      ping_instance_wave_sm.successful_deployments_28_days_user,
      -- Wave 5.3
      ping_instance_wave_sm.geo_enabled,
      ping_instance_wave_sm.auto_devops_pipelines_28_days_user,
      ping_instance_wave_sm.active_instance_runners_all_time_event,
      ping_instance_wave_sm.active_group_runners_all_time_event,
      ping_instance_wave_sm.active_project_runners_all_time_event,
      TO_VARCHAR(ping_instance_wave_sm.gitaly_version)                                                   AS gitaly_version,
      ping_instance_wave_sm.gitaly_servers_all_time_event,
      -- Wave 6
      ping_instance_wave_sm.api_fuzzing_scans_all_time_event,
      ping_instance_wave_sm.api_fuzzing_scans_28_days_event,
      ping_instance_wave_sm.coverage_fuzzing_scans_all_time_event,
      ping_instance_wave_sm.coverage_fuzzing_scans_28_days_event,
      ping_instance_wave_sm.secret_detection_scans_all_time_event,
      ping_instance_wave_sm.secret_detection_scans_28_days_event,
      ping_instance_wave_sm.dependency_scanning_scans_all_time_event,
      ping_instance_wave_sm.dependency_scanning_scans_28_days_event,
      ping_instance_wave_sm.container_scanning_scans_all_time_event,
      ping_instance_wave_sm.container_scanning_scans_28_days_event,
      ping_instance_wave_sm.dast_scans_all_time_event,
      ping_instance_wave_sm.dast_scans_28_days_event,
      ping_instance_wave_sm.sast_scans_all_time_event,
      ping_instance_wave_sm.sast_scans_28_days_event,
      -- Wave 6.1
      ping_instance_wave_sm.packages_pushed_registry_all_time_event,
      ping_instance_wave_sm.packages_pulled_registry_all_time_event,
      ping_instance_wave_sm.compliance_dashboard_view_28_days_user,
      ping_instance_wave_sm.audit_screen_view_28_days_user,
      ping_instance_wave_sm.instance_audit_screen_view_28_days_user,
      ping_instance_wave_sm.credential_inventory_view_28_days_user,
      ping_instance_wave_sm.compliance_frameworks_pipeline_all_time_event,
      ping_instance_wave_sm.compliance_frameworks_pipeline_28_days_event,
      ping_instance_wave_sm.groups_streaming_destinations_all_time_event,
      ping_instance_wave_sm.groups_streaming_destinations_28_days_event,
      ping_instance_wave_sm.audit_event_destinations_all_time_event,
      ping_instance_wave_sm.audit_event_destinations_28_days_event,
      ping_instance_wave_sm.projects_status_checks_all_time_event,
      ping_instance_wave_sm.external_status_checks_all_time_event,
      ping_instance_wave_sm.paid_license_search_28_days_user,
      ping_instance_wave_sm.last_activity_28_days_user,
      -- Wave 7
      ping_instance_wave_sm.snippets_28_days_event,
      ping_instance_wave_sm.single_file_editor_28_days_user,
      ping_instance_wave_sm.merge_requests_created_28_days_event,
      ping_instance_wave_sm.merge_requests_created_28_days_user,
      ping_instance_wave_sm.merge_requests_approval_rules_28_days_event,
      ping_instance_wave_sm.custom_compliance_frameworks_28_days_event,
      ping_instance_wave_sm.projects_security_policy_28_days_event,
      ping_instance_wave_sm.merge_requests_security_policy_28_days_user,
      ping_instance_wave_sm.pipelines_implicit_auto_devops_28_days_event,
      ping_instance_wave_sm.pipeline_schedules_28_days_user,
      -- Wave 8
      ping_instance_wave_sm.ci_internal_pipelines_28_days_event,
      -- Data Quality Flags
      IFF(ping_instance_wave_sm.instance_user_count != seat_link.active_user_count,
          ping_instance_wave_sm.instance_user_count, NULL)                                               AS instance_user_count_not_aligned,
      IFF(ping_instance_wave_sm.historical_max_user_count != seat_link.max_historical_user_count,
          ping_instance_wave_sm.historical_max_user_count, NULL)                                         AS historical_max_users_not_aligned,
      seat_link.is_subscription_in_zuora                                                                 AS is_seat_link_subscription_in_zuora,
      seat_link.is_rate_plan_in_zuora                                                                    AS is_seat_link_rate_plan_in_zuora,
      seat_link.is_active_user_count_available                                                           AS is_seat_link_active_user_count_available,
      ping_instance_wave_sm.is_license_mapped_to_subscription                                            AS is_usage_ping_license_mapped_to_subscription,
      ping_instance_wave_sm.is_license_subscription_id_valid                                             AS is_usage_ping_license_subscription_id_valid,
      IFF(ping_instance_wave_sm.ping_created_at IS NOT NULL
            OR seat_link.report_date IS NOT NULL,
          TRUE, FALSE)                                                                                   AS is_data_in_subscription_month,
      IFF(is_data_in_subscription_month = TRUE AND
            ROW_NUMBER() OVER (PARTITION BY
                                sm_subscriptions.dim_subscription_id,
                                ping_instance_wave_sm.dim_instance_id,
                                ping_instance_wave_sm.hostname,
                                is_data_in_subscription_month
                               ORDER BY ping_instance_wave_sm.ping_created_date_month DESC
                            ) = 1,
          TRUE, FALSE)                                                                                   AS is_latest_data
    FROM ping_instance_wave_sm
    JOIN sm_subscriptions
      ON sm_subscriptions.dim_subscription_id = ping_instance_wave_sm.dim_subscription_id 
    LEFT JOIN seat_link
      ON ping_instance_wave_sm.dim_subscription_id = seat_link.dim_subscription_id
      AND ping_instance_wave_sm.ping_created_date_month = seat_link.snapshot_month
    LEFT JOIN instance_type_ordering 
      ON ping_instance_wave_sm.dim_instance_id = instance_type_ordering.instance_uuid
      AND ping_instance_wave_sm.hostname = instance_type_ordering.instance_hostname
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY 
        ping_instance_wave_sm.ping_created_date_month,
        sm_subscriptions.dim_subscription_id_original,
        ping_instance_wave_sm.dim_instance_id,
        ping_instance_wave_sm.hostname
        ORDER BY 
          ping_instance_wave_sm.ping_created_at DESC,
          instance_type_ordering.ordering_field ASC --prioritizing Production instances
    ) = 1

)   

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-10-12'::DATE        AS model_created_date,
      '2023-05-30'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM joined25:T81e,

WITH dates AS (

  SELECT
    "DATE_DAY",
  "DATE_ACTUAL",
  "DAY_NAME",
  "MONTH_ACTUAL",
  "YEAR_ACTUAL",
  "QUARTER_ACTUAL",
  "DAY_OF_WEEK",
  "FIRST_DAY_OF_WEEK",
  "WEEK_OF_YEAR",
  "DAY_OF_MONTH",
  "DAY_OF_QUARTER",
  "DAY_OF_YEAR",
  "FISCAL_YEAR",
  "FISCAL_QUARTER",
  "DAY_OF_FISCAL_QUARTER",
  "DAY_OF_FISCAL_YEAR",
  "MONTH_NAME",
  "FIRST_DAY_OF_MONTH",
  "LAST_DAY_OF_MONTH",
  "FIRST_DAY_OF_YEAR",
  "LAST_DAY_OF_YEAR",
  "FIRST_DAY_OF_QUARTER",
  "LAST_DAY_OF_QUARTER",
  "FIRST_DAY_OF_FISCAL_QUARTER",
  "LAST_DAY_OF_FISCAL_QUARTER",
  "FIRST_DAY_OF_FISCAL_YEAR",
  "LAST_DAY_OF_FISCAL_YEAR",
  "WEEK_OF_FISCAL_YEAR",
  "MONTH_OF_FISCAL_YEAR",
  "LAST_DAY_OF_WEEK",
  "QUARTER_NAME",
  "FISCAL_QUARTER_NAME",
  "FISCAL_QUARTER_NAME_FY",
  "FISCAL_QUARTER_NUMBER_ABSOLUTE",
  "FISCAL_MONTH_NAME",
  "FISCAL_MONTH_NAME_FY",
  "HOLIDAY_DESC",
  "IS_HOLIDAY",
  "LAST_MONTH_OF_FISCAL_QUARTER",
  "IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER",
  "LAST_MONTH_OF_FISCAL_YEAR",
  "IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR",
  "SNAPSHOT_DATE_FPA",
  "SNAPSHOT_DATE_BILLINGS",
  "DAYS_IN_MONTH_COUNT",
  "WEEK_OF_MONTH_NORMALISED",
  "DAY_OF_FISCAL_QUARTER_NORMALISED",
  "WEEK_OF_FISCAL_QUARTER_NORMALISED",
  "DAY_OF_FISCAL_YEAR_NORMALISED",
  "IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK",
  "DAYS_UNTIL_LAST_DAY_OF_MONTH",
  "CURRENT_DATE_ACTUAL",
  "CURRENT_FISCAL_YEAR",
  "CURRENT_FIRST_DAY_OF_FISCAL_YEAR",
  "CURRENT_FISCAL_QUARTER_NAME_FY",
  "CURRENT_FIRST_DAY_OF_MONTH"
  FROM "PROD".common_prep.prep_date

), final AS (

  SELECT
    

  TO_NUMBER(TO_CHAR(date_actual::DATE,'YYYYMMDD'),'99999999')

                                AS date_id,
    *
  FROM dates

)

SELECT
      *,
      '@msendal'::VARCHAR       AS created_by,
      '@pempey'::VARCHAR       AS updated_by,
      '2020-06-01'::DATE        AS model_created_date,
      '2023-01-09'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM final26:T571,{%- macro dbt_audit(cte_ref, created_by, updated_by, created_date, updated_date) -%}

    SELECT
      *,
      '{{ created_by }}'::VARCHAR       AS created_by,
      '{{ updated_by }}'::VARCHAR       AS updated_by,
      '{{ created_date }}'::DATE        AS model_created_date,
      '{{ updated_date }}'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    {% if execute %}

        {% if not flags.FULL_REFRESH and config.get('materialized') == "incremental" %}

            {%- set source_relation = adapter.get_relation(
                database=target.database,
                schema=this.schema,
                identifier=this.table,
                ) -%}      

            {% if source_relation != None %}

                {% set min_created_date %}
                    SELECT LEAST(MIN(dbt_created_at), CURRENT_TIMESTAMP()) AS min_ts 
                    FROM {{ this }}
                {% endset %}

                {% set results = run_query(min_created_date) %}

                '{{results.columns[0].values()[0]}}'::TIMESTAMP AS dbt_created_at

            {% else %}

                CURRENT_TIMESTAMP()               AS dbt_created_at

            {% endif %}

        {% else %}

            CURRENT_TIMESTAMP()               AS dbt_created_at

        {% endif %}
    
    {% endif %}

    FROM {{ cte_ref }}

{%- endmacro -%}27:T416,Used to simplify CTE imports in a model.

A large portion of import statements in a SQL model are simple `SELECT * FROM table`. Writing pure SQL is verbose and this macro aims to simplify the imports.

The macro accepts once argument which is a list of tuples where each tuple has the alias name and the table reference.

Below is an example and the expected output:

```sql

{{ simple_cte([
    ('map_merged_crm_account','map_merged_crm_account'),
    ('zuora_account','zuora_account_source'),
    ('zuora_contact','zuora_contact_source')
]) }}

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM {{ref('zuora_excluded_accounts')}}

)

```

```sql
WITH map_merged_crm_account AS (

    SELECT * 
    FROM "PROD".common.map_merged_crm_account

), zuora_account AS (

    SELECT * 
    FROM "PREP".zuora.zuora_account_source

), zuora_contact AS (

    SELECT * 
    FROM "PREP".zuora.zuora_contact_source

)

, excluded_accounts AS (

    SELECT DISTINCT
      account_id
    FROM "PROD".legacy.zuora_excluded_accounts

)
```29:T9149,{{
  config(
    materialized='table',
    tags=["product", "mnpi_exception"]
  )
}}

{{ simple_cte([
    ('monthly_saas_metrics','rpt_gainsight_metrics_monthly_paid_saas'),
    ('monthly_sm_metrics','rpt_gainsight_metrics_monthly_paid_self_managed'),
    ('billing_accounts','dim_billing_account'),
    ('location_country', 'dim_location_country'),
    ('subscriptions', 'dim_subscription'),
    ('namespaces', 'dim_namespace'),
    ('charges', 'mart_charge'),
    ('dates', 'dim_date'),
    ('aggregated_metrics', 'redis_namespace_snowplow_clicks_aggregated_workspace'),
    ('redis_metrics_28d_user', 'wk_rpt_user_based_metric_counts_namespace_monthly'),
    ('redis_metrics_all_time_event', 'wk_rpt_event_based_metric_counts_namespace_all_time')
]) }}


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    {{ dbt_utils.group_by(n = 2) }}
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}             AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      {{ get_keyed_nulls('billing_accounts.dim_billing_account_id') }}              AS dim_billing_account_id,
      {{ get_keyed_nulls('billing_accounts.dim_crm_account_id') }}                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      {{ dbt_utils.surrogate_key(
        [
          'snapshot_month',
          'dim_subscription_id_original',
          'uuid',
          'hostname',
          'dim_namespace_id'
        ]
      ) }} AS primary_key
    FROM unioned
  
)

{{ dbt_audit(
    cte_ref="final",
    created_by="@mdrussell",
    updated_by="@mdrussell",
    created_date="2022-10-12",
    updated_date="2023-06-05"
) }}2a:T943f,



WITH monthly_saas_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_saas

), monthly_sm_metrics AS (

    SELECT * 
    FROM "PROD".common_mart_product.rpt_gainsight_metrics_monthly_paid_self_managed

), billing_accounts AS (

    SELECT * 
    FROM "PROD".common.dim_billing_account

), location_country AS (

    SELECT * 
    FROM "PROD".common.dim_location_country

), subscriptions AS (

    SELECT * 
    FROM "PROD".common.dim_subscription

), namespaces AS (

    SELECT * 
    FROM "PROD".common.dim_namespace

), charges AS (

    SELECT * 
    FROM "PROD".restricted_safe_common_mart_sales.mart_charge

), dates AS (

    SELECT * 
    FROM "PROD".common.dim_date

), aggregated_metrics AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace

), redis_metrics_28d_user AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly

), redis_metrics_all_time_event AS (

    SELECT * 
    FROM "PROD".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time

)


, most_recent_subscription_version AS (
    SELECT
      subscription_name,
      subscription_status,
      subscription_start_date,
      subscription_end_date,
      ROW_NUMBER() OVER(
        PARTITION BY
          subscription_name
        ORDER BY
          subscription_version DESC
      )
    FROM subscriptions
    WHERE subscription_status IN (
      'Active',
      'Cancelled'
    )
    QUALIFY ROW_NUMBER() OVER(
      PARTITION BY
        subscription_name
      ORDER BY
        subscription_version DESC
    ) = 1

), zuora_licenses_per_subscription AS (
  
    SELECT
      dates.first_day_of_month AS month,
      subscriptions.dim_subscription_id_original,
      SUM(charges.quantity) AS license_user_count
    FROM charges
    JOIN dates ON charges.effective_start_month <= dates.date_actual
      AND (charges.effective_end_month > dates.date_actual
       OR charges.effective_end_month IS NULL)
      AND dates.day_of_month = 1
    LEFT JOIN subscriptions ON charges.dim_subscription_id = subscriptions.dim_subscription_id
    WHERE charges.subscription_status IN ('Active','Cancelled')
      AND charges.product_tier_name != 'Storage'
    group by 1,2
    
), action_active_users_project_repo_users AS (
  
    SELECT
      *
    FROM aggregated_metrics 
    WHERE event_action = 'action_active_users_project_repo'
  
), p_terraform_state_api_unique_users AS (	
  	
    SELECT	
      *	
    FROM aggregated_metrics 	
    WHERE event_action = 'p_terraform_state_api_unique_users'	
   	
), user_packages AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.user_packages.user_packages_total_unique_counts_monthly'

), project_repo AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_project_repo'

), analytics_valuestream AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.analytics.g_analytics_valuestream_monthly'

), ci_templates AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.ci_templates_total_unique_counts_monthly'

), packages_pushed AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_push_package_by_deploy_token'

), packages_pulled AS (

    SELECT
      *
    FROM redis_metrics_all_time_event
    WHERE metrics_path = 'counts.package_events_i_package_pull_package_by_guest'

), single_file_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ide_edit.g_edit_by_sfe_monthly'

), mrs_created AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_create_mr_monthly'

), pipelines_devops AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.ci_templates.p_ci_templates_implicit_auto_devops_monthly'

), ide_edit AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'usage_activity_by_stage_monthly.create.action_monthly_active_users_ide_edit'

), user_approve_mr AS (

    SELECT
      *
    FROM redis_metrics_28d_user
    WHERE metrics_path = 'redis_hll_counters.code_review.i_code_review_user_approve_mr_monthly'

), sm_paid_user_metrics AS (

    SELECT
      monthly_sm_metrics.snapshot_month,
      monthly_sm_metrics.dim_subscription_id,
      NULL                                                                         AS dim_namespace_id,
      NULL                                                                         AS namespace_name,
      NULL                                                                         AS namespace_creation_date,
      monthly_sm_metrics.dim_instance_id                                           AS uuid,
      monthly_sm_metrics.hostname,
      monthly_sm_metrics.dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

             AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                 AS dim_crm_account_id,
      monthly_sm_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status                         AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_sm_metrics.snapshot_date_id,
      monthly_sm_metrics.ping_created_at,
      monthly_sm_metrics.dim_ping_instance_id                                      AS dim_usage_ping_id,
      monthly_sm_metrics.instance_type,
      monthly_sm_metrics.included_in_health_measures_str,
      monthly_sm_metrics.cleaned_version,
      location_country.country_name,
      location_country.iso_2_country_code,
      location_country.iso_3_country_code,
      'Self-Managed'                                                               AS delivery_type,
      monthly_sm_metrics.installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_sm_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count, 
          monthly_sm_metrics.license_user_count)
      )                                                                            AS license_utilization,
      monthly_sm_metrics.billable_user_count,
      monthly_sm_metrics.active_user_count,
      monthly_sm_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count, 
        monthly_sm_metrics.license_user_count)                                     AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL, 
        'Zuora',
        'Service Ping')                                                            AS license_user_count_source,
      -- Wave 2 & 3
      monthly_sm_metrics.umau_28_days_user,
      monthly_sm_metrics.action_monthly_active_users_project_repo_28_days_user,
      monthly_sm_metrics.merge_requests_28_days_user,
      monthly_sm_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_sm_metrics.commit_comment_all_time_event,
      monthly_sm_metrics.source_code_pushes_all_time_event,
      monthly_sm_metrics.ci_pipelines_28_days_user,
      monthly_sm_metrics.ci_internal_pipelines_28_days_user,
      monthly_sm_metrics.ci_builds_28_days_user,
      monthly_sm_metrics.ci_builds_all_time_user,
      monthly_sm_metrics.ci_builds_all_time_event,
      monthly_sm_metrics.ci_runners_all_time_event,
      monthly_sm_metrics.auto_devops_enabled_all_time_event,
      monthly_sm_metrics.gitlab_shared_runners_enabled,
      monthly_sm_metrics.container_registry_enabled,
      monthly_sm_metrics.template_repositories_all_time_event,
      monthly_sm_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_sm_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_sm_metrics.user_sast_jobs_28_days_user,
      monthly_sm_metrics.user_dast_jobs_28_days_user,
      monthly_sm_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_sm_metrics.user_license_management_jobs_28_days_user,
      monthly_sm_metrics.user_secret_detection_jobs_28_days_user,
      monthly_sm_metrics.user_container_scanning_jobs_28_days_user,
      monthly_sm_metrics.object_store_packages_enabled,
      monthly_sm_metrics.projects_with_packages_all_time_event,
      monthly_sm_metrics.projects_with_packages_28_days_event,
      monthly_sm_metrics.deployments_28_days_user,
      monthly_sm_metrics.releases_28_days_user,
      monthly_sm_metrics.epics_28_days_user,
      monthly_sm_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_sm_metrics.ci_internal_pipelines_all_time_event,
      monthly_sm_metrics.ci_external_pipelines_all_time_event,
      monthly_sm_metrics.merge_requests_all_time_event,
      monthly_sm_metrics.todos_all_time_event,
      monthly_sm_metrics.epics_all_time_event,
      monthly_sm_metrics.issues_all_time_event,
      monthly_sm_metrics.projects_all_time_event,
      monthly_sm_metrics.deployments_28_days_event,
      monthly_sm_metrics.packages_28_days_event,
      monthly_sm_metrics.sast_jobs_all_time_event,
      monthly_sm_metrics.dast_jobs_all_time_event,
      monthly_sm_metrics.dependency_scanning_jobs_all_time_event,
      monthly_sm_metrics.license_management_jobs_all_time_event,
      monthly_sm_metrics.secret_detection_jobs_all_time_event,
      monthly_sm_metrics.container_scanning_jobs_all_time_event,
      monthly_sm_metrics.projects_jenkins_active_all_time_event,
      monthly_sm_metrics.projects_bamboo_active_all_time_event,
      monthly_sm_metrics.projects_jira_active_all_time_event,
      monthly_sm_metrics.projects_drone_ci_active_all_time_event,
      monthly_sm_metrics.projects_github_active_all_time_event,
      monthly_sm_metrics.projects_jira_server_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_sm_metrics.protected_branches_all_time_event,
      monthly_sm_metrics.remote_mirrors_all_time_event,
      monthly_sm_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_sm_metrics.project_clusters_enabled_28_days_user,
      monthly_sm_metrics.analytics_28_days_user,
      monthly_sm_metrics.issues_edit_28_days_user,
      monthly_sm_metrics.user_packages_28_days_user,
      monthly_sm_metrics.terraform_state_api_28_days_user,
      monthly_sm_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_sm_metrics.auto_devops_enabled,
      monthly_sm_metrics.gitaly_clusters_instance,
      monthly_sm_metrics.epics_deepest_relationship_level_instance,
      monthly_sm_metrics.clusters_applications_cilium_all_time_event,
      monthly_sm_metrics.network_policy_forwards_all_time_event,
      monthly_sm_metrics.network_policy_drops_all_time_event,
      monthly_sm_metrics.requirements_with_test_report_all_time_event,
      monthly_sm_metrics.requirement_test_reports_ci_all_time_event,
      monthly_sm_metrics.projects_imported_from_github_all_time_event,
      monthly_sm_metrics.projects_jira_cloud_active_all_time_event,
      monthly_sm_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_sm_metrics.service_desk_issues_all_time_event,
      monthly_sm_metrics.ci_pipelines_all_time_user,
      monthly_sm_metrics.service_desk_issues_28_days_user,
      monthly_sm_metrics.projects_jira_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_sm_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_sm_metrics.merge_requests_with_required_code_owners_28_days_user,
      monthly_sm_metrics.analytics_value_stream_28_days_event,
      monthly_sm_metrics.code_review_user_approve_mr_28_days_user,
      monthly_sm_metrics.epics_usage_28_days_user,
      monthly_sm_metrics.ci_templates_usage_28_days_event,
      monthly_sm_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_sm_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_sm_metrics.protected_branches_28_days_user,
      monthly_sm_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_sm_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_sm_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_sm_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_sm_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_sm_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_sm_metrics.sast_pipeline_usage_28_days_event,
      monthly_sm_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_sm_metrics.dast_pipeline_usage_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_sm_metrics.environments_all_time_event,
      monthly_sm_metrics.feature_flags_all_time_event,
      monthly_sm_metrics.successful_deployments_28_days_event,
      monthly_sm_metrics.failed_deployments_28_days_event,
      monthly_sm_metrics.projects_compliance_framework_all_time_event,
      monthly_sm_metrics.commit_ci_config_file_28_days_user,
      monthly_sm_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_sm_metrics.dependency_scanning_jobs_all_time_user,
      monthly_sm_metrics.analytics_devops_adoption_all_time_user,
      monthly_sm_metrics.projects_imported_all_time_event,
      monthly_sm_metrics.preferences_security_dashboard_28_days_user,
      monthly_sm_metrics.web_ide_edit_28_days_user,
      monthly_sm_metrics.auto_devops_pipelines_all_time_event,
      monthly_sm_metrics.projects_prometheus_active_all_time_event,
      monthly_sm_metrics.prometheus_enabled,
      monthly_sm_metrics.prometheus_metrics_enabled,
      monthly_sm_metrics.group_saml_enabled,
      monthly_sm_metrics.jira_issue_imports_all_time_event,
      monthly_sm_metrics.author_epic_all_time_user,
      monthly_sm_metrics.author_issue_all_time_user,
      monthly_sm_metrics.failed_deployments_28_days_user,
      monthly_sm_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_sm_metrics.geo_enabled,
      monthly_sm_metrics.auto_devops_pipelines_28_days_user,
      monthly_sm_metrics.active_instance_runners_all_time_event,
      monthly_sm_metrics.active_group_runners_all_time_event,
      monthly_sm_metrics.active_project_runners_all_time_event,
      monthly_sm_metrics.gitaly_version,
      monthly_sm_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_sm_metrics.api_fuzzing_scans_all_time_event,
      monthly_sm_metrics.api_fuzzing_scans_28_days_event,
      monthly_sm_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_sm_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_sm_metrics.secret_detection_scans_all_time_event,
      monthly_sm_metrics.secret_detection_scans_28_days_event,
      monthly_sm_metrics.dependency_scanning_scans_all_time_event,
      monthly_sm_metrics.dependency_scanning_scans_28_days_event,
      monthly_sm_metrics.container_scanning_scans_all_time_event,
      monthly_sm_metrics.container_scanning_scans_28_days_event,
      monthly_sm_metrics.dast_scans_all_time_event,
      monthly_sm_metrics.dast_scans_28_days_event,
      monthly_sm_metrics.sast_scans_all_time_event,
      monthly_sm_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      monthly_sm_metrics.packages_pushed_registry_all_time_event,
      monthly_sm_metrics.packages_pulled_registry_all_time_event,
      monthly_sm_metrics.compliance_dashboard_view_28_days_user,
      monthly_sm_metrics.audit_screen_view_28_days_user,
      monthly_sm_metrics.instance_audit_screen_view_28_days_user,
      monthly_sm_metrics.credential_inventory_view_28_days_user,
      monthly_sm_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_sm_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_sm_metrics.groups_streaming_destinations_all_time_event,
      monthly_sm_metrics.groups_streaming_destinations_28_days_event,
      monthly_sm_metrics.audit_event_destinations_all_time_event,
      monthly_sm_metrics.audit_event_destinations_28_days_event,
      monthly_sm_metrics.projects_status_checks_all_time_event,
      monthly_sm_metrics.external_status_checks_all_time_event,
      monthly_sm_metrics.paid_license_search_28_days_user,
      monthly_sm_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_sm_metrics.snippets_28_days_event,
      monthly_sm_metrics.single_file_editor_28_days_user,
      monthly_sm_metrics.merge_requests_created_28_days_event,
      monthly_sm_metrics.merge_requests_created_28_days_user,
      monthly_sm_metrics.merge_requests_approval_rules_28_days_event,
      monthly_sm_metrics.custom_compliance_frameworks_28_days_event,
      monthly_sm_metrics.projects_security_policy_28_days_event,
      monthly_sm_metrics.merge_requests_security_policy_28_days_user,
      monthly_sm_metrics.pipelines_implicit_auto_devops_28_days_event,
      monthly_sm_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_sm_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_sm_metrics.is_latest_data
    FROM monthly_sm_metrics
    LEFT JOIN billing_accounts
      ON monthly_sm_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN location_country
      ON monthly_sm_metrics.dim_location_country_id = location_country.dim_location_country_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_sm_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_sm_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_sm_metrics.snapshot_month

), saas_paid_user_metrics AS (

    SELECT
      monthly_saas_metrics.snapshot_month,
      monthly_saas_metrics.dim_subscription_id,
      monthly_saas_metrics.dim_namespace_id::VARCHAR                                AS dim_namespace_id,
      namespaces.namespace_name,
      namespaces.created_at                                                         AS namespace_creation_date,
      NULL                                                                          AS uuid,
      NULL                                                                          AS hostname,
      NULL                                                                          AS dim_installation_id,
      

  COALESCE(billing_accounts.dim_billing_account_id, MD5(-1)) 

              AS dim_billing_account_id,
      

  COALESCE(billing_accounts.dim_crm_account_id, MD5(-1)) 

                      AS dim_crm_account_id,
      monthly_saas_metrics.dim_subscription_id_original,
      subscriptions.subscription_name,
      subscriptions.subscription_status,
      most_recent_subscription_version.subscription_status AS subscription_status_most_recent_version,
      subscriptions.term_start_date,
      subscriptions.term_end_date,
      most_recent_subscription_version.subscription_start_date,
      most_recent_subscription_version.subscription_end_date,
      monthly_saas_metrics.snapshot_date_id,
      monthly_saas_metrics.ping_created_at,
      NULL                                                                          AS dim_usage_ping_id,
      monthly_saas_metrics.instance_type                                            AS instance_type,
      monthly_saas_metrics.included_in_health_measures_str                          AS included_in_health_measures_str,
      NULL                                                                          AS cleaned_version,
      NULL                                                                          AS country_name,
      NULL                                                                          AS iso_2_country_code,
      NULL                                                                          AS iso_3_country_code,
      'SaaS'                                                                        AS delivery_type,
      NULL                                                                          AS installation_creation_date,
      -- Wave 1
      DIV0(
        monthly_saas_metrics.billable_user_count, 
        COALESCE(
          zuora_licenses_per_subscription.license_user_count,
          monthly_saas_metrics.subscription_seats)
      )                                                                             AS license_utilization,
      monthly_saas_metrics.billable_user_count,
      NULL                                                                          AS active_user_count,
      monthly_saas_metrics.max_historical_user_count,
      COALESCE(
        zuora_licenses_per_subscription.license_user_count,
        monthly_saas_metrics.subscription_seats)                                    AS license_user_count,
      IFF(
        zuora_licenses_per_subscription.license_user_count IS NOT NULL,
        'Zuora',
        'gitlabdotcom')                                                             AS license_user_count_source,
      -- Wave 2 & 3
      monthly_saas_metrics.umau_28_days_user,
      COALESCE(project_repo.distinct_users_whole_month, action_active_users_project_repo_users.distinct_users, 0)            AS action_monthly_active_users_project_repo_28_days_user,
      monthly_saas_metrics.merge_requests_28_days_user,
      monthly_saas_metrics.projects_with_repositories_enabled_28_days_user,
      monthly_saas_metrics.commit_comment_all_time_event,
      monthly_saas_metrics.source_code_pushes_all_time_event,
      monthly_saas_metrics.ci_pipelines_28_days_user,
      monthly_saas_metrics.ci_internal_pipelines_28_days_user,
      monthly_saas_metrics.ci_builds_28_days_user,
      monthly_saas_metrics.ci_builds_all_time_user,
      monthly_saas_metrics.ci_builds_all_time_event,
      monthly_saas_metrics.ci_runners_all_time_event,
      monthly_saas_metrics.auto_devops_enabled_all_time_event,
      monthly_saas_metrics.gitlab_shared_runners_enabled,
      monthly_saas_metrics.container_registry_enabled,
      monthly_saas_metrics.template_repositories_all_time_event,
      monthly_saas_metrics.ci_pipeline_config_repository_28_days_user,
      monthly_saas_metrics.user_unique_users_all_secure_scanners_28_days_user,
      monthly_saas_metrics.user_sast_jobs_28_days_user,
      monthly_saas_metrics.user_dast_jobs_28_days_user,
      monthly_saas_metrics.user_dependency_scanning_jobs_28_days_user,
      monthly_saas_metrics.user_license_management_jobs_28_days_user,
      monthly_saas_metrics.user_secret_detection_jobs_28_days_user,
      monthly_saas_metrics.user_container_scanning_jobs_28_days_user,
      monthly_saas_metrics.object_store_packages_enabled,
      monthly_saas_metrics.projects_with_packages_all_time_event,
      monthly_saas_metrics.projects_with_packages_28_days_event,
      monthly_saas_metrics.deployments_28_days_user,
      monthly_saas_metrics.releases_28_days_user,
      monthly_saas_metrics.epics_28_days_user,
      monthly_saas_metrics.issues_28_days_user,
      -- Wave 3.1
      monthly_saas_metrics.ci_internal_pipelines_all_time_event,
      monthly_saas_metrics.ci_external_pipelines_all_time_event,
      monthly_saas_metrics.merge_requests_all_time_event,
      monthly_saas_metrics.todos_all_time_event,
      monthly_saas_metrics.epics_all_time_event,
      monthly_saas_metrics.issues_all_time_event,
      monthly_saas_metrics.projects_all_time_event,
      monthly_saas_metrics.deployments_28_days_event,
      monthly_saas_metrics.packages_28_days_event,
      monthly_saas_metrics.sast_jobs_all_time_event,
      monthly_saas_metrics.dast_jobs_all_time_event,
      monthly_saas_metrics.dependency_scanning_jobs_all_time_event,
      monthly_saas_metrics.license_management_jobs_all_time_event,
      monthly_saas_metrics.secret_detection_jobs_all_time_event,
      monthly_saas_metrics.container_scanning_jobs_all_time_event,
      monthly_saas_metrics.projects_jenkins_active_all_time_event,
      monthly_saas_metrics.projects_bamboo_active_all_time_event,
      monthly_saas_metrics.projects_jira_active_all_time_event,
      monthly_saas_metrics.projects_drone_ci_active_all_time_event,
      monthly_saas_metrics.projects_github_active_all_time_event,
      monthly_saas_metrics.projects_jira_server_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_all_time_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_event,
      monthly_saas_metrics.protected_branches_all_time_event,
      monthly_saas_metrics.remote_mirrors_all_time_event,
      monthly_saas_metrics.projects_enforcing_code_owner_approval_28_days_user,
      monthly_saas_metrics.project_clusters_enabled_28_days_user,
      monthly_saas_metrics.analytics_28_days_user,
      monthly_saas_metrics.issues_edit_28_days_user,
      COALESCE(user_packages.distinct_users_whole_month, 0) AS user_packages_28_days_user,
      COALESCE(p_terraform_state_api_unique_users.distinct_users, 0) AS terraform_state_api_28_days_user,
      monthly_saas_metrics.incident_management_28_days_user,
      -- Wave 3.2
      monthly_saas_metrics.auto_devops_enabled,
      monthly_saas_metrics.gitaly_clusters_instance,
      monthly_saas_metrics.epics_deepest_relationship_level_instance,
      monthly_saas_metrics.clusters_applications_cilium_all_time_event,
      monthly_saas_metrics.network_policy_forwards_all_time_event,
      monthly_saas_metrics.network_policy_drops_all_time_event,
      monthly_saas_metrics.requirements_with_test_report_all_time_event,
      monthly_saas_metrics.requirement_test_reports_ci_all_time_event,
      monthly_saas_metrics.projects_imported_from_github_all_time_event,
      monthly_saas_metrics.projects_jira_cloud_active_all_time_event,
      monthly_saas_metrics.projects_jira_dvcs_server_active_all_time_event,
      monthly_saas_metrics.service_desk_issues_all_time_event,
      monthly_saas_metrics.ci_pipelines_all_time_user,
      monthly_saas_metrics.service_desk_issues_28_days_user,
      monthly_saas_metrics.projects_jira_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_cloud_active_28_days_user,
      monthly_saas_metrics.projects_jira_dvcs_server_active_28_days_user,
      monthly_saas_metrics.merge_requests_with_required_code_owners_28_days_user,
      COALESCE(analytics_valuestream.distinct_users_whole_month, 0) AS analytics_value_stream_28_days_event,
      COALESCE(user_approve_mr.distinct_users_whole_month, 0) AS code_review_user_approve_mr_28_days_user,
      monthly_saas_metrics.epics_usage_28_days_user,
      COALESCE(ci_templates.distinct_users_whole_month, 0) AS ci_templates_usage_28_days_event,
      monthly_saas_metrics.project_management_issue_milestone_changed_28_days_user,
      monthly_saas_metrics.project_management_issue_iteration_changed_28_days_user,
      -- Wave 5.1
      monthly_saas_metrics.protected_branches_28_days_user,
      monthly_saas_metrics.ci_cd_lead_time_usage_28_days_event,
      monthly_saas_metrics.ci_cd_deployment_frequency_usage_28_days_event,
      monthly_saas_metrics.projects_with_repositories_enabled_all_time_user,
      monthly_saas_metrics.api_fuzzing_jobs_usage_28_days_user,
      monthly_saas_metrics.coverage_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.api_fuzzing_pipeline_usage_28_days_event,
      monthly_saas_metrics.container_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.dependency_scanning_pipeline_usage_28_days_event,
      monthly_saas_metrics.sast_pipeline_usage_28_days_event,
      monthly_saas_metrics.secret_detection_pipeline_usage_28_days_event,
      monthly_saas_metrics.dast_pipeline_usage_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_jobs_28_days_user,
      monthly_saas_metrics.environments_all_time_event,
      monthly_saas_metrics.feature_flags_all_time_event,
      monthly_saas_metrics.successful_deployments_28_days_event,
      monthly_saas_metrics.failed_deployments_28_days_event,
      monthly_saas_metrics.projects_compliance_framework_all_time_event,
      monthly_saas_metrics.commit_ci_config_file_28_days_user,
      monthly_saas_metrics.view_audit_all_time_user,
      -- Wave 5.2
      monthly_saas_metrics.dependency_scanning_jobs_all_time_user,
      monthly_saas_metrics.analytics_devops_adoption_all_time_user,
      monthly_saas_metrics.projects_imported_all_time_event,
      monthly_saas_metrics.preferences_security_dashboard_28_days_user,
      COALESCE(ide_edit.distinct_users_whole_month, 0) AS web_ide_edit_28_days_user,
      monthly_saas_metrics.auto_devops_pipelines_all_time_event,
      monthly_saas_metrics.projects_prometheus_active_all_time_event,
      monthly_saas_metrics.prometheus_enabled,
      monthly_saas_metrics.prometheus_metrics_enabled,
      monthly_saas_metrics.group_saml_enabled,
      monthly_saas_metrics.jira_issue_imports_all_time_event,
      monthly_saas_metrics.author_epic_all_time_user,
      monthly_saas_metrics.author_issue_all_time_user,
      monthly_saas_metrics.failed_deployments_28_days_user,
      monthly_saas_metrics.successful_deployments_28_days_user,
      -- Wave 5.3
      monthly_saas_metrics.geo_enabled,
      monthly_saas_metrics.auto_devops_pipelines_28_days_user,
      monthly_saas_metrics.active_instance_runners_all_time_event,
      monthly_saas_metrics.active_group_runners_all_time_event,
      monthly_saas_metrics.active_project_runners_all_time_event,
      monthly_saas_metrics.gitaly_version,
      monthly_saas_metrics.gitaly_servers_all_time_event,
      -- Wave 6.0
      monthly_saas_metrics.api_fuzzing_scans_all_time_event,
      monthly_saas_metrics.api_fuzzing_scans_28_days_event,
      monthly_saas_metrics.coverage_fuzzing_scans_all_time_event,
      monthly_saas_metrics.coverage_fuzzing_scans_28_days_event,
      monthly_saas_metrics.secret_detection_scans_all_time_event,
      monthly_saas_metrics.secret_detection_scans_28_days_event,
      monthly_saas_metrics.dependency_scanning_scans_all_time_event,
      monthly_saas_metrics.dependency_scanning_scans_28_days_event,
      monthly_saas_metrics.container_scanning_scans_all_time_event,
      monthly_saas_metrics.container_scanning_scans_28_days_event,
      monthly_saas_metrics.dast_scans_all_time_event,
      monthly_saas_metrics.dast_scans_28_days_event,
      monthly_saas_metrics.sast_scans_all_time_event,
      monthly_saas_metrics.sast_scans_28_days_event,
      -- Wave 6.1
      COALESCE(packages_pushed.monthly_value, 0) AS packages_pushed_registry_all_time_event,
      COALESCE(packages_pulled.monthly_value, 0) AS packages_pulled_registry_all_time_event,
      monthly_saas_metrics.compliance_dashboard_view_28_days_user,
      monthly_saas_metrics.audit_screen_view_28_days_user,
      monthly_saas_metrics.instance_audit_screen_view_28_days_user,
      monthly_saas_metrics.credential_inventory_view_28_days_user,
      monthly_saas_metrics.compliance_frameworks_pipeline_all_time_event,
      monthly_saas_metrics.compliance_frameworks_pipeline_28_days_event,
      monthly_saas_metrics.groups_streaming_destinations_all_time_event,
      monthly_saas_metrics.groups_streaming_destinations_28_days_event,
      monthly_saas_metrics.audit_event_destinations_all_time_event,
      monthly_saas_metrics.audit_event_destinations_28_days_event,
      monthly_saas_metrics.projects_status_checks_all_time_event,
      monthly_saas_metrics.external_status_checks_all_time_event,
      monthly_saas_metrics.paid_license_search_28_days_user,
      monthly_saas_metrics.last_activity_28_days_user,
      -- Wave 7
      monthly_saas_metrics.snippets_28_days_event,
      COALESCE(single_file_edit.distinct_users_whole_month, 0) AS single_file_editor_28_days_user,
      monthly_saas_metrics.merge_requests_created_28_days_event,
      COALESCE(mrs_created.distinct_users_whole_month, 0) AS merge_requests_created_28_days_user,
      monthly_saas_metrics.merge_requests_approval_rules_28_days_event,
      monthly_saas_metrics.custom_compliance_frameworks_28_days_event,
      monthly_saas_metrics.projects_security_policy_28_days_event,
      monthly_saas_metrics.merge_requests_security_policy_28_days_user,
      COALESCE(pipelines_devops.distinct_users_whole_month, 0) AS pipelines_implicit_auto_devops_28_days_event,
      monthly_saas_metrics.pipeline_schedules_28_days_user,
      -- Wave 8
      monthly_saas_metrics.ci_internal_pipelines_28_days_event,
      -- Data Quality Flag
      monthly_saas_metrics.is_latest_data
    FROM monthly_saas_metrics
    LEFT JOIN billing_accounts
      ON monthly_saas_metrics.dim_billing_account_id = billing_accounts.dim_billing_account_id
    LEFT JOIN subscriptions
      ON subscriptions.dim_subscription_id = monthly_saas_metrics.dim_subscription_id
    LEFT JOIN most_recent_subscription_version
      ON subscriptions.subscription_name = most_recent_subscription_version.subscription_name
    LEFT JOIN zuora_licenses_per_subscription 
      ON zuora_licenses_per_subscription.dim_subscription_id_original = monthly_saas_metrics.dim_subscription_id_original
      AND zuora_licenses_per_subscription.month = monthly_saas_metrics.snapshot_month
    LEFT JOIN namespaces 
      ON namespaces.dim_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN action_active_users_project_repo_users
      ON action_active_users_project_repo_users.date_month = monthly_saas_metrics.snapshot_month 
      AND action_active_users_project_repo_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN p_terraform_state_api_unique_users	
      ON p_terraform_state_api_unique_users.date_month = monthly_saas_metrics.snapshot_month 	
      AND p_terraform_state_api_unique_users.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_packages
      ON user_packages.date_month = monthly_saas_metrics.snapshot_month
      AND user_packages.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN project_repo
      ON project_repo.date_month = monthly_saas_metrics.snapshot_month
      AND project_repo.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN analytics_valuestream
      ON analytics_valuestream.date_month = monthly_saas_metrics.snapshot_month
      AND analytics_valuestream.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ci_templates
      ON ci_templates.date_month = monthly_saas_metrics.snapshot_month
      AND ci_templates.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pushed
      ON packages_pushed.month = monthly_saas_metrics.snapshot_month
      AND packages_pushed.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN packages_pulled
      ON packages_pulled.month = monthly_saas_metrics.snapshot_month
      AND packages_pulled.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN single_file_edit
      ON single_file_edit.date_month = monthly_saas_metrics.snapshot_month
      AND single_file_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN mrs_created
      ON mrs_created.date_month = monthly_saas_metrics.snapshot_month
      AND mrs_created.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN pipelines_devops
      ON pipelines_devops.date_month = monthly_saas_metrics.snapshot_month
      AND pipelines_devops.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN ide_edit
      ON ide_edit.date_month = monthly_saas_metrics.snapshot_month
      AND ide_edit.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id
    LEFT JOIN user_approve_mr
      ON user_approve_mr.date_month = monthly_saas_metrics.snapshot_month
      AND user_approve_mr.ultimate_parent_namespace_id = monthly_saas_metrics.dim_namespace_id

), unioned AS (

    SELECT *
    FROM sm_paid_user_metrics

    UNION ALL

    SELECT *
    FROM saas_paid_user_metrics

), final AS (
  
    SELECT
      unioned.*,
      md5(cast(coalesce(cast(snapshot_month as 
    varchar
), '') || '-' || coalesce(cast(dim_subscription_id_original as 
    varchar
), '') || '-' || coalesce(cast(uuid as 
    varchar
), '') || '-' || coalesce(cast(hostname as 
    varchar
), '') || '-' || coalesce(cast(dim_namespace_id as 
    varchar
), '') as 
    varchar
)) AS primary_key
    FROM unioned
  
)

SELECT
      *,
      '@mdrussell'::VARCHAR       AS created_by,
      '@mdrussell'::VARCHAR       AS updated_by,
      '2022-10-12'::DATE        AS model_created_date,
      '2023-06-05'::DATE        AS model_updated_date,
      CURRENT_TIMESTAMP()               AS dbt_updated_at,

    

        

            CURRENT_TIMESTAMP()               AS dbt_created_at

        
    
    

    FROM finalc:["$","div",null,{"className":"app-scroll","children":[["$","$Le",null,{"uniqueId":"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"}],["$","div",null,{"className":"app-links app-sticky","children":[["$","div",null,{"className":"app-title","children":["$","div",null,{"className":"app-frame app-pad app-flush-bottom","children":[null,["$","h1",null,{"children":[["$","span",null,{"className":"break","children":"pump_gainsight_metrics_monthly_paid"}],["$","small",null,{"children":"table"}]]}]]}]}],["$","div",null,{"className":"app-frame app-pad-h","children":["$","ul",null,{"className":"nav nav-tabs","children":[["$","li",null,{"children":["$","a",null,{"href":"#details","children":"Details"}]}],["$","li",null,{"children":["$","a",null,{"href":"#description","children":"Description"}]}],["$","li",null,{"children":["$","a",null,{"href":"#columns","children":"Columns"}]}],["$","li",null,{"children":["$","a",null,{"href":"#referenced_by","children":"Referenced By"}]}],["$","li",null,{"children":["$","a",null,{"href":"#depends_on","children":"Depends On"}]}],["$","li",null,{"children":["$","a",null,{"href":"#code","children":"Code"}]}]]}]}]]}],["$","div",null,{"className":"app-details","children":["$","div",null,{"className":"app-frame app-pad","children":[["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"details"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Details"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"details","children":["$","div",null,{"className":"details-content","children":[null,["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl",null,{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Tags"}],["$","dd",null,{"className":"detail-value","children":[["$","span","product",{"children":[["$","code",null,{"children":["$","a",null,{"children":"product"}]}],"Â "]}],["$","span","mnpi_exception",{"children":[["$","code",null,{"children":["$","a",null,{"children":"mnpi_exception"}]}],"Â "]}]]}],null]}],[["$","dl","Owner",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Owner"}],["$","dd",null,{"className":"detail-value","children":"TRANSFORMER"}]]}],["$","dl","Type",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Type"}],["$","dd",null,{"className":"detail-value","children":"table"}]]}],["$","dl","Package",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Package"}],["$","dd",null,{"className":"detail-value","children":"gitlab_snowflake"}]]}],["$","dl","Relation",{"className":"detail","children":[["$","dt",null,{"className":"detail-label","children":"Relation"}],["$","dd",null,{"className":"detail-value","children":"PROD.pumps.pump_gainsight_metrics_monthly_paid"}]]}]]]}]}],["$","div",null,{"className":"detail-group","children":["$","div",null,{"className":"detail-body","children":[["$","dl","0",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"Approximate size of the table as reported by Snowflake","className":"detail-label","children":"Approximate Size"}],["$","dd",null,{"className":"detail-value","children":"232 MB"}]]}],null,["$","dl","2",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"The timestamp for last update/change","className":"detail-label","children":"Last Modified"}],["$","dd",null,{"className":"detail-value","children":"2023-07-10 12:52UTC"}]]}],["$","dl","3",{"className":"detail","children":[["$","dt",null,{"data-toggle":"tooltip","title":"An approximate count of rows in this table","className":"detail-label","children":"Row Count"}],["$","dd",null,{"className":"detail-value","children":-1}]]}]]}]}]]}]}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"description"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Description"}],["$","div",null,{"className":"panel","children":["$","div",null,{"className":"panel-body","children":["$","div",null,{"className":"model-markdown","children":"$f"}]}]}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"columns"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Columns"}],["$","$L10",null,{"model":{"metadata":{"type":"BASE TABLE","schema":"PUMPS","name":"PUMP_GAINSIGHT_METRICS_MONTHLY_PAID","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"SNAPSHOT_MONTH":{"type":"DATE","index":1,"name":"snapshot_month","comment":null,"description":"Month in which the product usage was reported.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_month"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":2,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_NAMESPACE_ID":{"type":"TEXT","index":3,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"NAMESPACE_NAME","comment":null,"display_name":"namespace_name"},"NAMESPACE_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":5,"name":"NAMESPACE_CREATION_DATE","comment":null,"display_name":"namespace_creation_date"},"UUID":{"type":"TEXT","index":6,"name":"uuid","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"uuid"},"HOSTNAME":{"type":"TEXT","index":7,"name":"hostname","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"hostname"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":8,"name":"dim_installation_id","comment":null,"description":"The unique identifier of the installation, easily joined to `dim_installation`. This id is the combination of `dim_host_id` and `dim_instance_id` and is considered the unique identifier of the installation for reporting and analysis","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_installation_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":9,"name":"dim_billing_account_id","comment":null,"description":"Returns unknown ID (MD5(-1)) if the `account_id` from `fct_product_usage_wave_1_3_metrics_monthly` is not found in `dim_billing_account`.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":10,"name":"dim_crm_account_id","comment":null,"description":"Returns unknown ID (MD5(-1)) if the `dim_crm_account_id` from `dim_billing_account` is not found in `dim_crm_account`.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_crm_account_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":11,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":12,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":13,"name":"subscription_status","comment":null,"description":"Status of the subscription at the time the usage ping was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_status"},"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION":{"type":"TEXT","index":14,"name":"SUBSCRIPTION_STATUS_MOST_RECENT_VERSION","comment":null,"display_name":"subscription_status_most_recent_version"},"TERM_START_DATE":{"type":"DATE","index":15,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":16,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":17,"name":"subscription_start_date","comment":null,"description":"Date the subscription term of the subscription_id started.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":18,"name":"subscription_end_date","comment":null,"description":"Date the subscription term of the subscription_id ended.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":19,"name":"snapshot_date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_date_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ping_created_at","comment":null,"description":"Actual date that the usage ping was created.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ping_created_at"},"DIM_USAGE_PING_ID":{"type":"TEXT","index":21,"name":"dim_usage_ping_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_usage_ping_id"},"INSTANCE_TYPE":{"type":"TEXT","index":22,"name":"instance_type","comment":null,"description":"Type of the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":23,"name":"INCLUDED_IN_HEALTH_MEASURES_STR","comment":null,"display_name":"included_in_health_measures_str"},"CLEANED_VERSION":{"type":"TEXT","index":24,"name":"cleaned_version","comment":null,"description":"Version of GitLab running on the instance","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cleaned_version"},"COUNTRY_NAME":{"type":"TEXT","index":25,"name":"country_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"country_name"},"ISO_2_COUNTRY_CODE":{"type":"TEXT","index":26,"name":"iso_2_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iso_2_country_code"},"ISO_3_COUNTRY_CODE":{"type":"TEXT","index":27,"name":"iso_3_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"iso_3_country_code"},"DELIVERY_TYPE":{"type":"TEXT","index":28,"name":"delivery_type","comment":null,"description":"Indicates if the product usage came from a SaaS or Self-Managed user.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"delivery_type"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":29,"name":"installation_creation_date","comment":null,"description":"Based off of the [`installation_creation_date`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20230228110448_installation_creation_date.yml) \nService Ping metric. For installations where the root user (id = 1) is not deleted, it returns the root user creation date. For installations where the root user \nis deleted, it returns the earliest available user creation date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"installation_creation_date"},"LICENSE_UTILIZATION":{"type":"FLOAT","index":30,"name":"LICENSE_UTILIZATION","comment":null,"display_name":"license_utilization"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":31,"name":"BILLABLE_USER_COUNT","comment":null,"display_name":"billable_user_count"},"ACTIVE_USER_COUNT":{"type":"NUMBER","index":32,"name":"ACTIVE_USER_COUNT","comment":null,"display_name":"active_user_count"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":33,"name":"MAX_HISTORICAL_USER_COUNT","comment":null,"display_name":"max_historical_user_count"},"LICENSE_USER_COUNT":{"type":"FLOAT","index":34,"name":"LICENSE_USER_COUNT","comment":null,"display_name":"license_user_count"},"LICENSE_USER_COUNT_SOURCE":{"type":"TEXT","index":35,"name":"LICENSE_USER_COUNT_SOURCE","comment":null,"display_name":"license_user_count_source"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":36,"name":"umau_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"action_monthly_active_users_project_repo_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"merge_requests_28_days_user","comment":null,"description":"Count distinct authors of merge requests. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175055_merge_requests.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":39,"name":"projects_with_repositories_enabled_28_days_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action, for last 28 days.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182049_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":40,"name":"commit_comment_all_time_event","comment":null,"description":"Count of total unique commit comments. Does not include MR diff comments.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216182004_commit_comment.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":41,"name":"source_code_pushes_all_time_event","comment":null,"description":"Count of total Git push operations.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216182006_source_code_pushes.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":42,"name":"ci_pipelines_28_days_user","comment":null,"description":"Distinct users triggering pipelines in a month.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175554_ci_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"ci_internal_pipelines_28_days_user","comment":null,"description":"Total pipelines in GitLab repositories in a month.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175546_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"ci_builds_28_days_user","comment":null,"description":"Unique monthly builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175542_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":45,"name":"ci_builds_all_time_user","comment":null,"description":"Unique count of builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175525_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":46,"name":"ci_builds_all_time_event","comment":null,"description":"Unique builds in project.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175510_ci_builds.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"ci_runners_all_time_event","comment":null,"description":"All-time count of CI Runners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_runners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"auto_devops_enabled_all_time_event","comment":null,"description":"All-time count of Projects with auto DevOps template enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsauto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":49,"name":"gitlab_shared_runners_enabled","comment":null,"description":"Flags whether shared runners are enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitlab_shared_runners_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":50,"name":"container_registry_enabled","comment":null,"description":"Flags whether container registry is enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#container_registry_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":51,"name":"template_repositories_all_time_event","comment":null,"description":"All-time total of custom project templates and projects without namespaces ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstemplate_repositories))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":52,"name":"ci_pipeline_config_repository_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines from templates in repository ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipeline_config_repository))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":53,"name":"user_unique_users_all_secure_scanners_28_days_user","comment":null,"description":"Monthly count of unique users running secure CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_unique_users_all_secure_scanners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":54,"name":"user_sast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_sast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":55,"name":"user_dast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":56,"name":"user_dependency_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running dependency scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":57,"name":"user_license_management_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running license management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_license_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":58,"name":"user_secret_detection_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running secret detection CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_secret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":59,"name":"user_container_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running container scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_container_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":60,"name":"object_store_packages_enabled","comment":null,"description":"Flags whether Object Storage is enabled for Uploads ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#object_storepackagesenabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":61,"name":"projects_with_packages_all_time_event","comment":null,"description":"All-time count of projects with package registry configured ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":62,"name":"projects_with_packages_28_days_event","comment":null,"description":"Projects with package registry enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181055_projects_with_packages.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":63,"name":"deployments_28_days_user","comment":null,"description":"Monthly count of unique users triggering deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasedeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":64,"name":"releases_28_days_user","comment":null,"description":"Monthly count of unique users authoring releases ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasereleases))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":65,"name":"epics_28_days_user","comment":null,"description":"Monthly count of unique users authoring epics ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":66,"name":"issues_28_days_user","comment":null,"description":"Monthly count of unique users authoring issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":67,"name":"ci_internal_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"ci_external_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in external repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_external_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"merge_requests_all_time_event","comment":null,"description":"All-time count of Merge Requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsmerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"todos_all_time_event","comment":null,"description":"All-time count of ToDos created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstodos))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":71,"name":"epics_all_time_event","comment":null,"description":"All-time count of Epics created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":72,"name":"issues_all_time_event","comment":null,"description":"All-time count of Issues created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":73,"name":"projects_all_time_event","comment":null,"description":"All-time count of Projects created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":74,"name":"deployments_28_days_event","comment":null,"description":"Monthly count of deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlydeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":75,"name":"packages_28_days_event","comment":null,"description":"Monthly count of Packages ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlypackages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":76,"name":"sast_jobs_all_time_event","comment":null,"description":"All-time count of SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":77,"name":"dast_jobs_all_time_event","comment":null,"description":"All-time count of DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":78,"name":"dependency_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Dependency Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":79,"name":"license_management_jobs_all_time_event","comment":null,"description":"All-time count of License Management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countslicense_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":80,"name":"secret_detection_jobs_all_time_event","comment":null,"description":"All-time count of Secret Detectionâ CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssecret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"container_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Container Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscontainer_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"projects_jenkins_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jenkins ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jenkins_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"projects_bamboo_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Bamboo CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_bamboo_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"projects_jira_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"projects_drone_ci_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Drone CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_drone_ci_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"projects_github_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_github_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"projects_jira_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Server ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"projects_jira_dvcs_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud (DVCS Connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"projects_with_repositories_enabled_all_time_event","comment":null,"description":"All-time count of projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":90,"name":"protected_branches_all_time_event","comment":null,"description":"All-time count of protected branches ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprotected_branches))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":91,"name":"remote_mirrors_all_time_event","comment":null,"description":"All-time count of remote mirrors ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsremote_mirrors))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":92,"name":"projects_enforcing_code_owner_approval_28_days_user","comment":null,"description":"Monthly count of unique users creating projects that require code owner approval ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_enforcing_code_owner_approval))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"project_clusters_enabled_28_days_user","comment":null,"description":"Monthly count of unique users using GitLab Managed enabled clusters attached to projects ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyconfigureproject_clusters_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"analytics_28_days_user","comment":null,"description":"The number of unique users viewing any [Analytics page](https://docs.gitlab.com/ee/user/analytics/) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#manage-manageoptimize---smau-gmau---mau-viewing-analytics-features))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"issues_edit_28_days_user","comment":null,"description":"Number of unique users interacting with an issue (open, close, reopen, adjust label, adjust milestone, adjust weight, comment) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#plan-planproject-management---smau-paid-gmau---mau-interacting-with-issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":96,"name":"user_packages_28_days_user","comment":null,"description":"The maximum distinct count of users who published a package to the Package Registry. In the future, this value will the distinct count of users across all Package AMAUs ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#packagepackage---smau-gmau---count-of-users-publishing-packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"terraform_state_api_28_days_user","comment":null,"description":"Monthly active users of GitLab Managed Terraform State ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#configureconfigure---smau-gmau---mau-of-gitlab-managed-terraform-state))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"incident_management_28_days_user","comment":null,"description":"Unique users that interact with alerts or incidents ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#monitormonitor---smau-gmau---unique-users-that-interact-with-alerts-and-incidents))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":99,"name":"auto_devops_enabled","comment":null,"description":"Flags whether auto DevOps is enabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#instance_auto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":100,"name":"gitaly_clusters_instance","comment":null,"description":"Number of GitLab Managed clusters both enabled and disabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitalyclusters))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":101,"name":"epics_deepest_relationship_level_instance","comment":null,"description":"Numeric level of the deepest relationship of all epics on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics_deepest_relationship_level))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":102,"name":"clusters_applications_cilium_all_time_event","comment":null,"description":"All-time total of GitLab Managed clusters with GitLab Managed App:Cilium installed ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsclusters_applications_cilium))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":103,"name":"network_policy_forwards_all_time_event","comment":null,"description":"Cumulative count of packets forwarded by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_forwards))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":104,"name":"network_policy_drops_all_time_event","comment":null,"description":"Cumulative count of packets dropped by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_drops))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":105,"name":"requirements_with_test_report_all_time_event","comment":null,"description":"All-time count of requirements having a test report ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirements_with_test_report))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":106,"name":"requirement_test_reports_ci_all_time_event","comment":null,"description":"All-time count of requirement test reports created from CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirement_test_reports_ci))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":107,"name":"projects_imported_from_github_all_time_event","comment":null,"description":"All-time count of project imported from GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_imported_from_github))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":108,"name":"projects_jira_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":109,"name":"projects_jira_dvcs_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":110,"name":"service_desk_issues_all_time_event","comment":null,"description":"All-time count of service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":111,"name":"ci_pipelines_all_time_user","comment":null,"description":"All-time count of distinct Users triggering Total pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":112,"name":"service_desk_issues_28_days_user","comment":null,"description":"Monthly count of users opening service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":113,"name":"projects_jira_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"projects_jira_dvcs_cloud_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Cloud (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":115,"name":"projects_jira_dvcs_server_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":116,"name":"merge_requests_with_required_code_owners_28_days_user","comment":null,"description":"Monthly count of users creating merge requests with required code owners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests_with_required_codeowners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":117,"name":"analytics_value_stream_28_days_event","comment":null,"description":"Monthly count of visits to [Value Stream Analytics](https://about.gitlab.com/stages-devops-lifecycle/value-stream-analytics/) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersanalyticsg_analytics_valuestream_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":118,"name":"code_review_user_approve_mr_28_days_user","comment":null,"description":"Monthly count of users approving merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_counterscode_reviewi_code_review_user_approve_mr_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":119,"name":"epics_usage_28_days_user","comment":null,"description":"Monthly users count for epics_usage ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersepics_usageepics_usage_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":120,"name":"ci_templates_usage_28_days_event","comment":null,"description":"Monthly count of CI templates ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersci_templatesci_templates_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":121,"name":"project_management_issue_milestone_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs milestone ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_milestone_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":122,"name":"project_management_issue_iteration_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs iteration ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_iteration_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":123,"name":"protected_branches_28_days_user","comment":null,"description":"Count of users creating projects with repositories making use of at least one protected branch in last 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182051_protected_branches.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":124,"name":"ci_cd_lead_time_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics lead time tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126091206_p_analytics_ci_cd_lead_time_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":125,"name":"ci_cd_deployment_frequency_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics deployment frequency tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126090835_p_analytics_ci_cd_deployment_frequency_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":126,"name":"projects_with_repositories_enabled_all_time_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182023_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":127,"name":"api_fuzzing_jobs_usage_28_days_user","comment":null,"description":"Count of distinct users creating API Fuzzing jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180355_user_api_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":128,"name":"coverage_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 coverage-guided Fuzz Testing job.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180359_coverage_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":129,"name":"api_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 API Fuzzing Testing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180401_api_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":130,"name":"container_scanning_pipeline_usage_28_days_event","comment":null,"description":"Pipelines containing a Container Scanning job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175507_container_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":131,"name":"dependency_scanning_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines with successful Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175226_dependency_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":132,"name":"sast_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 SAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182129_sast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":133,"name":"secret_detection_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 Secret Detection job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182131_secret_detection_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":134,"name":"dast_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines that have at least 1 DAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175618_dast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":135,"name":"coverage_fuzzing_jobs_28_days_user","comment":null,"description":"Users who run a coverage fuzzing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183817_user_coverage_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":136,"name":"environments_all_time_event","comment":null,"description":"Total available and stopped environments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181914_environments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":137,"name":"feature_flags_all_time_event","comment":null,"description":"Number of feature flag toggles. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181249_feature_flags.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":138,"name":"successful_deployments_28_days_event","comment":null,"description":"Total successful deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181923_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":139,"name":"failed_deployments_28_days_event","comment":null,"description":"Total failed deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181924_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":140,"name":"projects_compliance_framework_all_time_event","comment":null,"description":"Number of projects labeled with a compliance framework label. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180825_projects_with_compliance_framework.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":141,"name":"commit_ci_config_file_28_days_user","comment":null,"description":"Monthly unique user count doing commits which contains the CI config file.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184303_o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":142,"name":"view_audit_all_time_user","comment":null,"description":"Unique users who have viewed audit events. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216183906_g_compliance_audit_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":143,"name":"dependency_scanning_jobs_all_time_user","comment":null,"description":"Total number of users running Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175216_user_dependency_scanning_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":144,"name":"analytics_devops_adoption_all_time_user","comment":null,"description":"Unique users viewing analytics devops adoption. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210423005644_i_analytics_dev_ops_adoption.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":145,"name":"projects_imported_all_time_event","comment":null,"description":"Number of projects imported. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210514141520_project_imports_total.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":146,"name":"preferences_security_dashboard_28_days_user","comment":null,"description":"Users who set personal preference to see Security Dashboard on Group\n information page. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182209_user_preferences_group_overview_security_dashboard.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":147,"name":"web_ide_edit_28_days_user","comment":null,"description":"Number of unique users per month who edited a file from any web editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180327_action_monthly_active_users_ide_edit.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":148,"name":"auto_devops_pipelines_all_time_event","comment":null,"description":"Total pipelines from an Auto DevOps template. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175516_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":149,"name":"projects_prometheus_active_all_time_event","comment":null,"description":"Count of projects with active integrations for Prometheus. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180931_projects_prometheus_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":150,"name":"prometheus_enabled","comment":null,"description":"Whether the bundled Prometheus is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124912_prometheus_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":151,"name":"prometheus_metrics_enabled","comment":null,"description":"Whether Prometheus Metrics endpoint is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124914_prometheus_metrics_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":152,"name":"group_saml_enabled","comment":null,"description":"Has the instance enabled Group SAML SSO `https://docs.gitlab.com/ee/user/group/saml_sso/`\n on at least 1 group? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180813_group_saml_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":153,"name":"jira_issue_imports_all_time_event","comment":null,"description":"Count of projects imported from Jira. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180654_jira.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":154,"name":"author_epic_all_time_user","comment":null,"description":"Count distinct author ids from epics. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181134_epics.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":155,"name":"author_issue_all_time_user","comment":null,"description":"Count of users creating Issues. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181115_issues.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":156,"name":"failed_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a failed deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181937_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":157,"name":"successful_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a successful deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181941_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":158,"name":"geo_enabled","comment":null,"description":"Is Geo enabled? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180406_geo_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":159,"name":"auto_devops_pipelines_28_days_user","comment":null,"description":"Distinct users that ran an auto DevOps pipeline without a .gitlab-ci.yml file. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175548_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":160,"name":"active_instance_runners_all_time_event","comment":null,"description":"Total active Shared (Instance) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502045402_ci_runners_instance_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"active_group_runners_all_time_event","comment":null,"description":"Total active Group Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050341_ci_runners_group_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":162,"name":"active_project_runners_all_time_event","comment":null,"description":"Total active Specific (Project) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050834_ci_runners_project_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":163,"name":"gitaly_version","comment":null,"description":"Version of Gitaly. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20210204124928_version.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":164,"name":"gitaly_servers_all_time_event","comment":null,"description":"Total Gitalty Servers. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210204124930_servers.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":165,"name":"api_fuzzing_scans_all_time_event","comment":null,"description":"Number of DAST API Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180353_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":166,"name":"api_fuzzing_scans_28_days_event","comment":null,"description":"Count of API fuzz test scans. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183838_api_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":167,"name":"coverage_fuzzing_scans_all_time_event","comment":null,"description":"Number of Coverage Fuzzing security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216180352_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":168,"name":"coverage_fuzzing_scans_28_days_event","comment":null,"description":"Number of Coverage Guided Fuzz Test security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183836_coverage_fuzzing_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":169,"name":"secret_detection_scans_all_time_event","comment":null,"description":"Counts secret detection jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182123_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":170,"name":"secret_detection_scans_28_days_event","comment":null,"description":"Number of Secret Detection security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231956_secret_detection_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":171,"name":"dependency_scanning_scans_all_time_event","comment":null,"description":"Total count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175220_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":172,"name":"dependency_scanning_scans_28_days_event","comment":null,"description":"Monthly count of Dependency Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183828_dependency_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":173,"name":"container_scanning_scans_all_time_event","comment":null,"description":"Counts container scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175503_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":174,"name":"container_scanning_scans_28_days_event","comment":null,"description":"Number of Container Scanning security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231849_container_scanning_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":175,"name":"dast_scans_all_time_event","comment":null,"description":"Counts dast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182122_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":176,"name":"dast_scans_28_days_event","comment":null,"description":"Number of DAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183832_dast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":177,"name":"sast_scans_all_time_event","comment":null,"description":"Counts sast jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182120_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":178,"name":"sast_scans_28_days_event","comment":null,"description":"Number of SAST security scans run. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210830231329_sast_scans.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":179,"name":"packages_pushed_registry_all_time_event","comment":null,"description":"A count of packages that have been published to the package registry\nusing a deploy token. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183005_package_events_i_package_push_package_by_deploy_token.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":180,"name":"packages_pulled_registry_all_time_event","comment":null,"description":"A count of packages that have been downloaded from the package registry\nby a guest. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216183000_package_events_i_package_pull_package_by_guest.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":181,"name":"compliance_dashboard_view_28_days_user","comment":null,"description":"Unique users who have viewed the compliance dashboard in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183926_g_compliance_dashboard_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":182,"name":"audit_screen_view_28_days_user","comment":null,"description":"Unique users who have viewed the audit event screen in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183930_g_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"instance_audit_screen_view_28_days_user","comment":null,"description":"Unique users that have viewed the instance-level audit events screen. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183934_i_compliance_audit_events_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":184,"name":"credential_inventory_view_28_days_user","comment":null,"description":"Unique users who have viewed the credential inventory in a given month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183938_i_compliance_credential_inventory_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":185,"name":"compliance_frameworks_pipeline_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":186,"name":"compliance_frameworks_pipeline_28_days_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210622091519_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":187,"name":"groups_streaming_destinations_all_time_event","comment":null,"description":"Count of compliance frameworks that have a pipeline configuration. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210622123800_compliance_frameworks_with_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":188,"name":"groups_streaming_destinations_28_days_event","comment":null,"description":"Distinct count of groups with any event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130091657_groups_with_event_streaming_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":189,"name":"audit_event_destinations_all_time_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":190,"name":"audit_event_destinations_28_days_event","comment":null,"description":"Count of audit event streaming destinations. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20211130085433_g_manage_compliance_audit_event_destinations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":191,"name":"projects_status_checks_all_time_event","comment":null,"description":"Total number of distinct projects with external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308162514_projects_with_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":192,"name":"external_status_checks_all_time_event","comment":null,"description":"Total number of external status checks. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20220308155129_external_status_checks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":193,"name":"paid_license_search_28_days_user","comment":null,"description":"Calculated unique users to perform a search with a paid license enabled\nby month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216184035_i_search_paid_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":194,"name":"last_activity_28_days_user","comment":null,"description":"Users that have a last_activity_on date within the past 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20220621085114_unique_active_users_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":195,"name":"snippets_28_days_event","comment":null,"description":"Monthly count of All Snippets. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180312_snippets.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":196,"name":"single_file_editor_28_days_user","comment":null,"description":"Number of users editing a file from the single file editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180334_g_edit_by_sfe_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":197,"name":"merge_requests_created_28_days_event","comment":null,"description":"Count of unique merge requests created per month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20221213182900_i_code_review_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":198,"name":"merge_requests_created_28_days_user","comment":null,"description":"Count of unique users per month who created a MR. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/60dda716679ae92aa368633bdee597b8fa57984f/config/metrics/counts_28d/20210216175132_i_code_review_user_create_mr_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":199,"name":"merge_requests_approval_rules_28_days_event","comment":null,"description":"Count of distinct merge requests merged using approval rules. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20221211202138_merged_merge_requests_using_approval_rules_distinct.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":200,"name":"custom_compliance_frameworks_28_days_event","comment":null,"description":"Monthly count of all custom compliance framework labels. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210507165054_custom_compliance_frameworks.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":201,"name":"projects_security_policy_28_days_event","comment":null,"description":"The total number of projects with an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083011_distinct_count_project_id_from_security_orchestration_policy_configurations.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":202,"name":"merge_requests_security_policy_28_days_user","comment":null,"description":"The total number of users who have created merge requests in Projects that have an assigned security policy project. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20220927083016_user_merge_requests_for_projects_with_security_policy_project.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":203,"name":"pipelines_implicit_auto_devops_28_days_event","comment":null,"description":"Count of pipelines with implicit Auto DevOps runs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184458_p_ci_templates_implicit_auto_devops_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":204,"name":"pipeline_schedules_28_days_user","comment":null,"description":"Distinct users creating pipeline schedules in a month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175552_ci_pipeline_schedules.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":205,"name":"ci_internal_pipelines_28_days_event","comment":null,"description":"Total monthly (28D) pipelines in Gitlab repositories for all project and project types [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20230217215050_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}\"})"}],"display_name":"ci_internal_pipelines_28_days_event"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":206,"name":"is_latest_data","comment":null,"description":"Flags the row with the most recently received data from Usage Ping","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_latest_data"},"PRIMARY_KEY":{"type":"TEXT","index":207,"name":"primary_key","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"unique","short":"U","label":"Unique"},{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"primary_key"},"CREATED_BY":{"type":"TEXT","index":208,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":209,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":210,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":211,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":212,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":213,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"subscription_status_original":{"name":"subscription_status_original","description":"Status of the original subscription id at the time the usage ping was created. This was added to allow a status to be reported even when manual changes to Zuora subscriptions have broken the join.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_status_original"},"subscription_start_date_original":{"name":"subscription_start_date_original","description":"Date the subscription term of the orgininal subscription version started.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date_original"},"subscription_end_date_original":{"name":"subscription_end_date_original","description":"Date the subscription term of the original subscription version ended. Because of how subscription end dates are calcuated in dim_subscription_snapshot_bottom_up, this will be the same as the subscription_end_date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date_original"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":242752000,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid","raw_sql":"$11","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.dbt_utils.group_by","macro.gitlab_snowflake.get_keyed_nulls","macro.dbt_utils.surrogate_key","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_location_country","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.dim_namespace","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.mart_charge","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time"]},"config":{"enabled":true,"alias":null,"schema":"pumps","database":"PROD","tags":["product","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"pumps","fqn":["gitlab_snowflake","marts","pumps","pump_gainsight_metrics_monthly_paid"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"marts/pumps/pump_gainsight_metrics_monthly_paid.sql","original_file_path":"models/marts/pumps/pump_gainsight_metrics_monthly_paid.sql","name":"pump_gainsight_metrics_monthly_paid","alias":"pump_gainsight_metrics_monthly_paid","checksum":{"name":"sha256","checksum":"cee1a3f900ebc8cc3afd6fb5821da9d30eeb172b3e3ccba677bb2ed92e204427"},"tags":["product","mnpi_exception"],"refs":[["rpt_gainsight_metrics_monthly_paid_saas"],["rpt_gainsight_metrics_monthly_paid_saas"],["rpt_gainsight_metrics_monthly_paid_self_managed"],["rpt_gainsight_metrics_monthly_paid_self_managed"],["dim_billing_account"],["dim_billing_account"],["dim_location_country"],["dim_location_country"],["dim_subscription"],["dim_subscription"],["dim_namespace"],["dim_namespace"],["mart_charge"],["mart_charge"],["dim_date"],["dim_date"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["redis_namespace_snowplow_clicks_aggregated_workspace"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_user_based_metric_counts_namespace_monthly"],["wk_rpt_event_based_metric_counts_namespace_all_time"],["wk_rpt_event_based_metric_counts_namespace_all_time"]],"sources":[],"metrics":[],"description":"$12","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/marts/pumps/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/pump_gainsight_metrics_monthly_paid.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"pumps","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product","mnpi_exception"]},"created_at":1689033729.6612644,"compiled_sql":"$13","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".pumps.pump_gainsight_metrics_monthly_paid","label":"pump_gainsight_metrics_monthly_paid"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"referenced_by"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Referenced By"}],["$","$L14",null,{"references":{"test":[{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"snapshot_month","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_snapshot_month"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_snapshot_month.a6608d7a94","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_month.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_month","alias":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_month","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metrics_monthly_paid_snapshot_month.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033730.6251373,"compiled_sql":"\n    \n    \n\n\n\nselect snapshot_month\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere snapshot_month is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"snapshot_month","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_month"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_pump_gainsight_metric_0e59dca6833e0fc73c1115c64c39ed46\") }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_subscription_id","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"not_null_pump_gainsight_metric_0e59dca6833e0fc73c1115c64c39ed46","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id.21e0aa41bd","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metric_0e59dca6833e0fc73c1115c64c39ed46.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id","alias":"not_null_pump_gainsight_metric_0e59dca6833e0fc73c1115c64c39ed46","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metric_0e59dca6833e0fc73c1115c64c39ed46.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"not_null_pump_gainsight_metric_0e59dca6833e0fc73c1115c64c39ed46"},"created_at":1689033730.6287365,"compiled_sql":"\n    \n    \n\n\n\nselect dim_subscription_id\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere dim_subscription_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_subscription_id","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_pump_gainsight_metric_2792ff3f861e6ea9724fb5fba433f8ab\") }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_billing_account_id","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"not_null_pump_gainsight_metric_2792ff3f861e6ea9724fb5fba433f8ab","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_dim_billing_account_id"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_dim_billing_account_id.04a4127819","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metric_2792ff3f861e6ea9724fb5fba433f8ab.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_dim_billing_account_id","alias":"not_null_pump_gainsight_metric_2792ff3f861e6ea9724fb5fba433f8ab","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metric_2792ff3f861e6ea9724fb5fba433f8ab.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"not_null_pump_gainsight_metric_2792ff3f861e6ea9724fb5fba433f8ab"},"created_at":1689033730.6328688,"compiled_sql":"\n    \n    \n\n\n\nselect dim_billing_account_id\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere dim_billing_account_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_billing_account_id","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_dim_billing_account_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_crm_account_id","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id.d414fb17e3","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id","alias":"not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033730.636961,"compiled_sql":"\n    \n    \n\n\n\nselect dim_crm_account_id\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere dim_crm_account_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_crm_account_id","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_dim_crm_account_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_pump_gainsight_metric_0fe2733115f030fa960b83f1934226d1\") }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"dim_subscription_id_original","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"not_null_pump_gainsight_metric_0fe2733115f030fa960b83f1934226d1","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id_original"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id_original.505a00a975","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metric_0fe2733115f030fa960b83f1934226d1.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id_original","alias":"not_null_pump_gainsight_metric_0fe2733115f030fa960b83f1934226d1","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metric_0fe2733115f030fa960b83f1934226d1.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"not_null_pump_gainsight_metric_0fe2733115f030fa960b83f1934226d1"},"created_at":1689033730.641521,"compiled_sql":"\n    \n    \n\n\n\nselect dim_subscription_id_original\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere dim_subscription_id_original is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dim_subscription_id_original","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_dim_subscription_id_original"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"snapshot_date_id","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id.5f2fcfc423","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id","alias":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id","checksum":{"name":"none","checksum":""},"tags":["common","gainsight","tdf"],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033730.6457357,"compiled_sql":"\n    \n    \n\n\n\nselect snapshot_date_id\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere snapshot_date_id is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"snapshot_date_id","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_snapshot_date_id"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"delivery_type","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_delivery_type"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_delivery_type.8f2ed78b20","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metrics_monthly_paid_delivery_type.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_delivery_type","alias":"not_null_pump_gainsight_metrics_monthly_paid_delivery_type","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metrics_monthly_paid_delivery_type.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033730.6493707,"compiled_sql":"\n    \n    \n\n\n\nselect delivery_type\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere delivery_type is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"delivery_type","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_delivery_type"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_55a0ab371726030534502bd5db6c33dc\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_with_packages_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_55a0ab371726030534502bd5db6c33dc","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_packages_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_packages_28_days_event.33d88a89fe","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_55a0ab371726030534502bd5db6c33dc.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_packages_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_55a0ab371726030534502bd5db6c33dc","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_55a0ab371726030534502bd5db6c33dc.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_55a0ab371726030534502bd5db6c33dc"},"created_at":1689033730.6528113,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_with_packages_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_with_packages_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_with_packages_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_packages_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_3e59c778d690f7a69e3178b03fdbabfd\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"protected_branches_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_3e59c778d690f7a69e3178b03fdbabfd","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_protected_branches_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_protected_branches_28_days_user.1045c504e0","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_3e59c778d690f7a69e3178b03fdbabfd.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_protected_branches_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_3e59c778d690f7a69e3178b03fdbabfd","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_3e59c778d690f7a69e3178b03fdbabfd.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_3e59c778d690f7a69e3178b03fdbabfd"},"created_at":1689033730.6613238,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(protected_branches_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(protected_branches_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"protected_branches_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_protected_branches_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_970f1bef9b6ab4c567fa98bb2143897f\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"ci_cd_lead_time_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_970f1bef9b6ab4c567fa98bb2143897f","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_lead_time_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_lead_time_usage_28_days_event.6f96783c5e","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_970f1bef9b6ab4c567fa98bb2143897f.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_lead_time_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_970f1bef9b6ab4c567fa98bb2143897f","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_970f1bef9b6ab4c567fa98bb2143897f.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_970f1bef9b6ab4c567fa98bb2143897f"},"created_at":1689033730.669079,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(ci_cd_lead_time_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(ci_cd_lead_time_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"ci_cd_lead_time_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_lead_time_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_7edd77d15c2a2e6013c7ba512385f767\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"ci_cd_deployment_frequency_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_7edd77d15c2a2e6013c7ba512385f767","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_deployment_frequency_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_deployment_frequency_usage_28_days_event.8d30741257","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_7edd77d15c2a2e6013c7ba512385f767.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_deployment_frequency_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_7edd77d15c2a2e6013c7ba512385f767","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_7edd77d15c2a2e6013c7ba512385f767.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_7edd77d15c2a2e6013c7ba512385f767"},"created_at":1689033730.6784165,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(ci_cd_deployment_frequency_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(ci_cd_deployment_frequency_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"ci_cd_deployment_frequency_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_cd_deployment_frequency_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_c7ddbf5240615ae6242384ea3318036c\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_with_repositories_enabled_all_time_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_c7ddbf5240615ae6242384ea3318036c","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_repositories_enabled_all_time_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_repositories_enabled_all_time_user.2d749ac445","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_c7ddbf5240615ae6242384ea3318036c.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_repositories_enabled_all_time_user","alias":"dbt_utils_at_least_one_pump_ga_c7ddbf5240615ae6242384ea3318036c","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_c7ddbf5240615ae6242384ea3318036c.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_c7ddbf5240615ae6242384ea3318036c"},"created_at":1689033730.6871617,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_with_repositories_enabled_all_time_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_with_repositories_enabled_all_time_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_with_repositories_enabled_all_time_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_with_repositories_enabled_all_time_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_4341d05dc6a907783671b94f076ac06f\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"api_fuzzing_jobs_usage_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_4341d05dc6a907783671b94f076ac06f","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_jobs_usage_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_jobs_usage_28_days_user.0fec63337f","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_4341d05dc6a907783671b94f076ac06f.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_jobs_usage_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_4341d05dc6a907783671b94f076ac06f","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_4341d05dc6a907783671b94f076ac06f.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_4341d05dc6a907783671b94f076ac06f"},"created_at":1689033730.6950407,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(api_fuzzing_jobs_usage_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(api_fuzzing_jobs_usage_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"api_fuzzing_jobs_usage_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_jobs_usage_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_79bbb4b357cceaac0cf9c0cae3d967a0\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"coverage_fuzzing_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_79bbb4b357cceaac0cf9c0cae3d967a0","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_pipeline_usage_28_days_event.46f682d9e7","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_79bbb4b357cceaac0cf9c0cae3d967a0.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_79bbb4b357cceaac0cf9c0cae3d967a0","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_79bbb4b357cceaac0cf9c0cae3d967a0.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_79bbb4b357cceaac0cf9c0cae3d967a0"},"created_at":1689033730.7039309,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(coverage_fuzzing_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(coverage_fuzzing_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"coverage_fuzzing_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_f403855ff0e3b636ac10cda3128f52a5\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"api_fuzzing_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_f403855ff0e3b636ac10cda3128f52a5","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_pipeline_usage_28_days_event.8bf1f1c82d","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_f403855ff0e3b636ac10cda3128f52a5.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_f403855ff0e3b636ac10cda3128f52a5","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_f403855ff0e3b636ac10cda3128f52a5.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_f403855ff0e3b636ac10cda3128f52a5"},"created_at":1689033730.7130413,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(api_fuzzing_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(api_fuzzing_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"api_fuzzing_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_cee91e4ed5f9901cd1700ab46eac5de5\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"container_scanning_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_cee91e4ed5f9901cd1700ab46eac5de5","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_pipeline_usage_28_days_event.d5ace52fe4","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_cee91e4ed5f9901cd1700ab46eac5de5.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_cee91e4ed5f9901cd1700ab46eac5de5","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_cee91e4ed5f9901cd1700ab46eac5de5.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_cee91e4ed5f9901cd1700ab46eac5de5"},"created_at":1689033730.7222505,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(container_scanning_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(container_scanning_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"container_scanning_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_2a5cd1e81deace5a4821e320df6be97d\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dependency_scanning_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_2a5cd1e81deace5a4821e320df6be97d","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_pipeline_usage_28_days_event.e9f805cb21","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_2a5cd1e81deace5a4821e320df6be97d.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_2a5cd1e81deace5a4821e320df6be97d","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_2a5cd1e81deace5a4821e320df6be97d.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_2a5cd1e81deace5a4821e320df6be97d"},"created_at":1689033730.7316825,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dependency_scanning_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dependency_scanning_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dependency_scanning_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_91ddadcf01eef65544a5b29caa250346\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"sast_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_91ddadcf01eef65544a5b29caa250346","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_pipeline_usage_28_days_event.d1d7dd6a2b","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_91ddadcf01eef65544a5b29caa250346.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_91ddadcf01eef65544a5b29caa250346","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_91ddadcf01eef65544a5b29caa250346.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_91ddadcf01eef65544a5b29caa250346"},"created_at":1689033730.7395146,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(sast_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(sast_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"sast_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_39b637a723cf537212cbb541e0651115\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"secret_detection_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_39b637a723cf537212cbb541e0651115","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_pipeline_usage_28_days_event.8c1feb4d81","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_39b637a723cf537212cbb541e0651115.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_39b637a723cf537212cbb541e0651115","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_39b637a723cf537212cbb541e0651115.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_39b637a723cf537212cbb541e0651115"},"created_at":1689033730.747672,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(secret_detection_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(secret_detection_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"secret_detection_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_c381fa3c21d678bcdf6b3d2380721a32\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dast_pipeline_usage_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_c381fa3c21d678bcdf6b3d2380721a32","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_pipeline_usage_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_pipeline_usage_28_days_event.13b3db6750","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_c381fa3c21d678bcdf6b3d2380721a32.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_pipeline_usage_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_c381fa3c21d678bcdf6b3d2380721a32","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_c381fa3c21d678bcdf6b3d2380721a32.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_c381fa3c21d678bcdf6b3d2380721a32"},"created_at":1689033730.7555988,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dast_pipeline_usage_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dast_pipeline_usage_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dast_pipeline_usage_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_pipeline_usage_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_04d632d9afe80a0d9a13b07f7ff8182f\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"coverage_fuzzing_jobs_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_04d632d9afe80a0d9a13b07f7ff8182f","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_jobs_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_jobs_28_days_user.42ba636e5c","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_04d632d9afe80a0d9a13b07f7ff8182f.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_jobs_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_04d632d9afe80a0d9a13b07f7ff8182f","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_04d632d9afe80a0d9a13b07f7ff8182f.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_04d632d9afe80a0d9a13b07f7ff8182f"},"created_at":1689033730.7632625,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(coverage_fuzzing_jobs_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(coverage_fuzzing_jobs_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"coverage_fuzzing_jobs_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_jobs_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_6a2822c6c19d9cf6fc001c216a8c6ab2\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"environments_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_6a2822c6c19d9cf6fc001c216a8c6ab2","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_environments_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_environments_all_time_event.0a18048053","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_6a2822c6c19d9cf6fc001c216a8c6ab2.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_environments_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_6a2822c6c19d9cf6fc001c216a8c6ab2","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_6a2822c6c19d9cf6fc001c216a8c6ab2.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_6a2822c6c19d9cf6fc001c216a8c6ab2"},"created_at":1689033730.7717884,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(environments_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(environments_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"environments_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_environments_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_83b5651683b48a6785c525352eaae216\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"feature_flags_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_83b5651683b48a6785c525352eaae216","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_feature_flags_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_feature_flags_all_time_event.ed043e9530","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_83b5651683b48a6785c525352eaae216.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_feature_flags_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_83b5651683b48a6785c525352eaae216","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_83b5651683b48a6785c525352eaae216.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_83b5651683b48a6785c525352eaae216"},"created_at":1689033730.7798302,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(feature_flags_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(feature_flags_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"feature_flags_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_feature_flags_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_9d6ded523d64f547f45b233b20569ca1\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"successful_deployments_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_9d6ded523d64f547f45b233b20569ca1","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_event.29cf4e8f37","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_9d6ded523d64f547f45b233b20569ca1.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_9d6ded523d64f547f45b233b20569ca1","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_9d6ded523d64f547f45b233b20569ca1.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_9d6ded523d64f547f45b233b20569ca1"},"created_at":1689033730.7874038,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(successful_deployments_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(successful_deployments_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"successful_deployments_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_0f659df3ba42829c4b5a965ea8d3c4aa\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"failed_deployments_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_0f659df3ba42829c4b5a965ea8d3c4aa","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_event.8e0ea76859","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_0f659df3ba42829c4b5a965ea8d3c4aa.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_0f659df3ba42829c4b5a965ea8d3c4aa","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_0f659df3ba42829c4b5a965ea8d3c4aa.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_0f659df3ba42829c4b5a965ea8d3c4aa"},"created_at":1689033730.7954128,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(failed_deployments_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(failed_deployments_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"failed_deployments_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_805c713f8017b03700c6b6fd72520fa2\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_compliance_framework_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_805c713f8017b03700c6b6fd72520fa2","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_compliance_framework_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_compliance_framework_all_time_event.d9627f8576","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_805c713f8017b03700c6b6fd72520fa2.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_compliance_framework_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_805c713f8017b03700c6b6fd72520fa2","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_805c713f8017b03700c6b6fd72520fa2.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_805c713f8017b03700c6b6fd72520fa2"},"created_at":1689033730.803744,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_compliance_framework_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_compliance_framework_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_compliance_framework_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_compliance_framework_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_463509e74ba4b6491f7a9ef80540e497\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"commit_ci_config_file_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_463509e74ba4b6491f7a9ef80540e497","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_commit_ci_config_file_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_commit_ci_config_file_28_days_user.2f40e02afc","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_463509e74ba4b6491f7a9ef80540e497.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_commit_ci_config_file_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_463509e74ba4b6491f7a9ef80540e497","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_463509e74ba4b6491f7a9ef80540e497.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_463509e74ba4b6491f7a9ef80540e497"},"created_at":1689033730.8120184,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(commit_ci_config_file_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(commit_ci_config_file_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"commit_ci_config_file_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_commit_ci_config_file_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_ba69aa0e793a7296270fc3d54e164ce3\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"view_audit_all_time_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_ba69aa0e793a7296270fc3d54e164ce3","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_view_audit_all_time_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_view_audit_all_time_user.e07665f76f","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_ba69aa0e793a7296270fc3d54e164ce3.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_view_audit_all_time_user","alias":"dbt_utils_at_least_one_pump_ga_ba69aa0e793a7296270fc3d54e164ce3","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_ba69aa0e793a7296270fc3d54e164ce3.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_ba69aa0e793a7296270fc3d54e164ce3"},"created_at":1689033730.821119,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(view_audit_all_time_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(view_audit_all_time_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"view_audit_all_time_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_view_audit_all_time_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_81989a428615ec0943896127a3d51ddf\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dependency_scanning_jobs_all_time_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_81989a428615ec0943896127a3d51ddf","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_jobs_all_time_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_jobs_all_time_user.15d59fead0","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_81989a428615ec0943896127a3d51ddf.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_jobs_all_time_user","alias":"dbt_utils_at_least_one_pump_ga_81989a428615ec0943896127a3d51ddf","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_81989a428615ec0943896127a3d51ddf.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_81989a428615ec0943896127a3d51ddf"},"created_at":1689033730.8296154,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dependency_scanning_jobs_all_time_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dependency_scanning_jobs_all_time_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dependency_scanning_jobs_all_time_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_jobs_all_time_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_50eab439b0500541c3248ae4e08b67c6\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"analytics_devops_adoption_all_time_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_50eab439b0500541c3248ae4e08b67c6","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_analytics_devops_adoption_all_time_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_analytics_devops_adoption_all_time_user.815e3bdde5","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_50eab439b0500541c3248ae4e08b67c6.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_analytics_devops_adoption_all_time_user","alias":"dbt_utils_at_least_one_pump_ga_50eab439b0500541c3248ae4e08b67c6","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_50eab439b0500541c3248ae4e08b67c6.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_50eab439b0500541c3248ae4e08b67c6"},"created_at":1689033730.8417296,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(analytics_devops_adoption_all_time_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(analytics_devops_adoption_all_time_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"analytics_devops_adoption_all_time_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_analytics_devops_adoption_all_time_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_d08f15f8c29fcceb89de75f83051c0d6\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_imported_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_d08f15f8c29fcceb89de75f83051c0d6","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_imported_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_imported_all_time_event.beb7e9f022","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_d08f15f8c29fcceb89de75f83051c0d6.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_imported_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_d08f15f8c29fcceb89de75f83051c0d6","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_d08f15f8c29fcceb89de75f83051c0d6.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_d08f15f8c29fcceb89de75f83051c0d6"},"created_at":1689033730.8515444,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_imported_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_imported_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_imported_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_imported_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_87a91ca962e79f77c05a7dcc64c18989\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"preferences_security_dashboard_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_87a91ca962e79f77c05a7dcc64c18989","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_preferences_security_dashboard_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_preferences_security_dashboard_28_days_user.aee5addd6e","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_87a91ca962e79f77c05a7dcc64c18989.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_preferences_security_dashboard_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_87a91ca962e79f77c05a7dcc64c18989","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_87a91ca962e79f77c05a7dcc64c18989.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_87a91ca962e79f77c05a7dcc64c18989"},"created_at":1689033730.8601897,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(preferences_security_dashboard_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(preferences_security_dashboard_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"preferences_security_dashboard_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_preferences_security_dashboard_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_9755e636335f6b05ff1c40e108936137\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"web_ide_edit_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_9755e636335f6b05ff1c40e108936137","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_web_ide_edit_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_web_ide_edit_28_days_user.08095388f9","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_9755e636335f6b05ff1c40e108936137.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_web_ide_edit_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_9755e636335f6b05ff1c40e108936137","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_9755e636335f6b05ff1c40e108936137.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_9755e636335f6b05ff1c40e108936137"},"created_at":1689033730.869255,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(web_ide_edit_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(web_ide_edit_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"web_ide_edit_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_web_ide_edit_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_6d4d10c599272cec484aeda33f33369a\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"auto_devops_pipelines_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_6d4d10c599272cec484aeda33f33369a","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_all_time_event.c98d16a83f","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_6d4d10c599272cec484aeda33f33369a.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_6d4d10c599272cec484aeda33f33369a","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_6d4d10c599272cec484aeda33f33369a.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_6d4d10c599272cec484aeda33f33369a"},"created_at":1689033730.8783257,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(auto_devops_pipelines_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(auto_devops_pipelines_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"auto_devops_pipelines_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_36d859ee184678d78b4063d3d8413275\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_prometheus_active_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_36d859ee184678d78b4063d3d8413275","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_prometheus_active_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_prometheus_active_all_time_event.6877380856","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_36d859ee184678d78b4063d3d8413275.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_prometheus_active_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_36d859ee184678d78b4063d3d8413275","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_36d859ee184678d78b4063d3d8413275.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_36d859ee184678d78b4063d3d8413275"},"created_at":1689033730.887774,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_prometheus_active_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_prometheus_active_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_prometheus_active_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_prometheus_active_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_fa17f784cb8bbf3ce1b2097c32fc68b6\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"prometheus_enabled","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_fa17f784cb8bbf3ce1b2097c32fc68b6","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_enabled"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_enabled.8a79294bf6","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_fa17f784cb8bbf3ce1b2097c32fc68b6.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_enabled","alias":"dbt_utils_at_least_one_pump_ga_fa17f784cb8bbf3ce1b2097c32fc68b6","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_fa17f784cb8bbf3ce1b2097c32fc68b6.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_fa17f784cb8bbf3ce1b2097c32fc68b6"},"created_at":1689033730.8971243,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(prometheus_enabled) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(prometheus_enabled) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"prometheus_enabled","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_enabled"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_6aeda6301f55b8b35acf87799c64a008\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"prometheus_metrics_enabled","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_6aeda6301f55b8b35acf87799c64a008","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_metrics_enabled"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_metrics_enabled.bcb5f2baa0","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_6aeda6301f55b8b35acf87799c64a008.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_metrics_enabled","alias":"dbt_utils_at_least_one_pump_ga_6aeda6301f55b8b35acf87799c64a008","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_6aeda6301f55b8b35acf87799c64a008.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_6aeda6301f55b8b35acf87799c64a008"},"created_at":1689033730.9060793,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(prometheus_metrics_enabled) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(prometheus_metrics_enabled) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"prometheus_metrics_enabled","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_prometheus_metrics_enabled"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_28991d8fcde088ef77f4d1a0a67c6013\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"group_saml_enabled","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_28991d8fcde088ef77f4d1a0a67c6013","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_group_saml_enabled"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_group_saml_enabled.bc44afd6ec","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_28991d8fcde088ef77f4d1a0a67c6013.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_group_saml_enabled","alias":"dbt_utils_at_least_one_pump_ga_28991d8fcde088ef77f4d1a0a67c6013","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_28991d8fcde088ef77f4d1a0a67c6013.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_28991d8fcde088ef77f4d1a0a67c6013"},"created_at":1689033730.9142632,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(group_saml_enabled) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(group_saml_enabled) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"group_saml_enabled","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_group_saml_enabled"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_fc2ca645e41b0535e2963dc6dcab3742\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"jira_issue_imports_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_fc2ca645e41b0535e2963dc6dcab3742","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_jira_issue_imports_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_jira_issue_imports_all_time_event.d00c70c000","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_fc2ca645e41b0535e2963dc6dcab3742.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_jira_issue_imports_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_fc2ca645e41b0535e2963dc6dcab3742","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_fc2ca645e41b0535e2963dc6dcab3742.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_fc2ca645e41b0535e2963dc6dcab3742"},"created_at":1689033730.9226925,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(jira_issue_imports_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(jira_issue_imports_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"jira_issue_imports_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_jira_issue_imports_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_ec670cd8a8e159031f82f4d7eeeaedfe\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"author_epic_all_time_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_ec670cd8a8e159031f82f4d7eeeaedfe","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_epic_all_time_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_epic_all_time_user.74ec483725","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_ec670cd8a8e159031f82f4d7eeeaedfe.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_epic_all_time_user","alias":"dbt_utils_at_least_one_pump_ga_ec670cd8a8e159031f82f4d7eeeaedfe","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_ec670cd8a8e159031f82f4d7eeeaedfe.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_ec670cd8a8e159031f82f4d7eeeaedfe"},"created_at":1689033730.9307344,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(author_epic_all_time_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(author_epic_all_time_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"author_epic_all_time_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_epic_all_time_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_3633f042d151d30680182db0a85b1b4e\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"author_issue_all_time_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_3633f042d151d30680182db0a85b1b4e","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_issue_all_time_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_issue_all_time_user.82b68e2e4b","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_3633f042d151d30680182db0a85b1b4e.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_issue_all_time_user","alias":"dbt_utils_at_least_one_pump_ga_3633f042d151d30680182db0a85b1b4e","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_3633f042d151d30680182db0a85b1b4e.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_3633f042d151d30680182db0a85b1b4e"},"created_at":1689033730.938651,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(author_issue_all_time_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(author_issue_all_time_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"author_issue_all_time_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_author_issue_all_time_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_6ffc6022bf9a290b167fd0f72c4ac823\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"failed_deployments_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_6ffc6022bf9a290b167fd0f72c4ac823","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_user.a79e4459e2","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_6ffc6022bf9a290b167fd0f72c4ac823.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_6ffc6022bf9a290b167fd0f72c4ac823","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_6ffc6022bf9a290b167fd0f72c4ac823.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_6ffc6022bf9a290b167fd0f72c4ac823"},"created_at":1689033730.9464073,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(failed_deployments_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(failed_deployments_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"failed_deployments_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_failed_deployments_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_83aa17a8407b1fa5dbdf74aa38368926\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"successful_deployments_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_83aa17a8407b1fa5dbdf74aa38368926","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_user.87d289c7a6","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_83aa17a8407b1fa5dbdf74aa38368926.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_83aa17a8407b1fa5dbdf74aa38368926","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_83aa17a8407b1fa5dbdf74aa38368926.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_83aa17a8407b1fa5dbdf74aa38368926"},"created_at":1689033730.9536302,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(successful_deployments_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(successful_deployments_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"successful_deployments_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_successful_deployments_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_82b75589e5391be6dc35acb9e1c3627e\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"geo_enabled","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_82b75589e5391be6dc35acb9e1c3627e","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_geo_enabled"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_geo_enabled.9a9e28465a","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_82b75589e5391be6dc35acb9e1c3627e.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_geo_enabled","alias":"dbt_utils_at_least_one_pump_ga_82b75589e5391be6dc35acb9e1c3627e","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_82b75589e5391be6dc35acb9e1c3627e.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_82b75589e5391be6dc35acb9e1c3627e"},"created_at":1689033730.9612453,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(geo_enabled) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(geo_enabled) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"geo_enabled","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_geo_enabled"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_27f02854464503e9bb5e368ab7cbc20b\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"auto_devops_pipelines_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_27f02854464503e9bb5e368ab7cbc20b","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_28_days_user.fc570dd789","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_27f02854464503e9bb5e368ab7cbc20b.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_27f02854464503e9bb5e368ab7cbc20b","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_27f02854464503e9bb5e368ab7cbc20b.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_27f02854464503e9bb5e368ab7cbc20b"},"created_at":1689033730.9703083,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(auto_devops_pipelines_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(auto_devops_pipelines_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"auto_devops_pipelines_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_auto_devops_pipelines_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_afbfc0b2a4f23cffb60a2c6a60df74ad\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"active_instance_runners_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_afbfc0b2a4f23cffb60a2c6a60df74ad","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_instance_runners_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_instance_runners_all_time_event.82f30637bd","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_afbfc0b2a4f23cffb60a2c6a60df74ad.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_instance_runners_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_afbfc0b2a4f23cffb60a2c6a60df74ad","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_afbfc0b2a4f23cffb60a2c6a60df74ad.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_afbfc0b2a4f23cffb60a2c6a60df74ad"},"created_at":1689033730.9775245,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(active_instance_runners_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(active_instance_runners_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"active_instance_runners_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_instance_runners_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_ec872bc8416e6abb35961b6ff330bace\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"active_group_runners_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_ec872bc8416e6abb35961b6ff330bace","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_group_runners_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_group_runners_all_time_event.74885fc4fc","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_ec872bc8416e6abb35961b6ff330bace.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_group_runners_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_ec872bc8416e6abb35961b6ff330bace","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_ec872bc8416e6abb35961b6ff330bace.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_ec872bc8416e6abb35961b6ff330bace"},"created_at":1689033730.984983,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(active_group_runners_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(active_group_runners_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"active_group_runners_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_group_runners_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_ad5505a9c27a6fc2d5807d5a01f03dc1\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"active_project_runners_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_ad5505a9c27a6fc2d5807d5a01f03dc1","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_project_runners_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_project_runners_all_time_event.e55cd5b6ce","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_ad5505a9c27a6fc2d5807d5a01f03dc1.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_project_runners_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_ad5505a9c27a6fc2d5807d5a01f03dc1","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_ad5505a9c27a6fc2d5807d5a01f03dc1.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_ad5505a9c27a6fc2d5807d5a01f03dc1"},"created_at":1689033730.9925184,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(active_project_runners_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(active_project_runners_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"active_project_runners_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_active_project_runners_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_565a8e16d3cfa356cb0ab2e3a5ebb1f9\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"gitaly_version","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_565a8e16d3cfa356cb0ab2e3a5ebb1f9","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_version"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_version.782b745762","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_565a8e16d3cfa356cb0ab2e3a5ebb1f9.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_version","alias":"dbt_utils_at_least_one_pump_ga_565a8e16d3cfa356cb0ab2e3a5ebb1f9","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_565a8e16d3cfa356cb0ab2e3a5ebb1f9.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_565a8e16d3cfa356cb0ab2e3a5ebb1f9"},"created_at":1689033731.0010812,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(gitaly_version) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(gitaly_version) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"gitaly_version","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_version"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_1b24ba54026c1db6401fef8ce5bc8c44\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"gitaly_servers_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_1b24ba54026c1db6401fef8ce5bc8c44","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_servers_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_servers_all_time_event.5b4551118b","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_1b24ba54026c1db6401fef8ce5bc8c44.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_servers_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_1b24ba54026c1db6401fef8ce5bc8c44","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_1b24ba54026c1db6401fef8ce5bc8c44.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_1b24ba54026c1db6401fef8ce5bc8c44"},"created_at":1689033731.0085337,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(gitaly_servers_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(gitaly_servers_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"gitaly_servers_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_gitaly_servers_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_8807c59fe00b86078a0cf60b7678404d\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"api_fuzzing_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_8807c59fe00b86078a0cf60b7678404d","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_all_time_event.1ca452d148","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_8807c59fe00b86078a0cf60b7678404d.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_8807c59fe00b86078a0cf60b7678404d","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_8807c59fe00b86078a0cf60b7678404d.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_8807c59fe00b86078a0cf60b7678404d"},"created_at":1689033731.016029,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(api_fuzzing_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(api_fuzzing_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"api_fuzzing_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_1ddc2c201f57544c87afb5d367bc3afd\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"api_fuzzing_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_1ddc2c201f57544c87afb5d367bc3afd","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_28_days_event.ee6f4f8747","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_1ddc2c201f57544c87afb5d367bc3afd.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_1ddc2c201f57544c87afb5d367bc3afd","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_1ddc2c201f57544c87afb5d367bc3afd.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_1ddc2c201f57544c87afb5d367bc3afd"},"created_at":1689033731.0236628,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(api_fuzzing_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(api_fuzzing_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"api_fuzzing_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_api_fuzzing_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_cbbe75e852a6c0f6eb4c23d22bfc2f47\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"coverage_fuzzing_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_cbbe75e852a6c0f6eb4c23d22bfc2f47","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_all_time_event.6b341f77e7","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_cbbe75e852a6c0f6eb4c23d22bfc2f47.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_cbbe75e852a6c0f6eb4c23d22bfc2f47","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_cbbe75e852a6c0f6eb4c23d22bfc2f47.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_cbbe75e852a6c0f6eb4c23d22bfc2f47"},"created_at":1689033731.0314903,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(coverage_fuzzing_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(coverage_fuzzing_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"coverage_fuzzing_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_76891ba597c41840e81092812ab24f70\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"coverage_fuzzing_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_76891ba597c41840e81092812ab24f70","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_28_days_event.4d3fd967ec","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_76891ba597c41840e81092812ab24f70.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_76891ba597c41840e81092812ab24f70","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_76891ba597c41840e81092812ab24f70.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_76891ba597c41840e81092812ab24f70"},"created_at":1689033731.03859,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(coverage_fuzzing_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(coverage_fuzzing_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"coverage_fuzzing_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_coverage_fuzzing_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_16eb0965bdd8729804ddd14188b27f43\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"secret_detection_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_16eb0965bdd8729804ddd14188b27f43","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_all_time_event.e67b6729d9","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_16eb0965bdd8729804ddd14188b27f43.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_16eb0965bdd8729804ddd14188b27f43","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_16eb0965bdd8729804ddd14188b27f43.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_16eb0965bdd8729804ddd14188b27f43"},"created_at":1689033731.0464022,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(secret_detection_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(secret_detection_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"secret_detection_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_e8ea6926d7fb7d2b3127f53f4eb44600\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"secret_detection_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_e8ea6926d7fb7d2b3127f53f4eb44600","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_28_days_event.7f63fbe8c5","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_e8ea6926d7fb7d2b3127f53f4eb44600.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_e8ea6926d7fb7d2b3127f53f4eb44600","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_e8ea6926d7fb7d2b3127f53f4eb44600.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_e8ea6926d7fb7d2b3127f53f4eb44600"},"created_at":1689033731.0536814,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(secret_detection_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(secret_detection_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"secret_detection_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_secret_detection_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_0fb84736bf26ed3399bb1e8916873090\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dependency_scanning_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_0fb84736bf26ed3399bb1e8916873090","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_all_time_event.6aa6bc32df","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_0fb84736bf26ed3399bb1e8916873090.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_0fb84736bf26ed3399bb1e8916873090","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_0fb84736bf26ed3399bb1e8916873090.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_0fb84736bf26ed3399bb1e8916873090"},"created_at":1689033731.0612247,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dependency_scanning_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dependency_scanning_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dependency_scanning_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_7f8d16c78eac54ee252e3f5e7a250636\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dependency_scanning_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_7f8d16c78eac54ee252e3f5e7a250636","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_28_days_event.12dc9ac632","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_7f8d16c78eac54ee252e3f5e7a250636.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_7f8d16c78eac54ee252e3f5e7a250636","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_7f8d16c78eac54ee252e3f5e7a250636.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_7f8d16c78eac54ee252e3f5e7a250636"},"created_at":1689033731.0695763,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dependency_scanning_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dependency_scanning_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dependency_scanning_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dependency_scanning_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_0a1f1ec057afbf3d6b879cb7a38f5a95\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"container_scanning_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_0a1f1ec057afbf3d6b879cb7a38f5a95","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_all_time_event.2e472dd52d","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_0a1f1ec057afbf3d6b879cb7a38f5a95.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_0a1f1ec057afbf3d6b879cb7a38f5a95","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_0a1f1ec057afbf3d6b879cb7a38f5a95.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_0a1f1ec057afbf3d6b879cb7a38f5a95"},"created_at":1689033731.0769513,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(container_scanning_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(container_scanning_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"container_scanning_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_5a62c92e498b7e7711cc45ce10e17e8d\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"container_scanning_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_5a62c92e498b7e7711cc45ce10e17e8d","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_28_days_event.f0b2ba2a92","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_5a62c92e498b7e7711cc45ce10e17e8d.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_5a62c92e498b7e7711cc45ce10e17e8d","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_5a62c92e498b7e7711cc45ce10e17e8d.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_5a62c92e498b7e7711cc45ce10e17e8d"},"created_at":1689033731.0845735,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(container_scanning_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(container_scanning_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"container_scanning_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_container_scanning_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_8b07a2734b437fe07fdd3f3348d77277\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dast_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_8b07a2734b437fe07fdd3f3348d77277","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_all_time_event.6df74f4d4a","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_8b07a2734b437fe07fdd3f3348d77277.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_8b07a2734b437fe07fdd3f3348d77277","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_8b07a2734b437fe07fdd3f3348d77277.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_8b07a2734b437fe07fdd3f3348d77277"},"created_at":1689033731.0924385,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dast_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dast_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dast_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_bb69a6075acdfed135082aeb0068e37d\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"dast_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_bb69a6075acdfed135082aeb0068e37d","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_28_days_event.621f5a6736","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_bb69a6075acdfed135082aeb0068e37d.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_bb69a6075acdfed135082aeb0068e37d","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_bb69a6075acdfed135082aeb0068e37d.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_bb69a6075acdfed135082aeb0068e37d"},"created_at":1689033731.0995111,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(dast_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(dast_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"dast_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_dast_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_de885cc3dd6f1d8f9b0ac7aca74ae575\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"sast_scans_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_de885cc3dd6f1d8f9b0ac7aca74ae575","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_all_time_event.bc591672a8","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_de885cc3dd6f1d8f9b0ac7aca74ae575.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_de885cc3dd6f1d8f9b0ac7aca74ae575","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_de885cc3dd6f1d8f9b0ac7aca74ae575.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_de885cc3dd6f1d8f9b0ac7aca74ae575"},"created_at":1689033731.1073787,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(sast_scans_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(sast_scans_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"sast_scans_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_06ff6470e940501d0cbba3bf303a25e2\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"sast_scans_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_06ff6470e940501d0cbba3bf303a25e2","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_28_days_event.df96f3c290","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_06ff6470e940501d0cbba3bf303a25e2.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_06ff6470e940501d0cbba3bf303a25e2","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_06ff6470e940501d0cbba3bf303a25e2.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_06ff6470e940501d0cbba3bf303a25e2"},"created_at":1689033731.1173487,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(sast_scans_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(sast_scans_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"sast_scans_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_sast_scans_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_4e57f425eb0b36b0c6f80c2300e46ecd\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"packages_pushed_registry_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_4e57f425eb0b36b0c6f80c2300e46ecd","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pushed_registry_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pushed_registry_all_time_event.180b504325","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_4e57f425eb0b36b0c6f80c2300e46ecd.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pushed_registry_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_4e57f425eb0b36b0c6f80c2300e46ecd","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_4e57f425eb0b36b0c6f80c2300e46ecd.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_4e57f425eb0b36b0c6f80c2300e46ecd"},"created_at":1689033731.1277301,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(packages_pushed_registry_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(packages_pushed_registry_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"packages_pushed_registry_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pushed_registry_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_535f522eaf76f1a3117b02b0ed9c7228\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"packages_pulled_registry_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_535f522eaf76f1a3117b02b0ed9c7228","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pulled_registry_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pulled_registry_all_time_event.3e23fd0bc2","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_535f522eaf76f1a3117b02b0ed9c7228.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pulled_registry_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_535f522eaf76f1a3117b02b0ed9c7228","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_535f522eaf76f1a3117b02b0ed9c7228.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_535f522eaf76f1a3117b02b0ed9c7228"},"created_at":1689033731.1357293,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(packages_pulled_registry_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(packages_pulled_registry_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"packages_pulled_registry_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_packages_pulled_registry_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_9c84884a531c5f2ff58f3ee25a8fc3a9\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"compliance_dashboard_view_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_9c84884a531c5f2ff58f3ee25a8fc3a9","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_dashboard_view_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_dashboard_view_28_days_user.7730699ed7","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_9c84884a531c5f2ff58f3ee25a8fc3a9.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_dashboard_view_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_9c84884a531c5f2ff58f3ee25a8fc3a9","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_9c84884a531c5f2ff58f3ee25a8fc3a9.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_9c84884a531c5f2ff58f3ee25a8fc3a9"},"created_at":1689033731.1430888,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(compliance_dashboard_view_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(compliance_dashboard_view_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"compliance_dashboard_view_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_dashboard_view_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_08aee4975d6c3cd613e735d855aaf82f\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"audit_screen_view_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_08aee4975d6c3cd613e735d855aaf82f","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_screen_view_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_screen_view_28_days_user.0d09d3a472","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_08aee4975d6c3cd613e735d855aaf82f.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_screen_view_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_08aee4975d6c3cd613e735d855aaf82f","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_08aee4975d6c3cd613e735d855aaf82f.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_08aee4975d6c3cd613e735d855aaf82f"},"created_at":1689033731.1515226,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(audit_screen_view_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(audit_screen_view_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"audit_screen_view_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_screen_view_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_3114e6719fbad18ddd1ff9a612d04ece\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"instance_audit_screen_view_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_3114e6719fbad18ddd1ff9a612d04ece","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_instance_audit_screen_view_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_instance_audit_screen_view_28_days_user.e8deac84af","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_3114e6719fbad18ddd1ff9a612d04ece.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_instance_audit_screen_view_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_3114e6719fbad18ddd1ff9a612d04ece","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_3114e6719fbad18ddd1ff9a612d04ece.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_3114e6719fbad18ddd1ff9a612d04ece"},"created_at":1689033731.159093,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(instance_audit_screen_view_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(instance_audit_screen_view_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"instance_audit_screen_view_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_instance_audit_screen_view_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_fbc55c07426d71913a63242a4e1f6c85\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"credential_inventory_view_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_fbc55c07426d71913a63242a4e1f6c85","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_credential_inventory_view_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_credential_inventory_view_28_days_user.b78d831e31","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_fbc55c07426d71913a63242a4e1f6c85.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_credential_inventory_view_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_fbc55c07426d71913a63242a4e1f6c85","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_fbc55c07426d71913a63242a4e1f6c85.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_fbc55c07426d71913a63242a4e1f6c85"},"created_at":1689033731.166372,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(credential_inventory_view_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(credential_inventory_view_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"credential_inventory_view_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_credential_inventory_view_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_1babab0cc37972e58356f7134a8aab8d\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"compliance_frameworks_pipeline_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_1babab0cc37972e58356f7134a8aab8d","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_28_days_event.0fee490f7d","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_1babab0cc37972e58356f7134a8aab8d.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_1babab0cc37972e58356f7134a8aab8d","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_1babab0cc37972e58356f7134a8aab8d.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_1babab0cc37972e58356f7134a8aab8d"},"created_at":1689033731.1739752,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(compliance_frameworks_pipeline_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(compliance_frameworks_pipeline_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"compliance_frameworks_pipeline_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_a33aebd43a8a4527d4b48da31a336c4b\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"groups_streaming_destinations_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_a33aebd43a8a4527d4b48da31a336c4b","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_all_time_event.1bc16c68c4","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_a33aebd43a8a4527d4b48da31a336c4b.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_a33aebd43a8a4527d4b48da31a336c4b","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_a33aebd43a8a4527d4b48da31a336c4b.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_a33aebd43a8a4527d4b48da31a336c4b"},"created_at":1689033731.181268,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(groups_streaming_destinations_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(groups_streaming_destinations_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"groups_streaming_destinations_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_bbcf00cf742cac070b6c0f6f9f7a536b\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"groups_streaming_destinations_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_bbcf00cf742cac070b6c0f6f9f7a536b","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_28_days_event.9585340fa3","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_bbcf00cf742cac070b6c0f6f9f7a536b.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_bbcf00cf742cac070b6c0f6f9f7a536b","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_bbcf00cf742cac070b6c0f6f9f7a536b.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_bbcf00cf742cac070b6c0f6f9f7a536b"},"created_at":1689033731.1888163,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(groups_streaming_destinations_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(groups_streaming_destinations_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"groups_streaming_destinations_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_groups_streaming_destinations_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_f7b3812a44d95f38bb6fafc38895b350\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"audit_event_destinations_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_f7b3812a44d95f38bb6fafc38895b350","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_all_time_event.89780d2611","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_f7b3812a44d95f38bb6fafc38895b350.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_f7b3812a44d95f38bb6fafc38895b350","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_f7b3812a44d95f38bb6fafc38895b350.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_f7b3812a44d95f38bb6fafc38895b350"},"created_at":1689033731.1964843,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(audit_event_destinations_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(audit_event_destinations_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"audit_event_destinations_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_4ac8b97b2d5ebe249d64873b084c440b\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"audit_event_destinations_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_4ac8b97b2d5ebe249d64873b084c440b","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_28_days_event.a3a9d473e4","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_4ac8b97b2d5ebe249d64873b084c440b.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_4ac8b97b2d5ebe249d64873b084c440b","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_4ac8b97b2d5ebe249d64873b084c440b.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_4ac8b97b2d5ebe249d64873b084c440b"},"created_at":1689033731.203829,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(audit_event_destinations_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(audit_event_destinations_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"audit_event_destinations_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_audit_event_destinations_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_63a65eee99ace42253dd31aba58ec923\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_status_checks_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_63a65eee99ace42253dd31aba58ec923","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_status_checks_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_status_checks_all_time_event.338564fbc2","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_63a65eee99ace42253dd31aba58ec923.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_status_checks_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_63a65eee99ace42253dd31aba58ec923","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_63a65eee99ace42253dd31aba58ec923.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_63a65eee99ace42253dd31aba58ec923"},"created_at":1689033731.2116125,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_status_checks_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_status_checks_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_status_checks_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_status_checks_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_e762193685bd746231f2ad17c6472848\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"external_status_checks_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_e762193685bd746231f2ad17c6472848","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_external_status_checks_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_external_status_checks_all_time_event.e68fe1e1d6","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_e762193685bd746231f2ad17c6472848.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_external_status_checks_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_e762193685bd746231f2ad17c6472848","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_e762193685bd746231f2ad17c6472848.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_e762193685bd746231f2ad17c6472848"},"created_at":1689033731.2196066,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(external_status_checks_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(external_status_checks_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"external_status_checks_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_external_status_checks_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_8b3699a177c4950682441bff590d456a\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"paid_license_search_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_8b3699a177c4950682441bff590d456a","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_paid_license_search_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_paid_license_search_28_days_user.5d5b5a64bc","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_8b3699a177c4950682441bff590d456a.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_paid_license_search_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_8b3699a177c4950682441bff590d456a","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_8b3699a177c4950682441bff590d456a.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_8b3699a177c4950682441bff590d456a"},"created_at":1689033731.2269933,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(paid_license_search_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(paid_license_search_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"paid_license_search_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_paid_license_search_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_138cda47306db64716e11a3b6eed945c\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"compliance_frameworks_pipeline_all_time_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_138cda47306db64716e11a3b6eed945c","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_all_time_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_all_time_event.85d9cda1e3","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_138cda47306db64716e11a3b6eed945c.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_all_time_event","alias":"dbt_utils_at_least_one_pump_ga_138cda47306db64716e11a3b6eed945c","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_138cda47306db64716e11a3b6eed945c.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_138cda47306db64716e11a3b6eed945c"},"created_at":1689033731.2349887,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(compliance_frameworks_pipeline_all_time_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(compliance_frameworks_pipeline_all_time_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"compliance_frameworks_pipeline_all_time_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_compliance_frameworks_pipeline_all_time_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_39e86dc8fc1bd7f21987914a4508c337\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"last_activity_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_39e86dc8fc1bd7f21987914a4508c337","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_last_activity_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_last_activity_28_days_user.b4f1c36c4a","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_39e86dc8fc1bd7f21987914a4508c337.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_last_activity_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_39e86dc8fc1bd7f21987914a4508c337","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_39e86dc8fc1bd7f21987914a4508c337.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_39e86dc8fc1bd7f21987914a4508c337"},"created_at":1689033731.242965,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(last_activity_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(last_activity_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"last_activity_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_last_activity_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_f2033fda0ce6a0555d3fe81270c818d1\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"snippets_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_f2033fda0ce6a0555d3fe81270c818d1","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_snippets_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_snippets_28_days_event.00a72104bc","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_f2033fda0ce6a0555d3fe81270c818d1.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_snippets_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_f2033fda0ce6a0555d3fe81270c818d1","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_f2033fda0ce6a0555d3fe81270c818d1.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_f2033fda0ce6a0555d3fe81270c818d1"},"created_at":1689033731.250429,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(snippets_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(snippets_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"snippets_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_snippets_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_a39a38d6e3e14dc0fff72c425b7e3559\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"single_file_editor_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_a39a38d6e3e14dc0fff72c425b7e3559","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_single_file_editor_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_single_file_editor_28_days_user.e8113da034","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_a39a38d6e3e14dc0fff72c425b7e3559.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_single_file_editor_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_a39a38d6e3e14dc0fff72c425b7e3559","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_a39a38d6e3e14dc0fff72c425b7e3559.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_a39a38d6e3e14dc0fff72c425b7e3559"},"created_at":1689033731.2582903,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(single_file_editor_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(single_file_editor_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"single_file_editor_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_single_file_editor_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_cc08bbcd2d5f92825c47895bab5574ce\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"merge_requests_created_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_cc08bbcd2d5f92825c47895bab5574ce","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_event.6d9ab02908","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_cc08bbcd2d5f92825c47895bab5574ce.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_cc08bbcd2d5f92825c47895bab5574ce","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_cc08bbcd2d5f92825c47895bab5574ce.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_cc08bbcd2d5f92825c47895bab5574ce"},"created_at":1689033731.265849,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(merge_requests_created_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(merge_requests_created_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"merge_requests_created_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_26acea8da9b694dae64727e296c2fd55\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"merge_requests_created_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_26acea8da9b694dae64727e296c2fd55","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_user.7ac6722153","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_26acea8da9b694dae64727e296c2fd55.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_26acea8da9b694dae64727e296c2fd55","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_26acea8da9b694dae64727e296c2fd55.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_26acea8da9b694dae64727e296c2fd55"},"created_at":1689033731.2742474,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(merge_requests_created_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(merge_requests_created_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"merge_requests_created_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_created_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_ea20fe5f208f663bb9e1cddfa77f342c\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"merge_requests_approval_rules_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_ea20fe5f208f663bb9e1cddfa77f342c","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_approval_rules_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_approval_rules_28_days_event.67eb87d8d5","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_ea20fe5f208f663bb9e1cddfa77f342c.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_approval_rules_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_ea20fe5f208f663bb9e1cddfa77f342c","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_ea20fe5f208f663bb9e1cddfa77f342c.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_ea20fe5f208f663bb9e1cddfa77f342c"},"created_at":1689033731.2823591,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(merge_requests_approval_rules_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(merge_requests_approval_rules_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"merge_requests_approval_rules_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_approval_rules_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_5652307bb9e903da88cdfb796f729c57\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"custom_compliance_frameworks_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_5652307bb9e903da88cdfb796f729c57","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_custom_compliance_frameworks_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_custom_compliance_frameworks_28_days_event.da2d31129b","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_5652307bb9e903da88cdfb796f729c57.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_custom_compliance_frameworks_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_5652307bb9e903da88cdfb796f729c57","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_5652307bb9e903da88cdfb796f729c57.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_5652307bb9e903da88cdfb796f729c57"},"created_at":1689033731.289765,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(custom_compliance_frameworks_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(custom_compliance_frameworks_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"custom_compliance_frameworks_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_custom_compliance_frameworks_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_cc80e80a39db8800f292ac3eb9162444\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"projects_security_policy_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_cc80e80a39db8800f292ac3eb9162444","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_security_policy_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_security_policy_28_days_event.43e83f777f","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_cc80e80a39db8800f292ac3eb9162444.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_security_policy_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_cc80e80a39db8800f292ac3eb9162444","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_cc80e80a39db8800f292ac3eb9162444.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_cc80e80a39db8800f292ac3eb9162444"},"created_at":1689033731.2986012,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(projects_security_policy_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(projects_security_policy_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"projects_security_policy_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_projects_security_policy_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_e301fe0619c31115cb4ca7c070ec0450\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"merge_requests_security_policy_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_e301fe0619c31115cb4ca7c070ec0450","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_security_policy_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_security_policy_28_days_user.5391b1fcc5","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_e301fe0619c31115cb4ca7c070ec0450.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_security_policy_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_e301fe0619c31115cb4ca7c070ec0450","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_e301fe0619c31115cb4ca7c070ec0450.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_e301fe0619c31115cb4ca7c070ec0450"},"created_at":1689033731.306439,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(merge_requests_security_policy_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(merge_requests_security_policy_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"merge_requests_security_policy_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_merge_requests_security_policy_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_996187359b2ee124941222530c6734b9\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"pipelines_implicit_auto_devops_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_996187359b2ee124941222530c6734b9","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipelines_implicit_auto_devops_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipelines_implicit_auto_devops_28_days_event.320d2ff846","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_996187359b2ee124941222530c6734b9.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipelines_implicit_auto_devops_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_996187359b2ee124941222530c6734b9","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_996187359b2ee124941222530c6734b9.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_996187359b2ee124941222530c6734b9"},"created_at":1689033731.3136265,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(pipelines_implicit_auto_devops_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(pipelines_implicit_auto_devops_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"pipelines_implicit_auto_devops_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipelines_implicit_auto_devops_28_days_event"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_2cfcc7181c22a29c32810b18fa6e2b29\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"pipeline_schedules_28_days_user","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_2cfcc7181c22a29c32810b18fa6e2b29","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipeline_schedules_28_days_user"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipeline_schedules_28_days_user.80f6e98663","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_2cfcc7181c22a29c32810b18fa6e2b29.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipeline_schedules_28_days_user","alias":"dbt_utils_at_least_one_pump_ga_2cfcc7181c22a29c32810b18fa6e2b29","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_2cfcc7181c22a29c32810b18fa6e2b29.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_2cfcc7181c22a29c32810b18fa6e2b29"},"created_at":1689033731.3212092,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(pipeline_schedules_28_days_user) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(pipeline_schedules_28_days_user) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"pipeline_schedules_28_days_user","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_pipeline_schedules_28_days_user"},{"raw_sql":"{{ dbt_utils.test_at_least_one(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_at_least_one_pump_ga_9496f2b236ce5cbdcb8895f8737f2699\") }}","test_metadata":{"name":"at_least_one","kwargs":{"column_name":"ci_internal_pipelines_28_days_event","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":"dbt_utils"},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt_utils.test_at_least_one","macro.dbt.get_where_subquery","macro.gitlab_snowflake.ref"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":"dbt_utils_at_least_one_pump_ga_9496f2b236ce5cbdcb8895f8737f2699","schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_internal_pipelines_28_days_event"],"unique_id":"test.gitlab_snowflake.dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_internal_pipelines_28_days_event.4f49668ed6","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"dbt_utils_at_least_one_pump_ga_9496f2b236ce5cbdcb8895f8737f2699.sql","original_file_path":"models/marts/pumps/schema.yml","name":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_internal_pipelines_28_days_event","alias":"dbt_utils_at_least_one_pump_ga_9496f2b236ce5cbdcb8895f8737f2699","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/dbt_utils_at_least_one_pump_ga_9496f2b236ce5cbdcb8895f8737f2699.sql","build_path":null,"deferred":false,"unrendered_config":{"alias":"dbt_utils_at_least_one_pump_ga_9496f2b236ce5cbdcb8895f8737f2699"},"created_at":1689033731.3285022,"compiled_sql":"\n\nselect *\nfrom (\n    select\n        \n        \n      count(ci_internal_pipelines_28_days_event) as filler_column\n\n    from \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\n\n    having count(ci_internal_pipelines_28_days_event) = 0\n\n) validation_errors\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"ci_internal_pipelines_28_days_event","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"dbt_utils_at_least_one_pump_gainsight_metrics_monthly_paid_ci_internal_pipelines_28_days_event"},{"raw_sql":"{{ test_unique(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"unique","kwargs":{"column_name":"primary_key","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_unique","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","unique_pump_gainsight_metrics_monthly_paid_primary_key"],"unique_id":"test.gitlab_snowflake.unique_pump_gainsight_metrics_monthly_paid_primary_key.c903f30994","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"unique_pump_gainsight_metrics_monthly_paid_primary_key.sql","original_file_path":"models/marts/pumps/schema.yml","name":"unique_pump_gainsight_metrics_monthly_paid_primary_key","alias":"unique_pump_gainsight_metrics_monthly_paid_primary_key","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/unique_pump_gainsight_metrics_monthly_paid_primary_key.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033731.33629,"compiled_sql":"\n    \n    \n\nselect\n    primary_key as unique_field,\n    count(*) as n_records\n\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere primary_key is not null\ngroup by primary_key\nhaving count(*) > 1\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"primary_key","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"unique_pump_gainsight_metrics_monthly_paid_primary_key"},{"raw_sql":"{{ test_not_null(**_dbt_generic_test_kwargs) }}","test_metadata":{"name":"not_null","kwargs":{"column_name":"primary_key","model":"{{ get_where_subquery(ref('pump_gainsight_metrics_monthly_paid')) }}"},"namespace":null},"compiled":true,"resource_type":"test","depends_on":{"macros":["macro.dbt.test_not_null","macro.gitlab_snowflake.ref","macro.dbt.get_where_subquery"],"nodes":["model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"]},"config":{"enabled":true,"alias":null,"schema":"dbt_test__audit","database":null,"tags":[],"meta":{},"materialized":"test","severity":"ERROR","store_failures":null,"where":null,"limit":null,"fail_calc":"count(*)","warn_if":"!= 0","error_if":"!= 0"},"database":"PREP","schema":"dbt_test__audit","fqn":["gitlab_snowflake","marts","pumps","not_null_pump_gainsight_metrics_monthly_paid_primary_key"],"unique_id":"test.gitlab_snowflake.not_null_pump_gainsight_metrics_monthly_paid_primary_key.ff7447be8a","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"not_null_pump_gainsight_metrics_monthly_paid_primary_key.sql","original_file_path":"models/marts/pumps/schema.yml","name":"not_null_pump_gainsight_metrics_monthly_paid_primary_key","alias":"not_null_pump_gainsight_metrics_monthly_paid_primary_key","checksum":{"name":"none","checksum":""},"tags":[],"refs":[["pump_gainsight_metrics_monthly_paid"]],"sources":[],"metrics":[],"description":"","columns":{},"meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/marts/pumps/schema.yml/not_null_pump_gainsight_metrics_monthly_paid_primary_key.sql","build_path":null,"deferred":false,"unrendered_config":{},"created_at":1689033731.3399425,"compiled_sql":"\n    \n    \n\n\n\nselect primary_key\nfrom \"PROD\".pumps.pump_gainsight_metrics_monthly_paid\nwhere primary_key is null\n\n\n","extra_ctes_injected":true,"extra_ctes":[],"relation_name":null,"column_name":"primary_key","file_key_name":"models.pump_gainsight_metrics_monthly_paid","label":"not_null_pump_gainsight_metrics_monthly_paid_primary_key"}]},"node":{"resource_type":"model","name":"pump_gainsight_metrics_monthly_paid","unique_id":"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"depends_on"}],["$","div",null,{"className":"section-content","children":[["$","h6",null,{"children":"Depends On"}],["$","$L14",null,{"references":{"model":[{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_CUSTOMER_SUCCESS","name":"WK_RPT_USER_BASED_METRIC_COUNTS_NAMESPACE_MONTHLY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_MONTH":{"type":"TIMESTAMP_NTZ","index":1,"name":"DATE_MONTH","comment":null,"display_name":"date_month"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"ULTIMATE_PARENT_NAMESPACE_ID","comment":null,"display_name":"ultimate_parent_namespace_id"},"METRICS_PATH":{"type":"TEXT","index":3,"name":"METRICS_PATH","comment":null,"display_name":"metrics_path"},"DISTINCT_USERS_WHOLE_MONTH":{"type":"NUMBER","index":4,"name":"DISTINCT_USERS_WHOLE_MONTH","comment":null,"display_name":"distinct_users_whole_month"},"DISTINCT_USERS_LAST_28D_MONTH":{"type":"NUMBER","index":5,"name":"DISTINCT_USERS_LAST_28D_MONTH","comment":null,"display_name":"distinct_users_last_28d_month"},"CREATED_BY":{"type":"TEXT","index":6,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":7,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":8,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":9,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":10,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":11,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:53UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":152514560,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_rpt_user_based_metric_counts_namespace_monthly","raw_sql":"$15","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.wk_mart_snowplow_events_service_ping_metrics","model.gitlab_snowflake.wk_mart_snowplow_events_service_ping_metrics","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date"]},"config":{"enabled":true,"alias":null,"schema":"workspace_customer_success","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_customer_success","fqn":["gitlab_snowflake","workspaces","workspace_customer_success","redis_metrics","service_ping_context_method","metric_aggregations","many_to_many","wk_rpt_user_based_metric_counts_namespace_monthly"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_customer_success/redis_metrics/service_ping_context_method/metric_aggregations/many_to_many/wk_rpt_user_based_metric_counts_namespace_monthly.sql","original_file_path":"models/workspaces/workspace_customer_success/redis_metrics/service_ping_context_method/metric_aggregations/many_to_many/wk_rpt_user_based_metric_counts_namespace_monthly.sql","name":"wk_rpt_user_based_metric_counts_namespace_monthly","alias":"wk_rpt_user_based_metric_counts_namespace_monthly","checksum":{"name":"sha256","checksum":"9007fa74d7b975b68229c3f4e09fb702964ceb049d22eb9611f32e6523380cea"},"tags":["workspace","mnpi_exception"],"refs":[["wk_mart_snowplow_events_service_ping_metrics"],["wk_mart_snowplow_events_service_ping_metrics"],["dim_date"],["dim_date"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/workspaces/workspace_customer_success/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_customer_success/redis_metrics/service_ping_context_method/metric_aggregations/many_to_many/wk_rpt_user_based_metric_counts_namespace_monthly.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_customer_success","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033732.9104185,"compiled_sql":"$16","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_customer_success.wk_rpt_user_based_metric_counts_namespace_monthly","label":"wk_rpt_user_based_metric_counts_namespace_monthly"},{"metadata":{"type":"BASE TABLE","schema":"RESTRICTED_SAFE_COMMON_MART_SALES","name":"MART_CHARGE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_CHARGE_ID":{"type":"TEXT","index":1,"name":"dim_charge_id","comment":null,"description":"The unique identifier of a rate plan charge","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_charge_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"SUBSCRIPTION_VERSION","comment":null,"display_name":"subscription_version"},"RATE_PLAN_CHARGE_NUMBER":{"type":"TEXT","index":4,"name":"RATE_PLAN_CHARGE_NUMBER","comment":null,"display_name":"rate_plan_charge_number"},"RATE_PLAN_CHARGE_VERSION":{"type":"NUMBER","index":5,"name":"RATE_PLAN_CHARGE_VERSION","comment":null,"display_name":"rate_plan_charge_version"},"RATE_PLAN_CHARGE_SEGMENT":{"type":"NUMBER","index":6,"name":"RATE_PLAN_CHARGE_SEGMENT","comment":null,"display_name":"rate_plan_charge_segment"},"RATE_PLAN_NAME":{"type":"TEXT","index":7,"name":"RATE_PLAN_NAME","comment":null,"display_name":"rate_plan_name"},"RATE_PLAN_CHARGE_NAME":{"type":"TEXT","index":8,"name":"RATE_PLAN_CHARGE_NAME","comment":null,"display_name":"rate_plan_charge_name"},"RATE_PLAN_CHARGE_DESCRIPTION":{"type":"TEXT","index":9,"name":"RATE_PLAN_CHARGE_DESCRIPTION","comment":null,"display_name":"rate_plan_charge_description"},"CHARGE_TYPE":{"type":"TEXT","index":10,"name":"CHARGE_TYPE","comment":null,"display_name":"charge_type"},"IS_PAID_IN_FULL":{"type":"BOOLEAN","index":11,"name":"IS_PAID_IN_FULL","comment":null,"display_name":"is_paid_in_full"},"IS_LAST_SEGMENT":{"type":"BOOLEAN","index":12,"name":"IS_LAST_SEGMENT","comment":null,"display_name":"is_last_segment"},"IS_INCLUDED_IN_ARR_CALC":{"type":"BOOLEAN","index":13,"name":"IS_INCLUDED_IN_ARR_CALC","comment":null,"display_name":"is_included_in_arr_calc"},"EFFECTIVE_START_DATE":{"type":"DATE","index":14,"name":"EFFECTIVE_START_DATE","comment":null,"display_name":"effective_start_date"},"EFFECTIVE_END_DATE":{"type":"DATE","index":15,"name":"EFFECTIVE_END_DATE","comment":null,"display_name":"effective_end_date"},"EFFECTIVE_START_MONTH":{"type":"DATE","index":16,"name":"EFFECTIVE_START_MONTH","comment":null,"display_name":"effective_start_month"},"EFFECTIVE_END_MONTH":{"type":"DATE","index":17,"name":"EFFECTIVE_END_MONTH","comment":null,"display_name":"effective_end_month"},"CHARGE_CREATED_DATE":{"type":"TIMESTAMP_NTZ","index":18,"name":"CHARGE_CREATED_DATE","comment":null,"display_name":"charge_created_date"},"CHARGE_UPDATED_DATE":{"type":"TIMESTAMP_NTZ","index":19,"name":"CHARGE_UPDATED_DATE","comment":null,"display_name":"charge_updated_date"},"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":20,"name":"DIM_SUBSCRIPTION_ID","comment":null,"display_name":"dim_subscription_id"},"SUBSCRIPTION_CREATED_BY_ID":{"type":"TEXT","index":21,"name":"SUBSCRIPTION_CREATED_BY_ID","comment":null,"display_name":"subscription_created_by_id"},"SUBSCRIPTION_UPDATED_BY_ID":{"type":"TEXT","index":22,"name":"SUBSCRIPTION_UPDATED_BY_ID","comment":null,"display_name":"subscription_updated_by_id"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":23,"name":"SUBSCRIPTION_START_DATE","comment":null,"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":24,"name":"SUBSCRIPTION_END_DATE","comment":null,"display_name":"subscription_end_date"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":25,"name":"SUBSCRIPTION_START_MONTH","comment":null,"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":26,"name":"SUBSCRIPTION_END_MONTH","comment":null,"display_name":"subscription_end_month"},"SUBSCRIPTION_END_FISCAL_YEAR":{"type":"NUMBER","index":27,"name":"SUBSCRIPTION_END_FISCAL_YEAR","comment":null,"display_name":"subscription_end_fiscal_year"},"SUBSCRIPTION_CREATED_DATE":{"type":"DATE","index":28,"name":"SUBSCRIPTION_CREATED_DATE","comment":null,"display_name":"subscription_created_date"},"SUBSCRIPTION_UPDATED_DATE":{"type":"DATE","index":29,"name":"SUBSCRIPTION_UPDATED_DATE","comment":null,"display_name":"subscription_updated_date"},"SECOND_ACTIVE_RENEWAL_MONTH":{"type":"DATE","index":30,"name":"SECOND_ACTIVE_RENEWAL_MONTH","comment":null,"display_name":"second_active_renewal_month"},"TERM_START_DATE":{"type":"DATE","index":31,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":32,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"TERM_START_MONTH":{"type":"DATE","index":33,"name":"TERM_START_MONTH","comment":null,"display_name":"term_start_month"},"TERM_END_MONTH":{"type":"DATE","index":34,"name":"TERM_END_MONTH","comment":null,"display_name":"term_end_month"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":35,"name":"SUBSCRIPTION_STATUS","comment":null,"display_name":"subscription_status"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":36,"name":"SUBSCRIPTION_SALES_TYPE","comment":null,"display_name":"subscription_sales_type"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":37,"name":"SUBSCRIPTION_NAME_SLUGIFY","comment":null,"display_name":"subscription_name_slugify"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":38,"name":"OLDEST_SUBSCRIPTION_IN_COHORT","comment":null,"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":39,"name":"SUBSCRIPTION_LINEAGE","comment":null,"display_name":"subscription_lineage"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":40,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":41,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":42,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":43,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":44,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":45,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":46,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":47,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":48,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":49,"name":"INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"invoice_owner_account"},"CREATOR_ACCOUNT":{"type":"TEXT","index":50,"name":"CREATOR_ACCOUNT","comment":null,"display_name":"creator_account"},"WAS_PURCHASED_THROUGH_RESELLER":{"type":"BOOLEAN","index":51,"name":"was_purchased_through_reseller","comment":null,"description":"Boolean field that indicates whether the subscription was purchased through a reseller. If TRUE, the `invoice_owner_account` will contain the name of the reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"was_purchased_through_reseller"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":52,"name":"DIM_BILLING_ACCOUNT_ID","comment":null,"display_name":"dim_billing_account_id"},"SOLD_TO_COUNTRY":{"type":"TEXT","index":53,"name":"SOLD_TO_COUNTRY","comment":null,"display_name":"sold_to_country"},"BILLING_ACCOUNT_NAME":{"type":"TEXT","index":54,"name":"BILLING_ACCOUNT_NAME","comment":null,"display_name":"billing_account_name"},"BILLING_ACCOUNT_NUMBER":{"type":"TEXT","index":55,"name":"BILLING_ACCOUNT_NUMBER","comment":null,"display_name":"billing_account_number"},"SSP_CHANNEL":{"type":"TEXT","index":56,"name":"SSP_CHANNEL","comment":null,"display_name":"ssp_channel"},"PO_REQUIRED":{"type":"TEXT","index":57,"name":"PO_REQUIRED","comment":null,"display_name":"po_required"},"AUTO_PAY":{"type":"BOOLEAN","index":58,"name":"AUTO_PAY","comment":null,"display_name":"auto_pay"},"DEFAULT_PAYMENT_METHOD_TYPE":{"type":"TEXT","index":59,"name":"DEFAULT_PAYMENT_METHOD_TYPE","comment":null,"display_name":"default_payment_method_type"},"DIM_CRM_USER_ID":{"type":"TEXT","index":60,"name":"DIM_CRM_USER_ID","comment":null,"display_name":"dim_crm_user_id"},"CRM_USER_SALES_SEGMENT":{"type":"TEXT","index":61,"name":"CRM_USER_SALES_SEGMENT","comment":null,"display_name":"crm_user_sales_segment"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":62,"name":"DIM_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_crm_account_id"},"CRM_ACCOUNT_NAME":{"type":"TEXT","index":63,"name":"CRM_ACCOUNT_NAME","comment":null,"display_name":"crm_account_name"},"DIM_PARENT_CRM_ACCOUNT_ID":{"type":"TEXT","index":64,"name":"DIM_PARENT_CRM_ACCOUNT_ID","comment":null,"display_name":"dim_parent_crm_account_id"},"PARENT_CRM_ACCOUNT_NAME":{"type":"TEXT","index":65,"name":"PARENT_CRM_ACCOUNT_NAME","comment":null,"display_name":"parent_crm_account_name"},"PARENT_CRM_ACCOUNT_UPA_COUNTRY":{"type":"TEXT","index":66,"name":"PARENT_CRM_ACCOUNT_UPA_COUNTRY","comment":null,"display_name":"parent_crm_account_upa_country"},"PARENT_CRM_ACCOUNT_SALES_SEGMENT":{"type":"TEXT","index":67,"name":"PARENT_CRM_ACCOUNT_SALES_SEGMENT","comment":null,"display_name":"parent_crm_account_sales_segment"},"PARENT_CRM_ACCOUNT_INDUSTRY":{"type":"TEXT","index":68,"name":"PARENT_CRM_ACCOUNT_INDUSTRY","comment":null,"display_name":"parent_crm_account_industry"},"PARENT_CRM_ACCOUNT_TERRITORY":{"type":"TEXT","index":69,"name":"PARENT_CRM_ACCOUNT_TERRITORY","comment":null,"display_name":"parent_crm_account_territory"},"PARENT_CRM_ACCOUNT_REGION":{"type":"TEXT","index":70,"name":"PARENT_CRM_ACCOUNT_REGION","comment":null,"display_name":"parent_crm_account_region"},"PARENT_CRM_ACCOUNT_AREA":{"type":"TEXT","index":71,"name":"PARENT_CRM_ACCOUNT_AREA","comment":null,"display_name":"parent_crm_account_area"},"HEALTH_SCORE_COLOR":{"type":"TEXT","index":72,"name":"HEALTH_SCORE_COLOR","comment":null,"display_name":"health_score_color"},"HEALTH_NUMBER":{"type":"FLOAT","index":73,"name":"HEALTH_NUMBER","comment":null,"display_name":"health_number"},"IS_JIHU_ACCOUNT":{"type":"BOOLEAN","index":74,"name":"IS_JIHU_ACCOUNT","comment":null,"display_name":"is_jihu_account"},"DIM_ORDER_ID":{"type":"TEXT","index":75,"name":"dim_order_id","comment":null,"description":"Unique identifier for an order. Can be used to join to dim_order.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_order_id"},"SUBSCRIPTION_RENEWAL_TYPE":{"type":"TEXT","index":76,"name":"subscription_renewal_type","comment":null,"description":"Calculated field that indicates how a subscription renewal was made. Can be one of 'Auto-Renewal', 'Customer Portal', 'Sales-Assisted' or null when the charge is not related to a subscription renewal.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_renewal_type"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":77,"name":"SUBSCRIPTION_COHORT_MONTH","comment":null,"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":78,"name":"SUBSCRIPTION_COHORT_QUARTER","comment":null,"display_name":"subscription_cohort_quarter"},"BILLING_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":79,"name":"BILLING_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"billing_account_cohort_month"},"BILLING_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":80,"name":"BILLING_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"billing_account_cohort_quarter"},"CRM_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":81,"name":"CRM_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"crm_account_cohort_month"},"CRM_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":82,"name":"CRM_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"crm_account_cohort_quarter"},"PARENT_ACCOUNT_COHORT_MONTH":{"type":"DATE","index":83,"name":"PARENT_ACCOUNT_COHORT_MONTH","comment":null,"display_name":"parent_account_cohort_month"},"PARENT_ACCOUNT_COHORT_QUARTER":{"type":"DATE","index":84,"name":"PARENT_ACCOUNT_COHORT_QUARTER","comment":null,"display_name":"parent_account_cohort_quarter"},"DIM_PRODUCT_DETAIL_ID":{"type":"TEXT","index":85,"name":"DIM_PRODUCT_DETAIL_ID","comment":null,"display_name":"dim_product_detail_id"},"PRODUCT_TIER_NAME":{"type":"TEXT","index":86,"name":"PRODUCT_TIER_NAME","comment":null,"display_name":"product_tier_name"},"PRODUCT_DELIVERY_TYPE":{"type":"TEXT","index":87,"name":"PRODUCT_DELIVERY_TYPE","comment":null,"display_name":"product_delivery_type"},"PRODUCT_RANKING":{"type":"NUMBER","index":88,"name":"PRODUCT_RANKING","comment":null,"display_name":"product_ranking"},"SERVICE_TYPE":{"type":"TEXT","index":89,"name":"SERVICE_TYPE","comment":null,"display_name":"service_type"},"PRODUCT_RATE_PLAN_NAME":{"type":"TEXT","index":90,"name":"PRODUCT_RATE_PLAN_NAME","comment":null,"display_name":"product_rate_plan_name"},"IS_LICENSED_USER":{"type":"BOOLEAN","index":91,"name":"IS_LICENSED_USER","comment":null,"display_name":"is_licensed_user"},"IS_ARPU":{"type":"BOOLEAN","index":92,"name":"IS_ARPU","comment":null,"display_name":"is_arpu"},"DIM_AMENDMENT_ID_SUBSCRIPTION":{"type":"TEXT","index":93,"name":"DIM_AMENDMENT_ID_SUBSCRIPTION","comment":null,"display_name":"dim_amendment_id_subscription"},"DIM_AMENDMENT_ID_CHARGE":{"type":"TEXT","index":94,"name":"DIM_AMENDMENT_ID_CHARGE","comment":null,"display_name":"dim_amendment_id_charge"},"SUBSCRIPTION_AMENDMENT_EFFECTIVE_DATE":{"type":"TIMESTAMP_TZ","index":95,"name":"SUBSCRIPTION_AMENDMENT_EFFECTIVE_DATE","comment":null,"display_name":"subscription_amendment_effective_date"},"SUBSCRIPTION_AMENDMENT_TYPE":{"type":"TEXT","index":96,"name":"SUBSCRIPTION_AMENDMENT_TYPE","comment":null,"display_name":"subscription_amendment_type"},"SUBSCRIPTION_AMENDMENT_NAME":{"type":"TEXT","index":97,"name":"SUBSCRIPTION_AMENDMENT_NAME","comment":null,"display_name":"subscription_amendment_name"},"CHARGE_AMENDMENT_TYPE":{"type":"TEXT","index":98,"name":"CHARGE_AMENDMENT_TYPE","comment":null,"display_name":"charge_amendment_type"},"TYPE_OF_ARR_CHANGE":{"type":"TEXT","index":99,"name":"TYPE_OF_ARR_CHANGE","comment":null,"display_name":"type_of_arr_change"},"MRR":{"type":"FLOAT","index":100,"name":"MRR","comment":null,"display_name":"mrr"},"PREVIOUS_MRR":{"type":"FLOAT","index":101,"name":"PREVIOUS_MRR","comment":null,"display_name":"previous_mrr"},"DELTA_MRR":{"type":"FLOAT","index":102,"name":"DELTA_MRR","comment":null,"display_name":"delta_mrr"},"ARR":{"type":"FLOAT","index":103,"name":"ARR","comment":null,"display_name":"arr"},"PREVIOUS_ARR":{"type":"FLOAT","index":104,"name":"PREVIOUS_ARR","comment":null,"display_name":"previous_arr"},"DELTA_ARR":{"type":"FLOAT","index":105,"name":"DELTA_ARR","comment":null,"display_name":"delta_arr"},"QUANTITY":{"type":"FLOAT","index":106,"name":"QUANTITY","comment":null,"display_name":"quantity"},"PREVIOUS_QUANTITY":{"type":"FLOAT","index":107,"name":"PREVIOUS_QUANTITY","comment":null,"display_name":"previous_quantity"},"DELTA_QUANTITY":{"type":"FLOAT","index":108,"name":"DELTA_QUANTITY","comment":null,"display_name":"delta_quantity"},"DELTA_TCV":{"type":"FLOAT","index":109,"name":"DELTA_TCV","comment":null,"display_name":"delta_tcv"},"ESTIMATED_TOTAL_FUTURE_BILLINGS":{"type":"FLOAT","index":110,"name":"ESTIMATED_TOTAL_FUTURE_BILLINGS","comment":null,"display_name":"estimated_total_future_billings"},"CREATED_BY":{"type":"TEXT","index":111,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":112,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":113,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":114,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":115,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":116,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:26UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":121374720,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.mart_charge","raw_sql":"$17","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_amendment","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_billing_account","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_charge","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_crm_account","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_product_detail","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_subscription","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_crm_user","model.gitlab_snowflake.dim_order","model.gitlab_snowflake.dim_order","model.gitlab_snowflake.dim_order_action","model.gitlab_snowflake.dim_order_action","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.prep_billing_account_user","model.gitlab_snowflake.prep_billing_account_user"]},"config":{"enabled":true,"alias":null,"schema":"restricted_safe_common_mart_sales","database":"PROD","tags":["safe"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","secure":true,"transient":false,"post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"restricted_safe_common_mart_sales","fqn":["gitlab_snowflake","common_mart_sales","restricted_safe","mart_charge"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_sales/restricted_safe/mart_charge.sql","original_file_path":"models/common_mart_sales/restricted_safe/mart_charge.sql","name":"mart_charge","alias":"mart_charge","checksum":{"name":"sha256","checksum":"32b3e052ca03ccc622c3e5b5b0fe8136c0e2e28e4778bc3017a4b27ca04c6005"},"tags":["safe"],"refs":[["dim_amendment"],["dim_amendment"],["dim_billing_account"],["dim_billing_account"],["dim_charge"],["dim_charge"],["dim_crm_account"],["dim_crm_account"],["dim_product_detail"],["dim_product_detail"],["dim_subscription"],["dim_subscription"],["dim_crm_user"],["dim_crm_user"],["dim_order"],["dim_order"],["dim_order_action"],["dim_order_action"],["fct_charge"],["fct_charge"],["prep_billing_account_user"],["prep_billing_account_user"]],"sources":[],"metrics":[],"description":"Model combining Subscription related objects such as product details and rate plan charge details into a mart.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_sales/restricted_safe/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_sales/restricted_safe/mart_charge.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"restricted_safe_common_mart_sales","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["safe"],"secure":true,"transient":false},"created_at":1689033765.2524543,"compiled_sql":"$18","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".restricted_safe_common_mart_sales.mart_charge","label":"mart_charge"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_LOCATION_COUNTRY","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_LOCATION_COUNTRY_ID":{"type":"NUMBER","index":1,"name":"dim_location_country_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_location_country_id"},"DIM_LOCATION_REGION_ID":{"type":"TEXT","index":2,"name":"DIM_LOCATION_REGION_ID","comment":null,"display_name":"dim_location_region_id"},"LOCATION_REGION_NAME_MAP":{"type":"TEXT","index":3,"name":"LOCATION_REGION_NAME_MAP","comment":null,"display_name":"location_region_name_map"},"COUNTRY_NAME":{"type":"TEXT","index":4,"name":"country_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"country_name"},"ISO_2_COUNTRY_CODE":{"type":"TEXT","index":5,"name":"iso_2_country_code","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"iso_2_country_code"},"ISO_3_COUNTRY_CODE":{"type":"TEXT","index":6,"name":"ISO_3_COUNTRY_CODE","comment":null,"display_name":"iso_3_country_code"},"CONTINENT_NAME":{"type":"TEXT","index":7,"name":"CONTINENT_NAME","comment":null,"display_name":"continent_name"},"IS_IN_EUROPEAN_UNION":{"type":"BOOLEAN","index":8,"name":"IS_IN_EUROPEAN_UNION","comment":null,"display_name":"is_in_european_union"},"CREATED_BY":{"type":"TEXT","index":9,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":10,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":11,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":12,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":13,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":14,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:03UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":10752,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_location_country","raw_sql":"WITH location_country AS (\n\n    SELECT\n\n      dim_location_country_id,\n      dim_location_region_id,\n      location_region_name_map,\n      country_name,\n      iso_2_country_code,\n      iso_3_country_code,\n      continent_name,\n      is_in_european_union\n\n    FROM {{ ref('prep_location_country') }}\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"location_country\",\n    created_by=\"@m_walker\",\n    updated_by=\"@mcooperDD\",\n    created_date=\"2020-08-25\",\n    updated_date=\"2020-01-28\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_location_country","model.gitlab_snowflake.prep_location_country"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_location_country"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_location_country.sql","original_file_path":"models/common/dimensions_shared/dim_location_country.sql","name":"dim_location_country","alias":"dim_location_country","checksum":{"name":"sha256","checksum":"f6f6215354d57ed0e797266c1b0c88258a6f10ca2cb5a5abcceff55085b25b63"},"tags":[],"refs":[["prep_location_country"],["prep_location_country"]],"sources":[],"metrics":[],"description":"Dimensional table for countries mapped to larger regions.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_location_country.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table"},"created_at":1689033750.721717,"compiled_sql":"WITH location_country AS (\n\n    SELECT\n\n      dim_location_country_id,\n      dim_location_region_id,\n      location_region_name_map,\n      country_name,\n      iso_2_country_code,\n      iso_3_country_code,\n      continent_name,\n      is_in_european_union\n\n    FROM \"PROD\".common_prep.prep_location_country\n\n)\n\nSELECT\n      *,\n      '@m_walker'::VARCHAR       AS created_by,\n      '@mcooperDD'::VARCHAR       AS updated_by,\n      '2020-08-25'::DATE        AS model_created_date,\n      '2020-01-28'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n    \n\n    FROM location_country","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_location_country","label":"dim_location_country"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_SUBSCRIPTION","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":1,"name":"dim_subscription_id","comment":null,"description":"Unique identifier of a version of a subscription","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_subscription_id"},"SUBSCRIPTION_NAME":{"type":"TEXT","index":2,"name":"SUBSCRIPTION_NAME","comment":null,"display_name":"subscription_name"},"SUBSCRIPTION_VERSION":{"type":"NUMBER","index":3,"name":"subscription_version","comment":null,"description":"The version number of the subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_version"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":4,"name":"dim_crm_account_id","comment":null,"description":"account id from SFDC identifing the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":5,"name":"dim_billing_account_id","comment":null,"description":"The id of the Zuora account the subscription is associated with the customer","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id"},"DIM_BILLING_ACCOUNT_ID_INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":6,"name":"DIM_BILLING_ACCOUNT_ID_INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"dim_billing_account_id_invoice_owner_account"},"DIM_BILLING_ACCOUNT_ID_CREATOR_ACCOUNT":{"type":"TEXT","index":7,"name":"DIM_BILLING_ACCOUNT_ID_CREATOR_ACCOUNT","comment":null,"display_name":"dim_billing_account_id_creator_account"},"DIM_CRM_OPPORTUNITY_ID":{"type":"TEXT","index":8,"name":"dim_crm_opportunity_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id"},"DIM_CRM_OPPORTUNITY_ID_CURRENT_OPEN_RENEWAL":{"type":"TEXT","index":9,"name":"dim_crm_opportunity_id_current_open_renewal","comment":null,"description":"The current open renewal opportunity mapped to a subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id_current_open_renewal"},"DIM_CRM_OPPORTUNITY_ID_CLOSED_LOST_RENEWAL":{"type":"TEXT","index":10,"name":"dim_crm_opportunity_id_closed_lost_renewal","comment":null,"description":"The closed lost renewal opportunity, where applicable, mapped mapped to a subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_opportunity_id_closed_lost_renewal"},"DIM_AMENDMENT_ID_SUBSCRIPTION":{"type":"TEXT","index":11,"name":"DIM_AMENDMENT_ID_SUBSCRIPTION","comment":null,"display_name":"dim_amendment_id_subscription"},"CREATED_BY_ID":{"type":"TEXT","index":12,"name":"CREATED_BY_ID","comment":null,"display_name":"created_by_id"},"UPDATED_BY_ID":{"type":"TEXT","index":13,"name":"UPDATED_BY_ID","comment":null,"display_name":"updated_by_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":14,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"DIM_SUBSCRIPTION_ID_PREVIOUS":{"type":"TEXT","index":15,"name":"dim_subscription_id_previous","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_subscription_id_previous"},"SUBSCRIPTION_NAME_SLUGIFY":{"type":"TEXT","index":16,"name":"subscription_name_slugify","comment":null,"description":"The unique identifier of the subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_name_slugify"},"SUBSCRIPTION_STATUS":{"type":"TEXT","index":17,"name":"subscription_status","comment":null,"description":"The status of the subscription","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"accepted_values","short":"A","label":"Accepted Values: Active, Cancelled, Draft, Expired"}],"display_name":"subscription_status"},"NAMESPACE_ID":{"type":"TEXT","index":18,"name":"namespace_id","comment":null,"description":"The id of the namespace related to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_id"},"NAMESPACE_NAME":{"type":"TEXT","index":19,"name":"namespace_name","comment":null,"description":"The namespace related to the subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME":{"type":"TEXT","index":20,"name":"zuora_renewal_subscription_name","comment":null,"description":"name of the linked subscription that renews the prior subscription in a lineage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name"},"ZUORA_RENEWAL_SUBSCRIPTION_NAME_SLUGIFY":{"type":"ARRAY","index":21,"name":"zuora_renewal_subscription_name_slugify","comment":null,"description":"name of the linked subscription that renews the prior subscription in a lineage","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"zuora_renewal_subscription_name_slugify"},"CURRENT_TERM":{"type":"NUMBER","index":22,"name":"CURRENT_TERM","comment":null,"display_name":"current_term"},"RENEWAL_TERM":{"type":"NUMBER","index":23,"name":"renewal_term","comment":null,"description":"The length of the period for the subscription renewal term","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_term"},"RENEWAL_TERM_PERIOD_TYPE":{"type":"TEXT","index":24,"name":"renewal_term_period_type","comment":null,"description":"The period type for the subscription renewal term. This field is used with the renewal term field to specify the subscription renewal term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"renewal_term_period_type"},"EOA_STARTER_BRONZE_OFFER_ACCEPTED":{"type":"TEXT","index":25,"name":"EOA_STARTER_BRONZE_OFFER_ACCEPTED","comment":null,"display_name":"eoa_starter_bronze_offer_accepted"},"SUBSCRIPTION_SALES_TYPE":{"type":"TEXT","index":26,"name":"subscription_sales_type","comment":null,"description":"Identifies whether a subscription is Sales-Assisted or Self-Service / Web Direct.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"accepted_values","short":"A","label":"Accepted Values: Sales-Assisted, Self-Service"}],"display_name":"subscription_sales_type"},"AUTO_RENEW_NATIVE_HIST":{"type":"BOOLEAN","index":27,"name":"AUTO_RENEW_NATIVE_HIST","comment":null,"display_name":"auto_renew_native_hist"},"AUTO_RENEW_CUSTOMERDOT_HIST":{"type":"TEXT","index":28,"name":"AUTO_RENEW_CUSTOMERDOT_HIST","comment":null,"display_name":"auto_renew_customerdot_hist"},"TURN_ON_CLOUD_LICENSING":{"type":"TEXT","index":29,"name":"TURN_ON_CLOUD_LICENSING","comment":null,"display_name":"turn_on_cloud_licensing"},"TURN_ON_OPERATIONAL_METRICS":{"type":"TEXT","index":30,"name":"TURN_ON_OPERATIONAL_METRICS","comment":null,"display_name":"turn_on_operational_metrics"},"CONTRACT_OPERATIONAL_METRICS":{"type":"TEXT","index":31,"name":"CONTRACT_OPERATIONAL_METRICS","comment":null,"display_name":"contract_operational_metrics"},"CONTRACT_AUTO_RENEWAL":{"type":"TEXT","index":32,"name":"CONTRACT_AUTO_RENEWAL","comment":null,"display_name":"contract_auto_renewal"},"TURN_ON_AUTO_RENEWAL":{"type":"TEXT","index":33,"name":"TURN_ON_AUTO_RENEWAL","comment":null,"display_name":"turn_on_auto_renewal"},"CONTRACT_SEAT_RECONCILIATION":{"type":"TEXT","index":34,"name":"CONTRACT_SEAT_RECONCILIATION","comment":null,"display_name":"contract_seat_reconciliation"},"TURN_ON_SEAT_RECONCILIATION":{"type":"TEXT","index":35,"name":"TURN_ON_SEAT_RECONCILIATION","comment":null,"display_name":"turn_on_seat_reconciliation"},"IS_QUESTIONABLE_OPPORTUNITY_MAPPING":{"type":"NUMBER","index":36,"name":"IS_QUESTIONABLE_OPPORTUNITY_MAPPING","comment":null,"display_name":"is_questionable_opportunity_mapping"},"INVOICE_OWNER_ACCOUNT":{"type":"TEXT","index":37,"name":"INVOICE_OWNER_ACCOUNT","comment":null,"display_name":"invoice_owner_account"},"CREATOR_ACCOUNT":{"type":"TEXT","index":38,"name":"CREATOR_ACCOUNT","comment":null,"display_name":"creator_account"},"WAS_PURCHASED_THROUGH_RESELLER":{"type":"BOOLEAN","index":39,"name":"was_purchased_through_reseller","comment":null,"description":"Boolean field that indicates whether the subscription was purchased through a reseller. If TRUE, the `invoice_owner_account` will contain the name of the reseller.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"was_purchased_through_reseller"},"MULTI_YEAR_DEAL_SUBSCRIPTION_LINKAGE":{"type":"TEXT","index":40,"name":"MULTI_YEAR_DEAL_SUBSCRIPTION_LINKAGE","comment":null,"display_name":"multi_year_deal_subscription_linkage"},"SUBSCRIPTION_START_DATE":{"type":"DATE","index":41,"name":"subscription_start_date","comment":null,"description":"The date when the subscription term starts. This date is the same as the start date of the original term, which isn't necessarily the start date of the current or new term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_date"},"SUBSCRIPTION_END_DATE":{"type":"DATE","index":42,"name":"subscription_end_date","comment":null,"description":"The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the SubscriptionEndDate is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_date"},"SUBSCRIPTION_START_MONTH":{"type":"DATE","index":43,"name":"subscription_start_month","comment":null,"description":"The month when the subscription term starts. This month is the same as the start month of the original term, which isn't necessarily the start month of the current or new term.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_start_month"},"SUBSCRIPTION_END_MONTH":{"type":"DATE","index":44,"name":"subscription_end_month","comment":null,"description":"The month when the subscription term ends. This month is the same as the term end month or the cancelation month, as appropriate.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_end_month"},"SUBSCRIPTION_END_FISCAL_YEAR":{"type":"NUMBER","index":45,"name":"SUBSCRIPTION_END_FISCAL_YEAR","comment":null,"display_name":"subscription_end_fiscal_year"},"SUBSCRIPTION_CREATED_DATE":{"type":"DATE","index":46,"name":"SUBSCRIPTION_CREATED_DATE","comment":null,"display_name":"subscription_created_date"},"SUBSCRIPTION_UPDATED_DATE":{"type":"DATE","index":47,"name":"SUBSCRIPTION_UPDATED_DATE","comment":null,"display_name":"subscription_updated_date"},"TERM_START_DATE":{"type":"DATE","index":48,"name":"TERM_START_DATE","comment":null,"display_name":"term_start_date"},"TERM_END_DATE":{"type":"DATE","index":49,"name":"TERM_END_DATE","comment":null,"display_name":"term_end_date"},"TERM_START_MONTH":{"type":"DATE","index":50,"name":"TERM_START_MONTH","comment":null,"display_name":"term_start_month"},"TERM_END_MONTH":{"type":"DATE","index":51,"name":"TERM_END_MONTH","comment":null,"display_name":"term_end_month"},"TERM_START_FISCAL_YEAR":{"type":"NUMBER","index":52,"name":"TERM_START_FISCAL_YEAR","comment":null,"display_name":"term_start_fiscal_year"},"TERM_END_FISCAL_YEAR":{"type":"NUMBER","index":53,"name":"TERM_END_FISCAL_YEAR","comment":null,"display_name":"term_end_fiscal_year"},"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION":{"type":"BOOLEAN","index":54,"name":"IS_SINGLE_FISCAL_YEAR_TERM_SUBSCRIPTION","comment":null,"display_name":"is_single_fiscal_year_term_subscription"},"SECOND_ACTIVE_RENEWAL_MONTH":{"type":"DATE","index":55,"name":"SECOND_ACTIVE_RENEWAL_MONTH","comment":null,"display_name":"second_active_renewal_month"},"CANCELLED_DATE":{"type":"TIMESTAMP_TZ","index":56,"name":"CANCELLED_DATE","comment":null,"display_name":"cancelled_date"},"SUBSCRIPTION_LINEAGE":{"type":"TEXT","index":57,"name":"SUBSCRIPTION_LINEAGE","comment":null,"display_name":"subscription_lineage"},"OLDEST_SUBSCRIPTION_IN_COHORT":{"type":"TEXT","index":58,"name":"OLDEST_SUBSCRIPTION_IN_COHORT","comment":null,"display_name":"oldest_subscription_in_cohort"},"SUBSCRIPTION_COHORT_MONTH":{"type":"DATE","index":59,"name":"SUBSCRIPTION_COHORT_MONTH","comment":null,"display_name":"subscription_cohort_month"},"SUBSCRIPTION_COHORT_QUARTER":{"type":"DATE","index":60,"name":"SUBSCRIPTION_COHORT_QUARTER","comment":null,"display_name":"subscription_cohort_quarter"},"SUBSCRIPTION_COHORT_YEAR":{"type":"DATE","index":61,"name":"SUBSCRIPTION_COHORT_YEAR","comment":null,"display_name":"subscription_cohort_year"},"CREATED_BY":{"type":"TEXT","index":62,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":63,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":64,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":65,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":66,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":67,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dim_billing_account_id_invoice_owner":{"name":"dim_billing_account_id_invoice_owner","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_billing_account_id_invoice_owner"},"amendment_id":{"name":"amendment_id","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"amendment_id"},"is_auto_renew":{"name":"is_auto_renew","description":"Boolean field, if true, this subscription automatically renews at the end of the subscription term","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_auto_renew"},"lineage":{"name":"lineage","description":"All the subscriptions subsquent to the primary subscription, separated by commas.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lineage"},"cohort_month":{"name":"cohort_month","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_month"},"cohort_quarter":{"name":"cohort_quarter","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_quarter"},"cohort_year":{"name":"cohort_year","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"cohort_year"},"is_myb":{"name":"is_myb","description":"MYB = Multi-Year Booking. This boolean flag identifies if a subscription is booked for more than one year. This can either be by having a term greater than 12 months or having a linked subscription.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_myb"},"is_myb_with_multi_subs":{"name":"is_myb_with_multi_subs","description":"MYB = Multi-Year Booking. This boolean flag identifies if a subscription is booked for more than one year by using multiple linked subscriptions only. A subscription with a term greater than 12 but does not have linked subscriptions has a value of FALSE.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_myb_with_multi_subs"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:26UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":36424192,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_subscription","raw_sql":"$19","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.gitlab_snowflake.get_keyed_nulls","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_amendment","model.gitlab_snowflake.prep_subscription","model.gitlab_snowflake.prep_subscription","model.gitlab_snowflake.map_subscription_opportunity","model.gitlab_snowflake.map_subscription_opportunity","model.gitlab_snowflake.map_subscription_lineage","model.gitlab_snowflake.map_subscription_lineage"]},"config":{"enabled":true,"alias":"dim_subscription","schema":"common","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_subscription"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_subscription.sql","original_file_path":"models/common/dimensions_shared/dim_subscription.sql","name":"dim_subscription","alias":"dim_subscription","checksum":{"name":"sha256","checksum":"44a135462088f0caceab046c41bf8e7354f2c148c50ecbee98d6658fddfeda60"},"tags":["mnpi_exception"],"refs":[["prep_amendment"],["prep_amendment"],["prep_subscription"],["prep_subscription"],["map_subscription_opportunity"],["map_subscription_opportunity"],["map_subscription_lineage"],["map_subscription_lineage"]],"sources":[],"metrics":[],"description":"Dimension table representing subscription details. The Zuora subscription is created and maintained as part of the broader Quote Creation business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#3-quote-creation).\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Subscriptions).\n\nThe grain of the table is the version of a Zuora subscription.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_subscription.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"],"alias":"dim_subscription"},"created_at":1689033750.8111765,"compiled_sql":"$1a","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_subscription","label":"dim_subscription"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_CUSTOMER_SUCCESS","name":"WK_RPT_EVENT_BASED_METRIC_COUNTS_NAMESPACE_ALL_TIME","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"MONTH":{"type":"TIMESTAMP_NTZ","index":1,"name":"MONTH","comment":null,"display_name":"month"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"ULTIMATE_PARENT_NAMESPACE_ID","comment":null,"display_name":"ultimate_parent_namespace_id"},"METRICS_PATH":{"type":"TEXT","index":3,"name":"METRICS_PATH","comment":null,"display_name":"metrics_path"},"MONTHLY_VALUE":{"type":"NUMBER","index":4,"name":"MONTHLY_VALUE","comment":null,"display_name":"monthly_value"},"CUM_METRIC_VALUE":{"type":"NUMBER","index":5,"name":"CUM_METRIC_VALUE","comment":null,"display_name":"cum_metric_value"},"CREATED_BY":{"type":"TEXT","index":6,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":7,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":8,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":9,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":10,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":11,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:51UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":35641856,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.wk_rpt_event_based_metric_counts_namespace_all_time","raw_sql":"$1b","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.wk_fct_snowplow_events_service_ping","model.gitlab_snowflake.wk_fct_snowplow_events_service_ping"]},"config":{"enabled":true,"alias":null,"schema":"workspace_customer_success","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_customer_success","fqn":["gitlab_snowflake","workspaces","workspace_customer_success","redis_metrics","service_ping_context_method","metric_aggregations","one_to_one","wk_rpt_event_based_metric_counts_namespace_all_time"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_customer_success/redis_metrics/service_ping_context_method/metric_aggregations/one_to_one/wk_rpt_event_based_metric_counts_namespace_all_time.sql","original_file_path":"models/workspaces/workspace_customer_success/redis_metrics/service_ping_context_method/metric_aggregations/one_to_one/wk_rpt_event_based_metric_counts_namespace_all_time.sql","name":"wk_rpt_event_based_metric_counts_namespace_all_time","alias":"wk_rpt_event_based_metric_counts_namespace_all_time","checksum":{"name":"sha256","checksum":"f0f89de9b4916eeb7658cd40fa14702bf39fcdd3e4de5ada635ca1183624935d"},"tags":["workspace","mnpi_exception"],"refs":[["wk_fct_snowplow_events_service_ping"],["wk_fct_snowplow_events_service_ping"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_customer_success/redis_metrics/service_ping_context_method/metric_aggregations/one_to_one/wk_rpt_event_based_metric_counts_namespace_all_time.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_customer_success","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033681.132752,"compiled_sql":"$1c","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_customer_success.wk_rpt_event_based_metric_counts_namespace_all_time","label":"wk_rpt_event_based_metric_counts_namespace_all_time"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_PRODUCT","name":"RPT_GAINSIGHT_METRICS_MONTHLY_PAID_SAAS","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":1,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":2,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"dim_billing_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"DIM_NAMESPACE_ID":{"type":"NUMBER","index":4,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"SNAPSHOT_MONTH":{"type":"DATE","index":5,"name":"snapshot_month","comment":null,"description":"First day of the month in which data is being reported.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_month"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":6,"name":"snapshot_date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_date_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":7,"name":"PING_CREATED_AT","comment":null,"display_name":"ping_created_at"},"PING_CREATED_DATE_ID":{"type":"NUMBER","index":8,"name":"PING_CREATED_DATE_ID","comment":null,"display_name":"ping_created_date_id"},"INSTANCE_TYPE":{"type":"TEXT","index":9,"name":"instance_type","comment":null,"description":"Type of instance (Production/Non-Production)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":10,"name":"included_in_health_measures_str","comment":null,"description":"This field is manually populated in Gainsight by CSMs, and indicates whether an installation is included in health measures or has opted out.\nThis field is most useful when a customer has multiple production installations. More details can be found on \n[this issue](https://gitlab.com/gitlab-data/analytics/-/issues/15523#note_1261452392).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"included_in_health_measures_str"},"SUBSCRIPTION_SEATS":{"type":"NUMBER","index":11,"name":"subscription_seats","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_seats"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":12,"name":"billable_user_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billable_user_count"},"LICENSE_UTILIZATION":{"type":"NUMBER","index":13,"name":"license_utilization","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_utilization"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":14,"name":"max_historical_user_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"max_historical_user_count"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":15,"name":"umau_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":16,"name":"action_monthly_active_users_project_repo_28_days_user","comment":null,"description":"Monthly count of unique users that made an Action on a valid [Target](https://docs.gitlab.com/ee/api/events.html#target-types) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateaction_monthly_active_users_project_repo))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":17,"name":"merge_requests_28_days_user","comment":null,"description":"Monthly count of unique users making merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":18,"name":"projects_with_repositories_enabled_28_days_user","comment":null,"description":"Monthly count of unique users that created projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":19,"name":"commit_comment_all_time_event","comment":null,"description":"All-time count commit comments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscommit_comment))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":20,"name":"source_code_pushes_all_time_event","comment":null,"description":"All-time count of source code pushes ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssource_code_pushes))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":21,"name":"ci_pipelines_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":22,"name":"ci_internal_pipelines_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":23,"name":"ci_builds_28_days_user","comment":null,"description":"Monthly count of unique users running CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_builds))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":24,"name":"ci_builds_all_time_user","comment":null,"description":"All-time count of unique users running CI builds ([source]()https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_builds)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":25,"name":"ci_builds_all_time_event","comment":null,"description":"All-time count of CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_builds))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":26,"name":"ci_runners_all_time_event","comment":null,"description":"All-time count of CI Runners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_runners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":27,"name":"auto_devops_enabled_all_time_event","comment":null,"description":"All-time count of Projects with auto DevOps template enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsauto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"NUMBER","index":28,"name":"gitlab_shared_runners_enabled","comment":null,"description":"Flags whether shared runners are enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitlab_shared_runners_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"NUMBER","index":29,"name":"container_registry_enabled","comment":null,"description":"Flags whether container registry is enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#container_registry_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":30,"name":"template_repositories_all_time_event","comment":null,"description":"All-time total of custom project templates and projects without namespaces ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstemplate_repositories))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":31,"name":"ci_pipeline_config_repository_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines from templates in repository ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipeline_config_repository))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":32,"name":"user_unique_users_all_secure_scanners_28_days_user","comment":null,"description":"Monthly count of unique users running secure CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_unique_users_all_secure_scanners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":33,"name":"user_sast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_sast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":34,"name":"user_dast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":35,"name":"user_dependency_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running dependency scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":36,"name":"user_license_management_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running license management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_license_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":37,"name":"user_secret_detection_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running secret detection CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_secret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":38,"name":"user_container_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running container scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_container_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"NUMBER","index":39,"name":"object_store_packages_enabled","comment":null,"description":"Flags whether Object Storage is enabled for Uploads ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#object_storepackagesenabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":40,"name":"projects_with_packages_all_time_event","comment":null,"description":"All-time count of projects with package registry configured ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":41,"name":"projects_with_packages_28_days_event","comment":null,"description":"Projects with package registry enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181055_projects_with_packages.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":42,"name":"deployments_28_days_user","comment":null,"description":"Monthly count of unique users triggering deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasedeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"releases_28_days_user","comment":null,"description":"Monthly count of unique users authoring releases ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasereleases))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"epics_28_days_user","comment":null,"description":"Monthly count of unique users authoring epics ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":45,"name":"issues_28_days_user","comment":null,"description":"Monthly count of unique users authoring issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":46,"name":"ci_internal_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":47,"name":"ci_external_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in external repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_external_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":48,"name":"merge_requests_all_time_event","comment":null,"description":"All-time count of Merge Requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsmerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":49,"name":"todos_all_time_event","comment":null,"description":"All-time count of ToDos created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstodos))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":50,"name":"epics_all_time_event","comment":null,"description":"All-time count of Epics created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":51,"name":"issues_all_time_event","comment":null,"description":"All-time count of Issues created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":52,"name":"projects_all_time_event","comment":null,"description":"All-time count of Projects created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":53,"name":"deployments_28_days_event","comment":null,"description":"Monthly count of deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlydeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":54,"name":"packages_28_days_event","comment":null,"description":"Monthly count of Packages ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlypackages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":55,"name":"sast_jobs_all_time_event","comment":null,"description":"All-time count of SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":56,"name":"dast_jobs_all_time_event","comment":null,"description":"All-time count of DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":57,"name":"dependency_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Dependency Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":58,"name":"license_management_jobs_all_time_event","comment":null,"description":"All-time count of License Management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countslicense_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":59,"name":"secret_detection_jobs_all_time_event","comment":null,"description":"All-time count of Secret Detectionâ CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssecret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":60,"name":"container_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Container Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscontainer_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":61,"name":"projects_jenkins_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jenkins ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jenkins_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":62,"name":"projects_bamboo_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Bamboo CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_bamboo_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":63,"name":"projects_jira_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":64,"name":"projects_drone_ci_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Drone CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_drone_ci_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":65,"name":"projects_github_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_github_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":66,"name":"projects_jira_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Server ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":67,"name":"projects_jira_dvcs_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud (DVCS Connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"projects_with_repositories_enabled_all_time_event","comment":null,"description":"All-time count of projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"protected_branches_all_time_event","comment":null,"description":"All-time count of protected branches ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprotected_branches))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"remote_mirrors_all_time_event","comment":null,"description":"All-time count of remote mirrors ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsremote_mirrors))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":71,"name":"projects_enforcing_code_owner_approval_28_days_user","comment":null,"description":"Monthly count of unique users creating projects that require code owner approval ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_enforcing_code_owner_approval))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":72,"name":"project_clusters_enabled_28_days_user","comment":null,"description":"Monthly count of unique users using GitLab Managed enabled clusters attached to projects ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyconfigureproject_clusters_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":73,"name":"analytics_28_days_user","comment":null,"description":"The number of unique users viewing any [Analytics page](https://docs.gitlab.com/ee/user/analytics/) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#manage-manageoptimize---smau-gmau---mau-viewing-analytics-features))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":74,"name":"issues_edit_28_days_user","comment":null,"description":"Number of unique users interacting with an issue (open, close, reopen, adjust label, adjust milestone, adjust weight, comment) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#plan-planproject-management---smau-paid-gmau---mau-interacting-with-issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":75,"name":"user_packages_28_days_user","comment":null,"description":"The maximum distinct count of users who published a package to the Package Registry. In the future, this value will the distinct count of users across all Package AMAUs ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#packagepackage---smau-gmau---count-of-users-publishing-packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":76,"name":"terraform_state_api_28_days_user","comment":null,"description":"Monthly active users of GitLab Managed Terraform State ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#configureconfigure---smau-gmau---mau-of-gitlab-managed-terraform-state))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":77,"name":"incident_management_28_days_user","comment":null,"description":"Unique users that interact with alerts or incidents ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#monitormonitor---smau-gmau---unique-users-that-interact-with-alerts-and-incidents))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"NUMBER","index":78,"name":"auto_devops_enabled","comment":null,"description":"Flags whether auto DevOps is enabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#instance_auto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":79,"name":"gitaly_clusters_instance","comment":null,"description":"Number of GitLab Managed clusters both enabled and disabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitalyclusters))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":80,"name":"epics_deepest_relationship_level_instance","comment":null,"description":"Numeric level of the deepest relationship of all epics on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics_deepest_relationship_level))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"clusters_applications_cilium_all_time_event","comment":null,"description":"All-time total of GitLab Managed clusters with GitLab Managed App:Cilium installed ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsclusters_applications_cilium))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":82,"name":"network_policy_forwards_all_time_event","comment":null,"description":"Cumulative count of packets forwarded by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_forwards))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":83,"name":"network_policy_drops_all_time_event","comment":null,"description":"Cumulative count of packets dropped by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_drops))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":84,"name":"requirements_with_test_report_all_time_event","comment":null,"description":"All-time count of requirements having a test report ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirements_with_test_report))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":85,"name":"requirement_test_reports_ci_all_time_event","comment":null,"description":"All-time count of requirement test reports created from CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirement_test_reports_ci))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":86,"name":"projects_imported_from_github_all_time_event","comment":null,"description":"All-time count of project imported from GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_imported_from_github))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":87,"name":"projects_jira_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":88,"name":"projects_jira_dvcs_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":89,"name":"service_desk_issues_all_time_event","comment":null,"description":"All-time count of service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":90,"name":"ci_pipelines_all_time_user","comment":null,"description":"All-time count of distinct Users triggering Total pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":91,"name":"service_desk_issues_28_days_user","comment":null,"description":"Monthly count of users opening service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":92,"name":"projects_jira_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":93,"name":"projects_jira_dvcs_cloud_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Cloud (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":94,"name":"projects_jira_dvcs_server_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":95,"name":"merge_requests_with_required_code_owners_28_days_user","comment":null,"description":"Monthly count of users creating merge requests with required code owners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests_with_required_codeowners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":96,"name":"analytics_value_stream_28_days_event","comment":null,"description":"Monthly count of visits to [Value Stream Analytics](https://about.gitlab.com/stages-devops-lifecycle/value-stream-analytics/) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersanalyticsg_analytics_valuestream_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":97,"name":"code_review_user_approve_mr_28_days_user","comment":null,"description":"Monthly count of users approving merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_counterscode_reviewi_code_review_user_approve_mr_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":98,"name":"epics_usage_28_days_user","comment":null,"description":"Monthly users count for epics_usage ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersepics_usageepics_usage_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":99,"name":"ci_templates_usage_28_days_event","comment":null,"description":"Monthly count of CI templates ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersci_templatesci_templates_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":100,"name":"project_management_issue_milestone_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs milestone ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_milestone_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":101,"name":"project_management_issue_iteration_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs iteration ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_iteration_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":102,"name":"protected_branches_28_days_user","comment":null,"description":"Count of users creating projects with repositories making use of at least one protected branch in last 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182051_protected_branches.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":103,"name":"ci_cd_lead_time_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics lead time tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126091206_p_analytics_ci_cd_lead_time_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":104,"name":"ci_cd_deployment_frequency_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics deployment frequency tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126090835_p_analytics_ci_cd_deployment_frequency_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":105,"name":"projects_with_repositories_enabled_all_time_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182023_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":106,"name":"api_fuzzing_jobs_usage_28_days_user","comment":null,"description":"Count of distinct users creating API Fuzzing jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180355_user_api_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":107,"name":"coverage_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 coverage-guided Fuzz Testing job.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180359_coverage_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":108,"name":"api_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 API Fuzzing Testing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180401_api_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":109,"name":"container_scanning_pipeline_usage_28_days_event","comment":null,"description":"Pipelines containing a Container Scanning job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175507_container_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":110,"name":"dependency_scanning_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines with successful Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175226_dependency_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":111,"name":"sast_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 SAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182129_sast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":112,"name":"secret_detection_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 Secret Detection job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182131_secret_detection_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":113,"name":"dast_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines that have at least 1 DAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175618_dast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":114,"name":"coverage_fuzzing_jobs_28_days_user","comment":null,"description":"Users who run a coverage fuzzing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183817_user_coverage_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":115,"name":"environments_all_time_event","comment":null,"description":"Total available and stopped environments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181914_environments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":116,"name":"feature_flags_all_time_event","comment":null,"description":"Number of feature flag toggles. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181249_feature_flags.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":117,"name":"successful_deployments_28_days_event","comment":null,"description":"Total successful deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181923_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":118,"name":"failed_deployments_28_days_event","comment":null,"description":"Total failed deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181924_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":119,"name":"projects_compliance_framework_all_time_event","comment":null,"description":"Number of projects labeled with a compliance framework label. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180825_projects_with_compliance_framework.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":120,"name":"commit_ci_config_file_28_days_user","comment":null,"description":"Monthly unique user count doing commits which contains the CI config file.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184303_o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":121,"name":"view_audit_all_time_user","comment":null,"description":"Unique users who have viewed audit events. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216183906_g_compliance_audit_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":122,"name":"dependency_scanning_jobs_all_time_user","comment":null,"description":"Total number of users running Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175216_user_dependency_scanning_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":123,"name":"analytics_devops_adoption_all_time_user","comment":null,"description":"Unique users viewing analytics devops adoption. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210423005644_i_analytics_dev_ops_adoption.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":124,"name":"projects_imported_all_time_event","comment":null,"description":"Number of projects imported. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210514141520_project_imports_total.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":125,"name":"preferences_security_dashboard_28_days_user","comment":null,"description":"Users who set personal preference to see Security Dashboard on Group\n information page. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182209_user_preferences_group_overview_security_dashboard.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":126,"name":"web_ide_edit_28_days_user","comment":null,"description":"Number of unique users per month who edited a file from any web editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180327_action_monthly_active_users_ide_edit.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":127,"name":"auto_devops_pipelines_all_time_event","comment":null,"description":"Total pipelines from an Auto DevOps template. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175516_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":128,"name":"projects_prometheus_active_all_time_event","comment":null,"description":"Count of projects with active integrations for Prometheus. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180931_projects_prometheus_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"NUMBER","index":129,"name":"prometheus_enabled","comment":null,"description":"Whether the bundled Prometheus is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124912_prometheus_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"NUMBER","index":130,"name":"prometheus_metrics_enabled","comment":null,"description":"Whether Prometheus Metrics endpoint is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124914_prometheus_metrics_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"NUMBER","index":131,"name":"group_saml_enabled","comment":null,"description":"Has the instance enabled Group SAML SSO `https://docs.gitlab.com/ee/user/group/saml_sso/`\n on at least 1 group? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180813_group_saml_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":132,"name":"jira_issue_imports_all_time_event","comment":null,"description":"Count of projects imported from Jira. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180654_jira.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":133,"name":"author_epic_all_time_user","comment":null,"description":"Count distinct author ids from epics. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181134_epics.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":134,"name":"author_issue_all_time_user","comment":null,"description":"Count of users creating Issues. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181115_issues.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":135,"name":"failed_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a failed deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181937_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":136,"name":"successful_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a successful deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181941_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"NUMBER","index":137,"name":"geo_enabled","comment":null,"description":"Is Geo enabled? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180406_geo_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":138,"name":"auto_devops_pipelines_28_days_user","comment":null,"description":"Distinct users that ran an auto DevOps pipeline without a .gitlab-ci.yml file. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175548_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":139,"name":"active_instance_runners_all_time_event","comment":null,"description":"Total active Shared (Instance) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502045402_ci_runners_instance_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":140,"name":"active_group_runners_all_time_event","comment":null,"description":"Total active Group Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050341_ci_runners_group_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":141,"name":"active_project_runners_all_time_event","comment":null,"description":"Total active Specific (Project) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050834_ci_runners_project_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":142,"name":"gitaly_version","comment":null,"description":"Version of Gitaly. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20210204124928_version.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":143,"name":"gitaly_servers_all_time_event","comment":null,"description":"Total Gitalty Servers. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210204124930_servers.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":144,"name":"API_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":145,"name":"API_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":146,"name":"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":147,"name":"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":148,"name":"SECRET_DETECTION_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":149,"name":"SECRET_DETECTION_SCANS_28_DAYS_EVENT","comment":null,"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":150,"name":"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":151,"name":"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":152,"name":"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":153,"name":"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":154,"name":"DAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":155,"name":"DAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":156,"name":"SAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":157,"name":"SAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":158,"name":"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":159,"name":"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":160,"name":"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER","comment":null,"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":161,"name":"AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":162,"name":"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":163,"name":"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER","comment":null,"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":164,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":165,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":166,"name":"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":167,"name":"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":168,"name":"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":169,"name":"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":170,"name":"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":171,"name":"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":172,"name":"PAID_LICENSE_SEARCH_28_DAYS_USER","comment":null,"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":173,"name":"LAST_ACTIVITY_28_DAYS_USER","comment":null,"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":174,"name":"SNIPPETS_28_DAYS_EVENT","comment":null,"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":175,"name":"SINGLE_FILE_EDITOR_28_DAYS_USER","comment":null,"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":176,"name":"MERGE_REQUESTS_CREATED_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":177,"name":"MERGE_REQUESTS_CREATED_28_DAYS_USER","comment":null,"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":178,"name":"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":179,"name":"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT","comment":null,"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":180,"name":"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT","comment":null,"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":181,"name":"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER","comment":null,"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":182,"name":"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT","comment":null,"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"PIPELINE_SCHEDULES_28_DAYS_USER","comment":null,"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":184,"name":"ci_internal_pipelines_28_days_event","comment":null,"description":"Total monthly (28D) pipelines in Gitlab repositories for all project and project types [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20230217215050_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_saas')) }}\"})"}],"display_name":"ci_internal_pipelines_28_days_event"},"IS_MISSING_PAID_SEATS":{"type":"BOOLEAN","index":185,"name":"is_missing_paid_seats","comment":null,"description":"Flags if there are currently active users, but no seats have been paid for","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_missing_paid_seats"},"IS_DATA_IN_SUBSCRIPTION_MONTH":{"type":"BOOLEAN","index":186,"name":"is_data_in_subscription_month","comment":null,"description":"Flags if there is either Subscription Seats data or Usage Ping data present in the given month for a given subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_data_in_subscription_month"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":187,"name":"is_latest_data","comment":null,"description":"Flags the row with the most recently received data from Usage Ping","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_latest_data"},"CREATED_BY":{"type":"TEXT","index":188,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":189,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":190,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":191,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":192,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":193,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"jira_imports_28_days_event":{"name":"jira_imports_28_days_event","description":"Monthly count of Issues imported from Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlymanageissue_importsjira)). This metric has been deprecated but we are keeping the field around for history.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"jira_imports_28_days_event"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:52UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":40685056,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_saas","raw_sql":"$1d","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.mart_ping_namespace_metric_health_score_saas","model.gitlab_snowflake.mart_ping_namespace_metric_health_score_saas","model.gitlab_snowflake.bdg_subscription_product_rate_plan","model.gitlab_snowflake.bdg_subscription_product_rate_plan","model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base","model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.dim_date","model.gitlab_snowflake.fct_charge","model.gitlab_snowflake.fct_charge"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_product","database":"PROD","tags":["product","product","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_product","fqn":["gitlab_snowflake","common_mart_product","reports","rpt_gainsight_metrics_monthly_paid_saas"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_product/reports/rpt_gainsight_metrics_monthly_paid_saas.sql","original_file_path":"models/common_mart_product/reports/rpt_gainsight_metrics_monthly_paid_saas.sql","name":"rpt_gainsight_metrics_monthly_paid_saas","alias":"rpt_gainsight_metrics_monthly_paid_saas","checksum":{"name":"sha256","checksum":"ac206ec8ba6ab6cf15f56d6a852b1ca06391b07faa80f762bb6c3413d9512c28"},"tags":["product","mnpi_exception"],"refs":[["mart_ping_namespace_metric_health_score_saas"],["mart_ping_namespace_metric_health_score_saas"],["bdg_subscription_product_rate_plan"],["bdg_subscription_product_rate_plan"],["gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base"],["gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base"],["dim_date"],["dim_date"],["fct_charge"],["fct_charge"]],"sources":[],"metrics":[],"description":"**Description:** Joins SaaS Namespace Service Pings to a list of paid recurring SaaS subscriptions to limit to paying SaaS customers, and joins in seat/license data to calculate license utilization. The data from this table will be used for customer product insights. Most notably, this data is pumped into Gainsight and aggregated into customer health scores for use by TAMs.\n\n**Data Grain:**\n- Namespace\n- Subscription\n- Month\n\n**Filters:**\n- Only includes Service Ping metrics that have been added via the \"wave\" process.\n- Only includes pings that have a license associated with them.\n- Only includes recurring paid SaaS subscriptions\n\n**Business Logic in this Model:**\n- Hits Zuora tables related to charges and product rate plans to limit to paid SaaS customers with recurring subscriptions.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_product/reports/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_product/reports/rpt_gainsight_metrics_monthly_paid_saas.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product","mnpi_exception"]},"created_at":1689033736.316436,"compiled_sql":"$1e","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_product.rpt_gainsight_metrics_monthly_paid_saas","label":"rpt_gainsight_metrics_monthly_paid_saas"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_BILLING_ACCOUNT","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_BILLING_ACCOUNT_SK":{"type":"TEXT","index":1,"name":"dim_billing_account_sk","comment":null,"description":"A surrogate key that uniquely identifes each row of the billing account table.  It is currently formed by hashing the billing account IDs from Zuora that uniquely identify a Zuora account associated with a given Subscription ID. This is built as a conceptual [dimension](https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/kimball-techniques/dimensional-modeling-techniques/dimension-table-structure/) and can be used to build a dimension table to limit the number of columns on a fact table.","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_billing_account_sk"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":2,"name":"dim_billing_account_id","comment":null,"description":"The unique identifier of the Zuora account associated with a given Subscription ID","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_billing_account_id"},"DIM_CRM_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"dim_crm_account_id","comment":null,"description":"The customer account ID for the account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_crm_account_id"},"BILLING_ACCOUNT_NUMBER":{"type":"TEXT","index":4,"name":"billing_account_number","comment":null,"description":"A unique Zuora account number","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_account_number"},"BILLING_ACCOUNT_NAME":{"type":"TEXT","index":5,"name":"billing_account_name","comment":null,"description":"The name of the Zuora account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billing_account_name"},"ACCOUNT_STATUS":{"type":"TEXT","index":6,"name":"account_status","comment":null,"description":"The status of the account in the system. Can be draft, active, cancelled.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_status"},"PARENT_ID":{"type":"TEXT","index":7,"name":"parent_id","comment":null,"description":"The identifier of the parent customer account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"CRM_ACCOUNT_CODE":{"type":"TEXT","index":8,"name":"crm_account_code","comment":null,"description":"The code for the sfdc account","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_account_code"},"CRM_ENTITY":{"type":"TEXT","index":9,"name":"crm_entity","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"crm_entity"},"ACCOUNT_CURRENCY":{"type":"TEXT","index":10,"name":"account_currency","comment":null,"description":"A currency as defined in Billing Settings in the Zuora UI","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"account_currency"},"SOLD_TO_COUNTRY":{"type":"TEXT","index":11,"name":"sold_to_country","comment":null,"description":"The country of the sold to contact","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sold_to_country"},"SSP_CHANNEL":{"type":"TEXT","index":12,"name":"ssp_channel","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ssp_channel"},"PO_REQUIRED":{"type":"TEXT","index":13,"name":"po_required","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"po_required"},"AUTO_PAY":{"type":"BOOLEAN","index":14,"name":"auto_pay","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_pay"},"DEFAULT_PAYMENT_METHOD_TYPE":{"type":"TEXT","index":15,"name":"DEFAULT_PAYMENT_METHOD_TYPE","comment":null,"display_name":"default_payment_method_type"},"IS_DELETED":{"type":"BOOLEAN","index":16,"name":"is_deleted","comment":null,"description":"The flag indicating if account has been deleted","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_deleted"},"BATCH":{"type":"TEXT","index":17,"name":"batch","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"batch"},"RECORD_DATA_SOURCE":{"type":"TEXT","index":18,"name":"record_data_source","comment":null,"description":"An indicator flag to identify if the record exists in Zuora or CDot or in both the sources. This column can be used to identify any missing records or data sync issues in both the sources","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"record_data_source"},"CREATED_BY":{"type":"TEXT","index":19,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":20,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":21,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":22,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":23,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":24,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 09:03UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":6400512,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_billing_account","raw_sql":"$1f","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_billing_account","model.gitlab_snowflake.prep_billing_account"]},"config":{"enabled":true,"alias":"dim_billing_account","schema":"common","database":"PROD","tags":["mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_billing_account"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_billing_account.sql","original_file_path":"models/common/dimensions_shared/dim_billing_account.sql","name":"dim_billing_account","alias":"dim_billing_account","checksum":{"name":"sha256","checksum":"4ad3fe77e658a786a78f08bca51c1da7f0bd485da110df64f9faa656183a5487"},"tags":["mnpi_exception"],"refs":[["prep_billing_account"],["prep_billing_account"]],"sources":[],"metrics":[],"description":"Dimensional table representing each individual Zuora account with details of person to bill for the account.\n\nThe Zuora account creation and maintenance is part of the broader Quote Creation business process and can be found in the [handbook](https://about.gitlab.com/handbook/finance/sox-internal-controls/quote-to-cash/#3-quote-creation).\n\nData comes from [Zuora Documentation](https://www.zuora.com/developer/api-reference/#tag/Accounts).\n\nThe grain of the table is the Zuora Account.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_billing_account.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"],"alias":"dim_billing_account"},"created_at":1689033750.5598338,"compiled_sql":"$20","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_billing_account","label":"dim_billing_account"},{"metadata":{"type":"BASE TABLE","schema":"WORKSPACE_CUSTOMER_SUCCESS","name":"REDIS_NAMESPACE_SNOWPLOW_CLICKS_AGGREGATED_WORKSPACE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_MONTH":{"type":"TIMESTAMP_NTZ","index":1,"name":"DATE_MONTH","comment":null,"display_name":"date_month"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":2,"name":"ULTIMATE_PARENT_NAMESPACE_ID","comment":null,"display_name":"ultimate_parent_namespace_id"},"EVENT_ACTION":{"type":"TEXT","index":3,"name":"EVENT_ACTION","comment":null,"display_name":"event_action"},"DISTINCT_USERS":{"type":"NUMBER","index":4,"name":"DISTINCT_USERS","comment":null,"display_name":"distinct_users"},"CREATED_BY":{"type":"TEXT","index":5,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":6,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":7,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":8,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":9,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":10,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 18:49UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":24328704,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.redis_namespace_snowplow_clicks_aggregated_workspace","raw_sql":"{{\n  config(\n    materialized='table',\n    tags=[\"mnpi_exception\"]\n  )\n}}\n\nWITH clicks_filtered AS (\n  SELECT\n    *\n  FROM {{ ref('redis_namespace_snowplow_clicks_workspace') }}\n  WHERE event_action IN (\n    'action_active_users_project_repo',\n    'p_terraform_state_api_unique_users',\n    'i_search_paid'\n  )\n),\n\nfinal AS (\n  SELECT\n    DATE_TRUNC('month', derived_tstamp) AS date_month,\n    ultimate_parent_namespace_id,\n    event_action,\n    COUNT(DISTINCT gsc_pseudonymized_user_id) AS distinct_users\n  FROM clicks_filtered\n  {{ dbt_utils.group_by(n = 3) }}\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@mdrussell\",\n    updated_by=\"@iweeks\",\n    created_date=\"2022-05-24\",\n    updated_date=\"2022-06-27\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.group_by","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.redis_namespace_snowplow_clicks_workspace","model.gitlab_snowflake.redis_namespace_snowplow_clicks_workspace"]},"config":{"enabled":true,"alias":null,"schema":"workspace_customer_success","database":"PROD","tags":["workspace","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"workspace_customer_success","fqn":["gitlab_snowflake","workspaces","workspace_customer_success","redis_metrics","original_method","redis_namespace_snowplow_clicks_aggregated_workspace"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"workspaces/workspace_customer_success/redis_metrics/original_method/redis_namespace_snowplow_clicks_aggregated_workspace.sql","original_file_path":"models/workspaces/workspace_customer_success/redis_metrics/original_method/redis_namespace_snowplow_clicks_aggregated_workspace.sql","name":"redis_namespace_snowplow_clicks_aggregated_workspace","alias":"redis_namespace_snowplow_clicks_aggregated_workspace","checksum":{"name":"sha256","checksum":"f28d0e890d96614be99a320eedd533cc014e7af16c23c9e8d91651a96bdd20b5"},"tags":["workspace","mnpi_exception"],"refs":[["redis_namespace_snowplow_clicks_workspace"],["redis_namespace_snowplow_clicks_workspace"]],"sources":[],"metrics":[],"description":"","meta":{},"docs":{"show":true},"patch_path":null,"compiled_path":"target/compiled/gitlab_snowflake/models/workspaces/workspace_customer_success/redis_metrics/original_method/redis_namespace_snowplow_clicks_aggregated_workspace.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"workspace_customer_success","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["mnpi_exception"]},"created_at":1689033681.0626624,"compiled_sql":"\n\nWITH clicks_filtered AS (\n  SELECT\n    *\n  FROM \"PROD\".workspace_customer_success.redis_namespace_snowplow_clicks_workspace\n  WHERE event_action IN (\n    'action_active_users_project_repo',\n    'p_terraform_state_api_unique_users',\n    'i_search_paid'\n  )\n),\n\nfinal AS (\n  SELECT\n    DATE_TRUNC('month', derived_tstamp) AS date_month,\n    ultimate_parent_namespace_id,\n    event_action,\n    COUNT(DISTINCT gsc_pseudonymized_user_id) AS distinct_users\n  FROM clicks_filtered\n  group by 1,2,3\n)\n\nSELECT\n      *,\n      '@mdrussell'::VARCHAR       AS created_by,\n      '@iweeks'::VARCHAR       AS updated_by,\n      '2022-05-24'::DATE        AS model_created_date,\n      '2022-06-27'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n    \n\n    FROM final","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".workspace_customer_success.redis_namespace_snowplow_clicks_aggregated_workspace","label":"redis_namespace_snowplow_clicks_aggregated_workspace"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_NAMESPACE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_NAMESPACE_ID":{"type":"NUMBER","index":1,"name":"dim_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"dim_namespace_id"},"NAMESPACE_IS_INTERNAL":{"type":"BOOLEAN","index":2,"name":"namespace_is_internal","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_internal"},"NAMESPACE_IS_ULTIMATE_PARENT":{"type":"BOOLEAN","index":3,"name":"namespace_is_ultimate_parent","comment":null,"description":"Boolean flag which is set to True if the namespace is the ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_is_ultimate_parent"},"NAMESPACE_NAME":{"type":"TEXT","index":4,"name":"namespace_name","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_name"},"NAMESPACE_PATH":{"type":"TEXT","index":5,"name":"namespace_path","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_path"},"OWNER_ID":{"type":"NUMBER","index":6,"name":"owner_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"owner_id"},"NAMESPACE_TYPE":{"type":"TEXT","index":7,"name":"namespace_type","comment":null,"description":"The type of namespace: Group, User, or Project.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"namespace_type"},"HAS_AVATAR":{"type":"BOOLEAN","index":8,"name":"has_avatar","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_avatar"},"CREATED_AT":{"type":"TIMESTAMP_NTZ","index":9,"name":"created_at","comment":null,"description":"The timestamp of the ultimate parent namespace creation","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"created_at"},"UPDATED_AT":{"type":"TIMESTAMP_NTZ","index":10,"name":"updated_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"updated_at"},"IS_MEMBERSHIP_LOCKED":{"type":"BOOLEAN","index":11,"name":"is_membership_locked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_membership_locked"},"HAS_REQUEST_ACCESS_ENABLED":{"type":"BOOLEAN","index":12,"name":"has_request_access_enabled","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_request_access_enabled"},"HAS_SHARE_WITH_GROUP_LOCKED":{"type":"BOOLEAN","index":13,"name":"has_share_with_group_locked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_share_with_group_locked"},"IS_SETUP_FOR_COMPANY":{"type":"BOOLEAN","index":14,"name":"IS_SETUP_FOR_COMPANY","comment":null,"display_name":"is_setup_for_company"},"VISIBILITY_LEVEL":{"type":"TEXT","index":15,"name":"visibility_level","comment":null,"description":"The visibility setting for the namespace or project: public, private, or internal. More information about namespace and project visibility [here](https://docs.gitlab.com/ee/user/public_access.html)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"visibility_level"},"LDAP_SYNC_STATUS":{"type":"TEXT","index":16,"name":"LDAP_SYNC_STATUS","comment":null,"display_name":"ldap_sync_status"},"LDAP_SYNC_ERROR":{"type":"TEXT","index":17,"name":"ldap_sync_error","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_error"},"LDAP_SYNC_LAST_UPDATE_AT":{"type":"TIMESTAMP_NTZ","index":18,"name":"ldap_sync_last_update_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_update_at"},"LDAP_SYNC_LAST_SUCCESSFUL_UPDATE_AT":{"type":"TIMESTAMP_NTZ","index":19,"name":"ldap_sync_last_successful_update_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_successful_update_at"},"LDAP_SYNC_LAST_SYNC_AT":{"type":"TIMESTAMP_NTZ","index":20,"name":"ldap_sync_last_sync_at","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ldap_sync_last_sync_at"},"LFS_ENABLED":{"type":"BOOLEAN","index":21,"name":"lfs_enabled","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"lfs_enabled"},"PARENT_ID":{"type":"NUMBER","index":22,"name":"parent_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"parent_id"},"SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":23,"name":"SHARED_RUNNERS_ENABLED","comment":null,"display_name":"shared_runners_enabled"},"SHARED_RUNNERS_MINUTES_LIMIT":{"type":"NUMBER","index":24,"name":"shared_runners_minutes_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"shared_runners_minutes_limit"},"EXTRA_SHARED_RUNNERS_MINUTES_LIMIT":{"type":"NUMBER","index":25,"name":"extra_shared_runners_minutes_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"extra_shared_runners_minutes_limit"},"REPOSITORY_SIZE_LIMIT":{"type":"NUMBER","index":26,"name":"repository_size_limit","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"repository_size_limit"},"DOES_REQUIRE_TWO_FACTOR_AUTHENTICATION":{"type":"BOOLEAN","index":27,"name":"does_require_two_factor_authentication","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"does_require_two_factor_authentication"},"TWO_FACTOR_GRACE_PERIOD":{"type":"NUMBER","index":28,"name":"two_factor_grace_period","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"two_factor_grace_period"},"PROJECT_CREATION_LEVEL":{"type":"NUMBER","index":29,"name":"project_creation_level","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_creation_level"},"PUSH_RULE_ID":{"type":"NUMBER","index":30,"name":"push_rule_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"push_rule_id"},"CREATOR_ID":{"type":"NUMBER","index":31,"name":"creator_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"creator_id"},"NAMESPACE_CREATOR_IS_BLOCKED":{"type":"BOOLEAN","index":32,"name":"namespace_creator_is_blocked","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"namespace_creator_is_blocked"},"ULTIMATE_PARENT_NAMESPACE_ID":{"type":"NUMBER","index":33,"name":"ultimate_parent_namespace_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ultimate_parent_namespace_id"},"GITLAB_PLAN_ID":{"type":"NUMBER","index":34,"name":"gitlab_plan_id","comment":null,"description":"The **plan_id** associated with the namespace's subscription. This can be inheritted from the namespaces's ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"gitlab_plan_id"},"GITLAB_PLAN_TITLE":{"type":"TEXT","index":35,"name":"gitlab_plan_title","comment":null,"description":"Whether or not the namespace associated with the project is subscribed to a paid plan. This can be inheritted from the namespaces's ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"gitlab_plan_title"},"GITLAB_PLAN_IS_PAID":{"type":"BOOLEAN","index":36,"name":"gitlab_plan_is_paid","comment":null,"description":"Whether or not the namespace associated with the project is subscribed to a paid plan. This can be inheritted from the namespaces's ultimate parent.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"gitlab_plan_is_paid"},"DIM_PRODUCT_TIER_ID":{"type":"TEXT","index":37,"name":"DIM_PRODUCT_TIER_ID","comment":null,"display_name":"dim_product_tier_id"},"CURRENT_MEMBER_COUNT":{"type":"NUMBER","index":38,"name":"current_member_count","comment":null,"description":"Do not use this count, it is incorrect. Use [gitlab_dotcom_memberships](https://dbt.gitlabdata.com/#!/model/model.gitlab_snowflake.gitlab_dotcom_memberships) for member counts.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_member_count"},"CURRENT_PROJECT_COUNT":{"type":"NUMBER","index":39,"name":"current_project_count","comment":null,"description":"The number of projects that are presently associated with the namespace.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"current_project_count"},"HAS_CODE_SUGGESTIONS_ENABLED":{"type":"BOOLEAN","index":40,"name":"has_code_suggestions_enabled","comment":null,"description":"Boolean flag set to True if the namespace has code suggestions enabled. This appears as `code_suggestions` in the gitlab.com db `namespace_settings` table.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"has_code_suggestions_enabled"},"CREATED_BY":{"type":"TEXT","index":41,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":42,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":43,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":44,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":45,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":46,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dap_sync_status":{"name":"dap_sync_status","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dap_sync_status"},"dim_product_tier_id,":{"name":"dim_product_tier_id,","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_product_tier_id,"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:41UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":2379771904,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_namespace","raw_sql":"$21","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_namespace","model.gitlab_snowflake.prep_namespace"]},"config":{"enabled":true,"alias":null,"schema":"common","database":"PROD","tags":["product"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_namespace"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_namespace.sql","original_file_path":"models/common/dimensions_shared/dim_namespace.sql","name":"dim_namespace","alias":"dim_namespace","checksum":{"name":"sha256","checksum":"d3c3eb2c87eefef5b6eb267206f557d6518f148b908434d5b6818ccf512de269"},"tags":["product"],"refs":[["prep_namespace"],["prep_namespace"]],"sources":[],"metrics":[],"description":"Includes all columns from the namespaces base model. The plan columns in this table (gitlab_plan_id, gitlab_plan_title, gitlab_plan_is_paid) reference the plan that is inheritted from the namespace's ultimate parent.\n\nThis table add a count of members and projects currently associated with the namespace.\nBoolean columns: gitlab_plan_is_paid, namespace_is_internal, namespace_is_ultimate_parent\n\nA NULL namespace type defaults to \"Individual\".\nThis table joins to common product tier dimension via dim_product_tier_id to get the current product tier.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_namespace.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product"]},"created_at":1689033751.1079912,"compiled_sql":"$22","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_namespace","label":"dim_namespace"},{"metadata":{"type":"BASE TABLE","schema":"COMMON_MART_PRODUCT","name":"RPT_GAINSIGHT_METRICS_MONTHLY_PAID_SELF_MANAGED","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DIM_SUBSCRIPTION_ID":{"type":"TEXT","index":1,"name":"dim_subscription_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id"},"DIM_SUBSCRIPTION_ID_ORIGINAL":{"type":"TEXT","index":2,"name":"dim_subscription_id_original","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_subscription_id_original"},"DIM_BILLING_ACCOUNT_ID":{"type":"TEXT","index":3,"name":"dim_billing_account_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"dim_billing_account_id"},"SNAPSHOT_MONTH":{"type":"DATE","index":4,"name":"snapshot_month","comment":null,"description":"First day of the month in which data is being reported.","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_month"},"SNAPSHOT_DATE_ID":{"type":"NUMBER","index":5,"name":"snapshot_date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":["tdf","common","gainsight"],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"}],"display_name":"snapshot_date_id"},"SEAT_LINK_REPORT_DATE":{"type":"DATE","index":6,"name":"SEAT_LINK_REPORT_DATE","comment":null,"display_name":"seat_link_report_date"},"SEAT_LINK_REPORT_DATE_ID":{"type":"NUMBER","index":7,"name":"SEAT_LINK_REPORT_DATE_ID","comment":null,"display_name":"seat_link_report_date_id"},"DIM_PING_INSTANCE_ID":{"type":"TEXT","index":8,"name":"DIM_PING_INSTANCE_ID","comment":null,"display_name":"dim_ping_instance_id"},"PING_CREATED_AT":{"type":"TIMESTAMP_NTZ","index":9,"name":"PING_CREATED_AT","comment":null,"display_name":"ping_created_at"},"PING_CREATED_DATE_ID":{"type":"NUMBER","index":10,"name":"PING_CREATED_DATE_ID","comment":null,"display_name":"ping_created_date_id"},"DIM_INSTANCE_ID":{"type":"TEXT","index":11,"name":"DIM_INSTANCE_ID","comment":null,"display_name":"dim_instance_id"},"INSTANCE_TYPE":{"type":"TEXT","index":12,"name":"instance_type","comment":null,"description":"Type of instance (Production/Non-Production)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"instance_type"},"INCLUDED_IN_HEALTH_MEASURES_STR":{"type":"TEXT","index":13,"name":"included_in_health_measures_str","comment":null,"description":"This field is manually populated in Gainsight by CSMs, and indicates whether an installation is included in health measures or has opted out.\nThis field is most useful when a customer has multiple production installations. More details can be found on \n[this issue](https://gitlab.com/gitlab-data/analytics/-/issues/15523#note_1261452392).","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"included_in_health_measures_str"},"HOSTNAME":{"type":"TEXT","index":14,"name":"HOSTNAME","comment":null,"display_name":"hostname"},"DIM_LICENSE_ID":{"type":"NUMBER","index":15,"name":"DIM_LICENSE_ID","comment":null,"display_name":"dim_license_id"},"LICENSE_MD5":{"type":"TEXT","index":16,"name":"LICENSE_MD5","comment":null,"display_name":"license_md5"},"CLEANED_VERSION":{"type":"TEXT","index":17,"name":"CLEANED_VERSION","comment":null,"display_name":"cleaned_version"},"DIM_LOCATION_COUNTRY_ID":{"type":"NUMBER","index":18,"name":"DIM_LOCATION_COUNTRY_ID","comment":null,"display_name":"dim_location_country_id"},"INSTALLATION_CREATION_DATE":{"type":"TIMESTAMP_NTZ","index":19,"name":"installation_creation_date","comment":null,"description":"Based off of the [`installation_creation_date`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20230228110448_installation_creation_date.yml) \nService Ping metric. For installations where the root user (id = 1) is not deleted, it returns the root user creation date. For installations where the root user \nis deleted, it returns the earliest available user creation date.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"installation_creation_date"},"DIM_INSTALLATION_ID":{"type":"TEXT","index":20,"name":"dim_installation_id","comment":null,"description":"The unique identifier of the installation, easily joined to `dim_installation`. This id is the combination of `dim_host_id` and `dim_instance_id` and is considered the unique identifier of the installation for reporting and analysis","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_installation_id"},"LICENSE_UTILIZATION":{"type":"NUMBER","index":21,"name":"license_utilization","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_utilization"},"BILLABLE_USER_COUNT":{"type":"NUMBER","index":22,"name":"billable_user_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"billable_user_count"},"ACTIVE_USER_COUNT":{"type":"NUMBER","index":23,"name":"ACTIVE_USER_COUNT","comment":null,"display_name":"active_user_count"},"MAX_HISTORICAL_USER_COUNT":{"type":"NUMBER","index":24,"name":"max_historical_user_count","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"max_historical_user_count"},"LICENSE_USER_COUNT":{"type":"NUMBER","index":25,"name":"LICENSE_USER_COUNT","comment":null,"display_name":"license_user_count"},"UMAU_28_DAYS_USER":{"type":"NUMBER","index":26,"name":"umau_28_days_user","comment":null,"description":"Number of distinct users who have generated a manage event by month. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180814_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"umau_28_days_user"},"ACTION_MONTHLY_ACTIVE_USERS_PROJECT_REPO_28_DAYS_USER":{"type":"NUMBER","index":27,"name":"action_monthly_active_users_project_repo_28_days_user","comment":null,"description":"Monthly count of unique users that made an Action on a valid [Target](https://docs.gitlab.com/ee/api/events.html#target-types) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateaction_monthly_active_users_project_repo))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"action_monthly_active_users_project_repo_28_days_user"},"MERGE_REQUESTS_28_DAYS_USER":{"type":"NUMBER","index":28,"name":"merge_requests_28_days_user","comment":null,"description":"Monthly count of unique users making merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_28_days_user"},"PROJECTS_WITH_REPOSITORIES_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":29,"name":"projects_with_repositories_enabled_28_days_user","comment":null,"description":"Monthly count of unique users that created projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_28_days_user"},"COMMIT_COMMENT_ALL_TIME_EVENT":{"type":"NUMBER","index":30,"name":"commit_comment_all_time_event","comment":null,"description":"All-time count commit comments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscommit_comment))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"commit_comment_all_time_event"},"SOURCE_CODE_PUSHES_ALL_TIME_EVENT":{"type":"NUMBER","index":31,"name":"source_code_pushes_all_time_event","comment":null,"description":"All-time count of source code pushes ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssource_code_pushes))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"source_code_pushes_all_time_event"},"CI_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":32,"name":"ci_pipelines_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":33,"name":"ci_internal_pipelines_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_28_days_user"},"CI_BUILDS_28_DAYS_USER":{"type":"NUMBER","index":34,"name":"ci_builds_28_days_user","comment":null,"description":"Monthly count of unique users running CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_builds))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_28_days_user"},"CI_BUILDS_ALL_TIME_USER":{"type":"NUMBER","index":35,"name":"ci_builds_all_time_user","comment":null,"description":"All-time count of unique users running CI builds ([source]()https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_builds)","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_user"},"CI_BUILDS_ALL_TIME_EVENT":{"type":"NUMBER","index":36,"name":"ci_builds_all_time_event","comment":null,"description":"All-time count of CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_builds))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_builds_all_time_event"},"CI_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":37,"name":"ci_runners_all_time_event","comment":null,"description":"All-time count of CI Runners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_runners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_runners_all_time_event"},"AUTO_DEVOPS_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":38,"name":"auto_devops_enabled_all_time_event","comment":null,"description":"All-time count of Projects with auto DevOps template enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsauto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled_all_time_event"},"GITLAB_SHARED_RUNNERS_ENABLED":{"type":"BOOLEAN","index":39,"name":"gitlab_shared_runners_enabled","comment":null,"description":"Flags whether shared runners are enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitlab_shared_runners_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitlab_shared_runners_enabled"},"CONTAINER_REGISTRY_ENABLED":{"type":"BOOLEAN","index":40,"name":"container_registry_enabled","comment":null,"description":"Flags whether container registry is enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#container_registry_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_registry_enabled"},"TEMPLATE_REPOSITORIES_ALL_TIME_EVENT":{"type":"NUMBER","index":41,"name":"template_repositories_all_time_event","comment":null,"description":"All-time total of custom project templates and projects without namespaces ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstemplate_repositories))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"template_repositories_all_time_event"},"CI_PIPELINE_CONFIG_REPOSITORY_28_DAYS_USER":{"type":"NUMBER","index":42,"name":"ci_pipeline_config_repository_28_days_user","comment":null,"description":"Monthly count of unique users triggering pipelines from templates in repository ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyverifyci_pipeline_config_repository))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipeline_config_repository_28_days_user"},"USER_UNIQUE_USERS_ALL_SECURE_SCANNERS_28_DAYS_USER":{"type":"NUMBER","index":43,"name":"user_unique_users_all_secure_scanners_28_days_user","comment":null,"description":"Monthly count of unique users running secure CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_unique_users_all_secure_scanners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_unique_users_all_secure_scanners_28_days_user"},"USER_SAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":44,"name":"user_sast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_sast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_sast_jobs_28_days_user"},"USER_DAST_JOBS_28_DAYS_USER":{"type":"NUMBER","index":45,"name":"user_dast_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dast_jobs_28_days_user"},"USER_DEPENDENCY_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":46,"name":"user_dependency_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running dependency scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_dependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_dependency_scanning_jobs_28_days_user"},"USER_LICENSE_MANAGEMENT_JOBS_28_DAYS_USER":{"type":"NUMBER","index":47,"name":"user_license_management_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running license management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_license_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_license_management_jobs_28_days_user"},"USER_SECRET_DETECTION_JOBS_28_DAYS_USER":{"type":"NUMBER","index":48,"name":"user_secret_detection_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running secret detection CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_secret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_secret_detection_jobs_28_days_user"},"USER_CONTAINER_SCANNING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":49,"name":"user_container_scanning_jobs_28_days_user","comment":null,"description":"Monthly count of unique users running container scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlysecureuser_container_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_container_scanning_jobs_28_days_user"},"OBJECT_STORE_PACKAGES_ENABLED":{"type":"BOOLEAN","index":50,"name":"object_store_packages_enabled","comment":null,"description":"Flags whether Object Storage is enabled for Uploads ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#object_storepackagesenabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"object_store_packages_enabled"},"PROJECTS_WITH_PACKAGES_ALL_TIME_EVENT":{"type":"NUMBER","index":51,"name":"projects_with_packages_all_time_event","comment":null,"description":"All-time count of projects with package registry configured ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_packages_all_time_event"},"PROJECTS_WITH_PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":52,"name":"projects_with_packages_28_days_event","comment":null,"description":"Projects with package registry enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181055_projects_with_packages.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"projects_with_packages_28_days_event"},"DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":53,"name":"deployments_28_days_user","comment":null,"description":"Monthly count of unique users triggering deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasedeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_user"},"RELEASES_28_DAYS_USER":{"type":"NUMBER","index":54,"name":"releases_28_days_user","comment":null,"description":"Monthly count of unique users authoring releases ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyreleasereleases))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"releases_28_days_user"},"EPICS_28_DAYS_USER":{"type":"NUMBER","index":55,"name":"epics_28_days_user","comment":null,"description":"Monthly count of unique users authoring epics ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_28_days_user"},"ISSUES_28_DAYS_USER":{"type":"NUMBER","index":56,"name":"issues_28_days_user","comment":null,"description":"Monthly count of unique users authoring issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_28_days_user"},"CI_INTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":57,"name":"ci_internal_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in GitLab repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_internal_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_internal_pipelines_all_time_event"},"CI_EXTERNAL_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":58,"name":"ci_external_pipelines_all_time_event","comment":null,"description":"All-time count of pipelines in external repositories ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsci_external_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_external_pipelines_all_time_event"},"MERGE_REQUESTS_ALL_TIME_EVENT":{"type":"NUMBER","index":59,"name":"merge_requests_all_time_event","comment":null,"description":"All-time count of Merge Requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsmerge_requests))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_all_time_event"},"TODOS_ALL_TIME_EVENT":{"type":"NUMBER","index":60,"name":"todos_all_time_event","comment":null,"description":"All-time count of ToDos created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countstodos))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"todos_all_time_event"},"EPICS_ALL_TIME_EVENT":{"type":"NUMBER","index":61,"name":"epics_all_time_event","comment":null,"description":"All-time count of Epics created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_all_time_event"},"ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":62,"name":"issues_all_time_event","comment":null,"description":"All-time count of Issues created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsissues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_all_time_event"},"PROJECTS_ALL_TIME_EVENT":{"type":"NUMBER","index":63,"name":"projects_all_time_event","comment":null,"description":"All-time count of Projects created ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_all_time_event"},"DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":64,"name":"deployments_28_days_event","comment":null,"description":"Monthly count of deployments ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlydeployments))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"deployments_28_days_event"},"PACKAGES_28_DAYS_EVENT":{"type":"NUMBER","index":65,"name":"packages_28_days_event","comment":null,"description":"Monthly count of Packages ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#counts_monthlypackages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"packages_28_days_event"},"SAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":66,"name":"sast_jobs_all_time_event","comment":null,"description":"All-time count of SAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"sast_jobs_all_time_event"},"DAST_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":67,"name":"dast_jobs_all_time_event","comment":null,"description":"All-time count of DAST CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdast_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dast_jobs_all_time_event"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":68,"name":"dependency_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Dependency Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsdependency_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dependency_scanning_jobs_all_time_event"},"LICENSE_MANAGEMENT_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":69,"name":"license_management_jobs_all_time_event","comment":null,"description":"All-time count of License Management CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countslicense_management_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"license_management_jobs_all_time_event"},"SECRET_DETECTION_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":70,"name":"secret_detection_jobs_all_time_event","comment":null,"description":"All-time count of Secret Detectionâ CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countssecret_detection_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"secret_detection_jobs_all_time_event"},"CONTAINER_SCANNING_JOBS_ALL_TIME_EVENT":{"type":"NUMBER","index":71,"name":"container_scanning_jobs_all_time_event","comment":null,"description":"All-time count of Container Scanning CI builds ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countscontainer_scanning_jobs))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"container_scanning_jobs_all_time_event"},"PROJECTS_JENKINS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":72,"name":"projects_jenkins_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jenkins ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jenkins_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jenkins_active_all_time_event"},"PROJECTS_BAMBOO_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":73,"name":"projects_bamboo_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Bamboo CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_bamboo_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_bamboo_active_all_time_event"},"PROJECTS_JIRA_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":74,"name":"projects_jira_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_all_time_event"},"PROJECTS_DRONE_CI_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":75,"name":"projects_drone_ci_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for Drone CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_drone_ci_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_drone_ci_active_all_time_event"},"PROJECTS_GITHUB_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":76,"name":"projects_github_active_all_time_event","comment":null,"description":"All-time count of projects with active integrations for GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_github_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_github_active_all_time_event"},"PROJECTS_JIRA_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":77,"name":"projects_jira_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Server ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_server_active_all_time_event"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":78,"name":"projects_jira_dvcs_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud (DVCS Connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_all_time_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_EVENT":{"type":"NUMBER","index":79,"name":"projects_with_repositories_enabled_all_time_event","comment":null,"description":"All-time count of projects with repositories enabled ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_with_repositories_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_with_repositories_enabled_all_time_event"},"PROTECTED_BRANCHES_ALL_TIME_EVENT":{"type":"NUMBER","index":80,"name":"protected_branches_all_time_event","comment":null,"description":"All-time count of protected branches ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprotected_branches))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"protected_branches_all_time_event"},"REMOTE_MIRRORS_ALL_TIME_EVENT":{"type":"NUMBER","index":81,"name":"remote_mirrors_all_time_event","comment":null,"description":"All-time count of remote mirrors ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsremote_mirrors))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"remote_mirrors_all_time_event"},"PROJECTS_ENFORCING_CODE_OWNER_APPROVAL_28_DAYS_USER":{"type":"NUMBER","index":82,"name":"projects_enforcing_code_owner_approval_28_days_user","comment":null,"description":"Monthly count of unique users creating projects that require code owner approval ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreateprojects_enforcing_code_owner_approval))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_enforcing_code_owner_approval_28_days_user"},"PROJECT_CLUSTERS_ENABLED_28_DAYS_USER":{"type":"NUMBER","index":83,"name":"project_clusters_enabled_28_days_user","comment":null,"description":"Monthly count of unique users using GitLab Managed enabled clusters attached to projects ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyconfigureproject_clusters_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_clusters_enabled_28_days_user"},"ANALYTICS_28_DAYS_USER":{"type":"NUMBER","index":84,"name":"analytics_28_days_user","comment":null,"description":"The number of unique users viewing any [Analytics page](https://docs.gitlab.com/ee/user/analytics/) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#manage-manageoptimize---smau-gmau---mau-viewing-analytics-features))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_28_days_user"},"ISSUES_EDIT_28_DAYS_USER":{"type":"NUMBER","index":85,"name":"issues_edit_28_days_user","comment":null,"description":"Number of unique users interacting with an issue (open, close, reopen, adjust label, adjust milestone, adjust weight, comment) ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#plan-planproject-management---smau-paid-gmau---mau-interacting-with-issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"issues_edit_28_days_user"},"USER_PACKAGES_28_DAYS_USER":{"type":"NUMBER","index":86,"name":"user_packages_28_days_user","comment":null,"description":"The maximum distinct count of users who published a package to the Package Registry. In the future, this value will the distinct count of users across all Package AMAUs ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#packagepackage---smau-gmau---count-of-users-publishing-packages))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"user_packages_28_days_user"},"TERRAFORM_STATE_API_28_DAYS_USER":{"type":"NUMBER","index":87,"name":"terraform_state_api_28_days_user","comment":null,"description":"Monthly active users of GitLab Managed Terraform State ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#configureconfigure---smau-gmau---mau-of-gitlab-managed-terraform-state))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"terraform_state_api_28_days_user"},"INCIDENT_MANAGEMENT_28_DAYS_USER":{"type":"NUMBER","index":88,"name":"incident_management_28_days_user","comment":null,"description":"Unique users that interact with alerts or incidents ([source](https://about.gitlab.com/handbook/product/stage-and-group-performance-indicators/#monitormonitor---smau-gmau---unique-users-that-interact-with-alerts-and-incidents))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"incident_management_28_days_user"},"AUTO_DEVOPS_ENABLED":{"type":"BOOLEAN","index":89,"name":"auto_devops_enabled","comment":null,"description":"Flags whether auto DevOps is enabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#instance_auto_devops_enabled))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"auto_devops_enabled"},"GITALY_CLUSTERS_INSTANCE":{"type":"NUMBER","index":90,"name":"gitaly_clusters_instance","comment":null,"description":"Number of GitLab Managed clusters both enabled and disabled on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#gitalyclusters))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"gitaly_clusters_instance"},"EPICS_DEEPEST_RELATIONSHIP_LEVEL_INSTANCE":{"type":"NUMBER","index":91,"name":"epics_deepest_relationship_level_instance","comment":null,"description":"Numeric level of the deepest relationship of all epics on an instance ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsepics_deepest_relationship_level))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_deepest_relationship_level_instance"},"CLUSTERS_APPLICATIONS_CILIUM_ALL_TIME_EVENT":{"type":"NUMBER","index":92,"name":"clusters_applications_cilium_all_time_event","comment":null,"description":"All-time total of GitLab Managed clusters with GitLab Managed App:Cilium installed ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsclusters_applications_cilium))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"clusters_applications_cilium_all_time_event"},"NETWORK_POLICY_FORWARDS_ALL_TIME_EVENT":{"type":"NUMBER","index":93,"name":"network_policy_forwards_all_time_event","comment":null,"description":"Cumulative count of packets forwarded by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_forwards))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_forwards_all_time_event"},"NETWORK_POLICY_DROPS_ALL_TIME_EVENT":{"type":"NUMBER","index":94,"name":"network_policy_drops_all_time_event","comment":null,"description":"Cumulative count of packets dropped by Cilium (Container Network Security) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsnetwork_policy_drops))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"network_policy_drops_all_time_event"},"REQUIREMENTS_WITH_TEST_REPORT_ALL_TIME_EVENT":{"type":"NUMBER","index":95,"name":"requirements_with_test_report_all_time_event","comment":null,"description":"All-time count of requirements having a test report ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirements_with_test_report))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirements_with_test_report_all_time_event"},"REQUIREMENT_TEST_REPORTS_CI_ALL_TIME_EVENT":{"type":"NUMBER","index":96,"name":"requirement_test_reports_ci_all_time_event","comment":null,"description":"All-time count of requirement test reports created from CI ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsrequirement_test_reports_ci))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"requirement_test_reports_ci_all_time_event"},"PROJECTS_IMPORTED_FROM_GITHUB_ALL_TIME_EVENT":{"type":"NUMBER","index":97,"name":"projects_imported_from_github_all_time_event","comment":null,"description":"All-time count of project imported from GitHub ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_imported_from_github))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_imported_from_github_all_time_event"},"PROJECTS_JIRA_CLOUD_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":98,"name":"projects_jira_cloud_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Cloud ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_cloud_active_all_time_event"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":99,"name":"projects_jira_dvcs_server_active_all_time_event","comment":null,"description":"All-time count of active integrations with Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_all_time_event"},"SERVICE_DESK_ISSUES_ALL_TIME_EVENT":{"type":"NUMBER","index":100,"name":"service_desk_issues_all_time_event","comment":null,"description":"All-time count of service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#countsservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_all_time_event"},"CI_PIPELINES_ALL_TIME_USER":{"type":"NUMBER","index":101,"name":"ci_pipelines_all_time_user","comment":null,"description":"All-time count of distinct Users triggering Total pipelines ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stageverifyci_pipelines))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_pipelines_all_time_user"},"SERVICE_DESK_ISSUES_28_DAYS_USER":{"type":"NUMBER","index":102,"name":"service_desk_issues_28_days_user","comment":null,"description":"Monthly count of users opening service desk issues ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanservice_desk_issues))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"service_desk_issues_28_days_user"},"PROJECTS_JIRA_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":103,"name":"projects_jira_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_active_28_days_user"},"PROJECTS_JIRA_DVCS_CLOUD_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":104,"name":"projects_jira_dvcs_cloud_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Cloud (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_cloud_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_cloud_active_28_days_user"},"PROJECTS_JIRA_DVCS_SERVER_ACTIVE_28_DAYS_USER":{"type":"NUMBER","index":105,"name":"projects_jira_dvcs_server_active_28_days_user","comment":null,"description":"Monthly count of users interacting with active integrations of Jira Software (DVCS connector) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlyplanprojects_jira_dvcs_server_active))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"projects_jira_dvcs_server_active_28_days_user"},"MERGE_REQUESTS_WITH_REQUIRED_CODE_OWNERS_28_DAYS_USER":{"type":"NUMBER","index":106,"name":"merge_requests_with_required_code_owners_28_days_user","comment":null,"description":"Monthly count of users creating merge requests with required code owners ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlycreatemerge_requests_with_required_codeowners))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"merge_requests_with_required_code_owners_28_days_user"},"ANALYTICS_VALUE_STREAM_28_DAYS_EVENT":{"type":"NUMBER","index":107,"name":"analytics_value_stream_28_days_event","comment":null,"description":"Monthly count of visits to [Value Stream Analytics](https://about.gitlab.com/stages-devops-lifecycle/value-stream-analytics/) ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersanalyticsg_analytics_valuestream_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"analytics_value_stream_28_days_event"},"CODE_REVIEW_USER_APPROVE_MR_28_DAYS_USER":{"type":"NUMBER","index":108,"name":"code_review_user_approve_mr_28_days_user","comment":null,"description":"Monthly count of users approving merge requests ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_counterscode_reviewi_code_review_user_approve_mr_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"code_review_user_approve_mr_28_days_user"},"EPICS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":109,"name":"epics_usage_28_days_user","comment":null,"description":"Monthly users count for epics_usage ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersepics_usageepics_usage_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"epics_usage_28_days_user"},"CI_TEMPLATES_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":110,"name":"ci_templates_usage_28_days_event","comment":null,"description":"Monthly count of CI templates ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersci_templatesci_templates_total_unique_counts_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"ci_templates_usage_28_days_event"},"PROJECT_MANAGEMENT_ISSUE_MILESTONE_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":111,"name":"project_management_issue_milestone_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs milestone ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_milestone_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_milestone_changed_28_days_user"},"PROJECT_MANAGEMENT_ISSUE_ITERATION_CHANGED_28_DAYS_USER":{"type":"NUMBER","index":112,"name":"project_management_issue_iteration_changed_28_days_user","comment":null,"description":"Monthly count of MAU changing an issueâs iteration ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#redis_hll_countersissues_editg_project_management_issue_iteration_changed_monthly))","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"project_management_issue_iteration_changed_28_days_user"},"PROTECTED_BRANCHES_28_DAYS_USER":{"type":"NUMBER","index":113,"name":"protected_branches_28_days_user","comment":null,"description":"Count of users creating projects with repositories making use of at least one protected branch in last 28 days. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182051_protected_branches.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"protected_branches_28_days_user"},"CI_CD_LEAD_TIME_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":114,"name":"ci_cd_lead_time_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics lead time tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126091206_p_analytics_ci_cd_lead_time_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"ci_cd_lead_time_usage_28_days_event"},"CI_CD_DEPLOYMENT_FREQUENCY_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":115,"name":"ci_cd_deployment_frequency_usage_28_days_event","comment":null,"description":"Count of unique visits to the project level CI CD Analytics deployment frequency tab. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20211126090835_p_analytics_ci_cd_deployment_frequency_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"ci_cd_deployment_frequency_usage_28_days_event"},"PROJECTS_WITH_REPOSITORIES_ENABLED_ALL_TIME_USER":{"type":"NUMBER","index":116,"name":"projects_with_repositories_enabled_all_time_user","comment":null,"description":"Count of users creating projects that have a matching Git repository, result of a Git push action. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216182023_projects_with_repositories_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"projects_with_repositories_enabled_all_time_user"},"API_FUZZING_JOBS_USAGE_28_DAYS_USER":{"type":"NUMBER","index":117,"name":"api_fuzzing_jobs_usage_28_days_user","comment":null,"description":"Count of distinct users creating API Fuzzing jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180355_user_api_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"api_fuzzing_jobs_usage_28_days_user"},"COVERAGE_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":118,"name":"coverage_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 coverage-guided Fuzz Testing job.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180359_coverage_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"coverage_fuzzing_pipeline_usage_28_days_event"},"API_FUZZING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":119,"name":"api_fuzzing_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 API Fuzzing Testing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180401_api_fuzzing_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"api_fuzzing_pipeline_usage_28_days_event"},"CONTAINER_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":120,"name":"container_scanning_pipeline_usage_28_days_event","comment":null,"description":"Pipelines containing a Container Scanning job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175507_container_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"container_scanning_pipeline_usage_28_days_event"},"DEPENDENCY_SCANNING_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":121,"name":"dependency_scanning_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines with successful Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175226_dependency_scanning_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"dependency_scanning_pipeline_usage_28_days_event"},"SAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":122,"name":"sast_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 SAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182129_sast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"sast_pipeline_usage_28_days_event"},"SECRET_DETECTION_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":123,"name":"secret_detection_pipeline_usage_28_days_event","comment":null,"description":"Counts of Pipelines that have at least 1 Secret Detection job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216182131_secret_detection_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"secret_detection_pipeline_usage_28_days_event"},"DAST_PIPELINE_USAGE_28_DAYS_EVENT":{"type":"NUMBER","index":124,"name":"dast_pipeline_usage_28_days_event","comment":null,"description":"Count of pipelines that have at least 1 DAST job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216175618_dast_pipeline.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"dast_pipeline_usage_28_days_event"},"COVERAGE_FUZZING_JOBS_28_DAYS_USER":{"type":"NUMBER","index":125,"name":"coverage_fuzzing_jobs_28_days_user","comment":null,"description":"Users who run a coverage fuzzing job. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216183817_user_coverage_fuzzing_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"coverage_fuzzing_jobs_28_days_user"},"ENVIRONMENTS_ALL_TIME_EVENT":{"type":"NUMBER","index":126,"name":"environments_all_time_event","comment":null,"description":"Total available and stopped environments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181914_environments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"environments_all_time_event"},"FEATURE_FLAGS_ALL_TIME_EVENT":{"type":"NUMBER","index":127,"name":"feature_flags_all_time_event","comment":null,"description":"Number of feature flag toggles. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181249_feature_flags.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"feature_flags_all_time_event"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":128,"name":"successful_deployments_28_days_event","comment":null,"description":"Total successful deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181923_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"successful_deployments_28_days_event"},"FAILED_DEPLOYMENTS_28_DAYS_EVENT":{"type":"NUMBER","index":129,"name":"failed_deployments_28_days_event","comment":null,"description":"Total failed deployments. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181924_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"failed_deployments_28_days_event"},"PROJECTS_COMPLIANCE_FRAMEWORK_ALL_TIME_EVENT":{"type":"NUMBER","index":130,"name":"projects_compliance_framework_all_time_event","comment":null,"description":"Number of projects labeled with a compliance framework label. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216180825_projects_with_compliance_framework.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"projects_compliance_framework_all_time_event"},"COMMIT_CI_CONFIG_FILE_28_DAYS_USER":{"type":"NUMBER","index":131,"name":"commit_ci_config_file_28_days_user","comment":null,"description":"Monthly unique user count doing commits which contains the CI config file.[link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216184303_o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"commit_ci_config_file_28_days_user"},"VIEW_AUDIT_ALL_TIME_USER":{"type":"NUMBER","index":132,"name":"view_audit_all_time_user","comment":null,"description":"Unique users who have viewed audit events. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216183906_g_compliance_audit_events.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"view_audit_all_time_user"},"DEPENDENCY_SCANNING_JOBS_ALL_TIME_USER":{"type":"NUMBER","index":133,"name":"dependency_scanning_jobs_all_time_user","comment":null,"description":"Total number of users running Dependency Scanning jobs. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_all/20210216175216_user_dependency_scanning_jobs.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"dependency_scanning_jobs_all_time_user"},"ANALYTICS_DEVOPS_ADOPTION_ALL_TIME_USER":{"type":"NUMBER","index":134,"name":"analytics_devops_adoption_all_time_user","comment":null,"description":"Unique users viewing analytics devops adoption. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210423005644_i_analytics_dev_ops_adoption.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"analytics_devops_adoption_all_time_user"},"PROJECTS_IMPORTED_ALL_TIME_EVENT":{"type":"NUMBER","index":135,"name":"projects_imported_all_time_event","comment":null,"description":"Number of projects imported. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210514141520_project_imports_total.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"projects_imported_all_time_event"},"PREFERENCES_SECURITY_DASHBOARD_28_DAYS_USER":{"type":"NUMBER","index":136,"name":"preferences_security_dashboard_28_days_user","comment":null,"description":"Users who set personal preference to see Security Dashboard on Group\n information page. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/counts_28d/20210216182209_user_preferences_group_overview_security_dashboard.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"preferences_security_dashboard_28_days_user"},"WEB_IDE_EDIT_28_DAYS_USER":{"type":"NUMBER","index":137,"name":"web_ide_edit_28_days_user","comment":null,"description":"Number of unique users per month who edited a file from any web editor. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216180327_action_monthly_active_users_ide_edit.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"web_ide_edit_28_days_user"},"AUTO_DEVOPS_PIPELINES_ALL_TIME_EVENT":{"type":"NUMBER","index":138,"name":"auto_devops_pipelines_all_time_event","comment":null,"description":"Total pipelines from an Auto DevOps template. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216175516_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"auto_devops_pipelines_all_time_event"},"PROJECTS_PROMETHEUS_ACTIVE_ALL_TIME_EVENT":{"type":"NUMBER","index":139,"name":"projects_prometheus_active_all_time_event","comment":null,"description":"Count of projects with active integrations for Prometheus. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180931_projects_prometheus_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"projects_prometheus_active_all_time_event"},"PROMETHEUS_ENABLED":{"type":"BOOLEAN","index":140,"name":"prometheus_enabled","comment":null,"description":"Whether the bundled Prometheus is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124912_prometheus_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"prometheus_enabled"},"PROMETHEUS_METRICS_ENABLED":{"type":"BOOLEAN","index":141,"name":"prometheus_metrics_enabled","comment":null,"description":"Whether Prometheus Metrics endpoint is enabled. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/settings/20210204124914_prometheus_metrics_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"prometheus_metrics_enabled"},"GROUP_SAML_ENABLED":{"type":"BOOLEAN","index":142,"name":"group_saml_enabled","comment":null,"description":"Has the instance enabled Group SAML SSO `https://docs.gitlab.com/ee/user/group/saml_sso/`\n on at least 1 group? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180813_group_saml_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"group_saml_enabled"},"JIRA_ISSUE_IMPORTS_ALL_TIME_EVENT":{"type":"NUMBER","index":143,"name":"jira_issue_imports_all_time_event","comment":null,"description":"Count of projects imported from Jira. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216180654_jira.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"jira_issue_imports_all_time_event"},"AUTHOR_EPIC_ALL_TIME_USER":{"type":"NUMBER","index":144,"name":"author_epic_all_time_user","comment":null,"description":"Count distinct author ids from epics. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181134_epics.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"author_epic_all_time_user"},"AUTHOR_ISSUE_ALL_TIME_USER":{"type":"NUMBER","index":145,"name":"author_issue_all_time_user","comment":null,"description":"Count of users creating Issues. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210216181115_issues.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"author_issue_all_time_user"},"FAILED_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":146,"name":"failed_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a failed deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181937_failed_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"failed_deployments_28_days_user"},"SUCCESSFUL_DEPLOYMENTS_28_DAYS_USER":{"type":"NUMBER","index":147,"name":"successful_deployments_28_days_user","comment":null,"description":"Disinct users who initiated a successful deployment. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216181941_successful_deployments.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"successful_deployments_28_days_user"},"GEO_ENABLED":{"type":"BOOLEAN","index":148,"name":"geo_enabled","comment":null,"description":"Is Geo enabled? [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/config/metrics/settings/20210216180406_geo_enabled.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"geo_enabled"},"AUTO_DEVOPS_PIPELINES_28_DAYS_USER":{"type":"NUMBER","index":149,"name":"auto_devops_pipelines_28_days_user","comment":null,"description":"Distinct users that ran an auto DevOps pipeline without a .gitlab-ci.yml file. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20210216175548_ci_pipeline_config_auto_devops.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"auto_devops_pipelines_28_days_user"},"ACTIVE_INSTANCE_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":150,"name":"active_instance_runners_all_time_event","comment":null,"description":"Total active Shared (Instance) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502045402_ci_runners_instance_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"active_instance_runners_all_time_event"},"ACTIVE_GROUP_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":151,"name":"active_group_runners_all_time_event","comment":null,"description":"Total active Group Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050341_ci_runners_group_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"active_group_runners_all_time_event"},"ACTIVE_PROJECT_RUNNERS_ALL_TIME_EVENT":{"type":"NUMBER","index":152,"name":"active_project_runners_all_time_event","comment":null,"description":"Total active Specific (Project) Runners. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210502050834_ci_runners_project_type_active.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"active_project_runners_all_time_event"},"GITALY_VERSION":{"type":"TEXT","index":153,"name":"gitaly_version","comment":null,"description":"Version of Gitaly. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/license/20210204124928_version.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"gitaly_version"},"GITALY_SERVERS_ALL_TIME_EVENT":{"type":"NUMBER","index":154,"name":"gitaly_servers_all_time_event","comment":null,"description":"Total Gitalty Servers. [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_all/20210204124930_servers.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"gitaly_servers_all_time_event"},"API_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":155,"name":"API_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"api_fuzzing_scans_all_time_event"},"API_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":156,"name":"API_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"api_fuzzing_scans_28_days_event"},"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":157,"name":"COVERAGE_FUZZING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_all_time_event"},"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":158,"name":"COVERAGE_FUZZING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"coverage_fuzzing_scans_28_days_event"},"SECRET_DETECTION_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":159,"name":"SECRET_DETECTION_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"secret_detection_scans_all_time_event"},"SECRET_DETECTION_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":160,"name":"SECRET_DETECTION_SCANS_28_DAYS_EVENT","comment":null,"display_name":"secret_detection_scans_28_days_event"},"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":161,"name":"DEPENDENCY_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dependency_scanning_scans_all_time_event"},"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":162,"name":"DEPENDENCY_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dependency_scanning_scans_28_days_event"},"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":163,"name":"CONTAINER_SCANNING_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"container_scanning_scans_all_time_event"},"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":164,"name":"CONTAINER_SCANNING_SCANS_28_DAYS_EVENT","comment":null,"display_name":"container_scanning_scans_28_days_event"},"DAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":165,"name":"DAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"dast_scans_all_time_event"},"DAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":166,"name":"DAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"dast_scans_28_days_event"},"SAST_SCANS_ALL_TIME_EVENT":{"type":"NUMBER","index":167,"name":"SAST_SCANS_ALL_TIME_EVENT","comment":null,"display_name":"sast_scans_all_time_event"},"SAST_SCANS_28_DAYS_EVENT":{"type":"NUMBER","index":168,"name":"SAST_SCANS_28_DAYS_EVENT","comment":null,"display_name":"sast_scans_28_days_event"},"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":169,"name":"PACKAGES_PUSHED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pushed_registry_all_time_event"},"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT":{"type":"NUMBER","index":170,"name":"PACKAGES_PULLED_REGISTRY_ALL_TIME_EVENT","comment":null,"display_name":"packages_pulled_registry_all_time_event"},"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER":{"type":"NUMBER","index":171,"name":"COMPLIANCE_DASHBOARD_VIEW_28_DAYS_USER","comment":null,"display_name":"compliance_dashboard_view_28_days_user"},"AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":172,"name":"AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"audit_screen_view_28_days_user"},"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER":{"type":"NUMBER","index":173,"name":"INSTANCE_AUDIT_SCREEN_VIEW_28_DAYS_USER","comment":null,"display_name":"instance_audit_screen_view_28_days_user"},"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER":{"type":"NUMBER","index":174,"name":"CREDENTIAL_INVENTORY_VIEW_28_DAYS_USER","comment":null,"display_name":"credential_inventory_view_28_days_user"},"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT":{"type":"NUMBER","index":175,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_ALL_TIME_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_all_time_event"},"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT":{"type":"NUMBER","index":176,"name":"COMPLIANCE_FRAMEWORKS_PIPELINE_28_DAYS_EVENT","comment":null,"display_name":"compliance_frameworks_pipeline_28_days_event"},"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":177,"name":"GROUPS_STREAMING_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"groups_streaming_destinations_all_time_event"},"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":178,"name":"GROUPS_STREAMING_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"groups_streaming_destinations_28_days_event"},"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT":{"type":"NUMBER","index":179,"name":"AUDIT_EVENT_DESTINATIONS_ALL_TIME_EVENT","comment":null,"display_name":"audit_event_destinations_all_time_event"},"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT":{"type":"NUMBER","index":180,"name":"AUDIT_EVENT_DESTINATIONS_28_DAYS_EVENT","comment":null,"display_name":"audit_event_destinations_28_days_event"},"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":181,"name":"PROJECTS_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"projects_status_checks_all_time_event"},"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT":{"type":"NUMBER","index":182,"name":"EXTERNAL_STATUS_CHECKS_ALL_TIME_EVENT","comment":null,"display_name":"external_status_checks_all_time_event"},"PAID_LICENSE_SEARCH_28_DAYS_USER":{"type":"NUMBER","index":183,"name":"PAID_LICENSE_SEARCH_28_DAYS_USER","comment":null,"display_name":"paid_license_search_28_days_user"},"LAST_ACTIVITY_28_DAYS_USER":{"type":"NUMBER","index":184,"name":"LAST_ACTIVITY_28_DAYS_USER","comment":null,"display_name":"last_activity_28_days_user"},"SNIPPETS_28_DAYS_EVENT":{"type":"NUMBER","index":185,"name":"SNIPPETS_28_DAYS_EVENT","comment":null,"display_name":"snippets_28_days_event"},"SINGLE_FILE_EDITOR_28_DAYS_USER":{"type":"NUMBER","index":186,"name":"SINGLE_FILE_EDITOR_28_DAYS_USER","comment":null,"display_name":"single_file_editor_28_days_user"},"MERGE_REQUESTS_CREATED_28_DAYS_EVENT":{"type":"NUMBER","index":187,"name":"MERGE_REQUESTS_CREATED_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_created_28_days_event"},"MERGE_REQUESTS_CREATED_28_DAYS_USER":{"type":"NUMBER","index":188,"name":"MERGE_REQUESTS_CREATED_28_DAYS_USER","comment":null,"display_name":"merge_requests_created_28_days_user"},"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT":{"type":"NUMBER","index":189,"name":"MERGE_REQUESTS_APPROVAL_RULES_28_DAYS_EVENT","comment":null,"display_name":"merge_requests_approval_rules_28_days_event"},"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT":{"type":"NUMBER","index":190,"name":"CUSTOM_COMPLIANCE_FRAMEWORKS_28_DAYS_EVENT","comment":null,"display_name":"custom_compliance_frameworks_28_days_event"},"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT":{"type":"NUMBER","index":191,"name":"PROJECTS_SECURITY_POLICY_28_DAYS_EVENT","comment":null,"display_name":"projects_security_policy_28_days_event"},"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER":{"type":"NUMBER","index":192,"name":"MERGE_REQUESTS_SECURITY_POLICY_28_DAYS_USER","comment":null,"display_name":"merge_requests_security_policy_28_days_user"},"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT":{"type":"NUMBER","index":193,"name":"PIPELINES_IMPLICIT_AUTO_DEVOPS_28_DAYS_EVENT","comment":null,"display_name":"pipelines_implicit_auto_devops_28_days_event"},"PIPELINE_SCHEDULES_28_DAYS_USER":{"type":"NUMBER","index":194,"name":"PIPELINE_SCHEDULES_28_DAYS_USER","comment":null,"display_name":"pipeline_schedules_28_days_user"},"CI_INTERNAL_PIPELINES_28_DAYS_EVENT":{"type":"NUMBER","index":195,"name":"ci_internal_pipelines_28_days_event","comment":null,"description":"Total monthly (28D) pipelines in Gitlab repositories for all project and project types [link](https://gitlab.com/gitlab-org/gitlab/-/blob/master/config/metrics/counts_28d/20230217215050_ci_internal_pipelines.yml)","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"dbt_utils.at_least_one","short":"+","label":"dbt_utils.at_least_one({\"model\":\"{{ get_where_subquery(ref('rpt_gainsight_metrics_monthly_paid_self_managed')) }}\"})"}],"display_name":"ci_internal_pipelines_28_days_event"},"INSTANCE_USER_COUNT_NOT_ALIGNED":{"type":"NUMBER","index":196,"name":"INSTANCE_USER_COUNT_NOT_ALIGNED","comment":null,"display_name":"instance_user_count_not_aligned"},"HISTORICAL_MAX_USERS_NOT_ALIGNED":{"type":"NUMBER","index":197,"name":"HISTORICAL_MAX_USERS_NOT_ALIGNED","comment":null,"display_name":"historical_max_users_not_aligned"},"IS_SEAT_LINK_SUBSCRIPTION_IN_ZUORA":{"type":"BOOLEAN","index":198,"name":"IS_SEAT_LINK_SUBSCRIPTION_IN_ZUORA","comment":null,"display_name":"is_seat_link_subscription_in_zuora"},"IS_SEAT_LINK_RATE_PLAN_IN_ZUORA":{"type":"BOOLEAN","index":199,"name":"IS_SEAT_LINK_RATE_PLAN_IN_ZUORA","comment":null,"display_name":"is_seat_link_rate_plan_in_zuora"},"IS_SEAT_LINK_ACTIVE_USER_COUNT_AVAILABLE":{"type":"BOOLEAN","index":200,"name":"IS_SEAT_LINK_ACTIVE_USER_COUNT_AVAILABLE","comment":null,"display_name":"is_seat_link_active_user_count_available"},"IS_USAGE_PING_LICENSE_MAPPED_TO_SUBSCRIPTION":{"type":"BOOLEAN","index":201,"name":"IS_USAGE_PING_LICENSE_MAPPED_TO_SUBSCRIPTION","comment":null,"display_name":"is_usage_ping_license_mapped_to_subscription"},"IS_USAGE_PING_LICENSE_SUBSCRIPTION_ID_VALID":{"type":"BOOLEAN","index":202,"name":"IS_USAGE_PING_LICENSE_SUBSCRIPTION_ID_VALID","comment":null,"display_name":"is_usage_ping_license_subscription_id_valid"},"IS_DATA_IN_SUBSCRIPTION_MONTH":{"type":"BOOLEAN","index":203,"name":"is_data_in_subscription_month","comment":null,"description":"Flags if there is either Subscription Seats data or Usage Ping data present in the given month for a given subscription","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_data_in_subscription_month"},"IS_LATEST_DATA":{"type":"BOOLEAN","index":204,"name":"is_latest_data","comment":null,"description":"Flags the row with the most recently received data from Usage Ping","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_latest_data"},"CREATED_BY":{"type":"TEXT","index":205,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":206,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":207,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":208,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":209,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":210,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"},"dim_namespace_id":{"name":"dim_namespace_id","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"dim_namespace_id"},"subscription_seats":{"name":"subscription_seats","description":"","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"subscription_seats"},"jira_imports_28_days_event":{"name":"jira_imports_28_days_event","description":"Monthly count of Issues imported from Jira ([source](https://docs.gitlab.com/ee/development/usage_ping/dictionary.html#usage_activity_by_stage_monthlymanageissue_importsjira)). This metric has been deprecated but we are keeping the field around for history.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"jira_imports_28_days_event"},"is_missing_paid_seats":{"name":"is_missing_paid_seats","description":"Flags if there are currently active users, but no seats have been paid for","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_missing_paid_seats"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 12:06UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":162174464,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.rpt_gainsight_metrics_monthly_paid_self_managed","raw_sql":"$23","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.simple_cte","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.bdg_subscription_product_rate_plan","model.gitlab_snowflake.bdg_subscription_product_rate_plan","model.gitlab_snowflake.fct_usage_self_managed_seat_link","model.gitlab_snowflake.fct_usage_self_managed_seat_link","model.gitlab_snowflake.mart_ping_instance_metric_health_score_self_managed","model.gitlab_snowflake.mart_ping_instance_metric_health_score_self_managed","model.gitlab_snowflake.dim_host_instance_type","model.gitlab_snowflake.dim_host_instance_type"]},"config":{"enabled":true,"alias":null,"schema":"common_mart_product","database":"PROD","tags":["product","product","mnpi_exception"],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common_mart_product","fqn":["gitlab_snowflake","common_mart_product","reports","rpt_gainsight_metrics_monthly_paid_self_managed"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common_mart_product/reports/rpt_gainsight_metrics_monthly_paid_self_managed.sql","original_file_path":"models/common_mart_product/reports/rpt_gainsight_metrics_monthly_paid_self_managed.sql","name":"rpt_gainsight_metrics_monthly_paid_self_managed","alias":"rpt_gainsight_metrics_monthly_paid_self_managed","checksum":{"name":"sha256","checksum":"75e3506eb50216a847df29fe97e040084679f737e100007102e3b5fbfcff231b"},"tags":["product","mnpi_exception"],"refs":[["bdg_subscription_product_rate_plan"],["bdg_subscription_product_rate_plan"],["fct_usage_self_managed_seat_link"],["fct_usage_self_managed_seat_link"],["mart_ping_instance_metric_health_score_self_managed"],["mart_ping_instance_metric_health_score_self_managed"],["dim_host_instance_type"],["dim_host_instance_type"]],"sources":[],"metrics":[],"description":"**Description:** Joins Self-Managed Service Pings to a list of paid Self-Managed subscriptions to limit to paying SM customers, joins in seat/license data to calculate license utilization. The data from this table will be used for customer product insights. Most notably, this data is pumped into Gainsight and aggregated into customer health scores for use by TAMs.\n\n**Data Grain:**\n- Installation\n- Subscription\n- Month\n\n**Filters:**\n- Only includes Service Ping metrics that have been added via the \"wave\" process.\n- Only includes pings that have a license associated with them.\n- Only includes pings that have a paid Self-Managed subscription associated with them.\n\n**Business Logic in this Model:**\n- Resolves a one-to-many relationship between installation and instance types by prioritizing production instances above other instance types\n- Limits down to last ping of the month for each installation-subscription","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common_mart_product/reports/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common_mart_product/reports/rpt_gainsight_metrics_monthly_paid_self_managed.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common_mart_product","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","tags":["product","mnpi_exception"]},"created_at":1689033736.4130435,"compiled_sql":"$24","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common_mart_product.rpt_gainsight_metrics_monthly_paid_self_managed","label":"rpt_gainsight_metrics_monthly_paid_self_managed"},{"metadata":{"type":"BASE TABLE","schema":"COMMON","name":"DIM_DATE","database":"PROD","comment":null,"owner":"TRANSFORMER"},"columns":{"DATE_ID":{"type":"NUMBER","index":1,"name":"date_id","comment":null,"description":"","meta":{},"data_type":null,"quote":null,"tags":[],"tests":[{"test_name":"not_null","short":"N","label":"Not Null"},{"test_name":"unique","short":"U","label":"Unique"}],"display_name":"date_id"},"DATE_DAY":{"type":"DATE","index":2,"name":"date_day","comment":null,"description":"Calendar date, e.g. '2019-02-02'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"date_day"},"DATE_ACTUAL":{"type":"DATE","index":3,"name":"date_actual","comment":null,"description":"Matches `date_day`, duplicated for ease of use","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"date_actual"},"DAY_NAME":{"type":"TEXT","index":4,"name":"day_name","comment":null,"description":"Abbreviated name of the day of the week, e.g. 'Sat' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_name"},"MONTH_ACTUAL":{"type":"NUMBER","index":5,"name":"month_actual","comment":null,"description":"Number for the calendar month of the year, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_actual"},"YEAR_ACTUAL":{"type":"NUMBER","index":6,"name":"year_actual","comment":null,"description":"Calendar year, e.g. '2019' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"year_actual"},"QUARTER_ACTUAL":{"type":"NUMBER","index":7,"name":"quarter_actual","comment":null,"description":"Calendar quarter, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarter_actual"},"DAY_OF_WEEK":{"type":"NUMBER","index":8,"name":"day_of_week","comment":null,"description":"Number of the day of the week, with Sunday = 1 and Saturday = 7","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_week"},"FIRST_DAY_OF_WEEK":{"type":"DATE","index":9,"name":"first_day_of_week","comment":null,"description":"Calendar date of the first Sunday of that week, e.g. '2019-01-27' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_week"},"WEEK_OF_YEAR":{"type":"NUMBER","index":10,"name":"week_of_year","comment":null,"description":"Calendar week of year, e.g. '5' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"week_of_year"},"DAY_OF_MONTH":{"type":"NUMBER","index":11,"name":"day_of_month","comment":null,"description":"Day Number of the month, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_month"},"DAY_OF_QUARTER":{"type":"NUMBER","index":12,"name":"day_of_quarter","comment":null,"description":"Day Number from the start of the calendar quarter, e.g. '33' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_quarter"},"DAY_OF_YEAR":{"type":"NUMBER","index":13,"name":"day_of_year","comment":null,"description":"Day Number from the start of the calendar year, e.g. '33' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_year"},"FISCAL_YEAR":{"type":"NUMBER","index":14,"name":"fiscal_year","comment":null,"description":"Fiscal year for the date, e.g. '2020' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_year"},"FISCAL_QUARTER":{"type":"TEXT","index":15,"name":"fiscal_quarter","comment":null,"description":"Fiscal quarter for the date, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter"},"DAY_OF_FISCAL_QUARTER":{"type":"NUMBER","index":16,"name":"day_of_fiscal_quarter","comment":null,"description":"Day Number from the start of the fiscal quarter, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_fiscal_quarter"},"DAY_OF_FISCAL_YEAR":{"type":"NUMBER","index":17,"name":"day_of_fiscal_year","comment":null,"description":"Day Number from the start of the fiscal year, e.g. '2' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"day_of_fiscal_year"},"MONTH_NAME":{"type":"TEXT","index":18,"name":"month_name","comment":null,"description":"The full month name for any calendar month, e.g. 'February' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_name"},"FIRST_DAY_OF_MONTH":{"type":"DATE","index":19,"name":"first_day_of_month","comment":null,"description":"The first day of a calendar month, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_month"},"LAST_DAY_OF_MONTH":{"type":"DATE","index":20,"name":"last_day_of_month","comment":null,"description":"The last day of a calendar month, e.g. '2019-02-28' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_month"},"FIRST_DAY_OF_YEAR":{"type":"DATE","index":21,"name":"first_day_of_year","comment":null,"description":"The first day of a calendar year, e.g. '2019-01-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_year"},"LAST_DAY_OF_YEAR":{"type":"DATE","index":22,"name":"last_day_of_year","comment":null,"description":"The last day of a calendar year, e.g. '2019-12-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_year"},"FIRST_DAY_OF_QUARTER":{"type":"DATE","index":23,"name":"first_day_of_quarter","comment":null,"description":"The first day of a calendar quarter, e.g. '2019-01-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_quarter"},"LAST_DAY_OF_QUARTER":{"type":"DATE","index":24,"name":"last_day_of_quarter","comment":null,"description":"The last day of a calendar quarter, e.g. '2019-03-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_quarter"},"FIRST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":25,"name":"first_day_of_fiscal_quarter","comment":null,"description":"The first day of the fiscal quarter, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_quarter"},"LAST_DAY_OF_FISCAL_QUARTER":{"type":"DATE","index":26,"name":"last_day_of_fiscal_quarter","comment":null,"description":"The last day of the fiscal quarter, e.g. '2019-04-30' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_fiscal_quarter"},"FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":27,"name":"first_day_of_fiscal_year","comment":null,"description":"The first day of the fiscal year, e.g. '2019-02-01' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"first_day_of_fiscal_year"},"LAST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":28,"name":"last_day_of_fiscal_year","comment":null,"description":"The last day of the fiscal year, e.g. '2020-01-31' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_fiscal_year"},"WEEK_OF_FISCAL_YEAR":{"type":"NUMBER","index":29,"name":"week_of_fiscal_year","comment":null,"description":"The week number for the fiscal year, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"week_of_fiscal_year"},"MONTH_OF_FISCAL_YEAR":{"type":"NUMBER","index":30,"name":"month_of_fiscal_year","comment":null,"description":"The month number for the fiscal year, e.g. '1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"month_of_fiscal_year"},"LAST_DAY_OF_WEEK":{"type":"DATE","index":31,"name":"last_day_of_week","comment":null,"description":"The Saturday of the week, e.g. '2019-02-02' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_day_of_week"},"QUARTER_NAME":{"type":"TEXT","index":32,"name":"quarter_name","comment":null,"description":"The name of the calendar quarter, e.g. '2019-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"quarter_name"},"FISCAL_QUARTER_NAME":{"type":"TEXT","index":33,"name":"fiscal_quarter_name","comment":null,"description":"The name of the fiscal quarter, e.g '2020-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name"},"FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":34,"name":"fiscal_quarter_name_fy","comment":null,"description":"The name of the fiscal quarter, e.g 'FY20-Q1' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_name_fy"},"FISCAL_QUARTER_NUMBER_ABSOLUTE":{"type":"NUMBER","index":35,"name":"fiscal_quarter_number_absolute","comment":null,"description":"Monotonically increasing integer for each fiscal quarter. This allows for comparing the relative order of fiscal quarters.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_quarter_number_absolute"},"FISCAL_MONTH_NAME":{"type":"TEXT","index":36,"name":"fiscal_month_name","comment":null,"description":"The name of the fiscal month, e.g '2020-Feb' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_month_name"},"FISCAL_MONTH_NAME_FY":{"type":"TEXT","index":37,"name":"fiscal_month_name_fy","comment":null,"description":"The name of the fiscal month, e.g 'FY20-Feb' for 2019-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"fiscal_month_name_fy"},"HOLIDAY_DESC":{"type":"TEXT","index":38,"name":"holiday_desc","comment":null,"description":"The name of the holiday, if applicable","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"holiday_desc"},"IS_HOLIDAY":{"type":"BOOLEAN","index":39,"name":"is_holiday","comment":null,"description":"Whether or not it is a holiday","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_holiday"},"LAST_MONTH_OF_FISCAL_QUARTER":{"type":"DATE","index":40,"name":"last_month_of_fiscal_quarter","comment":null,"description":"Date indicating last month of fiscal quarter e.g '2020-04-01' for 2020-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_month_of_fiscal_quarter"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_QUARTER":{"type":"BOOLEAN","index":41,"name":"is_first_day_of_last_month_of_fiscal_quarter","comment":null,"description":"Flag indicating date that is the first day of last month of fiscal quarter. E.g TRUE for '2020-04-01'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_day_of_last_month_of_fiscal_quarter"},"LAST_MONTH_OF_FISCAL_YEAR":{"type":"DATE","index":42,"name":"last_month_of_fiscal_year","comment":null,"description":"Date indicating last month of fiscal year e.g '2021-01-01' for 2020-02-02","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"last_month_of_fiscal_year"},"IS_FIRST_DAY_OF_LAST_MONTH_OF_FISCAL_YEAR":{"type":"BOOLEAN","index":43,"name":"is_first_day_of_last_month_of_fiscal_year","comment":null,"description":"Flag indicating date that is the first day of last month of fiscal year. E.g TRUE for '2021-01-01'","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"is_first_day_of_last_month_of_fiscal_year"},"SNAPSHOT_DATE_FPA":{"type":"DATE","index":44,"name":"snapshot_date_fpa","comment":null,"description":"8th calendar day of a month used for FP&A snapshots","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"snapshot_date_fpa"},"SNAPSHOT_DATE_BILLINGS":{"type":"DATE","index":45,"name":"snapshot_date_billings","comment":null,"description":"45 calendar day after a month begins used for Billings snapshots","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"snapshot_date_billings"},"DAYS_IN_MONTH_COUNT":{"type":"NUMBER","index":46,"name":"days_in_month_count","comment":null,"description":"Number of calendar days in the given month.","meta":{},"data_type":null,"quote":null,"tags":[],"display_name":"days_in_month_count"},"WEEK_OF_MONTH_NORMALISED":{"type":"NUMBER","index":47,"name":"WEEK_OF_MONTH_NORMALISED","comment":null,"display_name":"week_of_month_normalised"},"DAY_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":48,"name":"DAY_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"day_of_fiscal_quarter_normalised"},"WEEK_OF_FISCAL_QUARTER_NORMALISED":{"type":"NUMBER","index":49,"name":"WEEK_OF_FISCAL_QUARTER_NORMALISED","comment":null,"display_name":"week_of_fiscal_quarter_normalised"},"DAY_OF_FISCAL_YEAR_NORMALISED":{"type":"NUMBER","index":50,"name":"DAY_OF_FISCAL_YEAR_NORMALISED","comment":null,"display_name":"day_of_fiscal_year_normalised"},"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK":{"type":"NUMBER","index":51,"name":"IS_FIRST_DAY_OF_FISCAL_QUARTER_WEEK","comment":null,"display_name":"is_first_day_of_fiscal_quarter_week"},"DAYS_UNTIL_LAST_DAY_OF_MONTH":{"type":"NUMBER","index":52,"name":"DAYS_UNTIL_LAST_DAY_OF_MONTH","comment":null,"display_name":"days_until_last_day_of_month"},"CURRENT_DATE_ACTUAL":{"type":"DATE","index":53,"name":"CURRENT_DATE_ACTUAL","comment":null,"display_name":"current_date_actual"},"CURRENT_FISCAL_YEAR":{"type":"NUMBER","index":54,"name":"CURRENT_FISCAL_YEAR","comment":null,"display_name":"current_fiscal_year"},"CURRENT_FIRST_DAY_OF_FISCAL_YEAR":{"type":"DATE","index":55,"name":"CURRENT_FIRST_DAY_OF_FISCAL_YEAR","comment":null,"display_name":"current_first_day_of_fiscal_year"},"CURRENT_FISCAL_QUARTER_NAME_FY":{"type":"TEXT","index":56,"name":"CURRENT_FISCAL_QUARTER_NAME_FY","comment":null,"display_name":"current_fiscal_quarter_name_fy"},"CURRENT_FIRST_DAY_OF_MONTH":{"type":"DATE","index":57,"name":"CURRENT_FIRST_DAY_OF_MONTH","comment":null,"display_name":"current_first_day_of_month"},"CREATED_BY":{"type":"TEXT","index":58,"name":"CREATED_BY","comment":null,"display_name":"created_by"},"UPDATED_BY":{"type":"TEXT","index":59,"name":"UPDATED_BY","comment":null,"display_name":"updated_by"},"MODEL_CREATED_DATE":{"type":"DATE","index":60,"name":"MODEL_CREATED_DATE","comment":null,"display_name":"model_created_date"},"MODEL_UPDATED_DATE":{"type":"DATE","index":61,"name":"MODEL_UPDATED_DATE","comment":null,"display_name":"model_updated_date"},"DBT_UPDATED_AT":{"type":"TIMESTAMP_LTZ","index":62,"name":"DBT_UPDATED_AT","comment":null,"display_name":"dbt_updated_at"},"DBT_CREATED_AT":{"type":"TIMESTAMP_LTZ","index":63,"name":"DBT_CREATED_AT","comment":null,"display_name":"dbt_created_at"}},"stats":{"last_modified":{"id":"last_modified","label":"Last Modified","value":"2023-07-10 23:06UTC","include":true,"description":"The timestamp for last update/change"},"bytes":{"id":"bytes","label":"Approximate Size","value":837632,"include":true,"description":"Approximate size of the table as reported by Snowflake"},"row_count":{"id":"row_count","label":"Row Count","value":-1,"include":true,"description":"An approximate count of rows in this table"},"has_stats":{"id":"has_stats","label":"Has Stats?","value":true,"include":false,"description":"Indicates whether there are statistics for this table"}},"unique_id":"model.gitlab_snowflake.dim_date","raw_sql":"{{ config({\n    \"alias\": \"dim_date\"\n}) }}\n\nWITH dates AS (\n\n  SELECT\n    {{ dbt_utils.star(\n           from=ref('prep_date'), \n           except=['CREATED_BY','UPDATED_BY','MODEL_CREATED_DATE','MODEL_UPDATED_DATE','DBT_UPDATED_AT','DBT_CREATED_AT']\n           ) \n      }}\n  FROM {{ ref('prep_date') }}\n\n), final AS (\n\n  SELECT\n    {{ get_date_id('date_actual') }}                                AS date_id,\n    *\n  FROM dates\n\n)\n\n{{ dbt_audit(\n    cte_ref=\"final\",\n    created_by=\"@msendal\",\n    updated_by=\"@pempey\",\n    created_date=\"2020-06-01\",\n    updated_date=\"2023-01-09\"\n) }}","compiled":true,"resource_type":"model","depends_on":{"macros":["macro.gitlab_snowflake.ref","macro.dbt_utils.star","macro.gitlab_snowflake.get_date_id","macro.gitlab_snowflake.dbt_audit","macro.gitlab_snowflake.mask_model"],"nodes":["model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date","model.gitlab_snowflake.prep_date"]},"config":{"enabled":true,"alias":"dim_date","schema":"common","database":"PROD","tags":[],"meta":{},"materialized":"table","persist_docs":{},"quoting":{},"column_types":{},"full_refresh":null,"unique_key":null,"on_schema_change":"ignore","grants":{},"copy_grants":true,"query_tag":"dbt","post-hook":[{"sql":"{{ mask_model() }}","transaction":true,"index":null}],"pre-hook":[]},"database":"PROD","schema":"common","fqn":["gitlab_snowflake","common","dimensions_shared","dim_date"],"package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"common/dimensions_shared/dim_date.sql","original_file_path":"models/common/dimensions_shared/dim_date.sql","name":"dim_date","alias":"dim_date","checksum":{"name":"sha256","checksum":"d2d82ff12c2a5541fc719664fdbab66bec108395c3e6b2549434b0f07c9bd080"},"tags":[],"refs":[["prep_date"],["prep_date"],["prep_date"],["prep_date"]],"sources":[],"metrics":[],"description":"Dimensional table representing both calendar year and fiscal year date details.\n\nThe grain of the table is a calendar day.\n\nInformation on the Enterprise Dimensional Model can be found in the [handbook](https://about.gitlab.com/handbook/business-ops/data-team/platform/edw/)","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://models/common/schema.yml","compiled_path":"target/compiled/gitlab_snowflake/models/common/dimensions_shared/dim_date.sql","build_path":null,"deferred":false,"unrendered_config":{"database":"{{ env_var('SNOWFLAKE_PROD_DATABASE') }}","schema":"common","copy_grants":true,"post-hook":["{{ mask_model() }}"],"query_tag":"dbt","materialized":"table","alias":"dim_date"},"created_at":1689033750.6328864,"compiled_sql":"$25","extra_ctes_injected":true,"extra_ctes":[],"relation_name":"\"PROD\".common.dim_date","label":"dim_date"}],"macro":[{"unique_id":"macro.gitlab_snowflake.mask_model","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/dbt_snowflake_masking/mask_model.sql","original_file_path":"macros/dbt_snowflake_masking/mask_model.sql","name":"mask_model","macro_sql":"{%- macro mask_model() -%}\n{# called as a post-hook for an individual model #}\n\n{%- if execute -%}\n {%- set mask_columns = get_columns_to_mask('model', this.identifier) %} {#  #}\n\n {# {% do log(mask_columns, info=true) %} #}\n\n {% if mask_columns %}\n\n    {{ apply_masking_policy(this.database,this.schema,this.identifier,mask_columns) }}   \n\n {% endif %}\n\n{% endif %}\n\n\n{%- endmacro -%}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.gitlab_snowflake.get_columns_to_mask","macro.gitlab_snowflake.apply_masking_policy"]},"description":"This macro is designed do be applied as a post-hook on a table or view model.  It will pull the policy information from identified columns and create and apply the masking policy.  This needs to be done after the table or view has been created as it calls for information about the table or view to know the data types of the columns to be masked.","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/dbt_snowflake_masking/macros.yml","arguments":[],"created_at":1689033765.9986544},{"unique_id":"macro.gitlab_snowflake.dbt_audit","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/dbt_audit.sql","original_file_path":"macros/utils/dbt_audit.sql","name":"dbt_audit","macro_sql":"$26","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt.run_query"]},"description":"Used to append audit columns to a model.\n\nThis model assumes that the final statement in your model is a `SELECT *` from a CTE. The final SQL will still be a `SELECT *` just with 6 additional columns added to it. Further SQL DML can be added after the macro call, such as ORDER BY and GROUP BY.\n\nThere are two internally calculated date values based on when the table is created and, for an incremental model, when data was inserted.\n\n```sql\nWITH my_cte AS (...)\n\n{{ dbt_audit(\n    cte_ref=\"my_cte\", \n    created_by=\"@gitlab_user1\", \n    updated_by=\"@gitlab_user2\", \n    created_date=\"2019-02-12\", \n    updated_date=\"2020-08-20\"\n) }}\n\nORDER BY updated_at\n```","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"cte_ref","type":"string","description":"The CTE immediately preceding the macro call"},{"name":"created_by","type":"string","description":"The GitLab handle of the original model creator"},{"name":"updated_by","type":"string","description":"The GitLab handle of the model editor"},{"name":"created_date","type":"date","description":"Manually input ISO date of when model was original created"},{"name":"updated_date","type":"date","description":"Manually input ISO date of when model was updated"}],"created_at":1689033766.0350642},{"unique_id":"macro.gitlab_snowflake.simple_cte","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/simple_cte.sql","original_file_path":"macros/utils/simple_cte.sql","name":"simple_cte","macro_sql":"{% macro simple_cte(tuple_list) %}\n\nWITH{% for cte_ref in tuple_list %} {{cte_ref[0]}} AS (\n\n    SELECT * \n    FROM {{ ref(cte_ref[1]) }}\n\n)\n    {%- if not loop.last -%}\n    ,\n    {%- endif -%}\n    \n    {%- endfor -%}\n\n{%- endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":[]},"description":"$27","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[{"name":"tuple_list","type":"list","description":"List of tuples with the alias as the first item and the dbt table reference as the second item."}],"created_at":1689033766.0494742},{"unique_id":"macro.gitlab_snowflake.get_keyed_nulls","package_name":"gitlab_snowflake","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt","path":"macros/utils/get_keyed_nulls.sql","original_file_path":"macros/utils/get_keyed_nulls.sql","name":"get_keyed_nulls","macro_sql":"{% macro get_keyed_nulls(columns) %}\n\n  COALESCE({{columns}}, MD5(-1)) \n\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":[]},"description":"This macro generates a key for facts with missing dimensions so when the fact table is joined to the dimension it joins to a record that says it's unknown as in\n\n```sql\nSELECT * \nFROM DIM_GEO_AREA \nWHERE DIM_GEO_AREA_ID = MD5(-1);\n```\n\nwhich has:\n\n```\n***************************[ 1 ]***************************\nDIM_GEO_AREA_ID    | 6bb61e3b7bce0931da574d19d1d82c88\nGEO_AREA_NAME      | Missing geo_area_name\n```\n\nGenerally this should be used when creating and keying on new dimensions that might not be fully representing in the referencing tables","meta":{},"docs":{"show":true},"patch_path":"gitlab_snowflake://macros/utils/macros.yml","arguments":[],"created_at":1689033766.0386684},{"unique_id":"macro.dbt_utils.group_by","package_name":"dbt_utils","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt/dbt_packages/dbt_utils","path":"macros/sql/groupby.sql","original_file_path":"macros/sql/groupby.sql","name":"group_by","macro_sql":"{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt_utils.default__group_by"]},"description":"","meta":{},"docs":{"show":true},"patch_path":null,"arguments":[],"created_at":1689033675.9973366},{"unique_id":"macro.dbt_utils.surrogate_key","package_name":"dbt_utils","root_path":"/builds/gitlab-data/analytics/transform/snowflake-dbt/dbt_packages/dbt_utils","path":"macros/sql/surrogate_key.sql","original_file_path":"macros/sql/surrogate_key.sql","name":"surrogate_key","macro_sql":"{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}","resource_type":"macro","tags":[],"depends_on":{"macros":["macro.dbt_utils.default__surrogate_key"]},"description":"","meta":{},"docs":{"show":true},"patch_path":null,"arguments":[],"created_at":1689033676.082154}]},"node":{"resource_type":"model","name":"pump_gainsight_metrics_monthly_paid","unique_id":"model.gitlab_snowflake.pump_gainsight_metrics_monthly_paid"}}]]}]]}],["$","section",null,{"className":"section","children":[["$","div",null,{"className":"section-target","id":"code"}],["$","div",null,{"className":"section-content","children":["$","$L28",null,{"versions":{"Source":"$29","Compiled":"$2a"},"defaultVersion":"Source","language":"sql"}]}]]}]]}]}]]}]
